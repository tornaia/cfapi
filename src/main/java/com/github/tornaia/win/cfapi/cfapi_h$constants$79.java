// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$79 extends cfapi_h$constants$78 {

    /* package-private */ cfapi_h$constants$79() {}
    static final MemoryLayout IDataObjectVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataObjectVtbl$Release$LAYOUT() { return IDataObjectVtbl$Release$LAYOUT_; }

    static final VarHandle IDataObjectVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IDataObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IDataObjectVtbl$Release$VH() { return IDataObjectVtbl$Release$VH_; }

    static final MemoryLayout IDataObjectVtbl$GetData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataObjectVtbl$GetData$LAYOUT() { return IDataObjectVtbl$GetData$LAYOUT_; }

    static final VarHandle IDataObjectVtbl$GetData$VH_ = MemoryHandles.asAddressVarHandle(IDataObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetData")));
    static final java.lang.invoke.VarHandle IDataObjectVtbl$GetData$VH() { return IDataObjectVtbl$GetData$VH_; }

    static final MemoryLayout IDataObjectVtbl$GetDataHere$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataObjectVtbl$GetDataHere$LAYOUT() { return IDataObjectVtbl$GetDataHere$LAYOUT_; }

    static final VarHandle IDataObjectVtbl$GetDataHere$VH_ = MemoryHandles.asAddressVarHandle(IDataObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDataHere")));
    static final java.lang.invoke.VarHandle IDataObjectVtbl$GetDataHere$VH() { return IDataObjectVtbl$GetDataHere$VH_; }

    static final MemoryLayout IDataObjectVtbl$QueryGetData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataObjectVtbl$QueryGetData$LAYOUT() { return IDataObjectVtbl$QueryGetData$LAYOUT_; }

    static final VarHandle IDataObjectVtbl$QueryGetData$VH_ = MemoryHandles.asAddressVarHandle(IDataObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryGetData")));
    static final java.lang.invoke.VarHandle IDataObjectVtbl$QueryGetData$VH() { return IDataObjectVtbl$QueryGetData$VH_; }

    static final MemoryLayout IDataObjectVtbl$GetCanonicalFormatEtc$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataObjectVtbl$GetCanonicalFormatEtc$LAYOUT() { return IDataObjectVtbl$GetCanonicalFormatEtc$LAYOUT_; }

    static final VarHandle IDataObjectVtbl$GetCanonicalFormatEtc$VH_ = MemoryHandles.asAddressVarHandle(IDataObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetCanonicalFormatEtc")));
    static final java.lang.invoke.VarHandle IDataObjectVtbl$GetCanonicalFormatEtc$VH() { return IDataObjectVtbl$GetCanonicalFormatEtc$VH_; }

    static final MemoryLayout IDataObjectVtbl$SetData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataObjectVtbl$SetData$LAYOUT() { return IDataObjectVtbl$SetData$LAYOUT_; }

    static final VarHandle IDataObjectVtbl$SetData$VH_ = MemoryHandles.asAddressVarHandle(IDataObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetData")));
    static final java.lang.invoke.VarHandle IDataObjectVtbl$SetData$VH() { return IDataObjectVtbl$SetData$VH_; }

    static final MemoryLayout IDataObjectVtbl$EnumFormatEtc$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataObjectVtbl$EnumFormatEtc$LAYOUT() { return IDataObjectVtbl$EnumFormatEtc$LAYOUT_; }

    static final VarHandle IDataObjectVtbl$EnumFormatEtc$VH_ = MemoryHandles.asAddressVarHandle(IDataObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EnumFormatEtc")));
    static final java.lang.invoke.VarHandle IDataObjectVtbl$EnumFormatEtc$VH() { return IDataObjectVtbl$EnumFormatEtc$VH_; }

    static final MemoryLayout IDataObjectVtbl$DAdvise$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataObjectVtbl$DAdvise$LAYOUT() { return IDataObjectVtbl$DAdvise$LAYOUT_; }

    static final VarHandle IDataObjectVtbl$DAdvise$VH_ = MemoryHandles.asAddressVarHandle(IDataObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DAdvise")));
    static final java.lang.invoke.VarHandle IDataObjectVtbl$DAdvise$VH() { return IDataObjectVtbl$DAdvise$VH_; }

    static final MemoryLayout IDataObjectVtbl$DUnadvise$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataObjectVtbl$DUnadvise$LAYOUT() { return IDataObjectVtbl$DUnadvise$LAYOUT_; }

    static final VarHandle IDataObjectVtbl$DUnadvise$VH_ = MemoryHandles.asAddressVarHandle(IDataObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DUnadvise")));
    static final java.lang.invoke.VarHandle IDataObjectVtbl$DUnadvise$VH() { return IDataObjectVtbl$DUnadvise$VH_; }

    static final MemoryLayout IDataObjectVtbl$EnumDAdvise$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataObjectVtbl$EnumDAdvise$LAYOUT() { return IDataObjectVtbl$EnumDAdvise$LAYOUT_; }

    static final VarHandle IDataObjectVtbl$EnumDAdvise$VH_ = MemoryHandles.asAddressVarHandle(IDataObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EnumDAdvise")));
    static final java.lang.invoke.VarHandle IDataObjectVtbl$EnumDAdvise$VH() { return IDataObjectVtbl$EnumDAdvise$VH_; }

    static final MemoryLayout IDataObject$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IDataObject");
    static final jdk.incubator.foreign.MemoryLayout IDataObject$struct$LAYOUT() { return IDataObject$struct$LAYOUT_; }

    static final MemoryLayout IDataObject$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataObject$lpVtbl$LAYOUT() { return IDataObject$lpVtbl$LAYOUT_; }

    static final VarHandle IDataObject$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IDataObject$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IDataObject$lpVtbl$VH() { return IDataObject$lpVtbl$VH_; }

    static final FunctionDescriptor IDataObject_RemoteGetData_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IDataObject_RemoteGetData_Proxy$FUNC() { return IDataObject_RemoteGetData_Proxy$FUNC_; }

    static final MethodHandle IDataObject_RemoteGetData_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IDataObject_RemoteGetData_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IDataObject_RemoteGetData_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IDataObject_RemoteGetData_Proxy$MH() { return IDataObject_RemoteGetData_Proxy$MH_; }

    static final FunctionDescriptor IDataObject_RemoteGetData_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IDataObject_RemoteGetData_Stub$FUNC() { return IDataObject_RemoteGetData_Stub$FUNC_; }

    static final MethodHandle IDataObject_RemoteGetData_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IDataObject_RemoteGetData_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IDataObject_RemoteGetData_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IDataObject_RemoteGetData_Stub$MH() { return IDataObject_RemoteGetData_Stub$MH_; }

    static final FunctionDescriptor IDataObject_RemoteGetDataHere_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IDataObject_RemoteGetDataHere_Proxy$FUNC() { return IDataObject_RemoteGetDataHere_Proxy$FUNC_; }

    static final MethodHandle IDataObject_RemoteGetDataHere_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IDataObject_RemoteGetDataHere_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IDataObject_RemoteGetDataHere_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IDataObject_RemoteGetDataHere_Proxy$MH() { return IDataObject_RemoteGetDataHere_Proxy$MH_; }

    static final FunctionDescriptor IDataObject_RemoteGetDataHere_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IDataObject_RemoteGetDataHere_Stub$FUNC() { return IDataObject_RemoteGetDataHere_Stub$FUNC_; }

    static final MethodHandle IDataObject_RemoteGetDataHere_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IDataObject_RemoteGetDataHere_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IDataObject_RemoteGetDataHere_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IDataObject_RemoteGetDataHere_Stub$MH() { return IDataObject_RemoteGetDataHere_Stub$MH_; }

    static final FunctionDescriptor IDataObject_RemoteSetData_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor IDataObject_RemoteSetData_Proxy$FUNC() { return IDataObject_RemoteSetData_Proxy$FUNC_; }

    static final MethodHandle IDataObject_RemoteSetData_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IDataObject_RemoteSetData_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        IDataObject_RemoteSetData_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IDataObject_RemoteSetData_Proxy$MH() { return IDataObject_RemoteSetData_Proxy$MH_; }

    static final FunctionDescriptor IDataObject_RemoteSetData_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IDataObject_RemoteSetData_Stub$FUNC() { return IDataObject_RemoteSetData_Stub$FUNC_; }

    static final MethodHandle IDataObject_RemoteSetData_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IDataObject_RemoteSetData_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IDataObject_RemoteSetData_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IDataObject_RemoteSetData_Stub$MH() { return IDataObject_RemoteSetData_Stub$MH_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0073_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0073_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0073_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0073_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0073_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0073_v0_0_c_ifspec$VH() { return __MIDL_itf_objidl_0000_0073_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0073_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0073_v0_0_c_ifspec", __MIDL_itf_objidl_0000_0073_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0073_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0073_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0073_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0073_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0073_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0073_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0073_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0073_v0_0_s_ifspec$VH() { return __MIDL_itf_objidl_0000_0073_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0073_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0073_v0_0_s_ifspec", __MIDL_itf_objidl_0000_0073_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0073_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0073_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IDataAdviseHolder$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IDataAdviseHolder$LAYOUT() { return IID_IDataAdviseHolder$LAYOUT_; }

    static final MemorySegment IID_IDataAdviseHolder$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IDataAdviseHolder", IID_IDataAdviseHolder$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IDataAdviseHolder$SEGMENT() { return IID_IDataAdviseHolder$SEGMENT_; }

    static final MemoryLayout IDataAdviseHolderVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Advise"),
        C_POINTER.withName("Unadvise"),
        C_POINTER.withName("EnumAdvise"),
        C_POINTER.withName("SendOnDataChange")
    ).withName("IDataAdviseHolderVtbl");
    static final jdk.incubator.foreign.MemoryLayout IDataAdviseHolderVtbl$struct$LAYOUT() { return IDataAdviseHolderVtbl$struct$LAYOUT_; }

    static final MemoryLayout IDataAdviseHolderVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataAdviseHolderVtbl$QueryInterface$LAYOUT() { return IDataAdviseHolderVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IDataAdviseHolderVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IDataAdviseHolderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IDataAdviseHolderVtbl$QueryInterface$VH() { return IDataAdviseHolderVtbl$QueryInterface$VH_; }

    static final MemoryLayout IDataAdviseHolderVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataAdviseHolderVtbl$AddRef$LAYOUT() { return IDataAdviseHolderVtbl$AddRef$LAYOUT_; }

    static final VarHandle IDataAdviseHolderVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IDataAdviseHolderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IDataAdviseHolderVtbl$AddRef$VH() { return IDataAdviseHolderVtbl$AddRef$VH_; }

    static final MemoryLayout IDataAdviseHolderVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataAdviseHolderVtbl$Release$LAYOUT() { return IDataAdviseHolderVtbl$Release$LAYOUT_; }

    static final VarHandle IDataAdviseHolderVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IDataAdviseHolderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IDataAdviseHolderVtbl$Release$VH() { return IDataAdviseHolderVtbl$Release$VH_; }

    static final MemoryLayout IDataAdviseHolderVtbl$Advise$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataAdviseHolderVtbl$Advise$LAYOUT() { return IDataAdviseHolderVtbl$Advise$LAYOUT_; }

    static final VarHandle IDataAdviseHolderVtbl$Advise$VH_ = MemoryHandles.asAddressVarHandle(IDataAdviseHolderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Advise")));
    static final java.lang.invoke.VarHandle IDataAdviseHolderVtbl$Advise$VH() { return IDataAdviseHolderVtbl$Advise$VH_; }

    static final MemoryLayout IDataAdviseHolderVtbl$Unadvise$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataAdviseHolderVtbl$Unadvise$LAYOUT() { return IDataAdviseHolderVtbl$Unadvise$LAYOUT_; }

    static final VarHandle IDataAdviseHolderVtbl$Unadvise$VH_ = MemoryHandles.asAddressVarHandle(IDataAdviseHolderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Unadvise")));
    static final java.lang.invoke.VarHandle IDataAdviseHolderVtbl$Unadvise$VH() { return IDataAdviseHolderVtbl$Unadvise$VH_; }

    static final MemoryLayout IDataAdviseHolderVtbl$EnumAdvise$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataAdviseHolderVtbl$EnumAdvise$LAYOUT() { return IDataAdviseHolderVtbl$EnumAdvise$LAYOUT_; }

    static final VarHandle IDataAdviseHolderVtbl$EnumAdvise$VH_ = MemoryHandles.asAddressVarHandle(IDataAdviseHolderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EnumAdvise")));
    static final java.lang.invoke.VarHandle IDataAdviseHolderVtbl$EnumAdvise$VH() { return IDataAdviseHolderVtbl$EnumAdvise$VH_; }

    static final MemoryLayout IDataAdviseHolderVtbl$SendOnDataChange$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataAdviseHolderVtbl$SendOnDataChange$LAYOUT() { return IDataAdviseHolderVtbl$SendOnDataChange$LAYOUT_; }

    static final VarHandle IDataAdviseHolderVtbl$SendOnDataChange$VH_ = MemoryHandles.asAddressVarHandle(IDataAdviseHolderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SendOnDataChange")));
    static final java.lang.invoke.VarHandle IDataAdviseHolderVtbl$SendOnDataChange$VH() { return IDataAdviseHolderVtbl$SendOnDataChange$VH_; }

    static final MemoryLayout IDataAdviseHolder$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IDataAdviseHolder");
    static final jdk.incubator.foreign.MemoryLayout IDataAdviseHolder$struct$LAYOUT() { return IDataAdviseHolder$struct$LAYOUT_; }

    static final MemoryLayout IDataAdviseHolder$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataAdviseHolder$lpVtbl$LAYOUT() { return IDataAdviseHolder$lpVtbl$LAYOUT_; }

    static final VarHandle IDataAdviseHolder$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IDataAdviseHolder$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IDataAdviseHolder$lpVtbl$VH() { return IDataAdviseHolder$lpVtbl$VH_; }

    static final int CALLTYPE_TOPLEVEL() { return (int)1L; }

    static final int CALLTYPE_NESTED() { return (int)2L; }

    static final int CALLTYPE_ASYNC() { return (int)3L; }

    static final int CALLTYPE_TOPLEVEL_CALLPENDING() { return (int)4L; }

    static final int CALLTYPE_ASYNC_CALLPENDING() { return (int)5L; }

    static final int SERVERCALL_ISHANDLED() { return (int)0L; }

    static final int SERVERCALL_REJECTED() { return (int)1L; }

    static final int SERVERCALL_RETRYLATER() { return (int)2L; }

    static final int PENDINGTYPE_TOPLEVEL() { return (int)1L; }

    static final int PENDINGTYPE_NESTED() { return (int)2L; }

    static final int PENDINGMSG_CANCELCALL() { return (int)0L; }

    static final int PENDINGMSG_WAITNOPROCESS() { return (int)1L; }

    static final int PENDINGMSG_WAITDEFPROCESS() { return (int)2L; }

    static final MemoryLayout tagINTERFACEINFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pUnk"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("iid"),
        C_SHORT.withName("wMethod"),
        MemoryLayout.ofPaddingBits(48)
    ).withName("tagINTERFACEINFO");
    static final jdk.incubator.foreign.MemoryLayout tagINTERFACEINFO$struct$LAYOUT() { return tagINTERFACEINFO$struct$LAYOUT_; }

    static final MemoryLayout tagINTERFACEINFO$pUnk$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagINTERFACEINFO$pUnk$LAYOUT() { return tagINTERFACEINFO$pUnk$LAYOUT_; }

    static final VarHandle tagINTERFACEINFO$pUnk$VH_ = MemoryHandles.asAddressVarHandle(tagINTERFACEINFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pUnk")));
    static final java.lang.invoke.VarHandle tagINTERFACEINFO$pUnk$VH() { return tagINTERFACEINFO$pUnk$VH_; }

    static final MemoryLayout tagINTERFACEINFO$wMethod$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagINTERFACEINFO$wMethod$LAYOUT() { return tagINTERFACEINFO$wMethod$LAYOUT_; }

    static final VarHandle tagINTERFACEINFO$wMethod$VH_ = tagINTERFACEINFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMethod"));
    static final java.lang.invoke.VarHandle tagINTERFACEINFO$wMethod$VH() { return tagINTERFACEINFO$wMethod$VH_; }

    static final MemoryLayout IID_IMessageFilter$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IMessageFilter$LAYOUT() { return IID_IMessageFilter$LAYOUT_; }

    static final MemorySegment IID_IMessageFilter$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IMessageFilter", IID_IMessageFilter$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IMessageFilter$SEGMENT() { return IID_IMessageFilter$SEGMENT_; }

    static final MemoryLayout IMessageFilterVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("HandleInComingCall"),
        C_POINTER.withName("RetryRejectedCall"),
        C_POINTER.withName("MessagePending")
    ).withName("IMessageFilterVtbl");
    static final jdk.incubator.foreign.MemoryLayout IMessageFilterVtbl$struct$LAYOUT() { return IMessageFilterVtbl$struct$LAYOUT_; }

    static final MemoryLayout IMessageFilterVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMessageFilterVtbl$QueryInterface$LAYOUT() { return IMessageFilterVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IMessageFilterVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IMessageFilterVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IMessageFilterVtbl$QueryInterface$VH() { return IMessageFilterVtbl$QueryInterface$VH_; }

    static final MemoryLayout IMessageFilterVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMessageFilterVtbl$AddRef$LAYOUT() { return IMessageFilterVtbl$AddRef$LAYOUT_; }

    static final VarHandle IMessageFilterVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IMessageFilterVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IMessageFilterVtbl$AddRef$VH() { return IMessageFilterVtbl$AddRef$VH_; }

    static final MemoryLayout IMessageFilterVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMessageFilterVtbl$Release$LAYOUT() { return IMessageFilterVtbl$Release$LAYOUT_; }

    static final VarHandle IMessageFilterVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IMessageFilterVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IMessageFilterVtbl$Release$VH() { return IMessageFilterVtbl$Release$VH_; }

    static final MemoryLayout IMessageFilterVtbl$HandleInComingCall$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMessageFilterVtbl$HandleInComingCall$LAYOUT() { return IMessageFilterVtbl$HandleInComingCall$LAYOUT_; }

    static final VarHandle IMessageFilterVtbl$HandleInComingCall$VH_ = MemoryHandles.asAddressVarHandle(IMessageFilterVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("HandleInComingCall")));
    static final java.lang.invoke.VarHandle IMessageFilterVtbl$HandleInComingCall$VH() { return IMessageFilterVtbl$HandleInComingCall$VH_; }

    static final MemoryLayout IMessageFilterVtbl$RetryRejectedCall$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMessageFilterVtbl$RetryRejectedCall$LAYOUT() { return IMessageFilterVtbl$RetryRejectedCall$LAYOUT_; }

    static final VarHandle IMessageFilterVtbl$RetryRejectedCall$VH_ = MemoryHandles.asAddressVarHandle(IMessageFilterVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RetryRejectedCall")));
    static final java.lang.invoke.VarHandle IMessageFilterVtbl$RetryRejectedCall$VH() { return IMessageFilterVtbl$RetryRejectedCall$VH_; }

    static final MemoryLayout IMessageFilterVtbl$MessagePending$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMessageFilterVtbl$MessagePending$LAYOUT() { return IMessageFilterVtbl$MessagePending$LAYOUT_; }

    static final VarHandle IMessageFilterVtbl$MessagePending$VH_ = MemoryHandles.asAddressVarHandle(IMessageFilterVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MessagePending")));
    static final java.lang.invoke.VarHandle IMessageFilterVtbl$MessagePending$VH() { return IMessageFilterVtbl$MessagePending$VH_; }

    static final MemoryLayout IMessageFilter$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IMessageFilter");
    static final jdk.incubator.foreign.MemoryLayout IMessageFilter$struct$LAYOUT() { return IMessageFilter$struct$LAYOUT_; }

    static final MemoryLayout IMessageFilter$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMessageFilter$lpVtbl$LAYOUT() { return IMessageFilter$lpVtbl$LAYOUT_; }

    static final VarHandle IMessageFilter$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IMessageFilter$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IMessageFilter$lpVtbl$VH() { return IMessageFilter$lpVtbl$VH_; }

    static final MemoryLayout FMTID_SummaryInformation$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout FMTID_SummaryInformation$LAYOUT() { return FMTID_SummaryInformation$LAYOUT_; }

    static final MemorySegment FMTID_SummaryInformation$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "FMTID_SummaryInformation", FMTID_SummaryInformation$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment FMTID_SummaryInformation$SEGMENT() { return FMTID_SummaryInformation$SEGMENT_; }

    static final MemoryLayout FMTID_DocSummaryInformation$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout FMTID_DocSummaryInformation$LAYOUT() { return FMTID_DocSummaryInformation$LAYOUT_; }

    static final MemorySegment FMTID_DocSummaryInformation$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "FMTID_DocSummaryInformation", FMTID_DocSummaryInformation$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment FMTID_DocSummaryInformation$SEGMENT() { return FMTID_DocSummaryInformation$SEGMENT_; }

    static final MemoryLayout FMTID_UserDefinedProperties$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout FMTID_UserDefinedProperties$LAYOUT() { return FMTID_UserDefinedProperties$LAYOUT_; }

    static final MemorySegment FMTID_UserDefinedProperties$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "FMTID_UserDefinedProperties", FMTID_UserDefinedProperties$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment FMTID_UserDefinedProperties$SEGMENT() { return FMTID_UserDefinedProperties$SEGMENT_; }

    static final MemoryLayout FMTID_DiscardableInformation$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout FMTID_DiscardableInformation$LAYOUT() { return FMTID_DiscardableInformation$LAYOUT_; }

    static final MemorySegment FMTID_DiscardableInformation$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "FMTID_DiscardableInformation", FMTID_DiscardableInformation$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment FMTID_DiscardableInformation$SEGMENT() { return FMTID_DiscardableInformation$SEGMENT_; }

    static final MemoryLayout FMTID_ImageSummaryInformation$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout FMTID_ImageSummaryInformation$LAYOUT() { return FMTID_ImageSummaryInformation$LAYOUT_; }

    static final MemorySegment FMTID_ImageSummaryInformation$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "FMTID_ImageSummaryInformation", FMTID_ImageSummaryInformation$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment FMTID_ImageSummaryInformation$SEGMENT() { return FMTID_ImageSummaryInformation$SEGMENT_; }

    static final MemoryLayout FMTID_AudioSummaryInformation$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout FMTID_AudioSummaryInformation$LAYOUT() { return FMTID_AudioSummaryInformation$LAYOUT_; }

    static final MemorySegment FMTID_AudioSummaryInformation$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "FMTID_AudioSummaryInformation", FMTID_AudioSummaryInformation$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment FMTID_AudioSummaryInformation$SEGMENT() { return FMTID_AudioSummaryInformation$SEGMENT_; }

    static final MemoryLayout FMTID_VideoSummaryInformation$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout FMTID_VideoSummaryInformation$LAYOUT() { return FMTID_VideoSummaryInformation$LAYOUT_; }

    static final MemorySegment FMTID_VideoSummaryInformation$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "FMTID_VideoSummaryInformation", FMTID_VideoSummaryInformation$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment FMTID_VideoSummaryInformation$SEGMENT() { return FMTID_VideoSummaryInformation$SEGMENT_; }

    static final MemoryLayout FMTID_MediaFileSummaryInformation$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout FMTID_MediaFileSummaryInformation$LAYOUT() { return FMTID_MediaFileSummaryInformation$LAYOUT_; }

    static final MemorySegment FMTID_MediaFileSummaryInformation$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "FMTID_MediaFileSummaryInformation", FMTID_MediaFileSummaryInformation$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment FMTID_MediaFileSummaryInformation$SEGMENT() { return FMTID_MediaFileSummaryInformation$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0075_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0075_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0075_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0075_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0075_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0075_v0_0_c_ifspec$VH() { return __MIDL_itf_objidl_0000_0075_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0075_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0075_v0_0_c_ifspec", __MIDL_itf_objidl_0000_0075_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0075_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0075_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0075_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0075_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0075_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0075_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0075_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0075_v0_0_s_ifspec$VH() { return __MIDL_itf_objidl_0000_0075_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0075_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0075_v0_0_s_ifspec", __MIDL_itf_objidl_0000_0075_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0075_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0075_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IClassActivator$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IClassActivator$LAYOUT() { return IID_IClassActivator$LAYOUT_; }

    static final MemorySegment IID_IClassActivator$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IClassActivator", IID_IClassActivator$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IClassActivator$SEGMENT() { return IID_IClassActivator$SEGMENT_; }

    static final MemoryLayout IClassActivatorVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetClassObject")
    ).withName("IClassActivatorVtbl");
    static final jdk.incubator.foreign.MemoryLayout IClassActivatorVtbl$struct$LAYOUT() { return IClassActivatorVtbl$struct$LAYOUT_; }

    static final MemoryLayout IClassActivatorVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IClassActivatorVtbl$QueryInterface$LAYOUT() { return IClassActivatorVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IClassActivatorVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IClassActivatorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IClassActivatorVtbl$QueryInterface$VH() { return IClassActivatorVtbl$QueryInterface$VH_; }

    static final MemoryLayout IClassActivatorVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IClassActivatorVtbl$AddRef$LAYOUT() { return IClassActivatorVtbl$AddRef$LAYOUT_; }

    static final VarHandle IClassActivatorVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IClassActivatorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IClassActivatorVtbl$AddRef$VH() { return IClassActivatorVtbl$AddRef$VH_; }

    static final MemoryLayout IClassActivatorVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IClassActivatorVtbl$Release$LAYOUT() { return IClassActivatorVtbl$Release$LAYOUT_; }

    static final VarHandle IClassActivatorVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IClassActivatorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IClassActivatorVtbl$Release$VH() { return IClassActivatorVtbl$Release$VH_; }

    static final MemoryLayout IClassActivatorVtbl$GetClassObject$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IClassActivatorVtbl$GetClassObject$LAYOUT() { return IClassActivatorVtbl$GetClassObject$LAYOUT_; }

    static final VarHandle IClassActivatorVtbl$GetClassObject$VH_ = MemoryHandles.asAddressVarHandle(IClassActivatorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetClassObject")));
    static final java.lang.invoke.VarHandle IClassActivatorVtbl$GetClassObject$VH() { return IClassActivatorVtbl$GetClassObject$VH_; }

    static final MemoryLayout IClassActivator$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IClassActivator");
    static final jdk.incubator.foreign.MemoryLayout IClassActivator$struct$LAYOUT() { return IClassActivator$struct$LAYOUT_; }

    static final MemoryLayout IClassActivator$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IClassActivator$lpVtbl$LAYOUT() { return IClassActivator$lpVtbl$LAYOUT_; }

    static final VarHandle IClassActivator$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IClassActivator$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IClassActivator$lpVtbl$VH() { return IClassActivator$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0076_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0076_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0076_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0076_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0076_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0076_v0_0_c_ifspec$VH() { return __MIDL_itf_objidl_0000_0076_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0076_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0076_v0_0_c_ifspec", __MIDL_itf_objidl_0000_0076_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0076_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0076_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0076_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0076_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0076_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0076_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0076_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0076_v0_0_s_ifspec$VH() { return __MIDL_itf_objidl_0000_0076_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0076_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0076_v0_0_s_ifspec", __MIDL_itf_objidl_0000_0076_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0076_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0076_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IFillLockBytes$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IFillLockBytes$LAYOUT() { return IID_IFillLockBytes$LAYOUT_; }

    static final MemorySegment IID_IFillLockBytes$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IFillLockBytes", IID_IFillLockBytes$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IFillLockBytes$SEGMENT() { return IID_IFillLockBytes$SEGMENT_; }

    static final MemoryLayout IFillLockBytesVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("FillAppend"),
        C_POINTER.withName("FillAt"),
        C_POINTER.withName("SetFillSize"),
        C_POINTER.withName("Terminate")
    ).withName("IFillLockBytesVtbl");
    static final jdk.incubator.foreign.MemoryLayout IFillLockBytesVtbl$struct$LAYOUT() { return IFillLockBytesVtbl$struct$LAYOUT_; }

    static final MemoryLayout IFillLockBytesVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IFillLockBytesVtbl$QueryInterface$LAYOUT() { return IFillLockBytesVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IFillLockBytesVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IFillLockBytesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IFillLockBytesVtbl$QueryInterface$VH() { return IFillLockBytesVtbl$QueryInterface$VH_; }

    static final MemoryLayout IFillLockBytesVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IFillLockBytesVtbl$AddRef$LAYOUT() { return IFillLockBytesVtbl$AddRef$LAYOUT_; }

    static final VarHandle IFillLockBytesVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IFillLockBytesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IFillLockBytesVtbl$AddRef$VH() { return IFillLockBytesVtbl$AddRef$VH_; }

    static final MemoryLayout IFillLockBytesVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IFillLockBytesVtbl$Release$LAYOUT() { return IFillLockBytesVtbl$Release$LAYOUT_; }

    static final VarHandle IFillLockBytesVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IFillLockBytesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IFillLockBytesVtbl$Release$VH() { return IFillLockBytesVtbl$Release$VH_; }

    static final MemoryLayout IFillLockBytesVtbl$FillAppend$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IFillLockBytesVtbl$FillAppend$LAYOUT() { return IFillLockBytesVtbl$FillAppend$LAYOUT_; }

    static final VarHandle IFillLockBytesVtbl$FillAppend$VH_ = MemoryHandles.asAddressVarHandle(IFillLockBytesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("FillAppend")));
    static final java.lang.invoke.VarHandle IFillLockBytesVtbl$FillAppend$VH() { return IFillLockBytesVtbl$FillAppend$VH_; }

    static final MemoryLayout IFillLockBytesVtbl$FillAt$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IFillLockBytesVtbl$FillAt$LAYOUT() { return IFillLockBytesVtbl$FillAt$LAYOUT_; }

    static final VarHandle IFillLockBytesVtbl$FillAt$VH_ = MemoryHandles.asAddressVarHandle(IFillLockBytesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("FillAt")));
    static final java.lang.invoke.VarHandle IFillLockBytesVtbl$FillAt$VH() { return IFillLockBytesVtbl$FillAt$VH_; }

    static final MemoryLayout IFillLockBytesVtbl$SetFillSize$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IFillLockBytesVtbl$SetFillSize$LAYOUT() { return IFillLockBytesVtbl$SetFillSize$LAYOUT_; }

    static final VarHandle IFillLockBytesVtbl$SetFillSize$VH_ = MemoryHandles.asAddressVarHandle(IFillLockBytesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetFillSize")));
    static final java.lang.invoke.VarHandle IFillLockBytesVtbl$SetFillSize$VH() { return IFillLockBytesVtbl$SetFillSize$VH_; }

    static final MemoryLayout IFillLockBytesVtbl$Terminate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IFillLockBytesVtbl$Terminate$LAYOUT() { return IFillLockBytesVtbl$Terminate$LAYOUT_; }

    static final VarHandle IFillLockBytesVtbl$Terminate$VH_ = MemoryHandles.asAddressVarHandle(IFillLockBytesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Terminate")));
    static final java.lang.invoke.VarHandle IFillLockBytesVtbl$Terminate$VH() { return IFillLockBytesVtbl$Terminate$VH_; }

    static final MemoryLayout IFillLockBytes$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IFillLockBytes");
    static final jdk.incubator.foreign.MemoryLayout IFillLockBytes$struct$LAYOUT() { return IFillLockBytes$struct$LAYOUT_; }

    static final MemoryLayout IFillLockBytes$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IFillLockBytes$lpVtbl$LAYOUT() { return IFillLockBytes$lpVtbl$LAYOUT_; }

    static final VarHandle IFillLockBytes$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IFillLockBytes$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IFillLockBytes$lpVtbl$VH() { return IFillLockBytes$lpVtbl$VH_; }

    static final FunctionDescriptor IFillLockBytes_RemoteFillAppend_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IFillLockBytes_RemoteFillAppend_Proxy$FUNC() { return IFillLockBytes_RemoteFillAppend_Proxy$FUNC_; }

    static final MethodHandle IFillLockBytes_RemoteFillAppend_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IFillLockBytes_RemoteFillAppend_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        IFillLockBytes_RemoteFillAppend_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IFillLockBytes_RemoteFillAppend_Proxy$MH() { return IFillLockBytes_RemoteFillAppend_Proxy$MH_; }

    static final FunctionDescriptor IFillLockBytes_RemoteFillAppend_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IFillLockBytes_RemoteFillAppend_Stub$FUNC() { return IFillLockBytes_RemoteFillAppend_Stub$FUNC_; }

    static final MethodHandle IFillLockBytes_RemoteFillAppend_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IFillLockBytes_RemoteFillAppend_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IFillLockBytes_RemoteFillAppend_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IFillLockBytes_RemoteFillAppend_Stub$MH() { return IFillLockBytes_RemoteFillAppend_Stub$MH_; }

    static final FunctionDescriptor IFillLockBytes_RemoteFillAt_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("_ULARGE_INTEGER"),
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IFillLockBytes_RemoteFillAt_Proxy$FUNC() { return IFillLockBytes_RemoteFillAt_Proxy$FUNC_; }

    static final MethodHandle IFillLockBytes_RemoteFillAt_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IFillLockBytes_RemoteFillAt_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        IFillLockBytes_RemoteFillAt_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IFillLockBytes_RemoteFillAt_Proxy$MH() { return IFillLockBytes_RemoteFillAt_Proxy$MH_; }

    static final FunctionDescriptor IFillLockBytes_RemoteFillAt_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IFillLockBytes_RemoteFillAt_Stub$FUNC() { return IFillLockBytes_RemoteFillAt_Stub$FUNC_; }

    static final MethodHandle IFillLockBytes_RemoteFillAt_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IFillLockBytes_RemoteFillAt_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IFillLockBytes_RemoteFillAt_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IFillLockBytes_RemoteFillAt_Stub$MH() { return IFillLockBytes_RemoteFillAt_Stub$MH_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0077_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0077_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0077_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0077_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0077_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0077_v0_0_c_ifspec$VH() { return __MIDL_itf_objidl_0000_0077_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0077_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0077_v0_0_c_ifspec", __MIDL_itf_objidl_0000_0077_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0077_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0077_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0077_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0077_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0077_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0077_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0077_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0077_v0_0_s_ifspec$VH() { return __MIDL_itf_objidl_0000_0077_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0077_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0077_v0_0_s_ifspec", __MIDL_itf_objidl_0000_0077_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0077_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0077_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IProgressNotify$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IProgressNotify$LAYOUT() { return IID_IProgressNotify$LAYOUT_; }

    static final MemorySegment IID_IProgressNotify$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IProgressNotify", IID_IProgressNotify$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IProgressNotify$SEGMENT() { return IID_IProgressNotify$SEGMENT_; }

    static final MemoryLayout IProgressNotifyVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("OnProgress")
    ).withName("IProgressNotifyVtbl");
    static final jdk.incubator.foreign.MemoryLayout IProgressNotifyVtbl$struct$LAYOUT() { return IProgressNotifyVtbl$struct$LAYOUT_; }

    static final MemoryLayout IProgressNotifyVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IProgressNotifyVtbl$QueryInterface$LAYOUT() { return IProgressNotifyVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IProgressNotifyVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IProgressNotifyVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IProgressNotifyVtbl$QueryInterface$VH() { return IProgressNotifyVtbl$QueryInterface$VH_; }

    static final MemoryLayout IProgressNotifyVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IProgressNotifyVtbl$AddRef$LAYOUT() { return IProgressNotifyVtbl$AddRef$LAYOUT_; }

    static final VarHandle IProgressNotifyVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IProgressNotifyVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IProgressNotifyVtbl$AddRef$VH() { return IProgressNotifyVtbl$AddRef$VH_; }

    static final MemoryLayout IProgressNotifyVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IProgressNotifyVtbl$Release$LAYOUT() { return IProgressNotifyVtbl$Release$LAYOUT_; }

    static final VarHandle IProgressNotifyVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IProgressNotifyVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IProgressNotifyVtbl$Release$VH() { return IProgressNotifyVtbl$Release$VH_; }

    static final MemoryLayout IProgressNotifyVtbl$OnProgress$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IProgressNotifyVtbl$OnProgress$LAYOUT() { return IProgressNotifyVtbl$OnProgress$LAYOUT_; }

    static final VarHandle IProgressNotifyVtbl$OnProgress$VH_ = MemoryHandles.asAddressVarHandle(IProgressNotifyVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnProgress")));
    static final java.lang.invoke.VarHandle IProgressNotifyVtbl$OnProgress$VH() { return IProgressNotifyVtbl$OnProgress$VH_; }

    static final MemoryLayout IProgressNotify$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IProgressNotify");
    static final jdk.incubator.foreign.MemoryLayout IProgressNotify$struct$LAYOUT() { return IProgressNotify$struct$LAYOUT_; }

    static final MemoryLayout IProgressNotify$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IProgressNotify$lpVtbl$LAYOUT() { return IProgressNotify$lpVtbl$LAYOUT_; }

    static final VarHandle IProgressNotify$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IProgressNotify$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IProgressNotify$lpVtbl$VH() { return IProgressNotify$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0078_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0078_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0078_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0078_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0078_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0078_v0_0_c_ifspec$VH() { return __MIDL_itf_objidl_0000_0078_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0078_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0078_v0_0_c_ifspec", __MIDL_itf_objidl_0000_0078_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0078_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0078_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0078_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0078_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0078_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0078_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0078_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0078_v0_0_s_ifspec$VH() { return __MIDL_itf_objidl_0000_0078_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0078_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0078_v0_0_s_ifspec", __MIDL_itf_objidl_0000_0078_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0078_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0078_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout tagStorageLayout$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("LayoutType"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pwcsElementName"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("cOffset"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("cBytes")
    ).withName("tagStorageLayout");
    static final jdk.incubator.foreign.MemoryLayout tagStorageLayout$struct$LAYOUT() { return tagStorageLayout$struct$LAYOUT_; }

    static final MemoryLayout tagStorageLayout$LayoutType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagStorageLayout$LayoutType$LAYOUT() { return tagStorageLayout$LayoutType$LAYOUT_; }

    static final VarHandle tagStorageLayout$LayoutType$VH_ = tagStorageLayout$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LayoutType"));
    static final java.lang.invoke.VarHandle tagStorageLayout$LayoutType$VH() { return tagStorageLayout$LayoutType$VH_; }

    static final MemoryLayout tagStorageLayout$pwcsElementName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagStorageLayout$pwcsElementName$LAYOUT() { return tagStorageLayout$pwcsElementName$LAYOUT_; }

    static final VarHandle tagStorageLayout$pwcsElementName$VH_ = MemoryHandles.asAddressVarHandle(tagStorageLayout$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwcsElementName")));
    static final java.lang.invoke.VarHandle tagStorageLayout$pwcsElementName$VH() { return tagStorageLayout$pwcsElementName$VH_; }

    static final MemoryLayout IID_ILayoutStorage$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_ILayoutStorage$LAYOUT() { return IID_ILayoutStorage$LAYOUT_; }

    static final MemorySegment IID_ILayoutStorage$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ILayoutStorage", IID_ILayoutStorage$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_ILayoutStorage$SEGMENT() { return IID_ILayoutStorage$SEGMENT_; }

    static final MemoryLayout ILayoutStorageVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("LayoutScript"),
        C_POINTER.withName("BeginMonitor"),
        C_POINTER.withName("EndMonitor"),
        C_POINTER.withName("ReLayoutDocfile"),
        C_POINTER.withName("ReLayoutDocfileOnILockBytes")
    ).withName("ILayoutStorageVtbl");
    static final jdk.incubator.foreign.MemoryLayout ILayoutStorageVtbl$struct$LAYOUT() { return ILayoutStorageVtbl$struct$LAYOUT_; }

    static final MemoryLayout ILayoutStorageVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ILayoutStorageVtbl$QueryInterface$LAYOUT() { return ILayoutStorageVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ILayoutStorageVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ILayoutStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle ILayoutStorageVtbl$QueryInterface$VH() { return ILayoutStorageVtbl$QueryInterface$VH_; }

    static final MemoryLayout ILayoutStorageVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ILayoutStorageVtbl$AddRef$LAYOUT() { return ILayoutStorageVtbl$AddRef$LAYOUT_; }

    static final VarHandle ILayoutStorageVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ILayoutStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle ILayoutStorageVtbl$AddRef$VH() { return ILayoutStorageVtbl$AddRef$VH_; }

    static final MemoryLayout ILayoutStorageVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ILayoutStorageVtbl$Release$LAYOUT() { return ILayoutStorageVtbl$Release$LAYOUT_; }

    static final VarHandle ILayoutStorageVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ILayoutStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle ILayoutStorageVtbl$Release$VH() { return ILayoutStorageVtbl$Release$VH_; }

    static final MemoryLayout ILayoutStorageVtbl$LayoutScript$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ILayoutStorageVtbl$LayoutScript$LAYOUT() { return ILayoutStorageVtbl$LayoutScript$LAYOUT_; }

    static final VarHandle ILayoutStorageVtbl$LayoutScript$VH_ = MemoryHandles.asAddressVarHandle(ILayoutStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LayoutScript")));
    static final java.lang.invoke.VarHandle ILayoutStorageVtbl$LayoutScript$VH() { return ILayoutStorageVtbl$LayoutScript$VH_; }

    static final MemoryLayout ILayoutStorageVtbl$BeginMonitor$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ILayoutStorageVtbl$BeginMonitor$LAYOUT() { return ILayoutStorageVtbl$BeginMonitor$LAYOUT_; }

    static final VarHandle ILayoutStorageVtbl$BeginMonitor$VH_ = MemoryHandles.asAddressVarHandle(ILayoutStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("BeginMonitor")));
    static final java.lang.invoke.VarHandle ILayoutStorageVtbl$BeginMonitor$VH() { return ILayoutStorageVtbl$BeginMonitor$VH_; }

    static final MemoryLayout ILayoutStorageVtbl$EndMonitor$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ILayoutStorageVtbl$EndMonitor$LAYOUT() { return ILayoutStorageVtbl$EndMonitor$LAYOUT_; }

    static final VarHandle ILayoutStorageVtbl$EndMonitor$VH_ = MemoryHandles.asAddressVarHandle(ILayoutStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EndMonitor")));
    static final java.lang.invoke.VarHandle ILayoutStorageVtbl$EndMonitor$VH() { return ILayoutStorageVtbl$EndMonitor$VH_; }

    static final MemoryLayout ILayoutStorageVtbl$ReLayoutDocfile$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ILayoutStorageVtbl$ReLayoutDocfile$LAYOUT() { return ILayoutStorageVtbl$ReLayoutDocfile$LAYOUT_; }

    static final VarHandle ILayoutStorageVtbl$ReLayoutDocfile$VH_ = MemoryHandles.asAddressVarHandle(ILayoutStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReLayoutDocfile")));
    static final java.lang.invoke.VarHandle ILayoutStorageVtbl$ReLayoutDocfile$VH() { return ILayoutStorageVtbl$ReLayoutDocfile$VH_; }

    static final MemoryLayout ILayoutStorageVtbl$ReLayoutDocfileOnILockBytes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ILayoutStorageVtbl$ReLayoutDocfileOnILockBytes$LAYOUT() { return ILayoutStorageVtbl$ReLayoutDocfileOnILockBytes$LAYOUT_; }

    static final VarHandle ILayoutStorageVtbl$ReLayoutDocfileOnILockBytes$VH_ = MemoryHandles.asAddressVarHandle(ILayoutStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReLayoutDocfileOnILockBytes")));
    static final java.lang.invoke.VarHandle ILayoutStorageVtbl$ReLayoutDocfileOnILockBytes$VH() { return ILayoutStorageVtbl$ReLayoutDocfileOnILockBytes$VH_; }

    static final MemoryLayout ILayoutStorage$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ILayoutStorage");
    static final jdk.incubator.foreign.MemoryLayout ILayoutStorage$struct$LAYOUT() { return ILayoutStorage$struct$LAYOUT_; }

    static final MemoryLayout ILayoutStorage$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ILayoutStorage$lpVtbl$LAYOUT() { return ILayoutStorage$lpVtbl$LAYOUT_; }

    static final VarHandle ILayoutStorage$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ILayoutStorage$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle ILayoutStorage$lpVtbl$VH() { return ILayoutStorage$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0079_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0079_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0079_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0079_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0079_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0079_v0_0_c_ifspec$VH() { return __MIDL_itf_objidl_0000_0079_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0079_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0079_v0_0_c_ifspec", __MIDL_itf_objidl_0000_0079_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0079_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0079_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0079_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0079_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0079_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0079_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0079_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0079_v0_0_s_ifspec$VH() { return __MIDL_itf_objidl_0000_0079_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0079_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0079_v0_0_s_ifspec", __MIDL_itf_objidl_0000_0079_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0079_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0079_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IBlockingLock$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IBlockingLock$LAYOUT() { return IID_IBlockingLock$LAYOUT_; }

    static final MemorySegment IID_IBlockingLock$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IBlockingLock", IID_IBlockingLock$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IBlockingLock$SEGMENT() { return IID_IBlockingLock$SEGMENT_; }

    static final MemoryLayout IBlockingLockVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Lock"),
        C_POINTER.withName("Unlock")
    ).withName("IBlockingLockVtbl");
    static final jdk.incubator.foreign.MemoryLayout IBlockingLockVtbl$struct$LAYOUT() { return IBlockingLockVtbl$struct$LAYOUT_; }

    static final MemoryLayout IBlockingLockVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBlockingLockVtbl$QueryInterface$LAYOUT() { return IBlockingLockVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IBlockingLockVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IBlockingLockVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IBlockingLockVtbl$QueryInterface$VH() { return IBlockingLockVtbl$QueryInterface$VH_; }

    static final MemoryLayout IBlockingLockVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBlockingLockVtbl$AddRef$LAYOUT() { return IBlockingLockVtbl$AddRef$LAYOUT_; }

    static final VarHandle IBlockingLockVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IBlockingLockVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IBlockingLockVtbl$AddRef$VH() { return IBlockingLockVtbl$AddRef$VH_; }

    static final MemoryLayout IBlockingLockVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBlockingLockVtbl$Release$LAYOUT() { return IBlockingLockVtbl$Release$LAYOUT_; }

    static final VarHandle IBlockingLockVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IBlockingLockVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IBlockingLockVtbl$Release$VH() { return IBlockingLockVtbl$Release$VH_; }

    static final MemoryLayout IBlockingLockVtbl$Lock$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBlockingLockVtbl$Lock$LAYOUT() { return IBlockingLockVtbl$Lock$LAYOUT_; }

    static final VarHandle IBlockingLockVtbl$Lock$VH_ = MemoryHandles.asAddressVarHandle(IBlockingLockVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Lock")));
    static final java.lang.invoke.VarHandle IBlockingLockVtbl$Lock$VH() { return IBlockingLockVtbl$Lock$VH_; }

    static final MemoryLayout IBlockingLockVtbl$Unlock$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBlockingLockVtbl$Unlock$LAYOUT() { return IBlockingLockVtbl$Unlock$LAYOUT_; }

    static final VarHandle IBlockingLockVtbl$Unlock$VH_ = MemoryHandles.asAddressVarHandle(IBlockingLockVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Unlock")));
    static final java.lang.invoke.VarHandle IBlockingLockVtbl$Unlock$VH() { return IBlockingLockVtbl$Unlock$VH_; }

    static final MemoryLayout IBlockingLock$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IBlockingLock");
    static final jdk.incubator.foreign.MemoryLayout IBlockingLock$struct$LAYOUT() { return IBlockingLock$struct$LAYOUT_; }

    static final MemoryLayout IBlockingLock$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBlockingLock$lpVtbl$LAYOUT() { return IBlockingLock$lpVtbl$LAYOUT_; }

    static final VarHandle IBlockingLock$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IBlockingLock$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IBlockingLock$lpVtbl$VH() { return IBlockingLock$lpVtbl$VH_; }

    static final MemoryLayout IID_ITimeAndNoticeControl$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_ITimeAndNoticeControl$LAYOUT() { return IID_ITimeAndNoticeControl$LAYOUT_; }

    static final MemorySegment IID_ITimeAndNoticeControl$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ITimeAndNoticeControl", IID_ITimeAndNoticeControl$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_ITimeAndNoticeControl$SEGMENT() { return IID_ITimeAndNoticeControl$SEGMENT_; }

    static final MemoryLayout ITimeAndNoticeControlVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("SuppressChanges")
    ).withName("ITimeAndNoticeControlVtbl");
    static final jdk.incubator.foreign.MemoryLayout ITimeAndNoticeControlVtbl$struct$LAYOUT() { return ITimeAndNoticeControlVtbl$struct$LAYOUT_; }

    static final MemoryLayout ITimeAndNoticeControlVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITimeAndNoticeControlVtbl$QueryInterface$LAYOUT() { return ITimeAndNoticeControlVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ITimeAndNoticeControlVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ITimeAndNoticeControlVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle ITimeAndNoticeControlVtbl$QueryInterface$VH() { return ITimeAndNoticeControlVtbl$QueryInterface$VH_; }

    static final MemoryLayout ITimeAndNoticeControlVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITimeAndNoticeControlVtbl$AddRef$LAYOUT() { return ITimeAndNoticeControlVtbl$AddRef$LAYOUT_; }

    static final VarHandle ITimeAndNoticeControlVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ITimeAndNoticeControlVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle ITimeAndNoticeControlVtbl$AddRef$VH() { return ITimeAndNoticeControlVtbl$AddRef$VH_; }

    static final MemoryLayout ITimeAndNoticeControlVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITimeAndNoticeControlVtbl$Release$LAYOUT() { return ITimeAndNoticeControlVtbl$Release$LAYOUT_; }

    static final VarHandle ITimeAndNoticeControlVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ITimeAndNoticeControlVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle ITimeAndNoticeControlVtbl$Release$VH() { return ITimeAndNoticeControlVtbl$Release$VH_; }

    static final MemoryLayout ITimeAndNoticeControlVtbl$SuppressChanges$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITimeAndNoticeControlVtbl$SuppressChanges$LAYOUT() { return ITimeAndNoticeControlVtbl$SuppressChanges$LAYOUT_; }

    static final VarHandle ITimeAndNoticeControlVtbl$SuppressChanges$VH_ = MemoryHandles.asAddressVarHandle(ITimeAndNoticeControlVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SuppressChanges")));
    static final java.lang.invoke.VarHandle ITimeAndNoticeControlVtbl$SuppressChanges$VH() { return ITimeAndNoticeControlVtbl$SuppressChanges$VH_; }

    static final MemoryLayout ITimeAndNoticeControl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ITimeAndNoticeControl");
    static final jdk.incubator.foreign.MemoryLayout ITimeAndNoticeControl$struct$LAYOUT() { return ITimeAndNoticeControl$struct$LAYOUT_; }

    static final MemoryLayout ITimeAndNoticeControl$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITimeAndNoticeControl$lpVtbl$LAYOUT() { return ITimeAndNoticeControl$lpVtbl$LAYOUT_; }

    static final VarHandle ITimeAndNoticeControl$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ITimeAndNoticeControl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle ITimeAndNoticeControl$lpVtbl$VH() { return ITimeAndNoticeControl$lpVtbl$VH_; }

    static final MemoryLayout IID_IOplockStorage$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IOplockStorage$LAYOUT() { return IID_IOplockStorage$LAYOUT_; }

    static final MemorySegment IID_IOplockStorage$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IOplockStorage", IID_IOplockStorage$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IOplockStorage$SEGMENT() { return IID_IOplockStorage$SEGMENT_; }

    static final MemoryLayout IOplockStorageVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("CreateStorageEx"),
        C_POINTER.withName("OpenStorageEx")
    ).withName("IOplockStorageVtbl");
    static final jdk.incubator.foreign.MemoryLayout IOplockStorageVtbl$struct$LAYOUT() { return IOplockStorageVtbl$struct$LAYOUT_; }

    static final MemoryLayout IOplockStorageVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOplockStorageVtbl$QueryInterface$LAYOUT() { return IOplockStorageVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IOplockStorageVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IOplockStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IOplockStorageVtbl$QueryInterface$VH() { return IOplockStorageVtbl$QueryInterface$VH_; }

    static final MemoryLayout IOplockStorageVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOplockStorageVtbl$AddRef$LAYOUT() { return IOplockStorageVtbl$AddRef$LAYOUT_; }

    static final VarHandle IOplockStorageVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IOplockStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IOplockStorageVtbl$AddRef$VH() { return IOplockStorageVtbl$AddRef$VH_; }

    static final MemoryLayout IOplockStorageVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOplockStorageVtbl$Release$LAYOUT() { return IOplockStorageVtbl$Release$LAYOUT_; }

    static final VarHandle IOplockStorageVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IOplockStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IOplockStorageVtbl$Release$VH() { return IOplockStorageVtbl$Release$VH_; }

    static final MemoryLayout IOplockStorageVtbl$CreateStorageEx$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOplockStorageVtbl$CreateStorageEx$LAYOUT() { return IOplockStorageVtbl$CreateStorageEx$LAYOUT_; }

    static final VarHandle IOplockStorageVtbl$CreateStorageEx$VH_ = MemoryHandles.asAddressVarHandle(IOplockStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateStorageEx")));
    static final java.lang.invoke.VarHandle IOplockStorageVtbl$CreateStorageEx$VH() { return IOplockStorageVtbl$CreateStorageEx$VH_; }

    static final MemoryLayout IOplockStorageVtbl$OpenStorageEx$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOplockStorageVtbl$OpenStorageEx$LAYOUT() { return IOplockStorageVtbl$OpenStorageEx$LAYOUT_; }

    static final VarHandle IOplockStorageVtbl$OpenStorageEx$VH_ = MemoryHandles.asAddressVarHandle(IOplockStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OpenStorageEx")));
    static final java.lang.invoke.VarHandle IOplockStorageVtbl$OpenStorageEx$VH() { return IOplockStorageVtbl$OpenStorageEx$VH_; }

    static final MemoryLayout IOplockStorage$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IOplockStorage");
    static final jdk.incubator.foreign.MemoryLayout IOplockStorage$struct$LAYOUT() { return IOplockStorage$struct$LAYOUT_; }

    static final MemoryLayout IOplockStorage$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOplockStorage$lpVtbl$LAYOUT() { return IOplockStorage$lpVtbl$LAYOUT_; }

    static final VarHandle IOplockStorage$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IOplockStorage$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IOplockStorage$lpVtbl$VH() { return IOplockStorage$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0082_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0082_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0082_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0082_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0082_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0082_v0_0_c_ifspec$VH() { return __MIDL_itf_objidl_0000_0082_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0082_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0082_v0_0_c_ifspec", __MIDL_itf_objidl_0000_0082_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0082_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0082_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0082_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0082_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0082_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0082_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0082_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0082_v0_0_s_ifspec$VH() { return __MIDL_itf_objidl_0000_0082_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0082_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0082_v0_0_s_ifspec", __MIDL_itf_objidl_0000_0082_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0082_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0082_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IDirectWriterLock$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IDirectWriterLock$LAYOUT() { return IID_IDirectWriterLock$LAYOUT_; }

    static final MemorySegment IID_IDirectWriterLock$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IDirectWriterLock", IID_IDirectWriterLock$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IDirectWriterLock$SEGMENT() { return IID_IDirectWriterLock$SEGMENT_; }

    static final MemoryLayout IDirectWriterLockVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("WaitForWriteAccess"),
        C_POINTER.withName("ReleaseWriteAccess"),
        C_POINTER.withName("HaveWriteAccess")
    ).withName("IDirectWriterLockVtbl");
    static final jdk.incubator.foreign.MemoryLayout IDirectWriterLockVtbl$struct$LAYOUT() { return IDirectWriterLockVtbl$struct$LAYOUT_; }

    static final MemoryLayout IDirectWriterLockVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDirectWriterLockVtbl$QueryInterface$LAYOUT() { return IDirectWriterLockVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IDirectWriterLockVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IDirectWriterLockVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IDirectWriterLockVtbl$QueryInterface$VH() { return IDirectWriterLockVtbl$QueryInterface$VH_; }

    static final MemoryLayout IDirectWriterLockVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDirectWriterLockVtbl$AddRef$LAYOUT() { return IDirectWriterLockVtbl$AddRef$LAYOUT_; }

    static final VarHandle IDirectWriterLockVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IDirectWriterLockVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IDirectWriterLockVtbl$AddRef$VH() { return IDirectWriterLockVtbl$AddRef$VH_; }

    static final MemoryLayout IDirectWriterLockVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDirectWriterLockVtbl$Release$LAYOUT() { return IDirectWriterLockVtbl$Release$LAYOUT_; }

    static final VarHandle IDirectWriterLockVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IDirectWriterLockVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IDirectWriterLockVtbl$Release$VH() { return IDirectWriterLockVtbl$Release$VH_; }

    static final MemoryLayout IDirectWriterLockVtbl$WaitForWriteAccess$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDirectWriterLockVtbl$WaitForWriteAccess$LAYOUT() { return IDirectWriterLockVtbl$WaitForWriteAccess$LAYOUT_; }

    static final VarHandle IDirectWriterLockVtbl$WaitForWriteAccess$VH_ = MemoryHandles.asAddressVarHandle(IDirectWriterLockVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("WaitForWriteAccess")));
    static final java.lang.invoke.VarHandle IDirectWriterLockVtbl$WaitForWriteAccess$VH() { return IDirectWriterLockVtbl$WaitForWriteAccess$VH_; }

    static final MemoryLayout IDirectWriterLockVtbl$ReleaseWriteAccess$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDirectWriterLockVtbl$ReleaseWriteAccess$LAYOUT() { return IDirectWriterLockVtbl$ReleaseWriteAccess$LAYOUT_; }

    static final VarHandle IDirectWriterLockVtbl$ReleaseWriteAccess$VH_ = MemoryHandles.asAddressVarHandle(IDirectWriterLockVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReleaseWriteAccess")));
    static final java.lang.invoke.VarHandle IDirectWriterLockVtbl$ReleaseWriteAccess$VH() { return IDirectWriterLockVtbl$ReleaseWriteAccess$VH_; }

    static final MemoryLayout IDirectWriterLockVtbl$HaveWriteAccess$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDirectWriterLockVtbl$HaveWriteAccess$LAYOUT() { return IDirectWriterLockVtbl$HaveWriteAccess$LAYOUT_; }

    static final VarHandle IDirectWriterLockVtbl$HaveWriteAccess$VH_ = MemoryHandles.asAddressVarHandle(IDirectWriterLockVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("HaveWriteAccess")));
    static final java.lang.invoke.VarHandle IDirectWriterLockVtbl$HaveWriteAccess$VH() { return IDirectWriterLockVtbl$HaveWriteAccess$VH_; }

    static final MemoryLayout IDirectWriterLock$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IDirectWriterLock");
    static final jdk.incubator.foreign.MemoryLayout IDirectWriterLock$struct$LAYOUT() { return IDirectWriterLock$struct$LAYOUT_; }

    static final MemoryLayout IDirectWriterLock$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDirectWriterLock$lpVtbl$LAYOUT() { return IDirectWriterLock$lpVtbl$LAYOUT_; }

    static final VarHandle IDirectWriterLock$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IDirectWriterLock$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IDirectWriterLock$lpVtbl$VH() { return IDirectWriterLock$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0083_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0083_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0083_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0083_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0083_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0083_v0_0_c_ifspec$VH() { return __MIDL_itf_objidl_0000_0083_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0083_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0083_v0_0_c_ifspec", __MIDL_itf_objidl_0000_0083_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0083_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0083_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0083_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0083_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0083_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0083_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0083_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0083_v0_0_s_ifspec$VH() { return __MIDL_itf_objidl_0000_0083_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0083_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0083_v0_0_s_ifspec", __MIDL_itf_objidl_0000_0083_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0083_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0083_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IUrlMon$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IUrlMon$LAYOUT() { return IID_IUrlMon$LAYOUT_; }

    static final MemorySegment IID_IUrlMon$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IUrlMon", IID_IUrlMon$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IUrlMon$SEGMENT() { return IID_IUrlMon$SEGMENT_; }

    static final MemoryLayout IUrlMonVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("AsyncGetClassBits")
    ).withName("IUrlMonVtbl");
    static final jdk.incubator.foreign.MemoryLayout IUrlMonVtbl$struct$LAYOUT() { return IUrlMonVtbl$struct$LAYOUT_; }

    static final MemoryLayout IUrlMonVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUrlMonVtbl$QueryInterface$LAYOUT() { return IUrlMonVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IUrlMonVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IUrlMonVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IUrlMonVtbl$QueryInterface$VH() { return IUrlMonVtbl$QueryInterface$VH_; }

    static final MemoryLayout IUrlMonVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUrlMonVtbl$AddRef$LAYOUT() { return IUrlMonVtbl$AddRef$LAYOUT_; }

    static final VarHandle IUrlMonVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IUrlMonVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IUrlMonVtbl$AddRef$VH() { return IUrlMonVtbl$AddRef$VH_; }

    static final MemoryLayout IUrlMonVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUrlMonVtbl$Release$LAYOUT() { return IUrlMonVtbl$Release$LAYOUT_; }

    static final VarHandle IUrlMonVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IUrlMonVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IUrlMonVtbl$Release$VH() { return IUrlMonVtbl$Release$VH_; }

    static final MemoryLayout IUrlMonVtbl$AsyncGetClassBits$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUrlMonVtbl$AsyncGetClassBits$LAYOUT() { return IUrlMonVtbl$AsyncGetClassBits$LAYOUT_; }

    static final VarHandle IUrlMonVtbl$AsyncGetClassBits$VH_ = MemoryHandles.asAddressVarHandle(IUrlMonVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AsyncGetClassBits")));
    static final java.lang.invoke.VarHandle IUrlMonVtbl$AsyncGetClassBits$VH() { return IUrlMonVtbl$AsyncGetClassBits$VH_; }

    static final MemoryLayout IUrlMon$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IUrlMon");
    static final jdk.incubator.foreign.MemoryLayout IUrlMon$struct$LAYOUT() { return IUrlMon$struct$LAYOUT_; }

    static final MemoryLayout IUrlMon$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUrlMon$lpVtbl$LAYOUT() { return IUrlMon$lpVtbl$LAYOUT_; }

    static final VarHandle IUrlMon$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IUrlMon$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IUrlMon$lpVtbl$VH() { return IUrlMon$lpVtbl$VH_; }

    static final MemoryLayout IID_IForegroundTransfer$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IForegroundTransfer$LAYOUT() { return IID_IForegroundTransfer$LAYOUT_; }

    static final MemorySegment IID_IForegroundTransfer$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IForegroundTransfer", IID_IForegroundTransfer$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IForegroundTransfer$SEGMENT() { return IID_IForegroundTransfer$SEGMENT_; }

    static final MemoryLayout IForegroundTransferVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("AllowForegroundTransfer")
    ).withName("IForegroundTransferVtbl");
    static final jdk.incubator.foreign.MemoryLayout IForegroundTransferVtbl$struct$LAYOUT() { return IForegroundTransferVtbl$struct$LAYOUT_; }

    static final MemoryLayout IForegroundTransferVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IForegroundTransferVtbl$QueryInterface$LAYOUT() { return IForegroundTransferVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IForegroundTransferVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IForegroundTransferVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IForegroundTransferVtbl$QueryInterface$VH() { return IForegroundTransferVtbl$QueryInterface$VH_; }

    static final MemoryLayout IForegroundTransferVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IForegroundTransferVtbl$AddRef$LAYOUT() { return IForegroundTransferVtbl$AddRef$LAYOUT_; }

    static final VarHandle IForegroundTransferVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IForegroundTransferVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IForegroundTransferVtbl$AddRef$VH() { return IForegroundTransferVtbl$AddRef$VH_; }

    static final MemoryLayout IForegroundTransferVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IForegroundTransferVtbl$Release$LAYOUT() { return IForegroundTransferVtbl$Release$LAYOUT_; }

    static final VarHandle IForegroundTransferVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IForegroundTransferVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IForegroundTransferVtbl$Release$VH() { return IForegroundTransferVtbl$Release$VH_; }

    static final MemoryLayout IForegroundTransferVtbl$AllowForegroundTransfer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IForegroundTransferVtbl$AllowForegroundTransfer$LAYOUT() { return IForegroundTransferVtbl$AllowForegroundTransfer$LAYOUT_; }

    static final VarHandle IForegroundTransferVtbl$AllowForegroundTransfer$VH_ = MemoryHandles.asAddressVarHandle(IForegroundTransferVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AllowForegroundTransfer")));
    static final java.lang.invoke.VarHandle IForegroundTransferVtbl$AllowForegroundTransfer$VH() { return IForegroundTransferVtbl$AllowForegroundTransfer$VH_; }

    static final MemoryLayout IForegroundTransfer$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IForegroundTransfer");
    static final jdk.incubator.foreign.MemoryLayout IForegroundTransfer$struct$LAYOUT() { return IForegroundTransfer$struct$LAYOUT_; }

    static final MemoryLayout IForegroundTransfer$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IForegroundTransfer$lpVtbl$LAYOUT() { return IForegroundTransfer$lpVtbl$LAYOUT_; }

    static final VarHandle IForegroundTransfer$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IForegroundTransfer$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IForegroundTransfer$lpVtbl$VH() { return IForegroundTransfer$lpVtbl$VH_; }

    static final MemoryLayout IID_IThumbnailExtractor$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IThumbnailExtractor$LAYOUT() { return IID_IThumbnailExtractor$LAYOUT_; }

    static final MemorySegment IID_IThumbnailExtractor$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IThumbnailExtractor", IID_IThumbnailExtractor$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IThumbnailExtractor$SEGMENT() { return IID_IThumbnailExtractor$SEGMENT_; }

    static final MemoryLayout IThumbnailExtractorVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("ExtractThumbnail"),
        C_POINTER.withName("OnFileUpdated")
    ).withName("IThumbnailExtractorVtbl");
    static final jdk.incubator.foreign.MemoryLayout IThumbnailExtractorVtbl$struct$LAYOUT() { return IThumbnailExtractorVtbl$struct$LAYOUT_; }

    static final MemoryLayout IThumbnailExtractorVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IThumbnailExtractorVtbl$QueryInterface$LAYOUT() { return IThumbnailExtractorVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IThumbnailExtractorVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IThumbnailExtractorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IThumbnailExtractorVtbl$QueryInterface$VH() { return IThumbnailExtractorVtbl$QueryInterface$VH_; }

    static final MemoryLayout IThumbnailExtractorVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IThumbnailExtractorVtbl$AddRef$LAYOUT() { return IThumbnailExtractorVtbl$AddRef$LAYOUT_; }

    static final VarHandle IThumbnailExtractorVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IThumbnailExtractorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IThumbnailExtractorVtbl$AddRef$VH() { return IThumbnailExtractorVtbl$AddRef$VH_; }

    static final MemoryLayout IThumbnailExtractorVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IThumbnailExtractorVtbl$Release$LAYOUT() { return IThumbnailExtractorVtbl$Release$LAYOUT_; }

    static final VarHandle IThumbnailExtractorVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IThumbnailExtractorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IThumbnailExtractorVtbl$Release$VH() { return IThumbnailExtractorVtbl$Release$VH_; }

    static final MemoryLayout IThumbnailExtractorVtbl$ExtractThumbnail$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IThumbnailExtractorVtbl$ExtractThumbnail$LAYOUT() { return IThumbnailExtractorVtbl$ExtractThumbnail$LAYOUT_; }

    static final VarHandle IThumbnailExtractorVtbl$ExtractThumbnail$VH_ = MemoryHandles.asAddressVarHandle(IThumbnailExtractorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ExtractThumbnail")));
    static final java.lang.invoke.VarHandle IThumbnailExtractorVtbl$ExtractThumbnail$VH() { return IThumbnailExtractorVtbl$ExtractThumbnail$VH_; }

    static final MemoryLayout IThumbnailExtractorVtbl$OnFileUpdated$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IThumbnailExtractorVtbl$OnFileUpdated$LAYOUT() { return IThumbnailExtractorVtbl$OnFileUpdated$LAYOUT_; }

    static final VarHandle IThumbnailExtractorVtbl$OnFileUpdated$VH_ = MemoryHandles.asAddressVarHandle(IThumbnailExtractorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnFileUpdated")));
    static final java.lang.invoke.VarHandle IThumbnailExtractorVtbl$OnFileUpdated$VH() { return IThumbnailExtractorVtbl$OnFileUpdated$VH_; }

    static final MemoryLayout IThumbnailExtractor$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IThumbnailExtractor");
    static final jdk.incubator.foreign.MemoryLayout IThumbnailExtractor$struct$LAYOUT() { return IThumbnailExtractor$struct$LAYOUT_; }

    static final MemoryLayout IThumbnailExtractor$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IThumbnailExtractor$lpVtbl$LAYOUT() { return IThumbnailExtractor$lpVtbl$LAYOUT_; }

    static final VarHandle IThumbnailExtractor$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IThumbnailExtractor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IThumbnailExtractor$lpVtbl$VH() { return IThumbnailExtractor$lpVtbl$VH_; }

    static final MemoryLayout IID_IDummyHICONIncluder$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IDummyHICONIncluder$LAYOUT() { return IID_IDummyHICONIncluder$LAYOUT_; }

    static final MemorySegment IID_IDummyHICONIncluder$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IDummyHICONIncluder", IID_IDummyHICONIncluder$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IDummyHICONIncluder$SEGMENT() { return IID_IDummyHICONIncluder$SEGMENT_; }

    static final MemoryLayout IDummyHICONIncluderVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Dummy")
    ).withName("IDummyHICONIncluderVtbl");
    static final jdk.incubator.foreign.MemoryLayout IDummyHICONIncluderVtbl$struct$LAYOUT() { return IDummyHICONIncluderVtbl$struct$LAYOUT_; }

    static final MemoryLayout IDummyHICONIncluderVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDummyHICONIncluderVtbl$QueryInterface$LAYOUT() { return IDummyHICONIncluderVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IDummyHICONIncluderVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IDummyHICONIncluderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IDummyHICONIncluderVtbl$QueryInterface$VH() { return IDummyHICONIncluderVtbl$QueryInterface$VH_; }

    static final MemoryLayout IDummyHICONIncluderVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDummyHICONIncluderVtbl$AddRef$LAYOUT() { return IDummyHICONIncluderVtbl$AddRef$LAYOUT_; }

    static final VarHandle IDummyHICONIncluderVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IDummyHICONIncluderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IDummyHICONIncluderVtbl$AddRef$VH() { return IDummyHICONIncluderVtbl$AddRef$VH_; }

    static final MemoryLayout IDummyHICONIncluderVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDummyHICONIncluderVtbl$Release$LAYOUT() { return IDummyHICONIncluderVtbl$Release$LAYOUT_; }

    static final VarHandle IDummyHICONIncluderVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IDummyHICONIncluderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IDummyHICONIncluderVtbl$Release$VH() { return IDummyHICONIncluderVtbl$Release$VH_; }

    static final MemoryLayout IDummyHICONIncluderVtbl$Dummy$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDummyHICONIncluderVtbl$Dummy$LAYOUT() { return IDummyHICONIncluderVtbl$Dummy$LAYOUT_; }

    static final VarHandle IDummyHICONIncluderVtbl$Dummy$VH_ = MemoryHandles.asAddressVarHandle(IDummyHICONIncluderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Dummy")));
    static final java.lang.invoke.VarHandle IDummyHICONIncluderVtbl$Dummy$VH() { return IDummyHICONIncluderVtbl$Dummy$VH_; }

    static final MemoryLayout IDummyHICONIncluder$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IDummyHICONIncluder");
    static final jdk.incubator.foreign.MemoryLayout IDummyHICONIncluder$struct$LAYOUT() { return IDummyHICONIncluder$struct$LAYOUT_; }

    static final MemoryLayout IDummyHICONIncluder$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDummyHICONIncluder$lpVtbl$LAYOUT() { return IDummyHICONIncluder$lpVtbl$LAYOUT_; }

    static final VarHandle IDummyHICONIncluder$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IDummyHICONIncluder$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IDummyHICONIncluder$lpVtbl$VH() { return IDummyHICONIncluder$lpVtbl$VH_; }

    static final int ServerApplication() { return (int)0L; }

    static final int LibraryApplication() { return (int)1L; }

    static final int IdleShutdown() { return (int)0L; }

    static final int ForcedShutdown() { return (int)1L; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0087_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0087_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0087_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0087_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0087_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0087_v0_0_c_ifspec$VH() { return __MIDL_itf_objidl_0000_0087_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0087_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0087_v0_0_c_ifspec", __MIDL_itf_objidl_0000_0087_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0087_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0087_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0087_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0087_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0087_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0087_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0087_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0087_v0_0_s_ifspec$VH() { return __MIDL_itf_objidl_0000_0087_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0087_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0087_v0_0_s_ifspec", __MIDL_itf_objidl_0000_0087_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0087_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0087_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IProcessLock$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IProcessLock$LAYOUT() { return IID_IProcessLock$LAYOUT_; }

    static final MemorySegment IID_IProcessLock$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IProcessLock", IID_IProcessLock$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IProcessLock$SEGMENT() { return IID_IProcessLock$SEGMENT_; }

    static final MemoryLayout IProcessLockVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("AddRefOnProcess"),
        C_POINTER.withName("ReleaseRefOnProcess")
    ).withName("IProcessLockVtbl");
    static final jdk.incubator.foreign.MemoryLayout IProcessLockVtbl$struct$LAYOUT() { return IProcessLockVtbl$struct$LAYOUT_; }

    static final MemoryLayout IProcessLockVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IProcessLockVtbl$QueryInterface$LAYOUT() { return IProcessLockVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IProcessLockVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IProcessLockVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IProcessLockVtbl$QueryInterface$VH() { return IProcessLockVtbl$QueryInterface$VH_; }

    static final MemoryLayout IProcessLockVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IProcessLockVtbl$AddRef$LAYOUT() { return IProcessLockVtbl$AddRef$LAYOUT_; }

    static final VarHandle IProcessLockVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IProcessLockVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IProcessLockVtbl$AddRef$VH() { return IProcessLockVtbl$AddRef$VH_; }

    static final MemoryLayout IProcessLockVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IProcessLockVtbl$Release$LAYOUT() { return IProcessLockVtbl$Release$LAYOUT_; }

    static final VarHandle IProcessLockVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IProcessLockVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IProcessLockVtbl$Release$VH() { return IProcessLockVtbl$Release$VH_; }

    static final MemoryLayout IProcessLockVtbl$AddRefOnProcess$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IProcessLockVtbl$AddRefOnProcess$LAYOUT() { return IProcessLockVtbl$AddRefOnProcess$LAYOUT_; }

    static final VarHandle IProcessLockVtbl$AddRefOnProcess$VH_ = MemoryHandles.asAddressVarHandle(IProcessLockVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRefOnProcess")));
    static final java.lang.invoke.VarHandle IProcessLockVtbl$AddRefOnProcess$VH() { return IProcessLockVtbl$AddRefOnProcess$VH_; }

    static final MemoryLayout IProcessLockVtbl$ReleaseRefOnProcess$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IProcessLockVtbl$ReleaseRefOnProcess$LAYOUT() { return IProcessLockVtbl$ReleaseRefOnProcess$LAYOUT_; }

    static final VarHandle IProcessLockVtbl$ReleaseRefOnProcess$VH_ = MemoryHandles.asAddressVarHandle(IProcessLockVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReleaseRefOnProcess")));
    static final java.lang.invoke.VarHandle IProcessLockVtbl$ReleaseRefOnProcess$VH() { return IProcessLockVtbl$ReleaseRefOnProcess$VH_; }

    static final MemoryLayout IProcessLock$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IProcessLock");
    static final jdk.incubator.foreign.MemoryLayout IProcessLock$struct$LAYOUT() { return IProcessLock$struct$LAYOUT_; }

    static final MemoryLayout IProcessLock$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IProcessLock$lpVtbl$LAYOUT() { return IProcessLock$lpVtbl$LAYOUT_; }

    static final VarHandle IProcessLock$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IProcessLock$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IProcessLock$lpVtbl$VH() { return IProcessLock$lpVtbl$VH_; }

    static final MemoryLayout IID_ISurrogateService$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_ISurrogateService$LAYOUT() { return IID_ISurrogateService$LAYOUT_; }

    static final MemorySegment IID_ISurrogateService$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ISurrogateService", IID_ISurrogateService$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_ISurrogateService$SEGMENT() { return IID_ISurrogateService$SEGMENT_; }

    static final MemoryLayout ISurrogateServiceVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Init"),
        C_POINTER.withName("ApplicationLaunch"),
        C_POINTER.withName("ApplicationFree"),
        C_POINTER.withName("CatalogRefresh"),
        C_POINTER.withName("ProcessShutdown")
    ).withName("ISurrogateServiceVtbl");
    static final jdk.incubator.foreign.MemoryLayout ISurrogateServiceVtbl$struct$LAYOUT() { return ISurrogateServiceVtbl$struct$LAYOUT_; }

    static final MemoryLayout ISurrogateServiceVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ISurrogateServiceVtbl$QueryInterface$LAYOUT() { return ISurrogateServiceVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ISurrogateServiceVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ISurrogateServiceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle ISurrogateServiceVtbl$QueryInterface$VH() { return ISurrogateServiceVtbl$QueryInterface$VH_; }

    static final MemoryLayout ISurrogateServiceVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ISurrogateServiceVtbl$AddRef$LAYOUT() { return ISurrogateServiceVtbl$AddRef$LAYOUT_; }

    static final VarHandle ISurrogateServiceVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ISurrogateServiceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle ISurrogateServiceVtbl$AddRef$VH() { return ISurrogateServiceVtbl$AddRef$VH_; }

    static final MemoryLayout ISurrogateServiceVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ISurrogateServiceVtbl$Release$LAYOUT() { return ISurrogateServiceVtbl$Release$LAYOUT_; }

    static final VarHandle ISurrogateServiceVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ISurrogateServiceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle ISurrogateServiceVtbl$Release$VH() { return ISurrogateServiceVtbl$Release$VH_; }

    static final MemoryLayout ISurrogateServiceVtbl$Init$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ISurrogateServiceVtbl$Init$LAYOUT() { return ISurrogateServiceVtbl$Init$LAYOUT_; }

    static final VarHandle ISurrogateServiceVtbl$Init$VH_ = MemoryHandles.asAddressVarHandle(ISurrogateServiceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Init")));
    static final java.lang.invoke.VarHandle ISurrogateServiceVtbl$Init$VH() { return ISurrogateServiceVtbl$Init$VH_; }

    static final MemoryLayout ISurrogateServiceVtbl$ApplicationLaunch$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ISurrogateServiceVtbl$ApplicationLaunch$LAYOUT() { return ISurrogateServiceVtbl$ApplicationLaunch$LAYOUT_; }

    static final VarHandle ISurrogateServiceVtbl$ApplicationLaunch$VH_ = MemoryHandles.asAddressVarHandle(ISurrogateServiceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ApplicationLaunch")));
    static final java.lang.invoke.VarHandle ISurrogateServiceVtbl$ApplicationLaunch$VH() { return ISurrogateServiceVtbl$ApplicationLaunch$VH_; }

    static final MemoryLayout ISurrogateServiceVtbl$ApplicationFree$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ISurrogateServiceVtbl$ApplicationFree$LAYOUT() { return ISurrogateServiceVtbl$ApplicationFree$LAYOUT_; }

    static final VarHandle ISurrogateServiceVtbl$ApplicationFree$VH_ = MemoryHandles.asAddressVarHandle(ISurrogateServiceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ApplicationFree")));
    static final java.lang.invoke.VarHandle ISurrogateServiceVtbl$ApplicationFree$VH() { return ISurrogateServiceVtbl$ApplicationFree$VH_; }

    static final MemoryLayout ISurrogateServiceVtbl$CatalogRefresh$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ISurrogateServiceVtbl$CatalogRefresh$LAYOUT() { return ISurrogateServiceVtbl$CatalogRefresh$LAYOUT_; }

    static final VarHandle ISurrogateServiceVtbl$CatalogRefresh$VH_ = MemoryHandles.asAddressVarHandle(ISurrogateServiceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CatalogRefresh")));
    static final java.lang.invoke.VarHandle ISurrogateServiceVtbl$CatalogRefresh$VH() { return ISurrogateServiceVtbl$CatalogRefresh$VH_; }

    static final MemoryLayout ISurrogateServiceVtbl$ProcessShutdown$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ISurrogateServiceVtbl$ProcessShutdown$LAYOUT() { return ISurrogateServiceVtbl$ProcessShutdown$LAYOUT_; }

    static final VarHandle ISurrogateServiceVtbl$ProcessShutdown$VH_ = MemoryHandles.asAddressVarHandle(ISurrogateServiceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ProcessShutdown")));
    static final java.lang.invoke.VarHandle ISurrogateServiceVtbl$ProcessShutdown$VH() { return ISurrogateServiceVtbl$ProcessShutdown$VH_; }

    static final MemoryLayout ISurrogateService$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ISurrogateService");
    static final jdk.incubator.foreign.MemoryLayout ISurrogateService$struct$LAYOUT() { return ISurrogateService$struct$LAYOUT_; }

    static final MemoryLayout ISurrogateService$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ISurrogateService$lpVtbl$LAYOUT() { return ISurrogateService$lpVtbl$LAYOUT_; }

    static final VarHandle ISurrogateService$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ISurrogateService$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle ISurrogateService$lpVtbl$VH() { return ISurrogateService$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0089_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0089_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0089_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0089_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0089_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0089_v0_0_c_ifspec$VH() { return __MIDL_itf_objidl_0000_0089_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0089_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0089_v0_0_c_ifspec", __MIDL_itf_objidl_0000_0089_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0089_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0089_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0089_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0089_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0089_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0089_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0089_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0089_v0_0_s_ifspec$VH() { return __MIDL_itf_objidl_0000_0089_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0089_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0089_v0_0_s_ifspec", __MIDL_itf_objidl_0000_0089_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0089_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0089_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IInitializeSpy$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IInitializeSpy$LAYOUT() { return IID_IInitializeSpy$LAYOUT_; }

    static final MemorySegment IID_IInitializeSpy$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IInitializeSpy", IID_IInitializeSpy$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IInitializeSpy$SEGMENT() { return IID_IInitializeSpy$SEGMENT_; }

    static final MemoryLayout IInitializeSpyVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("PreInitialize"),
        C_POINTER.withName("PostInitialize"),
        C_POINTER.withName("PreUninitialize"),
        C_POINTER.withName("PostUninitialize")
    ).withName("IInitializeSpyVtbl");
    static final jdk.incubator.foreign.MemoryLayout IInitializeSpyVtbl$struct$LAYOUT() { return IInitializeSpyVtbl$struct$LAYOUT_; }

    static final MemoryLayout IInitializeSpyVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IInitializeSpyVtbl$QueryInterface$LAYOUT() { return IInitializeSpyVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IInitializeSpyVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IInitializeSpyVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IInitializeSpyVtbl$QueryInterface$VH() { return IInitializeSpyVtbl$QueryInterface$VH_; }

    static final MemoryLayout IInitializeSpyVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IInitializeSpyVtbl$AddRef$LAYOUT() { return IInitializeSpyVtbl$AddRef$LAYOUT_; }

    static final VarHandle IInitializeSpyVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IInitializeSpyVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IInitializeSpyVtbl$AddRef$VH() { return IInitializeSpyVtbl$AddRef$VH_; }

    static final MemoryLayout IInitializeSpyVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IInitializeSpyVtbl$Release$LAYOUT() { return IInitializeSpyVtbl$Release$LAYOUT_; }

    static final VarHandle IInitializeSpyVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IInitializeSpyVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IInitializeSpyVtbl$Release$VH() { return IInitializeSpyVtbl$Release$VH_; }

    static final MemoryLayout IInitializeSpyVtbl$PreInitialize$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IInitializeSpyVtbl$PreInitialize$LAYOUT() { return IInitializeSpyVtbl$PreInitialize$LAYOUT_; }

    static final VarHandle IInitializeSpyVtbl$PreInitialize$VH_ = MemoryHandles.asAddressVarHandle(IInitializeSpyVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("PreInitialize")));
    static final java.lang.invoke.VarHandle IInitializeSpyVtbl$PreInitialize$VH() { return IInitializeSpyVtbl$PreInitialize$VH_; }

    static final MemoryLayout IInitializeSpyVtbl$PostInitialize$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IInitializeSpyVtbl$PostInitialize$LAYOUT() { return IInitializeSpyVtbl$PostInitialize$LAYOUT_; }

    static final VarHandle IInitializeSpyVtbl$PostInitialize$VH_ = MemoryHandles.asAddressVarHandle(IInitializeSpyVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("PostInitialize")));
    static final java.lang.invoke.VarHandle IInitializeSpyVtbl$PostInitialize$VH() { return IInitializeSpyVtbl$PostInitialize$VH_; }

    static final MemoryLayout IInitializeSpyVtbl$PreUninitialize$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IInitializeSpyVtbl$PreUninitialize$LAYOUT() { return IInitializeSpyVtbl$PreUninitialize$LAYOUT_; }

    static final VarHandle IInitializeSpyVtbl$PreUninitialize$VH_ = MemoryHandles.asAddressVarHandle(IInitializeSpyVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("PreUninitialize")));
    static final java.lang.invoke.VarHandle IInitializeSpyVtbl$PreUninitialize$VH() { return IInitializeSpyVtbl$PreUninitialize$VH_; }

    static final MemoryLayout IInitializeSpyVtbl$PostUninitialize$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IInitializeSpyVtbl$PostUninitialize$LAYOUT() { return IInitializeSpyVtbl$PostUninitialize$LAYOUT_; }

    static final VarHandle IInitializeSpyVtbl$PostUninitialize$VH_ = MemoryHandles.asAddressVarHandle(IInitializeSpyVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("PostUninitialize")));
    static final java.lang.invoke.VarHandle IInitializeSpyVtbl$PostUninitialize$VH() { return IInitializeSpyVtbl$PostUninitialize$VH_; }

    static final MemoryLayout IInitializeSpy$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IInitializeSpy");
    static final jdk.incubator.foreign.MemoryLayout IInitializeSpy$struct$LAYOUT() { return IInitializeSpy$struct$LAYOUT_; }

    static final MemoryLayout IInitializeSpy$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IInitializeSpy$lpVtbl$LAYOUT() { return IInitializeSpy$lpVtbl$LAYOUT_; }

    static final VarHandle IInitializeSpy$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IInitializeSpy$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IInitializeSpy$lpVtbl$VH() { return IInitializeSpy$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0090_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0090_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0090_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0090_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0090_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0090_v0_0_c_ifspec$VH() { return __MIDL_itf_objidl_0000_0090_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0090_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0090_v0_0_c_ifspec", __MIDL_itf_objidl_0000_0090_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0090_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0090_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0090_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0090_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0090_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0090_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0090_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0090_v0_0_s_ifspec$VH() { return __MIDL_itf_objidl_0000_0090_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0090_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0090_v0_0_s_ifspec", __MIDL_itf_objidl_0000_0090_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0090_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0090_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IApartmentShutdown$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IApartmentShutdown$LAYOUT() { return IID_IApartmentShutdown$LAYOUT_; }

    static final MemorySegment IID_IApartmentShutdown$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IApartmentShutdown", IID_IApartmentShutdown$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IApartmentShutdown$SEGMENT() { return IID_IApartmentShutdown$SEGMENT_; }

    static final MemoryLayout IApartmentShutdownVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("OnUninitialize")
    ).withName("IApartmentShutdownVtbl");
    static final jdk.incubator.foreign.MemoryLayout IApartmentShutdownVtbl$struct$LAYOUT() { return IApartmentShutdownVtbl$struct$LAYOUT_; }

    static final MemoryLayout IApartmentShutdownVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IApartmentShutdownVtbl$QueryInterface$LAYOUT() { return IApartmentShutdownVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IApartmentShutdownVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IApartmentShutdownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IApartmentShutdownVtbl$QueryInterface$VH() { return IApartmentShutdownVtbl$QueryInterface$VH_; }

    static final MemoryLayout IApartmentShutdownVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IApartmentShutdownVtbl$AddRef$LAYOUT() { return IApartmentShutdownVtbl$AddRef$LAYOUT_; }

    static final VarHandle IApartmentShutdownVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IApartmentShutdownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IApartmentShutdownVtbl$AddRef$VH() { return IApartmentShutdownVtbl$AddRef$VH_; }

    static final MemoryLayout IApartmentShutdownVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IApartmentShutdownVtbl$Release$LAYOUT() { return IApartmentShutdownVtbl$Release$LAYOUT_; }

    static final VarHandle IApartmentShutdownVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IApartmentShutdownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IApartmentShutdownVtbl$Release$VH() { return IApartmentShutdownVtbl$Release$VH_; }

    static final MemoryLayout IApartmentShutdownVtbl$OnUninitialize$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IApartmentShutdownVtbl$OnUninitialize$LAYOUT() { return IApartmentShutdownVtbl$OnUninitialize$LAYOUT_; }

    static final VarHandle IApartmentShutdownVtbl$OnUninitialize$VH_ = MemoryHandles.asAddressVarHandle(IApartmentShutdownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnUninitialize")));
    static final java.lang.invoke.VarHandle IApartmentShutdownVtbl$OnUninitialize$VH() { return IApartmentShutdownVtbl$OnUninitialize$VH_; }

    static final MemoryLayout IApartmentShutdown$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IApartmentShutdown");
    static final jdk.incubator.foreign.MemoryLayout IApartmentShutdown$struct$LAYOUT() { return IApartmentShutdown$struct$LAYOUT_; }

    static final MemoryLayout IApartmentShutdown$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IApartmentShutdown$lpVtbl$LAYOUT() { return IApartmentShutdown$lpVtbl$LAYOUT_; }

    static final VarHandle IApartmentShutdown$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IApartmentShutdown$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IApartmentShutdown$lpVtbl$VH() { return IApartmentShutdown$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0091_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0091_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0091_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0091_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0091_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0091_v0_0_c_ifspec$VH() { return __MIDL_itf_objidl_0000_0091_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0091_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0091_v0_0_c_ifspec", __MIDL_itf_objidl_0000_0091_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0091_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0091_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0091_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0091_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0091_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0091_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0091_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0091_v0_0_s_ifspec$VH() { return __MIDL_itf_objidl_0000_0091_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0091_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0091_v0_0_s_ifspec", __MIDL_itf_objidl_0000_0091_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0091_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0091_v0_0_s_ifspec$SEGMENT_; }

    static final FunctionDescriptor ASYNC_STGMEDIUM_UserSize$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ASYNC_STGMEDIUM_UserSize$FUNC() { return ASYNC_STGMEDIUM_UserSize$FUNC_; }

    static final MethodHandle ASYNC_STGMEDIUM_UserSize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ASYNC_STGMEDIUM_UserSize",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ASYNC_STGMEDIUM_UserSize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ASYNC_STGMEDIUM_UserSize$MH() { return ASYNC_STGMEDIUM_UserSize$MH_; }

    static final FunctionDescriptor ASYNC_STGMEDIUM_UserMarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ASYNC_STGMEDIUM_UserMarshal$FUNC() { return ASYNC_STGMEDIUM_UserMarshal$FUNC_; }

    static final MethodHandle ASYNC_STGMEDIUM_UserMarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ASYNC_STGMEDIUM_UserMarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        ASYNC_STGMEDIUM_UserMarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ASYNC_STGMEDIUM_UserMarshal$MH() { return ASYNC_STGMEDIUM_UserMarshal$MH_; }

    static final FunctionDescriptor ASYNC_STGMEDIUM_UserUnmarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ASYNC_STGMEDIUM_UserUnmarshal$FUNC() { return ASYNC_STGMEDIUM_UserUnmarshal$FUNC_; }

    static final MethodHandle ASYNC_STGMEDIUM_UserUnmarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ASYNC_STGMEDIUM_UserUnmarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        ASYNC_STGMEDIUM_UserUnmarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ASYNC_STGMEDIUM_UserUnmarshal$MH() { return ASYNC_STGMEDIUM_UserUnmarshal$MH_; }

    static final FunctionDescriptor ASYNC_STGMEDIUM_UserFree$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ASYNC_STGMEDIUM_UserFree$FUNC() { return ASYNC_STGMEDIUM_UserFree$FUNC_; }

    static final MethodHandle ASYNC_STGMEDIUM_UserFree$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ASYNC_STGMEDIUM_UserFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        ASYNC_STGMEDIUM_UserFree$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ASYNC_STGMEDIUM_UserFree$MH() { return ASYNC_STGMEDIUM_UserFree$MH_; }

    static final FunctionDescriptor CLIPFORMAT_UserSize$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CLIPFORMAT_UserSize$FUNC() { return CLIPFORMAT_UserSize$FUNC_; }

    static final MethodHandle CLIPFORMAT_UserSize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CLIPFORMAT_UserSize",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        CLIPFORMAT_UserSize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CLIPFORMAT_UserSize$MH() { return CLIPFORMAT_UserSize$MH_; }

    static final FunctionDescriptor CLIPFORMAT_UserMarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CLIPFORMAT_UserMarshal$FUNC() { return CLIPFORMAT_UserMarshal$FUNC_; }

    static final MethodHandle CLIPFORMAT_UserMarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CLIPFORMAT_UserMarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CLIPFORMAT_UserMarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CLIPFORMAT_UserMarshal$MH() { return CLIPFORMAT_UserMarshal$MH_; }

    static final FunctionDescriptor CLIPFORMAT_UserUnmarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CLIPFORMAT_UserUnmarshal$FUNC() { return CLIPFORMAT_UserUnmarshal$FUNC_; }

    static final MethodHandle CLIPFORMAT_UserUnmarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CLIPFORMAT_UserUnmarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CLIPFORMAT_UserUnmarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CLIPFORMAT_UserUnmarshal$MH() { return CLIPFORMAT_UserUnmarshal$MH_; }

    static final FunctionDescriptor CLIPFORMAT_UserFree$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CLIPFORMAT_UserFree$FUNC() { return CLIPFORMAT_UserFree$FUNC_; }

    static final MethodHandle CLIPFORMAT_UserFree$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CLIPFORMAT_UserFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        CLIPFORMAT_UserFree$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CLIPFORMAT_UserFree$MH() { return CLIPFORMAT_UserFree$MH_; }

    static final FunctionDescriptor FLAG_STGMEDIUM_UserSize$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FLAG_STGMEDIUM_UserSize$FUNC() { return FLAG_STGMEDIUM_UserSize$FUNC_; }

    static final MethodHandle FLAG_STGMEDIUM_UserSize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FLAG_STGMEDIUM_UserSize",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        FLAG_STGMEDIUM_UserSize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FLAG_STGMEDIUM_UserSize$MH() { return FLAG_STGMEDIUM_UserSize$MH_; }

    static final FunctionDescriptor FLAG_STGMEDIUM_UserMarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FLAG_STGMEDIUM_UserMarshal$FUNC() { return FLAG_STGMEDIUM_UserMarshal$FUNC_; }

    static final MethodHandle FLAG_STGMEDIUM_UserMarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FLAG_STGMEDIUM_UserMarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        FLAG_STGMEDIUM_UserMarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FLAG_STGMEDIUM_UserMarshal$MH() { return FLAG_STGMEDIUM_UserMarshal$MH_; }

    static final FunctionDescriptor FLAG_STGMEDIUM_UserUnmarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FLAG_STGMEDIUM_UserUnmarshal$FUNC() { return FLAG_STGMEDIUM_UserUnmarshal$FUNC_; }

    static final MethodHandle FLAG_STGMEDIUM_UserUnmarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FLAG_STGMEDIUM_UserUnmarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        FLAG_STGMEDIUM_UserUnmarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FLAG_STGMEDIUM_UserUnmarshal$MH() { return FLAG_STGMEDIUM_UserUnmarshal$MH_; }

    static final FunctionDescriptor FLAG_STGMEDIUM_UserFree$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FLAG_STGMEDIUM_UserFree$FUNC() { return FLAG_STGMEDIUM_UserFree$FUNC_; }

    static final MethodHandle FLAG_STGMEDIUM_UserFree$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FLAG_STGMEDIUM_UserFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        FLAG_STGMEDIUM_UserFree$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FLAG_STGMEDIUM_UserFree$MH() { return FLAG_STGMEDIUM_UserFree$MH_; }

    static final FunctionDescriptor HBITMAP_UserSize$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HBITMAP_UserSize$FUNC() { return HBITMAP_UserSize$FUNC_; }

    static final MethodHandle HBITMAP_UserSize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HBITMAP_UserSize",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        HBITMAP_UserSize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HBITMAP_UserSize$MH() { return HBITMAP_UserSize$MH_; }

    static final FunctionDescriptor HBITMAP_UserMarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HBITMAP_UserMarshal$FUNC() { return HBITMAP_UserMarshal$FUNC_; }

    static final MethodHandle HBITMAP_UserMarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HBITMAP_UserMarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HBITMAP_UserMarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HBITMAP_UserMarshal$MH() { return HBITMAP_UserMarshal$MH_; }

    static final FunctionDescriptor HBITMAP_UserUnmarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HBITMAP_UserUnmarshal$FUNC() { return HBITMAP_UserUnmarshal$FUNC_; }

    static final MethodHandle HBITMAP_UserUnmarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HBITMAP_UserUnmarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HBITMAP_UserUnmarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HBITMAP_UserUnmarshal$MH() { return HBITMAP_UserUnmarshal$MH_; }

    static final FunctionDescriptor HBITMAP_UserFree$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HBITMAP_UserFree$FUNC() { return HBITMAP_UserFree$FUNC_; }

    static final MethodHandle HBITMAP_UserFree$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HBITMAP_UserFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        HBITMAP_UserFree$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HBITMAP_UserFree$MH() { return HBITMAP_UserFree$MH_; }

    static final FunctionDescriptor HDC_UserSize$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HDC_UserSize$FUNC() { return HDC_UserSize$FUNC_; }

    static final MethodHandle HDC_UserSize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HDC_UserSize",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        HDC_UserSize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HDC_UserSize$MH() { return HDC_UserSize$MH_; }

    static final FunctionDescriptor HDC_UserMarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HDC_UserMarshal$FUNC() { return HDC_UserMarshal$FUNC_; }

    static final MethodHandle HDC_UserMarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HDC_UserMarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HDC_UserMarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HDC_UserMarshal$MH() { return HDC_UserMarshal$MH_; }

    static final FunctionDescriptor HDC_UserUnmarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HDC_UserUnmarshal$FUNC() { return HDC_UserUnmarshal$FUNC_; }

    static final MethodHandle HDC_UserUnmarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HDC_UserUnmarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HDC_UserUnmarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HDC_UserUnmarshal$MH() { return HDC_UserUnmarshal$MH_; }

    static final FunctionDescriptor HDC_UserFree$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HDC_UserFree$FUNC() { return HDC_UserFree$FUNC_; }

    static final MethodHandle HDC_UserFree$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HDC_UserFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        HDC_UserFree$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HDC_UserFree$MH() { return HDC_UserFree$MH_; }

    static final FunctionDescriptor HICON_UserSize$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HICON_UserSize$FUNC() { return HICON_UserSize$FUNC_; }

    static final MethodHandle HICON_UserSize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HICON_UserSize",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        HICON_UserSize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HICON_UserSize$MH() { return HICON_UserSize$MH_; }

    static final FunctionDescriptor HICON_UserMarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HICON_UserMarshal$FUNC() { return HICON_UserMarshal$FUNC_; }

    static final MethodHandle HICON_UserMarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HICON_UserMarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HICON_UserMarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HICON_UserMarshal$MH() { return HICON_UserMarshal$MH_; }

    static final FunctionDescriptor HICON_UserUnmarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HICON_UserUnmarshal$FUNC() { return HICON_UserUnmarshal$FUNC_; }

    static final MethodHandle HICON_UserUnmarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HICON_UserUnmarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HICON_UserUnmarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HICON_UserUnmarshal$MH() { return HICON_UserUnmarshal$MH_; }

    static final FunctionDescriptor HICON_UserFree$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HICON_UserFree$FUNC() { return HICON_UserFree$FUNC_; }

    static final MethodHandle HICON_UserFree$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HICON_UserFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        HICON_UserFree$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HICON_UserFree$MH() { return HICON_UserFree$MH_; }

    static final FunctionDescriptor SNB_UserSize$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SNB_UserSize$FUNC() { return SNB_UserSize$FUNC_; }

    static final MethodHandle SNB_UserSize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SNB_UserSize",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        SNB_UserSize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SNB_UserSize$MH() { return SNB_UserSize$MH_; }

    static final FunctionDescriptor SNB_UserMarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SNB_UserMarshal$FUNC() { return SNB_UserMarshal$FUNC_; }

    static final MethodHandle SNB_UserMarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SNB_UserMarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        SNB_UserMarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SNB_UserMarshal$MH() { return SNB_UserMarshal$MH_; }

    static final FunctionDescriptor SNB_UserUnmarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SNB_UserUnmarshal$FUNC() { return SNB_UserUnmarshal$FUNC_; }

    static final MethodHandle SNB_UserUnmarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SNB_UserUnmarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        SNB_UserUnmarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SNB_UserUnmarshal$MH() { return SNB_UserUnmarshal$MH_; }

    static final FunctionDescriptor SNB_UserFree$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SNB_UserFree$FUNC() { return SNB_UserFree$FUNC_; }

    static final MethodHandle SNB_UserFree$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SNB_UserFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        SNB_UserFree$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SNB_UserFree$MH() { return SNB_UserFree$MH_; }

    static final FunctionDescriptor STGMEDIUM_UserSize$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor STGMEDIUM_UserSize$FUNC() { return STGMEDIUM_UserSize$FUNC_; }

    static final MethodHandle STGMEDIUM_UserSize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "STGMEDIUM_UserSize",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        STGMEDIUM_UserSize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle STGMEDIUM_UserSize$MH() { return STGMEDIUM_UserSize$MH_; }

    static final FunctionDescriptor STGMEDIUM_UserMarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor STGMEDIUM_UserMarshal$FUNC() { return STGMEDIUM_UserMarshal$FUNC_; }

    static final MethodHandle STGMEDIUM_UserMarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "STGMEDIUM_UserMarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        STGMEDIUM_UserMarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle STGMEDIUM_UserMarshal$MH() { return STGMEDIUM_UserMarshal$MH_; }

    static final FunctionDescriptor STGMEDIUM_UserUnmarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor STGMEDIUM_UserUnmarshal$FUNC() { return STGMEDIUM_UserUnmarshal$FUNC_; }

    static final MethodHandle STGMEDIUM_UserUnmarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "STGMEDIUM_UserUnmarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        STGMEDIUM_UserUnmarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle STGMEDIUM_UserUnmarshal$MH() { return STGMEDIUM_UserUnmarshal$MH_; }

    static final FunctionDescriptor STGMEDIUM_UserFree$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor STGMEDIUM_UserFree$FUNC() { return STGMEDIUM_UserFree$FUNC_; }

    static final MethodHandle STGMEDIUM_UserFree$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "STGMEDIUM_UserFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        STGMEDIUM_UserFree$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle STGMEDIUM_UserFree$MH() { return STGMEDIUM_UserFree$MH_; }

    static final FunctionDescriptor ASYNC_STGMEDIUM_UserSize64$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ASYNC_STGMEDIUM_UserSize64$FUNC() { return ASYNC_STGMEDIUM_UserSize64$FUNC_; }

    static final MethodHandle ASYNC_STGMEDIUM_UserSize64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ASYNC_STGMEDIUM_UserSize64",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ASYNC_STGMEDIUM_UserSize64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ASYNC_STGMEDIUM_UserSize64$MH() { return ASYNC_STGMEDIUM_UserSize64$MH_; }

    static final FunctionDescriptor ASYNC_STGMEDIUM_UserMarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ASYNC_STGMEDIUM_UserMarshal64$FUNC() { return ASYNC_STGMEDIUM_UserMarshal64$FUNC_; }

    static final MethodHandle ASYNC_STGMEDIUM_UserMarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ASYNC_STGMEDIUM_UserMarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        ASYNC_STGMEDIUM_UserMarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ASYNC_STGMEDIUM_UserMarshal64$MH() { return ASYNC_STGMEDIUM_UserMarshal64$MH_; }

    static final FunctionDescriptor ASYNC_STGMEDIUM_UserUnmarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ASYNC_STGMEDIUM_UserUnmarshal64$FUNC() { return ASYNC_STGMEDIUM_UserUnmarshal64$FUNC_; }

    static final MethodHandle ASYNC_STGMEDIUM_UserUnmarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ASYNC_STGMEDIUM_UserUnmarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        ASYNC_STGMEDIUM_UserUnmarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ASYNC_STGMEDIUM_UserUnmarshal64$MH() { return ASYNC_STGMEDIUM_UserUnmarshal64$MH_; }

    static final FunctionDescriptor ASYNC_STGMEDIUM_UserFree64$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ASYNC_STGMEDIUM_UserFree64$FUNC() { return ASYNC_STGMEDIUM_UserFree64$FUNC_; }

    static final MethodHandle ASYNC_STGMEDIUM_UserFree64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ASYNC_STGMEDIUM_UserFree64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        ASYNC_STGMEDIUM_UserFree64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ASYNC_STGMEDIUM_UserFree64$MH() { return ASYNC_STGMEDIUM_UserFree64$MH_; }

    static final FunctionDescriptor CLIPFORMAT_UserSize64$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CLIPFORMAT_UserSize64$FUNC() { return CLIPFORMAT_UserSize64$FUNC_; }

    static final MethodHandle CLIPFORMAT_UserSize64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CLIPFORMAT_UserSize64",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        CLIPFORMAT_UserSize64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CLIPFORMAT_UserSize64$MH() { return CLIPFORMAT_UserSize64$MH_; }

    static final FunctionDescriptor CLIPFORMAT_UserMarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CLIPFORMAT_UserMarshal64$FUNC() { return CLIPFORMAT_UserMarshal64$FUNC_; }

    static final MethodHandle CLIPFORMAT_UserMarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CLIPFORMAT_UserMarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CLIPFORMAT_UserMarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CLIPFORMAT_UserMarshal64$MH() { return CLIPFORMAT_UserMarshal64$MH_; }

    static final FunctionDescriptor CLIPFORMAT_UserUnmarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CLIPFORMAT_UserUnmarshal64$FUNC() { return CLIPFORMAT_UserUnmarshal64$FUNC_; }

    static final MethodHandle CLIPFORMAT_UserUnmarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CLIPFORMAT_UserUnmarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CLIPFORMAT_UserUnmarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CLIPFORMAT_UserUnmarshal64$MH() { return CLIPFORMAT_UserUnmarshal64$MH_; }

    static final FunctionDescriptor CLIPFORMAT_UserFree64$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CLIPFORMAT_UserFree64$FUNC() { return CLIPFORMAT_UserFree64$FUNC_; }

    static final MethodHandle CLIPFORMAT_UserFree64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CLIPFORMAT_UserFree64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        CLIPFORMAT_UserFree64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CLIPFORMAT_UserFree64$MH() { return CLIPFORMAT_UserFree64$MH_; }

}

