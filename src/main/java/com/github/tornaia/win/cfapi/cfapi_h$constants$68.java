// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$68 extends cfapi_h$constants$67 {

    /* package-private */ cfapi_h$constants$68() {}
    static final MemoryLayout _WIM_PROVIDER_ADD_OVERLAY_INPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("WimType"),
        C_LONG.withName("WimIndex"),
        C_LONG.withName("WimFileNameOffset"),
        C_LONG.withName("WimFileNameLength")
    ).withName("_WIM_PROVIDER_ADD_OVERLAY_INPUT");
    static final jdk.incubator.foreign.MemoryLayout _WIM_PROVIDER_ADD_OVERLAY_INPUT$struct$LAYOUT() { return _WIM_PROVIDER_ADD_OVERLAY_INPUT$struct$LAYOUT_; }

    static final MemoryLayout _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimType$LAYOUT() { return _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimType$LAYOUT_; }

    static final VarHandle _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimType$VH_ = _WIM_PROVIDER_ADD_OVERLAY_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("WimType"));
    static final java.lang.invoke.VarHandle _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimType$VH() { return _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimType$VH_; }

    static final MemoryLayout _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimIndex$LAYOUT() { return _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimIndex$LAYOUT_; }

    static final VarHandle _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimIndex$VH_ = _WIM_PROVIDER_ADD_OVERLAY_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("WimIndex"));
    static final java.lang.invoke.VarHandle _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimIndex$VH() { return _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimIndex$VH_; }

    static final MemoryLayout _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimFileNameOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimFileNameOffset$LAYOUT() { return _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimFileNameOffset$LAYOUT_; }

    static final VarHandle _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimFileNameOffset$VH_ = _WIM_PROVIDER_ADD_OVERLAY_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("WimFileNameOffset"));
    static final java.lang.invoke.VarHandle _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimFileNameOffset$VH() { return _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimFileNameOffset$VH_; }

    static final MemoryLayout _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimFileNameLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimFileNameLength$LAYOUT() { return _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimFileNameLength$LAYOUT_; }

    static final VarHandle _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimFileNameLength$VH_ = _WIM_PROVIDER_ADD_OVERLAY_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("WimFileNameLength"));
    static final java.lang.invoke.VarHandle _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimFileNameLength$VH() { return _WIM_PROVIDER_ADD_OVERLAY_INPUT$WimFileNameLength$VH_; }

    static final MemoryLayout _WIM_PROVIDER_UPDATE_OVERLAY_INPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("DataSourceId"),
        C_LONG.withName("WimFileNameOffset"),
        C_LONG.withName("WimFileNameLength")
    ).withName("_WIM_PROVIDER_UPDATE_OVERLAY_INPUT");
    static final jdk.incubator.foreign.MemoryLayout _WIM_PROVIDER_UPDATE_OVERLAY_INPUT$struct$LAYOUT() { return _WIM_PROVIDER_UPDATE_OVERLAY_INPUT$struct$LAYOUT_; }

    static final MemoryLayout _WIM_PROVIDER_UPDATE_OVERLAY_INPUT$WimFileNameOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WIM_PROVIDER_UPDATE_OVERLAY_INPUT$WimFileNameOffset$LAYOUT() { return _WIM_PROVIDER_UPDATE_OVERLAY_INPUT$WimFileNameOffset$LAYOUT_; }

    static final VarHandle _WIM_PROVIDER_UPDATE_OVERLAY_INPUT$WimFileNameOffset$VH_ = _WIM_PROVIDER_UPDATE_OVERLAY_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("WimFileNameOffset"));
    static final java.lang.invoke.VarHandle _WIM_PROVIDER_UPDATE_OVERLAY_INPUT$WimFileNameOffset$VH() { return _WIM_PROVIDER_UPDATE_OVERLAY_INPUT$WimFileNameOffset$VH_; }

    static final MemoryLayout _WIM_PROVIDER_UPDATE_OVERLAY_INPUT$WimFileNameLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WIM_PROVIDER_UPDATE_OVERLAY_INPUT$WimFileNameLength$LAYOUT() { return _WIM_PROVIDER_UPDATE_OVERLAY_INPUT$WimFileNameLength$LAYOUT_; }

    static final VarHandle _WIM_PROVIDER_UPDATE_OVERLAY_INPUT$WimFileNameLength$VH_ = _WIM_PROVIDER_UPDATE_OVERLAY_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("WimFileNameLength"));
    static final java.lang.invoke.VarHandle _WIM_PROVIDER_UPDATE_OVERLAY_INPUT$WimFileNameLength$VH() { return _WIM_PROVIDER_UPDATE_OVERLAY_INPUT$WimFileNameLength$VH_; }

    static final MemoryLayout _WIM_PROVIDER_REMOVE_OVERLAY_INPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("DataSourceId")
    ).withName("_WIM_PROVIDER_REMOVE_OVERLAY_INPUT");
    static final jdk.incubator.foreign.MemoryLayout _WIM_PROVIDER_REMOVE_OVERLAY_INPUT$struct$LAYOUT() { return _WIM_PROVIDER_REMOVE_OVERLAY_INPUT$struct$LAYOUT_; }

    static final MemoryLayout _WIM_PROVIDER_SUSPEND_OVERLAY_INPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("DataSourceId")
    ).withName("_WIM_PROVIDER_SUSPEND_OVERLAY_INPUT");
    static final jdk.incubator.foreign.MemoryLayout _WIM_PROVIDER_SUSPEND_OVERLAY_INPUT$struct$LAYOUT() { return _WIM_PROVIDER_SUSPEND_OVERLAY_INPUT$struct$LAYOUT_; }

    static final MemoryLayout _WIM_PROVIDER_OVERLAY_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("NextEntryOffset"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("DataSourceId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("WimGuid"),
        C_LONG.withName("WimFileNameOffset"),
        C_LONG.withName("WimType"),
        C_LONG.withName("WimIndex"),
        C_LONG.withName("Flags")
    ).withName("_WIM_PROVIDER_OVERLAY_ENTRY");
    static final jdk.incubator.foreign.MemoryLayout _WIM_PROVIDER_OVERLAY_ENTRY$struct$LAYOUT() { return _WIM_PROVIDER_OVERLAY_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _WIM_PROVIDER_OVERLAY_ENTRY$NextEntryOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WIM_PROVIDER_OVERLAY_ENTRY$NextEntryOffset$LAYOUT() { return _WIM_PROVIDER_OVERLAY_ENTRY$NextEntryOffset$LAYOUT_; }

    static final VarHandle _WIM_PROVIDER_OVERLAY_ENTRY$NextEntryOffset$VH_ = _WIM_PROVIDER_OVERLAY_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NextEntryOffset"));
    static final java.lang.invoke.VarHandle _WIM_PROVIDER_OVERLAY_ENTRY$NextEntryOffset$VH() { return _WIM_PROVIDER_OVERLAY_ENTRY$NextEntryOffset$VH_; }

    static final MemoryLayout _WIM_PROVIDER_OVERLAY_ENTRY$WimFileNameOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WIM_PROVIDER_OVERLAY_ENTRY$WimFileNameOffset$LAYOUT() { return _WIM_PROVIDER_OVERLAY_ENTRY$WimFileNameOffset$LAYOUT_; }

    static final VarHandle _WIM_PROVIDER_OVERLAY_ENTRY$WimFileNameOffset$VH_ = _WIM_PROVIDER_OVERLAY_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("WimFileNameOffset"));
    static final java.lang.invoke.VarHandle _WIM_PROVIDER_OVERLAY_ENTRY$WimFileNameOffset$VH() { return _WIM_PROVIDER_OVERLAY_ENTRY$WimFileNameOffset$VH_; }

    static final MemoryLayout _WIM_PROVIDER_OVERLAY_ENTRY$WimType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WIM_PROVIDER_OVERLAY_ENTRY$WimType$LAYOUT() { return _WIM_PROVIDER_OVERLAY_ENTRY$WimType$LAYOUT_; }

    static final VarHandle _WIM_PROVIDER_OVERLAY_ENTRY$WimType$VH_ = _WIM_PROVIDER_OVERLAY_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("WimType"));
    static final java.lang.invoke.VarHandle _WIM_PROVIDER_OVERLAY_ENTRY$WimType$VH() { return _WIM_PROVIDER_OVERLAY_ENTRY$WimType$VH_; }

    static final MemoryLayout _WIM_PROVIDER_OVERLAY_ENTRY$WimIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WIM_PROVIDER_OVERLAY_ENTRY$WimIndex$LAYOUT() { return _WIM_PROVIDER_OVERLAY_ENTRY$WimIndex$LAYOUT_; }

    static final VarHandle _WIM_PROVIDER_OVERLAY_ENTRY$WimIndex$VH_ = _WIM_PROVIDER_OVERLAY_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("WimIndex"));
    static final java.lang.invoke.VarHandle _WIM_PROVIDER_OVERLAY_ENTRY$WimIndex$VH() { return _WIM_PROVIDER_OVERLAY_ENTRY$WimIndex$VH_; }

    static final MemoryLayout _WIM_PROVIDER_OVERLAY_ENTRY$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WIM_PROVIDER_OVERLAY_ENTRY$Flags$LAYOUT() { return _WIM_PROVIDER_OVERLAY_ENTRY$Flags$LAYOUT_; }

    static final VarHandle _WIM_PROVIDER_OVERLAY_ENTRY$Flags$VH_ = _WIM_PROVIDER_OVERLAY_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _WIM_PROVIDER_OVERLAY_ENTRY$Flags$VH() { return _WIM_PROVIDER_OVERLAY_ENTRY$Flags$VH_; }

    static final MemoryLayout _FILE_PROVIDER_EXTERNAL_INFO_V0$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Algorithm")
    ).withName("_FILE_PROVIDER_EXTERNAL_INFO_V0");
    static final jdk.incubator.foreign.MemoryLayout _FILE_PROVIDER_EXTERNAL_INFO_V0$struct$LAYOUT() { return _FILE_PROVIDER_EXTERNAL_INFO_V0$struct$LAYOUT_; }

    static final MemoryLayout _FILE_PROVIDER_EXTERNAL_INFO_V0$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_PROVIDER_EXTERNAL_INFO_V0$Version$LAYOUT() { return _FILE_PROVIDER_EXTERNAL_INFO_V0$Version$LAYOUT_; }

    static final VarHandle _FILE_PROVIDER_EXTERNAL_INFO_V0$Version$VH_ = _FILE_PROVIDER_EXTERNAL_INFO_V0$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _FILE_PROVIDER_EXTERNAL_INFO_V0$Version$VH() { return _FILE_PROVIDER_EXTERNAL_INFO_V0$Version$VH_; }

    static final MemoryLayout _FILE_PROVIDER_EXTERNAL_INFO_V0$Algorithm$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_PROVIDER_EXTERNAL_INFO_V0$Algorithm$LAYOUT() { return _FILE_PROVIDER_EXTERNAL_INFO_V0$Algorithm$LAYOUT_; }

    static final VarHandle _FILE_PROVIDER_EXTERNAL_INFO_V0$Algorithm$VH_ = _FILE_PROVIDER_EXTERNAL_INFO_V0$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Algorithm"));
    static final java.lang.invoke.VarHandle _FILE_PROVIDER_EXTERNAL_INFO_V0$Algorithm$VH() { return _FILE_PROVIDER_EXTERNAL_INFO_V0$Algorithm$VH_; }

    static final MemoryLayout _FILE_PROVIDER_EXTERNAL_INFO_V1$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Algorithm"),
        C_LONG.withName("Flags")
    ).withName("_FILE_PROVIDER_EXTERNAL_INFO_V1");
    static final jdk.incubator.foreign.MemoryLayout _FILE_PROVIDER_EXTERNAL_INFO_V1$struct$LAYOUT() { return _FILE_PROVIDER_EXTERNAL_INFO_V1$struct$LAYOUT_; }

    static final MemoryLayout _FILE_PROVIDER_EXTERNAL_INFO_V1$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_PROVIDER_EXTERNAL_INFO_V1$Version$LAYOUT() { return _FILE_PROVIDER_EXTERNAL_INFO_V1$Version$LAYOUT_; }

    static final VarHandle _FILE_PROVIDER_EXTERNAL_INFO_V1$Version$VH_ = _FILE_PROVIDER_EXTERNAL_INFO_V1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _FILE_PROVIDER_EXTERNAL_INFO_V1$Version$VH() { return _FILE_PROVIDER_EXTERNAL_INFO_V1$Version$VH_; }

    static final MemoryLayout _FILE_PROVIDER_EXTERNAL_INFO_V1$Algorithm$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_PROVIDER_EXTERNAL_INFO_V1$Algorithm$LAYOUT() { return _FILE_PROVIDER_EXTERNAL_INFO_V1$Algorithm$LAYOUT_; }

    static final VarHandle _FILE_PROVIDER_EXTERNAL_INFO_V1$Algorithm$VH_ = _FILE_PROVIDER_EXTERNAL_INFO_V1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Algorithm"));
    static final java.lang.invoke.VarHandle _FILE_PROVIDER_EXTERNAL_INFO_V1$Algorithm$VH() { return _FILE_PROVIDER_EXTERNAL_INFO_V1$Algorithm$VH_; }

    static final MemoryLayout _FILE_PROVIDER_EXTERNAL_INFO_V1$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_PROVIDER_EXTERNAL_INFO_V1$Flags$LAYOUT() { return _FILE_PROVIDER_EXTERNAL_INFO_V1$Flags$LAYOUT_; }

    static final VarHandle _FILE_PROVIDER_EXTERNAL_INFO_V1$Flags$VH_ = _FILE_PROVIDER_EXTERNAL_INFO_V1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _FILE_PROVIDER_EXTERNAL_INFO_V1$Flags$VH() { return _FILE_PROVIDER_EXTERNAL_INFO_V1$Flags$VH_; }

    static final MemoryLayout _CONTAINER_VOLUME_STATE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags")
    ).withName("_CONTAINER_VOLUME_STATE");
    static final jdk.incubator.foreign.MemoryLayout _CONTAINER_VOLUME_STATE$struct$LAYOUT() { return _CONTAINER_VOLUME_STATE$struct$LAYOUT_; }

    static final MemoryLayout _CONTAINER_VOLUME_STATE$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTAINER_VOLUME_STATE$Flags$LAYOUT() { return _CONTAINER_VOLUME_STATE$Flags$LAYOUT_; }

    static final VarHandle _CONTAINER_VOLUME_STATE$Flags$VH_ = _CONTAINER_VOLUME_STATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _CONTAINER_VOLUME_STATE$Flags$VH() { return _CONTAINER_VOLUME_STATE$Flags$VH_; }

    static final MemoryLayout _CONTAINER_ROOT_INFO_INPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags")
    ).withName("_CONTAINER_ROOT_INFO_INPUT");
    static final jdk.incubator.foreign.MemoryLayout _CONTAINER_ROOT_INFO_INPUT$struct$LAYOUT() { return _CONTAINER_ROOT_INFO_INPUT$struct$LAYOUT_; }

    static final MemoryLayout _CONTAINER_ROOT_INFO_INPUT$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTAINER_ROOT_INFO_INPUT$Flags$LAYOUT() { return _CONTAINER_ROOT_INFO_INPUT$Flags$LAYOUT_; }

    static final VarHandle _CONTAINER_ROOT_INFO_INPUT$Flags$VH_ = _CONTAINER_ROOT_INFO_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _CONTAINER_ROOT_INFO_INPUT$Flags$VH() { return _CONTAINER_ROOT_INFO_INPUT$Flags$VH_; }

    static final MemoryLayout _CONTAINER_ROOT_INFO_OUTPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("ContainerRootIdLength"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("ContainerRootId"),
        MemoryLayout.ofPaddingBits(8)
    ).withName("_CONTAINER_ROOT_INFO_OUTPUT");
    static final jdk.incubator.foreign.MemoryLayout _CONTAINER_ROOT_INFO_OUTPUT$struct$LAYOUT() { return _CONTAINER_ROOT_INFO_OUTPUT$struct$LAYOUT_; }

    static final MemoryLayout _CONTAINER_ROOT_INFO_OUTPUT$ContainerRootIdLength$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _CONTAINER_ROOT_INFO_OUTPUT$ContainerRootIdLength$LAYOUT() { return _CONTAINER_ROOT_INFO_OUTPUT$ContainerRootIdLength$LAYOUT_; }

    static final VarHandle _CONTAINER_ROOT_INFO_OUTPUT$ContainerRootIdLength$VH_ = _CONTAINER_ROOT_INFO_OUTPUT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ContainerRootIdLength"));
    static final java.lang.invoke.VarHandle _CONTAINER_ROOT_INFO_OUTPUT$ContainerRootIdLength$VH() { return _CONTAINER_ROOT_INFO_OUTPUT$ContainerRootIdLength$VH_; }

    static final MemoryLayout _VIRTUALIZATION_INSTANCE_INFO_INPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("NumberOfWorkerThreads"),
        C_LONG.withName("Flags")
    ).withName("_VIRTUALIZATION_INSTANCE_INFO_INPUT");
    static final jdk.incubator.foreign.MemoryLayout _VIRTUALIZATION_INSTANCE_INFO_INPUT$struct$LAYOUT() { return _VIRTUALIZATION_INSTANCE_INFO_INPUT$struct$LAYOUT_; }

    static final MemoryLayout _VIRTUALIZATION_INSTANCE_INFO_INPUT$NumberOfWorkerThreads$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _VIRTUALIZATION_INSTANCE_INFO_INPUT$NumberOfWorkerThreads$LAYOUT() { return _VIRTUALIZATION_INSTANCE_INFO_INPUT$NumberOfWorkerThreads$LAYOUT_; }

    static final VarHandle _VIRTUALIZATION_INSTANCE_INFO_INPUT$NumberOfWorkerThreads$VH_ = _VIRTUALIZATION_INSTANCE_INFO_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfWorkerThreads"));
    static final java.lang.invoke.VarHandle _VIRTUALIZATION_INSTANCE_INFO_INPUT$NumberOfWorkerThreads$VH() { return _VIRTUALIZATION_INSTANCE_INFO_INPUT$NumberOfWorkerThreads$VH_; }

    static final MemoryLayout _VIRTUALIZATION_INSTANCE_INFO_INPUT$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _VIRTUALIZATION_INSTANCE_INFO_INPUT$Flags$LAYOUT() { return _VIRTUALIZATION_INSTANCE_INFO_INPUT$Flags$LAYOUT_; }

    static final VarHandle _VIRTUALIZATION_INSTANCE_INFO_INPUT$Flags$VH_ = _VIRTUALIZATION_INSTANCE_INFO_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _VIRTUALIZATION_INSTANCE_INFO_INPUT$Flags$VH() { return _VIRTUALIZATION_INSTANCE_INFO_INPUT$Flags$VH_; }

    static final MemoryLayout _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("HeaderSize"),
        MemoryLayout.ofPaddingBits(16),
        C_LONG.withName("Flags"),
        C_LONG.withName("NotificationInfoSize"),
        C_SHORT.withName("NotificationInfoOffset"),
        C_SHORT.withName("ProviderMajorVersion")
    ).withName("_VIRTUALIZATION_INSTANCE_INFO_INPUT_EX");
    static final jdk.incubator.foreign.MemoryLayout _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$struct$LAYOUT() { return _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$struct$LAYOUT_; }

    static final MemoryLayout _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$HeaderSize$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$HeaderSize$LAYOUT() { return _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$HeaderSize$LAYOUT_; }

    static final VarHandle _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$HeaderSize$VH_ = _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("HeaderSize"));
    static final java.lang.invoke.VarHandle _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$HeaderSize$VH() { return _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$HeaderSize$VH_; }

    static final MemoryLayout _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$Flags$LAYOUT() { return _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$Flags$LAYOUT_; }

    static final VarHandle _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$Flags$VH_ = _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$Flags$VH() { return _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$Flags$VH_; }

    static final MemoryLayout _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$NotificationInfoSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$NotificationInfoSize$LAYOUT() { return _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$NotificationInfoSize$LAYOUT_; }

    static final VarHandle _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$NotificationInfoSize$VH_ = _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NotificationInfoSize"));
    static final java.lang.invoke.VarHandle _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$NotificationInfoSize$VH() { return _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$NotificationInfoSize$VH_; }

    static final MemoryLayout _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$NotificationInfoOffset$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$NotificationInfoOffset$LAYOUT() { return _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$NotificationInfoOffset$LAYOUT_; }

    static final VarHandle _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$NotificationInfoOffset$VH_ = _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("NotificationInfoOffset"));
    static final java.lang.invoke.VarHandle _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$NotificationInfoOffset$VH() { return _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$NotificationInfoOffset$VH_; }

    static final MemoryLayout _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$ProviderMajorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$ProviderMajorVersion$LAYOUT() { return _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$ProviderMajorVersion$LAYOUT_; }

    static final VarHandle _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$ProviderMajorVersion$VH_ = _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ProviderMajorVersion"));
    static final java.lang.invoke.VarHandle _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$ProviderMajorVersion$VH() { return _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX$ProviderMajorVersion$VH_; }

    static final MemoryLayout _VIRTUALIZATION_INSTANCE_INFO_OUTPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("VirtualizationInstanceID")
    ).withName("_VIRTUALIZATION_INSTANCE_INFO_OUTPUT");
    static final jdk.incubator.foreign.MemoryLayout _VIRTUALIZATION_INSTANCE_INFO_OUTPUT$struct$LAYOUT() { return _VIRTUALIZATION_INSTANCE_INFO_OUTPUT$struct$LAYOUT_; }

    static final MemoryLayout _GET_FILTER_FILE_IDENTIFIER_INPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("AltitudeLength"),
        MemoryLayout.ofSequence(1, C_SHORT).withName("Altitude")
    ).withName("_GET_FILTER_FILE_IDENTIFIER_INPUT");
    static final jdk.incubator.foreign.MemoryLayout _GET_FILTER_FILE_IDENTIFIER_INPUT$struct$LAYOUT() { return _GET_FILTER_FILE_IDENTIFIER_INPUT$struct$LAYOUT_; }

    static final MemoryLayout _GET_FILTER_FILE_IDENTIFIER_INPUT$AltitudeLength$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _GET_FILTER_FILE_IDENTIFIER_INPUT$AltitudeLength$LAYOUT() { return _GET_FILTER_FILE_IDENTIFIER_INPUT$AltitudeLength$LAYOUT_; }

    static final VarHandle _GET_FILTER_FILE_IDENTIFIER_INPUT$AltitudeLength$VH_ = _GET_FILTER_FILE_IDENTIFIER_INPUT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AltitudeLength"));
    static final java.lang.invoke.VarHandle _GET_FILTER_FILE_IDENTIFIER_INPUT$AltitudeLength$VH() { return _GET_FILTER_FILE_IDENTIFIER_INPUT$AltitudeLength$VH_; }

    static final MemoryLayout _GET_FILTER_FILE_IDENTIFIER_OUTPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("FilterFileIdentifierLength"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("FilterFileIdentifier"),
        MemoryLayout.ofPaddingBits(8)
    ).withName("_GET_FILTER_FILE_IDENTIFIER_OUTPUT");
    static final jdk.incubator.foreign.MemoryLayout _GET_FILTER_FILE_IDENTIFIER_OUTPUT$struct$LAYOUT() { return _GET_FILTER_FILE_IDENTIFIER_OUTPUT$struct$LAYOUT_; }

    static final MemoryLayout _GET_FILTER_FILE_IDENTIFIER_OUTPUT$FilterFileIdentifierLength$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _GET_FILTER_FILE_IDENTIFIER_OUTPUT$FilterFileIdentifierLength$LAYOUT() { return _GET_FILTER_FILE_IDENTIFIER_OUTPUT$FilterFileIdentifierLength$LAYOUT_; }

    static final VarHandle _GET_FILTER_FILE_IDENTIFIER_OUTPUT$FilterFileIdentifierLength$VH_ = _GET_FILTER_FILE_IDENTIFIER_OUTPUT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("FilterFileIdentifierLength"));
    static final java.lang.invoke.VarHandle _GET_FILTER_FILE_IDENTIFIER_OUTPUT$FilterFileIdentifierLength$VH() { return _GET_FILTER_FILE_IDENTIFIER_OUTPUT$FilterFileIdentifierLength$VH_; }

    static final MemoryLayout _DISK_EXTENT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("DiskNumber"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("StartingOffset"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("ExtentLength")
    ).withName("_DISK_EXTENT");
    static final jdk.incubator.foreign.MemoryLayout _DISK_EXTENT$struct$LAYOUT() { return _DISK_EXTENT$struct$LAYOUT_; }

    static final MemoryLayout _DISK_EXTENT$DiskNumber$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DISK_EXTENT$DiskNumber$LAYOUT() { return _DISK_EXTENT$DiskNumber$LAYOUT_; }

    static final VarHandle _DISK_EXTENT$DiskNumber$VH_ = _DISK_EXTENT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DiskNumber"));
    static final java.lang.invoke.VarHandle _DISK_EXTENT$DiskNumber$VH() { return _DISK_EXTENT$DiskNumber$VH_; }

    static final MemoryLayout _VOLUME_DISK_EXTENTS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("NumberOfDiskExtents"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONG.withName("DiskNumber"),
            MemoryLayout.ofPaddingBits(32),
            MemoryLayout.ofUnion(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("LowPart"),
                    C_LONG.withName("HighPart")
                ).withName("u"),
                C_LONGLONG.withName("QuadPart")
            ).withName("StartingOffset"),
            MemoryLayout.ofUnion(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("LowPart"),
                    C_LONG.withName("HighPart")
                ).withName("u"),
                C_LONGLONG.withName("QuadPart")
            ).withName("ExtentLength")
        ).withName("_DISK_EXTENT")).withName("Extents")
    ).withName("_VOLUME_DISK_EXTENTS");
    static final jdk.incubator.foreign.MemoryLayout _VOLUME_DISK_EXTENTS$struct$LAYOUT() { return _VOLUME_DISK_EXTENTS$struct$LAYOUT_; }

    static final MemoryLayout _VOLUME_DISK_EXTENTS$NumberOfDiskExtents$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _VOLUME_DISK_EXTENTS$NumberOfDiskExtents$LAYOUT() { return _VOLUME_DISK_EXTENTS$NumberOfDiskExtents$LAYOUT_; }

    static final VarHandle _VOLUME_DISK_EXTENTS$NumberOfDiskExtents$VH_ = _VOLUME_DISK_EXTENTS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfDiskExtents"));
    static final java.lang.invoke.VarHandle _VOLUME_DISK_EXTENTS$NumberOfDiskExtents$VH() { return _VOLUME_DISK_EXTENTS$NumberOfDiskExtents$VH_; }

    static final MemoryLayout _VOLUME_GET_GPT_ATTRIBUTES_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("GptAttributes")
    ).withName("_VOLUME_GET_GPT_ATTRIBUTES_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _VOLUME_GET_GPT_ATTRIBUTES_INFORMATION$struct$LAYOUT() { return _VOLUME_GET_GPT_ATTRIBUTES_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _VOLUME_GET_GPT_ATTRIBUTES_INFORMATION$GptAttributes$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _VOLUME_GET_GPT_ATTRIBUTES_INFORMATION$GptAttributes$LAYOUT() { return _VOLUME_GET_GPT_ATTRIBUTES_INFORMATION$GptAttributes$LAYOUT_; }

    static final VarHandle _VOLUME_GET_GPT_ATTRIBUTES_INFORMATION$GptAttributes$VH_ = _VOLUME_GET_GPT_ATTRIBUTES_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GptAttributes"));
    static final java.lang.invoke.VarHandle _VOLUME_GET_GPT_ATTRIBUTES_INFORMATION$GptAttributes$VH() { return _VOLUME_GET_GPT_ATTRIBUTES_INFORMATION$GptAttributes$VH_; }

    static final MemoryLayout _IO_IRP_EXT_TRACK_OFFSET_HEADER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("Validation"),
        C_SHORT.withName("Flags"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("TrackedOffsetCallback")
    ).withName("_IO_IRP_EXT_TRACK_OFFSET_HEADER");
    static final jdk.incubator.foreign.MemoryLayout _IO_IRP_EXT_TRACK_OFFSET_HEADER$struct$LAYOUT() { return _IO_IRP_EXT_TRACK_OFFSET_HEADER$struct$LAYOUT_; }

    static final MemoryLayout _IO_IRP_EXT_TRACK_OFFSET_HEADER$Validation$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IO_IRP_EXT_TRACK_OFFSET_HEADER$Validation$LAYOUT() { return _IO_IRP_EXT_TRACK_OFFSET_HEADER$Validation$LAYOUT_; }

    static final VarHandle _IO_IRP_EXT_TRACK_OFFSET_HEADER$Validation$VH_ = _IO_IRP_EXT_TRACK_OFFSET_HEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Validation"));
    static final java.lang.invoke.VarHandle _IO_IRP_EXT_TRACK_OFFSET_HEADER$Validation$VH() { return _IO_IRP_EXT_TRACK_OFFSET_HEADER$Validation$VH_; }

    static final MemoryLayout _IO_IRP_EXT_TRACK_OFFSET_HEADER$Flags$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IO_IRP_EXT_TRACK_OFFSET_HEADER$Flags$LAYOUT() { return _IO_IRP_EXT_TRACK_OFFSET_HEADER$Flags$LAYOUT_; }

    static final VarHandle _IO_IRP_EXT_TRACK_OFFSET_HEADER$Flags$VH_ = _IO_IRP_EXT_TRACK_OFFSET_HEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _IO_IRP_EXT_TRACK_OFFSET_HEADER$Flags$VH() { return _IO_IRP_EXT_TRACK_OFFSET_HEADER$Flags$VH_; }

    static final MemoryLayout _IO_IRP_EXT_TRACK_OFFSET_HEADER$TrackedOffsetCallback$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _IO_IRP_EXT_TRACK_OFFSET_HEADER$TrackedOffsetCallback$LAYOUT() { return _IO_IRP_EXT_TRACK_OFFSET_HEADER$TrackedOffsetCallback$LAYOUT_; }

    static final VarHandle _IO_IRP_EXT_TRACK_OFFSET_HEADER$TrackedOffsetCallback$VH_ = MemoryHandles.asAddressVarHandle(_IO_IRP_EXT_TRACK_OFFSET_HEADER$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TrackedOffsetCallback")));
    static final java.lang.invoke.VarHandle _IO_IRP_EXT_TRACK_OFFSET_HEADER$TrackedOffsetCallback$VH() { return _IO_IRP_EXT_TRACK_OFFSET_HEADER$TrackedOffsetCallback$VH_; }

    static final MemoryLayout GUID_DEVINTERFACE_SMARTCARD_READER$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVINTERFACE_SMARTCARD_READER$LAYOUT() { return GUID_DEVINTERFACE_SMARTCARD_READER$LAYOUT_; }

    static final MemorySegment GUID_DEVINTERFACE_SMARTCARD_READER$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVINTERFACE_SMARTCARD_READER", GUID_DEVINTERFACE_SMARTCARD_READER$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVINTERFACE_SMARTCARD_READER$SEGMENT() { return GUID_DEVINTERFACE_SMARTCARD_READER$SEGMENT_; }

    static final MemoryLayout _SCARD_IO_REQUEST$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwProtocol"),
        C_LONG.withName("cbPciLength")
    ).withName("_SCARD_IO_REQUEST");
    static final jdk.incubator.foreign.MemoryLayout _SCARD_IO_REQUEST$struct$LAYOUT() { return _SCARD_IO_REQUEST$struct$LAYOUT_; }

    static final MemoryLayout _SCARD_IO_REQUEST$dwProtocol$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SCARD_IO_REQUEST$dwProtocol$LAYOUT() { return _SCARD_IO_REQUEST$dwProtocol$LAYOUT_; }

    static final VarHandle _SCARD_IO_REQUEST$dwProtocol$VH_ = _SCARD_IO_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwProtocol"));
    static final java.lang.invoke.VarHandle _SCARD_IO_REQUEST$dwProtocol$VH() { return _SCARD_IO_REQUEST$dwProtocol$VH_; }

    static final MemoryLayout _SCARD_IO_REQUEST$cbPciLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SCARD_IO_REQUEST$cbPciLength$LAYOUT() { return _SCARD_IO_REQUEST$cbPciLength$LAYOUT_; }

    static final VarHandle _SCARD_IO_REQUEST$cbPciLength$VH_ = _SCARD_IO_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbPciLength"));
    static final java.lang.invoke.VarHandle _SCARD_IO_REQUEST$cbPciLength$VH() { return _SCARD_IO_REQUEST$cbPciLength$VH_; }

    static final MemoryLayout _SCARD_T0_COMMAND$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("bCla"),
        C_CHAR.withName("bIns"),
        C_CHAR.withName("bP1"),
        C_CHAR.withName("bP2"),
        C_CHAR.withName("bP3")
    ).withName("_SCARD_T0_COMMAND");
    static final jdk.incubator.foreign.MemoryLayout _SCARD_T0_COMMAND$struct$LAYOUT() { return _SCARD_T0_COMMAND$struct$LAYOUT_; }

    static final MemoryLayout _SCARD_T0_COMMAND$bCla$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _SCARD_T0_COMMAND$bCla$LAYOUT() { return _SCARD_T0_COMMAND$bCla$LAYOUT_; }

    static final VarHandle _SCARD_T0_COMMAND$bCla$VH_ = _SCARD_T0_COMMAND$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("bCla"));
    static final java.lang.invoke.VarHandle _SCARD_T0_COMMAND$bCla$VH() { return _SCARD_T0_COMMAND$bCla$VH_; }

    static final MemoryLayout _SCARD_T0_COMMAND$bIns$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _SCARD_T0_COMMAND$bIns$LAYOUT() { return _SCARD_T0_COMMAND$bIns$LAYOUT_; }

    static final VarHandle _SCARD_T0_COMMAND$bIns$VH_ = _SCARD_T0_COMMAND$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("bIns"));
    static final java.lang.invoke.VarHandle _SCARD_T0_COMMAND$bIns$VH() { return _SCARD_T0_COMMAND$bIns$VH_; }

    static final MemoryLayout _SCARD_T0_COMMAND$bP1$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _SCARD_T0_COMMAND$bP1$LAYOUT() { return _SCARD_T0_COMMAND$bP1$LAYOUT_; }

    static final VarHandle _SCARD_T0_COMMAND$bP1$VH_ = _SCARD_T0_COMMAND$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("bP1"));
    static final java.lang.invoke.VarHandle _SCARD_T0_COMMAND$bP1$VH() { return _SCARD_T0_COMMAND$bP1$VH_; }

    static final MemoryLayout _SCARD_T0_COMMAND$bP2$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _SCARD_T0_COMMAND$bP2$LAYOUT() { return _SCARD_T0_COMMAND$bP2$LAYOUT_; }

    static final VarHandle _SCARD_T0_COMMAND$bP2$VH_ = _SCARD_T0_COMMAND$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("bP2"));
    static final java.lang.invoke.VarHandle _SCARD_T0_COMMAND$bP2$VH() { return _SCARD_T0_COMMAND$bP2$VH_; }

    static final MemoryLayout _SCARD_T0_COMMAND$bP3$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _SCARD_T0_COMMAND$bP3$LAYOUT() { return _SCARD_T0_COMMAND$bP3$LAYOUT_; }

    static final VarHandle _SCARD_T0_COMMAND$bP3$VH_ = _SCARD_T0_COMMAND$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("bP3"));
    static final java.lang.invoke.VarHandle _SCARD_T0_COMMAND$bP3$VH() { return _SCARD_T0_COMMAND$bP3$VH_; }

    static final MemoryLayout _SCARD_T0_REQUEST$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("dwProtocol"),
            C_LONG.withName("cbPciLength")
        ).withName("ioRequest"),
        C_CHAR.withName("bSw1"),
        C_CHAR.withName("bSw2"),
        MemoryLayout.ofStruct(
            C_CHAR.withName("bCla"),
            C_CHAR.withName("bIns"),
            C_CHAR.withName("bP1"),
            C_CHAR.withName("bP2"),
            C_CHAR.withName("bP3")
        ).withName("CmdBytes"),
        MemoryLayout.ofSequence(5, C_CHAR).withName("rgbHeader"),
        MemoryLayout.ofPaddingBits(8)
    ).withName("_SCARD_T0_REQUEST");
    static final jdk.incubator.foreign.MemoryLayout _SCARD_T0_REQUEST$struct$LAYOUT() { return _SCARD_T0_REQUEST$struct$LAYOUT_; }

    static final MemoryLayout _SCARD_T0_REQUEST$bSw1$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _SCARD_T0_REQUEST$bSw1$LAYOUT() { return _SCARD_T0_REQUEST$bSw1$LAYOUT_; }

    static final VarHandle _SCARD_T0_REQUEST$bSw1$VH_ = _SCARD_T0_REQUEST$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("bSw1"));
    static final java.lang.invoke.VarHandle _SCARD_T0_REQUEST$bSw1$VH() { return _SCARD_T0_REQUEST$bSw1$VH_; }

    static final MemoryLayout _SCARD_T0_REQUEST$bSw2$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _SCARD_T0_REQUEST$bSw2$LAYOUT() { return _SCARD_T0_REQUEST$bSw2$LAYOUT_; }

    static final VarHandle _SCARD_T0_REQUEST$bSw2$VH_ = _SCARD_T0_REQUEST$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("bSw2"));
    static final java.lang.invoke.VarHandle _SCARD_T0_REQUEST$bSw2$VH() { return _SCARD_T0_REQUEST$bSw2$VH_; }

    static final MemoryLayout _SCARD_T1_REQUEST$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("dwProtocol"),
            C_LONG.withName("cbPciLength")
        ).withName("ioRequest")
    ).withName("_SCARD_T1_REQUEST");
    static final jdk.incubator.foreign.MemoryLayout _SCARD_T1_REQUEST$struct$LAYOUT() { return _SCARD_T1_REQUEST$struct$LAYOUT_; }

    static final MemoryLayout g_rgSCardT0Pci$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwProtocol"),
        C_LONG.withName("cbPciLength")
    ).withName("_SCARD_IO_REQUEST");
    static final jdk.incubator.foreign.MemoryLayout g_rgSCardT0Pci$LAYOUT() { return g_rgSCardT0Pci$LAYOUT_; }

    static final MemorySegment g_rgSCardT0Pci$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "g_rgSCardT0Pci", g_rgSCardT0Pci$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment g_rgSCardT0Pci$SEGMENT() { return g_rgSCardT0Pci$SEGMENT_; }

    static final MemoryLayout g_rgSCardT1Pci$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwProtocol"),
        C_LONG.withName("cbPciLength")
    ).withName("_SCARD_IO_REQUEST");
    static final jdk.incubator.foreign.MemoryLayout g_rgSCardT1Pci$LAYOUT() { return g_rgSCardT1Pci$LAYOUT_; }

    static final MemorySegment g_rgSCardT1Pci$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "g_rgSCardT1Pci", g_rgSCardT1Pci$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment g_rgSCardT1Pci$SEGMENT() { return g_rgSCardT1Pci$SEGMENT_; }

    static final MemoryLayout g_rgSCardRawPci$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwProtocol"),
        C_LONG.withName("cbPciLength")
    ).withName("_SCARD_IO_REQUEST");
    static final jdk.incubator.foreign.MemoryLayout g_rgSCardRawPci$LAYOUT() { return g_rgSCardRawPci$LAYOUT_; }

    static final MemorySegment g_rgSCardRawPci$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "g_rgSCardRawPci", g_rgSCardRawPci$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment g_rgSCardRawPci$SEGMENT() { return g_rgSCardRawPci$SEGMENT_; }

    static final FunctionDescriptor SCardEstablishContext$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardEstablishContext$FUNC() { return SCardEstablishContext$FUNC_; }

    static final MethodHandle SCardEstablishContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardEstablishContext",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardEstablishContext$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardEstablishContext$MH() { return SCardEstablishContext$MH_; }

    static final FunctionDescriptor SCardReleaseContext$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardReleaseContext$FUNC() { return SCardReleaseContext$FUNC_; }

    static final MethodHandle SCardReleaseContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardReleaseContext",
        "(J)I",
        SCardReleaseContext$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardReleaseContext$MH() { return SCardReleaseContext$MH_; }

    static final FunctionDescriptor SCardIsValidContext$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardIsValidContext$FUNC() { return SCardIsValidContext$FUNC_; }

    static final MethodHandle SCardIsValidContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardIsValidContext",
        "(J)I",
        SCardIsValidContext$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardIsValidContext$MH() { return SCardIsValidContext$MH_; }

    static final FunctionDescriptor SCardListReaderGroupsA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardListReaderGroupsA$FUNC() { return SCardListReaderGroupsA$FUNC_; }

    static final MethodHandle SCardListReaderGroupsA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardListReaderGroupsA",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardListReaderGroupsA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardListReaderGroupsA$MH() { return SCardListReaderGroupsA$MH_; }

    static final FunctionDescriptor SCardListReaderGroupsW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardListReaderGroupsW$FUNC() { return SCardListReaderGroupsW$FUNC_; }

    static final MethodHandle SCardListReaderGroupsW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardListReaderGroupsW",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardListReaderGroupsW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardListReaderGroupsW$MH() { return SCardListReaderGroupsW$MH_; }

    static final FunctionDescriptor SCardListReadersA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardListReadersA$FUNC() { return SCardListReadersA$FUNC_; }

    static final MethodHandle SCardListReadersA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardListReadersA",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardListReadersA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardListReadersA$MH() { return SCardListReadersA$MH_; }

    static final FunctionDescriptor SCardListReadersW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardListReadersW$FUNC() { return SCardListReadersW$FUNC_; }

    static final MethodHandle SCardListReadersW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardListReadersW",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardListReadersW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardListReadersW$MH() { return SCardListReadersW$MH_; }

    static final FunctionDescriptor SCardListCardsA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardListCardsA$FUNC() { return SCardListCardsA$FUNC_; }

    static final MethodHandle SCardListCardsA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardListCardsA",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardListCardsA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardListCardsA$MH() { return SCardListCardsA$MH_; }

    static final FunctionDescriptor SCardListCardsW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardListCardsW$FUNC() { return SCardListCardsW$FUNC_; }

    static final MethodHandle SCardListCardsW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardListCardsW",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardListCardsW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardListCardsW$MH() { return SCardListCardsW$MH_; }

    static final FunctionDescriptor SCardListInterfacesA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardListInterfacesA$FUNC() { return SCardListInterfacesA$FUNC_; }

    static final MethodHandle SCardListInterfacesA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardListInterfacesA",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardListInterfacesA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardListInterfacesA$MH() { return SCardListInterfacesA$MH_; }

    static final FunctionDescriptor SCardListInterfacesW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardListInterfacesW$FUNC() { return SCardListInterfacesW$FUNC_; }

    static final MethodHandle SCardListInterfacesW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardListInterfacesW",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardListInterfacesW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardListInterfacesW$MH() { return SCardListInterfacesW$MH_; }

    static final FunctionDescriptor SCardGetProviderIdA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardGetProviderIdA$FUNC() { return SCardGetProviderIdA$FUNC_; }

    static final MethodHandle SCardGetProviderIdA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardGetProviderIdA",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardGetProviderIdA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardGetProviderIdA$MH() { return SCardGetProviderIdA$MH_; }

    static final FunctionDescriptor SCardGetProviderIdW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardGetProviderIdW$FUNC() { return SCardGetProviderIdW$FUNC_; }

    static final MethodHandle SCardGetProviderIdW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardGetProviderIdW",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardGetProviderIdW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardGetProviderIdW$MH() { return SCardGetProviderIdW$MH_; }

    static final FunctionDescriptor SCardGetCardTypeProviderNameA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardGetCardTypeProviderNameA$FUNC() { return SCardGetCardTypeProviderNameA$FUNC_; }

    static final MethodHandle SCardGetCardTypeProviderNameA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardGetCardTypeProviderNameA",
        "(JLjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardGetCardTypeProviderNameA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardGetCardTypeProviderNameA$MH() { return SCardGetCardTypeProviderNameA$MH_; }

    static final FunctionDescriptor SCardGetCardTypeProviderNameW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardGetCardTypeProviderNameW$FUNC() { return SCardGetCardTypeProviderNameW$FUNC_; }

    static final MethodHandle SCardGetCardTypeProviderNameW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardGetCardTypeProviderNameW",
        "(JLjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardGetCardTypeProviderNameW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardGetCardTypeProviderNameW$MH() { return SCardGetCardTypeProviderNameW$MH_; }

    static final FunctionDescriptor SCardIntroduceReaderGroupA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardIntroduceReaderGroupA$FUNC() { return SCardIntroduceReaderGroupA$FUNC_; }

    static final MethodHandle SCardIntroduceReaderGroupA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardIntroduceReaderGroupA",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        SCardIntroduceReaderGroupA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardIntroduceReaderGroupA$MH() { return SCardIntroduceReaderGroupA$MH_; }

    static final FunctionDescriptor SCardIntroduceReaderGroupW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardIntroduceReaderGroupW$FUNC() { return SCardIntroduceReaderGroupW$FUNC_; }

    static final MethodHandle SCardIntroduceReaderGroupW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardIntroduceReaderGroupW",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        SCardIntroduceReaderGroupW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardIntroduceReaderGroupW$MH() { return SCardIntroduceReaderGroupW$MH_; }

    static final FunctionDescriptor SCardForgetReaderGroupA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardForgetReaderGroupA$FUNC() { return SCardForgetReaderGroupA$FUNC_; }

    static final MethodHandle SCardForgetReaderGroupA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardForgetReaderGroupA",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        SCardForgetReaderGroupA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardForgetReaderGroupA$MH() { return SCardForgetReaderGroupA$MH_; }

    static final FunctionDescriptor SCardForgetReaderGroupW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardForgetReaderGroupW$FUNC() { return SCardForgetReaderGroupW$FUNC_; }

    static final MethodHandle SCardForgetReaderGroupW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardForgetReaderGroupW",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        SCardForgetReaderGroupW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardForgetReaderGroupW$MH() { return SCardForgetReaderGroupW$MH_; }

    static final FunctionDescriptor SCardIntroduceReaderA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardIntroduceReaderA$FUNC() { return SCardIntroduceReaderA$FUNC_; }

    static final MethodHandle SCardIntroduceReaderA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardIntroduceReaderA",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardIntroduceReaderA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardIntroduceReaderA$MH() { return SCardIntroduceReaderA$MH_; }

    static final FunctionDescriptor SCardIntroduceReaderW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardIntroduceReaderW$FUNC() { return SCardIntroduceReaderW$FUNC_; }

    static final MethodHandle SCardIntroduceReaderW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardIntroduceReaderW",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardIntroduceReaderW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardIntroduceReaderW$MH() { return SCardIntroduceReaderW$MH_; }

    static final FunctionDescriptor SCardForgetReaderA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardForgetReaderA$FUNC() { return SCardForgetReaderA$FUNC_; }

    static final MethodHandle SCardForgetReaderA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardForgetReaderA",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        SCardForgetReaderA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardForgetReaderA$MH() { return SCardForgetReaderA$MH_; }

    static final FunctionDescriptor SCardForgetReaderW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardForgetReaderW$FUNC() { return SCardForgetReaderW$FUNC_; }

    static final MethodHandle SCardForgetReaderW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardForgetReaderW",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        SCardForgetReaderW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardForgetReaderW$MH() { return SCardForgetReaderW$MH_; }

    static final FunctionDescriptor SCardAddReaderToGroupA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardAddReaderToGroupA$FUNC() { return SCardAddReaderToGroupA$FUNC_; }

    static final MethodHandle SCardAddReaderToGroupA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardAddReaderToGroupA",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardAddReaderToGroupA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardAddReaderToGroupA$MH() { return SCardAddReaderToGroupA$MH_; }

    static final FunctionDescriptor SCardAddReaderToGroupW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardAddReaderToGroupW$FUNC() { return SCardAddReaderToGroupW$FUNC_; }

    static final MethodHandle SCardAddReaderToGroupW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardAddReaderToGroupW",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardAddReaderToGroupW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardAddReaderToGroupW$MH() { return SCardAddReaderToGroupW$MH_; }

    static final FunctionDescriptor SCardRemoveReaderFromGroupA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardRemoveReaderFromGroupA$FUNC() { return SCardRemoveReaderFromGroupA$FUNC_; }

    static final MethodHandle SCardRemoveReaderFromGroupA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardRemoveReaderFromGroupA",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardRemoveReaderFromGroupA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardRemoveReaderFromGroupA$MH() { return SCardRemoveReaderFromGroupA$MH_; }

    static final FunctionDescriptor SCardRemoveReaderFromGroupW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardRemoveReaderFromGroupW$FUNC() { return SCardRemoveReaderFromGroupW$FUNC_; }

    static final MethodHandle SCardRemoveReaderFromGroupW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardRemoveReaderFromGroupW",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardRemoveReaderFromGroupW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardRemoveReaderFromGroupW$MH() { return SCardRemoveReaderFromGroupW$MH_; }

    static final FunctionDescriptor SCardIntroduceCardTypeA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardIntroduceCardTypeA$FUNC() { return SCardIntroduceCardTypeA$FUNC_; }

    static final MethodHandle SCardIntroduceCardTypeA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardIntroduceCardTypeA",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        SCardIntroduceCardTypeA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardIntroduceCardTypeA$MH() { return SCardIntroduceCardTypeA$MH_; }

    static final FunctionDescriptor SCardIntroduceCardTypeW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardIntroduceCardTypeW$FUNC() { return SCardIntroduceCardTypeW$FUNC_; }

    static final MethodHandle SCardIntroduceCardTypeW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardIntroduceCardTypeW",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        SCardIntroduceCardTypeW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardIntroduceCardTypeW$MH() { return SCardIntroduceCardTypeW$MH_; }

    static final FunctionDescriptor SCardSetCardTypeProviderNameA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardSetCardTypeProviderNameA$FUNC() { return SCardSetCardTypeProviderNameA$FUNC_; }

    static final MethodHandle SCardSetCardTypeProviderNameA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardSetCardTypeProviderNameA",
        "(JLjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        SCardSetCardTypeProviderNameA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardSetCardTypeProviderNameA$MH() { return SCardSetCardTypeProviderNameA$MH_; }

    static final FunctionDescriptor SCardSetCardTypeProviderNameW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardSetCardTypeProviderNameW$FUNC() { return SCardSetCardTypeProviderNameW$FUNC_; }

    static final MethodHandle SCardSetCardTypeProviderNameW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardSetCardTypeProviderNameW",
        "(JLjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        SCardSetCardTypeProviderNameW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardSetCardTypeProviderNameW$MH() { return SCardSetCardTypeProviderNameW$MH_; }

    static final FunctionDescriptor SCardForgetCardTypeA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardForgetCardTypeA$FUNC() { return SCardForgetCardTypeA$FUNC_; }

    static final MethodHandle SCardForgetCardTypeA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardForgetCardTypeA",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        SCardForgetCardTypeA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardForgetCardTypeA$MH() { return SCardForgetCardTypeA$MH_; }

    static final FunctionDescriptor SCardForgetCardTypeW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardForgetCardTypeW$FUNC() { return SCardForgetCardTypeW$FUNC_; }

    static final MethodHandle SCardForgetCardTypeW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardForgetCardTypeW",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        SCardForgetCardTypeW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardForgetCardTypeW$MH() { return SCardForgetCardTypeW$MH_; }

    static final FunctionDescriptor SCardFreeMemory$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardFreeMemory$FUNC() { return SCardFreeMemory$FUNC_; }

    static final MethodHandle SCardFreeMemory$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardFreeMemory",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        SCardFreeMemory$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardFreeMemory$MH() { return SCardFreeMemory$MH_; }

    static final FunctionDescriptor SCardAccessStartedEvent$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor SCardAccessStartedEvent$FUNC() { return SCardAccessStartedEvent$FUNC_; }

    static final MethodHandle SCardAccessStartedEvent$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardAccessStartedEvent",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        SCardAccessStartedEvent$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardAccessStartedEvent$MH() { return SCardAccessStartedEvent$MH_; }

    static final FunctionDescriptor SCardReleaseStartedEvent$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor SCardReleaseStartedEvent$FUNC() { return SCardReleaseStartedEvent$FUNC_; }

    static final MethodHandle SCardReleaseStartedEvent$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardReleaseStartedEvent",
        "()V",
        SCardReleaseStartedEvent$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardReleaseStartedEvent$MH() { return SCardReleaseStartedEvent$MH_; }

    static final MemoryLayout SCARD_READERSTATEA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("szReader"),
        C_POINTER.withName("pvUserData"),
        C_LONG.withName("dwCurrentState"),
        C_LONG.withName("dwEventState"),
        C_LONG.withName("cbAtr"),
        MemoryLayout.ofSequence(36, C_CHAR).withName("rgbAtr")
    );
    static final jdk.incubator.foreign.MemoryLayout SCARD_READERSTATEA$struct$LAYOUT() { return SCARD_READERSTATEA$struct$LAYOUT_; }

    static final MemoryLayout SCARD_READERSTATEA$szReader$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout SCARD_READERSTATEA$szReader$LAYOUT() { return SCARD_READERSTATEA$szReader$LAYOUT_; }

    static final VarHandle SCARD_READERSTATEA$szReader$VH_ = MemoryHandles.asAddressVarHandle(SCARD_READERSTATEA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("szReader")));
    static final java.lang.invoke.VarHandle SCARD_READERSTATEA$szReader$VH() { return SCARD_READERSTATEA$szReader$VH_; }

    static final MemoryLayout SCARD_READERSTATEA$pvUserData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout SCARD_READERSTATEA$pvUserData$LAYOUT() { return SCARD_READERSTATEA$pvUserData$LAYOUT_; }

    static final VarHandle SCARD_READERSTATEA$pvUserData$VH_ = MemoryHandles.asAddressVarHandle(SCARD_READERSTATEA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvUserData")));
    static final java.lang.invoke.VarHandle SCARD_READERSTATEA$pvUserData$VH() { return SCARD_READERSTATEA$pvUserData$VH_; }

    static final MemoryLayout SCARD_READERSTATEA$dwCurrentState$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout SCARD_READERSTATEA$dwCurrentState$LAYOUT() { return SCARD_READERSTATEA$dwCurrentState$LAYOUT_; }

    static final VarHandle SCARD_READERSTATEA$dwCurrentState$VH_ = SCARD_READERSTATEA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCurrentState"));
    static final java.lang.invoke.VarHandle SCARD_READERSTATEA$dwCurrentState$VH() { return SCARD_READERSTATEA$dwCurrentState$VH_; }

    static final MemoryLayout SCARD_READERSTATEA$dwEventState$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout SCARD_READERSTATEA$dwEventState$LAYOUT() { return SCARD_READERSTATEA$dwEventState$LAYOUT_; }

    static final VarHandle SCARD_READERSTATEA$dwEventState$VH_ = SCARD_READERSTATEA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwEventState"));
    static final java.lang.invoke.VarHandle SCARD_READERSTATEA$dwEventState$VH() { return SCARD_READERSTATEA$dwEventState$VH_; }

    static final MemoryLayout SCARD_READERSTATEA$cbAtr$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout SCARD_READERSTATEA$cbAtr$LAYOUT() { return SCARD_READERSTATEA$cbAtr$LAYOUT_; }

    static final VarHandle SCARD_READERSTATEA$cbAtr$VH_ = SCARD_READERSTATEA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbAtr"));
    static final java.lang.invoke.VarHandle SCARD_READERSTATEA$cbAtr$VH() { return SCARD_READERSTATEA$cbAtr$VH_; }

    static final MemoryLayout SCARD_READERSTATEW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("szReader"),
        C_POINTER.withName("pvUserData"),
        C_LONG.withName("dwCurrentState"),
        C_LONG.withName("dwEventState"),
        C_LONG.withName("cbAtr"),
        MemoryLayout.ofSequence(36, C_CHAR).withName("rgbAtr")
    );
    static final jdk.incubator.foreign.MemoryLayout SCARD_READERSTATEW$struct$LAYOUT() { return SCARD_READERSTATEW$struct$LAYOUT_; }

    static final MemoryLayout SCARD_READERSTATEW$szReader$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout SCARD_READERSTATEW$szReader$LAYOUT() { return SCARD_READERSTATEW$szReader$LAYOUT_; }

    static final VarHandle SCARD_READERSTATEW$szReader$VH_ = MemoryHandles.asAddressVarHandle(SCARD_READERSTATEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("szReader")));
    static final java.lang.invoke.VarHandle SCARD_READERSTATEW$szReader$VH() { return SCARD_READERSTATEW$szReader$VH_; }

    static final MemoryLayout SCARD_READERSTATEW$pvUserData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout SCARD_READERSTATEW$pvUserData$LAYOUT() { return SCARD_READERSTATEW$pvUserData$LAYOUT_; }

    static final VarHandle SCARD_READERSTATEW$pvUserData$VH_ = MemoryHandles.asAddressVarHandle(SCARD_READERSTATEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvUserData")));
    static final java.lang.invoke.VarHandle SCARD_READERSTATEW$pvUserData$VH() { return SCARD_READERSTATEW$pvUserData$VH_; }

    static final MemoryLayout SCARD_READERSTATEW$dwCurrentState$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout SCARD_READERSTATEW$dwCurrentState$LAYOUT() { return SCARD_READERSTATEW$dwCurrentState$LAYOUT_; }

    static final VarHandle SCARD_READERSTATEW$dwCurrentState$VH_ = SCARD_READERSTATEW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCurrentState"));
    static final java.lang.invoke.VarHandle SCARD_READERSTATEW$dwCurrentState$VH() { return SCARD_READERSTATEW$dwCurrentState$VH_; }

    static final MemoryLayout SCARD_READERSTATEW$dwEventState$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout SCARD_READERSTATEW$dwEventState$LAYOUT() { return SCARD_READERSTATEW$dwEventState$LAYOUT_; }

    static final VarHandle SCARD_READERSTATEW$dwEventState$VH_ = SCARD_READERSTATEW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwEventState"));
    static final java.lang.invoke.VarHandle SCARD_READERSTATEW$dwEventState$VH() { return SCARD_READERSTATEW$dwEventState$VH_; }

    static final MemoryLayout SCARD_READERSTATEW$cbAtr$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout SCARD_READERSTATEW$cbAtr$LAYOUT() { return SCARD_READERSTATEW$cbAtr$LAYOUT_; }

    static final VarHandle SCARD_READERSTATEW$cbAtr$VH_ = SCARD_READERSTATEW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbAtr"));
    static final java.lang.invoke.VarHandle SCARD_READERSTATEW$cbAtr$VH() { return SCARD_READERSTATEW$cbAtr$VH_; }

    static final MemoryLayout SCARD_READERSTATE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("szReader"),
        C_POINTER.withName("pvUserData"),
        C_LONG.withName("dwCurrentState"),
        C_LONG.withName("dwEventState"),
        C_LONG.withName("cbAtr"),
        MemoryLayout.ofSequence(36, C_CHAR).withName("rgbAtr")
    );
    static final jdk.incubator.foreign.MemoryLayout SCARD_READERSTATE$struct$LAYOUT() { return SCARD_READERSTATE$struct$LAYOUT_; }

    static final MemoryLayout SCARD_READERSTATE$szReader$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout SCARD_READERSTATE$szReader$LAYOUT() { return SCARD_READERSTATE$szReader$LAYOUT_; }

    static final VarHandle SCARD_READERSTATE$szReader$VH_ = MemoryHandles.asAddressVarHandle(SCARD_READERSTATE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("szReader")));
    static final java.lang.invoke.VarHandle SCARD_READERSTATE$szReader$VH() { return SCARD_READERSTATE$szReader$VH_; }

    static final MemoryLayout SCARD_READERSTATE$pvUserData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout SCARD_READERSTATE$pvUserData$LAYOUT() { return SCARD_READERSTATE$pvUserData$LAYOUT_; }

    static final VarHandle SCARD_READERSTATE$pvUserData$VH_ = MemoryHandles.asAddressVarHandle(SCARD_READERSTATE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvUserData")));
    static final java.lang.invoke.VarHandle SCARD_READERSTATE$pvUserData$VH() { return SCARD_READERSTATE$pvUserData$VH_; }

    static final MemoryLayout SCARD_READERSTATE$dwCurrentState$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout SCARD_READERSTATE$dwCurrentState$LAYOUT() { return SCARD_READERSTATE$dwCurrentState$LAYOUT_; }

    static final VarHandle SCARD_READERSTATE$dwCurrentState$VH_ = SCARD_READERSTATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCurrentState"));
    static final java.lang.invoke.VarHandle SCARD_READERSTATE$dwCurrentState$VH() { return SCARD_READERSTATE$dwCurrentState$VH_; }

    static final MemoryLayout SCARD_READERSTATE$dwEventState$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout SCARD_READERSTATE$dwEventState$LAYOUT() { return SCARD_READERSTATE$dwEventState$LAYOUT_; }

    static final VarHandle SCARD_READERSTATE$dwEventState$VH_ = SCARD_READERSTATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwEventState"));
    static final java.lang.invoke.VarHandle SCARD_READERSTATE$dwEventState$VH() { return SCARD_READERSTATE$dwEventState$VH_; }

    static final MemoryLayout SCARD_READERSTATE$cbAtr$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout SCARD_READERSTATE$cbAtr$LAYOUT() { return SCARD_READERSTATE$cbAtr$LAYOUT_; }

    static final VarHandle SCARD_READERSTATE$cbAtr$VH_ = SCARD_READERSTATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbAtr"));
    static final java.lang.invoke.VarHandle SCARD_READERSTATE$cbAtr$VH() { return SCARD_READERSTATE$cbAtr$VH_; }

    static final FunctionDescriptor SCardLocateCardsA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardLocateCardsA$FUNC() { return SCardLocateCardsA$FUNC_; }

    static final MethodHandle SCardLocateCardsA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardLocateCardsA",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        SCardLocateCardsA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardLocateCardsA$MH() { return SCardLocateCardsA$MH_; }

    static final FunctionDescriptor SCardLocateCardsW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardLocateCardsW$FUNC() { return SCardLocateCardsW$FUNC_; }

    static final MethodHandle SCardLocateCardsW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardLocateCardsW",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        SCardLocateCardsW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardLocateCardsW$MH() { return SCardLocateCardsW$MH_; }

    static final MemoryLayout _SCARD_ATRMASK$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbAtr"),
        MemoryLayout.ofSequence(36, C_CHAR).withName("rgbAtr"),
        MemoryLayout.ofSequence(36, C_CHAR).withName("rgbMask")
    ).withName("_SCARD_ATRMASK");
    static final jdk.incubator.foreign.MemoryLayout _SCARD_ATRMASK$struct$LAYOUT() { return _SCARD_ATRMASK$struct$LAYOUT_; }

    static final MemoryLayout _SCARD_ATRMASK$cbAtr$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SCARD_ATRMASK$cbAtr$LAYOUT() { return _SCARD_ATRMASK$cbAtr$LAYOUT_; }

    static final VarHandle _SCARD_ATRMASK$cbAtr$VH_ = _SCARD_ATRMASK$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbAtr"));
    static final java.lang.invoke.VarHandle _SCARD_ATRMASK$cbAtr$VH() { return _SCARD_ATRMASK$cbAtr$VH_; }

    static final FunctionDescriptor SCardLocateCardsByATRA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardLocateCardsByATRA$FUNC() { return SCardLocateCardsByATRA$FUNC_; }

    static final MethodHandle SCardLocateCardsByATRA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardLocateCardsByATRA",
        "(JLjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        SCardLocateCardsByATRA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardLocateCardsByATRA$MH() { return SCardLocateCardsByATRA$MH_; }

    static final FunctionDescriptor SCardLocateCardsByATRW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardLocateCardsByATRW$FUNC() { return SCardLocateCardsByATRW$FUNC_; }

    static final MethodHandle SCardLocateCardsByATRW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardLocateCardsByATRW",
        "(JLjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        SCardLocateCardsByATRW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardLocateCardsByATRW$MH() { return SCardLocateCardsByATRW$MH_; }

    static final FunctionDescriptor SCardGetStatusChangeA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardGetStatusChangeA$FUNC() { return SCardGetStatusChangeA$FUNC_; }

    static final MethodHandle SCardGetStatusChangeA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardGetStatusChangeA",
        "(JILjdk/incubator/foreign/MemoryAddress;I)I",
        SCardGetStatusChangeA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardGetStatusChangeA$MH() { return SCardGetStatusChangeA$MH_; }

    static final FunctionDescriptor SCardGetStatusChangeW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardGetStatusChangeW$FUNC() { return SCardGetStatusChangeW$FUNC_; }

    static final MethodHandle SCardGetStatusChangeW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardGetStatusChangeW",
        "(JILjdk/incubator/foreign/MemoryAddress;I)I",
        SCardGetStatusChangeW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardGetStatusChangeW$MH() { return SCardGetStatusChangeW$MH_; }

    static final FunctionDescriptor SCardCancel$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardCancel$FUNC() { return SCardCancel$FUNC_; }

    static final MethodHandle SCardCancel$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardCancel",
        "(J)I",
        SCardCancel$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardCancel$MH() { return SCardCancel$MH_; }

    static final FunctionDescriptor SCardConnectA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardConnectA$FUNC() { return SCardConnectA$FUNC_; }

    static final MethodHandle SCardConnectA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardConnectA",
        "(JLjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardConnectA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardConnectA$MH() { return SCardConnectA$MH_; }

    static final FunctionDescriptor SCardConnectW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardConnectW$FUNC() { return SCardConnectW$FUNC_; }

    static final MethodHandle SCardConnectW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardConnectW",
        "(JLjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardConnectW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardConnectW$MH() { return SCardConnectW$MH_; }

    static final FunctionDescriptor SCardReconnect$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardReconnect$FUNC() { return SCardReconnect$FUNC_; }

    static final MethodHandle SCardReconnect$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardReconnect",
        "(JIIILjdk/incubator/foreign/MemoryAddress;)I",
        SCardReconnect$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardReconnect$MH() { return SCardReconnect$MH_; }

    static final FunctionDescriptor SCardDisconnect$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardDisconnect$FUNC() { return SCardDisconnect$FUNC_; }

    static final MethodHandle SCardDisconnect$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardDisconnect",
        "(JI)I",
        SCardDisconnect$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardDisconnect$MH() { return SCardDisconnect$MH_; }

    static final FunctionDescriptor SCardBeginTransaction$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardBeginTransaction$FUNC() { return SCardBeginTransaction$FUNC_; }

    static final MethodHandle SCardBeginTransaction$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardBeginTransaction",
        "(J)I",
        SCardBeginTransaction$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardBeginTransaction$MH() { return SCardBeginTransaction$MH_; }

    static final FunctionDescriptor SCardEndTransaction$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardEndTransaction$FUNC() { return SCardEndTransaction$FUNC_; }

    static final MethodHandle SCardEndTransaction$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardEndTransaction",
        "(JI)I",
        SCardEndTransaction$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardEndTransaction$MH() { return SCardEndTransaction$MH_; }

    static final FunctionDescriptor SCardCancelTransaction$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardCancelTransaction$FUNC() { return SCardCancelTransaction$FUNC_; }

    static final MethodHandle SCardCancelTransaction$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardCancelTransaction",
        "(J)I",
        SCardCancelTransaction$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardCancelTransaction$MH() { return SCardCancelTransaction$MH_; }

    static final FunctionDescriptor SCardState$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardState$FUNC() { return SCardState$FUNC_; }

    static final MethodHandle SCardState$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardState",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardState$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardState$MH() { return SCardState$MH_; }

    static final FunctionDescriptor SCardStatusA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardStatusA$FUNC() { return SCardStatusA$FUNC_; }

    static final MethodHandle SCardStatusA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardStatusA",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardStatusA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardStatusA$MH() { return SCardStatusA$MH_; }

    static final FunctionDescriptor SCardStatusW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardStatusW$FUNC() { return SCardStatusW$FUNC_; }

    static final MethodHandle SCardStatusW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardStatusW",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardStatusW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardStatusW$MH() { return SCardStatusW$MH_; }

    static final FunctionDescriptor SCardTransmit$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardTransmit$FUNC() { return SCardTransmit$FUNC_; }

    static final MethodHandle SCardTransmit$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardTransmit",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardTransmit$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardTransmit$MH() { return SCardTransmit$MH_; }

    static final FunctionDescriptor SCardGetTransmitCount$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardGetTransmitCount$FUNC() { return SCardGetTransmitCount$FUNC_; }

    static final MethodHandle SCardGetTransmitCount$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardGetTransmitCount",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        SCardGetTransmitCount$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardGetTransmitCount$MH() { return SCardGetTransmitCount$MH_; }

    static final FunctionDescriptor SCardControl$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardControl$FUNC() { return SCardControl$FUNC_; }

    static final MethodHandle SCardControl$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardControl",
        "(JILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        SCardControl$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardControl$MH() { return SCardControl$MH_; }

    static final FunctionDescriptor SCardGetAttrib$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardGetAttrib$FUNC() { return SCardGetAttrib$FUNC_; }

    static final MethodHandle SCardGetAttrib$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardGetAttrib",
        "(JILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardGetAttrib$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardGetAttrib$MH() { return SCardGetAttrib$MH_; }

    static final FunctionDescriptor SCardSetAttrib$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardSetAttrib$FUNC() { return SCardSetAttrib$FUNC_; }

    static final MethodHandle SCardSetAttrib$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardSetAttrib",
        "(JILjdk/incubator/foreign/MemoryAddress;I)I",
        SCardSetAttrib$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardSetAttrib$MH() { return SCardSetAttrib$MH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwStructSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpstrGroupNames"),
        C_LONG.withName("nMaxGroupNames"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgguidInterfaces"),
        C_LONG.withName("cguidInterfaces"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpstrCardNames"),
        C_LONG.withName("nMaxCardNames"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpfnCheck"),
        C_POINTER.withName("lpfnConnect"),
        C_POINTER.withName("lpfnDisconnect"),
        C_POINTER.withName("pvUserData"),
        C_LONG.withName("dwShareMode"),
        C_LONG.withName("dwPreferredProtocols")
    );
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAA$struct$LAYOUT() { return OPENCARD_SEARCH_CRITERIAA$struct$LAYOUT_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAA$dwStructSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAA$dwStructSize$LAYOUT() { return OPENCARD_SEARCH_CRITERIAA$dwStructSize$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAA$dwStructSize$VH_ = OPENCARD_SEARCH_CRITERIAA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStructSize"));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAA$dwStructSize$VH() { return OPENCARD_SEARCH_CRITERIAA$dwStructSize$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAA$lpstrGroupNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAA$lpstrGroupNames$LAYOUT() { return OPENCARD_SEARCH_CRITERIAA$lpstrGroupNames$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAA$lpstrGroupNames$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIAA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrGroupNames")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAA$lpstrGroupNames$VH() { return OPENCARD_SEARCH_CRITERIAA$lpstrGroupNames$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAA$nMaxGroupNames$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAA$nMaxGroupNames$LAYOUT() { return OPENCARD_SEARCH_CRITERIAA$nMaxGroupNames$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAA$nMaxGroupNames$VH_ = OPENCARD_SEARCH_CRITERIAA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nMaxGroupNames"));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAA$nMaxGroupNames$VH() { return OPENCARD_SEARCH_CRITERIAA$nMaxGroupNames$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAA$rgguidInterfaces$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAA$rgguidInterfaces$LAYOUT() { return OPENCARD_SEARCH_CRITERIAA$rgguidInterfaces$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAA$rgguidInterfaces$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIAA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgguidInterfaces")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAA$rgguidInterfaces$VH() { return OPENCARD_SEARCH_CRITERIAA$rgguidInterfaces$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAA$cguidInterfaces$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAA$cguidInterfaces$LAYOUT() { return OPENCARD_SEARCH_CRITERIAA$cguidInterfaces$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAA$cguidInterfaces$VH_ = OPENCARD_SEARCH_CRITERIAA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cguidInterfaces"));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAA$cguidInterfaces$VH() { return OPENCARD_SEARCH_CRITERIAA$cguidInterfaces$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAA$lpstrCardNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAA$lpstrCardNames$LAYOUT() { return OPENCARD_SEARCH_CRITERIAA$lpstrCardNames$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAA$lpstrCardNames$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIAA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrCardNames")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAA$lpstrCardNames$VH() { return OPENCARD_SEARCH_CRITERIAA$lpstrCardNames$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAA$nMaxCardNames$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAA$nMaxCardNames$LAYOUT() { return OPENCARD_SEARCH_CRITERIAA$nMaxCardNames$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAA$nMaxCardNames$VH_ = OPENCARD_SEARCH_CRITERIAA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nMaxCardNames"));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAA$nMaxCardNames$VH() { return OPENCARD_SEARCH_CRITERIAA$nMaxCardNames$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAA$lpfnCheck$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAA$lpfnCheck$LAYOUT() { return OPENCARD_SEARCH_CRITERIAA$lpfnCheck$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAA$lpfnCheck$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIAA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnCheck")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAA$lpfnCheck$VH() { return OPENCARD_SEARCH_CRITERIAA$lpfnCheck$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAA$lpfnConnect$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAA$lpfnConnect$LAYOUT() { return OPENCARD_SEARCH_CRITERIAA$lpfnConnect$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAA$lpfnConnect$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIAA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnConnect")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAA$lpfnConnect$VH() { return OPENCARD_SEARCH_CRITERIAA$lpfnConnect$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAA$lpfnDisconnect$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAA$lpfnDisconnect$LAYOUT() { return OPENCARD_SEARCH_CRITERIAA$lpfnDisconnect$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAA$lpfnDisconnect$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIAA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnDisconnect")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAA$lpfnDisconnect$VH() { return OPENCARD_SEARCH_CRITERIAA$lpfnDisconnect$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAA$pvUserData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAA$pvUserData$LAYOUT() { return OPENCARD_SEARCH_CRITERIAA$pvUserData$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAA$pvUserData$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIAA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvUserData")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAA$pvUserData$VH() { return OPENCARD_SEARCH_CRITERIAA$pvUserData$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAA$dwShareMode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAA$dwShareMode$LAYOUT() { return OPENCARD_SEARCH_CRITERIAA$dwShareMode$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAA$dwShareMode$VH_ = OPENCARD_SEARCH_CRITERIAA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwShareMode"));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAA$dwShareMode$VH() { return OPENCARD_SEARCH_CRITERIAA$dwShareMode$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAA$dwPreferredProtocols$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAA$dwPreferredProtocols$LAYOUT() { return OPENCARD_SEARCH_CRITERIAA$dwPreferredProtocols$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAA$dwPreferredProtocols$VH_ = OPENCARD_SEARCH_CRITERIAA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwPreferredProtocols"));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAA$dwPreferredProtocols$VH() { return OPENCARD_SEARCH_CRITERIAA$dwPreferredProtocols$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwStructSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpstrGroupNames"),
        C_LONG.withName("nMaxGroupNames"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgguidInterfaces"),
        C_LONG.withName("cguidInterfaces"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpstrCardNames"),
        C_LONG.withName("nMaxCardNames"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpfnCheck"),
        C_POINTER.withName("lpfnConnect"),
        C_POINTER.withName("lpfnDisconnect"),
        C_POINTER.withName("pvUserData"),
        C_LONG.withName("dwShareMode"),
        C_LONG.withName("dwPreferredProtocols")
    );
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAW$struct$LAYOUT() { return OPENCARD_SEARCH_CRITERIAW$struct$LAYOUT_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAW$dwStructSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAW$dwStructSize$LAYOUT() { return OPENCARD_SEARCH_CRITERIAW$dwStructSize$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAW$dwStructSize$VH_ = OPENCARD_SEARCH_CRITERIAW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStructSize"));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAW$dwStructSize$VH() { return OPENCARD_SEARCH_CRITERIAW$dwStructSize$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAW$lpstrGroupNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAW$lpstrGroupNames$LAYOUT() { return OPENCARD_SEARCH_CRITERIAW$lpstrGroupNames$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAW$lpstrGroupNames$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIAW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrGroupNames")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAW$lpstrGroupNames$VH() { return OPENCARD_SEARCH_CRITERIAW$lpstrGroupNames$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAW$nMaxGroupNames$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAW$nMaxGroupNames$LAYOUT() { return OPENCARD_SEARCH_CRITERIAW$nMaxGroupNames$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAW$nMaxGroupNames$VH_ = OPENCARD_SEARCH_CRITERIAW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nMaxGroupNames"));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAW$nMaxGroupNames$VH() { return OPENCARD_SEARCH_CRITERIAW$nMaxGroupNames$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAW$rgguidInterfaces$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAW$rgguidInterfaces$LAYOUT() { return OPENCARD_SEARCH_CRITERIAW$rgguidInterfaces$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAW$rgguidInterfaces$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIAW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgguidInterfaces")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAW$rgguidInterfaces$VH() { return OPENCARD_SEARCH_CRITERIAW$rgguidInterfaces$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAW$cguidInterfaces$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAW$cguidInterfaces$LAYOUT() { return OPENCARD_SEARCH_CRITERIAW$cguidInterfaces$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAW$cguidInterfaces$VH_ = OPENCARD_SEARCH_CRITERIAW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cguidInterfaces"));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAW$cguidInterfaces$VH() { return OPENCARD_SEARCH_CRITERIAW$cguidInterfaces$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAW$lpstrCardNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAW$lpstrCardNames$LAYOUT() { return OPENCARD_SEARCH_CRITERIAW$lpstrCardNames$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAW$lpstrCardNames$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIAW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrCardNames")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAW$lpstrCardNames$VH() { return OPENCARD_SEARCH_CRITERIAW$lpstrCardNames$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAW$nMaxCardNames$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAW$nMaxCardNames$LAYOUT() { return OPENCARD_SEARCH_CRITERIAW$nMaxCardNames$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAW$nMaxCardNames$VH_ = OPENCARD_SEARCH_CRITERIAW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nMaxCardNames"));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAW$nMaxCardNames$VH() { return OPENCARD_SEARCH_CRITERIAW$nMaxCardNames$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAW$lpfnCheck$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAW$lpfnCheck$LAYOUT() { return OPENCARD_SEARCH_CRITERIAW$lpfnCheck$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAW$lpfnCheck$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIAW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnCheck")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAW$lpfnCheck$VH() { return OPENCARD_SEARCH_CRITERIAW$lpfnCheck$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAW$lpfnConnect$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAW$lpfnConnect$LAYOUT() { return OPENCARD_SEARCH_CRITERIAW$lpfnConnect$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAW$lpfnConnect$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIAW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnConnect")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAW$lpfnConnect$VH() { return OPENCARD_SEARCH_CRITERIAW$lpfnConnect$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAW$lpfnDisconnect$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAW$lpfnDisconnect$LAYOUT() { return OPENCARD_SEARCH_CRITERIAW$lpfnDisconnect$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAW$lpfnDisconnect$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIAW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnDisconnect")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAW$lpfnDisconnect$VH() { return OPENCARD_SEARCH_CRITERIAW$lpfnDisconnect$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAW$pvUserData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAW$pvUserData$LAYOUT() { return OPENCARD_SEARCH_CRITERIAW$pvUserData$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAW$pvUserData$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIAW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvUserData")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAW$pvUserData$VH() { return OPENCARD_SEARCH_CRITERIAW$pvUserData$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAW$dwShareMode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAW$dwShareMode$LAYOUT() { return OPENCARD_SEARCH_CRITERIAW$dwShareMode$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAW$dwShareMode$VH_ = OPENCARD_SEARCH_CRITERIAW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwShareMode"));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAW$dwShareMode$VH() { return OPENCARD_SEARCH_CRITERIAW$dwShareMode$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIAW$dwPreferredProtocols$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIAW$dwPreferredProtocols$LAYOUT() { return OPENCARD_SEARCH_CRITERIAW$dwPreferredProtocols$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIAW$dwPreferredProtocols$VH_ = OPENCARD_SEARCH_CRITERIAW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwPreferredProtocols"));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIAW$dwPreferredProtocols$VH() { return OPENCARD_SEARCH_CRITERIAW$dwPreferredProtocols$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwStructSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpstrGroupNames"),
        C_LONG.withName("nMaxGroupNames"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgguidInterfaces"),
        C_LONG.withName("cguidInterfaces"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpstrCardNames"),
        C_LONG.withName("nMaxCardNames"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpfnCheck"),
        C_POINTER.withName("lpfnConnect"),
        C_POINTER.withName("lpfnDisconnect"),
        C_POINTER.withName("pvUserData"),
        C_LONG.withName("dwShareMode"),
        C_LONG.withName("dwPreferredProtocols")
    );
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIA$struct$LAYOUT() { return OPENCARD_SEARCH_CRITERIA$struct$LAYOUT_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIA$dwStructSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIA$dwStructSize$LAYOUT() { return OPENCARD_SEARCH_CRITERIA$dwStructSize$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIA$dwStructSize$VH_ = OPENCARD_SEARCH_CRITERIA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStructSize"));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIA$dwStructSize$VH() { return OPENCARD_SEARCH_CRITERIA$dwStructSize$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIA$lpstrGroupNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIA$lpstrGroupNames$LAYOUT() { return OPENCARD_SEARCH_CRITERIA$lpstrGroupNames$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIA$lpstrGroupNames$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrGroupNames")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIA$lpstrGroupNames$VH() { return OPENCARD_SEARCH_CRITERIA$lpstrGroupNames$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIA$nMaxGroupNames$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIA$nMaxGroupNames$LAYOUT() { return OPENCARD_SEARCH_CRITERIA$nMaxGroupNames$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIA$nMaxGroupNames$VH_ = OPENCARD_SEARCH_CRITERIA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nMaxGroupNames"));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIA$nMaxGroupNames$VH() { return OPENCARD_SEARCH_CRITERIA$nMaxGroupNames$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIA$rgguidInterfaces$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIA$rgguidInterfaces$LAYOUT() { return OPENCARD_SEARCH_CRITERIA$rgguidInterfaces$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIA$rgguidInterfaces$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgguidInterfaces")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIA$rgguidInterfaces$VH() { return OPENCARD_SEARCH_CRITERIA$rgguidInterfaces$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIA$cguidInterfaces$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIA$cguidInterfaces$LAYOUT() { return OPENCARD_SEARCH_CRITERIA$cguidInterfaces$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIA$cguidInterfaces$VH_ = OPENCARD_SEARCH_CRITERIA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cguidInterfaces"));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIA$cguidInterfaces$VH() { return OPENCARD_SEARCH_CRITERIA$cguidInterfaces$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIA$lpstrCardNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIA$lpstrCardNames$LAYOUT() { return OPENCARD_SEARCH_CRITERIA$lpstrCardNames$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIA$lpstrCardNames$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrCardNames")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIA$lpstrCardNames$VH() { return OPENCARD_SEARCH_CRITERIA$lpstrCardNames$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIA$nMaxCardNames$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIA$nMaxCardNames$LAYOUT() { return OPENCARD_SEARCH_CRITERIA$nMaxCardNames$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIA$nMaxCardNames$VH_ = OPENCARD_SEARCH_CRITERIA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nMaxCardNames"));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIA$nMaxCardNames$VH() { return OPENCARD_SEARCH_CRITERIA$nMaxCardNames$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIA$lpfnCheck$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIA$lpfnCheck$LAYOUT() { return OPENCARD_SEARCH_CRITERIA$lpfnCheck$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIA$lpfnCheck$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnCheck")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIA$lpfnCheck$VH() { return OPENCARD_SEARCH_CRITERIA$lpfnCheck$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIA$lpfnConnect$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIA$lpfnConnect$LAYOUT() { return OPENCARD_SEARCH_CRITERIA$lpfnConnect$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIA$lpfnConnect$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnConnect")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIA$lpfnConnect$VH() { return OPENCARD_SEARCH_CRITERIA$lpfnConnect$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIA$lpfnDisconnect$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIA$lpfnDisconnect$LAYOUT() { return OPENCARD_SEARCH_CRITERIA$lpfnDisconnect$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIA$lpfnDisconnect$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnDisconnect")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIA$lpfnDisconnect$VH() { return OPENCARD_SEARCH_CRITERIA$lpfnDisconnect$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIA$pvUserData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIA$pvUserData$LAYOUT() { return OPENCARD_SEARCH_CRITERIA$pvUserData$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIA$pvUserData$VH_ = MemoryHandles.asAddressVarHandle(OPENCARD_SEARCH_CRITERIA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvUserData")));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIA$pvUserData$VH() { return OPENCARD_SEARCH_CRITERIA$pvUserData$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIA$dwShareMode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIA$dwShareMode$LAYOUT() { return OPENCARD_SEARCH_CRITERIA$dwShareMode$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIA$dwShareMode$VH_ = OPENCARD_SEARCH_CRITERIA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwShareMode"));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIA$dwShareMode$VH() { return OPENCARD_SEARCH_CRITERIA$dwShareMode$VH_; }

    static final MemoryLayout OPENCARD_SEARCH_CRITERIA$dwPreferredProtocols$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARD_SEARCH_CRITERIA$dwPreferredProtocols$LAYOUT() { return OPENCARD_SEARCH_CRITERIA$dwPreferredProtocols$LAYOUT_; }

    static final VarHandle OPENCARD_SEARCH_CRITERIA$dwPreferredProtocols$VH_ = OPENCARD_SEARCH_CRITERIA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwPreferredProtocols"));
    static final java.lang.invoke.VarHandle OPENCARD_SEARCH_CRITERIA$dwPreferredProtocols$VH() { return OPENCARD_SEARCH_CRITERIA$dwPreferredProtocols$VH_; }

    static final MemoryLayout OPENCARDNAME_EXA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwStructSize"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("hSCardContext"),
        C_POINTER.withName("hwndOwner"),
        C_LONG.withName("dwFlags"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpstrTitle"),
        C_POINTER.withName("lpstrSearchDesc"),
        C_POINTER.withName("hIcon"),
        C_POINTER.withName("pOpenCardSearchCriteria"),
        C_POINTER.withName("lpfnConnect"),
        C_POINTER.withName("pvUserData"),
        C_LONG.withName("dwShareMode"),
        C_LONG.withName("dwPreferredProtocols"),
        C_POINTER.withName("lpstrRdr"),
        C_LONG.withName("nMaxRdr"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpstrCard"),
        C_LONG.withName("nMaxCard"),
        C_LONG.withName("dwActiveProtocol"),
        C_LONGLONG.withName("hCardHandle")
    );
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXA$struct$LAYOUT() { return OPENCARDNAME_EXA$struct$LAYOUT_; }

    static final MemoryLayout OPENCARDNAME_EXA$dwStructSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXA$dwStructSize$LAYOUT() { return OPENCARDNAME_EXA$dwStructSize$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXA$dwStructSize$VH_ = OPENCARDNAME_EXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStructSize"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXA$dwStructSize$VH() { return OPENCARDNAME_EXA$dwStructSize$VH_; }

    static final MemoryLayout OPENCARDNAME_EXA$hSCardContext$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXA$hSCardContext$LAYOUT() { return OPENCARDNAME_EXA$hSCardContext$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXA$hSCardContext$VH_ = OPENCARDNAME_EXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hSCardContext"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXA$hSCardContext$VH() { return OPENCARDNAME_EXA$hSCardContext$VH_; }

    static final MemoryLayout OPENCARDNAME_EXA$hwndOwner$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXA$hwndOwner$LAYOUT() { return OPENCARDNAME_EXA$hwndOwner$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXA$hwndOwner$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndOwner")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXA$hwndOwner$VH() { return OPENCARDNAME_EXA$hwndOwner$VH_; }

    static final MemoryLayout OPENCARDNAME_EXA$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXA$dwFlags$LAYOUT() { return OPENCARDNAME_EXA$dwFlags$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXA$dwFlags$VH_ = OPENCARDNAME_EXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXA$dwFlags$VH() { return OPENCARDNAME_EXA$dwFlags$VH_; }

    static final MemoryLayout OPENCARDNAME_EXA$lpstrTitle$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXA$lpstrTitle$LAYOUT() { return OPENCARDNAME_EXA$lpstrTitle$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXA$lpstrTitle$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrTitle")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXA$lpstrTitle$VH() { return OPENCARDNAME_EXA$lpstrTitle$VH_; }

    static final MemoryLayout OPENCARDNAME_EXA$lpstrSearchDesc$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXA$lpstrSearchDesc$LAYOUT() { return OPENCARDNAME_EXA$lpstrSearchDesc$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXA$lpstrSearchDesc$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrSearchDesc")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXA$lpstrSearchDesc$VH() { return OPENCARDNAME_EXA$lpstrSearchDesc$VH_; }

    static final MemoryLayout OPENCARDNAME_EXA$hIcon$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXA$hIcon$LAYOUT() { return OPENCARDNAME_EXA$hIcon$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXA$hIcon$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hIcon")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXA$hIcon$VH() { return OPENCARDNAME_EXA$hIcon$VH_; }

    static final MemoryLayout OPENCARDNAME_EXA$pOpenCardSearchCriteria$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXA$pOpenCardSearchCriteria$LAYOUT() { return OPENCARDNAME_EXA$pOpenCardSearchCriteria$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXA$pOpenCardSearchCriteria$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pOpenCardSearchCriteria")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXA$pOpenCardSearchCriteria$VH() { return OPENCARDNAME_EXA$pOpenCardSearchCriteria$VH_; }

    static final MemoryLayout OPENCARDNAME_EXA$lpfnConnect$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXA$lpfnConnect$LAYOUT() { return OPENCARDNAME_EXA$lpfnConnect$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXA$lpfnConnect$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnConnect")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXA$lpfnConnect$VH() { return OPENCARDNAME_EXA$lpfnConnect$VH_; }

    static final MemoryLayout OPENCARDNAME_EXA$pvUserData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXA$pvUserData$LAYOUT() { return OPENCARDNAME_EXA$pvUserData$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXA$pvUserData$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvUserData")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXA$pvUserData$VH() { return OPENCARDNAME_EXA$pvUserData$VH_; }

    static final MemoryLayout OPENCARDNAME_EXA$dwShareMode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXA$dwShareMode$LAYOUT() { return OPENCARDNAME_EXA$dwShareMode$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXA$dwShareMode$VH_ = OPENCARDNAME_EXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwShareMode"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXA$dwShareMode$VH() { return OPENCARDNAME_EXA$dwShareMode$VH_; }

    static final MemoryLayout OPENCARDNAME_EXA$dwPreferredProtocols$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXA$dwPreferredProtocols$LAYOUT() { return OPENCARDNAME_EXA$dwPreferredProtocols$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXA$dwPreferredProtocols$VH_ = OPENCARDNAME_EXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwPreferredProtocols"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXA$dwPreferredProtocols$VH() { return OPENCARDNAME_EXA$dwPreferredProtocols$VH_; }

    static final MemoryLayout OPENCARDNAME_EXA$lpstrRdr$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXA$lpstrRdr$LAYOUT() { return OPENCARDNAME_EXA$lpstrRdr$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXA$lpstrRdr$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrRdr")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXA$lpstrRdr$VH() { return OPENCARDNAME_EXA$lpstrRdr$VH_; }

    static final MemoryLayout OPENCARDNAME_EXA$nMaxRdr$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXA$nMaxRdr$LAYOUT() { return OPENCARDNAME_EXA$nMaxRdr$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXA$nMaxRdr$VH_ = OPENCARDNAME_EXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nMaxRdr"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXA$nMaxRdr$VH() { return OPENCARDNAME_EXA$nMaxRdr$VH_; }

    static final MemoryLayout OPENCARDNAME_EXA$lpstrCard$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXA$lpstrCard$LAYOUT() { return OPENCARDNAME_EXA$lpstrCard$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXA$lpstrCard$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrCard")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXA$lpstrCard$VH() { return OPENCARDNAME_EXA$lpstrCard$VH_; }

    static final MemoryLayout OPENCARDNAME_EXA$nMaxCard$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXA$nMaxCard$LAYOUT() { return OPENCARDNAME_EXA$nMaxCard$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXA$nMaxCard$VH_ = OPENCARDNAME_EXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nMaxCard"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXA$nMaxCard$VH() { return OPENCARDNAME_EXA$nMaxCard$VH_; }

    static final MemoryLayout OPENCARDNAME_EXA$dwActiveProtocol$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXA$dwActiveProtocol$LAYOUT() { return OPENCARDNAME_EXA$dwActiveProtocol$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXA$dwActiveProtocol$VH_ = OPENCARDNAME_EXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwActiveProtocol"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXA$dwActiveProtocol$VH() { return OPENCARDNAME_EXA$dwActiveProtocol$VH_; }

    static final MemoryLayout OPENCARDNAME_EXA$hCardHandle$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXA$hCardHandle$LAYOUT() { return OPENCARDNAME_EXA$hCardHandle$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXA$hCardHandle$VH_ = OPENCARDNAME_EXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCardHandle"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXA$hCardHandle$VH() { return OPENCARDNAME_EXA$hCardHandle$VH_; }

    static final MemoryLayout OPENCARDNAME_EXW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwStructSize"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("hSCardContext"),
        C_POINTER.withName("hwndOwner"),
        C_LONG.withName("dwFlags"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpstrTitle"),
        C_POINTER.withName("lpstrSearchDesc"),
        C_POINTER.withName("hIcon"),
        C_POINTER.withName("pOpenCardSearchCriteria"),
        C_POINTER.withName("lpfnConnect"),
        C_POINTER.withName("pvUserData"),
        C_LONG.withName("dwShareMode"),
        C_LONG.withName("dwPreferredProtocols"),
        C_POINTER.withName("lpstrRdr"),
        C_LONG.withName("nMaxRdr"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpstrCard"),
        C_LONG.withName("nMaxCard"),
        C_LONG.withName("dwActiveProtocol"),
        C_LONGLONG.withName("hCardHandle")
    );
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXW$struct$LAYOUT() { return OPENCARDNAME_EXW$struct$LAYOUT_; }

    static final MemoryLayout OPENCARDNAME_EXW$dwStructSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXW$dwStructSize$LAYOUT() { return OPENCARDNAME_EXW$dwStructSize$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXW$dwStructSize$VH_ = OPENCARDNAME_EXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStructSize"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXW$dwStructSize$VH() { return OPENCARDNAME_EXW$dwStructSize$VH_; }

    static final MemoryLayout OPENCARDNAME_EXW$hSCardContext$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXW$hSCardContext$LAYOUT() { return OPENCARDNAME_EXW$hSCardContext$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXW$hSCardContext$VH_ = OPENCARDNAME_EXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hSCardContext"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXW$hSCardContext$VH() { return OPENCARDNAME_EXW$hSCardContext$VH_; }

    static final MemoryLayout OPENCARDNAME_EXW$hwndOwner$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXW$hwndOwner$LAYOUT() { return OPENCARDNAME_EXW$hwndOwner$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXW$hwndOwner$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndOwner")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXW$hwndOwner$VH() { return OPENCARDNAME_EXW$hwndOwner$VH_; }

    static final MemoryLayout OPENCARDNAME_EXW$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXW$dwFlags$LAYOUT() { return OPENCARDNAME_EXW$dwFlags$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXW$dwFlags$VH_ = OPENCARDNAME_EXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXW$dwFlags$VH() { return OPENCARDNAME_EXW$dwFlags$VH_; }

    static final MemoryLayout OPENCARDNAME_EXW$lpstrTitle$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXW$lpstrTitle$LAYOUT() { return OPENCARDNAME_EXW$lpstrTitle$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXW$lpstrTitle$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrTitle")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXW$lpstrTitle$VH() { return OPENCARDNAME_EXW$lpstrTitle$VH_; }

    static final MemoryLayout OPENCARDNAME_EXW$lpstrSearchDesc$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXW$lpstrSearchDesc$LAYOUT() { return OPENCARDNAME_EXW$lpstrSearchDesc$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXW$lpstrSearchDesc$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrSearchDesc")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXW$lpstrSearchDesc$VH() { return OPENCARDNAME_EXW$lpstrSearchDesc$VH_; }

    static final MemoryLayout OPENCARDNAME_EXW$hIcon$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXW$hIcon$LAYOUT() { return OPENCARDNAME_EXW$hIcon$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXW$hIcon$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hIcon")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXW$hIcon$VH() { return OPENCARDNAME_EXW$hIcon$VH_; }

    static final MemoryLayout OPENCARDNAME_EXW$pOpenCardSearchCriteria$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXW$pOpenCardSearchCriteria$LAYOUT() { return OPENCARDNAME_EXW$pOpenCardSearchCriteria$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXW$pOpenCardSearchCriteria$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pOpenCardSearchCriteria")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXW$pOpenCardSearchCriteria$VH() { return OPENCARDNAME_EXW$pOpenCardSearchCriteria$VH_; }

    static final MemoryLayout OPENCARDNAME_EXW$lpfnConnect$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXW$lpfnConnect$LAYOUT() { return OPENCARDNAME_EXW$lpfnConnect$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXW$lpfnConnect$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnConnect")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXW$lpfnConnect$VH() { return OPENCARDNAME_EXW$lpfnConnect$VH_; }

    static final MemoryLayout OPENCARDNAME_EXW$pvUserData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXW$pvUserData$LAYOUT() { return OPENCARDNAME_EXW$pvUserData$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXW$pvUserData$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvUserData")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXW$pvUserData$VH() { return OPENCARDNAME_EXW$pvUserData$VH_; }

    static final MemoryLayout OPENCARDNAME_EXW$dwShareMode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXW$dwShareMode$LAYOUT() { return OPENCARDNAME_EXW$dwShareMode$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXW$dwShareMode$VH_ = OPENCARDNAME_EXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwShareMode"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXW$dwShareMode$VH() { return OPENCARDNAME_EXW$dwShareMode$VH_; }

    static final MemoryLayout OPENCARDNAME_EXW$dwPreferredProtocols$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXW$dwPreferredProtocols$LAYOUT() { return OPENCARDNAME_EXW$dwPreferredProtocols$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXW$dwPreferredProtocols$VH_ = OPENCARDNAME_EXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwPreferredProtocols"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXW$dwPreferredProtocols$VH() { return OPENCARDNAME_EXW$dwPreferredProtocols$VH_; }

    static final MemoryLayout OPENCARDNAME_EXW$lpstrRdr$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXW$lpstrRdr$LAYOUT() { return OPENCARDNAME_EXW$lpstrRdr$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXW$lpstrRdr$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrRdr")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXW$lpstrRdr$VH() { return OPENCARDNAME_EXW$lpstrRdr$VH_; }

    static final MemoryLayout OPENCARDNAME_EXW$nMaxRdr$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXW$nMaxRdr$LAYOUT() { return OPENCARDNAME_EXW$nMaxRdr$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXW$nMaxRdr$VH_ = OPENCARDNAME_EXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nMaxRdr"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXW$nMaxRdr$VH() { return OPENCARDNAME_EXW$nMaxRdr$VH_; }

    static final MemoryLayout OPENCARDNAME_EXW$lpstrCard$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXW$lpstrCard$LAYOUT() { return OPENCARDNAME_EXW$lpstrCard$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXW$lpstrCard$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrCard")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXW$lpstrCard$VH() { return OPENCARDNAME_EXW$lpstrCard$VH_; }

    static final MemoryLayout OPENCARDNAME_EXW$nMaxCard$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXW$nMaxCard$LAYOUT() { return OPENCARDNAME_EXW$nMaxCard$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXW$nMaxCard$VH_ = OPENCARDNAME_EXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nMaxCard"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXW$nMaxCard$VH() { return OPENCARDNAME_EXW$nMaxCard$VH_; }

    static final MemoryLayout OPENCARDNAME_EXW$dwActiveProtocol$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXW$dwActiveProtocol$LAYOUT() { return OPENCARDNAME_EXW$dwActiveProtocol$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXW$dwActiveProtocol$VH_ = OPENCARDNAME_EXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwActiveProtocol"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXW$dwActiveProtocol$VH() { return OPENCARDNAME_EXW$dwActiveProtocol$VH_; }

    static final MemoryLayout OPENCARDNAME_EXW$hCardHandle$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EXW$hCardHandle$LAYOUT() { return OPENCARDNAME_EXW$hCardHandle$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EXW$hCardHandle$VH_ = OPENCARDNAME_EXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCardHandle"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EXW$hCardHandle$VH() { return OPENCARDNAME_EXW$hCardHandle$VH_; }

    static final MemoryLayout OPENCARDNAME_EX$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwStructSize"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("hSCardContext"),
        C_POINTER.withName("hwndOwner"),
        C_LONG.withName("dwFlags"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpstrTitle"),
        C_POINTER.withName("lpstrSearchDesc"),
        C_POINTER.withName("hIcon"),
        C_POINTER.withName("pOpenCardSearchCriteria"),
        C_POINTER.withName("lpfnConnect"),
        C_POINTER.withName("pvUserData"),
        C_LONG.withName("dwShareMode"),
        C_LONG.withName("dwPreferredProtocols"),
        C_POINTER.withName("lpstrRdr"),
        C_LONG.withName("nMaxRdr"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpstrCard"),
        C_LONG.withName("nMaxCard"),
        C_LONG.withName("dwActiveProtocol"),
        C_LONGLONG.withName("hCardHandle")
    );
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EX$struct$LAYOUT() { return OPENCARDNAME_EX$struct$LAYOUT_; }

    static final MemoryLayout OPENCARDNAME_EX$dwStructSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EX$dwStructSize$LAYOUT() { return OPENCARDNAME_EX$dwStructSize$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EX$dwStructSize$VH_ = OPENCARDNAME_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStructSize"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EX$dwStructSize$VH() { return OPENCARDNAME_EX$dwStructSize$VH_; }

    static final MemoryLayout OPENCARDNAME_EX$hSCardContext$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EX$hSCardContext$LAYOUT() { return OPENCARDNAME_EX$hSCardContext$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EX$hSCardContext$VH_ = OPENCARDNAME_EX$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hSCardContext"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EX$hSCardContext$VH() { return OPENCARDNAME_EX$hSCardContext$VH_; }

    static final MemoryLayout OPENCARDNAME_EX$hwndOwner$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EX$hwndOwner$LAYOUT() { return OPENCARDNAME_EX$hwndOwner$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EX$hwndOwner$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EX$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndOwner")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EX$hwndOwner$VH() { return OPENCARDNAME_EX$hwndOwner$VH_; }

    static final MemoryLayout OPENCARDNAME_EX$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EX$dwFlags$LAYOUT() { return OPENCARDNAME_EX$dwFlags$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EX$dwFlags$VH_ = OPENCARDNAME_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EX$dwFlags$VH() { return OPENCARDNAME_EX$dwFlags$VH_; }

    static final MemoryLayout OPENCARDNAME_EX$lpstrTitle$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EX$lpstrTitle$LAYOUT() { return OPENCARDNAME_EX$lpstrTitle$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EX$lpstrTitle$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EX$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrTitle")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EX$lpstrTitle$VH() { return OPENCARDNAME_EX$lpstrTitle$VH_; }

    static final MemoryLayout OPENCARDNAME_EX$lpstrSearchDesc$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EX$lpstrSearchDesc$LAYOUT() { return OPENCARDNAME_EX$lpstrSearchDesc$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EX$lpstrSearchDesc$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EX$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrSearchDesc")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EX$lpstrSearchDesc$VH() { return OPENCARDNAME_EX$lpstrSearchDesc$VH_; }

    static final MemoryLayout OPENCARDNAME_EX$hIcon$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EX$hIcon$LAYOUT() { return OPENCARDNAME_EX$hIcon$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EX$hIcon$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EX$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hIcon")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EX$hIcon$VH() { return OPENCARDNAME_EX$hIcon$VH_; }

    static final MemoryLayout OPENCARDNAME_EX$pOpenCardSearchCriteria$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EX$pOpenCardSearchCriteria$LAYOUT() { return OPENCARDNAME_EX$pOpenCardSearchCriteria$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EX$pOpenCardSearchCriteria$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EX$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pOpenCardSearchCriteria")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EX$pOpenCardSearchCriteria$VH() { return OPENCARDNAME_EX$pOpenCardSearchCriteria$VH_; }

    static final MemoryLayout OPENCARDNAME_EX$lpfnConnect$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EX$lpfnConnect$LAYOUT() { return OPENCARDNAME_EX$lpfnConnect$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EX$lpfnConnect$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EX$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnConnect")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EX$lpfnConnect$VH() { return OPENCARDNAME_EX$lpfnConnect$VH_; }

    static final MemoryLayout OPENCARDNAME_EX$pvUserData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EX$pvUserData$LAYOUT() { return OPENCARDNAME_EX$pvUserData$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EX$pvUserData$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EX$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvUserData")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EX$pvUserData$VH() { return OPENCARDNAME_EX$pvUserData$VH_; }

    static final MemoryLayout OPENCARDNAME_EX$dwShareMode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EX$dwShareMode$LAYOUT() { return OPENCARDNAME_EX$dwShareMode$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EX$dwShareMode$VH_ = OPENCARDNAME_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwShareMode"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EX$dwShareMode$VH() { return OPENCARDNAME_EX$dwShareMode$VH_; }

    static final MemoryLayout OPENCARDNAME_EX$dwPreferredProtocols$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EX$dwPreferredProtocols$LAYOUT() { return OPENCARDNAME_EX$dwPreferredProtocols$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EX$dwPreferredProtocols$VH_ = OPENCARDNAME_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwPreferredProtocols"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EX$dwPreferredProtocols$VH() { return OPENCARDNAME_EX$dwPreferredProtocols$VH_; }

    static final MemoryLayout OPENCARDNAME_EX$lpstrRdr$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EX$lpstrRdr$LAYOUT() { return OPENCARDNAME_EX$lpstrRdr$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EX$lpstrRdr$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EX$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrRdr")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EX$lpstrRdr$VH() { return OPENCARDNAME_EX$lpstrRdr$VH_; }

    static final MemoryLayout OPENCARDNAME_EX$nMaxRdr$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EX$nMaxRdr$LAYOUT() { return OPENCARDNAME_EX$nMaxRdr$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EX$nMaxRdr$VH_ = OPENCARDNAME_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nMaxRdr"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EX$nMaxRdr$VH() { return OPENCARDNAME_EX$nMaxRdr$VH_; }

    static final MemoryLayout OPENCARDNAME_EX$lpstrCard$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EX$lpstrCard$LAYOUT() { return OPENCARDNAME_EX$lpstrCard$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EX$lpstrCard$VH_ = MemoryHandles.asAddressVarHandle(OPENCARDNAME_EX$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrCard")));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EX$lpstrCard$VH() { return OPENCARDNAME_EX$lpstrCard$VH_; }

    static final MemoryLayout OPENCARDNAME_EX$nMaxCard$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EX$nMaxCard$LAYOUT() { return OPENCARDNAME_EX$nMaxCard$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EX$nMaxCard$VH_ = OPENCARDNAME_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nMaxCard"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EX$nMaxCard$VH() { return OPENCARDNAME_EX$nMaxCard$VH_; }

    static final MemoryLayout OPENCARDNAME_EX$dwActiveProtocol$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EX$dwActiveProtocol$LAYOUT() { return OPENCARDNAME_EX$dwActiveProtocol$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EX$dwActiveProtocol$VH_ = OPENCARDNAME_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwActiveProtocol"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EX$dwActiveProtocol$VH() { return OPENCARDNAME_EX$dwActiveProtocol$VH_; }

    static final MemoryLayout OPENCARDNAME_EX$hCardHandle$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout OPENCARDNAME_EX$hCardHandle$LAYOUT() { return OPENCARDNAME_EX$hCardHandle$LAYOUT_; }

    static final VarHandle OPENCARDNAME_EX$hCardHandle$VH_ = OPENCARDNAME_EX$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCardHandle"));
    static final java.lang.invoke.VarHandle OPENCARDNAME_EX$hCardHandle$VH() { return OPENCARDNAME_EX$hCardHandle$VH_; }

    static final int RSR_MATCH_TYPE_READER_AND_CONTAINER() { return (int)1L; }

    static final int RSR_MATCH_TYPE_SERIAL_NUMBER() { return (int)2L; }

    static final int RSR_MATCH_TYPE_ALL_CARDS() { return (int)3L; }

    static final MemoryLayout READER_SEL_REQUEST$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwShareMode"),
        C_LONG.withName("dwPreferredProtocols"),
        C_INT.withName("MatchType"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbReaderNameOffset"),
            C_LONG.withName("cchReaderNameLength"),
            C_LONG.withName("cbContainerNameOffset"),
            C_LONG.withName("cchContainerNameLength"),
            C_LONG.withName("dwDesiredCardModuleVersion"),
            C_LONG.withName("dwCspFlags")
        ).withName("ReaderAndContainerParameter"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbSerialNumberOffset"),
            C_LONG.withName("cbSerialNumberLength"),
            C_LONG.withName("dwDesiredCardModuleVersion")
        ).withName("SerialNumberParameter")
    );
    static final jdk.incubator.foreign.MemoryLayout READER_SEL_REQUEST$struct$LAYOUT() { return READER_SEL_REQUEST$struct$LAYOUT_; }

    static final MemoryLayout READER_SEL_REQUEST$dwShareMode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout READER_SEL_REQUEST$dwShareMode$LAYOUT() { return READER_SEL_REQUEST$dwShareMode$LAYOUT_; }

    static final VarHandle READER_SEL_REQUEST$dwShareMode$VH_ = READER_SEL_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwShareMode"));
    static final java.lang.invoke.VarHandle READER_SEL_REQUEST$dwShareMode$VH() { return READER_SEL_REQUEST$dwShareMode$VH_; }

    static final MemoryLayout READER_SEL_REQUEST$dwPreferredProtocols$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout READER_SEL_REQUEST$dwPreferredProtocols$LAYOUT() { return READER_SEL_REQUEST$dwPreferredProtocols$LAYOUT_; }

    static final VarHandle READER_SEL_REQUEST$dwPreferredProtocols$VH_ = READER_SEL_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwPreferredProtocols"));
    static final java.lang.invoke.VarHandle READER_SEL_REQUEST$dwPreferredProtocols$VH() { return READER_SEL_REQUEST$dwPreferredProtocols$VH_; }

    static final MemoryLayout READER_SEL_REQUEST$MatchType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout READER_SEL_REQUEST$MatchType$LAYOUT() { return READER_SEL_REQUEST$MatchType$LAYOUT_; }

    static final VarHandle READER_SEL_REQUEST$MatchType$VH_ = READER_SEL_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MatchType"));
    static final java.lang.invoke.VarHandle READER_SEL_REQUEST$MatchType$VH() { return READER_SEL_REQUEST$MatchType$VH_; }

    static final MemoryLayout ReaderAndContainerParameter$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbReaderNameOffset"),
        C_LONG.withName("cchReaderNameLength"),
        C_LONG.withName("cbContainerNameOffset"),
        C_LONG.withName("cchContainerNameLength"),
        C_LONG.withName("dwDesiredCardModuleVersion"),
        C_LONG.withName("dwCspFlags")
    );
    static final jdk.incubator.foreign.MemoryLayout ReaderAndContainerParameter$struct$LAYOUT() { return ReaderAndContainerParameter$struct$LAYOUT_; }

    static final MemoryLayout ReaderAndContainerParameter$cbReaderNameOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout ReaderAndContainerParameter$cbReaderNameOffset$LAYOUT() { return ReaderAndContainerParameter$cbReaderNameOffset$LAYOUT_; }

    static final VarHandle ReaderAndContainerParameter$cbReaderNameOffset$VH_ = ReaderAndContainerParameter$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbReaderNameOffset"));
    static final java.lang.invoke.VarHandle ReaderAndContainerParameter$cbReaderNameOffset$VH() { return ReaderAndContainerParameter$cbReaderNameOffset$VH_; }

    static final MemoryLayout ReaderAndContainerParameter$cchReaderNameLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout ReaderAndContainerParameter$cchReaderNameLength$LAYOUT() { return ReaderAndContainerParameter$cchReaderNameLength$LAYOUT_; }

    static final VarHandle ReaderAndContainerParameter$cchReaderNameLength$VH_ = ReaderAndContainerParameter$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cchReaderNameLength"));
    static final java.lang.invoke.VarHandle ReaderAndContainerParameter$cchReaderNameLength$VH() { return ReaderAndContainerParameter$cchReaderNameLength$VH_; }

    static final MemoryLayout ReaderAndContainerParameter$cbContainerNameOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout ReaderAndContainerParameter$cbContainerNameOffset$LAYOUT() { return ReaderAndContainerParameter$cbContainerNameOffset$LAYOUT_; }

    static final VarHandle ReaderAndContainerParameter$cbContainerNameOffset$VH_ = ReaderAndContainerParameter$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbContainerNameOffset"));
    static final java.lang.invoke.VarHandle ReaderAndContainerParameter$cbContainerNameOffset$VH() { return ReaderAndContainerParameter$cbContainerNameOffset$VH_; }

    static final MemoryLayout ReaderAndContainerParameter$cchContainerNameLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout ReaderAndContainerParameter$cchContainerNameLength$LAYOUT() { return ReaderAndContainerParameter$cchContainerNameLength$LAYOUT_; }

    static final VarHandle ReaderAndContainerParameter$cchContainerNameLength$VH_ = ReaderAndContainerParameter$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cchContainerNameLength"));
    static final java.lang.invoke.VarHandle ReaderAndContainerParameter$cchContainerNameLength$VH() { return ReaderAndContainerParameter$cchContainerNameLength$VH_; }

    static final MemoryLayout ReaderAndContainerParameter$dwDesiredCardModuleVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout ReaderAndContainerParameter$dwDesiredCardModuleVersion$LAYOUT() { return ReaderAndContainerParameter$dwDesiredCardModuleVersion$LAYOUT_; }

    static final VarHandle ReaderAndContainerParameter$dwDesiredCardModuleVersion$VH_ = ReaderAndContainerParameter$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwDesiredCardModuleVersion"));
    static final java.lang.invoke.VarHandle ReaderAndContainerParameter$dwDesiredCardModuleVersion$VH() { return ReaderAndContainerParameter$dwDesiredCardModuleVersion$VH_; }

    static final MemoryLayout ReaderAndContainerParameter$dwCspFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout ReaderAndContainerParameter$dwCspFlags$LAYOUT() { return ReaderAndContainerParameter$dwCspFlags$LAYOUT_; }

    static final VarHandle ReaderAndContainerParameter$dwCspFlags$VH_ = ReaderAndContainerParameter$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCspFlags"));
    static final java.lang.invoke.VarHandle ReaderAndContainerParameter$dwCspFlags$VH() { return ReaderAndContainerParameter$dwCspFlags$VH_; }

    static final MemoryLayout SerialNumberParameter$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSerialNumberOffset"),
        C_LONG.withName("cbSerialNumberLength"),
        C_LONG.withName("dwDesiredCardModuleVersion")
    );
    static final jdk.incubator.foreign.MemoryLayout SerialNumberParameter$struct$LAYOUT() { return SerialNumberParameter$struct$LAYOUT_; }

    static final MemoryLayout SerialNumberParameter$cbSerialNumberOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout SerialNumberParameter$cbSerialNumberOffset$LAYOUT() { return SerialNumberParameter$cbSerialNumberOffset$LAYOUT_; }

    static final VarHandle SerialNumberParameter$cbSerialNumberOffset$VH_ = SerialNumberParameter$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSerialNumberOffset"));
    static final java.lang.invoke.VarHandle SerialNumberParameter$cbSerialNumberOffset$VH() { return SerialNumberParameter$cbSerialNumberOffset$VH_; }

    static final MemoryLayout SerialNumberParameter$cbSerialNumberLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout SerialNumberParameter$cbSerialNumberLength$LAYOUT() { return SerialNumberParameter$cbSerialNumberLength$LAYOUT_; }

    static final VarHandle SerialNumberParameter$cbSerialNumberLength$VH_ = SerialNumberParameter$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSerialNumberLength"));
    static final java.lang.invoke.VarHandle SerialNumberParameter$cbSerialNumberLength$VH() { return SerialNumberParameter$cbSerialNumberLength$VH_; }

    static final MemoryLayout SerialNumberParameter$dwDesiredCardModuleVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout SerialNumberParameter$dwDesiredCardModuleVersion$LAYOUT() { return SerialNumberParameter$dwDesiredCardModuleVersion$LAYOUT_; }

    static final VarHandle SerialNumberParameter$dwDesiredCardModuleVersion$VH_ = SerialNumberParameter$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwDesiredCardModuleVersion"));
    static final java.lang.invoke.VarHandle SerialNumberParameter$dwDesiredCardModuleVersion$VH() { return SerialNumberParameter$dwDesiredCardModuleVersion$VH_; }

    static final MemoryLayout READER_SEL_RESPONSE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbReaderNameOffset"),
        C_LONG.withName("cchReaderNameLength"),
        C_LONG.withName("cbCardNameOffset"),
        C_LONG.withName("cchCardNameLength")
    );
    static final jdk.incubator.foreign.MemoryLayout READER_SEL_RESPONSE$struct$LAYOUT() { return READER_SEL_RESPONSE$struct$LAYOUT_; }

    static final MemoryLayout READER_SEL_RESPONSE$cbReaderNameOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout READER_SEL_RESPONSE$cbReaderNameOffset$LAYOUT() { return READER_SEL_RESPONSE$cbReaderNameOffset$LAYOUT_; }

    static final VarHandle READER_SEL_RESPONSE$cbReaderNameOffset$VH_ = READER_SEL_RESPONSE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbReaderNameOffset"));
    static final java.lang.invoke.VarHandle READER_SEL_RESPONSE$cbReaderNameOffset$VH() { return READER_SEL_RESPONSE$cbReaderNameOffset$VH_; }

    static final MemoryLayout READER_SEL_RESPONSE$cchReaderNameLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout READER_SEL_RESPONSE$cchReaderNameLength$LAYOUT() { return READER_SEL_RESPONSE$cchReaderNameLength$LAYOUT_; }

    static final VarHandle READER_SEL_RESPONSE$cchReaderNameLength$VH_ = READER_SEL_RESPONSE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cchReaderNameLength"));
    static final java.lang.invoke.VarHandle READER_SEL_RESPONSE$cchReaderNameLength$VH() { return READER_SEL_RESPONSE$cchReaderNameLength$VH_; }

    static final MemoryLayout READER_SEL_RESPONSE$cbCardNameOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout READER_SEL_RESPONSE$cbCardNameOffset$LAYOUT() { return READER_SEL_RESPONSE$cbCardNameOffset$LAYOUT_; }

    static final VarHandle READER_SEL_RESPONSE$cbCardNameOffset$VH_ = READER_SEL_RESPONSE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbCardNameOffset"));
    static final java.lang.invoke.VarHandle READER_SEL_RESPONSE$cbCardNameOffset$VH() { return READER_SEL_RESPONSE$cbCardNameOffset$VH_; }

    static final MemoryLayout READER_SEL_RESPONSE$cchCardNameLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout READER_SEL_RESPONSE$cchCardNameLength$LAYOUT() { return READER_SEL_RESPONSE$cchCardNameLength$LAYOUT_; }

    static final VarHandle READER_SEL_RESPONSE$cchCardNameLength$VH_ = READER_SEL_RESPONSE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cchCardNameLength"));
    static final java.lang.invoke.VarHandle READER_SEL_RESPONSE$cchCardNameLength$VH() { return READER_SEL_RESPONSE$cchCardNameLength$VH_; }

    static final FunctionDescriptor SCardUIDlgSelectCardA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SCardUIDlgSelectCardA$FUNC() { return SCardUIDlgSelectCardA$FUNC_; }

    static final MethodHandle SCardUIDlgSelectCardA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SCardUIDlgSelectCardA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SCardUIDlgSelectCardA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SCardUIDlgSelectCardA$MH() { return SCardUIDlgSelectCardA$MH_; }

}

