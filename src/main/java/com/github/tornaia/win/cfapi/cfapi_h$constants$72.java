// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$72 extends cfapi_h$constants$71 {

    /* package-private */ cfapi_h$constants$72() {}
    static final MemoryLayout _DRIVER_INFO_8W$pDependentFiles$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DRIVER_INFO_8W$pDependentFiles$LAYOUT() { return _DRIVER_INFO_8W$pDependentFiles$LAYOUT_; }

    static final VarHandle _DRIVER_INFO_8W$pDependentFiles$VH_ = MemoryHandles.asAddressVarHandle(_DRIVER_INFO_8W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDependentFiles")));
    static final java.lang.invoke.VarHandle _DRIVER_INFO_8W$pDependentFiles$VH() { return _DRIVER_INFO_8W$pDependentFiles$VH_; }

    static final MemoryLayout _DRIVER_INFO_8W$pMonitorName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DRIVER_INFO_8W$pMonitorName$LAYOUT() { return _DRIVER_INFO_8W$pMonitorName$LAYOUT_; }

    static final VarHandle _DRIVER_INFO_8W$pMonitorName$VH_ = MemoryHandles.asAddressVarHandle(_DRIVER_INFO_8W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pMonitorName")));
    static final java.lang.invoke.VarHandle _DRIVER_INFO_8W$pMonitorName$VH() { return _DRIVER_INFO_8W$pMonitorName$VH_; }

    static final MemoryLayout _DRIVER_INFO_8W$pDefaultDataType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DRIVER_INFO_8W$pDefaultDataType$LAYOUT() { return _DRIVER_INFO_8W$pDefaultDataType$LAYOUT_; }

    static final VarHandle _DRIVER_INFO_8W$pDefaultDataType$VH_ = MemoryHandles.asAddressVarHandle(_DRIVER_INFO_8W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDefaultDataType")));
    static final java.lang.invoke.VarHandle _DRIVER_INFO_8W$pDefaultDataType$VH() { return _DRIVER_INFO_8W$pDefaultDataType$VH_; }

    static final MemoryLayout _DRIVER_INFO_8W$pszzPreviousNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DRIVER_INFO_8W$pszzPreviousNames$LAYOUT() { return _DRIVER_INFO_8W$pszzPreviousNames$LAYOUT_; }

    static final VarHandle _DRIVER_INFO_8W$pszzPreviousNames$VH_ = MemoryHandles.asAddressVarHandle(_DRIVER_INFO_8W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszzPreviousNames")));
    static final java.lang.invoke.VarHandle _DRIVER_INFO_8W$pszzPreviousNames$VH() { return _DRIVER_INFO_8W$pszzPreviousNames$VH_; }

    static final MemoryLayout _DRIVER_INFO_8W$dwlDriverVersion$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DRIVER_INFO_8W$dwlDriverVersion$LAYOUT() { return _DRIVER_INFO_8W$dwlDriverVersion$LAYOUT_; }

    static final VarHandle _DRIVER_INFO_8W$dwlDriverVersion$VH_ = _DRIVER_INFO_8W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwlDriverVersion"));
    static final java.lang.invoke.VarHandle _DRIVER_INFO_8W$dwlDriverVersion$VH() { return _DRIVER_INFO_8W$dwlDriverVersion$VH_; }

    static final MemoryLayout _DRIVER_INFO_8W$pszMfgName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DRIVER_INFO_8W$pszMfgName$LAYOUT() { return _DRIVER_INFO_8W$pszMfgName$LAYOUT_; }

    static final VarHandle _DRIVER_INFO_8W$pszMfgName$VH_ = MemoryHandles.asAddressVarHandle(_DRIVER_INFO_8W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszMfgName")));
    static final java.lang.invoke.VarHandle _DRIVER_INFO_8W$pszMfgName$VH() { return _DRIVER_INFO_8W$pszMfgName$VH_; }

    static final MemoryLayout _DRIVER_INFO_8W$pszOEMUrl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DRIVER_INFO_8W$pszOEMUrl$LAYOUT() { return _DRIVER_INFO_8W$pszOEMUrl$LAYOUT_; }

    static final VarHandle _DRIVER_INFO_8W$pszOEMUrl$VH_ = MemoryHandles.asAddressVarHandle(_DRIVER_INFO_8W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszOEMUrl")));
    static final java.lang.invoke.VarHandle _DRIVER_INFO_8W$pszOEMUrl$VH() { return _DRIVER_INFO_8W$pszOEMUrl$VH_; }

    static final MemoryLayout _DRIVER_INFO_8W$pszHardwareID$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DRIVER_INFO_8W$pszHardwareID$LAYOUT() { return _DRIVER_INFO_8W$pszHardwareID$LAYOUT_; }

    static final VarHandle _DRIVER_INFO_8W$pszHardwareID$VH_ = MemoryHandles.asAddressVarHandle(_DRIVER_INFO_8W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszHardwareID")));
    static final java.lang.invoke.VarHandle _DRIVER_INFO_8W$pszHardwareID$VH() { return _DRIVER_INFO_8W$pszHardwareID$VH_; }

    static final MemoryLayout _DRIVER_INFO_8W$pszProvider$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DRIVER_INFO_8W$pszProvider$LAYOUT() { return _DRIVER_INFO_8W$pszProvider$LAYOUT_; }

    static final VarHandle _DRIVER_INFO_8W$pszProvider$VH_ = MemoryHandles.asAddressVarHandle(_DRIVER_INFO_8W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszProvider")));
    static final java.lang.invoke.VarHandle _DRIVER_INFO_8W$pszProvider$VH() { return _DRIVER_INFO_8W$pszProvider$VH_; }

    static final MemoryLayout _DRIVER_INFO_8W$pszPrintProcessor$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DRIVER_INFO_8W$pszPrintProcessor$LAYOUT() { return _DRIVER_INFO_8W$pszPrintProcessor$LAYOUT_; }

    static final VarHandle _DRIVER_INFO_8W$pszPrintProcessor$VH_ = MemoryHandles.asAddressVarHandle(_DRIVER_INFO_8W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszPrintProcessor")));
    static final java.lang.invoke.VarHandle _DRIVER_INFO_8W$pszPrintProcessor$VH() { return _DRIVER_INFO_8W$pszPrintProcessor$VH_; }

    static final MemoryLayout _DRIVER_INFO_8W$pszVendorSetup$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DRIVER_INFO_8W$pszVendorSetup$LAYOUT() { return _DRIVER_INFO_8W$pszVendorSetup$LAYOUT_; }

    static final VarHandle _DRIVER_INFO_8W$pszVendorSetup$VH_ = MemoryHandles.asAddressVarHandle(_DRIVER_INFO_8W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszVendorSetup")));
    static final java.lang.invoke.VarHandle _DRIVER_INFO_8W$pszVendorSetup$VH() { return _DRIVER_INFO_8W$pszVendorSetup$VH_; }

    static final MemoryLayout _DRIVER_INFO_8W$pszzColorProfiles$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DRIVER_INFO_8W$pszzColorProfiles$LAYOUT() { return _DRIVER_INFO_8W$pszzColorProfiles$LAYOUT_; }

    static final VarHandle _DRIVER_INFO_8W$pszzColorProfiles$VH_ = MemoryHandles.asAddressVarHandle(_DRIVER_INFO_8W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszzColorProfiles")));
    static final java.lang.invoke.VarHandle _DRIVER_INFO_8W$pszzColorProfiles$VH() { return _DRIVER_INFO_8W$pszzColorProfiles$VH_; }

    static final MemoryLayout _DRIVER_INFO_8W$pszInfPath$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DRIVER_INFO_8W$pszInfPath$LAYOUT() { return _DRIVER_INFO_8W$pszInfPath$LAYOUT_; }

    static final VarHandle _DRIVER_INFO_8W$pszInfPath$VH_ = MemoryHandles.asAddressVarHandle(_DRIVER_INFO_8W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszInfPath")));
    static final java.lang.invoke.VarHandle _DRIVER_INFO_8W$pszInfPath$VH() { return _DRIVER_INFO_8W$pszInfPath$VH_; }

    static final MemoryLayout _DRIVER_INFO_8W$dwPrinterDriverAttributes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DRIVER_INFO_8W$dwPrinterDriverAttributes$LAYOUT() { return _DRIVER_INFO_8W$dwPrinterDriverAttributes$LAYOUT_; }

    static final VarHandle _DRIVER_INFO_8W$dwPrinterDriverAttributes$VH_ = _DRIVER_INFO_8W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwPrinterDriverAttributes"));
    static final java.lang.invoke.VarHandle _DRIVER_INFO_8W$dwPrinterDriverAttributes$VH() { return _DRIVER_INFO_8W$dwPrinterDriverAttributes$VH_; }

    static final MemoryLayout _DRIVER_INFO_8W$pszzCoreDriverDependencies$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DRIVER_INFO_8W$pszzCoreDriverDependencies$LAYOUT() { return _DRIVER_INFO_8W$pszzCoreDriverDependencies$LAYOUT_; }

    static final VarHandle _DRIVER_INFO_8W$pszzCoreDriverDependencies$VH_ = MemoryHandles.asAddressVarHandle(_DRIVER_INFO_8W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszzCoreDriverDependencies")));
    static final java.lang.invoke.VarHandle _DRIVER_INFO_8W$pszzCoreDriverDependencies$VH() { return _DRIVER_INFO_8W$pszzCoreDriverDependencies$VH_; }

    static final MemoryLayout _DRIVER_INFO_8W$dwlMinInboxDriverVerVersion$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DRIVER_INFO_8W$dwlMinInboxDriverVerVersion$LAYOUT() { return _DRIVER_INFO_8W$dwlMinInboxDriverVerVersion$LAYOUT_; }

    static final VarHandle _DRIVER_INFO_8W$dwlMinInboxDriverVerVersion$VH_ = _DRIVER_INFO_8W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwlMinInboxDriverVerVersion"));
    static final java.lang.invoke.VarHandle _DRIVER_INFO_8W$dwlMinInboxDriverVerVersion$VH() { return _DRIVER_INFO_8W$dwlMinInboxDriverVerVersion$VH_; }

    static final MemoryLayout _DOC_INFO_1A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pDocName"),
        C_POINTER.withName("pOutputFile"),
        C_POINTER.withName("pDatatype")
    ).withName("_DOC_INFO_1A");
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_1A$struct$LAYOUT() { return _DOC_INFO_1A$struct$LAYOUT_; }

    static final MemoryLayout _DOC_INFO_1A$pDocName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_1A$pDocName$LAYOUT() { return _DOC_INFO_1A$pDocName$LAYOUT_; }

    static final VarHandle _DOC_INFO_1A$pDocName$VH_ = MemoryHandles.asAddressVarHandle(_DOC_INFO_1A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDocName")));
    static final java.lang.invoke.VarHandle _DOC_INFO_1A$pDocName$VH() { return _DOC_INFO_1A$pDocName$VH_; }

    static final MemoryLayout _DOC_INFO_1A$pOutputFile$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_1A$pOutputFile$LAYOUT() { return _DOC_INFO_1A$pOutputFile$LAYOUT_; }

    static final VarHandle _DOC_INFO_1A$pOutputFile$VH_ = MemoryHandles.asAddressVarHandle(_DOC_INFO_1A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pOutputFile")));
    static final java.lang.invoke.VarHandle _DOC_INFO_1A$pOutputFile$VH() { return _DOC_INFO_1A$pOutputFile$VH_; }

    static final MemoryLayout _DOC_INFO_1A$pDatatype$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_1A$pDatatype$LAYOUT() { return _DOC_INFO_1A$pDatatype$LAYOUT_; }

    static final VarHandle _DOC_INFO_1A$pDatatype$VH_ = MemoryHandles.asAddressVarHandle(_DOC_INFO_1A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDatatype")));
    static final java.lang.invoke.VarHandle _DOC_INFO_1A$pDatatype$VH() { return _DOC_INFO_1A$pDatatype$VH_; }

    static final MemoryLayout _DOC_INFO_1W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pDocName"),
        C_POINTER.withName("pOutputFile"),
        C_POINTER.withName("pDatatype")
    ).withName("_DOC_INFO_1W");
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_1W$struct$LAYOUT() { return _DOC_INFO_1W$struct$LAYOUT_; }

    static final MemoryLayout _DOC_INFO_1W$pDocName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_1W$pDocName$LAYOUT() { return _DOC_INFO_1W$pDocName$LAYOUT_; }

    static final VarHandle _DOC_INFO_1W$pDocName$VH_ = MemoryHandles.asAddressVarHandle(_DOC_INFO_1W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDocName")));
    static final java.lang.invoke.VarHandle _DOC_INFO_1W$pDocName$VH() { return _DOC_INFO_1W$pDocName$VH_; }

    static final MemoryLayout _DOC_INFO_1W$pOutputFile$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_1W$pOutputFile$LAYOUT() { return _DOC_INFO_1W$pOutputFile$LAYOUT_; }

    static final VarHandle _DOC_INFO_1W$pOutputFile$VH_ = MemoryHandles.asAddressVarHandle(_DOC_INFO_1W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pOutputFile")));
    static final java.lang.invoke.VarHandle _DOC_INFO_1W$pOutputFile$VH() { return _DOC_INFO_1W$pOutputFile$VH_; }

    static final MemoryLayout _DOC_INFO_1W$pDatatype$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_1W$pDatatype$LAYOUT() { return _DOC_INFO_1W$pDatatype$LAYOUT_; }

    static final VarHandle _DOC_INFO_1W$pDatatype$VH_ = MemoryHandles.asAddressVarHandle(_DOC_INFO_1W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDatatype")));
    static final java.lang.invoke.VarHandle _DOC_INFO_1W$pDatatype$VH() { return _DOC_INFO_1W$pDatatype$VH_; }

    static final MemoryLayout _FORM_INFO_1A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pName"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cx"),
            C_LONG.withName("cy")
        ).withName("Size"),
        MemoryLayout.ofStruct(
            C_LONG.withName("left"),
            C_LONG.withName("top"),
            C_LONG.withName("right"),
            C_LONG.withName("bottom")
        ).withName("ImageableArea")
    ).withName("_FORM_INFO_1A");
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_1A$struct$LAYOUT() { return _FORM_INFO_1A$struct$LAYOUT_; }

    static final MemoryLayout _FORM_INFO_1A$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_1A$Flags$LAYOUT() { return _FORM_INFO_1A$Flags$LAYOUT_; }

    static final VarHandle _FORM_INFO_1A$Flags$VH_ = _FORM_INFO_1A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _FORM_INFO_1A$Flags$VH() { return _FORM_INFO_1A$Flags$VH_; }

    static final MemoryLayout _FORM_INFO_1A$pName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_1A$pName$LAYOUT() { return _FORM_INFO_1A$pName$LAYOUT_; }

    static final VarHandle _FORM_INFO_1A$pName$VH_ = MemoryHandles.asAddressVarHandle(_FORM_INFO_1A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pName")));
    static final java.lang.invoke.VarHandle _FORM_INFO_1A$pName$VH() { return _FORM_INFO_1A$pName$VH_; }

    static final MemoryLayout _FORM_INFO_1W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pName"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cx"),
            C_LONG.withName("cy")
        ).withName("Size"),
        MemoryLayout.ofStruct(
            C_LONG.withName("left"),
            C_LONG.withName("top"),
            C_LONG.withName("right"),
            C_LONG.withName("bottom")
        ).withName("ImageableArea")
    ).withName("_FORM_INFO_1W");
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_1W$struct$LAYOUT() { return _FORM_INFO_1W$struct$LAYOUT_; }

    static final MemoryLayout _FORM_INFO_1W$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_1W$Flags$LAYOUT() { return _FORM_INFO_1W$Flags$LAYOUT_; }

    static final VarHandle _FORM_INFO_1W$Flags$VH_ = _FORM_INFO_1W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _FORM_INFO_1W$Flags$VH() { return _FORM_INFO_1W$Flags$VH_; }

    static final MemoryLayout _FORM_INFO_1W$pName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_1W$pName$LAYOUT() { return _FORM_INFO_1W$pName$LAYOUT_; }

    static final VarHandle _FORM_INFO_1W$pName$VH_ = MemoryHandles.asAddressVarHandle(_FORM_INFO_1W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pName")));
    static final java.lang.invoke.VarHandle _FORM_INFO_1W$pName$VH() { return _FORM_INFO_1W$pName$VH_; }

    static final MemoryLayout _FORM_INFO_2A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pName"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cx"),
            C_LONG.withName("cy")
        ).withName("Size"),
        MemoryLayout.ofStruct(
            C_LONG.withName("left"),
            C_LONG.withName("top"),
            C_LONG.withName("right"),
            C_LONG.withName("bottom")
        ).withName("ImageableArea"),
        C_POINTER.withName("pKeyword"),
        C_LONG.withName("StringType"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pMuiDll"),
        C_LONG.withName("dwResourceId"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pDisplayName"),
        C_SHORT.withName("wLangId"),
        MemoryLayout.ofPaddingBits(48)
    ).withName("_FORM_INFO_2A");
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_2A$struct$LAYOUT() { return _FORM_INFO_2A$struct$LAYOUT_; }

    static final MemoryLayout _FORM_INFO_2A$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_2A$Flags$LAYOUT() { return _FORM_INFO_2A$Flags$LAYOUT_; }

    static final VarHandle _FORM_INFO_2A$Flags$VH_ = _FORM_INFO_2A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _FORM_INFO_2A$Flags$VH() { return _FORM_INFO_2A$Flags$VH_; }

    static final MemoryLayout _FORM_INFO_2A$pName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_2A$pName$LAYOUT() { return _FORM_INFO_2A$pName$LAYOUT_; }

    static final VarHandle _FORM_INFO_2A$pName$VH_ = MemoryHandles.asAddressVarHandle(_FORM_INFO_2A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pName")));
    static final java.lang.invoke.VarHandle _FORM_INFO_2A$pName$VH() { return _FORM_INFO_2A$pName$VH_; }

    static final MemoryLayout _FORM_INFO_2A$pKeyword$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_2A$pKeyword$LAYOUT() { return _FORM_INFO_2A$pKeyword$LAYOUT_; }

    static final VarHandle _FORM_INFO_2A$pKeyword$VH_ = MemoryHandles.asAddressVarHandle(_FORM_INFO_2A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pKeyword")));
    static final java.lang.invoke.VarHandle _FORM_INFO_2A$pKeyword$VH() { return _FORM_INFO_2A$pKeyword$VH_; }

    static final MemoryLayout _FORM_INFO_2A$StringType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_2A$StringType$LAYOUT() { return _FORM_INFO_2A$StringType$LAYOUT_; }

    static final VarHandle _FORM_INFO_2A$StringType$VH_ = _FORM_INFO_2A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StringType"));
    static final java.lang.invoke.VarHandle _FORM_INFO_2A$StringType$VH() { return _FORM_INFO_2A$StringType$VH_; }

    static final MemoryLayout _FORM_INFO_2A$pMuiDll$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_2A$pMuiDll$LAYOUT() { return _FORM_INFO_2A$pMuiDll$LAYOUT_; }

    static final VarHandle _FORM_INFO_2A$pMuiDll$VH_ = MemoryHandles.asAddressVarHandle(_FORM_INFO_2A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pMuiDll")));
    static final java.lang.invoke.VarHandle _FORM_INFO_2A$pMuiDll$VH() { return _FORM_INFO_2A$pMuiDll$VH_; }

    static final MemoryLayout _FORM_INFO_2A$dwResourceId$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_2A$dwResourceId$LAYOUT() { return _FORM_INFO_2A$dwResourceId$LAYOUT_; }

    static final VarHandle _FORM_INFO_2A$dwResourceId$VH_ = _FORM_INFO_2A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwResourceId"));
    static final java.lang.invoke.VarHandle _FORM_INFO_2A$dwResourceId$VH() { return _FORM_INFO_2A$dwResourceId$VH_; }

    static final MemoryLayout _FORM_INFO_2A$pDisplayName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_2A$pDisplayName$LAYOUT() { return _FORM_INFO_2A$pDisplayName$LAYOUT_; }

    static final VarHandle _FORM_INFO_2A$pDisplayName$VH_ = MemoryHandles.asAddressVarHandle(_FORM_INFO_2A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDisplayName")));
    static final java.lang.invoke.VarHandle _FORM_INFO_2A$pDisplayName$VH() { return _FORM_INFO_2A$pDisplayName$VH_; }

    static final MemoryLayout _FORM_INFO_2A$wLangId$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_2A$wLangId$LAYOUT() { return _FORM_INFO_2A$wLangId$LAYOUT_; }

    static final VarHandle _FORM_INFO_2A$wLangId$VH_ = _FORM_INFO_2A$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wLangId"));
    static final java.lang.invoke.VarHandle _FORM_INFO_2A$wLangId$VH() { return _FORM_INFO_2A$wLangId$VH_; }

    static final MemoryLayout _FORM_INFO_2W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pName"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cx"),
            C_LONG.withName("cy")
        ).withName("Size"),
        MemoryLayout.ofStruct(
            C_LONG.withName("left"),
            C_LONG.withName("top"),
            C_LONG.withName("right"),
            C_LONG.withName("bottom")
        ).withName("ImageableArea"),
        C_POINTER.withName("pKeyword"),
        C_LONG.withName("StringType"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pMuiDll"),
        C_LONG.withName("dwResourceId"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pDisplayName"),
        C_SHORT.withName("wLangId"),
        MemoryLayout.ofPaddingBits(48)
    ).withName("_FORM_INFO_2W");
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_2W$struct$LAYOUT() { return _FORM_INFO_2W$struct$LAYOUT_; }

    static final MemoryLayout _FORM_INFO_2W$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_2W$Flags$LAYOUT() { return _FORM_INFO_2W$Flags$LAYOUT_; }

    static final VarHandle _FORM_INFO_2W$Flags$VH_ = _FORM_INFO_2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _FORM_INFO_2W$Flags$VH() { return _FORM_INFO_2W$Flags$VH_; }

    static final MemoryLayout _FORM_INFO_2W$pName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_2W$pName$LAYOUT() { return _FORM_INFO_2W$pName$LAYOUT_; }

    static final VarHandle _FORM_INFO_2W$pName$VH_ = MemoryHandles.asAddressVarHandle(_FORM_INFO_2W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pName")));
    static final java.lang.invoke.VarHandle _FORM_INFO_2W$pName$VH() { return _FORM_INFO_2W$pName$VH_; }

    static final MemoryLayout _FORM_INFO_2W$pKeyword$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_2W$pKeyword$LAYOUT() { return _FORM_INFO_2W$pKeyword$LAYOUT_; }

    static final VarHandle _FORM_INFO_2W$pKeyword$VH_ = MemoryHandles.asAddressVarHandle(_FORM_INFO_2W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pKeyword")));
    static final java.lang.invoke.VarHandle _FORM_INFO_2W$pKeyword$VH() { return _FORM_INFO_2W$pKeyword$VH_; }

    static final MemoryLayout _FORM_INFO_2W$StringType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_2W$StringType$LAYOUT() { return _FORM_INFO_2W$StringType$LAYOUT_; }

    static final VarHandle _FORM_INFO_2W$StringType$VH_ = _FORM_INFO_2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StringType"));
    static final java.lang.invoke.VarHandle _FORM_INFO_2W$StringType$VH() { return _FORM_INFO_2W$StringType$VH_; }

    static final MemoryLayout _FORM_INFO_2W$pMuiDll$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_2W$pMuiDll$LAYOUT() { return _FORM_INFO_2W$pMuiDll$LAYOUT_; }

    static final VarHandle _FORM_INFO_2W$pMuiDll$VH_ = MemoryHandles.asAddressVarHandle(_FORM_INFO_2W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pMuiDll")));
    static final java.lang.invoke.VarHandle _FORM_INFO_2W$pMuiDll$VH() { return _FORM_INFO_2W$pMuiDll$VH_; }

    static final MemoryLayout _FORM_INFO_2W$dwResourceId$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_2W$dwResourceId$LAYOUT() { return _FORM_INFO_2W$dwResourceId$LAYOUT_; }

    static final VarHandle _FORM_INFO_2W$dwResourceId$VH_ = _FORM_INFO_2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwResourceId"));
    static final java.lang.invoke.VarHandle _FORM_INFO_2W$dwResourceId$VH() { return _FORM_INFO_2W$dwResourceId$VH_; }

    static final MemoryLayout _FORM_INFO_2W$pDisplayName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_2W$pDisplayName$LAYOUT() { return _FORM_INFO_2W$pDisplayName$LAYOUT_; }

    static final VarHandle _FORM_INFO_2W$pDisplayName$VH_ = MemoryHandles.asAddressVarHandle(_FORM_INFO_2W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDisplayName")));
    static final java.lang.invoke.VarHandle _FORM_INFO_2W$pDisplayName$VH() { return _FORM_INFO_2W$pDisplayName$VH_; }

    static final MemoryLayout _FORM_INFO_2W$wLangId$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _FORM_INFO_2W$wLangId$LAYOUT() { return _FORM_INFO_2W$wLangId$LAYOUT_; }

    static final VarHandle _FORM_INFO_2W$wLangId$VH_ = _FORM_INFO_2W$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wLangId"));
    static final java.lang.invoke.VarHandle _FORM_INFO_2W$wLangId$VH() { return _FORM_INFO_2W$wLangId$VH_; }

    static final MemoryLayout _DOC_INFO_2A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pDocName"),
        C_POINTER.withName("pOutputFile"),
        C_POINTER.withName("pDatatype"),
        C_LONG.withName("dwMode"),
        C_LONG.withName("JobId")
    ).withName("_DOC_INFO_2A");
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_2A$struct$LAYOUT() { return _DOC_INFO_2A$struct$LAYOUT_; }

    static final MemoryLayout _DOC_INFO_2A$pDocName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_2A$pDocName$LAYOUT() { return _DOC_INFO_2A$pDocName$LAYOUT_; }

    static final VarHandle _DOC_INFO_2A$pDocName$VH_ = MemoryHandles.asAddressVarHandle(_DOC_INFO_2A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDocName")));
    static final java.lang.invoke.VarHandle _DOC_INFO_2A$pDocName$VH() { return _DOC_INFO_2A$pDocName$VH_; }

    static final MemoryLayout _DOC_INFO_2A$pOutputFile$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_2A$pOutputFile$LAYOUT() { return _DOC_INFO_2A$pOutputFile$LAYOUT_; }

    static final VarHandle _DOC_INFO_2A$pOutputFile$VH_ = MemoryHandles.asAddressVarHandle(_DOC_INFO_2A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pOutputFile")));
    static final java.lang.invoke.VarHandle _DOC_INFO_2A$pOutputFile$VH() { return _DOC_INFO_2A$pOutputFile$VH_; }

    static final MemoryLayout _DOC_INFO_2A$pDatatype$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_2A$pDatatype$LAYOUT() { return _DOC_INFO_2A$pDatatype$LAYOUT_; }

    static final VarHandle _DOC_INFO_2A$pDatatype$VH_ = MemoryHandles.asAddressVarHandle(_DOC_INFO_2A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDatatype")));
    static final java.lang.invoke.VarHandle _DOC_INFO_2A$pDatatype$VH() { return _DOC_INFO_2A$pDatatype$VH_; }

    static final MemoryLayout _DOC_INFO_2A$dwMode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_2A$dwMode$LAYOUT() { return _DOC_INFO_2A$dwMode$LAYOUT_; }

    static final VarHandle _DOC_INFO_2A$dwMode$VH_ = _DOC_INFO_2A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwMode"));
    static final java.lang.invoke.VarHandle _DOC_INFO_2A$dwMode$VH() { return _DOC_INFO_2A$dwMode$VH_; }

    static final MemoryLayout _DOC_INFO_2A$JobId$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_2A$JobId$LAYOUT() { return _DOC_INFO_2A$JobId$LAYOUT_; }

    static final VarHandle _DOC_INFO_2A$JobId$VH_ = _DOC_INFO_2A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("JobId"));
    static final java.lang.invoke.VarHandle _DOC_INFO_2A$JobId$VH() { return _DOC_INFO_2A$JobId$VH_; }

    static final MemoryLayout _DOC_INFO_2W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pDocName"),
        C_POINTER.withName("pOutputFile"),
        C_POINTER.withName("pDatatype"),
        C_LONG.withName("dwMode"),
        C_LONG.withName("JobId")
    ).withName("_DOC_INFO_2W");
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_2W$struct$LAYOUT() { return _DOC_INFO_2W$struct$LAYOUT_; }

    static final MemoryLayout _DOC_INFO_2W$pDocName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_2W$pDocName$LAYOUT() { return _DOC_INFO_2W$pDocName$LAYOUT_; }

    static final VarHandle _DOC_INFO_2W$pDocName$VH_ = MemoryHandles.asAddressVarHandle(_DOC_INFO_2W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDocName")));
    static final java.lang.invoke.VarHandle _DOC_INFO_2W$pDocName$VH() { return _DOC_INFO_2W$pDocName$VH_; }

    static final MemoryLayout _DOC_INFO_2W$pOutputFile$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_2W$pOutputFile$LAYOUT() { return _DOC_INFO_2W$pOutputFile$LAYOUT_; }

    static final VarHandle _DOC_INFO_2W$pOutputFile$VH_ = MemoryHandles.asAddressVarHandle(_DOC_INFO_2W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pOutputFile")));
    static final java.lang.invoke.VarHandle _DOC_INFO_2W$pOutputFile$VH() { return _DOC_INFO_2W$pOutputFile$VH_; }

    static final MemoryLayout _DOC_INFO_2W$pDatatype$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_2W$pDatatype$LAYOUT() { return _DOC_INFO_2W$pDatatype$LAYOUT_; }

    static final VarHandle _DOC_INFO_2W$pDatatype$VH_ = MemoryHandles.asAddressVarHandle(_DOC_INFO_2W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDatatype")));
    static final java.lang.invoke.VarHandle _DOC_INFO_2W$pDatatype$VH() { return _DOC_INFO_2W$pDatatype$VH_; }

    static final MemoryLayout _DOC_INFO_2W$dwMode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_2W$dwMode$LAYOUT() { return _DOC_INFO_2W$dwMode$LAYOUT_; }

    static final VarHandle _DOC_INFO_2W$dwMode$VH_ = _DOC_INFO_2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwMode"));
    static final java.lang.invoke.VarHandle _DOC_INFO_2W$dwMode$VH() { return _DOC_INFO_2W$dwMode$VH_; }

    static final MemoryLayout _DOC_INFO_2W$JobId$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_2W$JobId$LAYOUT() { return _DOC_INFO_2W$JobId$LAYOUT_; }

    static final VarHandle _DOC_INFO_2W$JobId$VH_ = _DOC_INFO_2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("JobId"));
    static final java.lang.invoke.VarHandle _DOC_INFO_2W$JobId$VH() { return _DOC_INFO_2W$JobId$VH_; }

    static final MemoryLayout _DOC_INFO_3A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pDocName"),
        C_POINTER.withName("pOutputFile"),
        C_POINTER.withName("pDatatype"),
        C_LONG.withName("dwFlags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_DOC_INFO_3A");
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_3A$struct$LAYOUT() { return _DOC_INFO_3A$struct$LAYOUT_; }

    static final MemoryLayout _DOC_INFO_3A$pDocName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_3A$pDocName$LAYOUT() { return _DOC_INFO_3A$pDocName$LAYOUT_; }

    static final VarHandle _DOC_INFO_3A$pDocName$VH_ = MemoryHandles.asAddressVarHandle(_DOC_INFO_3A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDocName")));
    static final java.lang.invoke.VarHandle _DOC_INFO_3A$pDocName$VH() { return _DOC_INFO_3A$pDocName$VH_; }

    static final MemoryLayout _DOC_INFO_3A$pOutputFile$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_3A$pOutputFile$LAYOUT() { return _DOC_INFO_3A$pOutputFile$LAYOUT_; }

    static final VarHandle _DOC_INFO_3A$pOutputFile$VH_ = MemoryHandles.asAddressVarHandle(_DOC_INFO_3A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pOutputFile")));
    static final java.lang.invoke.VarHandle _DOC_INFO_3A$pOutputFile$VH() { return _DOC_INFO_3A$pOutputFile$VH_; }

    static final MemoryLayout _DOC_INFO_3A$pDatatype$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_3A$pDatatype$LAYOUT() { return _DOC_INFO_3A$pDatatype$LAYOUT_; }

    static final VarHandle _DOC_INFO_3A$pDatatype$VH_ = MemoryHandles.asAddressVarHandle(_DOC_INFO_3A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDatatype")));
    static final java.lang.invoke.VarHandle _DOC_INFO_3A$pDatatype$VH() { return _DOC_INFO_3A$pDatatype$VH_; }

    static final MemoryLayout _DOC_INFO_3A$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_3A$dwFlags$LAYOUT() { return _DOC_INFO_3A$dwFlags$LAYOUT_; }

    static final VarHandle _DOC_INFO_3A$dwFlags$VH_ = _DOC_INFO_3A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _DOC_INFO_3A$dwFlags$VH() { return _DOC_INFO_3A$dwFlags$VH_; }

    static final MemoryLayout _DOC_INFO_3W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pDocName"),
        C_POINTER.withName("pOutputFile"),
        C_POINTER.withName("pDatatype"),
        C_LONG.withName("dwFlags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_DOC_INFO_3W");
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_3W$struct$LAYOUT() { return _DOC_INFO_3W$struct$LAYOUT_; }

    static final MemoryLayout _DOC_INFO_3W$pDocName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_3W$pDocName$LAYOUT() { return _DOC_INFO_3W$pDocName$LAYOUT_; }

    static final VarHandle _DOC_INFO_3W$pDocName$VH_ = MemoryHandles.asAddressVarHandle(_DOC_INFO_3W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDocName")));
    static final java.lang.invoke.VarHandle _DOC_INFO_3W$pDocName$VH() { return _DOC_INFO_3W$pDocName$VH_; }

    static final MemoryLayout _DOC_INFO_3W$pOutputFile$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_3W$pOutputFile$LAYOUT() { return _DOC_INFO_3W$pOutputFile$LAYOUT_; }

    static final VarHandle _DOC_INFO_3W$pOutputFile$VH_ = MemoryHandles.asAddressVarHandle(_DOC_INFO_3W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pOutputFile")));
    static final java.lang.invoke.VarHandle _DOC_INFO_3W$pOutputFile$VH() { return _DOC_INFO_3W$pOutputFile$VH_; }

    static final MemoryLayout _DOC_INFO_3W$pDatatype$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_3W$pDatatype$LAYOUT() { return _DOC_INFO_3W$pDatatype$LAYOUT_; }

    static final VarHandle _DOC_INFO_3W$pDatatype$VH_ = MemoryHandles.asAddressVarHandle(_DOC_INFO_3W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDatatype")));
    static final java.lang.invoke.VarHandle _DOC_INFO_3W$pDatatype$VH() { return _DOC_INFO_3W$pDatatype$VH_; }

    static final MemoryLayout _DOC_INFO_3W$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DOC_INFO_3W$dwFlags$LAYOUT() { return _DOC_INFO_3W$dwFlags$LAYOUT_; }

    static final VarHandle _DOC_INFO_3W$dwFlags$VH_ = _DOC_INFO_3W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _DOC_INFO_3W$dwFlags$VH() { return _DOC_INFO_3W$dwFlags$VH_; }

    static final MemoryLayout _PRINTPROCESSOR_INFO_1A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pName")
    ).withName("_PRINTPROCESSOR_INFO_1A");
    static final jdk.incubator.foreign.MemoryLayout _PRINTPROCESSOR_INFO_1A$struct$LAYOUT() { return _PRINTPROCESSOR_INFO_1A$struct$LAYOUT_; }

    static final MemoryLayout _PRINTPROCESSOR_INFO_1A$pName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PRINTPROCESSOR_INFO_1A$pName$LAYOUT() { return _PRINTPROCESSOR_INFO_1A$pName$LAYOUT_; }

    static final VarHandle _PRINTPROCESSOR_INFO_1A$pName$VH_ = MemoryHandles.asAddressVarHandle(_PRINTPROCESSOR_INFO_1A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pName")));
    static final java.lang.invoke.VarHandle _PRINTPROCESSOR_INFO_1A$pName$VH() { return _PRINTPROCESSOR_INFO_1A$pName$VH_; }

    static final MemoryLayout _PRINTPROCESSOR_INFO_1W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pName")
    ).withName("_PRINTPROCESSOR_INFO_1W");
    static final jdk.incubator.foreign.MemoryLayout _PRINTPROCESSOR_INFO_1W$struct$LAYOUT() { return _PRINTPROCESSOR_INFO_1W$struct$LAYOUT_; }

    static final MemoryLayout _PRINTPROCESSOR_INFO_1W$pName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PRINTPROCESSOR_INFO_1W$pName$LAYOUT() { return _PRINTPROCESSOR_INFO_1W$pName$LAYOUT_; }

    static final VarHandle _PRINTPROCESSOR_INFO_1W$pName$VH_ = MemoryHandles.asAddressVarHandle(_PRINTPROCESSOR_INFO_1W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pName")));
    static final java.lang.invoke.VarHandle _PRINTPROCESSOR_INFO_1W$pName$VH() { return _PRINTPROCESSOR_INFO_1W$pName$VH_; }

    static final MemoryLayout _PRINTPROCESSOR_CAPS_1$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwLevel"),
        C_LONG.withName("dwNupOptions"),
        C_LONG.withName("dwPageOrderFlags"),
        C_LONG.withName("dwNumberOfCopies")
    ).withName("_PRINTPROCESSOR_CAPS_1");
    static final jdk.incubator.foreign.MemoryLayout _PRINTPROCESSOR_CAPS_1$struct$LAYOUT() { return _PRINTPROCESSOR_CAPS_1$struct$LAYOUT_; }

    static final MemoryLayout _PRINTPROCESSOR_CAPS_1$dwLevel$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTPROCESSOR_CAPS_1$dwLevel$LAYOUT() { return _PRINTPROCESSOR_CAPS_1$dwLevel$LAYOUT_; }

    static final VarHandle _PRINTPROCESSOR_CAPS_1$dwLevel$VH_ = _PRINTPROCESSOR_CAPS_1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwLevel"));
    static final java.lang.invoke.VarHandle _PRINTPROCESSOR_CAPS_1$dwLevel$VH() { return _PRINTPROCESSOR_CAPS_1$dwLevel$VH_; }

    static final MemoryLayout _PRINTPROCESSOR_CAPS_1$dwNupOptions$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTPROCESSOR_CAPS_1$dwNupOptions$LAYOUT() { return _PRINTPROCESSOR_CAPS_1$dwNupOptions$LAYOUT_; }

    static final VarHandle _PRINTPROCESSOR_CAPS_1$dwNupOptions$VH_ = _PRINTPROCESSOR_CAPS_1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwNupOptions"));
    static final java.lang.invoke.VarHandle _PRINTPROCESSOR_CAPS_1$dwNupOptions$VH() { return _PRINTPROCESSOR_CAPS_1$dwNupOptions$VH_; }

    static final MemoryLayout _PRINTPROCESSOR_CAPS_1$dwPageOrderFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTPROCESSOR_CAPS_1$dwPageOrderFlags$LAYOUT() { return _PRINTPROCESSOR_CAPS_1$dwPageOrderFlags$LAYOUT_; }

    static final VarHandle _PRINTPROCESSOR_CAPS_1$dwPageOrderFlags$VH_ = _PRINTPROCESSOR_CAPS_1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwPageOrderFlags"));
    static final java.lang.invoke.VarHandle _PRINTPROCESSOR_CAPS_1$dwPageOrderFlags$VH() { return _PRINTPROCESSOR_CAPS_1$dwPageOrderFlags$VH_; }

    static final MemoryLayout _PRINTPROCESSOR_CAPS_1$dwNumberOfCopies$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTPROCESSOR_CAPS_1$dwNumberOfCopies$LAYOUT() { return _PRINTPROCESSOR_CAPS_1$dwNumberOfCopies$LAYOUT_; }

    static final VarHandle _PRINTPROCESSOR_CAPS_1$dwNumberOfCopies$VH_ = _PRINTPROCESSOR_CAPS_1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwNumberOfCopies"));
    static final java.lang.invoke.VarHandle _PRINTPROCESSOR_CAPS_1$dwNumberOfCopies$VH() { return _PRINTPROCESSOR_CAPS_1$dwNumberOfCopies$VH_; }

    static final MemoryLayout _PRINTPROCESSOR_CAPS_2$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwLevel"),
        C_LONG.withName("dwNupOptions"),
        C_LONG.withName("dwPageOrderFlags"),
        C_LONG.withName("dwNumberOfCopies"),
        C_LONG.withName("dwDuplexHandlingCaps"),
        C_LONG.withName("dwNupDirectionCaps"),
        C_LONG.withName("dwNupBorderCaps"),
        C_LONG.withName("dwBookletHandlingCaps"),
        C_LONG.withName("dwScalingCaps")
    ).withName("_PRINTPROCESSOR_CAPS_2");
    static final jdk.incubator.foreign.MemoryLayout _PRINTPROCESSOR_CAPS_2$struct$LAYOUT() { return _PRINTPROCESSOR_CAPS_2$struct$LAYOUT_; }

    static final MemoryLayout _PRINTPROCESSOR_CAPS_2$dwLevel$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTPROCESSOR_CAPS_2$dwLevel$LAYOUT() { return _PRINTPROCESSOR_CAPS_2$dwLevel$LAYOUT_; }

    static final VarHandle _PRINTPROCESSOR_CAPS_2$dwLevel$VH_ = _PRINTPROCESSOR_CAPS_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwLevel"));
    static final java.lang.invoke.VarHandle _PRINTPROCESSOR_CAPS_2$dwLevel$VH() { return _PRINTPROCESSOR_CAPS_2$dwLevel$VH_; }

    static final MemoryLayout _PRINTPROCESSOR_CAPS_2$dwNupOptions$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTPROCESSOR_CAPS_2$dwNupOptions$LAYOUT() { return _PRINTPROCESSOR_CAPS_2$dwNupOptions$LAYOUT_; }

    static final VarHandle _PRINTPROCESSOR_CAPS_2$dwNupOptions$VH_ = _PRINTPROCESSOR_CAPS_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwNupOptions"));
    static final java.lang.invoke.VarHandle _PRINTPROCESSOR_CAPS_2$dwNupOptions$VH() { return _PRINTPROCESSOR_CAPS_2$dwNupOptions$VH_; }

    static final MemoryLayout _PRINTPROCESSOR_CAPS_2$dwPageOrderFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTPROCESSOR_CAPS_2$dwPageOrderFlags$LAYOUT() { return _PRINTPROCESSOR_CAPS_2$dwPageOrderFlags$LAYOUT_; }

    static final VarHandle _PRINTPROCESSOR_CAPS_2$dwPageOrderFlags$VH_ = _PRINTPROCESSOR_CAPS_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwPageOrderFlags"));
    static final java.lang.invoke.VarHandle _PRINTPROCESSOR_CAPS_2$dwPageOrderFlags$VH() { return _PRINTPROCESSOR_CAPS_2$dwPageOrderFlags$VH_; }

    static final MemoryLayout _PRINTPROCESSOR_CAPS_2$dwNumberOfCopies$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTPROCESSOR_CAPS_2$dwNumberOfCopies$LAYOUT() { return _PRINTPROCESSOR_CAPS_2$dwNumberOfCopies$LAYOUT_; }

    static final VarHandle _PRINTPROCESSOR_CAPS_2$dwNumberOfCopies$VH_ = _PRINTPROCESSOR_CAPS_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwNumberOfCopies"));
    static final java.lang.invoke.VarHandle _PRINTPROCESSOR_CAPS_2$dwNumberOfCopies$VH() { return _PRINTPROCESSOR_CAPS_2$dwNumberOfCopies$VH_; }

    static final MemoryLayout _PRINTPROCESSOR_CAPS_2$dwDuplexHandlingCaps$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTPROCESSOR_CAPS_2$dwDuplexHandlingCaps$LAYOUT() { return _PRINTPROCESSOR_CAPS_2$dwDuplexHandlingCaps$LAYOUT_; }

    static final VarHandle _PRINTPROCESSOR_CAPS_2$dwDuplexHandlingCaps$VH_ = _PRINTPROCESSOR_CAPS_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwDuplexHandlingCaps"));
    static final java.lang.invoke.VarHandle _PRINTPROCESSOR_CAPS_2$dwDuplexHandlingCaps$VH() { return _PRINTPROCESSOR_CAPS_2$dwDuplexHandlingCaps$VH_; }

    static final MemoryLayout _PRINTPROCESSOR_CAPS_2$dwNupDirectionCaps$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTPROCESSOR_CAPS_2$dwNupDirectionCaps$LAYOUT() { return _PRINTPROCESSOR_CAPS_2$dwNupDirectionCaps$LAYOUT_; }

    static final VarHandle _PRINTPROCESSOR_CAPS_2$dwNupDirectionCaps$VH_ = _PRINTPROCESSOR_CAPS_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwNupDirectionCaps"));
    static final java.lang.invoke.VarHandle _PRINTPROCESSOR_CAPS_2$dwNupDirectionCaps$VH() { return _PRINTPROCESSOR_CAPS_2$dwNupDirectionCaps$VH_; }

    static final MemoryLayout _PRINTPROCESSOR_CAPS_2$dwNupBorderCaps$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTPROCESSOR_CAPS_2$dwNupBorderCaps$LAYOUT() { return _PRINTPROCESSOR_CAPS_2$dwNupBorderCaps$LAYOUT_; }

    static final VarHandle _PRINTPROCESSOR_CAPS_2$dwNupBorderCaps$VH_ = _PRINTPROCESSOR_CAPS_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwNupBorderCaps"));
    static final java.lang.invoke.VarHandle _PRINTPROCESSOR_CAPS_2$dwNupBorderCaps$VH() { return _PRINTPROCESSOR_CAPS_2$dwNupBorderCaps$VH_; }

    static final MemoryLayout _PRINTPROCESSOR_CAPS_2$dwBookletHandlingCaps$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTPROCESSOR_CAPS_2$dwBookletHandlingCaps$LAYOUT() { return _PRINTPROCESSOR_CAPS_2$dwBookletHandlingCaps$LAYOUT_; }

    static final VarHandle _PRINTPROCESSOR_CAPS_2$dwBookletHandlingCaps$VH_ = _PRINTPROCESSOR_CAPS_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwBookletHandlingCaps"));
    static final java.lang.invoke.VarHandle _PRINTPROCESSOR_CAPS_2$dwBookletHandlingCaps$VH() { return _PRINTPROCESSOR_CAPS_2$dwBookletHandlingCaps$VH_; }

    static final MemoryLayout _PRINTPROCESSOR_CAPS_2$dwScalingCaps$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTPROCESSOR_CAPS_2$dwScalingCaps$LAYOUT() { return _PRINTPROCESSOR_CAPS_2$dwScalingCaps$LAYOUT_; }

    static final VarHandle _PRINTPROCESSOR_CAPS_2$dwScalingCaps$VH_ = _PRINTPROCESSOR_CAPS_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwScalingCaps"));
    static final java.lang.invoke.VarHandle _PRINTPROCESSOR_CAPS_2$dwScalingCaps$VH() { return _PRINTPROCESSOR_CAPS_2$dwScalingCaps$VH_; }

    static final MemoryLayout _PORT_INFO_1A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pName")
    ).withName("_PORT_INFO_1A");
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_1A$struct$LAYOUT() { return _PORT_INFO_1A$struct$LAYOUT_; }

    static final MemoryLayout _PORT_INFO_1A$pName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_1A$pName$LAYOUT() { return _PORT_INFO_1A$pName$LAYOUT_; }

    static final VarHandle _PORT_INFO_1A$pName$VH_ = MemoryHandles.asAddressVarHandle(_PORT_INFO_1A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pName")));
    static final java.lang.invoke.VarHandle _PORT_INFO_1A$pName$VH() { return _PORT_INFO_1A$pName$VH_; }

    static final MemoryLayout _PORT_INFO_1W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pName")
    ).withName("_PORT_INFO_1W");
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_1W$struct$LAYOUT() { return _PORT_INFO_1W$struct$LAYOUT_; }

    static final MemoryLayout _PORT_INFO_1W$pName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_1W$pName$LAYOUT() { return _PORT_INFO_1W$pName$LAYOUT_; }

    static final VarHandle _PORT_INFO_1W$pName$VH_ = MemoryHandles.asAddressVarHandle(_PORT_INFO_1W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pName")));
    static final java.lang.invoke.VarHandle _PORT_INFO_1W$pName$VH() { return _PORT_INFO_1W$pName$VH_; }

    static final MemoryLayout _PORT_INFO_2A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pPortName"),
        C_POINTER.withName("pMonitorName"),
        C_POINTER.withName("pDescription"),
        C_LONG.withName("fPortType"),
        C_LONG.withName("Reserved")
    ).withName("_PORT_INFO_2A");
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_2A$struct$LAYOUT() { return _PORT_INFO_2A$struct$LAYOUT_; }

    static final MemoryLayout _PORT_INFO_2A$pPortName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_2A$pPortName$LAYOUT() { return _PORT_INFO_2A$pPortName$LAYOUT_; }

    static final VarHandle _PORT_INFO_2A$pPortName$VH_ = MemoryHandles.asAddressVarHandle(_PORT_INFO_2A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pPortName")));
    static final java.lang.invoke.VarHandle _PORT_INFO_2A$pPortName$VH() { return _PORT_INFO_2A$pPortName$VH_; }

    static final MemoryLayout _PORT_INFO_2A$pMonitorName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_2A$pMonitorName$LAYOUT() { return _PORT_INFO_2A$pMonitorName$LAYOUT_; }

    static final VarHandle _PORT_INFO_2A$pMonitorName$VH_ = MemoryHandles.asAddressVarHandle(_PORT_INFO_2A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pMonitorName")));
    static final java.lang.invoke.VarHandle _PORT_INFO_2A$pMonitorName$VH() { return _PORT_INFO_2A$pMonitorName$VH_; }

    static final MemoryLayout _PORT_INFO_2A$pDescription$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_2A$pDescription$LAYOUT() { return _PORT_INFO_2A$pDescription$LAYOUT_; }

    static final VarHandle _PORT_INFO_2A$pDescription$VH_ = MemoryHandles.asAddressVarHandle(_PORT_INFO_2A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDescription")));
    static final java.lang.invoke.VarHandle _PORT_INFO_2A$pDescription$VH() { return _PORT_INFO_2A$pDescription$VH_; }

    static final MemoryLayout _PORT_INFO_2A$fPortType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_2A$fPortType$LAYOUT() { return _PORT_INFO_2A$fPortType$LAYOUT_; }

    static final VarHandle _PORT_INFO_2A$fPortType$VH_ = _PORT_INFO_2A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fPortType"));
    static final java.lang.invoke.VarHandle _PORT_INFO_2A$fPortType$VH() { return _PORT_INFO_2A$fPortType$VH_; }

    static final MemoryLayout _PORT_INFO_2A$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_2A$Reserved$LAYOUT() { return _PORT_INFO_2A$Reserved$LAYOUT_; }

    static final VarHandle _PORT_INFO_2A$Reserved$VH_ = _PORT_INFO_2A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _PORT_INFO_2A$Reserved$VH() { return _PORT_INFO_2A$Reserved$VH_; }

    static final MemoryLayout _PORT_INFO_2W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pPortName"),
        C_POINTER.withName("pMonitorName"),
        C_POINTER.withName("pDescription"),
        C_LONG.withName("fPortType"),
        C_LONG.withName("Reserved")
    ).withName("_PORT_INFO_2W");
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_2W$struct$LAYOUT() { return _PORT_INFO_2W$struct$LAYOUT_; }

    static final MemoryLayout _PORT_INFO_2W$pPortName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_2W$pPortName$LAYOUT() { return _PORT_INFO_2W$pPortName$LAYOUT_; }

    static final VarHandle _PORT_INFO_2W$pPortName$VH_ = MemoryHandles.asAddressVarHandle(_PORT_INFO_2W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pPortName")));
    static final java.lang.invoke.VarHandle _PORT_INFO_2W$pPortName$VH() { return _PORT_INFO_2W$pPortName$VH_; }

    static final MemoryLayout _PORT_INFO_2W$pMonitorName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_2W$pMonitorName$LAYOUT() { return _PORT_INFO_2W$pMonitorName$LAYOUT_; }

    static final VarHandle _PORT_INFO_2W$pMonitorName$VH_ = MemoryHandles.asAddressVarHandle(_PORT_INFO_2W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pMonitorName")));
    static final java.lang.invoke.VarHandle _PORT_INFO_2W$pMonitorName$VH() { return _PORT_INFO_2W$pMonitorName$VH_; }

    static final MemoryLayout _PORT_INFO_2W$pDescription$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_2W$pDescription$LAYOUT() { return _PORT_INFO_2W$pDescription$LAYOUT_; }

    static final VarHandle _PORT_INFO_2W$pDescription$VH_ = MemoryHandles.asAddressVarHandle(_PORT_INFO_2W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDescription")));
    static final java.lang.invoke.VarHandle _PORT_INFO_2W$pDescription$VH() { return _PORT_INFO_2W$pDescription$VH_; }

    static final MemoryLayout _PORT_INFO_2W$fPortType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_2W$fPortType$LAYOUT() { return _PORT_INFO_2W$fPortType$LAYOUT_; }

    static final VarHandle _PORT_INFO_2W$fPortType$VH_ = _PORT_INFO_2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fPortType"));
    static final java.lang.invoke.VarHandle _PORT_INFO_2W$fPortType$VH() { return _PORT_INFO_2W$fPortType$VH_; }

    static final MemoryLayout _PORT_INFO_2W$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_2W$Reserved$LAYOUT() { return _PORT_INFO_2W$Reserved$LAYOUT_; }

    static final VarHandle _PORT_INFO_2W$Reserved$VH_ = _PORT_INFO_2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _PORT_INFO_2W$Reserved$VH() { return _PORT_INFO_2W$Reserved$VH_; }

    static final MemoryLayout _PORT_INFO_3A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwStatus"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pszStatus"),
        C_LONG.withName("dwSeverity"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_PORT_INFO_3A");
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_3A$struct$LAYOUT() { return _PORT_INFO_3A$struct$LAYOUT_; }

    static final MemoryLayout _PORT_INFO_3A$dwStatus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_3A$dwStatus$LAYOUT() { return _PORT_INFO_3A$dwStatus$LAYOUT_; }

    static final VarHandle _PORT_INFO_3A$dwStatus$VH_ = _PORT_INFO_3A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStatus"));
    static final java.lang.invoke.VarHandle _PORT_INFO_3A$dwStatus$VH() { return _PORT_INFO_3A$dwStatus$VH_; }

    static final MemoryLayout _PORT_INFO_3A$pszStatus$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_3A$pszStatus$LAYOUT() { return _PORT_INFO_3A$pszStatus$LAYOUT_; }

    static final VarHandle _PORT_INFO_3A$pszStatus$VH_ = MemoryHandles.asAddressVarHandle(_PORT_INFO_3A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszStatus")));
    static final java.lang.invoke.VarHandle _PORT_INFO_3A$pszStatus$VH() { return _PORT_INFO_3A$pszStatus$VH_; }

    static final MemoryLayout _PORT_INFO_3A$dwSeverity$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_3A$dwSeverity$LAYOUT() { return _PORT_INFO_3A$dwSeverity$LAYOUT_; }

    static final VarHandle _PORT_INFO_3A$dwSeverity$VH_ = _PORT_INFO_3A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSeverity"));
    static final java.lang.invoke.VarHandle _PORT_INFO_3A$dwSeverity$VH() { return _PORT_INFO_3A$dwSeverity$VH_; }

    static final MemoryLayout _PORT_INFO_3W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwStatus"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pszStatus"),
        C_LONG.withName("dwSeverity"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_PORT_INFO_3W");
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_3W$struct$LAYOUT() { return _PORT_INFO_3W$struct$LAYOUT_; }

    static final MemoryLayout _PORT_INFO_3W$dwStatus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_3W$dwStatus$LAYOUT() { return _PORT_INFO_3W$dwStatus$LAYOUT_; }

    static final VarHandle _PORT_INFO_3W$dwStatus$VH_ = _PORT_INFO_3W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStatus"));
    static final java.lang.invoke.VarHandle _PORT_INFO_3W$dwStatus$VH() { return _PORT_INFO_3W$dwStatus$VH_; }

    static final MemoryLayout _PORT_INFO_3W$pszStatus$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_3W$pszStatus$LAYOUT() { return _PORT_INFO_3W$pszStatus$LAYOUT_; }

    static final VarHandle _PORT_INFO_3W$pszStatus$VH_ = MemoryHandles.asAddressVarHandle(_PORT_INFO_3W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszStatus")));
    static final java.lang.invoke.VarHandle _PORT_INFO_3W$pszStatus$VH() { return _PORT_INFO_3W$pszStatus$VH_; }

    static final MemoryLayout _PORT_INFO_3W$dwSeverity$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PORT_INFO_3W$dwSeverity$LAYOUT() { return _PORT_INFO_3W$dwSeverity$LAYOUT_; }

    static final VarHandle _PORT_INFO_3W$dwSeverity$VH_ = _PORT_INFO_3W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSeverity"));
    static final java.lang.invoke.VarHandle _PORT_INFO_3W$dwSeverity$VH() { return _PORT_INFO_3W$dwSeverity$VH_; }

    static final MemoryLayout _MONITOR_INFO_1A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pName")
    ).withName("_MONITOR_INFO_1A");
    static final jdk.incubator.foreign.MemoryLayout _MONITOR_INFO_1A$struct$LAYOUT() { return _MONITOR_INFO_1A$struct$LAYOUT_; }

    static final MemoryLayout _MONITOR_INFO_1A$pName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _MONITOR_INFO_1A$pName$LAYOUT() { return _MONITOR_INFO_1A$pName$LAYOUT_; }

    static final VarHandle _MONITOR_INFO_1A$pName$VH_ = MemoryHandles.asAddressVarHandle(_MONITOR_INFO_1A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pName")));
    static final java.lang.invoke.VarHandle _MONITOR_INFO_1A$pName$VH() { return _MONITOR_INFO_1A$pName$VH_; }

    static final MemoryLayout _MONITOR_INFO_1W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pName")
    ).withName("_MONITOR_INFO_1W");
    static final jdk.incubator.foreign.MemoryLayout _MONITOR_INFO_1W$struct$LAYOUT() { return _MONITOR_INFO_1W$struct$LAYOUT_; }

    static final MemoryLayout _MONITOR_INFO_1W$pName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _MONITOR_INFO_1W$pName$LAYOUT() { return _MONITOR_INFO_1W$pName$LAYOUT_; }

    static final VarHandle _MONITOR_INFO_1W$pName$VH_ = MemoryHandles.asAddressVarHandle(_MONITOR_INFO_1W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pName")));
    static final java.lang.invoke.VarHandle _MONITOR_INFO_1W$pName$VH() { return _MONITOR_INFO_1W$pName$VH_; }

    static final MemoryLayout _MONITOR_INFO_2A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pName"),
        C_POINTER.withName("pEnvironment"),
        C_POINTER.withName("pDLLName")
    ).withName("_MONITOR_INFO_2A");
    static final jdk.incubator.foreign.MemoryLayout _MONITOR_INFO_2A$struct$LAYOUT() { return _MONITOR_INFO_2A$struct$LAYOUT_; }

    static final MemoryLayout _MONITOR_INFO_2A$pName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _MONITOR_INFO_2A$pName$LAYOUT() { return _MONITOR_INFO_2A$pName$LAYOUT_; }

    static final VarHandle _MONITOR_INFO_2A$pName$VH_ = MemoryHandles.asAddressVarHandle(_MONITOR_INFO_2A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pName")));
    static final java.lang.invoke.VarHandle _MONITOR_INFO_2A$pName$VH() { return _MONITOR_INFO_2A$pName$VH_; }

    static final MemoryLayout _MONITOR_INFO_2A$pEnvironment$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _MONITOR_INFO_2A$pEnvironment$LAYOUT() { return _MONITOR_INFO_2A$pEnvironment$LAYOUT_; }

    static final VarHandle _MONITOR_INFO_2A$pEnvironment$VH_ = MemoryHandles.asAddressVarHandle(_MONITOR_INFO_2A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pEnvironment")));
    static final java.lang.invoke.VarHandle _MONITOR_INFO_2A$pEnvironment$VH() { return _MONITOR_INFO_2A$pEnvironment$VH_; }

    static final MemoryLayout _MONITOR_INFO_2A$pDLLName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _MONITOR_INFO_2A$pDLLName$LAYOUT() { return _MONITOR_INFO_2A$pDLLName$LAYOUT_; }

    static final VarHandle _MONITOR_INFO_2A$pDLLName$VH_ = MemoryHandles.asAddressVarHandle(_MONITOR_INFO_2A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDLLName")));
    static final java.lang.invoke.VarHandle _MONITOR_INFO_2A$pDLLName$VH() { return _MONITOR_INFO_2A$pDLLName$VH_; }

    static final MemoryLayout _MONITOR_INFO_2W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pName"),
        C_POINTER.withName("pEnvironment"),
        C_POINTER.withName("pDLLName")
    ).withName("_MONITOR_INFO_2W");
    static final jdk.incubator.foreign.MemoryLayout _MONITOR_INFO_2W$struct$LAYOUT() { return _MONITOR_INFO_2W$struct$LAYOUT_; }

    static final MemoryLayout _MONITOR_INFO_2W$pName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _MONITOR_INFO_2W$pName$LAYOUT() { return _MONITOR_INFO_2W$pName$LAYOUT_; }

    static final VarHandle _MONITOR_INFO_2W$pName$VH_ = MemoryHandles.asAddressVarHandle(_MONITOR_INFO_2W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pName")));
    static final java.lang.invoke.VarHandle _MONITOR_INFO_2W$pName$VH() { return _MONITOR_INFO_2W$pName$VH_; }

    static final MemoryLayout _MONITOR_INFO_2W$pEnvironment$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _MONITOR_INFO_2W$pEnvironment$LAYOUT() { return _MONITOR_INFO_2W$pEnvironment$LAYOUT_; }

    static final VarHandle _MONITOR_INFO_2W$pEnvironment$VH_ = MemoryHandles.asAddressVarHandle(_MONITOR_INFO_2W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pEnvironment")));
    static final java.lang.invoke.VarHandle _MONITOR_INFO_2W$pEnvironment$VH() { return _MONITOR_INFO_2W$pEnvironment$VH_; }

    static final MemoryLayout _MONITOR_INFO_2W$pDLLName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _MONITOR_INFO_2W$pDLLName$LAYOUT() { return _MONITOR_INFO_2W$pDLLName$LAYOUT_; }

    static final VarHandle _MONITOR_INFO_2W$pDLLName$VH_ = MemoryHandles.asAddressVarHandle(_MONITOR_INFO_2W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDLLName")));
    static final java.lang.invoke.VarHandle _MONITOR_INFO_2W$pDLLName$VH() { return _MONITOR_INFO_2W$pDLLName$VH_; }

    static final MemoryLayout _DATATYPES_INFO_1A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pName")
    ).withName("_DATATYPES_INFO_1A");
    static final jdk.incubator.foreign.MemoryLayout _DATATYPES_INFO_1A$struct$LAYOUT() { return _DATATYPES_INFO_1A$struct$LAYOUT_; }

    static final MemoryLayout _DATATYPES_INFO_1A$pName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DATATYPES_INFO_1A$pName$LAYOUT() { return _DATATYPES_INFO_1A$pName$LAYOUT_; }

    static final VarHandle _DATATYPES_INFO_1A$pName$VH_ = MemoryHandles.asAddressVarHandle(_DATATYPES_INFO_1A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pName")));
    static final java.lang.invoke.VarHandle _DATATYPES_INFO_1A$pName$VH() { return _DATATYPES_INFO_1A$pName$VH_; }

    static final MemoryLayout _DATATYPES_INFO_1W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pName")
    ).withName("_DATATYPES_INFO_1W");
    static final jdk.incubator.foreign.MemoryLayout _DATATYPES_INFO_1W$struct$LAYOUT() { return _DATATYPES_INFO_1W$struct$LAYOUT_; }

    static final MemoryLayout _DATATYPES_INFO_1W$pName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DATATYPES_INFO_1W$pName$LAYOUT() { return _DATATYPES_INFO_1W$pName$LAYOUT_; }

    static final VarHandle _DATATYPES_INFO_1W$pName$VH_ = MemoryHandles.asAddressVarHandle(_DATATYPES_INFO_1W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pName")));
    static final java.lang.invoke.VarHandle _DATATYPES_INFO_1W$pName$VH() { return _DATATYPES_INFO_1W$pName$VH_; }

    static final MemoryLayout _PRINTER_DEFAULTSA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pDatatype"),
        C_POINTER.withName("pDevMode"),
        C_LONG.withName("DesiredAccess"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_PRINTER_DEFAULTSA");
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_DEFAULTSA$struct$LAYOUT() { return _PRINTER_DEFAULTSA$struct$LAYOUT_; }

    static final MemoryLayout _PRINTER_DEFAULTSA$pDatatype$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_DEFAULTSA$pDatatype$LAYOUT() { return _PRINTER_DEFAULTSA$pDatatype$LAYOUT_; }

    static final VarHandle _PRINTER_DEFAULTSA$pDatatype$VH_ = MemoryHandles.asAddressVarHandle(_PRINTER_DEFAULTSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDatatype")));
    static final java.lang.invoke.VarHandle _PRINTER_DEFAULTSA$pDatatype$VH() { return _PRINTER_DEFAULTSA$pDatatype$VH_; }

    static final MemoryLayout _PRINTER_DEFAULTSA$pDevMode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_DEFAULTSA$pDevMode$LAYOUT() { return _PRINTER_DEFAULTSA$pDevMode$LAYOUT_; }

    static final VarHandle _PRINTER_DEFAULTSA$pDevMode$VH_ = MemoryHandles.asAddressVarHandle(_PRINTER_DEFAULTSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDevMode")));
    static final java.lang.invoke.VarHandle _PRINTER_DEFAULTSA$pDevMode$VH() { return _PRINTER_DEFAULTSA$pDevMode$VH_; }

    static final MemoryLayout _PRINTER_DEFAULTSA$DesiredAccess$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_DEFAULTSA$DesiredAccess$LAYOUT() { return _PRINTER_DEFAULTSA$DesiredAccess$LAYOUT_; }

    static final VarHandle _PRINTER_DEFAULTSA$DesiredAccess$VH_ = _PRINTER_DEFAULTSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DesiredAccess"));
    static final java.lang.invoke.VarHandle _PRINTER_DEFAULTSA$DesiredAccess$VH() { return _PRINTER_DEFAULTSA$DesiredAccess$VH_; }

    static final MemoryLayout _PRINTER_DEFAULTSW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pDatatype"),
        C_POINTER.withName("pDevMode"),
        C_LONG.withName("DesiredAccess"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_PRINTER_DEFAULTSW");
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_DEFAULTSW$struct$LAYOUT() { return _PRINTER_DEFAULTSW$struct$LAYOUT_; }

    static final MemoryLayout _PRINTER_DEFAULTSW$pDatatype$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_DEFAULTSW$pDatatype$LAYOUT() { return _PRINTER_DEFAULTSW$pDatatype$LAYOUT_; }

    static final VarHandle _PRINTER_DEFAULTSW$pDatatype$VH_ = MemoryHandles.asAddressVarHandle(_PRINTER_DEFAULTSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDatatype")));
    static final java.lang.invoke.VarHandle _PRINTER_DEFAULTSW$pDatatype$VH() { return _PRINTER_DEFAULTSW$pDatatype$VH_; }

    static final MemoryLayout _PRINTER_DEFAULTSW$pDevMode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_DEFAULTSW$pDevMode$LAYOUT() { return _PRINTER_DEFAULTSW$pDevMode$LAYOUT_; }

    static final VarHandle _PRINTER_DEFAULTSW$pDevMode$VH_ = MemoryHandles.asAddressVarHandle(_PRINTER_DEFAULTSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDevMode")));
    static final java.lang.invoke.VarHandle _PRINTER_DEFAULTSW$pDevMode$VH() { return _PRINTER_DEFAULTSW$pDevMode$VH_; }

    static final MemoryLayout _PRINTER_DEFAULTSW$DesiredAccess$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_DEFAULTSW$DesiredAccess$LAYOUT() { return _PRINTER_DEFAULTSW$DesiredAccess$LAYOUT_; }

    static final VarHandle _PRINTER_DEFAULTSW$DesiredAccess$VH_ = _PRINTER_DEFAULTSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DesiredAccess"));
    static final java.lang.invoke.VarHandle _PRINTER_DEFAULTSW$DesiredAccess$VH() { return _PRINTER_DEFAULTSW$DesiredAccess$VH_; }

    static final MemoryLayout _PRINTER_ENUM_VALUESA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pValueName"),
        C_LONG.withName("cbValueName"),
        C_LONG.withName("dwType"),
        C_POINTER.withName("pData"),
        C_LONG.withName("cbData"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_PRINTER_ENUM_VALUESA");
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_ENUM_VALUESA$struct$LAYOUT() { return _PRINTER_ENUM_VALUESA$struct$LAYOUT_; }

    static final MemoryLayout _PRINTER_ENUM_VALUESA$pValueName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_ENUM_VALUESA$pValueName$LAYOUT() { return _PRINTER_ENUM_VALUESA$pValueName$LAYOUT_; }

    static final VarHandle _PRINTER_ENUM_VALUESA$pValueName$VH_ = MemoryHandles.asAddressVarHandle(_PRINTER_ENUM_VALUESA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pValueName")));
    static final java.lang.invoke.VarHandle _PRINTER_ENUM_VALUESA$pValueName$VH() { return _PRINTER_ENUM_VALUESA$pValueName$VH_; }

    static final MemoryLayout _PRINTER_ENUM_VALUESA$cbValueName$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_ENUM_VALUESA$cbValueName$LAYOUT() { return _PRINTER_ENUM_VALUESA$cbValueName$LAYOUT_; }

    static final VarHandle _PRINTER_ENUM_VALUESA$cbValueName$VH_ = _PRINTER_ENUM_VALUESA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbValueName"));
    static final java.lang.invoke.VarHandle _PRINTER_ENUM_VALUESA$cbValueName$VH() { return _PRINTER_ENUM_VALUESA$cbValueName$VH_; }

    static final MemoryLayout _PRINTER_ENUM_VALUESA$dwType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_ENUM_VALUESA$dwType$LAYOUT() { return _PRINTER_ENUM_VALUESA$dwType$LAYOUT_; }

    static final VarHandle _PRINTER_ENUM_VALUESA$dwType$VH_ = _PRINTER_ENUM_VALUESA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwType"));
    static final java.lang.invoke.VarHandle _PRINTER_ENUM_VALUESA$dwType$VH() { return _PRINTER_ENUM_VALUESA$dwType$VH_; }

    static final MemoryLayout _PRINTER_ENUM_VALUESA$pData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_ENUM_VALUESA$pData$LAYOUT() { return _PRINTER_ENUM_VALUESA$pData$LAYOUT_; }

    static final VarHandle _PRINTER_ENUM_VALUESA$pData$VH_ = MemoryHandles.asAddressVarHandle(_PRINTER_ENUM_VALUESA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pData")));
    static final java.lang.invoke.VarHandle _PRINTER_ENUM_VALUESA$pData$VH() { return _PRINTER_ENUM_VALUESA$pData$VH_; }

    static final MemoryLayout _PRINTER_ENUM_VALUESA$cbData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_ENUM_VALUESA$cbData$LAYOUT() { return _PRINTER_ENUM_VALUESA$cbData$LAYOUT_; }

    static final VarHandle _PRINTER_ENUM_VALUESA$cbData$VH_ = _PRINTER_ENUM_VALUESA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    static final java.lang.invoke.VarHandle _PRINTER_ENUM_VALUESA$cbData$VH() { return _PRINTER_ENUM_VALUESA$cbData$VH_; }

    static final MemoryLayout _PRINTER_ENUM_VALUESW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pValueName"),
        C_LONG.withName("cbValueName"),
        C_LONG.withName("dwType"),
        C_POINTER.withName("pData"),
        C_LONG.withName("cbData"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_PRINTER_ENUM_VALUESW");
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_ENUM_VALUESW$struct$LAYOUT() { return _PRINTER_ENUM_VALUESW$struct$LAYOUT_; }

    static final MemoryLayout _PRINTER_ENUM_VALUESW$pValueName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_ENUM_VALUESW$pValueName$LAYOUT() { return _PRINTER_ENUM_VALUESW$pValueName$LAYOUT_; }

    static final VarHandle _PRINTER_ENUM_VALUESW$pValueName$VH_ = MemoryHandles.asAddressVarHandle(_PRINTER_ENUM_VALUESW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pValueName")));
    static final java.lang.invoke.VarHandle _PRINTER_ENUM_VALUESW$pValueName$VH() { return _PRINTER_ENUM_VALUESW$pValueName$VH_; }

    static final MemoryLayout _PRINTER_ENUM_VALUESW$cbValueName$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_ENUM_VALUESW$cbValueName$LAYOUT() { return _PRINTER_ENUM_VALUESW$cbValueName$LAYOUT_; }

    static final VarHandle _PRINTER_ENUM_VALUESW$cbValueName$VH_ = _PRINTER_ENUM_VALUESW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbValueName"));
    static final java.lang.invoke.VarHandle _PRINTER_ENUM_VALUESW$cbValueName$VH() { return _PRINTER_ENUM_VALUESW$cbValueName$VH_; }

    static final MemoryLayout _PRINTER_ENUM_VALUESW$dwType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_ENUM_VALUESW$dwType$LAYOUT() { return _PRINTER_ENUM_VALUESW$dwType$LAYOUT_; }

    static final VarHandle _PRINTER_ENUM_VALUESW$dwType$VH_ = _PRINTER_ENUM_VALUESW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwType"));
    static final java.lang.invoke.VarHandle _PRINTER_ENUM_VALUESW$dwType$VH() { return _PRINTER_ENUM_VALUESW$dwType$VH_; }

    static final MemoryLayout _PRINTER_ENUM_VALUESW$pData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_ENUM_VALUESW$pData$LAYOUT() { return _PRINTER_ENUM_VALUESW$pData$LAYOUT_; }

    static final VarHandle _PRINTER_ENUM_VALUESW$pData$VH_ = MemoryHandles.asAddressVarHandle(_PRINTER_ENUM_VALUESW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pData")));
    static final java.lang.invoke.VarHandle _PRINTER_ENUM_VALUESW$pData$VH() { return _PRINTER_ENUM_VALUESW$pData$VH_; }

    static final MemoryLayout _PRINTER_ENUM_VALUESW$cbData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_ENUM_VALUESW$cbData$LAYOUT() { return _PRINTER_ENUM_VALUESW$cbData$LAYOUT_; }

    static final VarHandle _PRINTER_ENUM_VALUESW$cbData$VH_ = _PRINTER_ENUM_VALUESW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    static final java.lang.invoke.VarHandle _PRINTER_ENUM_VALUESW$cbData$VH() { return _PRINTER_ENUM_VALUESW$cbData$VH_; }

    static final FunctionDescriptor EnumPrintersA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumPrintersA$FUNC() { return EnumPrintersA$FUNC_; }

    static final MethodHandle EnumPrintersA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumPrintersA",
        "(ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumPrintersA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumPrintersA$MH() { return EnumPrintersA$MH_; }

    static final FunctionDescriptor EnumPrintersW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumPrintersW$FUNC() { return EnumPrintersW$FUNC_; }

    static final MethodHandle EnumPrintersW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumPrintersW",
        "(ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumPrintersW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumPrintersW$MH() { return EnumPrintersW$MH_; }

    static final FunctionDescriptor GetSpoolFileHandle$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetSpoolFileHandle$FUNC() { return GetSpoolFileHandle$FUNC_; }

    static final MethodHandle GetSpoolFileHandle$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetSpoolFileHandle",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        GetSpoolFileHandle$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetSpoolFileHandle$MH() { return GetSpoolFileHandle$MH_; }

    static final FunctionDescriptor CommitSpoolData$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CommitSpoolData$FUNC() { return CommitSpoolData$FUNC_; }

    static final MethodHandle CommitSpoolData$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CommitSpoolData",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        CommitSpoolData$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CommitSpoolData$MH() { return CommitSpoolData$MH_; }

    static final FunctionDescriptor CloseSpoolFileHandle$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CloseSpoolFileHandle$FUNC() { return CloseSpoolFileHandle$FUNC_; }

    static final MethodHandle CloseSpoolFileHandle$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CloseSpoolFileHandle",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CloseSpoolFileHandle$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CloseSpoolFileHandle$MH() { return CloseSpoolFileHandle$MH_; }

    static final FunctionDescriptor OpenPrinterA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor OpenPrinterA$FUNC() { return OpenPrinterA$FUNC_; }

    static final MethodHandle OpenPrinterA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "OpenPrinterA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        OpenPrinterA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle OpenPrinterA$MH() { return OpenPrinterA$MH_; }

    static final FunctionDescriptor OpenPrinterW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor OpenPrinterW$FUNC() { return OpenPrinterW$FUNC_; }

    static final MethodHandle OpenPrinterW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "OpenPrinterW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        OpenPrinterW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle OpenPrinterW$MH() { return OpenPrinterW$MH_; }

    static final FunctionDescriptor ResetPrinterA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ResetPrinterA$FUNC() { return ResetPrinterA$FUNC_; }

    static final MethodHandle ResetPrinterA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ResetPrinterA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ResetPrinterA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ResetPrinterA$MH() { return ResetPrinterA$MH_; }

    static final FunctionDescriptor ResetPrinterW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ResetPrinterW$FUNC() { return ResetPrinterW$FUNC_; }

    static final MethodHandle ResetPrinterW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ResetPrinterW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ResetPrinterW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ResetPrinterW$MH() { return ResetPrinterW$MH_; }

    static final FunctionDescriptor SetJobA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SetJobA$FUNC() { return SetJobA$FUNC_; }

    static final MethodHandle SetJobA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetJobA",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;I)I",
        SetJobA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SetJobA$MH() { return SetJobA$MH_; }

    static final FunctionDescriptor SetJobW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SetJobW$FUNC() { return SetJobW$FUNC_; }

    static final MethodHandle SetJobW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetJobW",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;I)I",
        SetJobW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SetJobW$MH() { return SetJobW$MH_; }

    static final FunctionDescriptor GetJobA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetJobA$FUNC() { return GetJobA$FUNC_; }

    static final MethodHandle GetJobA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetJobA",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetJobA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetJobA$MH() { return GetJobA$MH_; }

    static final FunctionDescriptor GetJobW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetJobW$FUNC() { return GetJobW$FUNC_; }

    static final MethodHandle GetJobW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetJobW",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetJobW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetJobW$MH() { return GetJobW$MH_; }

    static final FunctionDescriptor EnumJobsA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumJobsA$FUNC() { return EnumJobsA$FUNC_; }

    static final MethodHandle EnumJobsA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumJobsA",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumJobsA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumJobsA$MH() { return EnumJobsA$MH_; }

    static final FunctionDescriptor EnumJobsW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumJobsW$FUNC() { return EnumJobsW$FUNC_; }

    static final MethodHandle EnumJobsW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumJobsW",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumJobsW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumJobsW$MH() { return EnumJobsW$MH_; }

    static final FunctionDescriptor AddPrinterA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddPrinterA$FUNC() { return AddPrinterA$FUNC_; }

    static final MethodHandle AddPrinterA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddPrinterA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        AddPrinterA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddPrinterA$MH() { return AddPrinterA$MH_; }

    static final FunctionDescriptor AddPrinterW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddPrinterW$FUNC() { return AddPrinterW$FUNC_; }

    static final MethodHandle AddPrinterW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddPrinterW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        AddPrinterW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddPrinterW$MH() { return AddPrinterW$MH_; }

    static final FunctionDescriptor DeletePrinter$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePrinter$FUNC() { return DeletePrinter$FUNC_; }

    static final MethodHandle DeletePrinter$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePrinter",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        DeletePrinter$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePrinter$MH() { return DeletePrinter$MH_; }

    static final FunctionDescriptor SetPrinterA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SetPrinterA$FUNC() { return SetPrinterA$FUNC_; }

    static final MethodHandle SetPrinterA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetPrinterA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        SetPrinterA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SetPrinterA$MH() { return SetPrinterA$MH_; }

    static final FunctionDescriptor SetPrinterW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SetPrinterW$FUNC() { return SetPrinterW$FUNC_; }

    static final MethodHandle SetPrinterW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetPrinterW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        SetPrinterW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SetPrinterW$MH() { return SetPrinterW$MH_; }

    static final FunctionDescriptor GetPrinterA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetPrinterA$FUNC() { return GetPrinterA$FUNC_; }

    static final MethodHandle GetPrinterA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetPrinterA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetPrinterA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetPrinterA$MH() { return GetPrinterA$MH_; }

    static final FunctionDescriptor GetPrinterW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetPrinterW$FUNC() { return GetPrinterW$FUNC_; }

    static final MethodHandle GetPrinterW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetPrinterW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetPrinterW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetPrinterW$MH() { return GetPrinterW$MH_; }

    static final FunctionDescriptor AddPrinterDriverA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddPrinterDriverA$FUNC() { return AddPrinterDriverA$FUNC_; }

    static final MethodHandle AddPrinterDriverA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddPrinterDriverA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        AddPrinterDriverA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddPrinterDriverA$MH() { return AddPrinterDriverA$MH_; }

    static final FunctionDescriptor AddPrinterDriverW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddPrinterDriverW$FUNC() { return AddPrinterDriverW$FUNC_; }

    static final MethodHandle AddPrinterDriverW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddPrinterDriverW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        AddPrinterDriverW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddPrinterDriverW$MH() { return AddPrinterDriverW$MH_; }

    static final FunctionDescriptor AddPrinterDriverExA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddPrinterDriverExA$FUNC() { return AddPrinterDriverExA$FUNC_; }

    static final MethodHandle AddPrinterDriverExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddPrinterDriverExA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        AddPrinterDriverExA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddPrinterDriverExA$MH() { return AddPrinterDriverExA$MH_; }

    static final FunctionDescriptor AddPrinterDriverExW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddPrinterDriverExW$FUNC() { return AddPrinterDriverExW$FUNC_; }

    static final MethodHandle AddPrinterDriverExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddPrinterDriverExW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        AddPrinterDriverExW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddPrinterDriverExW$MH() { return AddPrinterDriverExW$MH_; }

    static final FunctionDescriptor EnumPrinterDriversA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumPrinterDriversA$FUNC() { return EnumPrinterDriversA$FUNC_; }

    static final MethodHandle EnumPrinterDriversA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumPrinterDriversA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumPrinterDriversA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumPrinterDriversA$MH() { return EnumPrinterDriversA$MH_; }

    static final FunctionDescriptor EnumPrinterDriversW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumPrinterDriversW$FUNC() { return EnumPrinterDriversW$FUNC_; }

    static final MethodHandle EnumPrinterDriversW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumPrinterDriversW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumPrinterDriversW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumPrinterDriversW$MH() { return EnumPrinterDriversW$MH_; }

    static final FunctionDescriptor GetPrinterDriverA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetPrinterDriverA$FUNC() { return GetPrinterDriverA$FUNC_; }

    static final MethodHandle GetPrinterDriverA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetPrinterDriverA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetPrinterDriverA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetPrinterDriverA$MH() { return GetPrinterDriverA$MH_; }

    static final FunctionDescriptor GetPrinterDriverW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetPrinterDriverW$FUNC() { return GetPrinterDriverW$FUNC_; }

    static final MethodHandle GetPrinterDriverW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetPrinterDriverW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetPrinterDriverW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetPrinterDriverW$MH() { return GetPrinterDriverW$MH_; }

    static final FunctionDescriptor GetPrinterDriverDirectoryA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetPrinterDriverDirectoryA$FUNC() { return GetPrinterDriverDirectoryA$FUNC_; }

    static final MethodHandle GetPrinterDriverDirectoryA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetPrinterDriverDirectoryA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetPrinterDriverDirectoryA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetPrinterDriverDirectoryA$MH() { return GetPrinterDriverDirectoryA$MH_; }

    static final FunctionDescriptor GetPrinterDriverDirectoryW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetPrinterDriverDirectoryW$FUNC() { return GetPrinterDriverDirectoryW$FUNC_; }

    static final MethodHandle GetPrinterDriverDirectoryW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetPrinterDriverDirectoryW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetPrinterDriverDirectoryW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetPrinterDriverDirectoryW$MH() { return GetPrinterDriverDirectoryW$MH_; }

    static final FunctionDescriptor DeletePrinterDriverA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePrinterDriverA$FUNC() { return DeletePrinterDriverA$FUNC_; }

    static final MethodHandle DeletePrinterDriverA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePrinterDriverA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DeletePrinterDriverA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePrinterDriverA$MH() { return DeletePrinterDriverA$MH_; }

    static final FunctionDescriptor DeletePrinterDriverW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePrinterDriverW$FUNC() { return DeletePrinterDriverW$FUNC_; }

    static final MethodHandle DeletePrinterDriverW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePrinterDriverW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DeletePrinterDriverW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePrinterDriverW$MH() { return DeletePrinterDriverW$MH_; }

    static final FunctionDescriptor DeletePrinterDriverExA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePrinterDriverExA$FUNC() { return DeletePrinterDriverExA$FUNC_; }

    static final MethodHandle DeletePrinterDriverExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePrinterDriverExA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        DeletePrinterDriverExA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePrinterDriverExA$MH() { return DeletePrinterDriverExA$MH_; }

    static final FunctionDescriptor DeletePrinterDriverExW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePrinterDriverExW$FUNC() { return DeletePrinterDriverExW$FUNC_; }

    static final MethodHandle DeletePrinterDriverExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePrinterDriverExW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        DeletePrinterDriverExW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePrinterDriverExW$MH() { return DeletePrinterDriverExW$MH_; }

    static final FunctionDescriptor AddPrintProcessorA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddPrintProcessorA$FUNC() { return AddPrintProcessorA$FUNC_; }

    static final MethodHandle AddPrintProcessorA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddPrintProcessorA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        AddPrintProcessorA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddPrintProcessorA$MH() { return AddPrintProcessorA$MH_; }

    static final FunctionDescriptor AddPrintProcessorW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddPrintProcessorW$FUNC() { return AddPrintProcessorW$FUNC_; }

    static final MethodHandle AddPrintProcessorW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddPrintProcessorW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        AddPrintProcessorW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddPrintProcessorW$MH() { return AddPrintProcessorW$MH_; }

    static final FunctionDescriptor EnumPrintProcessorsA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumPrintProcessorsA$FUNC() { return EnumPrintProcessorsA$FUNC_; }

    static final MethodHandle EnumPrintProcessorsA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumPrintProcessorsA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumPrintProcessorsA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumPrintProcessorsA$MH() { return EnumPrintProcessorsA$MH_; }

    static final FunctionDescriptor EnumPrintProcessorsW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumPrintProcessorsW$FUNC() { return EnumPrintProcessorsW$FUNC_; }

    static final MethodHandle EnumPrintProcessorsW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumPrintProcessorsW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumPrintProcessorsW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumPrintProcessorsW$MH() { return EnumPrintProcessorsW$MH_; }

    static final FunctionDescriptor GetPrintProcessorDirectoryA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetPrintProcessorDirectoryA$FUNC() { return GetPrintProcessorDirectoryA$FUNC_; }

    static final MethodHandle GetPrintProcessorDirectoryA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetPrintProcessorDirectoryA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetPrintProcessorDirectoryA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetPrintProcessorDirectoryA$MH() { return GetPrintProcessorDirectoryA$MH_; }

    static final FunctionDescriptor GetPrintProcessorDirectoryW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetPrintProcessorDirectoryW$FUNC() { return GetPrintProcessorDirectoryW$FUNC_; }

    static final MethodHandle GetPrintProcessorDirectoryW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetPrintProcessorDirectoryW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetPrintProcessorDirectoryW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetPrintProcessorDirectoryW$MH() { return GetPrintProcessorDirectoryW$MH_; }

    static final FunctionDescriptor EnumPrintProcessorDatatypesA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumPrintProcessorDatatypesA$FUNC() { return EnumPrintProcessorDatatypesA$FUNC_; }

    static final MethodHandle EnumPrintProcessorDatatypesA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumPrintProcessorDatatypesA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumPrintProcessorDatatypesA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumPrintProcessorDatatypesA$MH() { return EnumPrintProcessorDatatypesA$MH_; }

    static final FunctionDescriptor EnumPrintProcessorDatatypesW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumPrintProcessorDatatypesW$FUNC() { return EnumPrintProcessorDatatypesW$FUNC_; }

    static final MethodHandle EnumPrintProcessorDatatypesW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumPrintProcessorDatatypesW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumPrintProcessorDatatypesW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumPrintProcessorDatatypesW$MH() { return EnumPrintProcessorDatatypesW$MH_; }

    static final FunctionDescriptor DeletePrintProcessorA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePrintProcessorA$FUNC() { return DeletePrintProcessorA$FUNC_; }

    static final MethodHandle DeletePrintProcessorA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePrintProcessorA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DeletePrintProcessorA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePrintProcessorA$MH() { return DeletePrintProcessorA$MH_; }

    static final FunctionDescriptor DeletePrintProcessorW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePrintProcessorW$FUNC() { return DeletePrintProcessorW$FUNC_; }

    static final MethodHandle DeletePrintProcessorW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePrintProcessorW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DeletePrintProcessorW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePrintProcessorW$MH() { return DeletePrintProcessorW$MH_; }

    static final FunctionDescriptor StartDocPrinterA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor StartDocPrinterA$FUNC() { return StartDocPrinterA$FUNC_; }

    static final MethodHandle StartDocPrinterA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "StartDocPrinterA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        StartDocPrinterA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle StartDocPrinterA$MH() { return StartDocPrinterA$MH_; }

    static final FunctionDescriptor StartDocPrinterW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor StartDocPrinterW$FUNC() { return StartDocPrinterW$FUNC_; }

    static final MethodHandle StartDocPrinterW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "StartDocPrinterW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        StartDocPrinterW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle StartDocPrinterW$MH() { return StartDocPrinterW$MH_; }

    static final FunctionDescriptor StartPagePrinter$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor StartPagePrinter$FUNC() { return StartPagePrinter$FUNC_; }

    static final MethodHandle StartPagePrinter$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "StartPagePrinter",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        StartPagePrinter$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle StartPagePrinter$MH() { return StartPagePrinter$MH_; }

    static final FunctionDescriptor WritePrinter$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WritePrinter$FUNC() { return WritePrinter$FUNC_; }

    static final MethodHandle WritePrinter$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WritePrinter",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        WritePrinter$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WritePrinter$MH() { return WritePrinter$MH_; }

    static final FunctionDescriptor FlushPrinter$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor FlushPrinter$FUNC() { return FlushPrinter$FUNC_; }

    static final MethodHandle FlushPrinter$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FlushPrinter",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        FlushPrinter$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FlushPrinter$MH() { return FlushPrinter$MH_; }

    static final FunctionDescriptor EndPagePrinter$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EndPagePrinter$FUNC() { return EndPagePrinter$FUNC_; }

    static final MethodHandle EndPagePrinter$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EndPagePrinter",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        EndPagePrinter$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EndPagePrinter$MH() { return EndPagePrinter$MH_; }

    static final FunctionDescriptor AbortPrinter$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AbortPrinter$FUNC() { return AbortPrinter$FUNC_; }

    static final MethodHandle AbortPrinter$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AbortPrinter",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        AbortPrinter$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AbortPrinter$MH() { return AbortPrinter$MH_; }

    static final FunctionDescriptor ReadPrinter$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadPrinter$FUNC() { return ReadPrinter$FUNC_; }

    static final MethodHandle ReadPrinter$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadPrinter",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ReadPrinter$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadPrinter$MH() { return ReadPrinter$MH_; }

    static final FunctionDescriptor EndDocPrinter$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EndDocPrinter$FUNC() { return EndDocPrinter$FUNC_; }

    static final MethodHandle EndDocPrinter$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EndDocPrinter",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        EndDocPrinter$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EndDocPrinter$MH() { return EndDocPrinter$MH_; }

    static final FunctionDescriptor AddJobA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddJobA$FUNC() { return AddJobA$FUNC_; }

    static final MethodHandle AddJobA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddJobA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        AddJobA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddJobA$MH() { return AddJobA$MH_; }

    static final FunctionDescriptor AddJobW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddJobW$FUNC() { return AddJobW$FUNC_; }

    static final MethodHandle AddJobW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddJobW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        AddJobW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddJobW$MH() { return AddJobW$MH_; }

    static final FunctionDescriptor ScheduleJob$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor ScheduleJob$FUNC() { return ScheduleJob$FUNC_; }

    static final MethodHandle ScheduleJob$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ScheduleJob",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        ScheduleJob$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ScheduleJob$MH() { return ScheduleJob$MH_; }

    static final FunctionDescriptor PrinterProperties$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor PrinterProperties$FUNC() { return PrinterProperties$FUNC_; }

    static final MethodHandle PrinterProperties$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "PrinterProperties",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        PrinterProperties$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle PrinterProperties$MH() { return PrinterProperties$MH_; }

    static final FunctionDescriptor DocumentPropertiesA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DocumentPropertiesA$FUNC() { return DocumentPropertiesA$FUNC_; }

    static final MethodHandle DocumentPropertiesA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DocumentPropertiesA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        DocumentPropertiesA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DocumentPropertiesA$MH() { return DocumentPropertiesA$MH_; }

    static final FunctionDescriptor DocumentPropertiesW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DocumentPropertiesW$FUNC() { return DocumentPropertiesW$FUNC_; }

    static final MethodHandle DocumentPropertiesW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DocumentPropertiesW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        DocumentPropertiesW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DocumentPropertiesW$MH() { return DocumentPropertiesW$MH_; }

    static final FunctionDescriptor AdvancedDocumentPropertiesA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AdvancedDocumentPropertiesA$FUNC() { return AdvancedDocumentPropertiesA$FUNC_; }

    static final MethodHandle AdvancedDocumentPropertiesA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AdvancedDocumentPropertiesA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        AdvancedDocumentPropertiesA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AdvancedDocumentPropertiesA$MH() { return AdvancedDocumentPropertiesA$MH_; }

    static final FunctionDescriptor AdvancedDocumentPropertiesW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AdvancedDocumentPropertiesW$FUNC() { return AdvancedDocumentPropertiesW$FUNC_; }

    static final MethodHandle AdvancedDocumentPropertiesW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AdvancedDocumentPropertiesW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        AdvancedDocumentPropertiesW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AdvancedDocumentPropertiesW$MH() { return AdvancedDocumentPropertiesW$MH_; }

    static final FunctionDescriptor ExtDeviceMode$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor ExtDeviceMode$FUNC() { return ExtDeviceMode$FUNC_; }

    static final MethodHandle ExtDeviceMode$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ExtDeviceMode",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        ExtDeviceMode$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ExtDeviceMode$MH() { return ExtDeviceMode$MH_; }

    static final FunctionDescriptor GetPrinterDataA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetPrinterDataA$FUNC() { return GetPrinterDataA$FUNC_; }

    static final MethodHandle GetPrinterDataA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetPrinterDataA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetPrinterDataA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetPrinterDataA$MH() { return GetPrinterDataA$MH_; }

    static final FunctionDescriptor GetPrinterDataW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetPrinterDataW$FUNC() { return GetPrinterDataW$FUNC_; }

    static final MethodHandle GetPrinterDataW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetPrinterDataW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetPrinterDataW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetPrinterDataW$MH() { return GetPrinterDataW$MH_; }

    static final FunctionDescriptor GetPrinterDataExA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetPrinterDataExA$FUNC() { return GetPrinterDataExA$FUNC_; }

    static final MethodHandle GetPrinterDataExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetPrinterDataExA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetPrinterDataExA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetPrinterDataExA$MH() { return GetPrinterDataExA$MH_; }

    static final FunctionDescriptor GetPrinterDataExW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetPrinterDataExW$FUNC() { return GetPrinterDataExW$FUNC_; }

    static final MethodHandle GetPrinterDataExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetPrinterDataExW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetPrinterDataExW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetPrinterDataExW$MH() { return GetPrinterDataExW$MH_; }

    static final FunctionDescriptor EnumPrinterDataA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumPrinterDataA$FUNC() { return EnumPrinterDataA$FUNC_; }

    static final MethodHandle EnumPrinterDataA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumPrinterDataA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        EnumPrinterDataA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumPrinterDataA$MH() { return EnumPrinterDataA$MH_; }

    static final FunctionDescriptor EnumPrinterDataW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumPrinterDataW$FUNC() { return EnumPrinterDataW$FUNC_; }

    static final MethodHandle EnumPrinterDataW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumPrinterDataW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        EnumPrinterDataW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumPrinterDataW$MH() { return EnumPrinterDataW$MH_; }

    static final FunctionDescriptor EnumPrinterDataExA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumPrinterDataExA$FUNC() { return EnumPrinterDataExA$FUNC_; }

    static final MethodHandle EnumPrinterDataExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumPrinterDataExA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumPrinterDataExA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumPrinterDataExA$MH() { return EnumPrinterDataExA$MH_; }

    static final FunctionDescriptor EnumPrinterDataExW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumPrinterDataExW$FUNC() { return EnumPrinterDataExW$FUNC_; }

    static final MethodHandle EnumPrinterDataExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumPrinterDataExW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumPrinterDataExW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumPrinterDataExW$MH() { return EnumPrinterDataExW$MH_; }

    static final FunctionDescriptor EnumPrinterKeyA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumPrinterKeyA$FUNC() { return EnumPrinterKeyA$FUNC_; }

    static final MethodHandle EnumPrinterKeyA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumPrinterKeyA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        EnumPrinterKeyA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumPrinterKeyA$MH() { return EnumPrinterKeyA$MH_; }

    static final FunctionDescriptor EnumPrinterKeyW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumPrinterKeyW$FUNC() { return EnumPrinterKeyW$FUNC_; }

    static final MethodHandle EnumPrinterKeyW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumPrinterKeyW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        EnumPrinterKeyW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumPrinterKeyW$MH() { return EnumPrinterKeyW$MH_; }

    static final FunctionDescriptor SetPrinterDataA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SetPrinterDataA$FUNC() { return SetPrinterDataA$FUNC_; }

    static final MethodHandle SetPrinterDataA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetPrinterDataA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        SetPrinterDataA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SetPrinterDataA$MH() { return SetPrinterDataA$MH_; }

    static final FunctionDescriptor SetPrinterDataW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SetPrinterDataW$FUNC() { return SetPrinterDataW$FUNC_; }

    static final MethodHandle SetPrinterDataW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetPrinterDataW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        SetPrinterDataW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SetPrinterDataW$MH() { return SetPrinterDataW$MH_; }

    static final FunctionDescriptor SetPrinterDataExA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SetPrinterDataExA$FUNC() { return SetPrinterDataExA$FUNC_; }

    static final MethodHandle SetPrinterDataExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetPrinterDataExA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        SetPrinterDataExA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SetPrinterDataExA$MH() { return SetPrinterDataExA$MH_; }

    static final FunctionDescriptor SetPrinterDataExW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SetPrinterDataExW$FUNC() { return SetPrinterDataExW$FUNC_; }

    static final MethodHandle SetPrinterDataExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetPrinterDataExW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        SetPrinterDataExW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SetPrinterDataExW$MH() { return SetPrinterDataExW$MH_; }

    static final FunctionDescriptor DeletePrinterDataA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePrinterDataA$FUNC() { return DeletePrinterDataA$FUNC_; }

    static final MethodHandle DeletePrinterDataA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePrinterDataA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DeletePrinterDataA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePrinterDataA$MH() { return DeletePrinterDataA$MH_; }

    static final FunctionDescriptor DeletePrinterDataW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePrinterDataW$FUNC() { return DeletePrinterDataW$FUNC_; }

    static final MethodHandle DeletePrinterDataW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePrinterDataW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DeletePrinterDataW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePrinterDataW$MH() { return DeletePrinterDataW$MH_; }

    static final FunctionDescriptor DeletePrinterDataExA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePrinterDataExA$FUNC() { return DeletePrinterDataExA$FUNC_; }

    static final MethodHandle DeletePrinterDataExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePrinterDataExA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DeletePrinterDataExA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePrinterDataExA$MH() { return DeletePrinterDataExA$MH_; }

    static final FunctionDescriptor DeletePrinterDataExW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePrinterDataExW$FUNC() { return DeletePrinterDataExW$FUNC_; }

    static final MethodHandle DeletePrinterDataExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePrinterDataExW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DeletePrinterDataExW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePrinterDataExW$MH() { return DeletePrinterDataExW$MH_; }

    static final FunctionDescriptor DeletePrinterKeyA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePrinterKeyA$FUNC() { return DeletePrinterKeyA$FUNC_; }

    static final MethodHandle DeletePrinterKeyA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePrinterKeyA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DeletePrinterKeyA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePrinterKeyA$MH() { return DeletePrinterKeyA$MH_; }

    static final FunctionDescriptor DeletePrinterKeyW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePrinterKeyW$FUNC() { return DeletePrinterKeyW$FUNC_; }

    static final MethodHandle DeletePrinterKeyW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePrinterKeyW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DeletePrinterKeyW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePrinterKeyW$MH() { return DeletePrinterKeyW$MH_; }

    static final MemoryLayout _PRINTER_NOTIFY_OPTIONS_TYPE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("Type"),
        C_SHORT.withName("Reserved0"),
        C_LONG.withName("Reserved1"),
        C_LONG.withName("Reserved2"),
        C_LONG.withName("Count"),
        C_POINTER.withName("pFields")
    ).withName("_PRINTER_NOTIFY_OPTIONS_TYPE");
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_OPTIONS_TYPE$struct$LAYOUT() { return _PRINTER_NOTIFY_OPTIONS_TYPE$struct$LAYOUT_; }

    static final MemoryLayout _PRINTER_NOTIFY_OPTIONS_TYPE$Type$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_OPTIONS_TYPE$Type$LAYOUT() { return _PRINTER_NOTIFY_OPTIONS_TYPE$Type$LAYOUT_; }

    static final VarHandle _PRINTER_NOTIFY_OPTIONS_TYPE$Type$VH_ = _PRINTER_NOTIFY_OPTIONS_TYPE$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Type"));
    static final java.lang.invoke.VarHandle _PRINTER_NOTIFY_OPTIONS_TYPE$Type$VH() { return _PRINTER_NOTIFY_OPTIONS_TYPE$Type$VH_; }

    static final MemoryLayout _PRINTER_NOTIFY_OPTIONS_TYPE$Reserved0$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_OPTIONS_TYPE$Reserved0$LAYOUT() { return _PRINTER_NOTIFY_OPTIONS_TYPE$Reserved0$LAYOUT_; }

    static final VarHandle _PRINTER_NOTIFY_OPTIONS_TYPE$Reserved0$VH_ = _PRINTER_NOTIFY_OPTIONS_TYPE$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Reserved0"));
    static final java.lang.invoke.VarHandle _PRINTER_NOTIFY_OPTIONS_TYPE$Reserved0$VH() { return _PRINTER_NOTIFY_OPTIONS_TYPE$Reserved0$VH_; }

    static final MemoryLayout _PRINTER_NOTIFY_OPTIONS_TYPE$Reserved1$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_OPTIONS_TYPE$Reserved1$LAYOUT() { return _PRINTER_NOTIFY_OPTIONS_TYPE$Reserved1$LAYOUT_; }

    static final VarHandle _PRINTER_NOTIFY_OPTIONS_TYPE$Reserved1$VH_ = _PRINTER_NOTIFY_OPTIONS_TYPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved1"));
    static final java.lang.invoke.VarHandle _PRINTER_NOTIFY_OPTIONS_TYPE$Reserved1$VH() { return _PRINTER_NOTIFY_OPTIONS_TYPE$Reserved1$VH_; }

    static final MemoryLayout _PRINTER_NOTIFY_OPTIONS_TYPE$Reserved2$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_OPTIONS_TYPE$Reserved2$LAYOUT() { return _PRINTER_NOTIFY_OPTIONS_TYPE$Reserved2$LAYOUT_; }

    static final VarHandle _PRINTER_NOTIFY_OPTIONS_TYPE$Reserved2$VH_ = _PRINTER_NOTIFY_OPTIONS_TYPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved2"));
    static final java.lang.invoke.VarHandle _PRINTER_NOTIFY_OPTIONS_TYPE$Reserved2$VH() { return _PRINTER_NOTIFY_OPTIONS_TYPE$Reserved2$VH_; }

    static final MemoryLayout _PRINTER_NOTIFY_OPTIONS_TYPE$Count$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_OPTIONS_TYPE$Count$LAYOUT() { return _PRINTER_NOTIFY_OPTIONS_TYPE$Count$LAYOUT_; }

    static final VarHandle _PRINTER_NOTIFY_OPTIONS_TYPE$Count$VH_ = _PRINTER_NOTIFY_OPTIONS_TYPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Count"));
    static final java.lang.invoke.VarHandle _PRINTER_NOTIFY_OPTIONS_TYPE$Count$VH() { return _PRINTER_NOTIFY_OPTIONS_TYPE$Count$VH_; }

    static final MemoryLayout _PRINTER_NOTIFY_OPTIONS_TYPE$pFields$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_OPTIONS_TYPE$pFields$LAYOUT() { return _PRINTER_NOTIFY_OPTIONS_TYPE$pFields$LAYOUT_; }

    static final VarHandle _PRINTER_NOTIFY_OPTIONS_TYPE$pFields$VH_ = MemoryHandles.asAddressVarHandle(_PRINTER_NOTIFY_OPTIONS_TYPE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pFields")));
    static final java.lang.invoke.VarHandle _PRINTER_NOTIFY_OPTIONS_TYPE$pFields$VH() { return _PRINTER_NOTIFY_OPTIONS_TYPE$pFields$VH_; }

    static final MemoryLayout _PRINTER_NOTIFY_OPTIONS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Flags"),
        C_LONG.withName("Count"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pTypes")
    ).withName("_PRINTER_NOTIFY_OPTIONS");
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_OPTIONS$struct$LAYOUT() { return _PRINTER_NOTIFY_OPTIONS$struct$LAYOUT_; }

    static final MemoryLayout _PRINTER_NOTIFY_OPTIONS$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_OPTIONS$Version$LAYOUT() { return _PRINTER_NOTIFY_OPTIONS$Version$LAYOUT_; }

    static final VarHandle _PRINTER_NOTIFY_OPTIONS$Version$VH_ = _PRINTER_NOTIFY_OPTIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _PRINTER_NOTIFY_OPTIONS$Version$VH() { return _PRINTER_NOTIFY_OPTIONS$Version$VH_; }

    static final MemoryLayout _PRINTER_NOTIFY_OPTIONS$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_OPTIONS$Flags$LAYOUT() { return _PRINTER_NOTIFY_OPTIONS$Flags$LAYOUT_; }

    static final VarHandle _PRINTER_NOTIFY_OPTIONS$Flags$VH_ = _PRINTER_NOTIFY_OPTIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _PRINTER_NOTIFY_OPTIONS$Flags$VH() { return _PRINTER_NOTIFY_OPTIONS$Flags$VH_; }

    static final MemoryLayout _PRINTER_NOTIFY_OPTIONS$Count$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_OPTIONS$Count$LAYOUT() { return _PRINTER_NOTIFY_OPTIONS$Count$LAYOUT_; }

    static final VarHandle _PRINTER_NOTIFY_OPTIONS$Count$VH_ = _PRINTER_NOTIFY_OPTIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Count"));
    static final java.lang.invoke.VarHandle _PRINTER_NOTIFY_OPTIONS$Count$VH() { return _PRINTER_NOTIFY_OPTIONS$Count$VH_; }

    static final MemoryLayout _PRINTER_NOTIFY_OPTIONS$pTypes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_OPTIONS$pTypes$LAYOUT() { return _PRINTER_NOTIFY_OPTIONS$pTypes$LAYOUT_; }

    static final VarHandle _PRINTER_NOTIFY_OPTIONS$pTypes$VH_ = MemoryHandles.asAddressVarHandle(_PRINTER_NOTIFY_OPTIONS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pTypes")));
    static final java.lang.invoke.VarHandle _PRINTER_NOTIFY_OPTIONS$pTypes$VH() { return _PRINTER_NOTIFY_OPTIONS$pTypes$VH_; }

    static final MemoryLayout _PRINTER_NOTIFY_INFO_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("Type"),
        C_SHORT.withName("Field"),
        C_LONG.withName("Reserved"),
        C_LONG.withName("Id"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            MemoryLayout.ofSequence(2, C_LONG).withName("adwData"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbBuf"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pBuf")
            ).withName("Data")
        ).withName("NotifyData")
    ).withName("_PRINTER_NOTIFY_INFO_DATA");
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_INFO_DATA$struct$LAYOUT() { return _PRINTER_NOTIFY_INFO_DATA$struct$LAYOUT_; }

    static final MemoryLayout _PRINTER_NOTIFY_INFO_DATA$Type$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_INFO_DATA$Type$LAYOUT() { return _PRINTER_NOTIFY_INFO_DATA$Type$LAYOUT_; }

    static final VarHandle _PRINTER_NOTIFY_INFO_DATA$Type$VH_ = _PRINTER_NOTIFY_INFO_DATA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Type"));
    static final java.lang.invoke.VarHandle _PRINTER_NOTIFY_INFO_DATA$Type$VH() { return _PRINTER_NOTIFY_INFO_DATA$Type$VH_; }

    static final MemoryLayout _PRINTER_NOTIFY_INFO_DATA$Field$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_INFO_DATA$Field$LAYOUT() { return _PRINTER_NOTIFY_INFO_DATA$Field$LAYOUT_; }

    static final VarHandle _PRINTER_NOTIFY_INFO_DATA$Field$VH_ = _PRINTER_NOTIFY_INFO_DATA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Field"));
    static final java.lang.invoke.VarHandle _PRINTER_NOTIFY_INFO_DATA$Field$VH() { return _PRINTER_NOTIFY_INFO_DATA$Field$VH_; }

    static final MemoryLayout _PRINTER_NOTIFY_INFO_DATA$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_INFO_DATA$Reserved$LAYOUT() { return _PRINTER_NOTIFY_INFO_DATA$Reserved$LAYOUT_; }

    static final VarHandle _PRINTER_NOTIFY_INFO_DATA$Reserved$VH_ = _PRINTER_NOTIFY_INFO_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _PRINTER_NOTIFY_INFO_DATA$Reserved$VH() { return _PRINTER_NOTIFY_INFO_DATA$Reserved$VH_; }

    static final MemoryLayout _PRINTER_NOTIFY_INFO_DATA$Id$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_INFO_DATA$Id$LAYOUT() { return _PRINTER_NOTIFY_INFO_DATA$Id$LAYOUT_; }

    static final VarHandle _PRINTER_NOTIFY_INFO_DATA$Id$VH_ = _PRINTER_NOTIFY_INFO_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Id"));
    static final java.lang.invoke.VarHandle _PRINTER_NOTIFY_INFO_DATA$Id$VH() { return _PRINTER_NOTIFY_INFO_DATA$Id$VH_; }

    static final MemoryLayout NotifyData$struct$LAYOUT_ = MemoryLayout.ofUnion(
        MemoryLayout.ofSequence(2, C_LONG).withName("adwData"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbBuf"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pBuf")
        ).withName("Data")
    );
    static final jdk.incubator.foreign.MemoryLayout NotifyData$struct$LAYOUT() { return NotifyData$struct$LAYOUT_; }

    static final MemoryLayout Data$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbBuf"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pBuf")
    );
    static final jdk.incubator.foreign.MemoryLayout Data$struct$LAYOUT() { return Data$struct$LAYOUT_; }

    static final MemoryLayout Data$cbBuf$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout Data$cbBuf$LAYOUT() { return Data$cbBuf$LAYOUT_; }

    static final VarHandle Data$cbBuf$VH_ = Data$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBuf"));
    static final java.lang.invoke.VarHandle Data$cbBuf$VH() { return Data$cbBuf$VH_; }

    static final MemoryLayout Data$pBuf$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout Data$pBuf$LAYOUT() { return Data$pBuf$LAYOUT_; }

    static final VarHandle Data$pBuf$VH_ = MemoryHandles.asAddressVarHandle(Data$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pBuf")));
    static final java.lang.invoke.VarHandle Data$pBuf$VH() { return Data$pBuf$VH_; }

    static final MemoryLayout _PRINTER_NOTIFY_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Flags"),
        C_LONG.withName("Count"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_SHORT.withName("Type"),
            C_SHORT.withName("Field"),
            C_LONG.withName("Reserved"),
            C_LONG.withName("Id"),
            MemoryLayout.ofPaddingBits(32),
            MemoryLayout.ofUnion(
                MemoryLayout.ofSequence(2, C_LONG).withName("adwData"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbBuf"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pBuf")
                ).withName("Data")
            ).withName("NotifyData")
        ).withName("_PRINTER_NOTIFY_INFO_DATA")).withName("aData")
    ).withName("_PRINTER_NOTIFY_INFO");
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_INFO$struct$LAYOUT() { return _PRINTER_NOTIFY_INFO$struct$LAYOUT_; }

    static final MemoryLayout _PRINTER_NOTIFY_INFO$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_INFO$Version$LAYOUT() { return _PRINTER_NOTIFY_INFO$Version$LAYOUT_; }

    static final VarHandle _PRINTER_NOTIFY_INFO$Version$VH_ = _PRINTER_NOTIFY_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _PRINTER_NOTIFY_INFO$Version$VH() { return _PRINTER_NOTIFY_INFO$Version$VH_; }

    static final MemoryLayout _PRINTER_NOTIFY_INFO$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_INFO$Flags$LAYOUT() { return _PRINTER_NOTIFY_INFO$Flags$LAYOUT_; }

    static final VarHandle _PRINTER_NOTIFY_INFO$Flags$VH_ = _PRINTER_NOTIFY_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _PRINTER_NOTIFY_INFO$Flags$VH() { return _PRINTER_NOTIFY_INFO$Flags$VH_; }

    static final MemoryLayout _PRINTER_NOTIFY_INFO$Count$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_NOTIFY_INFO$Count$LAYOUT() { return _PRINTER_NOTIFY_INFO$Count$LAYOUT_; }

    static final VarHandle _PRINTER_NOTIFY_INFO$Count$VH_ = _PRINTER_NOTIFY_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Count"));
    static final java.lang.invoke.VarHandle _PRINTER_NOTIFY_INFO$Count$VH() { return _PRINTER_NOTIFY_INFO$Count$VH_; }

    static final MemoryLayout _BINARY_CONTAINER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbBuf"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pData")
    ).withName("_BINARY_CONTAINER");
    static final jdk.incubator.foreign.MemoryLayout _BINARY_CONTAINER$struct$LAYOUT() { return _BINARY_CONTAINER$struct$LAYOUT_; }

    static final MemoryLayout _BINARY_CONTAINER$cbBuf$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _BINARY_CONTAINER$cbBuf$LAYOUT() { return _BINARY_CONTAINER$cbBuf$LAYOUT_; }

    static final VarHandle _BINARY_CONTAINER$cbBuf$VH_ = _BINARY_CONTAINER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBuf"));
    static final java.lang.invoke.VarHandle _BINARY_CONTAINER$cbBuf$VH() { return _BINARY_CONTAINER$cbBuf$VH_; }

    static final MemoryLayout _BINARY_CONTAINER$pData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _BINARY_CONTAINER$pData$LAYOUT() { return _BINARY_CONTAINER$pData$LAYOUT_; }

    static final VarHandle _BINARY_CONTAINER$pData$VH_ = MemoryHandles.asAddressVarHandle(_BINARY_CONTAINER$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pData")));
    static final java.lang.invoke.VarHandle _BINARY_CONTAINER$pData$VH() { return _BINARY_CONTAINER$pData$VH_; }

    static final MemoryLayout _BIDI_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwBidiType"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_INT.withName("bData"),
            C_LONG.withName("iData"),
            C_POINTER.withName("sData"),
            C_FLOAT.withName("fData"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbBuf"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pData")
            ).withName("biData")
        ).withName("u")
    ).withName("_BIDI_DATA");
    static final jdk.incubator.foreign.MemoryLayout _BIDI_DATA$struct$LAYOUT() { return _BIDI_DATA$struct$LAYOUT_; }

    static final MemoryLayout _BIDI_DATA$dwBidiType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _BIDI_DATA$dwBidiType$LAYOUT() { return _BIDI_DATA$dwBidiType$LAYOUT_; }

    static final VarHandle _BIDI_DATA$dwBidiType$VH_ = _BIDI_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwBidiType"));
    static final java.lang.invoke.VarHandle _BIDI_DATA$dwBidiType$VH() { return _BIDI_DATA$dwBidiType$VH_; }

    static final MemoryLayout u$bData$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout u$bData$LAYOUT() { return u$bData$LAYOUT_; }

    static final VarHandle u$bData$VH_ = u$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bData"));
    static final java.lang.invoke.VarHandle u$bData$VH() { return u$bData$VH_; }

    static final MemoryLayout u$iData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout u$iData$LAYOUT() { return u$iData$LAYOUT_; }

    static final VarHandle u$iData$VH_ = u$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iData"));
    static final java.lang.invoke.VarHandle u$iData$VH() { return u$iData$VH_; }

    static final MemoryLayout u$sData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout u$sData$LAYOUT() { return u$sData$LAYOUT_; }

    static final VarHandle u$sData$VH_ = MemoryHandles.asAddressVarHandle(u$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("sData")));
    static final java.lang.invoke.VarHandle u$sData$VH() { return u$sData$VH_; }

    static final MemoryLayout u$fData$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout u$fData$LAYOUT() { return u$fData$LAYOUT_; }

    static final VarHandle u$fData$VH_ = u$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("fData"));
    static final java.lang.invoke.VarHandle u$fData$VH() { return u$fData$VH_; }

    static final MemoryLayout _BIDI_REQUEST_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwReqNumber"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pSchema"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwBidiType"),
            MemoryLayout.ofPaddingBits(32),
            MemoryLayout.ofUnion(
                C_INT.withName("bData"),
                C_LONG.withName("iData"),
                C_POINTER.withName("sData"),
                C_FLOAT.withName("fData"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbBuf"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pData")
                ).withName("biData")
            ).withName("u")
        ).withName("data")
    ).withName("_BIDI_REQUEST_DATA");
    static final jdk.incubator.foreign.MemoryLayout _BIDI_REQUEST_DATA$struct$LAYOUT() { return _BIDI_REQUEST_DATA$struct$LAYOUT_; }

    static final MemoryLayout _BIDI_REQUEST_DATA$dwReqNumber$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _BIDI_REQUEST_DATA$dwReqNumber$LAYOUT() { return _BIDI_REQUEST_DATA$dwReqNumber$LAYOUT_; }

    static final VarHandle _BIDI_REQUEST_DATA$dwReqNumber$VH_ = _BIDI_REQUEST_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReqNumber"));
    static final java.lang.invoke.VarHandle _BIDI_REQUEST_DATA$dwReqNumber$VH() { return _BIDI_REQUEST_DATA$dwReqNumber$VH_; }

    static final MemoryLayout _BIDI_REQUEST_DATA$pSchema$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _BIDI_REQUEST_DATA$pSchema$LAYOUT() { return _BIDI_REQUEST_DATA$pSchema$LAYOUT_; }

    static final VarHandle _BIDI_REQUEST_DATA$pSchema$VH_ = MemoryHandles.asAddressVarHandle(_BIDI_REQUEST_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pSchema")));
    static final java.lang.invoke.VarHandle _BIDI_REQUEST_DATA$pSchema$VH() { return _BIDI_REQUEST_DATA$pSchema$VH_; }

    static final MemoryLayout _BIDI_REQUEST_CONTAINER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Flags"),
        C_LONG.withName("Count"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONG.withName("dwReqNumber"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pSchema"),
            MemoryLayout.ofStruct(
                C_LONG.withName("dwBidiType"),
                MemoryLayout.ofPaddingBits(32),
                MemoryLayout.ofUnion(
                    C_INT.withName("bData"),
                    C_LONG.withName("iData"),
                    C_POINTER.withName("sData"),
                    C_FLOAT.withName("fData"),
                    MemoryLayout.ofStruct(
                        C_LONG.withName("cbBuf"),
                        MemoryLayout.ofPaddingBits(32),
                        C_POINTER.withName("pData")
                    ).withName("biData")
                ).withName("u")
            ).withName("data")
        ).withName("_BIDI_REQUEST_DATA")).withName("aData")
    ).withName("_BIDI_REQUEST_CONTAINER");
    static final jdk.incubator.foreign.MemoryLayout _BIDI_REQUEST_CONTAINER$struct$LAYOUT() { return _BIDI_REQUEST_CONTAINER$struct$LAYOUT_; }

    static final MemoryLayout _BIDI_REQUEST_CONTAINER$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _BIDI_REQUEST_CONTAINER$Version$LAYOUT() { return _BIDI_REQUEST_CONTAINER$Version$LAYOUT_; }

    static final VarHandle _BIDI_REQUEST_CONTAINER$Version$VH_ = _BIDI_REQUEST_CONTAINER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _BIDI_REQUEST_CONTAINER$Version$VH() { return _BIDI_REQUEST_CONTAINER$Version$VH_; }

    static final MemoryLayout _BIDI_REQUEST_CONTAINER$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _BIDI_REQUEST_CONTAINER$Flags$LAYOUT() { return _BIDI_REQUEST_CONTAINER$Flags$LAYOUT_; }

    static final VarHandle _BIDI_REQUEST_CONTAINER$Flags$VH_ = _BIDI_REQUEST_CONTAINER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _BIDI_REQUEST_CONTAINER$Flags$VH() { return _BIDI_REQUEST_CONTAINER$Flags$VH_; }

    static final MemoryLayout _BIDI_REQUEST_CONTAINER$Count$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _BIDI_REQUEST_CONTAINER$Count$LAYOUT() { return _BIDI_REQUEST_CONTAINER$Count$LAYOUT_; }

    static final VarHandle _BIDI_REQUEST_CONTAINER$Count$VH_ = _BIDI_REQUEST_CONTAINER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Count"));
    static final java.lang.invoke.VarHandle _BIDI_REQUEST_CONTAINER$Count$VH() { return _BIDI_REQUEST_CONTAINER$Count$VH_; }

    static final MemoryLayout _BIDI_RESPONSE_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwResult"),
        C_LONG.withName("dwReqNumber"),
        C_POINTER.withName("pSchema"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwBidiType"),
            MemoryLayout.ofPaddingBits(32),
            MemoryLayout.ofUnion(
                C_INT.withName("bData"),
                C_LONG.withName("iData"),
                C_POINTER.withName("sData"),
                C_FLOAT.withName("fData"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbBuf"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pData")
                ).withName("biData")
            ).withName("u")
        ).withName("data")
    ).withName("_BIDI_RESPONSE_DATA");
    static final jdk.incubator.foreign.MemoryLayout _BIDI_RESPONSE_DATA$struct$LAYOUT() { return _BIDI_RESPONSE_DATA$struct$LAYOUT_; }

    static final MemoryLayout _BIDI_RESPONSE_DATA$dwResult$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _BIDI_RESPONSE_DATA$dwResult$LAYOUT() { return _BIDI_RESPONSE_DATA$dwResult$LAYOUT_; }

    static final VarHandle _BIDI_RESPONSE_DATA$dwResult$VH_ = _BIDI_RESPONSE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwResult"));
    static final java.lang.invoke.VarHandle _BIDI_RESPONSE_DATA$dwResult$VH() { return _BIDI_RESPONSE_DATA$dwResult$VH_; }

    static final MemoryLayout _BIDI_RESPONSE_DATA$dwReqNumber$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _BIDI_RESPONSE_DATA$dwReqNumber$LAYOUT() { return _BIDI_RESPONSE_DATA$dwReqNumber$LAYOUT_; }

    static final VarHandle _BIDI_RESPONSE_DATA$dwReqNumber$VH_ = _BIDI_RESPONSE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReqNumber"));
    static final java.lang.invoke.VarHandle _BIDI_RESPONSE_DATA$dwReqNumber$VH() { return _BIDI_RESPONSE_DATA$dwReqNumber$VH_; }

    static final MemoryLayout _BIDI_RESPONSE_DATA$pSchema$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _BIDI_RESPONSE_DATA$pSchema$LAYOUT() { return _BIDI_RESPONSE_DATA$pSchema$LAYOUT_; }

    static final VarHandle _BIDI_RESPONSE_DATA$pSchema$VH_ = MemoryHandles.asAddressVarHandle(_BIDI_RESPONSE_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pSchema")));
    static final java.lang.invoke.VarHandle _BIDI_RESPONSE_DATA$pSchema$VH() { return _BIDI_RESPONSE_DATA$pSchema$VH_; }

    static final MemoryLayout _BIDI_RESPONSE_CONTAINER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Flags"),
        C_LONG.withName("Count"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONG.withName("dwResult"),
            C_LONG.withName("dwReqNumber"),
            C_POINTER.withName("pSchema"),
            MemoryLayout.ofStruct(
                C_LONG.withName("dwBidiType"),
                MemoryLayout.ofPaddingBits(32),
                MemoryLayout.ofUnion(
                    C_INT.withName("bData"),
                    C_LONG.withName("iData"),
                    C_POINTER.withName("sData"),
                    C_FLOAT.withName("fData"),
                    MemoryLayout.ofStruct(
                        C_LONG.withName("cbBuf"),
                        MemoryLayout.ofPaddingBits(32),
                        C_POINTER.withName("pData")
                    ).withName("biData")
                ).withName("u")
            ).withName("data")
        ).withName("_BIDI_RESPONSE_DATA")).withName("aData")
    ).withName("_BIDI_RESPONSE_CONTAINER");
    static final jdk.incubator.foreign.MemoryLayout _BIDI_RESPONSE_CONTAINER$struct$LAYOUT() { return _BIDI_RESPONSE_CONTAINER$struct$LAYOUT_; }

    static final MemoryLayout _BIDI_RESPONSE_CONTAINER$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _BIDI_RESPONSE_CONTAINER$Version$LAYOUT() { return _BIDI_RESPONSE_CONTAINER$Version$LAYOUT_; }

    static final VarHandle _BIDI_RESPONSE_CONTAINER$Version$VH_ = _BIDI_RESPONSE_CONTAINER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _BIDI_RESPONSE_CONTAINER$Version$VH() { return _BIDI_RESPONSE_CONTAINER$Version$VH_; }

    static final MemoryLayout _BIDI_RESPONSE_CONTAINER$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _BIDI_RESPONSE_CONTAINER$Flags$LAYOUT() { return _BIDI_RESPONSE_CONTAINER$Flags$LAYOUT_; }

    static final VarHandle _BIDI_RESPONSE_CONTAINER$Flags$VH_ = _BIDI_RESPONSE_CONTAINER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _BIDI_RESPONSE_CONTAINER$Flags$VH() { return _BIDI_RESPONSE_CONTAINER$Flags$VH_; }

    static final MemoryLayout _BIDI_RESPONSE_CONTAINER$Count$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _BIDI_RESPONSE_CONTAINER$Count$LAYOUT() { return _BIDI_RESPONSE_CONTAINER$Count$LAYOUT_; }

    static final VarHandle _BIDI_RESPONSE_CONTAINER$Count$VH_ = _BIDI_RESPONSE_CONTAINER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Count"));
    static final java.lang.invoke.VarHandle _BIDI_RESPONSE_CONTAINER$Count$VH() { return _BIDI_RESPONSE_CONTAINER$Count$VH_; }

    static final int BIDI_NULL() { return (int)0L; }

    static final int BIDI_INT() { return (int)1L; }

    static final int BIDI_FLOAT() { return (int)2L; }

    static final int BIDI_BOOL() { return (int)3L; }

    static final int BIDI_STRING() { return (int)4L; }

    static final int BIDI_TEXT() { return (int)5L; }

    static final int BIDI_ENUM() { return (int)6L; }

    static final int BIDI_BLOB() { return (int)7L; }

}

