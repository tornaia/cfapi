// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$21 extends cfapi_h$constants$20 {

    /* package-private */ cfapi_h$constants$21() {}
    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$MinorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$MinorVersion$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$MinorVersion$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$MinorVersion$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MinorVersion"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$MinorVersion$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$MinorVersion$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsClear$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsClear$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsClear$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsClear$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GlobalFlagsClear"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsClear$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsClear$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsSet$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsSet$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsSet$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsSet$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GlobalFlagsSet"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsSet$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsSet$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$CriticalSectionDefaultTimeout$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$CriticalSectionDefaultTimeout$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$CriticalSectionDefaultTimeout$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$CriticalSectionDefaultTimeout$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CriticalSectionDefaultTimeout"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$CriticalSectionDefaultTimeout$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$CriticalSectionDefaultTimeout$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitFreeBlockThreshold$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitFreeBlockThreshold$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitFreeBlockThreshold$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitFreeBlockThreshold$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DeCommitFreeBlockThreshold"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitFreeBlockThreshold$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitFreeBlockThreshold$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitTotalFreeThreshold$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitTotalFreeThreshold$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitTotalFreeThreshold$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitTotalFreeThreshold$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DeCommitTotalFreeThreshold"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitTotalFreeThreshold$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitTotalFreeThreshold$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$LockPrefixTable$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$LockPrefixTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$LockPrefixTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$LockPrefixTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LockPrefixTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$LockPrefixTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$LockPrefixTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$MaximumAllocationSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$MaximumAllocationSize$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$MaximumAllocationSize$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$MaximumAllocationSize$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaximumAllocationSize"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$MaximumAllocationSize$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$MaximumAllocationSize$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$VirtualMemoryThreshold$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$VirtualMemoryThreshold$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$VirtualMemoryThreshold$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$VirtualMemoryThreshold$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("VirtualMemoryThreshold"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$VirtualMemoryThreshold$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$VirtualMemoryThreshold$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessHeapFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessHeapFlags$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessHeapFlags$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessHeapFlags$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProcessHeapFlags"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessHeapFlags$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessHeapFlags$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessAffinityMask$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessAffinityMask$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessAffinityMask$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessAffinityMask$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProcessAffinityMask"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessAffinityMask$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessAffinityMask$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$CSDVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$CSDVersion$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$CSDVersion$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$CSDVersion$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("CSDVersion"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$CSDVersion$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$CSDVersion$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DependentLoadFlags$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DependentLoadFlags$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DependentLoadFlags$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DependentLoadFlags$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("DependentLoadFlags"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DependentLoadFlags$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DependentLoadFlags$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$EditList$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$EditList$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$EditList$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$EditList$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EditList"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$EditList$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$EditList$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$SecurityCookie$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$SecurityCookie$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$SecurityCookie$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$SecurityCookie$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SecurityCookie"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$SecurityCookie$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$SecurityCookie$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerTable$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SEHandlerTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerCount$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerCount$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerCount$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SEHandlerCount"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerCount$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerCount$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFCheckFunctionPointer$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFCheckFunctionPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFCheckFunctionPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFCheckFunctionPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardCFCheckFunctionPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFCheckFunctionPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFCheckFunctionPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFDispatchFunctionPointer$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFDispatchFunctionPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFDispatchFunctionPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFDispatchFunctionPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardCFDispatchFunctionPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFDispatchFunctionPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFDispatchFunctionPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionTable$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardCFFunctionTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionCount$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionCount$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionCount$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardCFFunctionCount"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionCount$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionCount$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardFlags$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardFlags$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardFlags$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardFlags"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardFlags$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardFlags$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryTable$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardAddressTakenIatEntryTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryCount$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryCount$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryCount$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardAddressTakenIatEntryCount"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryCount$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryCount$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetTable$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardLongJumpTargetTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetCount$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetCount$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetCount$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardLongJumpTargetCount"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetCount$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetCount$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTable$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DynamicValueRelocTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$CHPEMetadataPointer$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$CHPEMetadataPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$CHPEMetadataPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$CHPEMetadataPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CHPEMetadataPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$CHPEMetadataPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$CHPEMetadataPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutine$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutine$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutine$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutine$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardRFFailureRoutine"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutine$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutine$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutineFunctionPointer$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutineFunctionPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutineFunctionPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutineFunctionPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardRFFailureRoutineFunctionPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutineFunctionPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutineFunctionPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableOffset$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableOffset$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableOffset$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DynamicValueRelocTableOffset"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableOffset$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableOffset$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableSection$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableSection$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableSection$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableSection$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("DynamicValueRelocTableSection"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableSection$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableSection$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved2$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved2$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved2$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved2$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Reserved2"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved2$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved2$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFVerifyStackPointerFunctionPointer$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFVerifyStackPointerFunctionPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFVerifyStackPointerFunctionPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFVerifyStackPointerFunctionPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardRFVerifyStackPointerFunctionPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFVerifyStackPointerFunctionPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFVerifyStackPointerFunctionPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$HotPatchTableOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$HotPatchTableOffset$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$HotPatchTableOffset$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$HotPatchTableOffset$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("HotPatchTableOffset"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$HotPatchTableOffset$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$HotPatchTableOffset$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved3$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved3$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved3$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved3$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved3"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved3$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved3$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$EnclaveConfigurationPointer$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$EnclaveConfigurationPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$EnclaveConfigurationPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$EnclaveConfigurationPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EnclaveConfigurationPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$EnclaveConfigurationPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$EnclaveConfigurationPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$VolatileMetadataPointer$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$VolatileMetadataPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$VolatileMetadataPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$VolatileMetadataPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("VolatileMetadataPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$VolatileMetadataPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$VolatileMetadataPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationTable$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardEHContinuationTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationCount$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationCount$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationCount$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardEHContinuationCount"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationCount$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationCount$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        C_LONG.withName("TimeDateStamp"),
        C_SHORT.withName("MajorVersion"),
        C_SHORT.withName("MinorVersion"),
        C_LONG.withName("GlobalFlagsClear"),
        C_LONG.withName("GlobalFlagsSet"),
        C_LONG.withName("CriticalSectionDefaultTimeout"),
        C_LONGLONG.withName("DeCommitFreeBlockThreshold"),
        C_LONGLONG.withName("DeCommitTotalFreeThreshold"),
        C_LONGLONG.withName("LockPrefixTable"),
        C_LONGLONG.withName("MaximumAllocationSize"),
        C_LONGLONG.withName("VirtualMemoryThreshold"),
        C_LONGLONG.withName("ProcessAffinityMask"),
        C_LONG.withName("ProcessHeapFlags"),
        C_SHORT.withName("CSDVersion"),
        C_SHORT.withName("DependentLoadFlags"),
        C_LONGLONG.withName("EditList"),
        C_LONGLONG.withName("SecurityCookie"),
        C_LONGLONG.withName("SEHandlerTable"),
        C_LONGLONG.withName("SEHandlerCount"),
        C_LONGLONG.withName("GuardCFCheckFunctionPointer"),
        C_LONGLONG.withName("GuardCFDispatchFunctionPointer"),
        C_LONGLONG.withName("GuardCFFunctionTable"),
        C_LONGLONG.withName("GuardCFFunctionCount"),
        C_LONG.withName("GuardFlags"),
        MemoryLayout.ofStruct(
            C_SHORT.withName("Flags"),
            C_SHORT.withName("Catalog"),
            C_LONG.withName("CatalogOffset"),
            C_LONG.withName("Reserved")
        ).withName("CodeIntegrity"),
        C_LONGLONG.withName("GuardAddressTakenIatEntryTable"),
        C_LONGLONG.withName("GuardAddressTakenIatEntryCount"),
        C_LONGLONG.withName("GuardLongJumpTargetTable"),
        C_LONGLONG.withName("GuardLongJumpTargetCount"),
        C_LONGLONG.withName("DynamicValueRelocTable"),
        C_LONGLONG.withName("CHPEMetadataPointer"),
        C_LONGLONG.withName("GuardRFFailureRoutine"),
        C_LONGLONG.withName("GuardRFFailureRoutineFunctionPointer"),
        C_LONG.withName("DynamicValueRelocTableOffset"),
        C_SHORT.withName("DynamicValueRelocTableSection"),
        C_SHORT.withName("Reserved2"),
        C_LONGLONG.withName("GuardRFVerifyStackPointerFunctionPointer"),
        C_LONG.withName("HotPatchTableOffset"),
        C_LONG.withName("Reserved3"),
        C_LONGLONG.withName("EnclaveConfigurationPointer"),
        C_LONGLONG.withName("VolatileMetadataPointer"),
        C_LONGLONG.withName("GuardEHContinuationTable"),
        C_LONGLONG.withName("GuardEHContinuationCount")
    ).withName("_IMAGE_LOAD_CONFIG_DIRECTORY64");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$Size$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$Size$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$Size$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$Size$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$Size$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$TimeDateStamp$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$TimeDateStamp$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$TimeDateStamp$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$TimeDateStamp$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TimeDateStamp"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$TimeDateStamp$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$TimeDateStamp$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$MajorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$MajorVersion$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$MajorVersion$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$MajorVersion$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MajorVersion"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$MajorVersion$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$MajorVersion$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$MinorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$MinorVersion$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$MinorVersion$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$MinorVersion$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MinorVersion"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$MinorVersion$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$MinorVersion$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsClear$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsClear$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsClear$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsClear$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GlobalFlagsClear"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsClear$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsClear$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsSet$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsSet$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsSet$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsSet$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GlobalFlagsSet"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsSet$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsSet$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$CriticalSectionDefaultTimeout$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$CriticalSectionDefaultTimeout$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$CriticalSectionDefaultTimeout$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$CriticalSectionDefaultTimeout$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CriticalSectionDefaultTimeout"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$CriticalSectionDefaultTimeout$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$CriticalSectionDefaultTimeout$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitFreeBlockThreshold$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitFreeBlockThreshold$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitFreeBlockThreshold$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitFreeBlockThreshold$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DeCommitFreeBlockThreshold"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitFreeBlockThreshold$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitFreeBlockThreshold$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitTotalFreeThreshold$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitTotalFreeThreshold$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitTotalFreeThreshold$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitTotalFreeThreshold$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DeCommitTotalFreeThreshold"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitTotalFreeThreshold$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitTotalFreeThreshold$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$LockPrefixTable$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$LockPrefixTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$LockPrefixTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$LockPrefixTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LockPrefixTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$LockPrefixTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$LockPrefixTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$MaximumAllocationSize$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$MaximumAllocationSize$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$MaximumAllocationSize$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$MaximumAllocationSize$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MaximumAllocationSize"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$MaximumAllocationSize$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$MaximumAllocationSize$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$VirtualMemoryThreshold$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$VirtualMemoryThreshold$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$VirtualMemoryThreshold$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$VirtualMemoryThreshold$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("VirtualMemoryThreshold"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$VirtualMemoryThreshold$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$VirtualMemoryThreshold$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessAffinityMask$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessAffinityMask$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessAffinityMask$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessAffinityMask$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ProcessAffinityMask"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessAffinityMask$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessAffinityMask$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessHeapFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessHeapFlags$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessHeapFlags$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessHeapFlags$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProcessHeapFlags"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessHeapFlags$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessHeapFlags$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$CSDVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$CSDVersion$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$CSDVersion$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$CSDVersion$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("CSDVersion"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$CSDVersion$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$CSDVersion$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DependentLoadFlags$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DependentLoadFlags$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DependentLoadFlags$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DependentLoadFlags$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("DependentLoadFlags"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DependentLoadFlags$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DependentLoadFlags$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$EditList$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$EditList$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$EditList$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$EditList$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EditList"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$EditList$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$EditList$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$SecurityCookie$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$SecurityCookie$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$SecurityCookie$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$SecurityCookie$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SecurityCookie"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$SecurityCookie$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$SecurityCookie$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerTable$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SEHandlerTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerCount$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerCount$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerCount$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerCount$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SEHandlerCount"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerCount$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerCount$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFCheckFunctionPointer$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFCheckFunctionPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFCheckFunctionPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFCheckFunctionPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardCFCheckFunctionPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFCheckFunctionPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFCheckFunctionPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFDispatchFunctionPointer$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFDispatchFunctionPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFDispatchFunctionPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFDispatchFunctionPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardCFDispatchFunctionPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFDispatchFunctionPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFDispatchFunctionPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionTable$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardCFFunctionTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionCount$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionCount$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionCount$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionCount$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardCFFunctionCount"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionCount$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionCount$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardFlags$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardFlags$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardFlags$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardFlags"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardFlags$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardFlags$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryTable$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardAddressTakenIatEntryTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryCount$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryCount$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryCount$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryCount$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardAddressTakenIatEntryCount"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryCount$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryCount$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetTable$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardLongJumpTargetTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetCount$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetCount$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetCount$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetCount$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardLongJumpTargetCount"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetCount$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetCount$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTable$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DynamicValueRelocTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$CHPEMetadataPointer$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$CHPEMetadataPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$CHPEMetadataPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$CHPEMetadataPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CHPEMetadataPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$CHPEMetadataPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$CHPEMetadataPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutine$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutine$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutine$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutine$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardRFFailureRoutine"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutine$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutine$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutineFunctionPointer$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutineFunctionPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutineFunctionPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutineFunctionPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardRFFailureRoutineFunctionPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutineFunctionPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutineFunctionPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableOffset$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableOffset$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableOffset$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DynamicValueRelocTableOffset"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableOffset$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableOffset$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableSection$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableSection$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableSection$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableSection$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("DynamicValueRelocTableSection"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableSection$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableSection$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved2$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved2$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved2$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved2$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Reserved2"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved2$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved2$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFVerifyStackPointerFunctionPointer$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFVerifyStackPointerFunctionPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFVerifyStackPointerFunctionPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFVerifyStackPointerFunctionPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardRFVerifyStackPointerFunctionPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFVerifyStackPointerFunctionPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFVerifyStackPointerFunctionPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$HotPatchTableOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$HotPatchTableOffset$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$HotPatchTableOffset$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$HotPatchTableOffset$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("HotPatchTableOffset"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$HotPatchTableOffset$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$HotPatchTableOffset$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved3$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved3$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved3$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved3$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved3"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved3$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved3$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$EnclaveConfigurationPointer$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$EnclaveConfigurationPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$EnclaveConfigurationPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$EnclaveConfigurationPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EnclaveConfigurationPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$EnclaveConfigurationPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$EnclaveConfigurationPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$VolatileMetadataPointer$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$VolatileMetadataPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$VolatileMetadataPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$VolatileMetadataPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("VolatileMetadataPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$VolatileMetadataPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$VolatileMetadataPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationTable$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardEHContinuationTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationCount$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationCount$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationCount$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationCount$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardEHContinuationCount"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationCount$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationCount$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("SequenceNumber"),
        C_LONG.withName("BaseImageList"),
        C_LONG.withName("BaseImageCount"),
        C_LONG.withName("BufferOffset"),
        C_LONG.withName("ExtraPatchSize")
    ).withName("_IMAGE_HOT_PATCH_INFO");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_INFO$struct$LAYOUT() { return _IMAGE_HOT_PATCH_INFO$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_INFO$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_INFO$Version$LAYOUT() { return _IMAGE_HOT_PATCH_INFO$Version$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_INFO$Version$VH_ = _IMAGE_HOT_PATCH_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_INFO$Version$VH() { return _IMAGE_HOT_PATCH_INFO$Version$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_INFO$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_INFO$Size$LAYOUT() { return _IMAGE_HOT_PATCH_INFO$Size$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_INFO$Size$VH_ = _IMAGE_HOT_PATCH_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_INFO$Size$VH() { return _IMAGE_HOT_PATCH_INFO$Size$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_INFO$SequenceNumber$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_INFO$SequenceNumber$LAYOUT() { return _IMAGE_HOT_PATCH_INFO$SequenceNumber$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_INFO$SequenceNumber$VH_ = _IMAGE_HOT_PATCH_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SequenceNumber"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_INFO$SequenceNumber$VH() { return _IMAGE_HOT_PATCH_INFO$SequenceNumber$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_INFO$BaseImageList$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_INFO$BaseImageList$LAYOUT() { return _IMAGE_HOT_PATCH_INFO$BaseImageList$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_INFO$BaseImageList$VH_ = _IMAGE_HOT_PATCH_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BaseImageList"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_INFO$BaseImageList$VH() { return _IMAGE_HOT_PATCH_INFO$BaseImageList$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_INFO$BaseImageCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_INFO$BaseImageCount$LAYOUT() { return _IMAGE_HOT_PATCH_INFO$BaseImageCount$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_INFO$BaseImageCount$VH_ = _IMAGE_HOT_PATCH_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BaseImageCount"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_INFO$BaseImageCount$VH() { return _IMAGE_HOT_PATCH_INFO$BaseImageCount$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_INFO$BufferOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_INFO$BufferOffset$LAYOUT() { return _IMAGE_HOT_PATCH_INFO$BufferOffset$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_INFO$BufferOffset$VH_ = _IMAGE_HOT_PATCH_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BufferOffset"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_INFO$BufferOffset$VH() { return _IMAGE_HOT_PATCH_INFO$BufferOffset$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_INFO$ExtraPatchSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_INFO$ExtraPatchSize$LAYOUT() { return _IMAGE_HOT_PATCH_INFO$ExtraPatchSize$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_INFO$ExtraPatchSize$VH_ = _IMAGE_HOT_PATCH_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ExtraPatchSize"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_INFO$ExtraPatchSize$VH() { return _IMAGE_HOT_PATCH_INFO$ExtraPatchSize$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_BASE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("SequenceNumber"),
        C_LONG.withName("Flags"),
        C_LONG.withName("OriginalTimeDateStamp"),
        C_LONG.withName("OriginalCheckSum"),
        C_LONG.withName("CodeIntegrityInfo"),
        C_LONG.withName("CodeIntegritySize"),
        C_LONG.withName("PatchTable"),
        C_LONG.withName("BufferOffset")
    ).withName("_IMAGE_HOT_PATCH_BASE");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_BASE$struct$LAYOUT() { return _IMAGE_HOT_PATCH_BASE$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_BASE$SequenceNumber$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_BASE$SequenceNumber$LAYOUT() { return _IMAGE_HOT_PATCH_BASE$SequenceNumber$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_BASE$SequenceNumber$VH_ = _IMAGE_HOT_PATCH_BASE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SequenceNumber"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_BASE$SequenceNumber$VH() { return _IMAGE_HOT_PATCH_BASE$SequenceNumber$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_BASE$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_BASE$Flags$LAYOUT() { return _IMAGE_HOT_PATCH_BASE$Flags$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_BASE$Flags$VH_ = _IMAGE_HOT_PATCH_BASE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_BASE$Flags$VH() { return _IMAGE_HOT_PATCH_BASE$Flags$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_BASE$OriginalTimeDateStamp$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_BASE$OriginalTimeDateStamp$LAYOUT() { return _IMAGE_HOT_PATCH_BASE$OriginalTimeDateStamp$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_BASE$OriginalTimeDateStamp$VH_ = _IMAGE_HOT_PATCH_BASE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OriginalTimeDateStamp"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_BASE$OriginalTimeDateStamp$VH() { return _IMAGE_HOT_PATCH_BASE$OriginalTimeDateStamp$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_BASE$OriginalCheckSum$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_BASE$OriginalCheckSum$LAYOUT() { return _IMAGE_HOT_PATCH_BASE$OriginalCheckSum$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_BASE$OriginalCheckSum$VH_ = _IMAGE_HOT_PATCH_BASE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OriginalCheckSum"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_BASE$OriginalCheckSum$VH() { return _IMAGE_HOT_PATCH_BASE$OriginalCheckSum$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_BASE$CodeIntegrityInfo$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_BASE$CodeIntegrityInfo$LAYOUT() { return _IMAGE_HOT_PATCH_BASE$CodeIntegrityInfo$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_BASE$CodeIntegrityInfo$VH_ = _IMAGE_HOT_PATCH_BASE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CodeIntegrityInfo"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_BASE$CodeIntegrityInfo$VH() { return _IMAGE_HOT_PATCH_BASE$CodeIntegrityInfo$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_BASE$CodeIntegritySize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_BASE$CodeIntegritySize$LAYOUT() { return _IMAGE_HOT_PATCH_BASE$CodeIntegritySize$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_BASE$CodeIntegritySize$VH_ = _IMAGE_HOT_PATCH_BASE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CodeIntegritySize"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_BASE$CodeIntegritySize$VH() { return _IMAGE_HOT_PATCH_BASE$CodeIntegritySize$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_BASE$PatchTable$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_BASE$PatchTable$LAYOUT() { return _IMAGE_HOT_PATCH_BASE$PatchTable$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_BASE$PatchTable$VH_ = _IMAGE_HOT_PATCH_BASE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PatchTable"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_BASE$PatchTable$VH() { return _IMAGE_HOT_PATCH_BASE$PatchTable$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_BASE$BufferOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_BASE$BufferOffset$LAYOUT() { return _IMAGE_HOT_PATCH_BASE$BufferOffset$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_BASE$BufferOffset$VH_ = _IMAGE_HOT_PATCH_BASE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BufferOffset"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_BASE$BufferOffset$VH() { return _IMAGE_HOT_PATCH_BASE$BufferOffset$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_HASHES$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(32, C_CHAR).withName("SHA256"),
        MemoryLayout.ofSequence(20, C_CHAR).withName("SHA1")
    ).withName("_IMAGE_HOT_PATCH_HASHES");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_HASHES$struct$LAYOUT() { return _IMAGE_HOT_PATCH_HASHES$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_CE_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("FuncStart"),
        C_INT
    ).withName("_IMAGE_CE_RUNTIME_FUNCTION_ENTRY");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_CE_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT() { return _IMAGE_CE_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_CE_RUNTIME_FUNCTION_ENTRY$FuncStart$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_CE_RUNTIME_FUNCTION_ENTRY$FuncStart$LAYOUT() { return _IMAGE_CE_RUNTIME_FUNCTION_ENTRY$FuncStart$LAYOUT_; }

    static final VarHandle _IMAGE_CE_RUNTIME_FUNCTION_ENTRY$FuncStart$VH_ = _IMAGE_CE_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FuncStart"));
    static final java.lang.invoke.VarHandle _IMAGE_CE_RUNTIME_FUNCTION_ENTRY$FuncStart$VH() { return _IMAGE_CE_RUNTIME_FUNCTION_ENTRY$FuncStart$VH_; }

    static final MemoryLayout _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("BeginAddress"),
        C_LONG.withName("UnwindData"),
        C_INT
    ).withName("_IMAGE_ARM_RUNTIME_FUNCTION_ENTRY");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT() { return _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT() { return _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT_; }

    static final VarHandle _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH_ = _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BeginAddress"));
    static final java.lang.invoke.VarHandle _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH() { return _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH_; }

    static final MemoryLayout _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$UnwindData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$UnwindData$LAYOUT() { return _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$UnwindData$LAYOUT_; }

    static final VarHandle _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$UnwindData$VH_ = _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("UnwindData"));
    static final java.lang.invoke.VarHandle _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$UnwindData$VH() { return _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$UnwindData$VH_; }

    static final int PdataRefToFullXdata() { return (int)0L; }

    static final int PdataPackedUnwindFunction() { return (int)1L; }

    static final int PdataPackedUnwindFragment() { return (int)2L; }

    static final int PdataCrUnchained() { return (int)0L; }

    static final int PdataCrUnchainedSavedLr() { return (int)1L; }

    static final int PdataCrChained() { return (int)3L; }

    static final MemoryLayout _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("BeginAddress"),
        C_LONG.withName("UnwindData"),
        C_INT
    ).withName("_IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT() { return _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT() { return _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT_; }

    static final VarHandle _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH_ = _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BeginAddress"));
    static final java.lang.invoke.VarHandle _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH() { return _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH_; }

    static final MemoryLayout _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$UnwindData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$UnwindData$LAYOUT() { return _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$UnwindData$LAYOUT_; }

    static final VarHandle _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$UnwindData$VH_ = _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("UnwindData"));
    static final java.lang.invoke.VarHandle _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$UnwindData$VH() { return _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$UnwindData$VH_; }

    static final MemoryLayout IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA$struct$LAYOUT_ = MemoryLayout.ofUnion(
        C_LONG.withName("HeaderData"),
        C_INT
    ).withName("IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA");
    static final jdk.incubator.foreign.MemoryLayout IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA$struct$LAYOUT() { return IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA$struct$LAYOUT_; }

    static final MemoryLayout IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA$HeaderData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA$HeaderData$LAYOUT() { return IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA$HeaderData$LAYOUT_; }

    static final VarHandle IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA$HeaderData$VH_ = IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("HeaderData"));
    static final java.lang.invoke.VarHandle IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA$HeaderData$VH() { return IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA$HeaderData$VH_; }

    static final MemoryLayout _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("BeginAddress"),
        C_LONGLONG.withName("EndAddress"),
        C_LONGLONG.withName("ExceptionHandler"),
        C_LONGLONG.withName("HandlerData"),
        C_LONGLONG.withName("PrologEndAddress")
    ).withName("_IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT() { return _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT() { return _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT_; }

    static final VarHandle _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH_ = _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("BeginAddress"));
    static final java.lang.invoke.VarHandle _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH() { return _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH_; }

    static final MemoryLayout _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$EndAddress$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$EndAddress$LAYOUT() { return _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$EndAddress$LAYOUT_; }

    static final VarHandle _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$EndAddress$VH_ = _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EndAddress"));
    static final java.lang.invoke.VarHandle _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$EndAddress$VH() { return _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$EndAddress$VH_; }

    static final MemoryLayout _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$ExceptionHandler$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$ExceptionHandler$LAYOUT() { return _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$ExceptionHandler$LAYOUT_; }

    static final VarHandle _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$ExceptionHandler$VH_ = _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ExceptionHandler"));
    static final java.lang.invoke.VarHandle _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$ExceptionHandler$VH() { return _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$ExceptionHandler$VH_; }

    static final MemoryLayout _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$HandlerData$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$HandlerData$LAYOUT() { return _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$HandlerData$LAYOUT_; }

    static final VarHandle _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$HandlerData$VH_ = _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("HandlerData"));
    static final java.lang.invoke.VarHandle _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$HandlerData$VH() { return _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$HandlerData$VH_; }

    static final MemoryLayout _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$PrologEndAddress$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$PrologEndAddress$LAYOUT() { return _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$PrologEndAddress$LAYOUT_; }

    static final VarHandle _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$PrologEndAddress$VH_ = _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("PrologEndAddress"));
    static final java.lang.invoke.VarHandle _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$PrologEndAddress$VH() { return _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$PrologEndAddress$VH_; }

    static final MemoryLayout _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("BeginAddress"),
        C_LONG.withName("EndAddress"),
        C_LONG.withName("ExceptionHandler"),
        C_LONG.withName("HandlerData"),
        C_LONG.withName("PrologEndAddress")
    ).withName("_IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT() { return _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT() { return _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT_; }

    static final VarHandle _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH_ = _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BeginAddress"));
    static final java.lang.invoke.VarHandle _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH() { return _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH_; }

    static final MemoryLayout _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$EndAddress$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$EndAddress$LAYOUT() { return _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$EndAddress$LAYOUT_; }

    static final VarHandle _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$EndAddress$VH_ = _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EndAddress"));
    static final java.lang.invoke.VarHandle _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$EndAddress$VH() { return _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$EndAddress$VH_; }

    static final MemoryLayout _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$ExceptionHandler$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$ExceptionHandler$LAYOUT() { return _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$ExceptionHandler$LAYOUT_; }

    static final VarHandle _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$ExceptionHandler$VH_ = _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ExceptionHandler"));
    static final java.lang.invoke.VarHandle _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$ExceptionHandler$VH() { return _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$ExceptionHandler$VH_; }

    static final MemoryLayout _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$HandlerData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$HandlerData$LAYOUT() { return _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$HandlerData$LAYOUT_; }

    static final VarHandle _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$HandlerData$VH_ = _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("HandlerData"));
    static final java.lang.invoke.VarHandle _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$HandlerData$VH() { return _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$HandlerData$VH_; }

    static final MemoryLayout _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$PrologEndAddress$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$PrologEndAddress$LAYOUT() { return _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$PrologEndAddress$LAYOUT_; }

    static final VarHandle _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$PrologEndAddress$VH_ = _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PrologEndAddress"));
    static final java.lang.invoke.VarHandle _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$PrologEndAddress$VH() { return _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY$PrologEndAddress$VH_; }

    static final MemoryLayout _IMAGE_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("BeginAddress"),
        C_LONG.withName("EndAddress"),
        C_LONG.withName("UnwindInfoAddress"),
        C_LONG.withName("UnwindData")
    ).withName("_IMAGE_RUNTIME_FUNCTION_ENTRY");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT() { return _IMAGE_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT() { return _IMAGE_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT_; }

    static final VarHandle _IMAGE_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH_ = _IMAGE_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BeginAddress"));
    static final java.lang.invoke.VarHandle _IMAGE_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH() { return _IMAGE_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH_; }

    static final MemoryLayout _IMAGE_RUNTIME_FUNCTION_ENTRY$EndAddress$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RUNTIME_FUNCTION_ENTRY$EndAddress$LAYOUT() { return _IMAGE_RUNTIME_FUNCTION_ENTRY$EndAddress$LAYOUT_; }

    static final VarHandle _IMAGE_RUNTIME_FUNCTION_ENTRY$EndAddress$VH_ = _IMAGE_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EndAddress"));
    static final java.lang.invoke.VarHandle _IMAGE_RUNTIME_FUNCTION_ENTRY$EndAddress$VH() { return _IMAGE_RUNTIME_FUNCTION_ENTRY$EndAddress$VH_; }

    static final MemoryLayout _IMAGE_RUNTIME_FUNCTION_ENTRY$UnwindInfoAddress$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RUNTIME_FUNCTION_ENTRY$UnwindInfoAddress$LAYOUT() { return _IMAGE_RUNTIME_FUNCTION_ENTRY$UnwindInfoAddress$LAYOUT_; }

    static final VarHandle _IMAGE_RUNTIME_FUNCTION_ENTRY$UnwindInfoAddress$VH_ = _IMAGE_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("UnwindInfoAddress"));
    static final java.lang.invoke.VarHandle _IMAGE_RUNTIME_FUNCTION_ENTRY$UnwindInfoAddress$VH() { return _IMAGE_RUNTIME_FUNCTION_ENTRY$UnwindInfoAddress$VH_; }

    static final MemoryLayout _IMAGE_RUNTIME_FUNCTION_ENTRY$UnwindData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RUNTIME_FUNCTION_ENTRY$UnwindData$LAYOUT() { return _IMAGE_RUNTIME_FUNCTION_ENTRY$UnwindData$LAYOUT_; }

    static final VarHandle _IMAGE_RUNTIME_FUNCTION_ENTRY$UnwindData$VH_ = _IMAGE_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("UnwindData"));
    static final java.lang.invoke.VarHandle _IMAGE_RUNTIME_FUNCTION_ENTRY$UnwindData$VH() { return _IMAGE_RUNTIME_FUNCTION_ENTRY$UnwindData$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG32$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        C_LONG.withName("MinimumRequiredConfigSize"),
        C_LONG.withName("PolicyFlags"),
        C_LONG.withName("NumberOfImports"),
        C_LONG.withName("ImportList"),
        C_LONG.withName("ImportEntrySize"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("FamilyID"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("ImageID"),
        C_LONG.withName("ImageVersion"),
        C_LONG.withName("SecurityVersion"),
        C_LONG.withName("EnclaveSize"),
        C_LONG.withName("NumberOfThreads"),
        C_LONG.withName("EnclaveFlags")
    ).withName("_IMAGE_ENCLAVE_CONFIG32");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG32$struct$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG32$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG32$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG32$Size$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG32$Size$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG32$Size$VH_ = _IMAGE_ENCLAVE_CONFIG32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG32$Size$VH() { return _IMAGE_ENCLAVE_CONFIG32$Size$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG32$MinimumRequiredConfigSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG32$MinimumRequiredConfigSize$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG32$MinimumRequiredConfigSize$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG32$MinimumRequiredConfigSize$VH_ = _IMAGE_ENCLAVE_CONFIG32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MinimumRequiredConfigSize"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG32$MinimumRequiredConfigSize$VH() { return _IMAGE_ENCLAVE_CONFIG32$MinimumRequiredConfigSize$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG32$PolicyFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG32$PolicyFlags$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG32$PolicyFlags$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG32$PolicyFlags$VH_ = _IMAGE_ENCLAVE_CONFIG32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PolicyFlags"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG32$PolicyFlags$VH() { return _IMAGE_ENCLAVE_CONFIG32$PolicyFlags$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG32$NumberOfImports$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG32$NumberOfImports$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG32$NumberOfImports$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG32$NumberOfImports$VH_ = _IMAGE_ENCLAVE_CONFIG32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfImports"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG32$NumberOfImports$VH() { return _IMAGE_ENCLAVE_CONFIG32$NumberOfImports$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG32$ImportList$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG32$ImportList$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG32$ImportList$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG32$ImportList$VH_ = _IMAGE_ENCLAVE_CONFIG32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImportList"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG32$ImportList$VH() { return _IMAGE_ENCLAVE_CONFIG32$ImportList$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG32$ImportEntrySize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG32$ImportEntrySize$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG32$ImportEntrySize$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG32$ImportEntrySize$VH_ = _IMAGE_ENCLAVE_CONFIG32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImportEntrySize"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG32$ImportEntrySize$VH() { return _IMAGE_ENCLAVE_CONFIG32$ImportEntrySize$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG32$ImageVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG32$ImageVersion$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG32$ImageVersion$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG32$ImageVersion$VH_ = _IMAGE_ENCLAVE_CONFIG32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImageVersion"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG32$ImageVersion$VH() { return _IMAGE_ENCLAVE_CONFIG32$ImageVersion$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG32$SecurityVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG32$SecurityVersion$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG32$SecurityVersion$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG32$SecurityVersion$VH_ = _IMAGE_ENCLAVE_CONFIG32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SecurityVersion"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG32$SecurityVersion$VH() { return _IMAGE_ENCLAVE_CONFIG32$SecurityVersion$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG32$EnclaveSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG32$EnclaveSize$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG32$EnclaveSize$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG32$EnclaveSize$VH_ = _IMAGE_ENCLAVE_CONFIG32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EnclaveSize"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG32$EnclaveSize$VH() { return _IMAGE_ENCLAVE_CONFIG32$EnclaveSize$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG32$NumberOfThreads$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG32$NumberOfThreads$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG32$NumberOfThreads$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG32$NumberOfThreads$VH_ = _IMAGE_ENCLAVE_CONFIG32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfThreads"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG32$NumberOfThreads$VH() { return _IMAGE_ENCLAVE_CONFIG32$NumberOfThreads$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG32$EnclaveFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG32$EnclaveFlags$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG32$EnclaveFlags$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG32$EnclaveFlags$VH_ = _IMAGE_ENCLAVE_CONFIG32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EnclaveFlags"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG32$EnclaveFlags$VH() { return _IMAGE_ENCLAVE_CONFIG32$EnclaveFlags$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        C_LONG.withName("MinimumRequiredConfigSize"),
        C_LONG.withName("PolicyFlags"),
        C_LONG.withName("NumberOfImports"),
        C_LONG.withName("ImportList"),
        C_LONG.withName("ImportEntrySize"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("FamilyID"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("ImageID"),
        C_LONG.withName("ImageVersion"),
        C_LONG.withName("SecurityVersion"),
        C_LONGLONG.withName("EnclaveSize"),
        C_LONG.withName("NumberOfThreads"),
        C_LONG.withName("EnclaveFlags")
    ).withName("_IMAGE_ENCLAVE_CONFIG64");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG64$struct$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG64$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG64$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG64$Size$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG64$Size$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG64$Size$VH_ = _IMAGE_ENCLAVE_CONFIG64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG64$Size$VH() { return _IMAGE_ENCLAVE_CONFIG64$Size$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG64$MinimumRequiredConfigSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG64$MinimumRequiredConfigSize$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG64$MinimumRequiredConfigSize$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG64$MinimumRequiredConfigSize$VH_ = _IMAGE_ENCLAVE_CONFIG64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MinimumRequiredConfigSize"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG64$MinimumRequiredConfigSize$VH() { return _IMAGE_ENCLAVE_CONFIG64$MinimumRequiredConfigSize$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG64$PolicyFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG64$PolicyFlags$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG64$PolicyFlags$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG64$PolicyFlags$VH_ = _IMAGE_ENCLAVE_CONFIG64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PolicyFlags"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG64$PolicyFlags$VH() { return _IMAGE_ENCLAVE_CONFIG64$PolicyFlags$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG64$NumberOfImports$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG64$NumberOfImports$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG64$NumberOfImports$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG64$NumberOfImports$VH_ = _IMAGE_ENCLAVE_CONFIG64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfImports"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG64$NumberOfImports$VH() { return _IMAGE_ENCLAVE_CONFIG64$NumberOfImports$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG64$ImportList$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG64$ImportList$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG64$ImportList$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG64$ImportList$VH_ = _IMAGE_ENCLAVE_CONFIG64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImportList"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG64$ImportList$VH() { return _IMAGE_ENCLAVE_CONFIG64$ImportList$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG64$ImportEntrySize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG64$ImportEntrySize$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG64$ImportEntrySize$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG64$ImportEntrySize$VH_ = _IMAGE_ENCLAVE_CONFIG64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImportEntrySize"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG64$ImportEntrySize$VH() { return _IMAGE_ENCLAVE_CONFIG64$ImportEntrySize$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG64$ImageVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG64$ImageVersion$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG64$ImageVersion$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG64$ImageVersion$VH_ = _IMAGE_ENCLAVE_CONFIG64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImageVersion"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG64$ImageVersion$VH() { return _IMAGE_ENCLAVE_CONFIG64$ImageVersion$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG64$SecurityVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG64$SecurityVersion$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG64$SecurityVersion$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG64$SecurityVersion$VH_ = _IMAGE_ENCLAVE_CONFIG64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SecurityVersion"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG64$SecurityVersion$VH() { return _IMAGE_ENCLAVE_CONFIG64$SecurityVersion$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG64$EnclaveSize$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG64$EnclaveSize$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG64$EnclaveSize$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG64$EnclaveSize$VH_ = _IMAGE_ENCLAVE_CONFIG64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EnclaveSize"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG64$EnclaveSize$VH() { return _IMAGE_ENCLAVE_CONFIG64$EnclaveSize$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG64$NumberOfThreads$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG64$NumberOfThreads$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG64$NumberOfThreads$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG64$NumberOfThreads$VH_ = _IMAGE_ENCLAVE_CONFIG64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfThreads"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG64$NumberOfThreads$VH() { return _IMAGE_ENCLAVE_CONFIG64$NumberOfThreads$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_CONFIG64$EnclaveFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_CONFIG64$EnclaveFlags$LAYOUT() { return _IMAGE_ENCLAVE_CONFIG64$EnclaveFlags$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_CONFIG64$EnclaveFlags$VH_ = _IMAGE_ENCLAVE_CONFIG64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EnclaveFlags"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_CONFIG64$EnclaveFlags$VH() { return _IMAGE_ENCLAVE_CONFIG64$EnclaveFlags$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_IMPORT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("MatchType"),
        C_LONG.withName("MinimumSecurityVersion"),
        MemoryLayout.ofSequence(32, C_CHAR).withName("UniqueOrAuthorID"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("FamilyID"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("ImageID"),
        C_LONG.withName("ImportName"),
        C_LONG.withName("Reserved")
    ).withName("_IMAGE_ENCLAVE_IMPORT");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_IMPORT$struct$LAYOUT() { return _IMAGE_ENCLAVE_IMPORT$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_ENCLAVE_IMPORT$MatchType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_IMPORT$MatchType$LAYOUT() { return _IMAGE_ENCLAVE_IMPORT$MatchType$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_IMPORT$MatchType$VH_ = _IMAGE_ENCLAVE_IMPORT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MatchType"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_IMPORT$MatchType$VH() { return _IMAGE_ENCLAVE_IMPORT$MatchType$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_IMPORT$MinimumSecurityVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_IMPORT$MinimumSecurityVersion$LAYOUT() { return _IMAGE_ENCLAVE_IMPORT$MinimumSecurityVersion$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_IMPORT$MinimumSecurityVersion$VH_ = _IMAGE_ENCLAVE_IMPORT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MinimumSecurityVersion"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_IMPORT$MinimumSecurityVersion$VH() { return _IMAGE_ENCLAVE_IMPORT$MinimumSecurityVersion$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_IMPORT$ImportName$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_IMPORT$ImportName$LAYOUT() { return _IMAGE_ENCLAVE_IMPORT$ImportName$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_IMPORT$ImportName$VH_ = _IMAGE_ENCLAVE_IMPORT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImportName"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_IMPORT$ImportName$VH() { return _IMAGE_ENCLAVE_IMPORT$ImportName$VH_; }

    static final MemoryLayout _IMAGE_ENCLAVE_IMPORT$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ENCLAVE_IMPORT$Reserved$LAYOUT() { return _IMAGE_ENCLAVE_IMPORT$Reserved$LAYOUT_; }

    static final VarHandle _IMAGE_ENCLAVE_IMPORT$Reserved$VH_ = _IMAGE_ENCLAVE_IMPORT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _IMAGE_ENCLAVE_IMPORT$Reserved$VH() { return _IMAGE_ENCLAVE_IMPORT$Reserved$VH_; }

    static final MemoryLayout _IMAGE_DEBUG_DIRECTORY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Characteristics"),
        C_LONG.withName("TimeDateStamp"),
        C_SHORT.withName("MajorVersion"),
        C_SHORT.withName("MinorVersion"),
        C_LONG.withName("Type"),
        C_LONG.withName("SizeOfData"),
        C_LONG.withName("AddressOfRawData"),
        C_LONG.withName("PointerToRawData")
    ).withName("_IMAGE_DEBUG_DIRECTORY");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DEBUG_DIRECTORY$struct$LAYOUT() { return _IMAGE_DEBUG_DIRECTORY$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_DEBUG_DIRECTORY$Characteristics$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DEBUG_DIRECTORY$Characteristics$LAYOUT() { return _IMAGE_DEBUG_DIRECTORY$Characteristics$LAYOUT_; }

    static final VarHandle _IMAGE_DEBUG_DIRECTORY$Characteristics$VH_ = _IMAGE_DEBUG_DIRECTORY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Characteristics"));
    static final java.lang.invoke.VarHandle _IMAGE_DEBUG_DIRECTORY$Characteristics$VH() { return _IMAGE_DEBUG_DIRECTORY$Characteristics$VH_; }

    static final MemoryLayout _IMAGE_DEBUG_DIRECTORY$TimeDateStamp$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DEBUG_DIRECTORY$TimeDateStamp$LAYOUT() { return _IMAGE_DEBUG_DIRECTORY$TimeDateStamp$LAYOUT_; }

    static final VarHandle _IMAGE_DEBUG_DIRECTORY$TimeDateStamp$VH_ = _IMAGE_DEBUG_DIRECTORY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TimeDateStamp"));
    static final java.lang.invoke.VarHandle _IMAGE_DEBUG_DIRECTORY$TimeDateStamp$VH() { return _IMAGE_DEBUG_DIRECTORY$TimeDateStamp$VH_; }

    static final MemoryLayout _IMAGE_DEBUG_DIRECTORY$MajorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DEBUG_DIRECTORY$MajorVersion$LAYOUT() { return _IMAGE_DEBUG_DIRECTORY$MajorVersion$LAYOUT_; }

    static final VarHandle _IMAGE_DEBUG_DIRECTORY$MajorVersion$VH_ = _IMAGE_DEBUG_DIRECTORY$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MajorVersion"));
    static final java.lang.invoke.VarHandle _IMAGE_DEBUG_DIRECTORY$MajorVersion$VH() { return _IMAGE_DEBUG_DIRECTORY$MajorVersion$VH_; }

    static final MemoryLayout _IMAGE_DEBUG_DIRECTORY$MinorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DEBUG_DIRECTORY$MinorVersion$LAYOUT() { return _IMAGE_DEBUG_DIRECTORY$MinorVersion$LAYOUT_; }

    static final VarHandle _IMAGE_DEBUG_DIRECTORY$MinorVersion$VH_ = _IMAGE_DEBUG_DIRECTORY$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MinorVersion"));
    static final java.lang.invoke.VarHandle _IMAGE_DEBUG_DIRECTORY$MinorVersion$VH() { return _IMAGE_DEBUG_DIRECTORY$MinorVersion$VH_; }

    static final MemoryLayout _IMAGE_DEBUG_DIRECTORY$Type$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DEBUG_DIRECTORY$Type$LAYOUT() { return _IMAGE_DEBUG_DIRECTORY$Type$LAYOUT_; }

    static final VarHandle _IMAGE_DEBUG_DIRECTORY$Type$VH_ = _IMAGE_DEBUG_DIRECTORY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    static final java.lang.invoke.VarHandle _IMAGE_DEBUG_DIRECTORY$Type$VH() { return _IMAGE_DEBUG_DIRECTORY$Type$VH_; }

    static final MemoryLayout _IMAGE_DEBUG_DIRECTORY$SizeOfData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DEBUG_DIRECTORY$SizeOfData$LAYOUT() { return _IMAGE_DEBUG_DIRECTORY$SizeOfData$LAYOUT_; }

    static final VarHandle _IMAGE_DEBUG_DIRECTORY$SizeOfData$VH_ = _IMAGE_DEBUG_DIRECTORY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SizeOfData"));
    static final java.lang.invoke.VarHandle _IMAGE_DEBUG_DIRECTORY$SizeOfData$VH() { return _IMAGE_DEBUG_DIRECTORY$SizeOfData$VH_; }

    static final MemoryLayout _IMAGE_DEBUG_DIRECTORY$AddressOfRawData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DEBUG_DIRECTORY$AddressOfRawData$LAYOUT() { return _IMAGE_DEBUG_DIRECTORY$AddressOfRawData$LAYOUT_; }

    static final VarHandle _IMAGE_DEBUG_DIRECTORY$AddressOfRawData$VH_ = _IMAGE_DEBUG_DIRECTORY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AddressOfRawData"));
    static final java.lang.invoke.VarHandle _IMAGE_DEBUG_DIRECTORY$AddressOfRawData$VH() { return _IMAGE_DEBUG_DIRECTORY$AddressOfRawData$VH_; }

    static final MemoryLayout _IMAGE_DEBUG_DIRECTORY$PointerToRawData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DEBUG_DIRECTORY$PointerToRawData$LAYOUT() { return _IMAGE_DEBUG_DIRECTORY$PointerToRawData$LAYOUT_; }

    static final VarHandle _IMAGE_DEBUG_DIRECTORY$PointerToRawData$VH_ = _IMAGE_DEBUG_DIRECTORY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PointerToRawData"));
    static final java.lang.invoke.VarHandle _IMAGE_DEBUG_DIRECTORY$PointerToRawData$VH() { return _IMAGE_DEBUG_DIRECTORY$PointerToRawData$VH_; }

    static final MemoryLayout _IMAGE_COFF_SYMBOLS_HEADER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("NumberOfSymbols"),
        C_LONG.withName("LvaToFirstSymbol"),
        C_LONG.withName("NumberOfLinenumbers"),
        C_LONG.withName("LvaToFirstLinenumber"),
        C_LONG.withName("RvaToFirstByteOfCode"),
        C_LONG.withName("RvaToLastByteOfCode"),
        C_LONG.withName("RvaToFirstByteOfData"),
        C_LONG.withName("RvaToLastByteOfData")
    ).withName("_IMAGE_COFF_SYMBOLS_HEADER");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_COFF_SYMBOLS_HEADER$struct$LAYOUT() { return _IMAGE_COFF_SYMBOLS_HEADER$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_COFF_SYMBOLS_HEADER$NumberOfSymbols$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_COFF_SYMBOLS_HEADER$NumberOfSymbols$LAYOUT() { return _IMAGE_COFF_SYMBOLS_HEADER$NumberOfSymbols$LAYOUT_; }

    static final VarHandle _IMAGE_COFF_SYMBOLS_HEADER$NumberOfSymbols$VH_ = _IMAGE_COFF_SYMBOLS_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfSymbols"));
    static final java.lang.invoke.VarHandle _IMAGE_COFF_SYMBOLS_HEADER$NumberOfSymbols$VH() { return _IMAGE_COFF_SYMBOLS_HEADER$NumberOfSymbols$VH_; }

    static final MemoryLayout _IMAGE_COFF_SYMBOLS_HEADER$LvaToFirstSymbol$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_COFF_SYMBOLS_HEADER$LvaToFirstSymbol$LAYOUT() { return _IMAGE_COFF_SYMBOLS_HEADER$LvaToFirstSymbol$LAYOUT_; }

    static final VarHandle _IMAGE_COFF_SYMBOLS_HEADER$LvaToFirstSymbol$VH_ = _IMAGE_COFF_SYMBOLS_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LvaToFirstSymbol"));
    static final java.lang.invoke.VarHandle _IMAGE_COFF_SYMBOLS_HEADER$LvaToFirstSymbol$VH() { return _IMAGE_COFF_SYMBOLS_HEADER$LvaToFirstSymbol$VH_; }

    static final MemoryLayout _IMAGE_COFF_SYMBOLS_HEADER$NumberOfLinenumbers$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_COFF_SYMBOLS_HEADER$NumberOfLinenumbers$LAYOUT() { return _IMAGE_COFF_SYMBOLS_HEADER$NumberOfLinenumbers$LAYOUT_; }

    static final VarHandle _IMAGE_COFF_SYMBOLS_HEADER$NumberOfLinenumbers$VH_ = _IMAGE_COFF_SYMBOLS_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfLinenumbers"));
    static final java.lang.invoke.VarHandle _IMAGE_COFF_SYMBOLS_HEADER$NumberOfLinenumbers$VH() { return _IMAGE_COFF_SYMBOLS_HEADER$NumberOfLinenumbers$VH_; }

    static final MemoryLayout _IMAGE_COFF_SYMBOLS_HEADER$LvaToFirstLinenumber$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_COFF_SYMBOLS_HEADER$LvaToFirstLinenumber$LAYOUT() { return _IMAGE_COFF_SYMBOLS_HEADER$LvaToFirstLinenumber$LAYOUT_; }

    static final VarHandle _IMAGE_COFF_SYMBOLS_HEADER$LvaToFirstLinenumber$VH_ = _IMAGE_COFF_SYMBOLS_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LvaToFirstLinenumber"));
    static final java.lang.invoke.VarHandle _IMAGE_COFF_SYMBOLS_HEADER$LvaToFirstLinenumber$VH() { return _IMAGE_COFF_SYMBOLS_HEADER$LvaToFirstLinenumber$VH_; }

    static final MemoryLayout _IMAGE_COFF_SYMBOLS_HEADER$RvaToFirstByteOfCode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_COFF_SYMBOLS_HEADER$RvaToFirstByteOfCode$LAYOUT() { return _IMAGE_COFF_SYMBOLS_HEADER$RvaToFirstByteOfCode$LAYOUT_; }

    static final VarHandle _IMAGE_COFF_SYMBOLS_HEADER$RvaToFirstByteOfCode$VH_ = _IMAGE_COFF_SYMBOLS_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RvaToFirstByteOfCode"));
    static final java.lang.invoke.VarHandle _IMAGE_COFF_SYMBOLS_HEADER$RvaToFirstByteOfCode$VH() { return _IMAGE_COFF_SYMBOLS_HEADER$RvaToFirstByteOfCode$VH_; }

    static final MemoryLayout _IMAGE_COFF_SYMBOLS_HEADER$RvaToLastByteOfCode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_COFF_SYMBOLS_HEADER$RvaToLastByteOfCode$LAYOUT() { return _IMAGE_COFF_SYMBOLS_HEADER$RvaToLastByteOfCode$LAYOUT_; }

    static final VarHandle _IMAGE_COFF_SYMBOLS_HEADER$RvaToLastByteOfCode$VH_ = _IMAGE_COFF_SYMBOLS_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RvaToLastByteOfCode"));
    static final java.lang.invoke.VarHandle _IMAGE_COFF_SYMBOLS_HEADER$RvaToLastByteOfCode$VH() { return _IMAGE_COFF_SYMBOLS_HEADER$RvaToLastByteOfCode$VH_; }

    static final MemoryLayout _IMAGE_COFF_SYMBOLS_HEADER$RvaToFirstByteOfData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_COFF_SYMBOLS_HEADER$RvaToFirstByteOfData$LAYOUT() { return _IMAGE_COFF_SYMBOLS_HEADER$RvaToFirstByteOfData$LAYOUT_; }

    static final VarHandle _IMAGE_COFF_SYMBOLS_HEADER$RvaToFirstByteOfData$VH_ = _IMAGE_COFF_SYMBOLS_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RvaToFirstByteOfData"));
    static final java.lang.invoke.VarHandle _IMAGE_COFF_SYMBOLS_HEADER$RvaToFirstByteOfData$VH() { return _IMAGE_COFF_SYMBOLS_HEADER$RvaToFirstByteOfData$VH_; }

    static final MemoryLayout _IMAGE_COFF_SYMBOLS_HEADER$RvaToLastByteOfData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_COFF_SYMBOLS_HEADER$RvaToLastByteOfData$LAYOUT() { return _IMAGE_COFF_SYMBOLS_HEADER$RvaToLastByteOfData$LAYOUT_; }

    static final VarHandle _IMAGE_COFF_SYMBOLS_HEADER$RvaToLastByteOfData$VH_ = _IMAGE_COFF_SYMBOLS_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RvaToLastByteOfData"));
    static final java.lang.invoke.VarHandle _IMAGE_COFF_SYMBOLS_HEADER$RvaToLastByteOfData$VH() { return _IMAGE_COFF_SYMBOLS_HEADER$RvaToLastByteOfData$VH_; }

    static final MemoryLayout _FPO_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ulOffStart"),
        C_LONG.withName("cbProcSize"),
        C_LONG.withName("cdwLocals"),
        C_SHORT.withName("cdwParams"),
        C_SHORT
    ).withName("_FPO_DATA");
    static final jdk.incubator.foreign.MemoryLayout _FPO_DATA$struct$LAYOUT() { return _FPO_DATA$struct$LAYOUT_; }

    static final MemoryLayout _FPO_DATA$ulOffStart$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FPO_DATA$ulOffStart$LAYOUT() { return _FPO_DATA$ulOffStart$LAYOUT_; }

    static final VarHandle _FPO_DATA$ulOffStart$VH_ = _FPO_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulOffStart"));
    static final java.lang.invoke.VarHandle _FPO_DATA$ulOffStart$VH() { return _FPO_DATA$ulOffStart$VH_; }

    static final MemoryLayout _FPO_DATA$cbProcSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FPO_DATA$cbProcSize$LAYOUT() { return _FPO_DATA$cbProcSize$LAYOUT_; }

    static final VarHandle _FPO_DATA$cbProcSize$VH_ = _FPO_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbProcSize"));
    static final java.lang.invoke.VarHandle _FPO_DATA$cbProcSize$VH() { return _FPO_DATA$cbProcSize$VH_; }

    static final MemoryLayout _FPO_DATA$cdwLocals$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FPO_DATA$cdwLocals$LAYOUT() { return _FPO_DATA$cdwLocals$LAYOUT_; }

    static final VarHandle _FPO_DATA$cdwLocals$VH_ = _FPO_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cdwLocals"));
    static final java.lang.invoke.VarHandle _FPO_DATA$cdwLocals$VH() { return _FPO_DATA$cdwLocals$VH_; }

    static final MemoryLayout _FPO_DATA$cdwParams$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _FPO_DATA$cdwParams$LAYOUT() { return _FPO_DATA$cdwParams$LAYOUT_; }

    static final VarHandle _FPO_DATA$cdwParams$VH_ = _FPO_DATA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cdwParams"));
    static final java.lang.invoke.VarHandle _FPO_DATA$cdwParams$VH() { return _FPO_DATA$cdwParams$VH_; }

    static final MemoryLayout _IMAGE_DEBUG_MISC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("DataType"),
        C_LONG.withName("Length"),
        C_CHAR.withName("Unicode"),
        MemoryLayout.ofSequence(3, C_CHAR).withName("Reserved"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("Data"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("_IMAGE_DEBUG_MISC");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DEBUG_MISC$struct$LAYOUT() { return _IMAGE_DEBUG_MISC$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_DEBUG_MISC$DataType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DEBUG_MISC$DataType$LAYOUT() { return _IMAGE_DEBUG_MISC$DataType$LAYOUT_; }

    static final VarHandle _IMAGE_DEBUG_MISC$DataType$VH_ = _IMAGE_DEBUG_MISC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DataType"));
    static final java.lang.invoke.VarHandle _IMAGE_DEBUG_MISC$DataType$VH() { return _IMAGE_DEBUG_MISC$DataType$VH_; }

    static final MemoryLayout _IMAGE_DEBUG_MISC$Length$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DEBUG_MISC$Length$LAYOUT() { return _IMAGE_DEBUG_MISC$Length$LAYOUT_; }

    static final VarHandle _IMAGE_DEBUG_MISC$Length$VH_ = _IMAGE_DEBUG_MISC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Length"));
    static final java.lang.invoke.VarHandle _IMAGE_DEBUG_MISC$Length$VH() { return _IMAGE_DEBUG_MISC$Length$VH_; }

    static final MemoryLayout _IMAGE_DEBUG_MISC$Unicode$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DEBUG_MISC$Unicode$LAYOUT() { return _IMAGE_DEBUG_MISC$Unicode$LAYOUT_; }

    static final VarHandle _IMAGE_DEBUG_MISC$Unicode$VH_ = _IMAGE_DEBUG_MISC$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Unicode"));
    static final java.lang.invoke.VarHandle _IMAGE_DEBUG_MISC$Unicode$VH() { return _IMAGE_DEBUG_MISC$Unicode$VH_; }

    static final MemoryLayout _IMAGE_FUNCTION_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("StartingAddress"),
        C_LONG.withName("EndingAddress"),
        C_LONG.withName("EndOfPrologue")
    ).withName("_IMAGE_FUNCTION_ENTRY");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_FUNCTION_ENTRY$struct$LAYOUT() { return _IMAGE_FUNCTION_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_FUNCTION_ENTRY$StartingAddress$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_FUNCTION_ENTRY$StartingAddress$LAYOUT() { return _IMAGE_FUNCTION_ENTRY$StartingAddress$LAYOUT_; }

    static final VarHandle _IMAGE_FUNCTION_ENTRY$StartingAddress$VH_ = _IMAGE_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StartingAddress"));
    static final java.lang.invoke.VarHandle _IMAGE_FUNCTION_ENTRY$StartingAddress$VH() { return _IMAGE_FUNCTION_ENTRY$StartingAddress$VH_; }

    static final MemoryLayout _IMAGE_FUNCTION_ENTRY$EndingAddress$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_FUNCTION_ENTRY$EndingAddress$LAYOUT() { return _IMAGE_FUNCTION_ENTRY$EndingAddress$LAYOUT_; }

    static final VarHandle _IMAGE_FUNCTION_ENTRY$EndingAddress$VH_ = _IMAGE_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EndingAddress"));
    static final java.lang.invoke.VarHandle _IMAGE_FUNCTION_ENTRY$EndingAddress$VH() { return _IMAGE_FUNCTION_ENTRY$EndingAddress$VH_; }

    static final MemoryLayout _IMAGE_FUNCTION_ENTRY$EndOfPrologue$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_FUNCTION_ENTRY$EndOfPrologue$LAYOUT() { return _IMAGE_FUNCTION_ENTRY$EndOfPrologue$LAYOUT_; }

    static final VarHandle _IMAGE_FUNCTION_ENTRY$EndOfPrologue$VH_ = _IMAGE_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EndOfPrologue"));
    static final java.lang.invoke.VarHandle _IMAGE_FUNCTION_ENTRY$EndOfPrologue$VH() { return _IMAGE_FUNCTION_ENTRY$EndOfPrologue$VH_; }

    static final MemoryLayout _IMAGE_FUNCTION_ENTRY64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("StartingAddress"),
        C_LONGLONG.withName("EndingAddress"),
        C_LONGLONG.withName("EndOfPrologue"),
        C_LONGLONG.withName("UnwindInfoAddress")
    ).withName("_IMAGE_FUNCTION_ENTRY64");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_FUNCTION_ENTRY64$struct$LAYOUT() { return _IMAGE_FUNCTION_ENTRY64$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_FUNCTION_ENTRY64$StartingAddress$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_FUNCTION_ENTRY64$StartingAddress$LAYOUT() { return _IMAGE_FUNCTION_ENTRY64$StartingAddress$LAYOUT_; }

    static final VarHandle _IMAGE_FUNCTION_ENTRY64$StartingAddress$VH_ = _IMAGE_FUNCTION_ENTRY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("StartingAddress"));
    static final java.lang.invoke.VarHandle _IMAGE_FUNCTION_ENTRY64$StartingAddress$VH() { return _IMAGE_FUNCTION_ENTRY64$StartingAddress$VH_; }

    static final MemoryLayout _IMAGE_FUNCTION_ENTRY64$EndingAddress$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_FUNCTION_ENTRY64$EndingAddress$LAYOUT() { return _IMAGE_FUNCTION_ENTRY64$EndingAddress$LAYOUT_; }

    static final VarHandle _IMAGE_FUNCTION_ENTRY64$EndingAddress$VH_ = _IMAGE_FUNCTION_ENTRY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EndingAddress"));
    static final java.lang.invoke.VarHandle _IMAGE_FUNCTION_ENTRY64$EndingAddress$VH() { return _IMAGE_FUNCTION_ENTRY64$EndingAddress$VH_; }

    static final MemoryLayout _IMAGE_FUNCTION_ENTRY64$EndOfPrologue$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_FUNCTION_ENTRY64$EndOfPrologue$LAYOUT() { return _IMAGE_FUNCTION_ENTRY64$EndOfPrologue$LAYOUT_; }

    static final VarHandle _IMAGE_FUNCTION_ENTRY64$EndOfPrologue$VH_ = _IMAGE_FUNCTION_ENTRY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EndOfPrologue"));
    static final java.lang.invoke.VarHandle _IMAGE_FUNCTION_ENTRY64$EndOfPrologue$VH() { return _IMAGE_FUNCTION_ENTRY64$EndOfPrologue$VH_; }

    static final MemoryLayout _IMAGE_FUNCTION_ENTRY64$UnwindInfoAddress$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_FUNCTION_ENTRY64$UnwindInfoAddress$LAYOUT() { return _IMAGE_FUNCTION_ENTRY64$UnwindInfoAddress$LAYOUT_; }

    static final VarHandle _IMAGE_FUNCTION_ENTRY64$UnwindInfoAddress$VH_ = _IMAGE_FUNCTION_ENTRY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("UnwindInfoAddress"));
    static final java.lang.invoke.VarHandle _IMAGE_FUNCTION_ENTRY64$UnwindInfoAddress$VH() { return _IMAGE_FUNCTION_ENTRY64$UnwindInfoAddress$VH_; }

    static final MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("Signature"),
        C_SHORT.withName("Flags"),
        C_SHORT.withName("Machine"),
        C_SHORT.withName("Characteristics"),
        C_LONG.withName("TimeDateStamp"),
        C_LONG.withName("CheckSum"),
        C_LONG.withName("ImageBase"),
        C_LONG.withName("SizeOfImage"),
        C_LONG.withName("NumberOfSections"),
        C_LONG.withName("ExportedNamesSize"),
        C_LONG.withName("DebugDirectorySize"),
        C_LONG.withName("SectionAlignment"),
        MemoryLayout.ofSequence(2, C_LONG).withName("Reserved")
    ).withName("_IMAGE_SEPARATE_DEBUG_HEADER");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$struct$LAYOUT() { return _IMAGE_SEPARATE_DEBUG_HEADER$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$Signature$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$Signature$LAYOUT() { return _IMAGE_SEPARATE_DEBUG_HEADER$Signature$LAYOUT_; }

    static final VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$Signature$VH_ = _IMAGE_SEPARATE_DEBUG_HEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Signature"));
    static final java.lang.invoke.VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$Signature$VH() { return _IMAGE_SEPARATE_DEBUG_HEADER$Signature$VH_; }

    static final MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$Flags$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$Flags$LAYOUT() { return _IMAGE_SEPARATE_DEBUG_HEADER$Flags$LAYOUT_; }

    static final VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$Flags$VH_ = _IMAGE_SEPARATE_DEBUG_HEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$Flags$VH() { return _IMAGE_SEPARATE_DEBUG_HEADER$Flags$VH_; }

    static final MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$Machine$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$Machine$LAYOUT() { return _IMAGE_SEPARATE_DEBUG_HEADER$Machine$LAYOUT_; }

    static final VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$Machine$VH_ = _IMAGE_SEPARATE_DEBUG_HEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Machine"));
    static final java.lang.invoke.VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$Machine$VH() { return _IMAGE_SEPARATE_DEBUG_HEADER$Machine$VH_; }

    static final MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$Characteristics$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$Characteristics$LAYOUT() { return _IMAGE_SEPARATE_DEBUG_HEADER$Characteristics$LAYOUT_; }

    static final VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$Characteristics$VH_ = _IMAGE_SEPARATE_DEBUG_HEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Characteristics"));
    static final java.lang.invoke.VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$Characteristics$VH() { return _IMAGE_SEPARATE_DEBUG_HEADER$Characteristics$VH_; }

    static final MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$TimeDateStamp$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$TimeDateStamp$LAYOUT() { return _IMAGE_SEPARATE_DEBUG_HEADER$TimeDateStamp$LAYOUT_; }

    static final VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$TimeDateStamp$VH_ = _IMAGE_SEPARATE_DEBUG_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TimeDateStamp"));
    static final java.lang.invoke.VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$TimeDateStamp$VH() { return _IMAGE_SEPARATE_DEBUG_HEADER$TimeDateStamp$VH_; }

    static final MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$CheckSum$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$CheckSum$LAYOUT() { return _IMAGE_SEPARATE_DEBUG_HEADER$CheckSum$LAYOUT_; }

    static final VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$CheckSum$VH_ = _IMAGE_SEPARATE_DEBUG_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CheckSum"));
    static final java.lang.invoke.VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$CheckSum$VH() { return _IMAGE_SEPARATE_DEBUG_HEADER$CheckSum$VH_; }

    static final MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$ImageBase$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$ImageBase$LAYOUT() { return _IMAGE_SEPARATE_DEBUG_HEADER$ImageBase$LAYOUT_; }

    static final VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$ImageBase$VH_ = _IMAGE_SEPARATE_DEBUG_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImageBase"));
    static final java.lang.invoke.VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$ImageBase$VH() { return _IMAGE_SEPARATE_DEBUG_HEADER$ImageBase$VH_; }

    static final MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$SizeOfImage$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$SizeOfImage$LAYOUT() { return _IMAGE_SEPARATE_DEBUG_HEADER$SizeOfImage$LAYOUT_; }

    static final VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$SizeOfImage$VH_ = _IMAGE_SEPARATE_DEBUG_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SizeOfImage"));
    static final java.lang.invoke.VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$SizeOfImage$VH() { return _IMAGE_SEPARATE_DEBUG_HEADER$SizeOfImage$VH_; }

    static final MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$NumberOfSections$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$NumberOfSections$LAYOUT() { return _IMAGE_SEPARATE_DEBUG_HEADER$NumberOfSections$LAYOUT_; }

    static final VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$NumberOfSections$VH_ = _IMAGE_SEPARATE_DEBUG_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfSections"));
    static final java.lang.invoke.VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$NumberOfSections$VH() { return _IMAGE_SEPARATE_DEBUG_HEADER$NumberOfSections$VH_; }

    static final MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$ExportedNamesSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$ExportedNamesSize$LAYOUT() { return _IMAGE_SEPARATE_DEBUG_HEADER$ExportedNamesSize$LAYOUT_; }

    static final VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$ExportedNamesSize$VH_ = _IMAGE_SEPARATE_DEBUG_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ExportedNamesSize"));
    static final java.lang.invoke.VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$ExportedNamesSize$VH() { return _IMAGE_SEPARATE_DEBUG_HEADER$ExportedNamesSize$VH_; }

    static final MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$DebugDirectorySize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$DebugDirectorySize$LAYOUT() { return _IMAGE_SEPARATE_DEBUG_HEADER$DebugDirectorySize$LAYOUT_; }

    static final VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$DebugDirectorySize$VH_ = _IMAGE_SEPARATE_DEBUG_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DebugDirectorySize"));
    static final java.lang.invoke.VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$DebugDirectorySize$VH() { return _IMAGE_SEPARATE_DEBUG_HEADER$DebugDirectorySize$VH_; }

    static final MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$SectionAlignment$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_SEPARATE_DEBUG_HEADER$SectionAlignment$LAYOUT() { return _IMAGE_SEPARATE_DEBUG_HEADER$SectionAlignment$LAYOUT_; }

    static final VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$SectionAlignment$VH_ = _IMAGE_SEPARATE_DEBUG_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SectionAlignment"));
    static final java.lang.invoke.VarHandle _IMAGE_SEPARATE_DEBUG_HEADER$SectionAlignment$VH() { return _IMAGE_SEPARATE_DEBUG_HEADER$SectionAlignment$VH_; }

    static final MemoryLayout _NON_PAGED_DEBUG_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("Signature"),
        C_SHORT.withName("Flags"),
        C_LONG.withName("Size"),
        C_SHORT.withName("Machine"),
        C_SHORT.withName("Characteristics"),
        C_LONG.withName("TimeDateStamp"),
        C_LONG.withName("CheckSum"),
        C_LONG.withName("SizeOfImage"),
        C_LONGLONG.withName("ImageBase")
    ).withName("_NON_PAGED_DEBUG_INFO");
    static final jdk.incubator.foreign.MemoryLayout _NON_PAGED_DEBUG_INFO$struct$LAYOUT() { return _NON_PAGED_DEBUG_INFO$struct$LAYOUT_; }

    static final MemoryLayout _NON_PAGED_DEBUG_INFO$Signature$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _NON_PAGED_DEBUG_INFO$Signature$LAYOUT() { return _NON_PAGED_DEBUG_INFO$Signature$LAYOUT_; }

    static final VarHandle _NON_PAGED_DEBUG_INFO$Signature$VH_ = _NON_PAGED_DEBUG_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Signature"));
    static final java.lang.invoke.VarHandle _NON_PAGED_DEBUG_INFO$Signature$VH() { return _NON_PAGED_DEBUG_INFO$Signature$VH_; }

    static final MemoryLayout _NON_PAGED_DEBUG_INFO$Flags$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _NON_PAGED_DEBUG_INFO$Flags$LAYOUT() { return _NON_PAGED_DEBUG_INFO$Flags$LAYOUT_; }

    static final VarHandle _NON_PAGED_DEBUG_INFO$Flags$VH_ = _NON_PAGED_DEBUG_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _NON_PAGED_DEBUG_INFO$Flags$VH() { return _NON_PAGED_DEBUG_INFO$Flags$VH_; }

    static final MemoryLayout _NON_PAGED_DEBUG_INFO$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NON_PAGED_DEBUG_INFO$Size$LAYOUT() { return _NON_PAGED_DEBUG_INFO$Size$LAYOUT_; }

    static final VarHandle _NON_PAGED_DEBUG_INFO$Size$VH_ = _NON_PAGED_DEBUG_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _NON_PAGED_DEBUG_INFO$Size$VH() { return _NON_PAGED_DEBUG_INFO$Size$VH_; }

    static final MemoryLayout _NON_PAGED_DEBUG_INFO$Machine$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _NON_PAGED_DEBUG_INFO$Machine$LAYOUT() { return _NON_PAGED_DEBUG_INFO$Machine$LAYOUT_; }

    static final VarHandle _NON_PAGED_DEBUG_INFO$Machine$VH_ = _NON_PAGED_DEBUG_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Machine"));
    static final java.lang.invoke.VarHandle _NON_PAGED_DEBUG_INFO$Machine$VH() { return _NON_PAGED_DEBUG_INFO$Machine$VH_; }

    static final MemoryLayout _NON_PAGED_DEBUG_INFO$Characteristics$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _NON_PAGED_DEBUG_INFO$Characteristics$LAYOUT() { return _NON_PAGED_DEBUG_INFO$Characteristics$LAYOUT_; }

    static final VarHandle _NON_PAGED_DEBUG_INFO$Characteristics$VH_ = _NON_PAGED_DEBUG_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Characteristics"));
    static final java.lang.invoke.VarHandle _NON_PAGED_DEBUG_INFO$Characteristics$VH() { return _NON_PAGED_DEBUG_INFO$Characteristics$VH_; }

    static final MemoryLayout _NON_PAGED_DEBUG_INFO$TimeDateStamp$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NON_PAGED_DEBUG_INFO$TimeDateStamp$LAYOUT() { return _NON_PAGED_DEBUG_INFO$TimeDateStamp$LAYOUT_; }

    static final VarHandle _NON_PAGED_DEBUG_INFO$TimeDateStamp$VH_ = _NON_PAGED_DEBUG_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TimeDateStamp"));
    static final java.lang.invoke.VarHandle _NON_PAGED_DEBUG_INFO$TimeDateStamp$VH() { return _NON_PAGED_DEBUG_INFO$TimeDateStamp$VH_; }

    static final MemoryLayout _NON_PAGED_DEBUG_INFO$CheckSum$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NON_PAGED_DEBUG_INFO$CheckSum$LAYOUT() { return _NON_PAGED_DEBUG_INFO$CheckSum$LAYOUT_; }

    static final VarHandle _NON_PAGED_DEBUG_INFO$CheckSum$VH_ = _NON_PAGED_DEBUG_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CheckSum"));
    static final java.lang.invoke.VarHandle _NON_PAGED_DEBUG_INFO$CheckSum$VH() { return _NON_PAGED_DEBUG_INFO$CheckSum$VH_; }

    static final MemoryLayout _NON_PAGED_DEBUG_INFO$SizeOfImage$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NON_PAGED_DEBUG_INFO$SizeOfImage$LAYOUT() { return _NON_PAGED_DEBUG_INFO$SizeOfImage$LAYOUT_; }

    static final VarHandle _NON_PAGED_DEBUG_INFO$SizeOfImage$VH_ = _NON_PAGED_DEBUG_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SizeOfImage"));
    static final java.lang.invoke.VarHandle _NON_PAGED_DEBUG_INFO$SizeOfImage$VH() { return _NON_PAGED_DEBUG_INFO$SizeOfImage$VH_; }

    static final MemoryLayout _NON_PAGED_DEBUG_INFO$ImageBase$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _NON_PAGED_DEBUG_INFO$ImageBase$LAYOUT() { return _NON_PAGED_DEBUG_INFO$ImageBase$LAYOUT_; }

    static final VarHandle _NON_PAGED_DEBUG_INFO$ImageBase$VH_ = _NON_PAGED_DEBUG_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ImageBase"));
    static final java.lang.invoke.VarHandle _NON_PAGED_DEBUG_INFO$ImageBase$VH() { return _NON_PAGED_DEBUG_INFO$ImageBase$VH_; }

}

