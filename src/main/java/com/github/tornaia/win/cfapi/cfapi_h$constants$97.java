// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$97 extends cfapi_h$constants$96 {

    /* package-private */ cfapi_h$constants$97() {}
    static final MemoryLayout tagFINDREPLACEA$hInstance$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEA$hInstance$LAYOUT() { return tagFINDREPLACEA$hInstance$LAYOUT_; }

    static final VarHandle tagFINDREPLACEA$hInstance$VH_ = MemoryHandles.asAddressVarHandle(tagFINDREPLACEA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInstance")));
    static final java.lang.invoke.VarHandle tagFINDREPLACEA$hInstance$VH() { return tagFINDREPLACEA$hInstance$VH_; }

    static final MemoryLayout tagFINDREPLACEA$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEA$Flags$LAYOUT() { return tagFINDREPLACEA$Flags$LAYOUT_; }

    static final VarHandle tagFINDREPLACEA$Flags$VH_ = tagFINDREPLACEA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle tagFINDREPLACEA$Flags$VH() { return tagFINDREPLACEA$Flags$VH_; }

    static final MemoryLayout tagFINDREPLACEA$lpstrFindWhat$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEA$lpstrFindWhat$LAYOUT() { return tagFINDREPLACEA$lpstrFindWhat$LAYOUT_; }

    static final VarHandle tagFINDREPLACEA$lpstrFindWhat$VH_ = MemoryHandles.asAddressVarHandle(tagFINDREPLACEA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrFindWhat")));
    static final java.lang.invoke.VarHandle tagFINDREPLACEA$lpstrFindWhat$VH() { return tagFINDREPLACEA$lpstrFindWhat$VH_; }

    static final MemoryLayout tagFINDREPLACEA$lpstrReplaceWith$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEA$lpstrReplaceWith$LAYOUT() { return tagFINDREPLACEA$lpstrReplaceWith$LAYOUT_; }

    static final VarHandle tagFINDREPLACEA$lpstrReplaceWith$VH_ = MemoryHandles.asAddressVarHandle(tagFINDREPLACEA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrReplaceWith")));
    static final java.lang.invoke.VarHandle tagFINDREPLACEA$lpstrReplaceWith$VH() { return tagFINDREPLACEA$lpstrReplaceWith$VH_; }

    static final MemoryLayout tagFINDREPLACEA$wFindWhatLen$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEA$wFindWhatLen$LAYOUT() { return tagFINDREPLACEA$wFindWhatLen$LAYOUT_; }

    static final VarHandle tagFINDREPLACEA$wFindWhatLen$VH_ = tagFINDREPLACEA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wFindWhatLen"));
    static final java.lang.invoke.VarHandle tagFINDREPLACEA$wFindWhatLen$VH() { return tagFINDREPLACEA$wFindWhatLen$VH_; }

    static final MemoryLayout tagFINDREPLACEA$wReplaceWithLen$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEA$wReplaceWithLen$LAYOUT() { return tagFINDREPLACEA$wReplaceWithLen$LAYOUT_; }

    static final VarHandle tagFINDREPLACEA$wReplaceWithLen$VH_ = tagFINDREPLACEA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReplaceWithLen"));
    static final java.lang.invoke.VarHandle tagFINDREPLACEA$wReplaceWithLen$VH() { return tagFINDREPLACEA$wReplaceWithLen$VH_; }

    static final MemoryLayout tagFINDREPLACEA$lCustData$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEA$lCustData$LAYOUT() { return tagFINDREPLACEA$lCustData$LAYOUT_; }

    static final VarHandle tagFINDREPLACEA$lCustData$VH_ = tagFINDREPLACEA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lCustData"));
    static final java.lang.invoke.VarHandle tagFINDREPLACEA$lCustData$VH() { return tagFINDREPLACEA$lCustData$VH_; }

    static final MemoryLayout tagFINDREPLACEA$lpfnHook$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEA$lpfnHook$LAYOUT() { return tagFINDREPLACEA$lpfnHook$LAYOUT_; }

    static final VarHandle tagFINDREPLACEA$lpfnHook$VH_ = MemoryHandles.asAddressVarHandle(tagFINDREPLACEA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnHook")));
    static final java.lang.invoke.VarHandle tagFINDREPLACEA$lpfnHook$VH() { return tagFINDREPLACEA$lpfnHook$VH_; }

    static final MemoryLayout tagFINDREPLACEA$lpTemplateName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEA$lpTemplateName$LAYOUT() { return tagFINDREPLACEA$lpTemplateName$LAYOUT_; }

    static final VarHandle tagFINDREPLACEA$lpTemplateName$VH_ = MemoryHandles.asAddressVarHandle(tagFINDREPLACEA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpTemplateName")));
    static final java.lang.invoke.VarHandle tagFINDREPLACEA$lpTemplateName$VH() { return tagFINDREPLACEA$lpTemplateName$VH_; }

    static final MemoryLayout tagFINDREPLACEW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("lStructSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hwndOwner"),
        C_POINTER.withName("hInstance"),
        C_LONG.withName("Flags"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpstrFindWhat"),
        C_POINTER.withName("lpstrReplaceWith"),
        C_SHORT.withName("wFindWhatLen"),
        C_SHORT.withName("wReplaceWithLen"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("lCustData"),
        C_POINTER.withName("lpfnHook"),
        C_POINTER.withName("lpTemplateName")
    ).withName("tagFINDREPLACEW");
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEW$struct$LAYOUT() { return tagFINDREPLACEW$struct$LAYOUT_; }

    static final MemoryLayout tagFINDREPLACEW$lStructSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEW$lStructSize$LAYOUT() { return tagFINDREPLACEW$lStructSize$LAYOUT_; }

    static final VarHandle tagFINDREPLACEW$lStructSize$VH_ = tagFINDREPLACEW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lStructSize"));
    static final java.lang.invoke.VarHandle tagFINDREPLACEW$lStructSize$VH() { return tagFINDREPLACEW$lStructSize$VH_; }

    static final MemoryLayout tagFINDREPLACEW$hwndOwner$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEW$hwndOwner$LAYOUT() { return tagFINDREPLACEW$hwndOwner$LAYOUT_; }

    static final VarHandle tagFINDREPLACEW$hwndOwner$VH_ = MemoryHandles.asAddressVarHandle(tagFINDREPLACEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndOwner")));
    static final java.lang.invoke.VarHandle tagFINDREPLACEW$hwndOwner$VH() { return tagFINDREPLACEW$hwndOwner$VH_; }

    static final MemoryLayout tagFINDREPLACEW$hInstance$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEW$hInstance$LAYOUT() { return tagFINDREPLACEW$hInstance$LAYOUT_; }

    static final VarHandle tagFINDREPLACEW$hInstance$VH_ = MemoryHandles.asAddressVarHandle(tagFINDREPLACEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInstance")));
    static final java.lang.invoke.VarHandle tagFINDREPLACEW$hInstance$VH() { return tagFINDREPLACEW$hInstance$VH_; }

    static final MemoryLayout tagFINDREPLACEW$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEW$Flags$LAYOUT() { return tagFINDREPLACEW$Flags$LAYOUT_; }

    static final VarHandle tagFINDREPLACEW$Flags$VH_ = tagFINDREPLACEW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle tagFINDREPLACEW$Flags$VH() { return tagFINDREPLACEW$Flags$VH_; }

    static final MemoryLayout tagFINDREPLACEW$lpstrFindWhat$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEW$lpstrFindWhat$LAYOUT() { return tagFINDREPLACEW$lpstrFindWhat$LAYOUT_; }

    static final VarHandle tagFINDREPLACEW$lpstrFindWhat$VH_ = MemoryHandles.asAddressVarHandle(tagFINDREPLACEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrFindWhat")));
    static final java.lang.invoke.VarHandle tagFINDREPLACEW$lpstrFindWhat$VH() { return tagFINDREPLACEW$lpstrFindWhat$VH_; }

    static final MemoryLayout tagFINDREPLACEW$lpstrReplaceWith$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEW$lpstrReplaceWith$LAYOUT() { return tagFINDREPLACEW$lpstrReplaceWith$LAYOUT_; }

    static final VarHandle tagFINDREPLACEW$lpstrReplaceWith$VH_ = MemoryHandles.asAddressVarHandle(tagFINDREPLACEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrReplaceWith")));
    static final java.lang.invoke.VarHandle tagFINDREPLACEW$lpstrReplaceWith$VH() { return tagFINDREPLACEW$lpstrReplaceWith$VH_; }

    static final MemoryLayout tagFINDREPLACEW$wFindWhatLen$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEW$wFindWhatLen$LAYOUT() { return tagFINDREPLACEW$wFindWhatLen$LAYOUT_; }

    static final VarHandle tagFINDREPLACEW$wFindWhatLen$VH_ = tagFINDREPLACEW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wFindWhatLen"));
    static final java.lang.invoke.VarHandle tagFINDREPLACEW$wFindWhatLen$VH() { return tagFINDREPLACEW$wFindWhatLen$VH_; }

    static final MemoryLayout tagFINDREPLACEW$wReplaceWithLen$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEW$wReplaceWithLen$LAYOUT() { return tagFINDREPLACEW$wReplaceWithLen$LAYOUT_; }

    static final VarHandle tagFINDREPLACEW$wReplaceWithLen$VH_ = tagFINDREPLACEW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReplaceWithLen"));
    static final java.lang.invoke.VarHandle tagFINDREPLACEW$wReplaceWithLen$VH() { return tagFINDREPLACEW$wReplaceWithLen$VH_; }

    static final MemoryLayout tagFINDREPLACEW$lCustData$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEW$lCustData$LAYOUT() { return tagFINDREPLACEW$lCustData$LAYOUT_; }

    static final VarHandle tagFINDREPLACEW$lCustData$VH_ = tagFINDREPLACEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lCustData"));
    static final java.lang.invoke.VarHandle tagFINDREPLACEW$lCustData$VH() { return tagFINDREPLACEW$lCustData$VH_; }

    static final MemoryLayout tagFINDREPLACEW$lpfnHook$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEW$lpfnHook$LAYOUT() { return tagFINDREPLACEW$lpfnHook$LAYOUT_; }

    static final VarHandle tagFINDREPLACEW$lpfnHook$VH_ = MemoryHandles.asAddressVarHandle(tagFINDREPLACEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnHook")));
    static final java.lang.invoke.VarHandle tagFINDREPLACEW$lpfnHook$VH() { return tagFINDREPLACEW$lpfnHook$VH_; }

    static final MemoryLayout tagFINDREPLACEW$lpTemplateName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagFINDREPLACEW$lpTemplateName$LAYOUT() { return tagFINDREPLACEW$lpTemplateName$LAYOUT_; }

    static final VarHandle tagFINDREPLACEW$lpTemplateName$VH_ = MemoryHandles.asAddressVarHandle(tagFINDREPLACEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpTemplateName")));
    static final java.lang.invoke.VarHandle tagFINDREPLACEW$lpTemplateName$VH() { return tagFINDREPLACEW$lpTemplateName$VH_; }

    static final FunctionDescriptor FindTextA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FindTextA$FUNC() { return FindTextA$FUNC_; }

    static final MethodHandle FindTextA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FindTextA",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        FindTextA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FindTextA$MH() { return FindTextA$MH_; }

    static final FunctionDescriptor FindTextW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FindTextW$FUNC() { return FindTextW$FUNC_; }

    static final MethodHandle FindTextW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FindTextW",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        FindTextW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FindTextW$MH() { return FindTextW$MH_; }

    static final FunctionDescriptor ReplaceTextA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReplaceTextA$FUNC() { return ReplaceTextA$FUNC_; }

    static final MethodHandle ReplaceTextA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReplaceTextA",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        ReplaceTextA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReplaceTextA$MH() { return ReplaceTextA$MH_; }

    static final FunctionDescriptor ReplaceTextW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReplaceTextW$FUNC() { return ReplaceTextW$FUNC_; }

    static final MethodHandle ReplaceTextW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReplaceTextW",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        ReplaceTextW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReplaceTextW$MH() { return ReplaceTextW$MH_; }

    static final MemoryLayout tagCHOOSEFONTA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("lStructSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hwndOwner"),
        C_POINTER.withName("hDC"),
        C_POINTER.withName("lpLogFont"),
        C_INT.withName("iPointSize"),
        C_LONG.withName("Flags"),
        C_LONG.withName("rgbColors"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("lCustData"),
        C_POINTER.withName("lpfnHook"),
        C_POINTER.withName("lpTemplateName"),
        C_POINTER.withName("hInstance"),
        C_POINTER.withName("lpszStyle"),
        C_SHORT.withName("nFontType"),
        C_SHORT.withName("___MISSING_ALIGNMENT__"),
        C_INT.withName("nSizeMin"),
        C_INT.withName("nSizeMax"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagCHOOSEFONTA");
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTA$struct$LAYOUT() { return tagCHOOSEFONTA$struct$LAYOUT_; }

    static final MemoryLayout tagCHOOSEFONTA$lStructSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTA$lStructSize$LAYOUT() { return tagCHOOSEFONTA$lStructSize$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTA$lStructSize$VH_ = tagCHOOSEFONTA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lStructSize"));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTA$lStructSize$VH() { return tagCHOOSEFONTA$lStructSize$VH_; }

    static final MemoryLayout tagCHOOSEFONTA$hwndOwner$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTA$hwndOwner$LAYOUT() { return tagCHOOSEFONTA$hwndOwner$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTA$hwndOwner$VH_ = MemoryHandles.asAddressVarHandle(tagCHOOSEFONTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndOwner")));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTA$hwndOwner$VH() { return tagCHOOSEFONTA$hwndOwner$VH_; }

    static final MemoryLayout tagCHOOSEFONTA$hDC$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTA$hDC$LAYOUT() { return tagCHOOSEFONTA$hDC$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTA$hDC$VH_ = MemoryHandles.asAddressVarHandle(tagCHOOSEFONTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hDC")));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTA$hDC$VH() { return tagCHOOSEFONTA$hDC$VH_; }

    static final MemoryLayout tagCHOOSEFONTA$lpLogFont$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTA$lpLogFont$LAYOUT() { return tagCHOOSEFONTA$lpLogFont$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTA$lpLogFont$VH_ = MemoryHandles.asAddressVarHandle(tagCHOOSEFONTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpLogFont")));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTA$lpLogFont$VH() { return tagCHOOSEFONTA$lpLogFont$VH_; }

    static final MemoryLayout tagCHOOSEFONTA$iPointSize$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTA$iPointSize$LAYOUT() { return tagCHOOSEFONTA$iPointSize$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTA$iPointSize$VH_ = tagCHOOSEFONTA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iPointSize"));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTA$iPointSize$VH() { return tagCHOOSEFONTA$iPointSize$VH_; }

    static final MemoryLayout tagCHOOSEFONTA$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTA$Flags$LAYOUT() { return tagCHOOSEFONTA$Flags$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTA$Flags$VH_ = tagCHOOSEFONTA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTA$Flags$VH() { return tagCHOOSEFONTA$Flags$VH_; }

    static final MemoryLayout tagCHOOSEFONTA$rgbColors$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTA$rgbColors$LAYOUT() { return tagCHOOSEFONTA$rgbColors$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTA$rgbColors$VH_ = tagCHOOSEFONTA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("rgbColors"));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTA$rgbColors$VH() { return tagCHOOSEFONTA$rgbColors$VH_; }

    static final MemoryLayout tagCHOOSEFONTA$lCustData$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTA$lCustData$LAYOUT() { return tagCHOOSEFONTA$lCustData$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTA$lCustData$VH_ = tagCHOOSEFONTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lCustData"));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTA$lCustData$VH() { return tagCHOOSEFONTA$lCustData$VH_; }

    static final MemoryLayout tagCHOOSEFONTA$lpfnHook$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTA$lpfnHook$LAYOUT() { return tagCHOOSEFONTA$lpfnHook$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTA$lpfnHook$VH_ = MemoryHandles.asAddressVarHandle(tagCHOOSEFONTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnHook")));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTA$lpfnHook$VH() { return tagCHOOSEFONTA$lpfnHook$VH_; }

    static final MemoryLayout tagCHOOSEFONTA$lpTemplateName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTA$lpTemplateName$LAYOUT() { return tagCHOOSEFONTA$lpTemplateName$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTA$lpTemplateName$VH_ = MemoryHandles.asAddressVarHandle(tagCHOOSEFONTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpTemplateName")));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTA$lpTemplateName$VH() { return tagCHOOSEFONTA$lpTemplateName$VH_; }

    static final MemoryLayout tagCHOOSEFONTA$hInstance$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTA$hInstance$LAYOUT() { return tagCHOOSEFONTA$hInstance$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTA$hInstance$VH_ = MemoryHandles.asAddressVarHandle(tagCHOOSEFONTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInstance")));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTA$hInstance$VH() { return tagCHOOSEFONTA$hInstance$VH_; }

    static final MemoryLayout tagCHOOSEFONTA$lpszStyle$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTA$lpszStyle$LAYOUT() { return tagCHOOSEFONTA$lpszStyle$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTA$lpszStyle$VH_ = MemoryHandles.asAddressVarHandle(tagCHOOSEFONTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszStyle")));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTA$lpszStyle$VH() { return tagCHOOSEFONTA$lpszStyle$VH_; }

    static final MemoryLayout tagCHOOSEFONTA$nFontType$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTA$nFontType$LAYOUT() { return tagCHOOSEFONTA$nFontType$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTA$nFontType$VH_ = tagCHOOSEFONTA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("nFontType"));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTA$nFontType$VH() { return tagCHOOSEFONTA$nFontType$VH_; }

    static final MemoryLayout tagCHOOSEFONTA$___MISSING_ALIGNMENT__$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTA$___MISSING_ALIGNMENT__$LAYOUT() { return tagCHOOSEFONTA$___MISSING_ALIGNMENT__$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTA$___MISSING_ALIGNMENT__$VH_ = tagCHOOSEFONTA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("___MISSING_ALIGNMENT__"));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTA$___MISSING_ALIGNMENT__$VH() { return tagCHOOSEFONTA$___MISSING_ALIGNMENT__$VH_; }

    static final MemoryLayout tagCHOOSEFONTA$nSizeMin$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTA$nSizeMin$LAYOUT() { return tagCHOOSEFONTA$nSizeMin$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTA$nSizeMin$VH_ = tagCHOOSEFONTA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nSizeMin"));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTA$nSizeMin$VH() { return tagCHOOSEFONTA$nSizeMin$VH_; }

    static final MemoryLayout tagCHOOSEFONTA$nSizeMax$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTA$nSizeMax$LAYOUT() { return tagCHOOSEFONTA$nSizeMax$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTA$nSizeMax$VH_ = tagCHOOSEFONTA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nSizeMax"));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTA$nSizeMax$VH() { return tagCHOOSEFONTA$nSizeMax$VH_; }

    static final MemoryLayout tagCHOOSEFONTW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("lStructSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hwndOwner"),
        C_POINTER.withName("hDC"),
        C_POINTER.withName("lpLogFont"),
        C_INT.withName("iPointSize"),
        C_LONG.withName("Flags"),
        C_LONG.withName("rgbColors"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("lCustData"),
        C_POINTER.withName("lpfnHook"),
        C_POINTER.withName("lpTemplateName"),
        C_POINTER.withName("hInstance"),
        C_POINTER.withName("lpszStyle"),
        C_SHORT.withName("nFontType"),
        C_SHORT.withName("___MISSING_ALIGNMENT__"),
        C_INT.withName("nSizeMin"),
        C_INT.withName("nSizeMax"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagCHOOSEFONTW");
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTW$struct$LAYOUT() { return tagCHOOSEFONTW$struct$LAYOUT_; }

    static final MemoryLayout tagCHOOSEFONTW$lStructSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTW$lStructSize$LAYOUT() { return tagCHOOSEFONTW$lStructSize$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTW$lStructSize$VH_ = tagCHOOSEFONTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lStructSize"));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTW$lStructSize$VH() { return tagCHOOSEFONTW$lStructSize$VH_; }

    static final MemoryLayout tagCHOOSEFONTW$hwndOwner$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTW$hwndOwner$LAYOUT() { return tagCHOOSEFONTW$hwndOwner$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTW$hwndOwner$VH_ = MemoryHandles.asAddressVarHandle(tagCHOOSEFONTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndOwner")));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTW$hwndOwner$VH() { return tagCHOOSEFONTW$hwndOwner$VH_; }

    static final MemoryLayout tagCHOOSEFONTW$hDC$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTW$hDC$LAYOUT() { return tagCHOOSEFONTW$hDC$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTW$hDC$VH_ = MemoryHandles.asAddressVarHandle(tagCHOOSEFONTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hDC")));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTW$hDC$VH() { return tagCHOOSEFONTW$hDC$VH_; }

    static final MemoryLayout tagCHOOSEFONTW$lpLogFont$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTW$lpLogFont$LAYOUT() { return tagCHOOSEFONTW$lpLogFont$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTW$lpLogFont$VH_ = MemoryHandles.asAddressVarHandle(tagCHOOSEFONTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpLogFont")));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTW$lpLogFont$VH() { return tagCHOOSEFONTW$lpLogFont$VH_; }

    static final MemoryLayout tagCHOOSEFONTW$iPointSize$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTW$iPointSize$LAYOUT() { return tagCHOOSEFONTW$iPointSize$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTW$iPointSize$VH_ = tagCHOOSEFONTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iPointSize"));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTW$iPointSize$VH() { return tagCHOOSEFONTW$iPointSize$VH_; }

    static final MemoryLayout tagCHOOSEFONTW$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTW$Flags$LAYOUT() { return tagCHOOSEFONTW$Flags$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTW$Flags$VH_ = tagCHOOSEFONTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTW$Flags$VH() { return tagCHOOSEFONTW$Flags$VH_; }

    static final MemoryLayout tagCHOOSEFONTW$rgbColors$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTW$rgbColors$LAYOUT() { return tagCHOOSEFONTW$rgbColors$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTW$rgbColors$VH_ = tagCHOOSEFONTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("rgbColors"));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTW$rgbColors$VH() { return tagCHOOSEFONTW$rgbColors$VH_; }

    static final MemoryLayout tagCHOOSEFONTW$lCustData$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTW$lCustData$LAYOUT() { return tagCHOOSEFONTW$lCustData$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTW$lCustData$VH_ = tagCHOOSEFONTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lCustData"));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTW$lCustData$VH() { return tagCHOOSEFONTW$lCustData$VH_; }

    static final MemoryLayout tagCHOOSEFONTW$lpfnHook$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTW$lpfnHook$LAYOUT() { return tagCHOOSEFONTW$lpfnHook$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTW$lpfnHook$VH_ = MemoryHandles.asAddressVarHandle(tagCHOOSEFONTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnHook")));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTW$lpfnHook$VH() { return tagCHOOSEFONTW$lpfnHook$VH_; }

    static final MemoryLayout tagCHOOSEFONTW$lpTemplateName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTW$lpTemplateName$LAYOUT() { return tagCHOOSEFONTW$lpTemplateName$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTW$lpTemplateName$VH_ = MemoryHandles.asAddressVarHandle(tagCHOOSEFONTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpTemplateName")));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTW$lpTemplateName$VH() { return tagCHOOSEFONTW$lpTemplateName$VH_; }

    static final MemoryLayout tagCHOOSEFONTW$hInstance$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTW$hInstance$LAYOUT() { return tagCHOOSEFONTW$hInstance$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTW$hInstance$VH_ = MemoryHandles.asAddressVarHandle(tagCHOOSEFONTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInstance")));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTW$hInstance$VH() { return tagCHOOSEFONTW$hInstance$VH_; }

    static final MemoryLayout tagCHOOSEFONTW$lpszStyle$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTW$lpszStyle$LAYOUT() { return tagCHOOSEFONTW$lpszStyle$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTW$lpszStyle$VH_ = MemoryHandles.asAddressVarHandle(tagCHOOSEFONTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszStyle")));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTW$lpszStyle$VH() { return tagCHOOSEFONTW$lpszStyle$VH_; }

    static final MemoryLayout tagCHOOSEFONTW$nFontType$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTW$nFontType$LAYOUT() { return tagCHOOSEFONTW$nFontType$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTW$nFontType$VH_ = tagCHOOSEFONTW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("nFontType"));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTW$nFontType$VH() { return tagCHOOSEFONTW$nFontType$VH_; }

    static final MemoryLayout tagCHOOSEFONTW$___MISSING_ALIGNMENT__$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTW$___MISSING_ALIGNMENT__$LAYOUT() { return tagCHOOSEFONTW$___MISSING_ALIGNMENT__$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTW$___MISSING_ALIGNMENT__$VH_ = tagCHOOSEFONTW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("___MISSING_ALIGNMENT__"));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTW$___MISSING_ALIGNMENT__$VH() { return tagCHOOSEFONTW$___MISSING_ALIGNMENT__$VH_; }

    static final MemoryLayout tagCHOOSEFONTW$nSizeMin$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTW$nSizeMin$LAYOUT() { return tagCHOOSEFONTW$nSizeMin$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTW$nSizeMin$VH_ = tagCHOOSEFONTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nSizeMin"));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTW$nSizeMin$VH() { return tagCHOOSEFONTW$nSizeMin$VH_; }

    static final MemoryLayout tagCHOOSEFONTW$nSizeMax$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagCHOOSEFONTW$nSizeMax$LAYOUT() { return tagCHOOSEFONTW$nSizeMax$LAYOUT_; }

    static final VarHandle tagCHOOSEFONTW$nSizeMax$VH_ = tagCHOOSEFONTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nSizeMax"));
    static final java.lang.invoke.VarHandle tagCHOOSEFONTW$nSizeMax$VH() { return tagCHOOSEFONTW$nSizeMax$VH_; }

    static final FunctionDescriptor ChooseFontA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ChooseFontA$FUNC() { return ChooseFontA$FUNC_; }

    static final MethodHandle ChooseFontA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ChooseFontA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ChooseFontA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ChooseFontA$MH() { return ChooseFontA$MH_; }

    static final FunctionDescriptor ChooseFontW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ChooseFontW$FUNC() { return ChooseFontW$FUNC_; }

    static final MethodHandle ChooseFontW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ChooseFontW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ChooseFontW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ChooseFontW$MH() { return ChooseFontW$MH_; }

    static final MemoryLayout tagPDA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("lStructSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hwndOwner"),
        C_POINTER.withName("hDevMode"),
        C_POINTER.withName("hDevNames"),
        C_POINTER.withName("hDC"),
        C_LONG.withName("Flags"),
        C_SHORT.withName("nFromPage"),
        C_SHORT.withName("nToPage"),
        C_SHORT.withName("nMinPage"),
        C_SHORT.withName("nMaxPage"),
        C_SHORT.withName("nCopies"),
        MemoryLayout.ofPaddingBits(16),
        C_POINTER.withName("hInstance"),
        C_LONGLONG.withName("lCustData"),
        C_POINTER.withName("lpfnPrintHook"),
        C_POINTER.withName("lpfnSetupHook"),
        C_POINTER.withName("lpPrintTemplateName"),
        C_POINTER.withName("lpSetupTemplateName"),
        C_POINTER.withName("hPrintTemplate"),
        C_POINTER.withName("hSetupTemplate")
    ).withName("tagPDA");
    static final jdk.incubator.foreign.MemoryLayout tagPDA$struct$LAYOUT() { return tagPDA$struct$LAYOUT_; }

    static final MemoryLayout tagPDA$lStructSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDA$lStructSize$LAYOUT() { return tagPDA$lStructSize$LAYOUT_; }

    static final VarHandle tagPDA$lStructSize$VH_ = tagPDA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lStructSize"));
    static final java.lang.invoke.VarHandle tagPDA$lStructSize$VH() { return tagPDA$lStructSize$VH_; }

    static final MemoryLayout tagPDA$hwndOwner$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDA$hwndOwner$LAYOUT() { return tagPDA$hwndOwner$LAYOUT_; }

    static final VarHandle tagPDA$hwndOwner$VH_ = MemoryHandles.asAddressVarHandle(tagPDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndOwner")));
    static final java.lang.invoke.VarHandle tagPDA$hwndOwner$VH() { return tagPDA$hwndOwner$VH_; }

    static final MemoryLayout tagPDA$hDevMode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDA$hDevMode$LAYOUT() { return tagPDA$hDevMode$LAYOUT_; }

    static final VarHandle tagPDA$hDevMode$VH_ = MemoryHandles.asAddressVarHandle(tagPDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hDevMode")));
    static final java.lang.invoke.VarHandle tagPDA$hDevMode$VH() { return tagPDA$hDevMode$VH_; }

    static final MemoryLayout tagPDA$hDevNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDA$hDevNames$LAYOUT() { return tagPDA$hDevNames$LAYOUT_; }

    static final VarHandle tagPDA$hDevNames$VH_ = MemoryHandles.asAddressVarHandle(tagPDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hDevNames")));
    static final java.lang.invoke.VarHandle tagPDA$hDevNames$VH() { return tagPDA$hDevNames$VH_; }

    static final MemoryLayout tagPDA$hDC$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDA$hDC$LAYOUT() { return tagPDA$hDC$LAYOUT_; }

    static final VarHandle tagPDA$hDC$VH_ = MemoryHandles.asAddressVarHandle(tagPDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hDC")));
    static final java.lang.invoke.VarHandle tagPDA$hDC$VH() { return tagPDA$hDC$VH_; }

    static final MemoryLayout tagPDA$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDA$Flags$LAYOUT() { return tagPDA$Flags$LAYOUT_; }

    static final VarHandle tagPDA$Flags$VH_ = tagPDA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle tagPDA$Flags$VH() { return tagPDA$Flags$VH_; }

    static final MemoryLayout tagPDA$nFromPage$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagPDA$nFromPage$LAYOUT() { return tagPDA$nFromPage$LAYOUT_; }

    static final VarHandle tagPDA$nFromPage$VH_ = tagPDA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("nFromPage"));
    static final java.lang.invoke.VarHandle tagPDA$nFromPage$VH() { return tagPDA$nFromPage$VH_; }

    static final MemoryLayout tagPDA$nToPage$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagPDA$nToPage$LAYOUT() { return tagPDA$nToPage$LAYOUT_; }

    static final VarHandle tagPDA$nToPage$VH_ = tagPDA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("nToPage"));
    static final java.lang.invoke.VarHandle tagPDA$nToPage$VH() { return tagPDA$nToPage$VH_; }

    static final MemoryLayout tagPDA$nMinPage$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagPDA$nMinPage$LAYOUT() { return tagPDA$nMinPage$LAYOUT_; }

    static final VarHandle tagPDA$nMinPage$VH_ = tagPDA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("nMinPage"));
    static final java.lang.invoke.VarHandle tagPDA$nMinPage$VH() { return tagPDA$nMinPage$VH_; }

    static final MemoryLayout tagPDA$nMaxPage$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagPDA$nMaxPage$LAYOUT() { return tagPDA$nMaxPage$LAYOUT_; }

    static final VarHandle tagPDA$nMaxPage$VH_ = tagPDA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("nMaxPage"));
    static final java.lang.invoke.VarHandle tagPDA$nMaxPage$VH() { return tagPDA$nMaxPage$VH_; }

    static final MemoryLayout tagPDA$nCopies$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagPDA$nCopies$LAYOUT() { return tagPDA$nCopies$LAYOUT_; }

    static final VarHandle tagPDA$nCopies$VH_ = tagPDA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("nCopies"));
    static final java.lang.invoke.VarHandle tagPDA$nCopies$VH() { return tagPDA$nCopies$VH_; }

    static final MemoryLayout tagPDA$hInstance$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDA$hInstance$LAYOUT() { return tagPDA$hInstance$LAYOUT_; }

    static final VarHandle tagPDA$hInstance$VH_ = MemoryHandles.asAddressVarHandle(tagPDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInstance")));
    static final java.lang.invoke.VarHandle tagPDA$hInstance$VH() { return tagPDA$hInstance$VH_; }

    static final MemoryLayout tagPDA$lCustData$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDA$lCustData$LAYOUT() { return tagPDA$lCustData$LAYOUT_; }

    static final VarHandle tagPDA$lCustData$VH_ = tagPDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lCustData"));
    static final java.lang.invoke.VarHandle tagPDA$lCustData$VH() { return tagPDA$lCustData$VH_; }

    static final MemoryLayout tagPDA$lpfnPrintHook$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDA$lpfnPrintHook$LAYOUT() { return tagPDA$lpfnPrintHook$LAYOUT_; }

    static final VarHandle tagPDA$lpfnPrintHook$VH_ = MemoryHandles.asAddressVarHandle(tagPDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnPrintHook")));
    static final java.lang.invoke.VarHandle tagPDA$lpfnPrintHook$VH() { return tagPDA$lpfnPrintHook$VH_; }

    static final MemoryLayout tagPDA$lpfnSetupHook$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDA$lpfnSetupHook$LAYOUT() { return tagPDA$lpfnSetupHook$LAYOUT_; }

    static final VarHandle tagPDA$lpfnSetupHook$VH_ = MemoryHandles.asAddressVarHandle(tagPDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnSetupHook")));
    static final java.lang.invoke.VarHandle tagPDA$lpfnSetupHook$VH() { return tagPDA$lpfnSetupHook$VH_; }

    static final MemoryLayout tagPDA$lpPrintTemplateName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDA$lpPrintTemplateName$LAYOUT() { return tagPDA$lpPrintTemplateName$LAYOUT_; }

    static final VarHandle tagPDA$lpPrintTemplateName$VH_ = MemoryHandles.asAddressVarHandle(tagPDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpPrintTemplateName")));
    static final java.lang.invoke.VarHandle tagPDA$lpPrintTemplateName$VH() { return tagPDA$lpPrintTemplateName$VH_; }

    static final MemoryLayout tagPDA$lpSetupTemplateName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDA$lpSetupTemplateName$LAYOUT() { return tagPDA$lpSetupTemplateName$LAYOUT_; }

    static final VarHandle tagPDA$lpSetupTemplateName$VH_ = MemoryHandles.asAddressVarHandle(tagPDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpSetupTemplateName")));
    static final java.lang.invoke.VarHandle tagPDA$lpSetupTemplateName$VH() { return tagPDA$lpSetupTemplateName$VH_; }

    static final MemoryLayout tagPDA$hPrintTemplate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDA$hPrintTemplate$LAYOUT() { return tagPDA$hPrintTemplate$LAYOUT_; }

    static final VarHandle tagPDA$hPrintTemplate$VH_ = MemoryHandles.asAddressVarHandle(tagPDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hPrintTemplate")));
    static final java.lang.invoke.VarHandle tagPDA$hPrintTemplate$VH() { return tagPDA$hPrintTemplate$VH_; }

    static final MemoryLayout tagPDA$hSetupTemplate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDA$hSetupTemplate$LAYOUT() { return tagPDA$hSetupTemplate$LAYOUT_; }

    static final VarHandle tagPDA$hSetupTemplate$VH_ = MemoryHandles.asAddressVarHandle(tagPDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hSetupTemplate")));
    static final java.lang.invoke.VarHandle tagPDA$hSetupTemplate$VH() { return tagPDA$hSetupTemplate$VH_; }

    static final MemoryLayout tagPDW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("lStructSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hwndOwner"),
        C_POINTER.withName("hDevMode"),
        C_POINTER.withName("hDevNames"),
        C_POINTER.withName("hDC"),
        C_LONG.withName("Flags"),
        C_SHORT.withName("nFromPage"),
        C_SHORT.withName("nToPage"),
        C_SHORT.withName("nMinPage"),
        C_SHORT.withName("nMaxPage"),
        C_SHORT.withName("nCopies"),
        MemoryLayout.ofPaddingBits(16),
        C_POINTER.withName("hInstance"),
        C_LONGLONG.withName("lCustData"),
        C_POINTER.withName("lpfnPrintHook"),
        C_POINTER.withName("lpfnSetupHook"),
        C_POINTER.withName("lpPrintTemplateName"),
        C_POINTER.withName("lpSetupTemplateName"),
        C_POINTER.withName("hPrintTemplate"),
        C_POINTER.withName("hSetupTemplate")
    ).withName("tagPDW");
    static final jdk.incubator.foreign.MemoryLayout tagPDW$struct$LAYOUT() { return tagPDW$struct$LAYOUT_; }

    static final MemoryLayout tagPDW$lStructSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDW$lStructSize$LAYOUT() { return tagPDW$lStructSize$LAYOUT_; }

    static final VarHandle tagPDW$lStructSize$VH_ = tagPDW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lStructSize"));
    static final java.lang.invoke.VarHandle tagPDW$lStructSize$VH() { return tagPDW$lStructSize$VH_; }

    static final MemoryLayout tagPDW$hwndOwner$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDW$hwndOwner$LAYOUT() { return tagPDW$hwndOwner$LAYOUT_; }

    static final VarHandle tagPDW$hwndOwner$VH_ = MemoryHandles.asAddressVarHandle(tagPDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndOwner")));
    static final java.lang.invoke.VarHandle tagPDW$hwndOwner$VH() { return tagPDW$hwndOwner$VH_; }

    static final MemoryLayout tagPDW$hDevMode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDW$hDevMode$LAYOUT() { return tagPDW$hDevMode$LAYOUT_; }

    static final VarHandle tagPDW$hDevMode$VH_ = MemoryHandles.asAddressVarHandle(tagPDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hDevMode")));
    static final java.lang.invoke.VarHandle tagPDW$hDevMode$VH() { return tagPDW$hDevMode$VH_; }

    static final MemoryLayout tagPDW$hDevNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDW$hDevNames$LAYOUT() { return tagPDW$hDevNames$LAYOUT_; }

    static final VarHandle tagPDW$hDevNames$VH_ = MemoryHandles.asAddressVarHandle(tagPDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hDevNames")));
    static final java.lang.invoke.VarHandle tagPDW$hDevNames$VH() { return tagPDW$hDevNames$VH_; }

    static final MemoryLayout tagPDW$hDC$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDW$hDC$LAYOUT() { return tagPDW$hDC$LAYOUT_; }

    static final VarHandle tagPDW$hDC$VH_ = MemoryHandles.asAddressVarHandle(tagPDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hDC")));
    static final java.lang.invoke.VarHandle tagPDW$hDC$VH() { return tagPDW$hDC$VH_; }

    static final MemoryLayout tagPDW$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDW$Flags$LAYOUT() { return tagPDW$Flags$LAYOUT_; }

    static final VarHandle tagPDW$Flags$VH_ = tagPDW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle tagPDW$Flags$VH() { return tagPDW$Flags$VH_; }

    static final MemoryLayout tagPDW$nFromPage$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagPDW$nFromPage$LAYOUT() { return tagPDW$nFromPage$LAYOUT_; }

    static final VarHandle tagPDW$nFromPage$VH_ = tagPDW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("nFromPage"));
    static final java.lang.invoke.VarHandle tagPDW$nFromPage$VH() { return tagPDW$nFromPage$VH_; }

    static final MemoryLayout tagPDW$nToPage$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagPDW$nToPage$LAYOUT() { return tagPDW$nToPage$LAYOUT_; }

    static final VarHandle tagPDW$nToPage$VH_ = tagPDW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("nToPage"));
    static final java.lang.invoke.VarHandle tagPDW$nToPage$VH() { return tagPDW$nToPage$VH_; }

    static final MemoryLayout tagPDW$nMinPage$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagPDW$nMinPage$LAYOUT() { return tagPDW$nMinPage$LAYOUT_; }

    static final VarHandle tagPDW$nMinPage$VH_ = tagPDW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("nMinPage"));
    static final java.lang.invoke.VarHandle tagPDW$nMinPage$VH() { return tagPDW$nMinPage$VH_; }

    static final MemoryLayout tagPDW$nMaxPage$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagPDW$nMaxPage$LAYOUT() { return tagPDW$nMaxPage$LAYOUT_; }

    static final VarHandle tagPDW$nMaxPage$VH_ = tagPDW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("nMaxPage"));
    static final java.lang.invoke.VarHandle tagPDW$nMaxPage$VH() { return tagPDW$nMaxPage$VH_; }

    static final MemoryLayout tagPDW$nCopies$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagPDW$nCopies$LAYOUT() { return tagPDW$nCopies$LAYOUT_; }

    static final VarHandle tagPDW$nCopies$VH_ = tagPDW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("nCopies"));
    static final java.lang.invoke.VarHandle tagPDW$nCopies$VH() { return tagPDW$nCopies$VH_; }

    static final MemoryLayout tagPDW$hInstance$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDW$hInstance$LAYOUT() { return tagPDW$hInstance$LAYOUT_; }

    static final VarHandle tagPDW$hInstance$VH_ = MemoryHandles.asAddressVarHandle(tagPDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInstance")));
    static final java.lang.invoke.VarHandle tagPDW$hInstance$VH() { return tagPDW$hInstance$VH_; }

    static final MemoryLayout tagPDW$lCustData$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDW$lCustData$LAYOUT() { return tagPDW$lCustData$LAYOUT_; }

    static final VarHandle tagPDW$lCustData$VH_ = tagPDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lCustData"));
    static final java.lang.invoke.VarHandle tagPDW$lCustData$VH() { return tagPDW$lCustData$VH_; }

    static final MemoryLayout tagPDW$lpfnPrintHook$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDW$lpfnPrintHook$LAYOUT() { return tagPDW$lpfnPrintHook$LAYOUT_; }

    static final VarHandle tagPDW$lpfnPrintHook$VH_ = MemoryHandles.asAddressVarHandle(tagPDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnPrintHook")));
    static final java.lang.invoke.VarHandle tagPDW$lpfnPrintHook$VH() { return tagPDW$lpfnPrintHook$VH_; }

    static final MemoryLayout tagPDW$lpfnSetupHook$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDW$lpfnSetupHook$LAYOUT() { return tagPDW$lpfnSetupHook$LAYOUT_; }

    static final VarHandle tagPDW$lpfnSetupHook$VH_ = MemoryHandles.asAddressVarHandle(tagPDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnSetupHook")));
    static final java.lang.invoke.VarHandle tagPDW$lpfnSetupHook$VH() { return tagPDW$lpfnSetupHook$VH_; }

    static final MemoryLayout tagPDW$lpPrintTemplateName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDW$lpPrintTemplateName$LAYOUT() { return tagPDW$lpPrintTemplateName$LAYOUT_; }

    static final VarHandle tagPDW$lpPrintTemplateName$VH_ = MemoryHandles.asAddressVarHandle(tagPDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpPrintTemplateName")));
    static final java.lang.invoke.VarHandle tagPDW$lpPrintTemplateName$VH() { return tagPDW$lpPrintTemplateName$VH_; }

    static final MemoryLayout tagPDW$lpSetupTemplateName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDW$lpSetupTemplateName$LAYOUT() { return tagPDW$lpSetupTemplateName$LAYOUT_; }

    static final VarHandle tagPDW$lpSetupTemplateName$VH_ = MemoryHandles.asAddressVarHandle(tagPDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpSetupTemplateName")));
    static final java.lang.invoke.VarHandle tagPDW$lpSetupTemplateName$VH() { return tagPDW$lpSetupTemplateName$VH_; }

    static final MemoryLayout tagPDW$hPrintTemplate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDW$hPrintTemplate$LAYOUT() { return tagPDW$hPrintTemplate$LAYOUT_; }

    static final VarHandle tagPDW$hPrintTemplate$VH_ = MemoryHandles.asAddressVarHandle(tagPDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hPrintTemplate")));
    static final java.lang.invoke.VarHandle tagPDW$hPrintTemplate$VH() { return tagPDW$hPrintTemplate$VH_; }

    static final MemoryLayout tagPDW$hSetupTemplate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDW$hSetupTemplate$LAYOUT() { return tagPDW$hSetupTemplate$LAYOUT_; }

    static final VarHandle tagPDW$hSetupTemplate$VH_ = MemoryHandles.asAddressVarHandle(tagPDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hSetupTemplate")));
    static final java.lang.invoke.VarHandle tagPDW$hSetupTemplate$VH() { return tagPDW$hSetupTemplate$VH_; }

    static final FunctionDescriptor PrintDlgA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor PrintDlgA$FUNC() { return PrintDlgA$FUNC_; }

    static final MethodHandle PrintDlgA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "PrintDlgA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        PrintDlgA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle PrintDlgA$MH() { return PrintDlgA$MH_; }

    static final FunctionDescriptor PrintDlgW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor PrintDlgW$FUNC() { return PrintDlgW$FUNC_; }

    static final MethodHandle PrintDlgW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "PrintDlgW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        PrintDlgW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle PrintDlgW$MH() { return PrintDlgW$MH_; }

    static final MemoryLayout IPrintDialogCallback$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IPrintDialogCallback");
    static final jdk.incubator.foreign.MemoryLayout IPrintDialogCallback$struct$LAYOUT() { return IPrintDialogCallback$struct$LAYOUT_; }

    static final MemoryLayout IPrintDialogCallback$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPrintDialogCallback$lpVtbl$LAYOUT() { return IPrintDialogCallback$lpVtbl$LAYOUT_; }

    static final VarHandle IPrintDialogCallback$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IPrintDialogCallback$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IPrintDialogCallback$lpVtbl$VH() { return IPrintDialogCallback$lpVtbl$VH_; }

    static final MemoryLayout IPrintDialogCallbackVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("InitDone"),
        C_POINTER.withName("SelectionChange"),
        C_POINTER.withName("HandleMessage")
    ).withName("IPrintDialogCallbackVtbl");
    static final jdk.incubator.foreign.MemoryLayout IPrintDialogCallbackVtbl$struct$LAYOUT() { return IPrintDialogCallbackVtbl$struct$LAYOUT_; }

    static final MemoryLayout IPrintDialogCallbackVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPrintDialogCallbackVtbl$QueryInterface$LAYOUT() { return IPrintDialogCallbackVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IPrintDialogCallbackVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IPrintDialogCallbackVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IPrintDialogCallbackVtbl$QueryInterface$VH() { return IPrintDialogCallbackVtbl$QueryInterface$VH_; }

    static final MemoryLayout IPrintDialogCallbackVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPrintDialogCallbackVtbl$AddRef$LAYOUT() { return IPrintDialogCallbackVtbl$AddRef$LAYOUT_; }

    static final VarHandle IPrintDialogCallbackVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IPrintDialogCallbackVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IPrintDialogCallbackVtbl$AddRef$VH() { return IPrintDialogCallbackVtbl$AddRef$VH_; }

    static final MemoryLayout IPrintDialogCallbackVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPrintDialogCallbackVtbl$Release$LAYOUT() { return IPrintDialogCallbackVtbl$Release$LAYOUT_; }

    static final VarHandle IPrintDialogCallbackVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IPrintDialogCallbackVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IPrintDialogCallbackVtbl$Release$VH() { return IPrintDialogCallbackVtbl$Release$VH_; }

    static final MemoryLayout IPrintDialogCallbackVtbl$InitDone$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPrintDialogCallbackVtbl$InitDone$LAYOUT() { return IPrintDialogCallbackVtbl$InitDone$LAYOUT_; }

    static final VarHandle IPrintDialogCallbackVtbl$InitDone$VH_ = MemoryHandles.asAddressVarHandle(IPrintDialogCallbackVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("InitDone")));
    static final java.lang.invoke.VarHandle IPrintDialogCallbackVtbl$InitDone$VH() { return IPrintDialogCallbackVtbl$InitDone$VH_; }

    static final MemoryLayout IPrintDialogCallbackVtbl$SelectionChange$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPrintDialogCallbackVtbl$SelectionChange$LAYOUT() { return IPrintDialogCallbackVtbl$SelectionChange$LAYOUT_; }

    static final VarHandle IPrintDialogCallbackVtbl$SelectionChange$VH_ = MemoryHandles.asAddressVarHandle(IPrintDialogCallbackVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SelectionChange")));
    static final java.lang.invoke.VarHandle IPrintDialogCallbackVtbl$SelectionChange$VH() { return IPrintDialogCallbackVtbl$SelectionChange$VH_; }

    static final MemoryLayout IPrintDialogCallbackVtbl$HandleMessage$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPrintDialogCallbackVtbl$HandleMessage$LAYOUT() { return IPrintDialogCallbackVtbl$HandleMessage$LAYOUT_; }

    static final VarHandle IPrintDialogCallbackVtbl$HandleMessage$VH_ = MemoryHandles.asAddressVarHandle(IPrintDialogCallbackVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("HandleMessage")));
    static final java.lang.invoke.VarHandle IPrintDialogCallbackVtbl$HandleMessage$VH() { return IPrintDialogCallbackVtbl$HandleMessage$VH_; }

    static final MemoryLayout IPrintDialogServices$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IPrintDialogServices");
    static final jdk.incubator.foreign.MemoryLayout IPrintDialogServices$struct$LAYOUT() { return IPrintDialogServices$struct$LAYOUT_; }

    static final MemoryLayout IPrintDialogServices$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPrintDialogServices$lpVtbl$LAYOUT() { return IPrintDialogServices$lpVtbl$LAYOUT_; }

    static final VarHandle IPrintDialogServices$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IPrintDialogServices$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IPrintDialogServices$lpVtbl$VH() { return IPrintDialogServices$lpVtbl$VH_; }

    static final MemoryLayout IPrintDialogServicesVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetCurrentDevMode"),
        C_POINTER.withName("GetCurrentPrinterName"),
        C_POINTER.withName("GetCurrentPortName")
    ).withName("IPrintDialogServicesVtbl");
    static final jdk.incubator.foreign.MemoryLayout IPrintDialogServicesVtbl$struct$LAYOUT() { return IPrintDialogServicesVtbl$struct$LAYOUT_; }

    static final MemoryLayout IPrintDialogServicesVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPrintDialogServicesVtbl$QueryInterface$LAYOUT() { return IPrintDialogServicesVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IPrintDialogServicesVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IPrintDialogServicesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IPrintDialogServicesVtbl$QueryInterface$VH() { return IPrintDialogServicesVtbl$QueryInterface$VH_; }

    static final MemoryLayout IPrintDialogServicesVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPrintDialogServicesVtbl$AddRef$LAYOUT() { return IPrintDialogServicesVtbl$AddRef$LAYOUT_; }

    static final VarHandle IPrintDialogServicesVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IPrintDialogServicesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IPrintDialogServicesVtbl$AddRef$VH() { return IPrintDialogServicesVtbl$AddRef$VH_; }

    static final MemoryLayout IPrintDialogServicesVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPrintDialogServicesVtbl$Release$LAYOUT() { return IPrintDialogServicesVtbl$Release$LAYOUT_; }

    static final VarHandle IPrintDialogServicesVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IPrintDialogServicesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IPrintDialogServicesVtbl$Release$VH() { return IPrintDialogServicesVtbl$Release$VH_; }

    static final MemoryLayout IPrintDialogServicesVtbl$GetCurrentDevMode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPrintDialogServicesVtbl$GetCurrentDevMode$LAYOUT() { return IPrintDialogServicesVtbl$GetCurrentDevMode$LAYOUT_; }

    static final VarHandle IPrintDialogServicesVtbl$GetCurrentDevMode$VH_ = MemoryHandles.asAddressVarHandle(IPrintDialogServicesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetCurrentDevMode")));
    static final java.lang.invoke.VarHandle IPrintDialogServicesVtbl$GetCurrentDevMode$VH() { return IPrintDialogServicesVtbl$GetCurrentDevMode$VH_; }

    static final MemoryLayout IPrintDialogServicesVtbl$GetCurrentPrinterName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPrintDialogServicesVtbl$GetCurrentPrinterName$LAYOUT() { return IPrintDialogServicesVtbl$GetCurrentPrinterName$LAYOUT_; }

    static final VarHandle IPrintDialogServicesVtbl$GetCurrentPrinterName$VH_ = MemoryHandles.asAddressVarHandle(IPrintDialogServicesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetCurrentPrinterName")));
    static final java.lang.invoke.VarHandle IPrintDialogServicesVtbl$GetCurrentPrinterName$VH() { return IPrintDialogServicesVtbl$GetCurrentPrinterName$VH_; }

    static final MemoryLayout IPrintDialogServicesVtbl$GetCurrentPortName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPrintDialogServicesVtbl$GetCurrentPortName$LAYOUT() { return IPrintDialogServicesVtbl$GetCurrentPortName$LAYOUT_; }

    static final VarHandle IPrintDialogServicesVtbl$GetCurrentPortName$VH_ = MemoryHandles.asAddressVarHandle(IPrintDialogServicesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetCurrentPortName")));
    static final java.lang.invoke.VarHandle IPrintDialogServicesVtbl$GetCurrentPortName$VH() { return IPrintDialogServicesVtbl$GetCurrentPortName$VH_; }

    static final MemoryLayout tagPRINTPAGERANGE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("nFromPage"),
        C_LONG.withName("nToPage")
    ).withName("tagPRINTPAGERANGE");
    static final jdk.incubator.foreign.MemoryLayout tagPRINTPAGERANGE$struct$LAYOUT() { return tagPRINTPAGERANGE$struct$LAYOUT_; }

    static final MemoryLayout tagPRINTPAGERANGE$nFromPage$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPRINTPAGERANGE$nFromPage$LAYOUT() { return tagPRINTPAGERANGE$nFromPage$LAYOUT_; }

    static final VarHandle tagPRINTPAGERANGE$nFromPage$VH_ = tagPRINTPAGERANGE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nFromPage"));
    static final java.lang.invoke.VarHandle tagPRINTPAGERANGE$nFromPage$VH() { return tagPRINTPAGERANGE$nFromPage$VH_; }

    static final MemoryLayout tagPRINTPAGERANGE$nToPage$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPRINTPAGERANGE$nToPage$LAYOUT() { return tagPRINTPAGERANGE$nToPage$LAYOUT_; }

    static final VarHandle tagPRINTPAGERANGE$nToPage$VH_ = tagPRINTPAGERANGE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nToPage"));
    static final java.lang.invoke.VarHandle tagPRINTPAGERANGE$nToPage$VH() { return tagPRINTPAGERANGE$nToPage$VH_; }

    static final MemoryLayout tagPDEXA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("lStructSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hwndOwner"),
        C_POINTER.withName("hDevMode"),
        C_POINTER.withName("hDevNames"),
        C_POINTER.withName("hDC"),
        C_LONG.withName("Flags"),
        C_LONG.withName("Flags2"),
        C_LONG.withName("ExclusionFlags"),
        C_LONG.withName("nPageRanges"),
        C_LONG.withName("nMaxPageRanges"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpPageRanges"),
        C_LONG.withName("nMinPage"),
        C_LONG.withName("nMaxPage"),
        C_LONG.withName("nCopies"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hInstance"),
        C_POINTER.withName("lpPrintTemplateName"),
        C_POINTER.withName("lpCallback"),
        C_LONG.withName("nPropertyPages"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lphPropertyPages"),
        C_LONG.withName("nStartPage"),
        C_LONG.withName("dwResultAction")
    ).withName("tagPDEXA");
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$struct$LAYOUT() { return tagPDEXA$struct$LAYOUT_; }

    static final MemoryLayout tagPDEXA$lStructSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$lStructSize$LAYOUT() { return tagPDEXA$lStructSize$LAYOUT_; }

    static final VarHandle tagPDEXA$lStructSize$VH_ = tagPDEXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lStructSize"));
    static final java.lang.invoke.VarHandle tagPDEXA$lStructSize$VH() { return tagPDEXA$lStructSize$VH_; }

    static final MemoryLayout tagPDEXA$hwndOwner$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$hwndOwner$LAYOUT() { return tagPDEXA$hwndOwner$LAYOUT_; }

    static final VarHandle tagPDEXA$hwndOwner$VH_ = MemoryHandles.asAddressVarHandle(tagPDEXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndOwner")));
    static final java.lang.invoke.VarHandle tagPDEXA$hwndOwner$VH() { return tagPDEXA$hwndOwner$VH_; }

    static final MemoryLayout tagPDEXA$hDevMode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$hDevMode$LAYOUT() { return tagPDEXA$hDevMode$LAYOUT_; }

    static final VarHandle tagPDEXA$hDevMode$VH_ = MemoryHandles.asAddressVarHandle(tagPDEXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hDevMode")));
    static final java.lang.invoke.VarHandle tagPDEXA$hDevMode$VH() { return tagPDEXA$hDevMode$VH_; }

    static final MemoryLayout tagPDEXA$hDevNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$hDevNames$LAYOUT() { return tagPDEXA$hDevNames$LAYOUT_; }

    static final VarHandle tagPDEXA$hDevNames$VH_ = MemoryHandles.asAddressVarHandle(tagPDEXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hDevNames")));
    static final java.lang.invoke.VarHandle tagPDEXA$hDevNames$VH() { return tagPDEXA$hDevNames$VH_; }

    static final MemoryLayout tagPDEXA$hDC$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$hDC$LAYOUT() { return tagPDEXA$hDC$LAYOUT_; }

    static final VarHandle tagPDEXA$hDC$VH_ = MemoryHandles.asAddressVarHandle(tagPDEXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hDC")));
    static final java.lang.invoke.VarHandle tagPDEXA$hDC$VH() { return tagPDEXA$hDC$VH_; }

    static final MemoryLayout tagPDEXA$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$Flags$LAYOUT() { return tagPDEXA$Flags$LAYOUT_; }

    static final VarHandle tagPDEXA$Flags$VH_ = tagPDEXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle tagPDEXA$Flags$VH() { return tagPDEXA$Flags$VH_; }

    static final MemoryLayout tagPDEXA$Flags2$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$Flags2$LAYOUT() { return tagPDEXA$Flags2$LAYOUT_; }

    static final VarHandle tagPDEXA$Flags2$VH_ = tagPDEXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags2"));
    static final java.lang.invoke.VarHandle tagPDEXA$Flags2$VH() { return tagPDEXA$Flags2$VH_; }

    static final MemoryLayout tagPDEXA$ExclusionFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$ExclusionFlags$LAYOUT() { return tagPDEXA$ExclusionFlags$LAYOUT_; }

    static final VarHandle tagPDEXA$ExclusionFlags$VH_ = tagPDEXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ExclusionFlags"));
    static final java.lang.invoke.VarHandle tagPDEXA$ExclusionFlags$VH() { return tagPDEXA$ExclusionFlags$VH_; }

    static final MemoryLayout tagPDEXA$nPageRanges$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$nPageRanges$LAYOUT() { return tagPDEXA$nPageRanges$LAYOUT_; }

    static final VarHandle tagPDEXA$nPageRanges$VH_ = tagPDEXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nPageRanges"));
    static final java.lang.invoke.VarHandle tagPDEXA$nPageRanges$VH() { return tagPDEXA$nPageRanges$VH_; }

    static final MemoryLayout tagPDEXA$nMaxPageRanges$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$nMaxPageRanges$LAYOUT() { return tagPDEXA$nMaxPageRanges$LAYOUT_; }

    static final VarHandle tagPDEXA$nMaxPageRanges$VH_ = tagPDEXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nMaxPageRanges"));
    static final java.lang.invoke.VarHandle tagPDEXA$nMaxPageRanges$VH() { return tagPDEXA$nMaxPageRanges$VH_; }

    static final MemoryLayout tagPDEXA$lpPageRanges$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$lpPageRanges$LAYOUT() { return tagPDEXA$lpPageRanges$LAYOUT_; }

    static final VarHandle tagPDEXA$lpPageRanges$VH_ = MemoryHandles.asAddressVarHandle(tagPDEXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpPageRanges")));
    static final java.lang.invoke.VarHandle tagPDEXA$lpPageRanges$VH() { return tagPDEXA$lpPageRanges$VH_; }

    static final MemoryLayout tagPDEXA$nMinPage$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$nMinPage$LAYOUT() { return tagPDEXA$nMinPage$LAYOUT_; }

    static final VarHandle tagPDEXA$nMinPage$VH_ = tagPDEXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nMinPage"));
    static final java.lang.invoke.VarHandle tagPDEXA$nMinPage$VH() { return tagPDEXA$nMinPage$VH_; }

    static final MemoryLayout tagPDEXA$nMaxPage$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$nMaxPage$LAYOUT() { return tagPDEXA$nMaxPage$LAYOUT_; }

    static final VarHandle tagPDEXA$nMaxPage$VH_ = tagPDEXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nMaxPage"));
    static final java.lang.invoke.VarHandle tagPDEXA$nMaxPage$VH() { return tagPDEXA$nMaxPage$VH_; }

    static final MemoryLayout tagPDEXA$nCopies$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$nCopies$LAYOUT() { return tagPDEXA$nCopies$LAYOUT_; }

    static final VarHandle tagPDEXA$nCopies$VH_ = tagPDEXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nCopies"));
    static final java.lang.invoke.VarHandle tagPDEXA$nCopies$VH() { return tagPDEXA$nCopies$VH_; }

    static final MemoryLayout tagPDEXA$hInstance$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$hInstance$LAYOUT() { return tagPDEXA$hInstance$LAYOUT_; }

    static final VarHandle tagPDEXA$hInstance$VH_ = MemoryHandles.asAddressVarHandle(tagPDEXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInstance")));
    static final java.lang.invoke.VarHandle tagPDEXA$hInstance$VH() { return tagPDEXA$hInstance$VH_; }

    static final MemoryLayout tagPDEXA$lpPrintTemplateName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$lpPrintTemplateName$LAYOUT() { return tagPDEXA$lpPrintTemplateName$LAYOUT_; }

    static final VarHandle tagPDEXA$lpPrintTemplateName$VH_ = MemoryHandles.asAddressVarHandle(tagPDEXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpPrintTemplateName")));
    static final java.lang.invoke.VarHandle tagPDEXA$lpPrintTemplateName$VH() { return tagPDEXA$lpPrintTemplateName$VH_; }

    static final MemoryLayout tagPDEXA$lpCallback$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$lpCallback$LAYOUT() { return tagPDEXA$lpCallback$LAYOUT_; }

    static final VarHandle tagPDEXA$lpCallback$VH_ = MemoryHandles.asAddressVarHandle(tagPDEXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpCallback")));
    static final java.lang.invoke.VarHandle tagPDEXA$lpCallback$VH() { return tagPDEXA$lpCallback$VH_; }

    static final MemoryLayout tagPDEXA$nPropertyPages$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$nPropertyPages$LAYOUT() { return tagPDEXA$nPropertyPages$LAYOUT_; }

    static final VarHandle tagPDEXA$nPropertyPages$VH_ = tagPDEXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nPropertyPages"));
    static final java.lang.invoke.VarHandle tagPDEXA$nPropertyPages$VH() { return tagPDEXA$nPropertyPages$VH_; }

    static final MemoryLayout tagPDEXA$lphPropertyPages$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$lphPropertyPages$LAYOUT() { return tagPDEXA$lphPropertyPages$LAYOUT_; }

    static final VarHandle tagPDEXA$lphPropertyPages$VH_ = MemoryHandles.asAddressVarHandle(tagPDEXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lphPropertyPages")));
    static final java.lang.invoke.VarHandle tagPDEXA$lphPropertyPages$VH() { return tagPDEXA$lphPropertyPages$VH_; }

    static final MemoryLayout tagPDEXA$nStartPage$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$nStartPage$LAYOUT() { return tagPDEXA$nStartPage$LAYOUT_; }

    static final VarHandle tagPDEXA$nStartPage$VH_ = tagPDEXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nStartPage"));
    static final java.lang.invoke.VarHandle tagPDEXA$nStartPage$VH() { return tagPDEXA$nStartPage$VH_; }

    static final MemoryLayout tagPDEXA$dwResultAction$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXA$dwResultAction$LAYOUT() { return tagPDEXA$dwResultAction$LAYOUT_; }

    static final VarHandle tagPDEXA$dwResultAction$VH_ = tagPDEXA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwResultAction"));
    static final java.lang.invoke.VarHandle tagPDEXA$dwResultAction$VH() { return tagPDEXA$dwResultAction$VH_; }

    static final MemoryLayout tagPDEXW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("lStructSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hwndOwner"),
        C_POINTER.withName("hDevMode"),
        C_POINTER.withName("hDevNames"),
        C_POINTER.withName("hDC"),
        C_LONG.withName("Flags"),
        C_LONG.withName("Flags2"),
        C_LONG.withName("ExclusionFlags"),
        C_LONG.withName("nPageRanges"),
        C_LONG.withName("nMaxPageRanges"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpPageRanges"),
        C_LONG.withName("nMinPage"),
        C_LONG.withName("nMaxPage"),
        C_LONG.withName("nCopies"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hInstance"),
        C_POINTER.withName("lpPrintTemplateName"),
        C_POINTER.withName("lpCallback"),
        C_LONG.withName("nPropertyPages"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lphPropertyPages"),
        C_LONG.withName("nStartPage"),
        C_LONG.withName("dwResultAction")
    ).withName("tagPDEXW");
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$struct$LAYOUT() { return tagPDEXW$struct$LAYOUT_; }

    static final MemoryLayout tagPDEXW$lStructSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$lStructSize$LAYOUT() { return tagPDEXW$lStructSize$LAYOUT_; }

    static final VarHandle tagPDEXW$lStructSize$VH_ = tagPDEXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lStructSize"));
    static final java.lang.invoke.VarHandle tagPDEXW$lStructSize$VH() { return tagPDEXW$lStructSize$VH_; }

    static final MemoryLayout tagPDEXW$hwndOwner$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$hwndOwner$LAYOUT() { return tagPDEXW$hwndOwner$LAYOUT_; }

    static final VarHandle tagPDEXW$hwndOwner$VH_ = MemoryHandles.asAddressVarHandle(tagPDEXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndOwner")));
    static final java.lang.invoke.VarHandle tagPDEXW$hwndOwner$VH() { return tagPDEXW$hwndOwner$VH_; }

    static final MemoryLayout tagPDEXW$hDevMode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$hDevMode$LAYOUT() { return tagPDEXW$hDevMode$LAYOUT_; }

    static final VarHandle tagPDEXW$hDevMode$VH_ = MemoryHandles.asAddressVarHandle(tagPDEXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hDevMode")));
    static final java.lang.invoke.VarHandle tagPDEXW$hDevMode$VH() { return tagPDEXW$hDevMode$VH_; }

    static final MemoryLayout tagPDEXW$hDevNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$hDevNames$LAYOUT() { return tagPDEXW$hDevNames$LAYOUT_; }

    static final VarHandle tagPDEXW$hDevNames$VH_ = MemoryHandles.asAddressVarHandle(tagPDEXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hDevNames")));
    static final java.lang.invoke.VarHandle tagPDEXW$hDevNames$VH() { return tagPDEXW$hDevNames$VH_; }

    static final MemoryLayout tagPDEXW$hDC$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$hDC$LAYOUT() { return tagPDEXW$hDC$LAYOUT_; }

    static final VarHandle tagPDEXW$hDC$VH_ = MemoryHandles.asAddressVarHandle(tagPDEXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hDC")));
    static final java.lang.invoke.VarHandle tagPDEXW$hDC$VH() { return tagPDEXW$hDC$VH_; }

    static final MemoryLayout tagPDEXW$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$Flags$LAYOUT() { return tagPDEXW$Flags$LAYOUT_; }

    static final VarHandle tagPDEXW$Flags$VH_ = tagPDEXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle tagPDEXW$Flags$VH() { return tagPDEXW$Flags$VH_; }

    static final MemoryLayout tagPDEXW$Flags2$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$Flags2$LAYOUT() { return tagPDEXW$Flags2$LAYOUT_; }

    static final VarHandle tagPDEXW$Flags2$VH_ = tagPDEXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags2"));
    static final java.lang.invoke.VarHandle tagPDEXW$Flags2$VH() { return tagPDEXW$Flags2$VH_; }

    static final MemoryLayout tagPDEXW$ExclusionFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$ExclusionFlags$LAYOUT() { return tagPDEXW$ExclusionFlags$LAYOUT_; }

    static final VarHandle tagPDEXW$ExclusionFlags$VH_ = tagPDEXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ExclusionFlags"));
    static final java.lang.invoke.VarHandle tagPDEXW$ExclusionFlags$VH() { return tagPDEXW$ExclusionFlags$VH_; }

    static final MemoryLayout tagPDEXW$nPageRanges$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$nPageRanges$LAYOUT() { return tagPDEXW$nPageRanges$LAYOUT_; }

    static final VarHandle tagPDEXW$nPageRanges$VH_ = tagPDEXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nPageRanges"));
    static final java.lang.invoke.VarHandle tagPDEXW$nPageRanges$VH() { return tagPDEXW$nPageRanges$VH_; }

    static final MemoryLayout tagPDEXW$nMaxPageRanges$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$nMaxPageRanges$LAYOUT() { return tagPDEXW$nMaxPageRanges$LAYOUT_; }

    static final VarHandle tagPDEXW$nMaxPageRanges$VH_ = tagPDEXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nMaxPageRanges"));
    static final java.lang.invoke.VarHandle tagPDEXW$nMaxPageRanges$VH() { return tagPDEXW$nMaxPageRanges$VH_; }

    static final MemoryLayout tagPDEXW$lpPageRanges$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$lpPageRanges$LAYOUT() { return tagPDEXW$lpPageRanges$LAYOUT_; }

    static final VarHandle tagPDEXW$lpPageRanges$VH_ = MemoryHandles.asAddressVarHandle(tagPDEXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpPageRanges")));
    static final java.lang.invoke.VarHandle tagPDEXW$lpPageRanges$VH() { return tagPDEXW$lpPageRanges$VH_; }

    static final MemoryLayout tagPDEXW$nMinPage$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$nMinPage$LAYOUT() { return tagPDEXW$nMinPage$LAYOUT_; }

    static final VarHandle tagPDEXW$nMinPage$VH_ = tagPDEXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nMinPage"));
    static final java.lang.invoke.VarHandle tagPDEXW$nMinPage$VH() { return tagPDEXW$nMinPage$VH_; }

    static final MemoryLayout tagPDEXW$nMaxPage$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$nMaxPage$LAYOUT() { return tagPDEXW$nMaxPage$LAYOUT_; }

    static final VarHandle tagPDEXW$nMaxPage$VH_ = tagPDEXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nMaxPage"));
    static final java.lang.invoke.VarHandle tagPDEXW$nMaxPage$VH() { return tagPDEXW$nMaxPage$VH_; }

    static final MemoryLayout tagPDEXW$nCopies$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$nCopies$LAYOUT() { return tagPDEXW$nCopies$LAYOUT_; }

    static final VarHandle tagPDEXW$nCopies$VH_ = tagPDEXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nCopies"));
    static final java.lang.invoke.VarHandle tagPDEXW$nCopies$VH() { return tagPDEXW$nCopies$VH_; }

    static final MemoryLayout tagPDEXW$hInstance$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$hInstance$LAYOUT() { return tagPDEXW$hInstance$LAYOUT_; }

    static final VarHandle tagPDEXW$hInstance$VH_ = MemoryHandles.asAddressVarHandle(tagPDEXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInstance")));
    static final java.lang.invoke.VarHandle tagPDEXW$hInstance$VH() { return tagPDEXW$hInstance$VH_; }

    static final MemoryLayout tagPDEXW$lpPrintTemplateName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$lpPrintTemplateName$LAYOUT() { return tagPDEXW$lpPrintTemplateName$LAYOUT_; }

    static final VarHandle tagPDEXW$lpPrintTemplateName$VH_ = MemoryHandles.asAddressVarHandle(tagPDEXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpPrintTemplateName")));
    static final java.lang.invoke.VarHandle tagPDEXW$lpPrintTemplateName$VH() { return tagPDEXW$lpPrintTemplateName$VH_; }

    static final MemoryLayout tagPDEXW$lpCallback$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$lpCallback$LAYOUT() { return tagPDEXW$lpCallback$LAYOUT_; }

    static final VarHandle tagPDEXW$lpCallback$VH_ = MemoryHandles.asAddressVarHandle(tagPDEXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpCallback")));
    static final java.lang.invoke.VarHandle tagPDEXW$lpCallback$VH() { return tagPDEXW$lpCallback$VH_; }

    static final MemoryLayout tagPDEXW$nPropertyPages$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$nPropertyPages$LAYOUT() { return tagPDEXW$nPropertyPages$LAYOUT_; }

    static final VarHandle tagPDEXW$nPropertyPages$VH_ = tagPDEXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nPropertyPages"));
    static final java.lang.invoke.VarHandle tagPDEXW$nPropertyPages$VH() { return tagPDEXW$nPropertyPages$VH_; }

    static final MemoryLayout tagPDEXW$lphPropertyPages$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$lphPropertyPages$LAYOUT() { return tagPDEXW$lphPropertyPages$LAYOUT_; }

    static final VarHandle tagPDEXW$lphPropertyPages$VH_ = MemoryHandles.asAddressVarHandle(tagPDEXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lphPropertyPages")));
    static final java.lang.invoke.VarHandle tagPDEXW$lphPropertyPages$VH() { return tagPDEXW$lphPropertyPages$VH_; }

    static final MemoryLayout tagPDEXW$nStartPage$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$nStartPage$LAYOUT() { return tagPDEXW$nStartPage$LAYOUT_; }

    static final VarHandle tagPDEXW$nStartPage$VH_ = tagPDEXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nStartPage"));
    static final java.lang.invoke.VarHandle tagPDEXW$nStartPage$VH() { return tagPDEXW$nStartPage$VH_; }

    static final MemoryLayout tagPDEXW$dwResultAction$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPDEXW$dwResultAction$LAYOUT() { return tagPDEXW$dwResultAction$LAYOUT_; }

    static final VarHandle tagPDEXW$dwResultAction$VH_ = tagPDEXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwResultAction"));
    static final java.lang.invoke.VarHandle tagPDEXW$dwResultAction$VH() { return tagPDEXW$dwResultAction$VH_; }

    static final FunctionDescriptor PrintDlgExA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor PrintDlgExA$FUNC() { return PrintDlgExA$FUNC_; }

    static final MethodHandle PrintDlgExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "PrintDlgExA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        PrintDlgExA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle PrintDlgExA$MH() { return PrintDlgExA$MH_; }

    static final FunctionDescriptor PrintDlgExW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor PrintDlgExW$FUNC() { return PrintDlgExW$FUNC_; }

    static final MethodHandle PrintDlgExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "PrintDlgExW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        PrintDlgExW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle PrintDlgExW$MH() { return PrintDlgExW$MH_; }

    static final MemoryLayout tagDEVNAMES$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wDriverOffset"),
        C_SHORT.withName("wDeviceOffset"),
        C_SHORT.withName("wOutputOffset"),
        C_SHORT.withName("wDefault")
    ).withName("tagDEVNAMES");
    static final jdk.incubator.foreign.MemoryLayout tagDEVNAMES$struct$LAYOUT() { return tagDEVNAMES$struct$LAYOUT_; }

    static final MemoryLayout tagDEVNAMES$wDriverOffset$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagDEVNAMES$wDriverOffset$LAYOUT() { return tagDEVNAMES$wDriverOffset$LAYOUT_; }

    static final VarHandle tagDEVNAMES$wDriverOffset$VH_ = tagDEVNAMES$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wDriverOffset"));
    static final java.lang.invoke.VarHandle tagDEVNAMES$wDriverOffset$VH() { return tagDEVNAMES$wDriverOffset$VH_; }

    static final MemoryLayout tagDEVNAMES$wDeviceOffset$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagDEVNAMES$wDeviceOffset$LAYOUT() { return tagDEVNAMES$wDeviceOffset$LAYOUT_; }

    static final VarHandle tagDEVNAMES$wDeviceOffset$VH_ = tagDEVNAMES$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wDeviceOffset"));
    static final java.lang.invoke.VarHandle tagDEVNAMES$wDeviceOffset$VH() { return tagDEVNAMES$wDeviceOffset$VH_; }

    static final MemoryLayout tagDEVNAMES$wOutputOffset$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagDEVNAMES$wOutputOffset$LAYOUT() { return tagDEVNAMES$wOutputOffset$LAYOUT_; }

    static final VarHandle tagDEVNAMES$wOutputOffset$VH_ = tagDEVNAMES$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wOutputOffset"));
    static final java.lang.invoke.VarHandle tagDEVNAMES$wOutputOffset$VH() { return tagDEVNAMES$wOutputOffset$VH_; }

    static final MemoryLayout tagDEVNAMES$wDefault$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagDEVNAMES$wDefault$LAYOUT() { return tagDEVNAMES$wDefault$LAYOUT_; }

    static final VarHandle tagDEVNAMES$wDefault$VH_ = tagDEVNAMES$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wDefault"));
    static final java.lang.invoke.VarHandle tagDEVNAMES$wDefault$VH() { return tagDEVNAMES$wDefault$VH_; }

    static final FunctionDescriptor CommDlgExtendedError$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor CommDlgExtendedError$FUNC() { return CommDlgExtendedError$FUNC_; }

    static final MethodHandle CommDlgExtendedError$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CommDlgExtendedError",
        "()I",
        CommDlgExtendedError$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CommDlgExtendedError$MH() { return CommDlgExtendedError$MH_; }

    static final MemoryLayout tagPSDA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("lStructSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hwndOwner"),
        C_POINTER.withName("hDevMode"),
        C_POINTER.withName("hDevNames"),
        C_LONG.withName("Flags"),
        MemoryLayout.ofStruct(
            C_LONG.withName("x"),
            C_LONG.withName("y")
        ).withName("ptPaperSize"),
        MemoryLayout.ofStruct(
            C_LONG.withName("left"),
            C_LONG.withName("top"),
            C_LONG.withName("right"),
            C_LONG.withName("bottom")
        ).withName("rtMinMargin"),
        MemoryLayout.ofStruct(
            C_LONG.withName("left"),
            C_LONG.withName("top"),
            C_LONG.withName("right"),
            C_LONG.withName("bottom")
        ).withName("rtMargin"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hInstance"),
        C_LONGLONG.withName("lCustData"),
        C_POINTER.withName("lpfnPageSetupHook"),
        C_POINTER.withName("lpfnPagePaintHook"),
        C_POINTER.withName("lpPageSetupTemplateName"),
        C_POINTER.withName("hPageSetupTemplate")
    ).withName("tagPSDA");
    static final jdk.incubator.foreign.MemoryLayout tagPSDA$struct$LAYOUT() { return tagPSDA$struct$LAYOUT_; }

    static final MemoryLayout tagPSDA$lStructSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPSDA$lStructSize$LAYOUT() { return tagPSDA$lStructSize$LAYOUT_; }

    static final VarHandle tagPSDA$lStructSize$VH_ = tagPSDA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lStructSize"));
    static final java.lang.invoke.VarHandle tagPSDA$lStructSize$VH() { return tagPSDA$lStructSize$VH_; }

    static final MemoryLayout tagPSDA$hwndOwner$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPSDA$hwndOwner$LAYOUT() { return tagPSDA$hwndOwner$LAYOUT_; }

    static final VarHandle tagPSDA$hwndOwner$VH_ = MemoryHandles.asAddressVarHandle(tagPSDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndOwner")));
    static final java.lang.invoke.VarHandle tagPSDA$hwndOwner$VH() { return tagPSDA$hwndOwner$VH_; }

    static final MemoryLayout tagPSDA$hDevMode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPSDA$hDevMode$LAYOUT() { return tagPSDA$hDevMode$LAYOUT_; }

    static final VarHandle tagPSDA$hDevMode$VH_ = MemoryHandles.asAddressVarHandle(tagPSDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hDevMode")));
    static final java.lang.invoke.VarHandle tagPSDA$hDevMode$VH() { return tagPSDA$hDevMode$VH_; }

    static final MemoryLayout tagPSDA$hDevNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPSDA$hDevNames$LAYOUT() { return tagPSDA$hDevNames$LAYOUT_; }

    static final VarHandle tagPSDA$hDevNames$VH_ = MemoryHandles.asAddressVarHandle(tagPSDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hDevNames")));
    static final java.lang.invoke.VarHandle tagPSDA$hDevNames$VH() { return tagPSDA$hDevNames$VH_; }

    static final MemoryLayout tagPSDA$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPSDA$Flags$LAYOUT() { return tagPSDA$Flags$LAYOUT_; }

    static final VarHandle tagPSDA$Flags$VH_ = tagPSDA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle tagPSDA$Flags$VH() { return tagPSDA$Flags$VH_; }

    static final MemoryLayout tagPSDA$hInstance$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPSDA$hInstance$LAYOUT() { return tagPSDA$hInstance$LAYOUT_; }

    static final VarHandle tagPSDA$hInstance$VH_ = MemoryHandles.asAddressVarHandle(tagPSDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInstance")));
    static final java.lang.invoke.VarHandle tagPSDA$hInstance$VH() { return tagPSDA$hInstance$VH_; }

    static final MemoryLayout tagPSDA$lCustData$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagPSDA$lCustData$LAYOUT() { return tagPSDA$lCustData$LAYOUT_; }

    static final VarHandle tagPSDA$lCustData$VH_ = tagPSDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lCustData"));
    static final java.lang.invoke.VarHandle tagPSDA$lCustData$VH() { return tagPSDA$lCustData$VH_; }

    static final MemoryLayout tagPSDA$lpfnPageSetupHook$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPSDA$lpfnPageSetupHook$LAYOUT() { return tagPSDA$lpfnPageSetupHook$LAYOUT_; }

    static final VarHandle tagPSDA$lpfnPageSetupHook$VH_ = MemoryHandles.asAddressVarHandle(tagPSDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnPageSetupHook")));
    static final java.lang.invoke.VarHandle tagPSDA$lpfnPageSetupHook$VH() { return tagPSDA$lpfnPageSetupHook$VH_; }

    static final MemoryLayout tagPSDA$lpfnPagePaintHook$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPSDA$lpfnPagePaintHook$LAYOUT() { return tagPSDA$lpfnPagePaintHook$LAYOUT_; }

    static final VarHandle tagPSDA$lpfnPagePaintHook$VH_ = MemoryHandles.asAddressVarHandle(tagPSDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnPagePaintHook")));
    static final java.lang.invoke.VarHandle tagPSDA$lpfnPagePaintHook$VH() { return tagPSDA$lpfnPagePaintHook$VH_; }

    static final MemoryLayout tagPSDA$lpPageSetupTemplateName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPSDA$lpPageSetupTemplateName$LAYOUT() { return tagPSDA$lpPageSetupTemplateName$LAYOUT_; }

    static final VarHandle tagPSDA$lpPageSetupTemplateName$VH_ = MemoryHandles.asAddressVarHandle(tagPSDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpPageSetupTemplateName")));
    static final java.lang.invoke.VarHandle tagPSDA$lpPageSetupTemplateName$VH() { return tagPSDA$lpPageSetupTemplateName$VH_; }

    static final MemoryLayout tagPSDA$hPageSetupTemplate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPSDA$hPageSetupTemplate$LAYOUT() { return tagPSDA$hPageSetupTemplate$LAYOUT_; }

    static final VarHandle tagPSDA$hPageSetupTemplate$VH_ = MemoryHandles.asAddressVarHandle(tagPSDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hPageSetupTemplate")));
    static final java.lang.invoke.VarHandle tagPSDA$hPageSetupTemplate$VH() { return tagPSDA$hPageSetupTemplate$VH_; }

    static final MemoryLayout tagPSDW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("lStructSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hwndOwner"),
        C_POINTER.withName("hDevMode"),
        C_POINTER.withName("hDevNames"),
        C_LONG.withName("Flags"),
        MemoryLayout.ofStruct(
            C_LONG.withName("x"),
            C_LONG.withName("y")
        ).withName("ptPaperSize"),
        MemoryLayout.ofStruct(
            C_LONG.withName("left"),
            C_LONG.withName("top"),
            C_LONG.withName("right"),
            C_LONG.withName("bottom")
        ).withName("rtMinMargin"),
        MemoryLayout.ofStruct(
            C_LONG.withName("left"),
            C_LONG.withName("top"),
            C_LONG.withName("right"),
            C_LONG.withName("bottom")
        ).withName("rtMargin"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hInstance"),
        C_LONGLONG.withName("lCustData"),
        C_POINTER.withName("lpfnPageSetupHook"),
        C_POINTER.withName("lpfnPagePaintHook"),
        C_POINTER.withName("lpPageSetupTemplateName"),
        C_POINTER.withName("hPageSetupTemplate")
    ).withName("tagPSDW");
    static final jdk.incubator.foreign.MemoryLayout tagPSDW$struct$LAYOUT() { return tagPSDW$struct$LAYOUT_; }

    static final MemoryLayout tagPSDW$lStructSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPSDW$lStructSize$LAYOUT() { return tagPSDW$lStructSize$LAYOUT_; }

    static final VarHandle tagPSDW$lStructSize$VH_ = tagPSDW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lStructSize"));
    static final java.lang.invoke.VarHandle tagPSDW$lStructSize$VH() { return tagPSDW$lStructSize$VH_; }

    static final MemoryLayout tagPSDW$hwndOwner$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPSDW$hwndOwner$LAYOUT() { return tagPSDW$hwndOwner$LAYOUT_; }

    static final VarHandle tagPSDW$hwndOwner$VH_ = MemoryHandles.asAddressVarHandle(tagPSDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndOwner")));
    static final java.lang.invoke.VarHandle tagPSDW$hwndOwner$VH() { return tagPSDW$hwndOwner$VH_; }

    static final MemoryLayout tagPSDW$hDevMode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPSDW$hDevMode$LAYOUT() { return tagPSDW$hDevMode$LAYOUT_; }

    static final VarHandle tagPSDW$hDevMode$VH_ = MemoryHandles.asAddressVarHandle(tagPSDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hDevMode")));
    static final java.lang.invoke.VarHandle tagPSDW$hDevMode$VH() { return tagPSDW$hDevMode$VH_; }

    static final MemoryLayout tagPSDW$hDevNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPSDW$hDevNames$LAYOUT() { return tagPSDW$hDevNames$LAYOUT_; }

    static final VarHandle tagPSDW$hDevNames$VH_ = MemoryHandles.asAddressVarHandle(tagPSDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hDevNames")));
    static final java.lang.invoke.VarHandle tagPSDW$hDevNames$VH() { return tagPSDW$hDevNames$VH_; }

    static final MemoryLayout tagPSDW$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPSDW$Flags$LAYOUT() { return tagPSDW$Flags$LAYOUT_; }

    static final VarHandle tagPSDW$Flags$VH_ = tagPSDW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle tagPSDW$Flags$VH() { return tagPSDW$Flags$VH_; }

    static final MemoryLayout tagPSDW$hInstance$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPSDW$hInstance$LAYOUT() { return tagPSDW$hInstance$LAYOUT_; }

    static final VarHandle tagPSDW$hInstance$VH_ = MemoryHandles.asAddressVarHandle(tagPSDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInstance")));
    static final java.lang.invoke.VarHandle tagPSDW$hInstance$VH() { return tagPSDW$hInstance$VH_; }

    static final MemoryLayout tagPSDW$lCustData$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagPSDW$lCustData$LAYOUT() { return tagPSDW$lCustData$LAYOUT_; }

    static final VarHandle tagPSDW$lCustData$VH_ = tagPSDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lCustData"));
    static final java.lang.invoke.VarHandle tagPSDW$lCustData$VH() { return tagPSDW$lCustData$VH_; }

    static final MemoryLayout tagPSDW$lpfnPageSetupHook$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPSDW$lpfnPageSetupHook$LAYOUT() { return tagPSDW$lpfnPageSetupHook$LAYOUT_; }

    static final VarHandle tagPSDW$lpfnPageSetupHook$VH_ = MemoryHandles.asAddressVarHandle(tagPSDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnPageSetupHook")));
    static final java.lang.invoke.VarHandle tagPSDW$lpfnPageSetupHook$VH() { return tagPSDW$lpfnPageSetupHook$VH_; }

    static final MemoryLayout tagPSDW$lpfnPagePaintHook$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPSDW$lpfnPagePaintHook$LAYOUT() { return tagPSDW$lpfnPagePaintHook$LAYOUT_; }

    static final VarHandle tagPSDW$lpfnPagePaintHook$VH_ = MemoryHandles.asAddressVarHandle(tagPSDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpfnPagePaintHook")));
    static final java.lang.invoke.VarHandle tagPSDW$lpfnPagePaintHook$VH() { return tagPSDW$lpfnPagePaintHook$VH_; }

    static final MemoryLayout tagPSDW$lpPageSetupTemplateName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPSDW$lpPageSetupTemplateName$LAYOUT() { return tagPSDW$lpPageSetupTemplateName$LAYOUT_; }

    static final VarHandle tagPSDW$lpPageSetupTemplateName$VH_ = MemoryHandles.asAddressVarHandle(tagPSDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpPageSetupTemplateName")));
    static final java.lang.invoke.VarHandle tagPSDW$lpPageSetupTemplateName$VH() { return tagPSDW$lpPageSetupTemplateName$VH_; }

    static final MemoryLayout tagPSDW$hPageSetupTemplate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPSDW$hPageSetupTemplate$LAYOUT() { return tagPSDW$hPageSetupTemplate$LAYOUT_; }

    static final VarHandle tagPSDW$hPageSetupTemplate$VH_ = MemoryHandles.asAddressVarHandle(tagPSDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hPageSetupTemplate")));
    static final java.lang.invoke.VarHandle tagPSDW$hPageSetupTemplate$VH() { return tagPSDW$hPageSetupTemplate$VH_; }

    static final FunctionDescriptor PageSetupDlgA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor PageSetupDlgA$FUNC() { return PageSetupDlgA$FUNC_; }

    static final MethodHandle PageSetupDlgA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "PageSetupDlgA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        PageSetupDlgA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle PageSetupDlgA$MH() { return PageSetupDlgA$MH_; }

    static final FunctionDescriptor PageSetupDlgW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor PageSetupDlgW$FUNC() { return PageSetupDlgW$FUNC_; }

    static final MethodHandle PageSetupDlgW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "PageSetupDlgW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        PageSetupDlgW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle PageSetupDlgW$MH() { return PageSetupDlgW$MH_; }

    static final FunctionDescriptor uaw_CharUpperW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor uaw_CharUpperW$FUNC() { return uaw_CharUpperW$FUNC_; }

    static final MethodHandle uaw_CharUpperW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "uaw_CharUpperW",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        uaw_CharUpperW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle uaw_CharUpperW$MH() { return uaw_CharUpperW$MH_; }

    static final FunctionDescriptor uaw_lstrcmpW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor uaw_lstrcmpW$FUNC() { return uaw_lstrcmpW$FUNC_; }

    static final MethodHandle uaw_lstrcmpW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "uaw_lstrcmpW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        uaw_lstrcmpW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle uaw_lstrcmpW$MH() { return uaw_lstrcmpW$MH_; }

    static final FunctionDescriptor uaw_lstrcmpiW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor uaw_lstrcmpiW$FUNC() { return uaw_lstrcmpiW$FUNC_; }

    static final MethodHandle uaw_lstrcmpiW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "uaw_lstrcmpiW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        uaw_lstrcmpiW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle uaw_lstrcmpiW$MH() { return uaw_lstrcmpiW$MH_; }

    static final FunctionDescriptor uaw_lstrlenW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor uaw_lstrlenW$FUNC() { return uaw_lstrlenW$FUNC_; }

    static final MethodHandle uaw_lstrlenW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "uaw_lstrlenW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        uaw_lstrlenW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle uaw_lstrlenW$MH() { return uaw_lstrlenW$MH_; }

    static final FunctionDescriptor uaw_wcschr$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor uaw_wcschr$FUNC() { return uaw_wcschr$FUNC_; }

    static final MethodHandle uaw_wcschr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "uaw_wcschr",
        "(Ljdk/incubator/foreign/MemoryAddress;S)Ljdk/incubator/foreign/MemoryAddress;",
        uaw_wcschr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle uaw_wcschr$MH() { return uaw_wcschr$MH_; }

    static final FunctionDescriptor uaw_wcscpy$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor uaw_wcscpy$FUNC() { return uaw_wcscpy$FUNC_; }

    static final MethodHandle uaw_wcscpy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "uaw_wcscpy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        uaw_wcscpy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle uaw_wcscpy$MH() { return uaw_wcscpy$MH_; }

    static final FunctionDescriptor uaw_wcsicmp$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor uaw_wcsicmp$FUNC() { return uaw_wcsicmp$FUNC_; }

    static final MethodHandle uaw_wcsicmp$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "uaw_wcsicmp",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        uaw_wcsicmp$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle uaw_wcsicmp$MH() { return uaw_wcsicmp$MH_; }

    static final FunctionDescriptor uaw_wcslen$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor uaw_wcslen$FUNC() { return uaw_wcslen$FUNC_; }

    static final MethodHandle uaw_wcslen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "uaw_wcslen",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        uaw_wcslen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle uaw_wcslen$MH() { return uaw_wcslen$MH_; }

    static final FunctionDescriptor uaw_wcsrchr$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor uaw_wcsrchr$FUNC() { return uaw_wcsrchr$FUNC_; }

    static final MethodHandle uaw_wcsrchr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "uaw_wcsrchr",
        "(Ljdk/incubator/foreign/MemoryAddress;S)Ljdk/incubator/foreign/MemoryAddress;",
        uaw_wcsrchr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle uaw_wcsrchr$MH() { return uaw_wcsrchr$MH_; }

    static final FunctionDescriptor ua_CharUpperW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ua_CharUpperW$FUNC() { return ua_CharUpperW$FUNC_; }

    static final MethodHandle ua_CharUpperW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ua_CharUpperW",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        ua_CharUpperW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ua_CharUpperW$MH() { return ua_CharUpperW$MH_; }

    static final FunctionDescriptor ua_lstrcmpW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ua_lstrcmpW$FUNC() { return ua_lstrcmpW$FUNC_; }

    static final MethodHandle ua_lstrcmpW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ua_lstrcmpW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ua_lstrcmpW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ua_lstrcmpW$MH() { return ua_lstrcmpW$MH_; }

    static final FunctionDescriptor ua_lstrcmpiW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ua_lstrcmpiW$FUNC() { return ua_lstrcmpiW$FUNC_; }

    static final MethodHandle ua_lstrcmpiW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ua_lstrcmpiW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ua_lstrcmpiW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ua_lstrcmpiW$MH() { return ua_lstrcmpiW$MH_; }

    static final FunctionDescriptor ua_lstrlenW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ua_lstrlenW$FUNC() { return ua_lstrlenW$FUNC_; }

    static final MethodHandle ua_lstrlenW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ua_lstrlenW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ua_lstrlenW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ua_lstrlenW$MH() { return ua_lstrlenW$MH_; }

    static final FunctionDescriptor ua_wcschr$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor ua_wcschr$FUNC() { return ua_wcschr$FUNC_; }

    static final MethodHandle ua_wcschr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ua_wcschr",
        "(Ljdk/incubator/foreign/MemoryAddress;S)Ljdk/incubator/foreign/MemoryAddress;",
        ua_wcschr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ua_wcschr$MH() { return ua_wcschr$MH_; }

    static final FunctionDescriptor ua_wcsrchr$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor ua_wcsrchr$FUNC() { return ua_wcsrchr$FUNC_; }

    static final MethodHandle ua_wcsrchr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ua_wcsrchr",
        "(Ljdk/incubator/foreign/MemoryAddress;S)Ljdk/incubator/foreign/MemoryAddress;",
        ua_wcsrchr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ua_wcsrchr$MH() { return ua_wcsrchr$MH_; }

    static final FunctionDescriptor ua_wcscpy$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ua_wcscpy$FUNC() { return ua_wcscpy$FUNC_; }

    static final MethodHandle ua_wcscpy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ua_wcscpy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        ua_wcscpy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ua_wcscpy$MH() { return ua_wcscpy$MH_; }

    static final FunctionDescriptor ua_wcscpy_s$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ua_wcscpy_s$FUNC() { return ua_wcscpy_s$FUNC_; }

    static final MethodHandle ua_wcscpy_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ua_wcscpy_s",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        ua_wcscpy_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ua_wcscpy_s$MH() { return ua_wcscpy_s$MH_; }

    static final FunctionDescriptor ua_wcslen$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ua_wcslen$FUNC() { return ua_wcslen$FUNC_; }

    static final MethodHandle ua_wcslen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ua_wcslen",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        ua_wcslen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ua_wcslen$MH() { return ua_wcslen$MH_; }

    static final FunctionDescriptor ua_wcsicmp$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ua_wcsicmp$FUNC() { return ua_wcsicmp$FUNC_; }

    static final MethodHandle ua_wcsicmp$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ua_wcsicmp",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ua_wcsicmp$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ua_wcsicmp$MH() { return ua_wcsicmp$MH_; }

    static final MemoryLayout NETWORK_MANAGER_FIRST_IP_ADDRESS_ARRIVAL_GUID$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout NETWORK_MANAGER_FIRST_IP_ADDRESS_ARRIVAL_GUID$LAYOUT() { return NETWORK_MANAGER_FIRST_IP_ADDRESS_ARRIVAL_GUID$LAYOUT_; }

    static final MemorySegment NETWORK_MANAGER_FIRST_IP_ADDRESS_ARRIVAL_GUID$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "NETWORK_MANAGER_FIRST_IP_ADDRESS_ARRIVAL_GUID", NETWORK_MANAGER_FIRST_IP_ADDRESS_ARRIVAL_GUID$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment NETWORK_MANAGER_FIRST_IP_ADDRESS_ARRIVAL_GUID$SEGMENT() { return NETWORK_MANAGER_FIRST_IP_ADDRESS_ARRIVAL_GUID$SEGMENT_; }

    static final MemoryLayout NETWORK_MANAGER_LAST_IP_ADDRESS_REMOVAL_GUID$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout NETWORK_MANAGER_LAST_IP_ADDRESS_REMOVAL_GUID$LAYOUT() { return NETWORK_MANAGER_LAST_IP_ADDRESS_REMOVAL_GUID$LAYOUT_; }

    static final MemorySegment NETWORK_MANAGER_LAST_IP_ADDRESS_REMOVAL_GUID$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "NETWORK_MANAGER_LAST_IP_ADDRESS_REMOVAL_GUID", NETWORK_MANAGER_LAST_IP_ADDRESS_REMOVAL_GUID$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment NETWORK_MANAGER_LAST_IP_ADDRESS_REMOVAL_GUID$SEGMENT() { return NETWORK_MANAGER_LAST_IP_ADDRESS_REMOVAL_GUID$SEGMENT_; }

    static final MemoryLayout DOMAIN_JOIN_GUID$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout DOMAIN_JOIN_GUID$LAYOUT() { return DOMAIN_JOIN_GUID$LAYOUT_; }

    static final MemorySegment DOMAIN_JOIN_GUID$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "DOMAIN_JOIN_GUID", DOMAIN_JOIN_GUID$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment DOMAIN_JOIN_GUID$SEGMENT() { return DOMAIN_JOIN_GUID$SEGMENT_; }

    static final MemoryLayout DOMAIN_LEAVE_GUID$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout DOMAIN_LEAVE_GUID$LAYOUT() { return DOMAIN_LEAVE_GUID$LAYOUT_; }

    static final MemorySegment DOMAIN_LEAVE_GUID$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "DOMAIN_LEAVE_GUID", DOMAIN_LEAVE_GUID$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment DOMAIN_LEAVE_GUID$SEGMENT() { return DOMAIN_LEAVE_GUID$SEGMENT_; }

    static final MemoryLayout FIREWALL_PORT_OPEN_GUID$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout FIREWALL_PORT_OPEN_GUID$LAYOUT() { return FIREWALL_PORT_OPEN_GUID$LAYOUT_; }

    static final MemorySegment FIREWALL_PORT_OPEN_GUID$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "FIREWALL_PORT_OPEN_GUID", FIREWALL_PORT_OPEN_GUID$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment FIREWALL_PORT_OPEN_GUID$SEGMENT() { return FIREWALL_PORT_OPEN_GUID$SEGMENT_; }

    static final MemoryLayout FIREWALL_PORT_CLOSE_GUID$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout FIREWALL_PORT_CLOSE_GUID$LAYOUT() { return FIREWALL_PORT_CLOSE_GUID$LAYOUT_; }

    static final MemorySegment FIREWALL_PORT_CLOSE_GUID$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "FIREWALL_PORT_CLOSE_GUID", FIREWALL_PORT_CLOSE_GUID$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment FIREWALL_PORT_CLOSE_GUID$SEGMENT() { return FIREWALL_PORT_CLOSE_GUID$SEGMENT_; }

    static final MemoryLayout MACHINE_POLICY_PRESENT_GUID$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout MACHINE_POLICY_PRESENT_GUID$LAYOUT() { return MACHINE_POLICY_PRESENT_GUID$LAYOUT_; }

    static final MemorySegment MACHINE_POLICY_PRESENT_GUID$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "MACHINE_POLICY_PRESENT_GUID", MACHINE_POLICY_PRESENT_GUID$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment MACHINE_POLICY_PRESENT_GUID$SEGMENT() { return MACHINE_POLICY_PRESENT_GUID$SEGMENT_; }

    static final MemoryLayout USER_POLICY_PRESENT_GUID$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout USER_POLICY_PRESENT_GUID$LAYOUT() { return USER_POLICY_PRESENT_GUID$LAYOUT_; }

    static final MemorySegment USER_POLICY_PRESENT_GUID$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "USER_POLICY_PRESENT_GUID", USER_POLICY_PRESENT_GUID$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment USER_POLICY_PRESENT_GUID$SEGMENT() { return USER_POLICY_PRESENT_GUID$SEGMENT_; }

    static final MemoryLayout RPC_INTERFACE_EVENT_GUID$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_EVENT_GUID$LAYOUT() { return RPC_INTERFACE_EVENT_GUID$LAYOUT_; }

    static final MemorySegment RPC_INTERFACE_EVENT_GUID$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "RPC_INTERFACE_EVENT_GUID", RPC_INTERFACE_EVENT_GUID$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment RPC_INTERFACE_EVENT_GUID$SEGMENT() { return RPC_INTERFACE_EVENT_GUID$SEGMENT_; }

    static final MemoryLayout NAMED_PIPE_EVENT_GUID$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout NAMED_PIPE_EVENT_GUID$LAYOUT() { return NAMED_PIPE_EVENT_GUID$LAYOUT_; }

    static final MemorySegment NAMED_PIPE_EVENT_GUID$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "NAMED_PIPE_EVENT_GUID", NAMED_PIPE_EVENT_GUID$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment NAMED_PIPE_EVENT_GUID$SEGMENT() { return NAMED_PIPE_EVENT_GUID$SEGMENT_; }

    static final MemoryLayout CUSTOM_SYSTEM_STATE_CHANGE_EVENT_GUID$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CUSTOM_SYSTEM_STATE_CHANGE_EVENT_GUID$LAYOUT() { return CUSTOM_SYSTEM_STATE_CHANGE_EVENT_GUID$LAYOUT_; }

    static final MemorySegment CUSTOM_SYSTEM_STATE_CHANGE_EVENT_GUID$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CUSTOM_SYSTEM_STATE_CHANGE_EVENT_GUID", CUSTOM_SYSTEM_STATE_CHANGE_EVENT_GUID$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CUSTOM_SYSTEM_STATE_CHANGE_EVENT_GUID$SEGMENT() { return CUSTOM_SYSTEM_STATE_CHANGE_EVENT_GUID$SEGMENT_; }

    static final MemoryLayout SERVICE_TRIGGER_CUSTOM_STATE_ID$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(2, C_LONG).withName("Data")
    );
    static final jdk.incubator.foreign.MemoryLayout SERVICE_TRIGGER_CUSTOM_STATE_ID$struct$LAYOUT() { return SERVICE_TRIGGER_CUSTOM_STATE_ID$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(2, C_LONG).withName("Data")
            ).withName("CustomStateId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("DataOffset"),
                MemoryLayout.ofSequence(1, C_CHAR).withName("Data"),
                MemoryLayout.ofPaddingBits(24)
            ).withName("s")
        ).withName("u")
    ).withName("_SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM$struct$LAYOUT() { return _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM$u$union$LAYOUT_ = MemoryLayout.ofUnion(
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(2, C_LONG).withName("Data")
        ).withName("CustomStateId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("DataOffset"),
            MemoryLayout.ofSequence(1, C_CHAR).withName("Data"),
            MemoryLayout.ofPaddingBits(24)
        ).withName("s")
    );
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM$u$union$LAYOUT() { return _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM$u$union$LAYOUT_; }

    static final MemoryLayout _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM$u$s$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("DataOffset"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("Data"),
        MemoryLayout.ofPaddingBits(24)
    );
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM$u$s$struct$LAYOUT() { return _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM$u$s$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM$u$s$DataOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM$u$s$DataOffset$LAYOUT() { return _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM$u$s$DataOffset$LAYOUT_; }

    static final VarHandle _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM$u$s$DataOffset$VH_ = _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM$u$s$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DataOffset"));
    static final java.lang.invoke.VarHandle _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM$u$s$DataOffset$VH() { return _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM$u$s$DataOffset$VH_; }

    static final MemoryLayout _SERVICE_DESCRIPTIONA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpDescription")
    ).withName("_SERVICE_DESCRIPTIONA");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_DESCRIPTIONA$struct$LAYOUT() { return _SERVICE_DESCRIPTIONA$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_DESCRIPTIONA$lpDescription$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_DESCRIPTIONA$lpDescription$LAYOUT() { return _SERVICE_DESCRIPTIONA$lpDescription$LAYOUT_; }

    static final VarHandle _SERVICE_DESCRIPTIONA$lpDescription$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_DESCRIPTIONA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpDescription")));
    static final java.lang.invoke.VarHandle _SERVICE_DESCRIPTIONA$lpDescription$VH() { return _SERVICE_DESCRIPTIONA$lpDescription$VH_; }

    static final MemoryLayout _SERVICE_DESCRIPTIONW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpDescription")
    ).withName("_SERVICE_DESCRIPTIONW");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_DESCRIPTIONW$struct$LAYOUT() { return _SERVICE_DESCRIPTIONW$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_DESCRIPTIONW$lpDescription$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_DESCRIPTIONW$lpDescription$LAYOUT() { return _SERVICE_DESCRIPTIONW$lpDescription$LAYOUT_; }

    static final VarHandle _SERVICE_DESCRIPTIONW$lpDescription$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_DESCRIPTIONW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpDescription")));
    static final java.lang.invoke.VarHandle _SERVICE_DESCRIPTIONW$lpDescription$VH() { return _SERVICE_DESCRIPTIONW$lpDescription$VH_; }

    static final int SC_ACTION_NONE() { return (int)0L; }

    static final int SC_ACTION_RESTART() { return (int)1L; }

    static final int SC_ACTION_REBOOT() { return (int)2L; }

    static final int SC_ACTION_RUN_COMMAND() { return (int)3L; }

    static final int SC_ACTION_OWN_RESTART() { return (int)4L; }

    static final MemoryLayout _SC_ACTION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Type"),
        C_LONG.withName("Delay")
    ).withName("_SC_ACTION");
    static final jdk.incubator.foreign.MemoryLayout _SC_ACTION$struct$LAYOUT() { return _SC_ACTION$struct$LAYOUT_; }

    static final MemoryLayout _SC_ACTION$Type$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SC_ACTION$Type$LAYOUT() { return _SC_ACTION$Type$LAYOUT_; }

    static final VarHandle _SC_ACTION$Type$VH_ = _SC_ACTION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    static final java.lang.invoke.VarHandle _SC_ACTION$Type$VH() { return _SC_ACTION$Type$VH_; }

    static final MemoryLayout _SC_ACTION$Delay$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SC_ACTION$Delay$LAYOUT() { return _SC_ACTION$Delay$LAYOUT_; }

    static final VarHandle _SC_ACTION$Delay$VH_ = _SC_ACTION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Delay"));
    static final java.lang.invoke.VarHandle _SC_ACTION$Delay$VH() { return _SC_ACTION$Delay$VH_; }

    static final MemoryLayout _SERVICE_FAILURE_ACTIONSA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwResetPeriod"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpRebootMsg"),
        C_POINTER.withName("lpCommand"),
        C_LONG.withName("cActions"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpsaActions")
    ).withName("_SERVICE_FAILURE_ACTIONSA");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_FAILURE_ACTIONSA$struct$LAYOUT() { return _SERVICE_FAILURE_ACTIONSA$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_FAILURE_ACTIONSA$dwResetPeriod$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_FAILURE_ACTIONSA$dwResetPeriod$LAYOUT() { return _SERVICE_FAILURE_ACTIONSA$dwResetPeriod$LAYOUT_; }

    static final VarHandle _SERVICE_FAILURE_ACTIONSA$dwResetPeriod$VH_ = _SERVICE_FAILURE_ACTIONSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwResetPeriod"));
    static final java.lang.invoke.VarHandle _SERVICE_FAILURE_ACTIONSA$dwResetPeriod$VH() { return _SERVICE_FAILURE_ACTIONSA$dwResetPeriod$VH_; }

}

