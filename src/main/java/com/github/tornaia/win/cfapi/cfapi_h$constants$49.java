// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$49 extends cfapi_h$constants$48 {

    /* package-private */ cfapi_h$constants$49() {}
    static final int SIID_MEDIADVDROM() { return (int)64L; }

    static final int SIID_MEDIACDAUDIOPLUS() { return (int)65L; }

    static final int SIID_MEDIACDRW() { return (int)66L; }

    static final int SIID_MEDIACDR() { return (int)67L; }

    static final int SIID_MEDIACDBURN() { return (int)68L; }

    static final int SIID_MEDIABLANKCD() { return (int)69L; }

    static final int SIID_MEDIACDROM() { return (int)70L; }

    static final int SIID_AUDIOFILES() { return (int)71L; }

    static final int SIID_IMAGEFILES() { return (int)72L; }

    static final int SIID_VIDEOFILES() { return (int)73L; }

    static final int SIID_MIXEDFILES() { return (int)74L; }

    static final int SIID_FOLDERBACK() { return (int)75L; }

    static final int SIID_FOLDERFRONT() { return (int)76L; }

    static final int SIID_SHIELD() { return (int)77L; }

    static final int SIID_WARNING() { return (int)78L; }

    static final int SIID_INFO() { return (int)79L; }

    static final int SIID_ERROR() { return (int)80L; }

    static final int SIID_KEY() { return (int)81L; }

    static final int SIID_SOFTWARE() { return (int)82L; }

    static final int SIID_RENAME() { return (int)83L; }

    static final int SIID_DELETE() { return (int)84L; }

    static final int SIID_MEDIAAUDIODVD() { return (int)85L; }

    static final int SIID_MEDIAMOVIEDVD() { return (int)86L; }

    static final int SIID_MEDIAENHANCEDCD() { return (int)87L; }

    static final int SIID_MEDIAENHANCEDDVD() { return (int)88L; }

    static final int SIID_MEDIAHDDVD() { return (int)89L; }

    static final int SIID_MEDIABLURAY() { return (int)90L; }

    static final int SIID_MEDIAVCD() { return (int)91L; }

    static final int SIID_MEDIADVDPLUSR() { return (int)92L; }

    static final int SIID_MEDIADVDPLUSRW() { return (int)93L; }

    static final int SIID_DESKTOPPC() { return (int)94L; }

    static final int SIID_MOBILEPC() { return (int)95L; }

    static final int SIID_USERS() { return (int)96L; }

    static final int SIID_MEDIASMARTMEDIA() { return (int)97L; }

    static final int SIID_MEDIACOMPACTFLASH() { return (int)98L; }

    static final int SIID_DEVICECELLPHONE() { return (int)99L; }

    static final int SIID_DEVICECAMERA() { return (int)100L; }

    static final int SIID_DEVICEVIDEOCAMERA() { return (int)101L; }

    static final int SIID_DEVICEAUDIOPLAYER() { return (int)102L; }

    static final int SIID_NETWORKCONNECT() { return (int)103L; }

    static final int SIID_INTERNET() { return (int)104L; }

    static final int SIID_ZIPFILE() { return (int)105L; }

    static final int SIID_SETTINGS() { return (int)106L; }

    static final int SIID_DRIVEHDDVD() { return (int)132L; }

    static final int SIID_DRIVEBD() { return (int)133L; }

    static final int SIID_MEDIAHDDVDROM() { return (int)134L; }

    static final int SIID_MEDIAHDDVDR() { return (int)135L; }

    static final int SIID_MEDIAHDDVDRAM() { return (int)136L; }

    static final int SIID_MEDIABDROM() { return (int)137L; }

    static final int SIID_MEDIABDR() { return (int)138L; }

    static final int SIID_MEDIABDRE() { return (int)139L; }

    static final int SIID_CLUSTEREDDRIVE() { return (int)140L; }

    static final int SIID_MAX_ICONS() { return (int)181L; }

    static final FunctionDescriptor SHGetStockIconInfo$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHGetStockIconInfo$FUNC() { return SHGetStockIconInfo$FUNC_; }

    static final MethodHandle SHGetStockIconInfo$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHGetStockIconInfo",
        "(IILjdk/incubator/foreign/MemoryAddress;)I",
        SHGetStockIconInfo$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHGetStockIconInfo$MH() { return SHGetStockIconInfo$MH_; }

    static final FunctionDescriptor SHGetDiskFreeSpaceExA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHGetDiskFreeSpaceExA$FUNC() { return SHGetDiskFreeSpaceExA$FUNC_; }

    static final MethodHandle SHGetDiskFreeSpaceExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHGetDiskFreeSpaceExA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SHGetDiskFreeSpaceExA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHGetDiskFreeSpaceExA$MH() { return SHGetDiskFreeSpaceExA$MH_; }

    static final FunctionDescriptor SHGetDiskFreeSpaceExW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHGetDiskFreeSpaceExW$FUNC() { return SHGetDiskFreeSpaceExW$FUNC_; }

    static final MethodHandle SHGetDiskFreeSpaceExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHGetDiskFreeSpaceExW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SHGetDiskFreeSpaceExW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHGetDiskFreeSpaceExW$MH() { return SHGetDiskFreeSpaceExW$MH_; }

    static final FunctionDescriptor SHGetNewLinkInfoA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHGetNewLinkInfoA$FUNC() { return SHGetNewLinkInfoA$FUNC_; }

    static final MethodHandle SHGetNewLinkInfoA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHGetNewLinkInfoA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        SHGetNewLinkInfoA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHGetNewLinkInfoA$MH() { return SHGetNewLinkInfoA$MH_; }

    static final FunctionDescriptor SHGetNewLinkInfoW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHGetNewLinkInfoW$FUNC() { return SHGetNewLinkInfoW$FUNC_; }

    static final MethodHandle SHGetNewLinkInfoW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHGetNewLinkInfoW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        SHGetNewLinkInfoW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHGetNewLinkInfoW$MH() { return SHGetNewLinkInfoW$MH_; }

    static final FunctionDescriptor SHInvokePrinterCommandA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHInvokePrinterCommandA$FUNC() { return SHInvokePrinterCommandA$FUNC_; }

    static final MethodHandle SHInvokePrinterCommandA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHInvokePrinterCommandA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        SHInvokePrinterCommandA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHInvokePrinterCommandA$MH() { return SHInvokePrinterCommandA$MH_; }

    static final FunctionDescriptor SHInvokePrinterCommandW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHInvokePrinterCommandW$FUNC() { return SHInvokePrinterCommandW$FUNC_; }

    static final MethodHandle SHInvokePrinterCommandW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHInvokePrinterCommandW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        SHInvokePrinterCommandW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHInvokePrinterCommandW$MH() { return SHInvokePrinterCommandW$MH_; }

    static final MemoryLayout _OPEN_PRINTER_PROPS_INFOA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pszSheetName"),
        C_INT.withName("uSheetIndex"),
        C_LONG.withName("dwFlags"),
        C_INT.withName("bModal"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_OPEN_PRINTER_PROPS_INFOA");
    static final jdk.incubator.foreign.MemoryLayout _OPEN_PRINTER_PROPS_INFOA$struct$LAYOUT() { return _OPEN_PRINTER_PROPS_INFOA$struct$LAYOUT_; }

    static final MemoryLayout _OPEN_PRINTER_PROPS_INFOA$dwSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _OPEN_PRINTER_PROPS_INFOA$dwSize$LAYOUT() { return _OPEN_PRINTER_PROPS_INFOA$dwSize$LAYOUT_; }

    static final VarHandle _OPEN_PRINTER_PROPS_INFOA$dwSize$VH_ = _OPEN_PRINTER_PROPS_INFOA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSize"));
    static final java.lang.invoke.VarHandle _OPEN_PRINTER_PROPS_INFOA$dwSize$VH() { return _OPEN_PRINTER_PROPS_INFOA$dwSize$VH_; }

    static final MemoryLayout _OPEN_PRINTER_PROPS_INFOA$pszSheetName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _OPEN_PRINTER_PROPS_INFOA$pszSheetName$LAYOUT() { return _OPEN_PRINTER_PROPS_INFOA$pszSheetName$LAYOUT_; }

    static final VarHandle _OPEN_PRINTER_PROPS_INFOA$pszSheetName$VH_ = MemoryHandles.asAddressVarHandle(_OPEN_PRINTER_PROPS_INFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszSheetName")));
    static final java.lang.invoke.VarHandle _OPEN_PRINTER_PROPS_INFOA$pszSheetName$VH() { return _OPEN_PRINTER_PROPS_INFOA$pszSheetName$VH_; }

    static final MemoryLayout _OPEN_PRINTER_PROPS_INFOA$uSheetIndex$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _OPEN_PRINTER_PROPS_INFOA$uSheetIndex$LAYOUT() { return _OPEN_PRINTER_PROPS_INFOA$uSheetIndex$LAYOUT_; }

    static final VarHandle _OPEN_PRINTER_PROPS_INFOA$uSheetIndex$VH_ = _OPEN_PRINTER_PROPS_INFOA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uSheetIndex"));
    static final java.lang.invoke.VarHandle _OPEN_PRINTER_PROPS_INFOA$uSheetIndex$VH() { return _OPEN_PRINTER_PROPS_INFOA$uSheetIndex$VH_; }

    static final MemoryLayout _OPEN_PRINTER_PROPS_INFOA$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _OPEN_PRINTER_PROPS_INFOA$dwFlags$LAYOUT() { return _OPEN_PRINTER_PROPS_INFOA$dwFlags$LAYOUT_; }

    static final VarHandle _OPEN_PRINTER_PROPS_INFOA$dwFlags$VH_ = _OPEN_PRINTER_PROPS_INFOA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _OPEN_PRINTER_PROPS_INFOA$dwFlags$VH() { return _OPEN_PRINTER_PROPS_INFOA$dwFlags$VH_; }

    static final MemoryLayout _OPEN_PRINTER_PROPS_INFOA$bModal$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _OPEN_PRINTER_PROPS_INFOA$bModal$LAYOUT() { return _OPEN_PRINTER_PROPS_INFOA$bModal$LAYOUT_; }

    static final VarHandle _OPEN_PRINTER_PROPS_INFOA$bModal$VH_ = _OPEN_PRINTER_PROPS_INFOA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bModal"));
    static final java.lang.invoke.VarHandle _OPEN_PRINTER_PROPS_INFOA$bModal$VH() { return _OPEN_PRINTER_PROPS_INFOA$bModal$VH_; }

    static final MemoryLayout _OPEN_PRINTER_PROPS_INFOW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pszSheetName"),
        C_INT.withName("uSheetIndex"),
        C_LONG.withName("dwFlags"),
        C_INT.withName("bModal"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_OPEN_PRINTER_PROPS_INFOW");
    static final jdk.incubator.foreign.MemoryLayout _OPEN_PRINTER_PROPS_INFOW$struct$LAYOUT() { return _OPEN_PRINTER_PROPS_INFOW$struct$LAYOUT_; }

    static final MemoryLayout _OPEN_PRINTER_PROPS_INFOW$dwSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _OPEN_PRINTER_PROPS_INFOW$dwSize$LAYOUT() { return _OPEN_PRINTER_PROPS_INFOW$dwSize$LAYOUT_; }

    static final VarHandle _OPEN_PRINTER_PROPS_INFOW$dwSize$VH_ = _OPEN_PRINTER_PROPS_INFOW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSize"));
    static final java.lang.invoke.VarHandle _OPEN_PRINTER_PROPS_INFOW$dwSize$VH() { return _OPEN_PRINTER_PROPS_INFOW$dwSize$VH_; }

    static final MemoryLayout _OPEN_PRINTER_PROPS_INFOW$pszSheetName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _OPEN_PRINTER_PROPS_INFOW$pszSheetName$LAYOUT() { return _OPEN_PRINTER_PROPS_INFOW$pszSheetName$LAYOUT_; }

    static final VarHandle _OPEN_PRINTER_PROPS_INFOW$pszSheetName$VH_ = MemoryHandles.asAddressVarHandle(_OPEN_PRINTER_PROPS_INFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszSheetName")));
    static final java.lang.invoke.VarHandle _OPEN_PRINTER_PROPS_INFOW$pszSheetName$VH() { return _OPEN_PRINTER_PROPS_INFOW$pszSheetName$VH_; }

    static final MemoryLayout _OPEN_PRINTER_PROPS_INFOW$uSheetIndex$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _OPEN_PRINTER_PROPS_INFOW$uSheetIndex$LAYOUT() { return _OPEN_PRINTER_PROPS_INFOW$uSheetIndex$LAYOUT_; }

    static final VarHandle _OPEN_PRINTER_PROPS_INFOW$uSheetIndex$VH_ = _OPEN_PRINTER_PROPS_INFOW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uSheetIndex"));
    static final java.lang.invoke.VarHandle _OPEN_PRINTER_PROPS_INFOW$uSheetIndex$VH() { return _OPEN_PRINTER_PROPS_INFOW$uSheetIndex$VH_; }

    static final MemoryLayout _OPEN_PRINTER_PROPS_INFOW$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _OPEN_PRINTER_PROPS_INFOW$dwFlags$LAYOUT() { return _OPEN_PRINTER_PROPS_INFOW$dwFlags$LAYOUT_; }

    static final VarHandle _OPEN_PRINTER_PROPS_INFOW$dwFlags$VH_ = _OPEN_PRINTER_PROPS_INFOW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _OPEN_PRINTER_PROPS_INFOW$dwFlags$VH() { return _OPEN_PRINTER_PROPS_INFOW$dwFlags$VH_; }

    static final MemoryLayout _OPEN_PRINTER_PROPS_INFOW$bModal$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _OPEN_PRINTER_PROPS_INFOW$bModal$LAYOUT() { return _OPEN_PRINTER_PROPS_INFOW$bModal$LAYOUT_; }

    static final VarHandle _OPEN_PRINTER_PROPS_INFOW$bModal$VH_ = _OPEN_PRINTER_PROPS_INFOW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bModal"));
    static final java.lang.invoke.VarHandle _OPEN_PRINTER_PROPS_INFOW$bModal$VH() { return _OPEN_PRINTER_PROPS_INFOW$bModal$VH_; }

    static final FunctionDescriptor SHLoadNonloadedIconOverlayIdentifiers$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor SHLoadNonloadedIconOverlayIdentifiers$FUNC() { return SHLoadNonloadedIconOverlayIdentifiers$FUNC_; }

    static final MethodHandle SHLoadNonloadedIconOverlayIdentifiers$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHLoadNonloadedIconOverlayIdentifiers",
        "()I",
        SHLoadNonloadedIconOverlayIdentifiers$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHLoadNonloadedIconOverlayIdentifiers$MH() { return SHLoadNonloadedIconOverlayIdentifiers$MH_; }

    static final FunctionDescriptor SHIsFileAvailableOffline$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHIsFileAvailableOffline$FUNC() { return SHIsFileAvailableOffline$FUNC_; }

    static final MethodHandle SHIsFileAvailableOffline$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHIsFileAvailableOffline",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SHIsFileAvailableOffline$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHIsFileAvailableOffline$MH() { return SHIsFileAvailableOffline$MH_; }

    static final FunctionDescriptor SHSetLocalizedName$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHSetLocalizedName$FUNC() { return SHSetLocalizedName$FUNC_; }

    static final MethodHandle SHSetLocalizedName$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHSetLocalizedName",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        SHSetLocalizedName$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHSetLocalizedName$MH() { return SHSetLocalizedName$MH_; }

    static final FunctionDescriptor SHRemoveLocalizedName$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHRemoveLocalizedName$FUNC() { return SHRemoveLocalizedName$FUNC_; }

    static final MethodHandle SHRemoveLocalizedName$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHRemoveLocalizedName",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SHRemoveLocalizedName$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHRemoveLocalizedName$MH() { return SHRemoveLocalizedName$MH_; }

    static final FunctionDescriptor SHGetLocalizedName$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHGetLocalizedName$FUNC() { return SHGetLocalizedName$FUNC_; }

    static final MethodHandle SHGetLocalizedName$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHGetLocalizedName",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        SHGetLocalizedName$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHGetLocalizedName$MH() { return SHGetLocalizedName$MH_; }

    static final FunctionDescriptor ShellMessageBoxA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor ShellMessageBoxA$FUNC() { return ShellMessageBoxA$FUNC_; }

    static final MethodHandle ShellMessageBoxA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ShellMessageBoxA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I[Ljava/lang/Object;)I",
        ShellMessageBoxA$FUNC_, true
    );
    static final java.lang.invoke.MethodHandle ShellMessageBoxA$MH() { return ShellMessageBoxA$MH_; }

    static final FunctionDescriptor ShellMessageBoxW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor ShellMessageBoxW$FUNC() { return ShellMessageBoxW$FUNC_; }

    static final MethodHandle ShellMessageBoxW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ShellMessageBoxW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I[Ljava/lang/Object;)I",
        ShellMessageBoxW$FUNC_, true
    );
    static final java.lang.invoke.MethodHandle ShellMessageBoxW$MH() { return ShellMessageBoxW$MH_; }

    static final FunctionDescriptor IsLFNDriveA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IsLFNDriveA$FUNC() { return IsLFNDriveA$FUNC_; }

    static final MethodHandle IsLFNDriveA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IsLFNDriveA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        IsLFNDriveA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IsLFNDriveA$MH() { return IsLFNDriveA$MH_; }

    static final FunctionDescriptor IsLFNDriveW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IsLFNDriveW$FUNC() { return IsLFNDriveW$FUNC_; }

    static final MethodHandle IsLFNDriveW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IsLFNDriveW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        IsLFNDriveW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IsLFNDriveW$MH() { return IsLFNDriveW$MH_; }

    static final FunctionDescriptor SHEnumerateUnreadMailAccountsA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHEnumerateUnreadMailAccountsA$FUNC() { return SHEnumerateUnreadMailAccountsA$FUNC_; }

    static final MethodHandle SHEnumerateUnreadMailAccountsA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHEnumerateUnreadMailAccountsA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        SHEnumerateUnreadMailAccountsA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHEnumerateUnreadMailAccountsA$MH() { return SHEnumerateUnreadMailAccountsA$MH_; }

    static final FunctionDescriptor SHEnumerateUnreadMailAccountsW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHEnumerateUnreadMailAccountsW$FUNC() { return SHEnumerateUnreadMailAccountsW$FUNC_; }

    static final MethodHandle SHEnumerateUnreadMailAccountsW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHEnumerateUnreadMailAccountsW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        SHEnumerateUnreadMailAccountsW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHEnumerateUnreadMailAccountsW$MH() { return SHEnumerateUnreadMailAccountsW$MH_; }

    static final FunctionDescriptor SHGetUnreadMailCountA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHGetUnreadMailCountA$FUNC() { return SHGetUnreadMailCountA$FUNC_; }

    static final MethodHandle SHGetUnreadMailCountA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHGetUnreadMailCountA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        SHGetUnreadMailCountA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHGetUnreadMailCountA$MH() { return SHGetUnreadMailCountA$MH_; }

    static final FunctionDescriptor SHGetUnreadMailCountW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHGetUnreadMailCountW$FUNC() { return SHGetUnreadMailCountW$FUNC_; }

    static final MethodHandle SHGetUnreadMailCountW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHGetUnreadMailCountW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        SHGetUnreadMailCountW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHGetUnreadMailCountW$MH() { return SHGetUnreadMailCountW$MH_; }

    static final FunctionDescriptor SHSetUnreadMailCountA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHSetUnreadMailCountA$FUNC() { return SHSetUnreadMailCountA$FUNC_; }

    static final MethodHandle SHSetUnreadMailCountA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHSetUnreadMailCountA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        SHSetUnreadMailCountA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHSetUnreadMailCountA$MH() { return SHSetUnreadMailCountA$MH_; }

    static final FunctionDescriptor SHSetUnreadMailCountW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHSetUnreadMailCountW$FUNC() { return SHSetUnreadMailCountW$FUNC_; }

    static final MethodHandle SHSetUnreadMailCountW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHSetUnreadMailCountW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        SHSetUnreadMailCountW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHSetUnreadMailCountW$MH() { return SHSetUnreadMailCountW$MH_; }

    static final FunctionDescriptor SHTestTokenMembership$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHTestTokenMembership$FUNC() { return SHTestTokenMembership$FUNC_; }

    static final MethodHandle SHTestTokenMembership$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHTestTokenMembership",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        SHTestTokenMembership$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHTestTokenMembership$MH() { return SHTestTokenMembership$MH_; }

    static final FunctionDescriptor SHGetImageList$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHGetImageList$FUNC() { return SHGetImageList$FUNC_; }

    static final MethodHandle SHGetImageList$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHGetImageList",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SHGetImageList$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHGetImageList$MH() { return SHGetImageList$MH_; }

    static final FunctionDescriptor InitNetworkAddressControl$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor InitNetworkAddressControl$FUNC() { return InitNetworkAddressControl$FUNC_; }

    static final MethodHandle InitNetworkAddressControl$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "InitNetworkAddressControl",
        "()I",
        InitNetworkAddressControl$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle InitNetworkAddressControl$MH() { return InitNetworkAddressControl$MH_; }

    static final MemoryLayout tagNC_ADDRESS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pAddrInfo"),
        C_SHORT.withName("PortNumber"),
        C_CHAR.withName("PrefixLength"),
        MemoryLayout.ofPaddingBits(40)
    ).withName("tagNC_ADDRESS");
    static final jdk.incubator.foreign.MemoryLayout tagNC_ADDRESS$struct$LAYOUT() { return tagNC_ADDRESS$struct$LAYOUT_; }

    static final MemoryLayout tagNC_ADDRESS$pAddrInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagNC_ADDRESS$pAddrInfo$LAYOUT() { return tagNC_ADDRESS$pAddrInfo$LAYOUT_; }

    static final VarHandle tagNC_ADDRESS$pAddrInfo$VH_ = MemoryHandles.asAddressVarHandle(tagNC_ADDRESS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pAddrInfo")));
    static final java.lang.invoke.VarHandle tagNC_ADDRESS$pAddrInfo$VH() { return tagNC_ADDRESS$pAddrInfo$VH_; }

    static final MemoryLayout tagNC_ADDRESS$PortNumber$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagNC_ADDRESS$PortNumber$LAYOUT() { return tagNC_ADDRESS$PortNumber$LAYOUT_; }

    static final VarHandle tagNC_ADDRESS$PortNumber$VH_ = tagNC_ADDRESS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("PortNumber"));
    static final java.lang.invoke.VarHandle tagNC_ADDRESS$PortNumber$VH() { return tagNC_ADDRESS$PortNumber$VH_; }

    static final MemoryLayout tagNC_ADDRESS$PrefixLength$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout tagNC_ADDRESS$PrefixLength$LAYOUT() { return tagNC_ADDRESS$PrefixLength$LAYOUT_; }

    static final VarHandle tagNC_ADDRESS$PrefixLength$VH_ = tagNC_ADDRESS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("PrefixLength"));
    static final java.lang.invoke.VarHandle tagNC_ADDRESS$PrefixLength$VH() { return tagNC_ADDRESS$PrefixLength$VH_; }

    static final FunctionDescriptor SHGetDriveMedia$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHGetDriveMedia$FUNC() { return SHGetDriveMedia$FUNC_; }

    static final MethodHandle SHGetDriveMedia$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHGetDriveMedia",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SHGetDriveMedia$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHGetDriveMedia$MH() { return SHGetDriveMedia$MH_; }

    static final MemoryLayout _PERF_DATA_BLOCK$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(4, C_SHORT).withName("Signature"),
        C_LONG.withName("LittleEndian"),
        C_LONG.withName("Version"),
        C_LONG.withName("Revision"),
        C_LONG.withName("TotalByteLength"),
        C_LONG.withName("HeaderLength"),
        C_LONG.withName("NumObjectTypes"),
        C_LONG.withName("DefaultObject"),
        MemoryLayout.ofStruct(
            C_SHORT.withName("wYear"),
            C_SHORT.withName("wMonth"),
            C_SHORT.withName("wDayOfWeek"),
            C_SHORT.withName("wDay"),
            C_SHORT.withName("wHour"),
            C_SHORT.withName("wMinute"),
            C_SHORT.withName("wSecond"),
            C_SHORT.withName("wMilliseconds")
        ).withName("SystemTime"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("PerfTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("PerfFreq"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("PerfTime100nSec"),
        C_LONG.withName("SystemNameLength"),
        C_LONG.withName("SystemNameOffset")
    ).withName("_PERF_DATA_BLOCK");
    static final jdk.incubator.foreign.MemoryLayout _PERF_DATA_BLOCK$struct$LAYOUT() { return _PERF_DATA_BLOCK$struct$LAYOUT_; }

    static final MemoryLayout _PERF_DATA_BLOCK$LittleEndian$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_DATA_BLOCK$LittleEndian$LAYOUT() { return _PERF_DATA_BLOCK$LittleEndian$LAYOUT_; }

    static final VarHandle _PERF_DATA_BLOCK$LittleEndian$VH_ = _PERF_DATA_BLOCK$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LittleEndian"));
    static final java.lang.invoke.VarHandle _PERF_DATA_BLOCK$LittleEndian$VH() { return _PERF_DATA_BLOCK$LittleEndian$VH_; }

    static final MemoryLayout _PERF_DATA_BLOCK$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_DATA_BLOCK$Version$LAYOUT() { return _PERF_DATA_BLOCK$Version$LAYOUT_; }

    static final VarHandle _PERF_DATA_BLOCK$Version$VH_ = _PERF_DATA_BLOCK$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _PERF_DATA_BLOCK$Version$VH() { return _PERF_DATA_BLOCK$Version$VH_; }

    static final MemoryLayout _PERF_DATA_BLOCK$Revision$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_DATA_BLOCK$Revision$LAYOUT() { return _PERF_DATA_BLOCK$Revision$LAYOUT_; }

    static final VarHandle _PERF_DATA_BLOCK$Revision$VH_ = _PERF_DATA_BLOCK$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Revision"));
    static final java.lang.invoke.VarHandle _PERF_DATA_BLOCK$Revision$VH() { return _PERF_DATA_BLOCK$Revision$VH_; }

    static final MemoryLayout _PERF_DATA_BLOCK$TotalByteLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_DATA_BLOCK$TotalByteLength$LAYOUT() { return _PERF_DATA_BLOCK$TotalByteLength$LAYOUT_; }

    static final VarHandle _PERF_DATA_BLOCK$TotalByteLength$VH_ = _PERF_DATA_BLOCK$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TotalByteLength"));
    static final java.lang.invoke.VarHandle _PERF_DATA_BLOCK$TotalByteLength$VH() { return _PERF_DATA_BLOCK$TotalByteLength$VH_; }

    static final MemoryLayout _PERF_DATA_BLOCK$HeaderLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_DATA_BLOCK$HeaderLength$LAYOUT() { return _PERF_DATA_BLOCK$HeaderLength$LAYOUT_; }

    static final VarHandle _PERF_DATA_BLOCK$HeaderLength$VH_ = _PERF_DATA_BLOCK$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("HeaderLength"));
    static final java.lang.invoke.VarHandle _PERF_DATA_BLOCK$HeaderLength$VH() { return _PERF_DATA_BLOCK$HeaderLength$VH_; }

    static final MemoryLayout _PERF_DATA_BLOCK$NumObjectTypes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_DATA_BLOCK$NumObjectTypes$LAYOUT() { return _PERF_DATA_BLOCK$NumObjectTypes$LAYOUT_; }

    static final VarHandle _PERF_DATA_BLOCK$NumObjectTypes$VH_ = _PERF_DATA_BLOCK$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumObjectTypes"));
    static final java.lang.invoke.VarHandle _PERF_DATA_BLOCK$NumObjectTypes$VH() { return _PERF_DATA_BLOCK$NumObjectTypes$VH_; }

    static final MemoryLayout _PERF_DATA_BLOCK$DefaultObject$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_DATA_BLOCK$DefaultObject$LAYOUT() { return _PERF_DATA_BLOCK$DefaultObject$LAYOUT_; }

    static final VarHandle _PERF_DATA_BLOCK$DefaultObject$VH_ = _PERF_DATA_BLOCK$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DefaultObject"));
    static final java.lang.invoke.VarHandle _PERF_DATA_BLOCK$DefaultObject$VH() { return _PERF_DATA_BLOCK$DefaultObject$VH_; }

    static final MemoryLayout _PERF_DATA_BLOCK$SystemNameLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_DATA_BLOCK$SystemNameLength$LAYOUT() { return _PERF_DATA_BLOCK$SystemNameLength$LAYOUT_; }

    static final VarHandle _PERF_DATA_BLOCK$SystemNameLength$VH_ = _PERF_DATA_BLOCK$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SystemNameLength"));
    static final java.lang.invoke.VarHandle _PERF_DATA_BLOCK$SystemNameLength$VH() { return _PERF_DATA_BLOCK$SystemNameLength$VH_; }

    static final MemoryLayout _PERF_DATA_BLOCK$SystemNameOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_DATA_BLOCK$SystemNameOffset$LAYOUT() { return _PERF_DATA_BLOCK$SystemNameOffset$LAYOUT_; }

    static final VarHandle _PERF_DATA_BLOCK$SystemNameOffset$VH_ = _PERF_DATA_BLOCK$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SystemNameOffset"));
    static final java.lang.invoke.VarHandle _PERF_DATA_BLOCK$SystemNameOffset$VH() { return _PERF_DATA_BLOCK$SystemNameOffset$VH_; }

    static final MemoryLayout _PERF_OBJECT_TYPE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("TotalByteLength"),
        C_LONG.withName("DefinitionLength"),
        C_LONG.withName("HeaderLength"),
        C_LONG.withName("ObjectNameTitleIndex"),
        C_LONG.withName("ObjectNameTitle"),
        C_LONG.withName("ObjectHelpTitleIndex"),
        C_LONG.withName("ObjectHelpTitle"),
        C_LONG.withName("DetailLevel"),
        C_LONG.withName("NumCounters"),
        C_LONG.withName("DefaultCounter"),
        C_LONG.withName("NumInstances"),
        C_LONG.withName("CodePage"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("PerfTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("PerfFreq")
    ).withName("_PERF_OBJECT_TYPE");
    static final jdk.incubator.foreign.MemoryLayout _PERF_OBJECT_TYPE$struct$LAYOUT() { return _PERF_OBJECT_TYPE$struct$LAYOUT_; }

    static final MemoryLayout _PERF_OBJECT_TYPE$TotalByteLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_OBJECT_TYPE$TotalByteLength$LAYOUT() { return _PERF_OBJECT_TYPE$TotalByteLength$LAYOUT_; }

    static final VarHandle _PERF_OBJECT_TYPE$TotalByteLength$VH_ = _PERF_OBJECT_TYPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TotalByteLength"));
    static final java.lang.invoke.VarHandle _PERF_OBJECT_TYPE$TotalByteLength$VH() { return _PERF_OBJECT_TYPE$TotalByteLength$VH_; }

    static final MemoryLayout _PERF_OBJECT_TYPE$DefinitionLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_OBJECT_TYPE$DefinitionLength$LAYOUT() { return _PERF_OBJECT_TYPE$DefinitionLength$LAYOUT_; }

    static final VarHandle _PERF_OBJECT_TYPE$DefinitionLength$VH_ = _PERF_OBJECT_TYPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DefinitionLength"));
    static final java.lang.invoke.VarHandle _PERF_OBJECT_TYPE$DefinitionLength$VH() { return _PERF_OBJECT_TYPE$DefinitionLength$VH_; }

    static final MemoryLayout _PERF_OBJECT_TYPE$HeaderLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_OBJECT_TYPE$HeaderLength$LAYOUT() { return _PERF_OBJECT_TYPE$HeaderLength$LAYOUT_; }

    static final VarHandle _PERF_OBJECT_TYPE$HeaderLength$VH_ = _PERF_OBJECT_TYPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("HeaderLength"));
    static final java.lang.invoke.VarHandle _PERF_OBJECT_TYPE$HeaderLength$VH() { return _PERF_OBJECT_TYPE$HeaderLength$VH_; }

    static final MemoryLayout _PERF_OBJECT_TYPE$ObjectNameTitleIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_OBJECT_TYPE$ObjectNameTitleIndex$LAYOUT() { return _PERF_OBJECT_TYPE$ObjectNameTitleIndex$LAYOUT_; }

    static final VarHandle _PERF_OBJECT_TYPE$ObjectNameTitleIndex$VH_ = _PERF_OBJECT_TYPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ObjectNameTitleIndex"));
    static final java.lang.invoke.VarHandle _PERF_OBJECT_TYPE$ObjectNameTitleIndex$VH() { return _PERF_OBJECT_TYPE$ObjectNameTitleIndex$VH_; }

    static final MemoryLayout _PERF_OBJECT_TYPE$ObjectNameTitle$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_OBJECT_TYPE$ObjectNameTitle$LAYOUT() { return _PERF_OBJECT_TYPE$ObjectNameTitle$LAYOUT_; }

    static final VarHandle _PERF_OBJECT_TYPE$ObjectNameTitle$VH_ = _PERF_OBJECT_TYPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ObjectNameTitle"));
    static final java.lang.invoke.VarHandle _PERF_OBJECT_TYPE$ObjectNameTitle$VH() { return _PERF_OBJECT_TYPE$ObjectNameTitle$VH_; }

    static final MemoryLayout _PERF_OBJECT_TYPE$ObjectHelpTitleIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_OBJECT_TYPE$ObjectHelpTitleIndex$LAYOUT() { return _PERF_OBJECT_TYPE$ObjectHelpTitleIndex$LAYOUT_; }

    static final VarHandle _PERF_OBJECT_TYPE$ObjectHelpTitleIndex$VH_ = _PERF_OBJECT_TYPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ObjectHelpTitleIndex"));
    static final java.lang.invoke.VarHandle _PERF_OBJECT_TYPE$ObjectHelpTitleIndex$VH() { return _PERF_OBJECT_TYPE$ObjectHelpTitleIndex$VH_; }

    static final MemoryLayout _PERF_OBJECT_TYPE$ObjectHelpTitle$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_OBJECT_TYPE$ObjectHelpTitle$LAYOUT() { return _PERF_OBJECT_TYPE$ObjectHelpTitle$LAYOUT_; }

    static final VarHandle _PERF_OBJECT_TYPE$ObjectHelpTitle$VH_ = _PERF_OBJECT_TYPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ObjectHelpTitle"));
    static final java.lang.invoke.VarHandle _PERF_OBJECT_TYPE$ObjectHelpTitle$VH() { return _PERF_OBJECT_TYPE$ObjectHelpTitle$VH_; }

    static final MemoryLayout _PERF_OBJECT_TYPE$DetailLevel$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_OBJECT_TYPE$DetailLevel$LAYOUT() { return _PERF_OBJECT_TYPE$DetailLevel$LAYOUT_; }

    static final VarHandle _PERF_OBJECT_TYPE$DetailLevel$VH_ = _PERF_OBJECT_TYPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DetailLevel"));
    static final java.lang.invoke.VarHandle _PERF_OBJECT_TYPE$DetailLevel$VH() { return _PERF_OBJECT_TYPE$DetailLevel$VH_; }

    static final MemoryLayout _PERF_OBJECT_TYPE$NumCounters$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_OBJECT_TYPE$NumCounters$LAYOUT() { return _PERF_OBJECT_TYPE$NumCounters$LAYOUT_; }

    static final VarHandle _PERF_OBJECT_TYPE$NumCounters$VH_ = _PERF_OBJECT_TYPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumCounters"));
    static final java.lang.invoke.VarHandle _PERF_OBJECT_TYPE$NumCounters$VH() { return _PERF_OBJECT_TYPE$NumCounters$VH_; }

    static final MemoryLayout _PERF_OBJECT_TYPE$DefaultCounter$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_OBJECT_TYPE$DefaultCounter$LAYOUT() { return _PERF_OBJECT_TYPE$DefaultCounter$LAYOUT_; }

    static final VarHandle _PERF_OBJECT_TYPE$DefaultCounter$VH_ = _PERF_OBJECT_TYPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DefaultCounter"));
    static final java.lang.invoke.VarHandle _PERF_OBJECT_TYPE$DefaultCounter$VH() { return _PERF_OBJECT_TYPE$DefaultCounter$VH_; }

    static final MemoryLayout _PERF_OBJECT_TYPE$NumInstances$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_OBJECT_TYPE$NumInstances$LAYOUT() { return _PERF_OBJECT_TYPE$NumInstances$LAYOUT_; }

    static final VarHandle _PERF_OBJECT_TYPE$NumInstances$VH_ = _PERF_OBJECT_TYPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumInstances"));
    static final java.lang.invoke.VarHandle _PERF_OBJECT_TYPE$NumInstances$VH() { return _PERF_OBJECT_TYPE$NumInstances$VH_; }

    static final MemoryLayout _PERF_OBJECT_TYPE$CodePage$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_OBJECT_TYPE$CodePage$LAYOUT() { return _PERF_OBJECT_TYPE$CodePage$LAYOUT_; }

    static final VarHandle _PERF_OBJECT_TYPE$CodePage$VH_ = _PERF_OBJECT_TYPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CodePage"));
    static final java.lang.invoke.VarHandle _PERF_OBJECT_TYPE$CodePage$VH() { return _PERF_OBJECT_TYPE$CodePage$VH_; }

    static final MemoryLayout _PERF_COUNTER_DEFINITION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ByteLength"),
        C_LONG.withName("CounterNameTitleIndex"),
        C_LONG.withName("CounterNameTitle"),
        C_LONG.withName("CounterHelpTitleIndex"),
        C_LONG.withName("CounterHelpTitle"),
        C_LONG.withName("DefaultScale"),
        C_LONG.withName("DetailLevel"),
        C_LONG.withName("CounterType"),
        C_LONG.withName("CounterSize"),
        C_LONG.withName("CounterOffset")
    ).withName("_PERF_COUNTER_DEFINITION");
    static final jdk.incubator.foreign.MemoryLayout _PERF_COUNTER_DEFINITION$struct$LAYOUT() { return _PERF_COUNTER_DEFINITION$struct$LAYOUT_; }

    static final MemoryLayout _PERF_COUNTER_DEFINITION$ByteLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_COUNTER_DEFINITION$ByteLength$LAYOUT() { return _PERF_COUNTER_DEFINITION$ByteLength$LAYOUT_; }

    static final VarHandle _PERF_COUNTER_DEFINITION$ByteLength$VH_ = _PERF_COUNTER_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ByteLength"));
    static final java.lang.invoke.VarHandle _PERF_COUNTER_DEFINITION$ByteLength$VH() { return _PERF_COUNTER_DEFINITION$ByteLength$VH_; }

    static final MemoryLayout _PERF_COUNTER_DEFINITION$CounterNameTitleIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_COUNTER_DEFINITION$CounterNameTitleIndex$LAYOUT() { return _PERF_COUNTER_DEFINITION$CounterNameTitleIndex$LAYOUT_; }

    static final VarHandle _PERF_COUNTER_DEFINITION$CounterNameTitleIndex$VH_ = _PERF_COUNTER_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CounterNameTitleIndex"));
    static final java.lang.invoke.VarHandle _PERF_COUNTER_DEFINITION$CounterNameTitleIndex$VH() { return _PERF_COUNTER_DEFINITION$CounterNameTitleIndex$VH_; }

    static final MemoryLayout _PERF_COUNTER_DEFINITION$CounterNameTitle$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_COUNTER_DEFINITION$CounterNameTitle$LAYOUT() { return _PERF_COUNTER_DEFINITION$CounterNameTitle$LAYOUT_; }

    static final VarHandle _PERF_COUNTER_DEFINITION$CounterNameTitle$VH_ = _PERF_COUNTER_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CounterNameTitle"));
    static final java.lang.invoke.VarHandle _PERF_COUNTER_DEFINITION$CounterNameTitle$VH() { return _PERF_COUNTER_DEFINITION$CounterNameTitle$VH_; }

    static final MemoryLayout _PERF_COUNTER_DEFINITION$CounterHelpTitleIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_COUNTER_DEFINITION$CounterHelpTitleIndex$LAYOUT() { return _PERF_COUNTER_DEFINITION$CounterHelpTitleIndex$LAYOUT_; }

    static final VarHandle _PERF_COUNTER_DEFINITION$CounterHelpTitleIndex$VH_ = _PERF_COUNTER_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CounterHelpTitleIndex"));
    static final java.lang.invoke.VarHandle _PERF_COUNTER_DEFINITION$CounterHelpTitleIndex$VH() { return _PERF_COUNTER_DEFINITION$CounterHelpTitleIndex$VH_; }

    static final MemoryLayout _PERF_COUNTER_DEFINITION$CounterHelpTitle$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_COUNTER_DEFINITION$CounterHelpTitle$LAYOUT() { return _PERF_COUNTER_DEFINITION$CounterHelpTitle$LAYOUT_; }

    static final VarHandle _PERF_COUNTER_DEFINITION$CounterHelpTitle$VH_ = _PERF_COUNTER_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CounterHelpTitle"));
    static final java.lang.invoke.VarHandle _PERF_COUNTER_DEFINITION$CounterHelpTitle$VH() { return _PERF_COUNTER_DEFINITION$CounterHelpTitle$VH_; }

    static final MemoryLayout _PERF_COUNTER_DEFINITION$DefaultScale$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_COUNTER_DEFINITION$DefaultScale$LAYOUT() { return _PERF_COUNTER_DEFINITION$DefaultScale$LAYOUT_; }

    static final VarHandle _PERF_COUNTER_DEFINITION$DefaultScale$VH_ = _PERF_COUNTER_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DefaultScale"));
    static final java.lang.invoke.VarHandle _PERF_COUNTER_DEFINITION$DefaultScale$VH() { return _PERF_COUNTER_DEFINITION$DefaultScale$VH_; }

    static final MemoryLayout _PERF_COUNTER_DEFINITION$DetailLevel$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_COUNTER_DEFINITION$DetailLevel$LAYOUT() { return _PERF_COUNTER_DEFINITION$DetailLevel$LAYOUT_; }

    static final VarHandle _PERF_COUNTER_DEFINITION$DetailLevel$VH_ = _PERF_COUNTER_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DetailLevel"));
    static final java.lang.invoke.VarHandle _PERF_COUNTER_DEFINITION$DetailLevel$VH() { return _PERF_COUNTER_DEFINITION$DetailLevel$VH_; }

    static final MemoryLayout _PERF_COUNTER_DEFINITION$CounterType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_COUNTER_DEFINITION$CounterType$LAYOUT() { return _PERF_COUNTER_DEFINITION$CounterType$LAYOUT_; }

    static final VarHandle _PERF_COUNTER_DEFINITION$CounterType$VH_ = _PERF_COUNTER_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CounterType"));
    static final java.lang.invoke.VarHandle _PERF_COUNTER_DEFINITION$CounterType$VH() { return _PERF_COUNTER_DEFINITION$CounterType$VH_; }

    static final MemoryLayout _PERF_COUNTER_DEFINITION$CounterSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_COUNTER_DEFINITION$CounterSize$LAYOUT() { return _PERF_COUNTER_DEFINITION$CounterSize$LAYOUT_; }

    static final VarHandle _PERF_COUNTER_DEFINITION$CounterSize$VH_ = _PERF_COUNTER_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CounterSize"));
    static final java.lang.invoke.VarHandle _PERF_COUNTER_DEFINITION$CounterSize$VH() { return _PERF_COUNTER_DEFINITION$CounterSize$VH_; }

    static final MemoryLayout _PERF_COUNTER_DEFINITION$CounterOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_COUNTER_DEFINITION$CounterOffset$LAYOUT() { return _PERF_COUNTER_DEFINITION$CounterOffset$LAYOUT_; }

    static final VarHandle _PERF_COUNTER_DEFINITION$CounterOffset$VH_ = _PERF_COUNTER_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CounterOffset"));
    static final java.lang.invoke.VarHandle _PERF_COUNTER_DEFINITION$CounterOffset$VH() { return _PERF_COUNTER_DEFINITION$CounterOffset$VH_; }

    static final MemoryLayout _PERF_INSTANCE_DEFINITION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ByteLength"),
        C_LONG.withName("ParentObjectTitleIndex"),
        C_LONG.withName("ParentObjectInstance"),
        C_LONG.withName("UniqueID"),
        C_LONG.withName("NameOffset"),
        C_LONG.withName("NameLength")
    ).withName("_PERF_INSTANCE_DEFINITION");
    static final jdk.incubator.foreign.MemoryLayout _PERF_INSTANCE_DEFINITION$struct$LAYOUT() { return _PERF_INSTANCE_DEFINITION$struct$LAYOUT_; }

    static final MemoryLayout _PERF_INSTANCE_DEFINITION$ByteLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_INSTANCE_DEFINITION$ByteLength$LAYOUT() { return _PERF_INSTANCE_DEFINITION$ByteLength$LAYOUT_; }

    static final VarHandle _PERF_INSTANCE_DEFINITION$ByteLength$VH_ = _PERF_INSTANCE_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ByteLength"));
    static final java.lang.invoke.VarHandle _PERF_INSTANCE_DEFINITION$ByteLength$VH() { return _PERF_INSTANCE_DEFINITION$ByteLength$VH_; }

    static final MemoryLayout _PERF_INSTANCE_DEFINITION$ParentObjectTitleIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_INSTANCE_DEFINITION$ParentObjectTitleIndex$LAYOUT() { return _PERF_INSTANCE_DEFINITION$ParentObjectTitleIndex$LAYOUT_; }

    static final VarHandle _PERF_INSTANCE_DEFINITION$ParentObjectTitleIndex$VH_ = _PERF_INSTANCE_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ParentObjectTitleIndex"));
    static final java.lang.invoke.VarHandle _PERF_INSTANCE_DEFINITION$ParentObjectTitleIndex$VH() { return _PERF_INSTANCE_DEFINITION$ParentObjectTitleIndex$VH_; }

    static final MemoryLayout _PERF_INSTANCE_DEFINITION$ParentObjectInstance$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_INSTANCE_DEFINITION$ParentObjectInstance$LAYOUT() { return _PERF_INSTANCE_DEFINITION$ParentObjectInstance$LAYOUT_; }

    static final VarHandle _PERF_INSTANCE_DEFINITION$ParentObjectInstance$VH_ = _PERF_INSTANCE_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ParentObjectInstance"));
    static final java.lang.invoke.VarHandle _PERF_INSTANCE_DEFINITION$ParentObjectInstance$VH() { return _PERF_INSTANCE_DEFINITION$ParentObjectInstance$VH_; }

    static final MemoryLayout _PERF_INSTANCE_DEFINITION$UniqueID$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_INSTANCE_DEFINITION$UniqueID$LAYOUT() { return _PERF_INSTANCE_DEFINITION$UniqueID$LAYOUT_; }

    static final VarHandle _PERF_INSTANCE_DEFINITION$UniqueID$VH_ = _PERF_INSTANCE_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("UniqueID"));
    static final java.lang.invoke.VarHandle _PERF_INSTANCE_DEFINITION$UniqueID$VH() { return _PERF_INSTANCE_DEFINITION$UniqueID$VH_; }

    static final MemoryLayout _PERF_INSTANCE_DEFINITION$NameOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_INSTANCE_DEFINITION$NameOffset$LAYOUT() { return _PERF_INSTANCE_DEFINITION$NameOffset$LAYOUT_; }

    static final VarHandle _PERF_INSTANCE_DEFINITION$NameOffset$VH_ = _PERF_INSTANCE_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NameOffset"));
    static final java.lang.invoke.VarHandle _PERF_INSTANCE_DEFINITION$NameOffset$VH() { return _PERF_INSTANCE_DEFINITION$NameOffset$VH_; }

    static final MemoryLayout _PERF_INSTANCE_DEFINITION$NameLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_INSTANCE_DEFINITION$NameLength$LAYOUT() { return _PERF_INSTANCE_DEFINITION$NameLength$LAYOUT_; }

    static final VarHandle _PERF_INSTANCE_DEFINITION$NameLength$VH_ = _PERF_INSTANCE_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NameLength"));
    static final java.lang.invoke.VarHandle _PERF_INSTANCE_DEFINITION$NameLength$VH() { return _PERF_INSTANCE_DEFINITION$NameLength$VH_; }

    static final MemoryLayout _PERF_COUNTER_BLOCK$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ByteLength")
    ).withName("_PERF_COUNTER_BLOCK");
    static final jdk.incubator.foreign.MemoryLayout _PERF_COUNTER_BLOCK$struct$LAYOUT() { return _PERF_COUNTER_BLOCK$struct$LAYOUT_; }

    static final MemoryLayout _PERF_COUNTER_BLOCK$ByteLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERF_COUNTER_BLOCK$ByteLength$LAYOUT() { return _PERF_COUNTER_BLOCK$ByteLength$LAYOUT_; }

    static final VarHandle _PERF_COUNTER_BLOCK$ByteLength$VH_ = _PERF_COUNTER_BLOCK$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ByteLength"));
    static final java.lang.invoke.VarHandle _PERF_COUNTER_BLOCK$ByteLength$VH() { return _PERF_COUNTER_BLOCK$ByteLength$VH_; }

    static final MemoryLayout fd_set$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("fd_count"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofSequence(64, C_LONGLONG).withName("fd_array")
    ).withName("fd_set");
    static final jdk.incubator.foreign.MemoryLayout fd_set$struct$LAYOUT() { return fd_set$struct$LAYOUT_; }

    static final MemoryLayout fd_set$fd_count$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout fd_set$fd_count$LAYOUT() { return fd_set$fd_count$LAYOUT_; }

    static final VarHandle fd_set$fd_count$VH_ = fd_set$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fd_count"));
    static final java.lang.invoke.VarHandle fd_set$fd_count$VH() { return fd_set$fd_count$VH_; }

    static final FunctionDescriptor __WSAFDIsSet$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor __WSAFDIsSet$FUNC() { return __WSAFDIsSet$FUNC_; }

    static final MethodHandle __WSAFDIsSet$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__WSAFDIsSet",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        __WSAFDIsSet$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __WSAFDIsSet$MH() { return __WSAFDIsSet$MH_; }

    static final MemoryLayout timeval$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("tv_sec"),
        C_LONG.withName("tv_usec")
    ).withName("timeval");
    static final jdk.incubator.foreign.MemoryLayout timeval$struct$LAYOUT() { return timeval$struct$LAYOUT_; }

    static final MemoryLayout timeval$tv_sec$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout timeval$tv_sec$LAYOUT() { return timeval$tv_sec$LAYOUT_; }

    static final VarHandle timeval$tv_sec$VH_ = timeval$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tv_sec"));
    static final java.lang.invoke.VarHandle timeval$tv_sec$VH() { return timeval$tv_sec$VH_; }

    static final MemoryLayout timeval$tv_usec$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout timeval$tv_usec$LAYOUT() { return timeval$tv_usec$LAYOUT_; }

    static final VarHandle timeval$tv_usec$VH_ = timeval$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tv_usec"));
    static final java.lang.invoke.VarHandle timeval$tv_usec$VH() { return timeval$tv_usec$VH_; }

    static final MemoryLayout hostent$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("h_name"),
        C_POINTER.withName("h_aliases"),
        C_SHORT.withName("h_addrtype"),
        C_SHORT.withName("h_length"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("h_addr_list")
    ).withName("hostent");
    static final jdk.incubator.foreign.MemoryLayout hostent$struct$LAYOUT() { return hostent$struct$LAYOUT_; }

    static final MemoryLayout hostent$h_name$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout hostent$h_name$LAYOUT() { return hostent$h_name$LAYOUT_; }

    static final VarHandle hostent$h_name$VH_ = MemoryHandles.asAddressVarHandle(hostent$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("h_name")));
    static final java.lang.invoke.VarHandle hostent$h_name$VH() { return hostent$h_name$VH_; }

    static final MemoryLayout hostent$h_aliases$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout hostent$h_aliases$LAYOUT() { return hostent$h_aliases$LAYOUT_; }

    static final VarHandle hostent$h_aliases$VH_ = MemoryHandles.asAddressVarHandle(hostent$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("h_aliases")));
    static final java.lang.invoke.VarHandle hostent$h_aliases$VH() { return hostent$h_aliases$VH_; }

    static final MemoryLayout hostent$h_addrtype$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout hostent$h_addrtype$LAYOUT() { return hostent$h_addrtype$LAYOUT_; }

    static final VarHandle hostent$h_addrtype$VH_ = hostent$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("h_addrtype"));
    static final java.lang.invoke.VarHandle hostent$h_addrtype$VH() { return hostent$h_addrtype$VH_; }

    static final MemoryLayout hostent$h_length$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout hostent$h_length$LAYOUT() { return hostent$h_length$LAYOUT_; }

    static final VarHandle hostent$h_length$VH_ = hostent$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("h_length"));
    static final java.lang.invoke.VarHandle hostent$h_length$VH() { return hostent$h_length$VH_; }

    static final MemoryLayout hostent$h_addr_list$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout hostent$h_addr_list$LAYOUT() { return hostent$h_addr_list$LAYOUT_; }

    static final VarHandle hostent$h_addr_list$VH_ = MemoryHandles.asAddressVarHandle(hostent$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("h_addr_list")));
    static final java.lang.invoke.VarHandle hostent$h_addr_list$VH() { return hostent$h_addr_list$VH_; }

    static final MemoryLayout netent$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("n_name"),
        C_POINTER.withName("n_aliases"),
        C_SHORT.withName("n_addrtype"),
        MemoryLayout.ofPaddingBits(16),
        C_LONG.withName("n_net")
    ).withName("netent");
    static final jdk.incubator.foreign.MemoryLayout netent$struct$LAYOUT() { return netent$struct$LAYOUT_; }

    static final MemoryLayout netent$n_name$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout netent$n_name$LAYOUT() { return netent$n_name$LAYOUT_; }

    static final VarHandle netent$n_name$VH_ = MemoryHandles.asAddressVarHandle(netent$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("n_name")));
    static final java.lang.invoke.VarHandle netent$n_name$VH() { return netent$n_name$VH_; }

    static final MemoryLayout netent$n_aliases$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout netent$n_aliases$LAYOUT() { return netent$n_aliases$LAYOUT_; }

    static final VarHandle netent$n_aliases$VH_ = MemoryHandles.asAddressVarHandle(netent$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("n_aliases")));
    static final java.lang.invoke.VarHandle netent$n_aliases$VH() { return netent$n_aliases$VH_; }

    static final MemoryLayout netent$n_addrtype$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout netent$n_addrtype$LAYOUT() { return netent$n_addrtype$LAYOUT_; }

    static final VarHandle netent$n_addrtype$VH_ = netent$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("n_addrtype"));
    static final java.lang.invoke.VarHandle netent$n_addrtype$VH() { return netent$n_addrtype$VH_; }

    static final MemoryLayout netent$n_net$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout netent$n_net$LAYOUT() { return netent$n_net$LAYOUT_; }

    static final VarHandle netent$n_net$VH_ = netent$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("n_net"));
    static final java.lang.invoke.VarHandle netent$n_net$VH() { return netent$n_net$VH_; }

    static final MemoryLayout servent$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("s_name"),
        C_POINTER.withName("s_aliases"),
        C_POINTER.withName("s_proto"),
        C_SHORT.withName("s_port"),
        MemoryLayout.ofPaddingBits(48)
    ).withName("servent");
    static final jdk.incubator.foreign.MemoryLayout servent$struct$LAYOUT() { return servent$struct$LAYOUT_; }

    static final MemoryLayout servent$s_name$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout servent$s_name$LAYOUT() { return servent$s_name$LAYOUT_; }

    static final VarHandle servent$s_name$VH_ = MemoryHandles.asAddressVarHandle(servent$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("s_name")));
    static final java.lang.invoke.VarHandle servent$s_name$VH() { return servent$s_name$VH_; }

    static final MemoryLayout servent$s_aliases$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout servent$s_aliases$LAYOUT() { return servent$s_aliases$LAYOUT_; }

    static final VarHandle servent$s_aliases$VH_ = MemoryHandles.asAddressVarHandle(servent$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("s_aliases")));
    static final java.lang.invoke.VarHandle servent$s_aliases$VH() { return servent$s_aliases$VH_; }

    static final MemoryLayout servent$s_proto$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout servent$s_proto$LAYOUT() { return servent$s_proto$LAYOUT_; }

    static final VarHandle servent$s_proto$VH_ = MemoryHandles.asAddressVarHandle(servent$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("s_proto")));
    static final java.lang.invoke.VarHandle servent$s_proto$VH() { return servent$s_proto$VH_; }

    static final MemoryLayout servent$s_port$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout servent$s_port$LAYOUT() { return servent$s_port$LAYOUT_; }

    static final VarHandle servent$s_port$VH_ = servent$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("s_port"));
    static final java.lang.invoke.VarHandle servent$s_port$VH() { return servent$s_port$VH_; }

    static final MemoryLayout protoent$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("p_name"),
        C_POINTER.withName("p_aliases"),
        C_SHORT.withName("p_proto"),
        MemoryLayout.ofPaddingBits(48)
    ).withName("protoent");
    static final jdk.incubator.foreign.MemoryLayout protoent$struct$LAYOUT() { return protoent$struct$LAYOUT_; }

    static final MemoryLayout protoent$p_name$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout protoent$p_name$LAYOUT() { return protoent$p_name$LAYOUT_; }

    static final VarHandle protoent$p_name$VH_ = MemoryHandles.asAddressVarHandle(protoent$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("p_name")));
    static final java.lang.invoke.VarHandle protoent$p_name$VH() { return protoent$p_name$VH_; }

    static final MemoryLayout protoent$p_aliases$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout protoent$p_aliases$LAYOUT() { return protoent$p_aliases$LAYOUT_; }

    static final VarHandle protoent$p_aliases$VH_ = MemoryHandles.asAddressVarHandle(protoent$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("p_aliases")));
    static final java.lang.invoke.VarHandle protoent$p_aliases$VH() { return protoent$p_aliases$VH_; }

    static final MemoryLayout protoent$p_proto$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout protoent$p_proto$LAYOUT() { return protoent$p_proto$LAYOUT_; }

    static final VarHandle protoent$p_proto$VH_ = protoent$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("p_proto"));
    static final java.lang.invoke.VarHandle protoent$p_proto$VH() { return protoent$p_proto$VH_; }

    static final MemoryLayout in_addr$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            MemoryLayout.ofStruct(
                C_CHAR.withName("s_b1"),
                C_CHAR.withName("s_b2"),
                C_CHAR.withName("s_b3"),
                C_CHAR.withName("s_b4")
            ).withName("S_un_b"),
            MemoryLayout.ofStruct(
                C_SHORT.withName("s_w1"),
                C_SHORT.withName("s_w2")
            ).withName("S_un_w"),
            C_LONG.withName("S_addr")
        ).withName("S_un")
    ).withName("in_addr");
    static final jdk.incubator.foreign.MemoryLayout in_addr$struct$LAYOUT() { return in_addr$struct$LAYOUT_; }

    static final MemoryLayout S_un$struct$LAYOUT_ = MemoryLayout.ofUnion(
        MemoryLayout.ofStruct(
            C_CHAR.withName("s_b1"),
            C_CHAR.withName("s_b2"),
            C_CHAR.withName("s_b3"),
            C_CHAR.withName("s_b4")
        ).withName("S_un_b"),
        MemoryLayout.ofStruct(
            C_SHORT.withName("s_w1"),
            C_SHORT.withName("s_w2")
        ).withName("S_un_w"),
        C_LONG.withName("S_addr")
    );
    static final jdk.incubator.foreign.MemoryLayout S_un$struct$LAYOUT() { return S_un$struct$LAYOUT_; }

    static final MemoryLayout S_un_b$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("s_b1"),
        C_CHAR.withName("s_b2"),
        C_CHAR.withName("s_b3"),
        C_CHAR.withName("s_b4")
    );
    static final jdk.incubator.foreign.MemoryLayout S_un_b$struct$LAYOUT() { return S_un_b$struct$LAYOUT_; }

    static final MemoryLayout S_un_b$s_b1$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout S_un_b$s_b1$LAYOUT() { return S_un_b$s_b1$LAYOUT_; }

    static final VarHandle S_un_b$s_b1$VH_ = S_un_b$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("s_b1"));
    static final java.lang.invoke.VarHandle S_un_b$s_b1$VH() { return S_un_b$s_b1$VH_; }

    static final MemoryLayout S_un_b$s_b2$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout S_un_b$s_b2$LAYOUT() { return S_un_b$s_b2$LAYOUT_; }

    static final VarHandle S_un_b$s_b2$VH_ = S_un_b$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("s_b2"));
    static final java.lang.invoke.VarHandle S_un_b$s_b2$VH() { return S_un_b$s_b2$VH_; }

    static final MemoryLayout S_un_b$s_b3$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout S_un_b$s_b3$LAYOUT() { return S_un_b$s_b3$LAYOUT_; }

    static final VarHandle S_un_b$s_b3$VH_ = S_un_b$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("s_b3"));
    static final java.lang.invoke.VarHandle S_un_b$s_b3$VH() { return S_un_b$s_b3$VH_; }

    static final MemoryLayout S_un_b$s_b4$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout S_un_b$s_b4$LAYOUT() { return S_un_b$s_b4$LAYOUT_; }

    static final VarHandle S_un_b$s_b4$VH_ = S_un_b$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("s_b4"));
    static final java.lang.invoke.VarHandle S_un_b$s_b4$VH() { return S_un_b$s_b4$VH_; }

    static final MemoryLayout S_un_w$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("s_w1"),
        C_SHORT.withName("s_w2")
    );
    static final jdk.incubator.foreign.MemoryLayout S_un_w$struct$LAYOUT() { return S_un_w$struct$LAYOUT_; }

    static final MemoryLayout S_un_w$s_w1$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout S_un_w$s_w1$LAYOUT() { return S_un_w$s_w1$LAYOUT_; }

    static final VarHandle S_un_w$s_w1$VH_ = S_un_w$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("s_w1"));
    static final java.lang.invoke.VarHandle S_un_w$s_w1$VH() { return S_un_w$s_w1$VH_; }

    static final MemoryLayout S_un_w$s_w2$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout S_un_w$s_w2$LAYOUT() { return S_un_w$s_w2$LAYOUT_; }

    static final VarHandle S_un_w$s_w2$VH_ = S_un_w$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("s_w2"));
    static final java.lang.invoke.VarHandle S_un_w$s_w2$VH() { return S_un_w$s_w2$VH_; }

    static final MemoryLayout S_un$S_addr$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout S_un$S_addr$LAYOUT() { return S_un$S_addr$LAYOUT_; }

    static final VarHandle S_un$S_addr$VH_ = S_un$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("S_addr"));
    static final java.lang.invoke.VarHandle S_un$S_addr$VH() { return S_un$S_addr$VH_; }

    static final MemoryLayout sockaddr_in$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("sin_family"),
        C_SHORT.withName("sin_port"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofUnion(
                MemoryLayout.ofStruct(
                    C_CHAR.withName("s_b1"),
                    C_CHAR.withName("s_b2"),
                    C_CHAR.withName("s_b3"),
                    C_CHAR.withName("s_b4")
                ).withName("S_un_b"),
                MemoryLayout.ofStruct(
                    C_SHORT.withName("s_w1"),
                    C_SHORT.withName("s_w2")
                ).withName("S_un_w"),
                C_LONG.withName("S_addr")
            ).withName("S_un")
        ).withName("sin_addr"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("sin_zero")
    ).withName("sockaddr_in");
    static final jdk.incubator.foreign.MemoryLayout sockaddr_in$struct$LAYOUT() { return sockaddr_in$struct$LAYOUT_; }

    static final MemoryLayout sockaddr_in$sin_family$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout sockaddr_in$sin_family$LAYOUT() { return sockaddr_in$sin_family$LAYOUT_; }

    static final VarHandle sockaddr_in$sin_family$VH_ = sockaddr_in$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("sin_family"));
    static final java.lang.invoke.VarHandle sockaddr_in$sin_family$VH() { return sockaddr_in$sin_family$VH_; }

    static final MemoryLayout sockaddr_in$sin_port$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout sockaddr_in$sin_port$LAYOUT() { return sockaddr_in$sin_port$LAYOUT_; }

    static final VarHandle sockaddr_in$sin_port$VH_ = sockaddr_in$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("sin_port"));
    static final java.lang.invoke.VarHandle sockaddr_in$sin_port$VH() { return sockaddr_in$sin_port$VH_; }

    static final MemoryLayout WSAData$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wVersion"),
        C_SHORT.withName("wHighVersion"),
        C_SHORT.withName("iMaxSockets"),
        C_SHORT.withName("iMaxUdpDg"),
        C_POINTER.withName("lpVendorInfo"),
        MemoryLayout.ofSequence(257, C_CHAR).withName("szDescription"),
        MemoryLayout.ofSequence(129, C_CHAR).withName("szSystemStatus"),
        MemoryLayout.ofPaddingBits(48)
    ).withName("WSAData");
    static final jdk.incubator.foreign.MemoryLayout WSAData$struct$LAYOUT() { return WSAData$struct$LAYOUT_; }

    static final MemoryLayout WSAData$wVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout WSAData$wVersion$LAYOUT() { return WSAData$wVersion$LAYOUT_; }

    static final VarHandle WSAData$wVersion$VH_ = WSAData$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wVersion"));
    static final java.lang.invoke.VarHandle WSAData$wVersion$VH() { return WSAData$wVersion$VH_; }

    static final MemoryLayout WSAData$wHighVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout WSAData$wHighVersion$LAYOUT() { return WSAData$wHighVersion$LAYOUT_; }

    static final VarHandle WSAData$wHighVersion$VH_ = WSAData$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wHighVersion"));
    static final java.lang.invoke.VarHandle WSAData$wHighVersion$VH() { return WSAData$wHighVersion$VH_; }

    static final MemoryLayout WSAData$iMaxSockets$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout WSAData$iMaxSockets$LAYOUT() { return WSAData$iMaxSockets$LAYOUT_; }

    static final VarHandle WSAData$iMaxSockets$VH_ = WSAData$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("iMaxSockets"));
    static final java.lang.invoke.VarHandle WSAData$iMaxSockets$VH() { return WSAData$iMaxSockets$VH_; }

    static final MemoryLayout WSAData$iMaxUdpDg$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout WSAData$iMaxUdpDg$LAYOUT() { return WSAData$iMaxUdpDg$LAYOUT_; }

    static final VarHandle WSAData$iMaxUdpDg$VH_ = WSAData$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("iMaxUdpDg"));
    static final java.lang.invoke.VarHandle WSAData$iMaxUdpDg$VH() { return WSAData$iMaxUdpDg$VH_; }

    static final MemoryLayout WSAData$lpVendorInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WSAData$lpVendorInfo$LAYOUT() { return WSAData$lpVendorInfo$LAYOUT_; }

    static final VarHandle WSAData$lpVendorInfo$VH_ = MemoryHandles.asAddressVarHandle(WSAData$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVendorInfo")));
    static final java.lang.invoke.VarHandle WSAData$lpVendorInfo$VH() { return WSAData$lpVendorInfo$VH_; }

    static final MemoryLayout ip_mreq$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            MemoryLayout.ofUnion(
                MemoryLayout.ofStruct(
                    C_CHAR.withName("s_b1"),
                    C_CHAR.withName("s_b2"),
                    C_CHAR.withName("s_b3"),
                    C_CHAR.withName("s_b4")
                ).withName("S_un_b"),
                MemoryLayout.ofStruct(
                    C_SHORT.withName("s_w1"),
                    C_SHORT.withName("s_w2")
                ).withName("S_un_w"),
                C_LONG.withName("S_addr")
            ).withName("S_un")
        ).withName("imr_multiaddr"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofUnion(
                MemoryLayout.ofStruct(
                    C_CHAR.withName("s_b1"),
                    C_CHAR.withName("s_b2"),
                    C_CHAR.withName("s_b3"),
                    C_CHAR.withName("s_b4")
                ).withName("S_un_b"),
                MemoryLayout.ofStruct(
                    C_SHORT.withName("s_w1"),
                    C_SHORT.withName("s_w2")
                ).withName("S_un_w"),
                C_LONG.withName("S_addr")
            ).withName("S_un")
        ).withName("imr_interface")
    ).withName("ip_mreq");
    static final jdk.incubator.foreign.MemoryLayout ip_mreq$struct$LAYOUT() { return ip_mreq$struct$LAYOUT_; }

    static final MemoryLayout sockaddr$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("sa_family"),
        MemoryLayout.ofSequence(14, C_CHAR).withName("sa_data")
    ).withName("sockaddr");
    static final jdk.incubator.foreign.MemoryLayout sockaddr$struct$LAYOUT() { return sockaddr$struct$LAYOUT_; }

    static final MemoryLayout sockaddr$sa_family$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout sockaddr$sa_family$LAYOUT() { return sockaddr$sa_family$LAYOUT_; }

    static final VarHandle sockaddr$sa_family$VH_ = sockaddr$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("sa_family"));
    static final java.lang.invoke.VarHandle sockaddr$sa_family$VH() { return sockaddr$sa_family$VH_; }

    static final MemoryLayout sockproto$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("sp_family"),
        C_SHORT.withName("sp_protocol")
    ).withName("sockproto");
    static final jdk.incubator.foreign.MemoryLayout sockproto$struct$LAYOUT() { return sockproto$struct$LAYOUT_; }

    static final MemoryLayout sockproto$sp_family$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout sockproto$sp_family$LAYOUT() { return sockproto$sp_family$LAYOUT_; }

    static final VarHandle sockproto$sp_family$VH_ = sockproto$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("sp_family"));
    static final java.lang.invoke.VarHandle sockproto$sp_family$VH() { return sockproto$sp_family$VH_; }

    static final MemoryLayout sockproto$sp_protocol$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout sockproto$sp_protocol$LAYOUT() { return sockproto$sp_protocol$LAYOUT_; }

    static final VarHandle sockproto$sp_protocol$VH_ = sockproto$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("sp_protocol"));
    static final java.lang.invoke.VarHandle sockproto$sp_protocol$VH() { return sockproto$sp_protocol$VH_; }

    static final MemoryLayout linger$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("l_onoff"),
        C_SHORT.withName("l_linger")
    ).withName("linger");
    static final jdk.incubator.foreign.MemoryLayout linger$struct$LAYOUT() { return linger$struct$LAYOUT_; }

    static final MemoryLayout linger$l_onoff$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout linger$l_onoff$LAYOUT() { return linger$l_onoff$LAYOUT_; }

    static final VarHandle linger$l_onoff$VH_ = linger$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("l_onoff"));
    static final java.lang.invoke.VarHandle linger$l_onoff$VH() { return linger$l_onoff$VH_; }

    static final MemoryLayout linger$l_linger$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout linger$l_linger$LAYOUT() { return linger$l_linger$LAYOUT_; }

    static final VarHandle linger$l_linger$VH_ = linger$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("l_linger"));
    static final java.lang.invoke.VarHandle linger$l_linger$VH() { return linger$l_linger$VH_; }

    static final FunctionDescriptor accept$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor accept$FUNC() { return accept$FUNC_; }

    static final MethodHandle accept$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "accept",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)J",
        accept$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle accept$MH() { return accept$MH_; }

    static final FunctionDescriptor bind$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor bind$FUNC() { return bind$FUNC_; }

    static final MethodHandle bind$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "bind",
        "(JLjdk/incubator/foreign/MemoryAddress;I)I",
        bind$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle bind$MH() { return bind$MH_; }

    static final FunctionDescriptor closesocket$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor closesocket$FUNC() { return closesocket$FUNC_; }

    static final MethodHandle closesocket$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "closesocket",
        "(J)I",
        closesocket$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle closesocket$MH() { return closesocket$MH_; }

    static final FunctionDescriptor connect$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor connect$FUNC() { return connect$FUNC_; }

    static final MethodHandle connect$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "connect",
        "(JLjdk/incubator/foreign/MemoryAddress;I)I",
        connect$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle connect$MH() { return connect$MH_; }

    static final FunctionDescriptor ioctlsocket$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ioctlsocket$FUNC() { return ioctlsocket$FUNC_; }

    static final MethodHandle ioctlsocket$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ioctlsocket",
        "(JILjdk/incubator/foreign/MemoryAddress;)I",
        ioctlsocket$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ioctlsocket$MH() { return ioctlsocket$MH_; }

    static final FunctionDescriptor getpeername$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor getpeername$FUNC() { return getpeername$FUNC_; }

    static final MethodHandle getpeername$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "getpeername",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        getpeername$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle getpeername$MH() { return getpeername$MH_; }

    static final FunctionDescriptor getsockname$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor getsockname$FUNC() { return getsockname$FUNC_; }

    static final MethodHandle getsockname$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "getsockname",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        getsockname$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle getsockname$MH() { return getsockname$MH_; }

    static final FunctionDescriptor getsockopt$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_INT,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor getsockopt$FUNC() { return getsockopt$FUNC_; }

    static final MethodHandle getsockopt$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "getsockopt",
        "(JIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        getsockopt$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle getsockopt$MH() { return getsockopt$MH_; }

    static final FunctionDescriptor htonl$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor htonl$FUNC() { return htonl$FUNC_; }

    static final MethodHandle htonl$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "htonl",
        "(I)I",
        htonl$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle htonl$MH() { return htonl$MH_; }

    static final FunctionDescriptor htons$FUNC_ = FunctionDescriptor.of(C_SHORT,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor htons$FUNC() { return htons$FUNC_; }

    static final MethodHandle htons$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "htons",
        "(S)S",
        htons$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle htons$MH() { return htons$MH_; }

    static final FunctionDescriptor inet_addr$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor inet_addr$FUNC() { return inet_addr$FUNC_; }

    static final MethodHandle inet_addr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "inet_addr",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        inet_addr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle inet_addr$MH() { return inet_addr$MH_; }

    static final FunctionDescriptor inet_ntoa$FUNC_ = FunctionDescriptor.of(C_POINTER,
        MemoryLayout.ofStruct(
            MemoryLayout.ofUnion(
                MemoryLayout.ofStruct(
                    C_CHAR.withName("s_b1"),
                    C_CHAR.withName("s_b2"),
                    C_CHAR.withName("s_b3"),
                    C_CHAR.withName("s_b4")
                ).withName("S_un_b"),
                MemoryLayout.ofStruct(
                    C_SHORT.withName("s_w1"),
                    C_SHORT.withName("s_w2")
                ).withName("S_un_w"),
                C_LONG.withName("S_addr")
            ).withName("S_un")
        ).withName("in_addr")
    );
    static final jdk.incubator.foreign.FunctionDescriptor inet_ntoa$FUNC() { return inet_ntoa$FUNC_; }

    static final MethodHandle inet_ntoa$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "inet_ntoa",
        "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemoryAddress;",
        inet_ntoa$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle inet_ntoa$MH() { return inet_ntoa$MH_; }

    static final FunctionDescriptor listen$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor listen$FUNC() { return listen$FUNC_; }

    static final MethodHandle listen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "listen",
        "(JI)I",
        listen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle listen$MH() { return listen$MH_; }

    static final FunctionDescriptor ntohl$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor ntohl$FUNC() { return ntohl$FUNC_; }

    static final MethodHandle ntohl$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ntohl",
        "(I)I",
        ntohl$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ntohl$MH() { return ntohl$MH_; }

    static final FunctionDescriptor ntohs$FUNC_ = FunctionDescriptor.of(C_SHORT,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor ntohs$FUNC() { return ntohs$FUNC_; }

    static final MethodHandle ntohs$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ntohs",
        "(S)S",
        ntohs$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ntohs$MH() { return ntohs$MH_; }

    static final FunctionDescriptor recv$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor recv$FUNC() { return recv$FUNC_; }

    static final MethodHandle recv$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "recv",
        "(JLjdk/incubator/foreign/MemoryAddress;II)I",
        recv$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle recv$MH() { return recv$MH_; }

    static final FunctionDescriptor recvfrom$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor recvfrom$FUNC() { return recvfrom$FUNC_; }

    static final MethodHandle recvfrom$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "recvfrom",
        "(JLjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        recvfrom$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle recvfrom$MH() { return recvfrom$MH_; }

    static final FunctionDescriptor select$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor select$FUNC() { return select$FUNC_; }

    static final MethodHandle select$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "select",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        select$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle select$MH() { return select$MH_; }

    static final FunctionDescriptor send$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor send$FUNC() { return send$FUNC_; }

    static final MethodHandle send$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "send",
        "(JLjdk/incubator/foreign/MemoryAddress;II)I",
        send$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle send$MH() { return send$MH_; }

    static final FunctionDescriptor sendto$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor sendto$FUNC() { return sendto$FUNC_; }

    static final MethodHandle sendto$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "sendto",
        "(JLjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;I)I",
        sendto$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle sendto$MH() { return sendto$MH_; }

    static final FunctionDescriptor setsockopt$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor setsockopt$FUNC() { return setsockopt$FUNC_; }

    static final MethodHandle setsockopt$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "setsockopt",
        "(JIILjdk/incubator/foreign/MemoryAddress;I)I",
        setsockopt$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle setsockopt$MH() { return setsockopt$MH_; }

    static final FunctionDescriptor shutdown$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor shutdown$FUNC() { return shutdown$FUNC_; }

    static final MethodHandle shutdown$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "shutdown",
        "(JI)I",
        shutdown$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle shutdown$MH() { return shutdown$MH_; }

    static final FunctionDescriptor socket$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_INT,
        C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor socket$FUNC() { return socket$FUNC_; }

    static final MethodHandle socket$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "socket",
        "(III)J",
        socket$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle socket$MH() { return socket$MH_; }

    static final FunctionDescriptor gethostbyaddr$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor gethostbyaddr$FUNC() { return gethostbyaddr$FUNC_; }

    static final MethodHandle gethostbyaddr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "gethostbyaddr",
        "(Ljdk/incubator/foreign/MemoryAddress;II)Ljdk/incubator/foreign/MemoryAddress;",
        gethostbyaddr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle gethostbyaddr$MH() { return gethostbyaddr$MH_; }

    static final FunctionDescriptor gethostbyname$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor gethostbyname$FUNC() { return gethostbyname$FUNC_; }

    static final MethodHandle gethostbyname$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "gethostbyname",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        gethostbyname$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle gethostbyname$MH() { return gethostbyname$MH_; }

    static final FunctionDescriptor gethostname$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor gethostname$FUNC() { return gethostname$FUNC_; }

    static final MethodHandle gethostname$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "gethostname",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        gethostname$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle gethostname$MH() { return gethostname$MH_; }

    static final FunctionDescriptor getservbyport$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor getservbyport$FUNC() { return getservbyport$FUNC_; }

    static final MethodHandle getservbyport$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "getservbyport",
        "(ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        getservbyport$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle getservbyport$MH() { return getservbyport$MH_; }

    static final FunctionDescriptor getservbyname$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor getservbyname$FUNC() { return getservbyname$FUNC_; }

    static final MethodHandle getservbyname$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "getservbyname",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        getservbyname$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle getservbyname$MH() { return getservbyname$MH_; }

    static final FunctionDescriptor getprotobynumber$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor getprotobynumber$FUNC() { return getprotobynumber$FUNC_; }

    static final MethodHandle getprotobynumber$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "getprotobynumber",
        "(I)Ljdk/incubator/foreign/MemoryAddress;",
        getprotobynumber$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle getprotobynumber$MH() { return getprotobynumber$MH_; }

    static final FunctionDescriptor getprotobyname$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor getprotobyname$FUNC() { return getprotobyname$FUNC_; }

    static final MethodHandle getprotobyname$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "getprotobyname",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        getprotobyname$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle getprotobyname$MH() { return getprotobyname$MH_; }

    static final FunctionDescriptor WSAStartup$FUNC_ = FunctionDescriptor.of(C_INT,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WSAStartup$FUNC() { return WSAStartup$FUNC_; }

    static final MethodHandle WSAStartup$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WSAStartup",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        WSAStartup$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WSAStartup$MH() { return WSAStartup$MH_; }

    static final FunctionDescriptor WSACleanup$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor WSACleanup$FUNC() { return WSACleanup$FUNC_; }

    static final MethodHandle WSACleanup$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WSACleanup",
        "()I",
        WSACleanup$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WSACleanup$MH() { return WSACleanup$MH_; }

    static final FunctionDescriptor WSASetLastError$FUNC_ = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor WSASetLastError$FUNC() { return WSASetLastError$FUNC_; }

    static final MethodHandle WSASetLastError$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WSASetLastError",
        "(I)V",
        WSASetLastError$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WSASetLastError$MH() { return WSASetLastError$MH_; }

    static final FunctionDescriptor WSAGetLastError$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor WSAGetLastError$FUNC() { return WSAGetLastError$FUNC_; }

    static final MethodHandle WSAGetLastError$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WSAGetLastError",
        "()I",
        WSAGetLastError$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WSAGetLastError$MH() { return WSAGetLastError$MH_; }

    static final FunctionDescriptor WSAIsBlocking$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor WSAIsBlocking$FUNC() { return WSAIsBlocking$FUNC_; }

    static final MethodHandle WSAIsBlocking$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WSAIsBlocking",
        "()I",
        WSAIsBlocking$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WSAIsBlocking$MH() { return WSAIsBlocking$MH_; }

    static final FunctionDescriptor WSAUnhookBlockingHook$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor WSAUnhookBlockingHook$FUNC() { return WSAUnhookBlockingHook$FUNC_; }

    static final MethodHandle WSAUnhookBlockingHook$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WSAUnhookBlockingHook",
        "()I",
        WSAUnhookBlockingHook$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WSAUnhookBlockingHook$MH() { return WSAUnhookBlockingHook$MH_; }

    static final FunctionDescriptor WSASetBlockingHook$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WSASetBlockingHook$FUNC() { return WSASetBlockingHook$FUNC_; }

    static final MethodHandle WSASetBlockingHook$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WSASetBlockingHook",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        WSASetBlockingHook$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WSASetBlockingHook$MH() { return WSASetBlockingHook$MH_; }

    static final FunctionDescriptor WSASetBlockingHook$lpBlockFunc$FUNC_ = FunctionDescriptor.of(C_LONGLONG);
    static final jdk.incubator.foreign.FunctionDescriptor WSASetBlockingHook$lpBlockFunc$FUNC() { return WSASetBlockingHook$lpBlockFunc$FUNC_; }

    static final FunctionDescriptor WSACancelBlockingCall$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor WSACancelBlockingCall$FUNC() { return WSACancelBlockingCall$FUNC_; }

    static final MethodHandle WSACancelBlockingCall$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WSACancelBlockingCall",
        "()I",
        WSACancelBlockingCall$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WSACancelBlockingCall$MH() { return WSACancelBlockingCall$MH_; }

    static final FunctionDescriptor WSAAsyncGetServByName$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor WSAAsyncGetServByName$FUNC() { return WSAAsyncGetServByName$FUNC_; }

    static final MethodHandle WSAAsyncGetServByName$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WSAAsyncGetServByName",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        WSAAsyncGetServByName$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WSAAsyncGetServByName$MH() { return WSAAsyncGetServByName$MH_; }

    static final FunctionDescriptor WSAAsyncGetServByPort$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor WSAAsyncGetServByPort$FUNC() { return WSAAsyncGetServByPort$FUNC_; }

    static final MethodHandle WSAAsyncGetServByPort$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WSAAsyncGetServByPort",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        WSAAsyncGetServByPort$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WSAAsyncGetServByPort$MH() { return WSAAsyncGetServByPort$MH_; }

    static final FunctionDescriptor WSAAsyncGetProtoByName$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor WSAAsyncGetProtoByName$FUNC() { return WSAAsyncGetProtoByName$FUNC_; }

    static final MethodHandle WSAAsyncGetProtoByName$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WSAAsyncGetProtoByName",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        WSAAsyncGetProtoByName$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WSAAsyncGetProtoByName$MH() { return WSAAsyncGetProtoByName$MH_; }

    static final FunctionDescriptor WSAAsyncGetProtoByNumber$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor WSAAsyncGetProtoByNumber$FUNC() { return WSAAsyncGetProtoByNumber$FUNC_; }

    static final MethodHandle WSAAsyncGetProtoByNumber$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WSAAsyncGetProtoByNumber",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        WSAAsyncGetProtoByNumber$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WSAAsyncGetProtoByNumber$MH() { return WSAAsyncGetProtoByNumber$MH_; }

    static final FunctionDescriptor WSAAsyncGetHostByName$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor WSAAsyncGetHostByName$FUNC() { return WSAAsyncGetHostByName$FUNC_; }

    static final MethodHandle WSAAsyncGetHostByName$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WSAAsyncGetHostByName",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        WSAAsyncGetHostByName$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WSAAsyncGetHostByName$MH() { return WSAAsyncGetHostByName$MH_; }

    static final FunctionDescriptor WSAAsyncGetHostByAddr$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor WSAAsyncGetHostByAddr$FUNC() { return WSAAsyncGetHostByAddr$FUNC_; }

    static final MethodHandle WSAAsyncGetHostByAddr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WSAAsyncGetHostByAddr",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        WSAAsyncGetHostByAddr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WSAAsyncGetHostByAddr$MH() { return WSAAsyncGetHostByAddr$MH_; }

    static final FunctionDescriptor WSACancelAsyncRequest$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WSACancelAsyncRequest$FUNC() { return WSACancelAsyncRequest$FUNC_; }

    static final MethodHandle WSACancelAsyncRequest$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WSACancelAsyncRequest",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        WSACancelAsyncRequest$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WSACancelAsyncRequest$MH() { return WSACancelAsyncRequest$MH_; }

    static final FunctionDescriptor WSAAsyncSelect$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_INT,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor WSAAsyncSelect$FUNC() { return WSAAsyncSelect$FUNC_; }

    static final MethodHandle WSAAsyncSelect$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WSAAsyncSelect",
        "(JLjdk/incubator/foreign/MemoryAddress;II)I",
        WSAAsyncSelect$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WSAAsyncSelect$MH() { return WSAAsyncSelect$MH_; }

    static final FunctionDescriptor WSARecvEx$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WSARecvEx$FUNC() { return WSARecvEx$FUNC_; }

    static final MethodHandle WSARecvEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WSARecvEx",
        "(JLjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        WSARecvEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WSARecvEx$MH() { return WSARecvEx$MH_; }

    static final MemoryLayout _TRANSMIT_FILE_BUFFERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("Head"),
        C_LONG.withName("HeadLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("Tail"),
        C_LONG.withName("TailLength"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_TRANSMIT_FILE_BUFFERS");
    static final jdk.incubator.foreign.MemoryLayout _TRANSMIT_FILE_BUFFERS$struct$LAYOUT() { return _TRANSMIT_FILE_BUFFERS$struct$LAYOUT_; }

    static final MemoryLayout _TRANSMIT_FILE_BUFFERS$Head$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _TRANSMIT_FILE_BUFFERS$Head$LAYOUT() { return _TRANSMIT_FILE_BUFFERS$Head$LAYOUT_; }

    static final VarHandle _TRANSMIT_FILE_BUFFERS$Head$VH_ = MemoryHandles.asAddressVarHandle(_TRANSMIT_FILE_BUFFERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Head")));
    static final java.lang.invoke.VarHandle _TRANSMIT_FILE_BUFFERS$Head$VH() { return _TRANSMIT_FILE_BUFFERS$Head$VH_; }

    static final MemoryLayout _TRANSMIT_FILE_BUFFERS$HeadLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TRANSMIT_FILE_BUFFERS$HeadLength$LAYOUT() { return _TRANSMIT_FILE_BUFFERS$HeadLength$LAYOUT_; }

    static final VarHandle _TRANSMIT_FILE_BUFFERS$HeadLength$VH_ = _TRANSMIT_FILE_BUFFERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("HeadLength"));
    static final java.lang.invoke.VarHandle _TRANSMIT_FILE_BUFFERS$HeadLength$VH() { return _TRANSMIT_FILE_BUFFERS$HeadLength$VH_; }

    static final MemoryLayout _TRANSMIT_FILE_BUFFERS$Tail$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _TRANSMIT_FILE_BUFFERS$Tail$LAYOUT() { return _TRANSMIT_FILE_BUFFERS$Tail$LAYOUT_; }

    static final VarHandle _TRANSMIT_FILE_BUFFERS$Tail$VH_ = MemoryHandles.asAddressVarHandle(_TRANSMIT_FILE_BUFFERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Tail")));
    static final java.lang.invoke.VarHandle _TRANSMIT_FILE_BUFFERS$Tail$VH() { return _TRANSMIT_FILE_BUFFERS$Tail$VH_; }

    static final MemoryLayout _TRANSMIT_FILE_BUFFERS$TailLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TRANSMIT_FILE_BUFFERS$TailLength$LAYOUT() { return _TRANSMIT_FILE_BUFFERS$TailLength$LAYOUT_; }

    static final VarHandle _TRANSMIT_FILE_BUFFERS$TailLength$VH_ = _TRANSMIT_FILE_BUFFERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TailLength"));
    static final java.lang.invoke.VarHandle _TRANSMIT_FILE_BUFFERS$TailLength$VH() { return _TRANSMIT_FILE_BUFFERS$TailLength$VH_; }

    static final FunctionDescriptor TransmitFile$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor TransmitFile$FUNC() { return TransmitFile$FUNC_; }

    static final MethodHandle TransmitFile$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TransmitFile",
        "(JLjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        TransmitFile$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle TransmitFile$MH() { return TransmitFile$MH_; }

    static final FunctionDescriptor AcceptEx$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_LONGLONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AcceptEx$FUNC() { return AcceptEx$FUNC_; }

    static final MethodHandle AcceptEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AcceptEx",
        "(JJLjdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        AcceptEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AcceptEx$MH() { return AcceptEx$MH_; }

    static final FunctionDescriptor GetAcceptExSockaddrs$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetAcceptExSockaddrs$FUNC() { return GetAcceptExSockaddrs$FUNC_; }

    static final MethodHandle GetAcceptExSockaddrs$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetAcceptExSockaddrs",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        GetAcceptExSockaddrs$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetAcceptExSockaddrs$MH() { return GetAcceptExSockaddrs$MH_; }

    static final MemoryLayout _CMS_KEY_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwVersion"),
        C_INT.withName("Algid"),
        C_POINTER.withName("pbOID"),
        C_LONG.withName("cbOID"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CMS_KEY_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMS_KEY_INFO$struct$LAYOUT() { return _CMS_KEY_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMS_KEY_INFO$dwVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMS_KEY_INFO$dwVersion$LAYOUT() { return _CMS_KEY_INFO$dwVersion$LAYOUT_; }

    static final VarHandle _CMS_KEY_INFO$dwVersion$VH_ = _CMS_KEY_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersion"));
    static final java.lang.invoke.VarHandle _CMS_KEY_INFO$dwVersion$VH() { return _CMS_KEY_INFO$dwVersion$VH_; }

    static final MemoryLayout _CMS_KEY_INFO$Algid$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _CMS_KEY_INFO$Algid$LAYOUT() { return _CMS_KEY_INFO$Algid$LAYOUT_; }

    static final VarHandle _CMS_KEY_INFO$Algid$VH_ = _CMS_KEY_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Algid"));
    static final java.lang.invoke.VarHandle _CMS_KEY_INFO$Algid$VH() { return _CMS_KEY_INFO$Algid$VH_; }

    static final MemoryLayout _CMS_KEY_INFO$pbOID$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMS_KEY_INFO$pbOID$LAYOUT() { return _CMS_KEY_INFO$pbOID$LAYOUT_; }

    static final VarHandle _CMS_KEY_INFO$pbOID$VH_ = MemoryHandles.asAddressVarHandle(_CMS_KEY_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pbOID")));
    static final java.lang.invoke.VarHandle _CMS_KEY_INFO$pbOID$VH() { return _CMS_KEY_INFO$pbOID$VH_; }

    static final MemoryLayout _CMS_KEY_INFO$cbOID$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMS_KEY_INFO$cbOID$LAYOUT() { return _CMS_KEY_INFO$cbOID$LAYOUT_; }

    static final VarHandle _CMS_KEY_INFO$cbOID$VH_ = _CMS_KEY_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbOID"));
    static final java.lang.invoke.VarHandle _CMS_KEY_INFO$cbOID$VH() { return _CMS_KEY_INFO$cbOID$VH_; }

    static final MemoryLayout _HMAC_Info$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("HashAlgid"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pbInnerString"),
        C_LONG.withName("cbInnerString"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pbOuterString"),
        C_LONG.withName("cbOuterString"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_HMAC_Info");
    static final jdk.incubator.foreign.MemoryLayout _HMAC_Info$struct$LAYOUT() { return _HMAC_Info$struct$LAYOUT_; }

    static final MemoryLayout _HMAC_Info$HashAlgid$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _HMAC_Info$HashAlgid$LAYOUT() { return _HMAC_Info$HashAlgid$LAYOUT_; }

    static final VarHandle _HMAC_Info$HashAlgid$VH_ = _HMAC_Info$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("HashAlgid"));
    static final java.lang.invoke.VarHandle _HMAC_Info$HashAlgid$VH() { return _HMAC_Info$HashAlgid$VH_; }

    static final MemoryLayout _HMAC_Info$pbInnerString$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _HMAC_Info$pbInnerString$LAYOUT() { return _HMAC_Info$pbInnerString$LAYOUT_; }

    static final VarHandle _HMAC_Info$pbInnerString$VH_ = MemoryHandles.asAddressVarHandle(_HMAC_Info$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pbInnerString")));
    static final java.lang.invoke.VarHandle _HMAC_Info$pbInnerString$VH() { return _HMAC_Info$pbInnerString$VH_; }

    static final MemoryLayout _HMAC_Info$cbInnerString$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _HMAC_Info$cbInnerString$LAYOUT() { return _HMAC_Info$cbInnerString$LAYOUT_; }

    static final VarHandle _HMAC_Info$cbInnerString$VH_ = _HMAC_Info$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbInnerString"));
    static final java.lang.invoke.VarHandle _HMAC_Info$cbInnerString$VH() { return _HMAC_Info$cbInnerString$VH_; }

    static final MemoryLayout _HMAC_Info$pbOuterString$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _HMAC_Info$pbOuterString$LAYOUT() { return _HMAC_Info$pbOuterString$LAYOUT_; }

    static final VarHandle _HMAC_Info$pbOuterString$VH_ = MemoryHandles.asAddressVarHandle(_HMAC_Info$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pbOuterString")));
    static final java.lang.invoke.VarHandle _HMAC_Info$pbOuterString$VH() { return _HMAC_Info$pbOuterString$VH_; }

    static final MemoryLayout _HMAC_Info$cbOuterString$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _HMAC_Info$cbOuterString$LAYOUT() { return _HMAC_Info$cbOuterString$LAYOUT_; }

    static final VarHandle _HMAC_Info$cbOuterString$VH_ = _HMAC_Info$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbOuterString"));
    static final java.lang.invoke.VarHandle _HMAC_Info$cbOuterString$VH() { return _HMAC_Info$cbOuterString$VH_; }

    static final MemoryLayout _SCHANNEL_ALG$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwUse"),
        C_INT.withName("Algid"),
        C_LONG.withName("cBits"),
        C_LONG.withName("dwFlags"),
        C_LONG.withName("dwReserved")
    ).withName("_SCHANNEL_ALG");
    static final jdk.incubator.foreign.MemoryLayout _SCHANNEL_ALG$struct$LAYOUT() { return _SCHANNEL_ALG$struct$LAYOUT_; }

    static final MemoryLayout _SCHANNEL_ALG$dwUse$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SCHANNEL_ALG$dwUse$LAYOUT() { return _SCHANNEL_ALG$dwUse$LAYOUT_; }

    static final VarHandle _SCHANNEL_ALG$dwUse$VH_ = _SCHANNEL_ALG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwUse"));
    static final java.lang.invoke.VarHandle _SCHANNEL_ALG$dwUse$VH() { return _SCHANNEL_ALG$dwUse$VH_; }

    static final MemoryLayout _SCHANNEL_ALG$Algid$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SCHANNEL_ALG$Algid$LAYOUT() { return _SCHANNEL_ALG$Algid$LAYOUT_; }

    static final VarHandle _SCHANNEL_ALG$Algid$VH_ = _SCHANNEL_ALG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Algid"));
    static final java.lang.invoke.VarHandle _SCHANNEL_ALG$Algid$VH() { return _SCHANNEL_ALG$Algid$VH_; }

    static final MemoryLayout _SCHANNEL_ALG$cBits$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SCHANNEL_ALG$cBits$LAYOUT() { return _SCHANNEL_ALG$cBits$LAYOUT_; }

    static final VarHandle _SCHANNEL_ALG$cBits$VH_ = _SCHANNEL_ALG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cBits"));
    static final java.lang.invoke.VarHandle _SCHANNEL_ALG$cBits$VH() { return _SCHANNEL_ALG$cBits$VH_; }

    static final MemoryLayout _SCHANNEL_ALG$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SCHANNEL_ALG$dwFlags$LAYOUT() { return _SCHANNEL_ALG$dwFlags$LAYOUT_; }

    static final VarHandle _SCHANNEL_ALG$dwFlags$VH_ = _SCHANNEL_ALG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _SCHANNEL_ALG$dwFlags$VH() { return _SCHANNEL_ALG$dwFlags$VH_; }

    static final MemoryLayout _SCHANNEL_ALG$dwReserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SCHANNEL_ALG$dwReserved$LAYOUT() { return _SCHANNEL_ALG$dwReserved$LAYOUT_; }

    static final VarHandle _SCHANNEL_ALG$dwReserved$VH_ = _SCHANNEL_ALG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReserved"));
    static final java.lang.invoke.VarHandle _SCHANNEL_ALG$dwReserved$VH() { return _SCHANNEL_ALG$dwReserved$VH_; }

    static final MemoryLayout _PROV_ENUMALGS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("aiAlgid"),
        C_LONG.withName("dwBitLen"),
        C_LONG.withName("dwNameLen"),
        MemoryLayout.ofSequence(20, C_CHAR).withName("szName")
    ).withName("_PROV_ENUMALGS");
    static final jdk.incubator.foreign.MemoryLayout _PROV_ENUMALGS$struct$LAYOUT() { return _PROV_ENUMALGS$struct$LAYOUT_; }

    static final MemoryLayout _PROV_ENUMALGS$aiAlgid$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _PROV_ENUMALGS$aiAlgid$LAYOUT() { return _PROV_ENUMALGS$aiAlgid$LAYOUT_; }

    static final VarHandle _PROV_ENUMALGS$aiAlgid$VH_ = _PROV_ENUMALGS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("aiAlgid"));
    static final java.lang.invoke.VarHandle _PROV_ENUMALGS$aiAlgid$VH() { return _PROV_ENUMALGS$aiAlgid$VH_; }

    static final MemoryLayout _PROV_ENUMALGS$dwBitLen$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROV_ENUMALGS$dwBitLen$LAYOUT() { return _PROV_ENUMALGS$dwBitLen$LAYOUT_; }

    static final VarHandle _PROV_ENUMALGS$dwBitLen$VH_ = _PROV_ENUMALGS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwBitLen"));
    static final java.lang.invoke.VarHandle _PROV_ENUMALGS$dwBitLen$VH() { return _PROV_ENUMALGS$dwBitLen$VH_; }

    static final MemoryLayout _PROV_ENUMALGS$dwNameLen$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROV_ENUMALGS$dwNameLen$LAYOUT() { return _PROV_ENUMALGS$dwNameLen$LAYOUT_; }

    static final VarHandle _PROV_ENUMALGS$dwNameLen$VH_ = _PROV_ENUMALGS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwNameLen"));
    static final java.lang.invoke.VarHandle _PROV_ENUMALGS$dwNameLen$VH() { return _PROV_ENUMALGS$dwNameLen$VH_; }

    static final MemoryLayout _PROV_ENUMALGS_EX$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("aiAlgid"),
        C_LONG.withName("dwDefaultLen"),
        C_LONG.withName("dwMinLen"),
        C_LONG.withName("dwMaxLen"),
        C_LONG.withName("dwProtocols"),
        C_LONG.withName("dwNameLen"),
        MemoryLayout.ofSequence(20, C_CHAR).withName("szName"),
        C_LONG.withName("dwLongNameLen"),
        MemoryLayout.ofSequence(40, C_CHAR).withName("szLongName")
    ).withName("_PROV_ENUMALGS_EX");
    static final jdk.incubator.foreign.MemoryLayout _PROV_ENUMALGS_EX$struct$LAYOUT() { return _PROV_ENUMALGS_EX$struct$LAYOUT_; }

    static final MemoryLayout _PROV_ENUMALGS_EX$aiAlgid$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _PROV_ENUMALGS_EX$aiAlgid$LAYOUT() { return _PROV_ENUMALGS_EX$aiAlgid$LAYOUT_; }

    static final VarHandle _PROV_ENUMALGS_EX$aiAlgid$VH_ = _PROV_ENUMALGS_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("aiAlgid"));
    static final java.lang.invoke.VarHandle _PROV_ENUMALGS_EX$aiAlgid$VH() { return _PROV_ENUMALGS_EX$aiAlgid$VH_; }

    static final MemoryLayout _PROV_ENUMALGS_EX$dwDefaultLen$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROV_ENUMALGS_EX$dwDefaultLen$LAYOUT() { return _PROV_ENUMALGS_EX$dwDefaultLen$LAYOUT_; }

    static final VarHandle _PROV_ENUMALGS_EX$dwDefaultLen$VH_ = _PROV_ENUMALGS_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwDefaultLen"));
    static final java.lang.invoke.VarHandle _PROV_ENUMALGS_EX$dwDefaultLen$VH() { return _PROV_ENUMALGS_EX$dwDefaultLen$VH_; }

    static final MemoryLayout _PROV_ENUMALGS_EX$dwMinLen$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROV_ENUMALGS_EX$dwMinLen$LAYOUT() { return _PROV_ENUMALGS_EX$dwMinLen$LAYOUT_; }

    static final VarHandle _PROV_ENUMALGS_EX$dwMinLen$VH_ = _PROV_ENUMALGS_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwMinLen"));
    static final java.lang.invoke.VarHandle _PROV_ENUMALGS_EX$dwMinLen$VH() { return _PROV_ENUMALGS_EX$dwMinLen$VH_; }

    static final MemoryLayout _PROV_ENUMALGS_EX$dwMaxLen$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROV_ENUMALGS_EX$dwMaxLen$LAYOUT() { return _PROV_ENUMALGS_EX$dwMaxLen$LAYOUT_; }

    static final VarHandle _PROV_ENUMALGS_EX$dwMaxLen$VH_ = _PROV_ENUMALGS_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwMaxLen"));
    static final java.lang.invoke.VarHandle _PROV_ENUMALGS_EX$dwMaxLen$VH() { return _PROV_ENUMALGS_EX$dwMaxLen$VH_; }

    static final MemoryLayout _PROV_ENUMALGS_EX$dwProtocols$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROV_ENUMALGS_EX$dwProtocols$LAYOUT() { return _PROV_ENUMALGS_EX$dwProtocols$LAYOUT_; }

    static final VarHandle _PROV_ENUMALGS_EX$dwProtocols$VH_ = _PROV_ENUMALGS_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwProtocols"));
    static final java.lang.invoke.VarHandle _PROV_ENUMALGS_EX$dwProtocols$VH() { return _PROV_ENUMALGS_EX$dwProtocols$VH_; }

    static final MemoryLayout _PROV_ENUMALGS_EX$dwNameLen$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROV_ENUMALGS_EX$dwNameLen$LAYOUT() { return _PROV_ENUMALGS_EX$dwNameLen$LAYOUT_; }

    static final VarHandle _PROV_ENUMALGS_EX$dwNameLen$VH_ = _PROV_ENUMALGS_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwNameLen"));
    static final java.lang.invoke.VarHandle _PROV_ENUMALGS_EX$dwNameLen$VH() { return _PROV_ENUMALGS_EX$dwNameLen$VH_; }

    static final MemoryLayout _PROV_ENUMALGS_EX$dwLongNameLen$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROV_ENUMALGS_EX$dwLongNameLen$LAYOUT() { return _PROV_ENUMALGS_EX$dwLongNameLen$LAYOUT_; }

    static final VarHandle _PROV_ENUMALGS_EX$dwLongNameLen$VH_ = _PROV_ENUMALGS_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwLongNameLen"));
    static final java.lang.invoke.VarHandle _PROV_ENUMALGS_EX$dwLongNameLen$VH() { return _PROV_ENUMALGS_EX$dwLongNameLen$VH_; }

    static final MemoryLayout _PUBLICKEYSTRUC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("bType"),
        C_CHAR.withName("bVersion"),
        C_SHORT.withName("reserved"),
        C_INT.withName("aiKeyAlg")
    ).withName("_PUBLICKEYSTRUC");
    static final jdk.incubator.foreign.MemoryLayout _PUBLICKEYSTRUC$struct$LAYOUT() { return _PUBLICKEYSTRUC$struct$LAYOUT_; }

    static final MemoryLayout _PUBLICKEYSTRUC$bType$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _PUBLICKEYSTRUC$bType$LAYOUT() { return _PUBLICKEYSTRUC$bType$LAYOUT_; }

    static final VarHandle _PUBLICKEYSTRUC$bType$VH_ = _PUBLICKEYSTRUC$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("bType"));
    static final java.lang.invoke.VarHandle _PUBLICKEYSTRUC$bType$VH() { return _PUBLICKEYSTRUC$bType$VH_; }

    static final MemoryLayout _PUBLICKEYSTRUC$bVersion$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _PUBLICKEYSTRUC$bVersion$LAYOUT() { return _PUBLICKEYSTRUC$bVersion$LAYOUT_; }

    static final VarHandle _PUBLICKEYSTRUC$bVersion$VH_ = _PUBLICKEYSTRUC$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("bVersion"));
    static final java.lang.invoke.VarHandle _PUBLICKEYSTRUC$bVersion$VH() { return _PUBLICKEYSTRUC$bVersion$VH_; }

    static final MemoryLayout _PUBLICKEYSTRUC$reserved$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _PUBLICKEYSTRUC$reserved$LAYOUT() { return _PUBLICKEYSTRUC$reserved$LAYOUT_; }

    static final VarHandle _PUBLICKEYSTRUC$reserved$VH_ = _PUBLICKEYSTRUC$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("reserved"));
    static final java.lang.invoke.VarHandle _PUBLICKEYSTRUC$reserved$VH() { return _PUBLICKEYSTRUC$reserved$VH_; }

    static final MemoryLayout _PUBLICKEYSTRUC$aiKeyAlg$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _PUBLICKEYSTRUC$aiKeyAlg$LAYOUT() { return _PUBLICKEYSTRUC$aiKeyAlg$LAYOUT_; }

    static final VarHandle _PUBLICKEYSTRUC$aiKeyAlg$VH_ = _PUBLICKEYSTRUC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("aiKeyAlg"));
    static final java.lang.invoke.VarHandle _PUBLICKEYSTRUC$aiKeyAlg$VH() { return _PUBLICKEYSTRUC$aiKeyAlg$VH_; }

    static final MemoryLayout _RSAPUBKEY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("magic"),
        C_LONG.withName("bitlen"),
        C_LONG.withName("pubexp")
    ).withName("_RSAPUBKEY");
    static final jdk.incubator.foreign.MemoryLayout _RSAPUBKEY$struct$LAYOUT() { return _RSAPUBKEY$struct$LAYOUT_; }

    static final MemoryLayout _RSAPUBKEY$magic$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RSAPUBKEY$magic$LAYOUT() { return _RSAPUBKEY$magic$LAYOUT_; }

    static final VarHandle _RSAPUBKEY$magic$VH_ = _RSAPUBKEY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("magic"));
    static final java.lang.invoke.VarHandle _RSAPUBKEY$magic$VH() { return _RSAPUBKEY$magic$VH_; }

    static final MemoryLayout _RSAPUBKEY$bitlen$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RSAPUBKEY$bitlen$LAYOUT() { return _RSAPUBKEY$bitlen$LAYOUT_; }

    static final VarHandle _RSAPUBKEY$bitlen$VH_ = _RSAPUBKEY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bitlen"));
    static final java.lang.invoke.VarHandle _RSAPUBKEY$bitlen$VH() { return _RSAPUBKEY$bitlen$VH_; }

    static final MemoryLayout _RSAPUBKEY$pubexp$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RSAPUBKEY$pubexp$LAYOUT() { return _RSAPUBKEY$pubexp$LAYOUT_; }

    static final VarHandle _RSAPUBKEY$pubexp$VH_ = _RSAPUBKEY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("pubexp"));
    static final java.lang.invoke.VarHandle _RSAPUBKEY$pubexp$VH() { return _RSAPUBKEY$pubexp$VH_; }

    static final MemoryLayout _PUBKEY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("magic"),
        C_LONG.withName("bitlen")
    ).withName("_PUBKEY");
    static final jdk.incubator.foreign.MemoryLayout _PUBKEY$struct$LAYOUT() { return _PUBKEY$struct$LAYOUT_; }

    static final MemoryLayout _PUBKEY$magic$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PUBKEY$magic$LAYOUT() { return _PUBKEY$magic$LAYOUT_; }

    static final VarHandle _PUBKEY$magic$VH_ = _PUBKEY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("magic"));
    static final java.lang.invoke.VarHandle _PUBKEY$magic$VH() { return _PUBKEY$magic$VH_; }

    static final MemoryLayout _PUBKEY$bitlen$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PUBKEY$bitlen$LAYOUT() { return _PUBKEY$bitlen$LAYOUT_; }

    static final VarHandle _PUBKEY$bitlen$VH_ = _PUBKEY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bitlen"));
    static final java.lang.invoke.VarHandle _PUBKEY$bitlen$VH() { return _PUBKEY$bitlen$VH_; }

    static final MemoryLayout _DSSSEED$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("counter"),
        MemoryLayout.ofSequence(20, C_CHAR).withName("seed")
    ).withName("_DSSSEED");
    static final jdk.incubator.foreign.MemoryLayout _DSSSEED$struct$LAYOUT() { return _DSSSEED$struct$LAYOUT_; }

    static final MemoryLayout _DSSSEED$counter$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DSSSEED$counter$LAYOUT() { return _DSSSEED$counter$LAYOUT_; }

    static final VarHandle _DSSSEED$counter$VH_ = _DSSSEED$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("counter"));
    static final java.lang.invoke.VarHandle _DSSSEED$counter$VH() { return _DSSSEED$counter$VH_; }

    static final MemoryLayout _PUBKEYVER3$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("magic"),
        C_LONG.withName("bitlenP"),
        C_LONG.withName("bitlenQ"),
        C_LONG.withName("bitlenJ"),
        MemoryLayout.ofStruct(
            C_LONG.withName("counter"),
            MemoryLayout.ofSequence(20, C_CHAR).withName("seed")
        ).withName("DSSSeed")
    ).withName("_PUBKEYVER3");
    static final jdk.incubator.foreign.MemoryLayout _PUBKEYVER3$struct$LAYOUT() { return _PUBKEYVER3$struct$LAYOUT_; }

    static final MemoryLayout _PUBKEYVER3$magic$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PUBKEYVER3$magic$LAYOUT() { return _PUBKEYVER3$magic$LAYOUT_; }

    static final VarHandle _PUBKEYVER3$magic$VH_ = _PUBKEYVER3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("magic"));
    static final java.lang.invoke.VarHandle _PUBKEYVER3$magic$VH() { return _PUBKEYVER3$magic$VH_; }

    static final MemoryLayout _PUBKEYVER3$bitlenP$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PUBKEYVER3$bitlenP$LAYOUT() { return _PUBKEYVER3$bitlenP$LAYOUT_; }

    static final VarHandle _PUBKEYVER3$bitlenP$VH_ = _PUBKEYVER3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bitlenP"));
    static final java.lang.invoke.VarHandle _PUBKEYVER3$bitlenP$VH() { return _PUBKEYVER3$bitlenP$VH_; }

    static final MemoryLayout _PUBKEYVER3$bitlenQ$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PUBKEYVER3$bitlenQ$LAYOUT() { return _PUBKEYVER3$bitlenQ$LAYOUT_; }

    static final VarHandle _PUBKEYVER3$bitlenQ$VH_ = _PUBKEYVER3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bitlenQ"));
    static final java.lang.invoke.VarHandle _PUBKEYVER3$bitlenQ$VH() { return _PUBKEYVER3$bitlenQ$VH_; }

    static final MemoryLayout _PUBKEYVER3$bitlenJ$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PUBKEYVER3$bitlenJ$LAYOUT() { return _PUBKEYVER3$bitlenJ$LAYOUT_; }

    static final VarHandle _PUBKEYVER3$bitlenJ$VH_ = _PUBKEYVER3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bitlenJ"));
    static final java.lang.invoke.VarHandle _PUBKEYVER3$bitlenJ$VH() { return _PUBKEYVER3$bitlenJ$VH_; }

    static final MemoryLayout _PRIVKEYVER3$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("magic"),
        C_LONG.withName("bitlenP"),
        C_LONG.withName("bitlenQ"),
        C_LONG.withName("bitlenJ"),
        C_LONG.withName("bitlenX"),
        MemoryLayout.ofStruct(
            C_LONG.withName("counter"),
            MemoryLayout.ofSequence(20, C_CHAR).withName("seed")
        ).withName("DSSSeed")
    ).withName("_PRIVKEYVER3");
    static final jdk.incubator.foreign.MemoryLayout _PRIVKEYVER3$struct$LAYOUT() { return _PRIVKEYVER3$struct$LAYOUT_; }

    static final MemoryLayout _PRIVKEYVER3$magic$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRIVKEYVER3$magic$LAYOUT() { return _PRIVKEYVER3$magic$LAYOUT_; }

    static final VarHandle _PRIVKEYVER3$magic$VH_ = _PRIVKEYVER3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("magic"));
    static final java.lang.invoke.VarHandle _PRIVKEYVER3$magic$VH() { return _PRIVKEYVER3$magic$VH_; }

    static final MemoryLayout _PRIVKEYVER3$bitlenP$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRIVKEYVER3$bitlenP$LAYOUT() { return _PRIVKEYVER3$bitlenP$LAYOUT_; }

    static final VarHandle _PRIVKEYVER3$bitlenP$VH_ = _PRIVKEYVER3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bitlenP"));
    static final java.lang.invoke.VarHandle _PRIVKEYVER3$bitlenP$VH() { return _PRIVKEYVER3$bitlenP$VH_; }

    static final MemoryLayout _PRIVKEYVER3$bitlenQ$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRIVKEYVER3$bitlenQ$LAYOUT() { return _PRIVKEYVER3$bitlenQ$LAYOUT_; }

    static final VarHandle _PRIVKEYVER3$bitlenQ$VH_ = _PRIVKEYVER3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bitlenQ"));
    static final java.lang.invoke.VarHandle _PRIVKEYVER3$bitlenQ$VH() { return _PRIVKEYVER3$bitlenQ$VH_; }

    static final MemoryLayout _PRIVKEYVER3$bitlenJ$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRIVKEYVER3$bitlenJ$LAYOUT() { return _PRIVKEYVER3$bitlenJ$LAYOUT_; }

    static final VarHandle _PRIVKEYVER3$bitlenJ$VH_ = _PRIVKEYVER3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bitlenJ"));
    static final java.lang.invoke.VarHandle _PRIVKEYVER3$bitlenJ$VH() { return _PRIVKEYVER3$bitlenJ$VH_; }

    static final MemoryLayout _PRIVKEYVER3$bitlenX$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRIVKEYVER3$bitlenX$LAYOUT() { return _PRIVKEYVER3$bitlenX$LAYOUT_; }

    static final VarHandle _PRIVKEYVER3$bitlenX$VH_ = _PRIVKEYVER3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bitlenX"));
    static final java.lang.invoke.VarHandle _PRIVKEYVER3$bitlenX$VH() { return _PRIVKEYVER3$bitlenX$VH_; }

    static final MemoryLayout _KEY_TYPE_SUBTYPE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwKeySpec"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("Type"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("Subtype")
    ).withName("_KEY_TYPE_SUBTYPE");
    static final jdk.incubator.foreign.MemoryLayout _KEY_TYPE_SUBTYPE$struct$LAYOUT() { return _KEY_TYPE_SUBTYPE$struct$LAYOUT_; }

    static final MemoryLayout _KEY_TYPE_SUBTYPE$dwKeySpec$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _KEY_TYPE_SUBTYPE$dwKeySpec$LAYOUT() { return _KEY_TYPE_SUBTYPE$dwKeySpec$LAYOUT_; }

    static final VarHandle _KEY_TYPE_SUBTYPE$dwKeySpec$VH_ = _KEY_TYPE_SUBTYPE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwKeySpec"));
    static final java.lang.invoke.VarHandle _KEY_TYPE_SUBTYPE$dwKeySpec$VH() { return _KEY_TYPE_SUBTYPE$dwKeySpec$VH_; }

    static final MemoryLayout _CERT_FORTEZZA_DATA_PROP$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(8, C_CHAR).withName("SerialNumber"),
        C_INT.withName("CertIndex"),
        MemoryLayout.ofSequence(36, C_CHAR).withName("CertLabel")
    ).withName("_CERT_FORTEZZA_DATA_PROP");
    static final jdk.incubator.foreign.MemoryLayout _CERT_FORTEZZA_DATA_PROP$struct$LAYOUT() { return _CERT_FORTEZZA_DATA_PROP$struct$LAYOUT_; }

    static final MemoryLayout _CERT_FORTEZZA_DATA_PROP$CertIndex$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _CERT_FORTEZZA_DATA_PROP$CertIndex$LAYOUT() { return _CERT_FORTEZZA_DATA_PROP$CertIndex$LAYOUT_; }

    static final VarHandle _CERT_FORTEZZA_DATA_PROP$CertIndex$VH_ = _CERT_FORTEZZA_DATA_PROP$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CertIndex"));
    static final java.lang.invoke.VarHandle _CERT_FORTEZZA_DATA_PROP$CertIndex$VH() { return _CERT_FORTEZZA_DATA_PROP$CertIndex$VH_; }

    static final MemoryLayout _CRYPT_RC4_KEY_STATE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(16, C_CHAR).withName("Key"),
        MemoryLayout.ofSequence(256, C_CHAR).withName("SBox"),
        C_CHAR.withName("i"),
        C_CHAR.withName("j")
    ).withName("_CRYPT_RC4_KEY_STATE");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RC4_KEY_STATE$struct$LAYOUT() { return _CRYPT_RC4_KEY_STATE$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_RC4_KEY_STATE$i$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RC4_KEY_STATE$i$LAYOUT() { return _CRYPT_RC4_KEY_STATE$i$LAYOUT_; }

    static final VarHandle _CRYPT_RC4_KEY_STATE$i$VH_ = _CRYPT_RC4_KEY_STATE$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("i"));
    static final java.lang.invoke.VarHandle _CRYPT_RC4_KEY_STATE$i$VH() { return _CRYPT_RC4_KEY_STATE$i$VH_; }

    static final MemoryLayout _CRYPT_RC4_KEY_STATE$j$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RC4_KEY_STATE$j$LAYOUT() { return _CRYPT_RC4_KEY_STATE$j$LAYOUT_; }

    static final VarHandle _CRYPT_RC4_KEY_STATE$j$VH_ = _CRYPT_RC4_KEY_STATE$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("j"));
    static final java.lang.invoke.VarHandle _CRYPT_RC4_KEY_STATE$j$VH() { return _CRYPT_RC4_KEY_STATE$j$VH_; }

    static final MemoryLayout _CRYPT_DES_KEY_STATE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(8, C_CHAR).withName("Key"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("IV"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Feedback")
    ).withName("_CRYPT_DES_KEY_STATE");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_DES_KEY_STATE$struct$LAYOUT() { return _CRYPT_DES_KEY_STATE$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_3DES_KEY_STATE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(24, C_CHAR).withName("Key"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("IV"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Feedback")
    ).withName("_CRYPT_3DES_KEY_STATE");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_3DES_KEY_STATE$struct$LAYOUT() { return _CRYPT_3DES_KEY_STATE$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_AES_128_KEY_STATE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(16, C_CHAR).withName("Key"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("IV"),
        MemoryLayout.ofSequence(11, MemoryLayout.ofSequence(16, C_CHAR)).withName("EncryptionState"),
        MemoryLayout.ofSequence(11, MemoryLayout.ofSequence(16, C_CHAR)).withName("DecryptionState"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("Feedback")
    ).withName("_CRYPT_AES_128_KEY_STATE");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_AES_128_KEY_STATE$struct$LAYOUT() { return _CRYPT_AES_128_KEY_STATE$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_AES_256_KEY_STATE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(32, C_CHAR).withName("Key"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("IV"),
        MemoryLayout.ofSequence(15, MemoryLayout.ofSequence(16, C_CHAR)).withName("EncryptionState"),
        MemoryLayout.ofSequence(15, MemoryLayout.ofSequence(16, C_CHAR)).withName("DecryptionState"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("Feedback")
    ).withName("_CRYPT_AES_256_KEY_STATE");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_AES_256_KEY_STATE$struct$LAYOUT() { return _CRYPT_AES_256_KEY_STATE$struct$LAYOUT_; }

    static final MemoryLayout _CRYPTOAPI_BLOB$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbData"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pbData")
    ).withName("_CRYPTOAPI_BLOB");
    static final jdk.incubator.foreign.MemoryLayout _CRYPTOAPI_BLOB$struct$LAYOUT() { return _CRYPTOAPI_BLOB$struct$LAYOUT_; }

    static final MemoryLayout _CRYPTOAPI_BLOB$cbData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPTOAPI_BLOB$cbData$LAYOUT() { return _CRYPTOAPI_BLOB$cbData$LAYOUT_; }

    static final VarHandle _CRYPTOAPI_BLOB$cbData$VH_ = _CRYPTOAPI_BLOB$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    static final java.lang.invoke.VarHandle _CRYPTOAPI_BLOB$cbData$VH() { return _CRYPTOAPI_BLOB$cbData$VH_; }

    static final MemoryLayout _CRYPTOAPI_BLOB$pbData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPTOAPI_BLOB$pbData$LAYOUT() { return _CRYPTOAPI_BLOB$pbData$LAYOUT_; }

    static final VarHandle _CRYPTOAPI_BLOB$pbData$VH_ = MemoryHandles.asAddressVarHandle(_CRYPTOAPI_BLOB$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pbData")));
    static final java.lang.invoke.VarHandle _CRYPTOAPI_BLOB$pbData$VH() { return _CRYPTOAPI_BLOB$pbData$VH_; }

    static final MemoryLayout _CMS_DH_KEY_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwVersion"),
        C_INT.withName("Algid"),
        C_POINTER.withName("pszContentEncObjId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("PubInfo"),
        C_POINTER.withName("pReserved")
    ).withName("_CMS_DH_KEY_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMS_DH_KEY_INFO$struct$LAYOUT() { return _CMS_DH_KEY_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMS_DH_KEY_INFO$dwVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMS_DH_KEY_INFO$dwVersion$LAYOUT() { return _CMS_DH_KEY_INFO$dwVersion$LAYOUT_; }

    static final VarHandle _CMS_DH_KEY_INFO$dwVersion$VH_ = _CMS_DH_KEY_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersion"));
    static final java.lang.invoke.VarHandle _CMS_DH_KEY_INFO$dwVersion$VH() { return _CMS_DH_KEY_INFO$dwVersion$VH_; }

    static final MemoryLayout _CMS_DH_KEY_INFO$Algid$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _CMS_DH_KEY_INFO$Algid$LAYOUT() { return _CMS_DH_KEY_INFO$Algid$LAYOUT_; }

    static final VarHandle _CMS_DH_KEY_INFO$Algid$VH_ = _CMS_DH_KEY_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Algid"));
    static final java.lang.invoke.VarHandle _CMS_DH_KEY_INFO$Algid$VH() { return _CMS_DH_KEY_INFO$Algid$VH_; }

    static final MemoryLayout _CMS_DH_KEY_INFO$pszContentEncObjId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMS_DH_KEY_INFO$pszContentEncObjId$LAYOUT() { return _CMS_DH_KEY_INFO$pszContentEncObjId$LAYOUT_; }

    static final VarHandle _CMS_DH_KEY_INFO$pszContentEncObjId$VH_ = MemoryHandles.asAddressVarHandle(_CMS_DH_KEY_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszContentEncObjId")));
    static final java.lang.invoke.VarHandle _CMS_DH_KEY_INFO$pszContentEncObjId$VH() { return _CMS_DH_KEY_INFO$pszContentEncObjId$VH_; }

    static final MemoryLayout _CMS_DH_KEY_INFO$pReserved$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMS_DH_KEY_INFO$pReserved$LAYOUT() { return _CMS_DH_KEY_INFO$pReserved$LAYOUT_; }

    static final VarHandle _CMS_DH_KEY_INFO$pReserved$VH_ = MemoryHandles.asAddressVarHandle(_CMS_DH_KEY_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pReserved")));
    static final java.lang.invoke.VarHandle _CMS_DH_KEY_INFO$pReserved$VH() { return _CMS_DH_KEY_INFO$pReserved$VH_; }

    static final FunctionDescriptor CryptAcquireContextA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptAcquireContextA$FUNC() { return CryptAcquireContextA$FUNC_; }

    static final MethodHandle CryptAcquireContextA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptAcquireContextA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        CryptAcquireContextA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptAcquireContextA$MH() { return CryptAcquireContextA$MH_; }

    static final FunctionDescriptor CryptAcquireContextW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptAcquireContextW$FUNC() { return CryptAcquireContextW$FUNC_; }

    static final MethodHandle CryptAcquireContextW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptAcquireContextW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        CryptAcquireContextW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptAcquireContextW$MH() { return CryptAcquireContextW$MH_; }

    static final FunctionDescriptor CryptReleaseContext$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptReleaseContext$FUNC() { return CryptReleaseContext$FUNC_; }

    static final MethodHandle CryptReleaseContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptReleaseContext",
        "(JI)I",
        CryptReleaseContext$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptReleaseContext$MH() { return CryptReleaseContext$MH_; }

    static final FunctionDescriptor CryptGenKey$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_INT,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptGenKey$FUNC() { return CryptGenKey$FUNC_; }

    static final MethodHandle CryptGenKey$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptGenKey",
        "(JIILjdk/incubator/foreign/MemoryAddress;)I",
        CryptGenKey$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptGenKey$MH() { return CryptGenKey$MH_; }

    static final FunctionDescriptor CryptDeriveKey$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_INT,
        C_LONGLONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptDeriveKey$FUNC() { return CryptDeriveKey$FUNC_; }

    static final MethodHandle CryptDeriveKey$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptDeriveKey",
        "(JIJILjdk/incubator/foreign/MemoryAddress;)I",
        CryptDeriveKey$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptDeriveKey$MH() { return CryptDeriveKey$MH_; }

    static final FunctionDescriptor CryptDestroyKey$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptDestroyKey$FUNC() { return CryptDestroyKey$FUNC_; }

    static final MethodHandle CryptDestroyKey$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptDestroyKey",
        "(J)I",
        CryptDestroyKey$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptDestroyKey$MH() { return CryptDestroyKey$MH_; }

    static final FunctionDescriptor CryptSetKeyParam$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptSetKeyParam$FUNC() { return CryptSetKeyParam$FUNC_; }

    static final MethodHandle CryptSetKeyParam$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptSetKeyParam",
        "(JILjdk/incubator/foreign/MemoryAddress;I)I",
        CryptSetKeyParam$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptSetKeyParam$MH() { return CryptSetKeyParam$MH_; }

    static final FunctionDescriptor CryptGetKeyParam$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptGetKeyParam$FUNC() { return CryptGetKeyParam$FUNC_; }

    static final MethodHandle CryptGetKeyParam$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptGetKeyParam",
        "(JILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        CryptGetKeyParam$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptGetKeyParam$MH() { return CryptGetKeyParam$MH_; }

    static final FunctionDescriptor CryptSetHashParam$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptSetHashParam$FUNC() { return CryptSetHashParam$FUNC_; }

    static final MethodHandle CryptSetHashParam$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptSetHashParam",
        "(JILjdk/incubator/foreign/MemoryAddress;I)I",
        CryptSetHashParam$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptSetHashParam$MH() { return CryptSetHashParam$MH_; }

}

