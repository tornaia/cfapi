// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$43 extends cfapi_h$constants$42 {

    /* package-private */ cfapi_h$constants$43() {}
    static final FunctionDescriptor timeSetEvent$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_INT,
        C_POINTER,
        C_LONGLONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor timeSetEvent$FUNC() { return timeSetEvent$FUNC_; }

    static final MethodHandle timeSetEvent$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "timeSetEvent",
        "(IILjdk/incubator/foreign/MemoryAddress;JI)I",
        timeSetEvent$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle timeSetEvent$MH() { return timeSetEvent$MH_; }

    static final FunctionDescriptor timeSetEvent$fptc$FUNC_ = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_LONGLONG,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor timeSetEvent$fptc$FUNC() { return timeSetEvent$fptc$FUNC_; }

    static final FunctionDescriptor timeKillEvent$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor timeKillEvent$FUNC() { return timeKillEvent$FUNC_; }

    static final MethodHandle timeKillEvent$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "timeKillEvent",
        "(I)I",
        timeKillEvent$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle timeKillEvent$MH() { return timeKillEvent$MH_; }

    static final FunctionDescriptor sndPlaySoundA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor sndPlaySoundA$FUNC() { return sndPlaySoundA$FUNC_; }

    static final MethodHandle sndPlaySoundA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "sndPlaySoundA",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        sndPlaySoundA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle sndPlaySoundA$MH() { return sndPlaySoundA$MH_; }

    static final FunctionDescriptor sndPlaySoundW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor sndPlaySoundW$FUNC() { return sndPlaySoundW$FUNC_; }

    static final MethodHandle sndPlaySoundW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "sndPlaySoundW",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        sndPlaySoundW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle sndPlaySoundW$MH() { return sndPlaySoundW$MH_; }

    static final FunctionDescriptor PlaySoundA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor PlaySoundA$FUNC() { return PlaySoundA$FUNC_; }

    static final MethodHandle PlaySoundA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "PlaySoundA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        PlaySoundA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle PlaySoundA$MH() { return PlaySoundA$MH_; }

    static final FunctionDescriptor PlaySoundW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor PlaySoundW$FUNC() { return PlaySoundW$FUNC_; }

    static final MethodHandle PlaySoundW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "PlaySoundW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        PlaySoundW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle PlaySoundW$MH() { return PlaySoundW$MH_; }

    static final MemoryLayout HWAVE__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HWAVE__");
    static final jdk.incubator.foreign.MemoryLayout HWAVE__$struct$LAYOUT() { return HWAVE__$struct$LAYOUT_; }

    static final MemoryLayout HWAVE__$unused$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout HWAVE__$unused$LAYOUT() { return HWAVE__$unused$LAYOUT_; }

    static final VarHandle HWAVE__$unused$VH_ = HWAVE__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    static final java.lang.invoke.VarHandle HWAVE__$unused$VH() { return HWAVE__$unused$VH_; }

    static final MemoryLayout HWAVEIN__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HWAVEIN__");
    static final jdk.incubator.foreign.MemoryLayout HWAVEIN__$struct$LAYOUT() { return HWAVEIN__$struct$LAYOUT_; }

    static final MemoryLayout HWAVEIN__$unused$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout HWAVEIN__$unused$LAYOUT() { return HWAVEIN__$unused$LAYOUT_; }

    static final VarHandle HWAVEIN__$unused$VH_ = HWAVEIN__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    static final java.lang.invoke.VarHandle HWAVEIN__$unused$VH() { return HWAVEIN__$unused$VH_; }

    static final MemoryLayout HWAVEOUT__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HWAVEOUT__");
    static final jdk.incubator.foreign.MemoryLayout HWAVEOUT__$struct$LAYOUT() { return HWAVEOUT__$struct$LAYOUT_; }

    static final MemoryLayout HWAVEOUT__$unused$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout HWAVEOUT__$unused$LAYOUT() { return HWAVEOUT__$unused$LAYOUT_; }

    static final VarHandle HWAVEOUT__$unused$VH_ = HWAVEOUT__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    static final java.lang.invoke.VarHandle HWAVEOUT__$unused$VH() { return HWAVEOUT__$unused$VH_; }

    static final MemoryLayout wavehdr_tag$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpData"),
        C_LONG.withName("dwBufferLength"),
        C_LONG.withName("dwBytesRecorded"),
        C_LONGLONG.withName("dwUser"),
        C_LONG.withName("dwFlags"),
        C_LONG.withName("dwLoops"),
        C_POINTER.withName("lpNext"),
        C_LONGLONG.withName("reserved")
    ).withName("wavehdr_tag");
    static final jdk.incubator.foreign.MemoryLayout wavehdr_tag$struct$LAYOUT() { return wavehdr_tag$struct$LAYOUT_; }

    static final MemoryLayout wavehdr_tag$lpData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout wavehdr_tag$lpData$LAYOUT() { return wavehdr_tag$lpData$LAYOUT_; }

    static final VarHandle wavehdr_tag$lpData$VH_ = MemoryHandles.asAddressVarHandle(wavehdr_tag$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpData")));
    static final java.lang.invoke.VarHandle wavehdr_tag$lpData$VH() { return wavehdr_tag$lpData$VH_; }

    static final MemoryLayout wavehdr_tag$dwBufferLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout wavehdr_tag$dwBufferLength$LAYOUT() { return wavehdr_tag$dwBufferLength$LAYOUT_; }

    static final VarHandle wavehdr_tag$dwBufferLength$VH_ = wavehdr_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwBufferLength"));
    static final java.lang.invoke.VarHandle wavehdr_tag$dwBufferLength$VH() { return wavehdr_tag$dwBufferLength$VH_; }

    static final MemoryLayout wavehdr_tag$dwBytesRecorded$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout wavehdr_tag$dwBytesRecorded$LAYOUT() { return wavehdr_tag$dwBytesRecorded$LAYOUT_; }

    static final VarHandle wavehdr_tag$dwBytesRecorded$VH_ = wavehdr_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwBytesRecorded"));
    static final java.lang.invoke.VarHandle wavehdr_tag$dwBytesRecorded$VH() { return wavehdr_tag$dwBytesRecorded$VH_; }

    static final MemoryLayout wavehdr_tag$dwUser$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout wavehdr_tag$dwUser$LAYOUT() { return wavehdr_tag$dwUser$LAYOUT_; }

    static final VarHandle wavehdr_tag$dwUser$VH_ = wavehdr_tag$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwUser"));
    static final java.lang.invoke.VarHandle wavehdr_tag$dwUser$VH() { return wavehdr_tag$dwUser$VH_; }

    static final MemoryLayout wavehdr_tag$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout wavehdr_tag$dwFlags$LAYOUT() { return wavehdr_tag$dwFlags$LAYOUT_; }

    static final VarHandle wavehdr_tag$dwFlags$VH_ = wavehdr_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle wavehdr_tag$dwFlags$VH() { return wavehdr_tag$dwFlags$VH_; }

    static final MemoryLayout wavehdr_tag$dwLoops$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout wavehdr_tag$dwLoops$LAYOUT() { return wavehdr_tag$dwLoops$LAYOUT_; }

    static final VarHandle wavehdr_tag$dwLoops$VH_ = wavehdr_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwLoops"));
    static final java.lang.invoke.VarHandle wavehdr_tag$dwLoops$VH() { return wavehdr_tag$dwLoops$VH_; }

    static final MemoryLayout wavehdr_tag$lpNext$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout wavehdr_tag$lpNext$LAYOUT() { return wavehdr_tag$lpNext$LAYOUT_; }

    static final VarHandle wavehdr_tag$lpNext$VH_ = MemoryHandles.asAddressVarHandle(wavehdr_tag$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpNext")));
    static final java.lang.invoke.VarHandle wavehdr_tag$lpNext$VH() { return wavehdr_tag$lpNext$VH_; }

    static final MemoryLayout wavehdr_tag$reserved$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout wavehdr_tag$reserved$LAYOUT() { return wavehdr_tag$reserved$LAYOUT_; }

    static final VarHandle wavehdr_tag$reserved$VH_ = wavehdr_tag$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("reserved"));
    static final java.lang.invoke.VarHandle wavehdr_tag$reserved$VH() { return wavehdr_tag$reserved$VH_; }

    static final MemoryLayout tagWAVEOUTCAPSA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wMid"),
        C_SHORT.withName("wPid"),
        C_INT.withName("vDriverVersion"),
        MemoryLayout.ofSequence(32, C_CHAR).withName("szPname"),
        C_LONG.withName("dwFormats"),
        C_SHORT.withName("wChannels"),
        C_SHORT.withName("wReserved1"),
        C_LONG.withName("dwSupport")
    ).withName("tagWAVEOUTCAPSA");
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPSA$struct$LAYOUT() { return tagWAVEOUTCAPSA$struct$LAYOUT_; }

    static final MemoryLayout tagWAVEOUTCAPSA$wMid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPSA$wMid$LAYOUT() { return tagWAVEOUTCAPSA$wMid$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPSA$wMid$VH_ = tagWAVEOUTCAPSA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMid"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPSA$wMid$VH() { return tagWAVEOUTCAPSA$wMid$VH_; }

    static final MemoryLayout tagWAVEOUTCAPSA$wPid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPSA$wPid$LAYOUT() { return tagWAVEOUTCAPSA$wPid$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPSA$wPid$VH_ = tagWAVEOUTCAPSA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wPid"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPSA$wPid$VH() { return tagWAVEOUTCAPSA$wPid$VH_; }

    static final MemoryLayout tagWAVEOUTCAPSA$vDriverVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPSA$vDriverVersion$LAYOUT() { return tagWAVEOUTCAPSA$vDriverVersion$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPSA$vDriverVersion$VH_ = tagWAVEOUTCAPSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("vDriverVersion"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPSA$vDriverVersion$VH() { return tagWAVEOUTCAPSA$vDriverVersion$VH_; }

    static final MemoryLayout tagWAVEOUTCAPSA$dwFormats$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPSA$dwFormats$LAYOUT() { return tagWAVEOUTCAPSA$dwFormats$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPSA$dwFormats$VH_ = tagWAVEOUTCAPSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFormats"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPSA$dwFormats$VH() { return tagWAVEOUTCAPSA$dwFormats$VH_; }

    static final MemoryLayout tagWAVEOUTCAPSA$wChannels$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPSA$wChannels$LAYOUT() { return tagWAVEOUTCAPSA$wChannels$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPSA$wChannels$VH_ = tagWAVEOUTCAPSA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wChannels"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPSA$wChannels$VH() { return tagWAVEOUTCAPSA$wChannels$VH_; }

    static final MemoryLayout tagWAVEOUTCAPSA$wReserved1$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPSA$wReserved1$LAYOUT() { return tagWAVEOUTCAPSA$wReserved1$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPSA$wReserved1$VH_ = tagWAVEOUTCAPSA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReserved1"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPSA$wReserved1$VH() { return tagWAVEOUTCAPSA$wReserved1$VH_; }

    static final MemoryLayout tagWAVEOUTCAPSA$dwSupport$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPSA$dwSupport$LAYOUT() { return tagWAVEOUTCAPSA$dwSupport$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPSA$dwSupport$VH_ = tagWAVEOUTCAPSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSupport"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPSA$dwSupport$VH() { return tagWAVEOUTCAPSA$dwSupport$VH_; }

    static final MemoryLayout tagWAVEOUTCAPSW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wMid"),
        C_SHORT.withName("wPid"),
        C_INT.withName("vDriverVersion"),
        MemoryLayout.ofSequence(32, C_SHORT).withName("szPname"),
        C_LONG.withName("dwFormats"),
        C_SHORT.withName("wChannels"),
        C_SHORT.withName("wReserved1"),
        C_LONG.withName("dwSupport")
    ).withName("tagWAVEOUTCAPSW");
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPSW$struct$LAYOUT() { return tagWAVEOUTCAPSW$struct$LAYOUT_; }

    static final MemoryLayout tagWAVEOUTCAPSW$wMid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPSW$wMid$LAYOUT() { return tagWAVEOUTCAPSW$wMid$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPSW$wMid$VH_ = tagWAVEOUTCAPSW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMid"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPSW$wMid$VH() { return tagWAVEOUTCAPSW$wMid$VH_; }

    static final MemoryLayout tagWAVEOUTCAPSW$wPid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPSW$wPid$LAYOUT() { return tagWAVEOUTCAPSW$wPid$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPSW$wPid$VH_ = tagWAVEOUTCAPSW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wPid"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPSW$wPid$VH() { return tagWAVEOUTCAPSW$wPid$VH_; }

    static final MemoryLayout tagWAVEOUTCAPSW$vDriverVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPSW$vDriverVersion$LAYOUT() { return tagWAVEOUTCAPSW$vDriverVersion$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPSW$vDriverVersion$VH_ = tagWAVEOUTCAPSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("vDriverVersion"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPSW$vDriverVersion$VH() { return tagWAVEOUTCAPSW$vDriverVersion$VH_; }

    static final MemoryLayout tagWAVEOUTCAPSW$dwFormats$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPSW$dwFormats$LAYOUT() { return tagWAVEOUTCAPSW$dwFormats$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPSW$dwFormats$VH_ = tagWAVEOUTCAPSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFormats"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPSW$dwFormats$VH() { return tagWAVEOUTCAPSW$dwFormats$VH_; }

    static final MemoryLayout tagWAVEOUTCAPSW$wChannels$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPSW$wChannels$LAYOUT() { return tagWAVEOUTCAPSW$wChannels$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPSW$wChannels$VH_ = tagWAVEOUTCAPSW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wChannels"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPSW$wChannels$VH() { return tagWAVEOUTCAPSW$wChannels$VH_; }

    static final MemoryLayout tagWAVEOUTCAPSW$wReserved1$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPSW$wReserved1$LAYOUT() { return tagWAVEOUTCAPSW$wReserved1$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPSW$wReserved1$VH_ = tagWAVEOUTCAPSW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReserved1"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPSW$wReserved1$VH() { return tagWAVEOUTCAPSW$wReserved1$VH_; }

    static final MemoryLayout tagWAVEOUTCAPSW$dwSupport$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPSW$dwSupport$LAYOUT() { return tagWAVEOUTCAPSW$dwSupport$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPSW$dwSupport$VH_ = tagWAVEOUTCAPSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSupport"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPSW$dwSupport$VH() { return tagWAVEOUTCAPSW$dwSupport$VH_; }

    static final MemoryLayout tagWAVEOUTCAPS2A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wMid"),
        C_SHORT.withName("wPid"),
        C_INT.withName("vDriverVersion"),
        MemoryLayout.ofSequence(32, C_CHAR).withName("szPname"),
        C_LONG.withName("dwFormats"),
        C_SHORT.withName("wChannels"),
        C_SHORT.withName("wReserved1"),
        C_LONG.withName("dwSupport"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ManufacturerGuid"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ProductGuid"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("NameGuid")
    ).withName("tagWAVEOUTCAPS2A");
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPS2A$struct$LAYOUT() { return tagWAVEOUTCAPS2A$struct$LAYOUT_; }

    static final MemoryLayout tagWAVEOUTCAPS2A$wMid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPS2A$wMid$LAYOUT() { return tagWAVEOUTCAPS2A$wMid$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPS2A$wMid$VH_ = tagWAVEOUTCAPS2A$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMid"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPS2A$wMid$VH() { return tagWAVEOUTCAPS2A$wMid$VH_; }

    static final MemoryLayout tagWAVEOUTCAPS2A$wPid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPS2A$wPid$LAYOUT() { return tagWAVEOUTCAPS2A$wPid$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPS2A$wPid$VH_ = tagWAVEOUTCAPS2A$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wPid"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPS2A$wPid$VH() { return tagWAVEOUTCAPS2A$wPid$VH_; }

    static final MemoryLayout tagWAVEOUTCAPS2A$vDriverVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPS2A$vDriverVersion$LAYOUT() { return tagWAVEOUTCAPS2A$vDriverVersion$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPS2A$vDriverVersion$VH_ = tagWAVEOUTCAPS2A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("vDriverVersion"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPS2A$vDriverVersion$VH() { return tagWAVEOUTCAPS2A$vDriverVersion$VH_; }

    static final MemoryLayout tagWAVEOUTCAPS2A$dwFormats$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPS2A$dwFormats$LAYOUT() { return tagWAVEOUTCAPS2A$dwFormats$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPS2A$dwFormats$VH_ = tagWAVEOUTCAPS2A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFormats"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPS2A$dwFormats$VH() { return tagWAVEOUTCAPS2A$dwFormats$VH_; }

    static final MemoryLayout tagWAVEOUTCAPS2A$wChannels$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPS2A$wChannels$LAYOUT() { return tagWAVEOUTCAPS2A$wChannels$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPS2A$wChannels$VH_ = tagWAVEOUTCAPS2A$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wChannels"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPS2A$wChannels$VH() { return tagWAVEOUTCAPS2A$wChannels$VH_; }

    static final MemoryLayout tagWAVEOUTCAPS2A$wReserved1$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPS2A$wReserved1$LAYOUT() { return tagWAVEOUTCAPS2A$wReserved1$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPS2A$wReserved1$VH_ = tagWAVEOUTCAPS2A$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReserved1"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPS2A$wReserved1$VH() { return tagWAVEOUTCAPS2A$wReserved1$VH_; }

    static final MemoryLayout tagWAVEOUTCAPS2A$dwSupport$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPS2A$dwSupport$LAYOUT() { return tagWAVEOUTCAPS2A$dwSupport$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPS2A$dwSupport$VH_ = tagWAVEOUTCAPS2A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSupport"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPS2A$dwSupport$VH() { return tagWAVEOUTCAPS2A$dwSupport$VH_; }

    static final MemoryLayout tagWAVEOUTCAPS2W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wMid"),
        C_SHORT.withName("wPid"),
        C_INT.withName("vDriverVersion"),
        MemoryLayout.ofSequence(32, C_SHORT).withName("szPname"),
        C_LONG.withName("dwFormats"),
        C_SHORT.withName("wChannels"),
        C_SHORT.withName("wReserved1"),
        C_LONG.withName("dwSupport"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ManufacturerGuid"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ProductGuid"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("NameGuid")
    ).withName("tagWAVEOUTCAPS2W");
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPS2W$struct$LAYOUT() { return tagWAVEOUTCAPS2W$struct$LAYOUT_; }

    static final MemoryLayout tagWAVEOUTCAPS2W$wMid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPS2W$wMid$LAYOUT() { return tagWAVEOUTCAPS2W$wMid$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPS2W$wMid$VH_ = tagWAVEOUTCAPS2W$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMid"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPS2W$wMid$VH() { return tagWAVEOUTCAPS2W$wMid$VH_; }

    static final MemoryLayout tagWAVEOUTCAPS2W$wPid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPS2W$wPid$LAYOUT() { return tagWAVEOUTCAPS2W$wPid$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPS2W$wPid$VH_ = tagWAVEOUTCAPS2W$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wPid"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPS2W$wPid$VH() { return tagWAVEOUTCAPS2W$wPid$VH_; }

    static final MemoryLayout tagWAVEOUTCAPS2W$vDriverVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPS2W$vDriverVersion$LAYOUT() { return tagWAVEOUTCAPS2W$vDriverVersion$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPS2W$vDriverVersion$VH_ = tagWAVEOUTCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("vDriverVersion"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPS2W$vDriverVersion$VH() { return tagWAVEOUTCAPS2W$vDriverVersion$VH_; }

    static final MemoryLayout tagWAVEOUTCAPS2W$dwFormats$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPS2W$dwFormats$LAYOUT() { return tagWAVEOUTCAPS2W$dwFormats$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPS2W$dwFormats$VH_ = tagWAVEOUTCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFormats"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPS2W$dwFormats$VH() { return tagWAVEOUTCAPS2W$dwFormats$VH_; }

    static final MemoryLayout tagWAVEOUTCAPS2W$wChannels$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPS2W$wChannels$LAYOUT() { return tagWAVEOUTCAPS2W$wChannels$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPS2W$wChannels$VH_ = tagWAVEOUTCAPS2W$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wChannels"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPS2W$wChannels$VH() { return tagWAVEOUTCAPS2W$wChannels$VH_; }

    static final MemoryLayout tagWAVEOUTCAPS2W$wReserved1$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPS2W$wReserved1$LAYOUT() { return tagWAVEOUTCAPS2W$wReserved1$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPS2W$wReserved1$VH_ = tagWAVEOUTCAPS2W$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReserved1"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPS2W$wReserved1$VH() { return tagWAVEOUTCAPS2W$wReserved1$VH_; }

    static final MemoryLayout tagWAVEOUTCAPS2W$dwSupport$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEOUTCAPS2W$dwSupport$LAYOUT() { return tagWAVEOUTCAPS2W$dwSupport$LAYOUT_; }

    static final VarHandle tagWAVEOUTCAPS2W$dwSupport$VH_ = tagWAVEOUTCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSupport"));
    static final java.lang.invoke.VarHandle tagWAVEOUTCAPS2W$dwSupport$VH() { return tagWAVEOUTCAPS2W$dwSupport$VH_; }

    static final MemoryLayout tagWAVEINCAPSA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wMid"),
        C_SHORT.withName("wPid"),
        C_INT.withName("vDriverVersion"),
        MemoryLayout.ofSequence(32, C_CHAR).withName("szPname"),
        C_LONG.withName("dwFormats"),
        C_SHORT.withName("wChannels"),
        C_SHORT.withName("wReserved1")
    ).withName("tagWAVEINCAPSA");
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPSA$struct$LAYOUT() { return tagWAVEINCAPSA$struct$LAYOUT_; }

    static final MemoryLayout tagWAVEINCAPSA$wMid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPSA$wMid$LAYOUT() { return tagWAVEINCAPSA$wMid$LAYOUT_; }

    static final VarHandle tagWAVEINCAPSA$wMid$VH_ = tagWAVEINCAPSA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMid"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPSA$wMid$VH() { return tagWAVEINCAPSA$wMid$VH_; }

    static final MemoryLayout tagWAVEINCAPSA$wPid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPSA$wPid$LAYOUT() { return tagWAVEINCAPSA$wPid$LAYOUT_; }

    static final VarHandle tagWAVEINCAPSA$wPid$VH_ = tagWAVEINCAPSA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wPid"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPSA$wPid$VH() { return tagWAVEINCAPSA$wPid$VH_; }

    static final MemoryLayout tagWAVEINCAPSA$vDriverVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPSA$vDriverVersion$LAYOUT() { return tagWAVEINCAPSA$vDriverVersion$LAYOUT_; }

    static final VarHandle tagWAVEINCAPSA$vDriverVersion$VH_ = tagWAVEINCAPSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("vDriverVersion"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPSA$vDriverVersion$VH() { return tagWAVEINCAPSA$vDriverVersion$VH_; }

    static final MemoryLayout tagWAVEINCAPSA$dwFormats$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPSA$dwFormats$LAYOUT() { return tagWAVEINCAPSA$dwFormats$LAYOUT_; }

    static final VarHandle tagWAVEINCAPSA$dwFormats$VH_ = tagWAVEINCAPSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFormats"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPSA$dwFormats$VH() { return tagWAVEINCAPSA$dwFormats$VH_; }

    static final MemoryLayout tagWAVEINCAPSA$wChannels$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPSA$wChannels$LAYOUT() { return tagWAVEINCAPSA$wChannels$LAYOUT_; }

    static final VarHandle tagWAVEINCAPSA$wChannels$VH_ = tagWAVEINCAPSA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wChannels"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPSA$wChannels$VH() { return tagWAVEINCAPSA$wChannels$VH_; }

    static final MemoryLayout tagWAVEINCAPSA$wReserved1$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPSA$wReserved1$LAYOUT() { return tagWAVEINCAPSA$wReserved1$LAYOUT_; }

    static final VarHandle tagWAVEINCAPSA$wReserved1$VH_ = tagWAVEINCAPSA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReserved1"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPSA$wReserved1$VH() { return tagWAVEINCAPSA$wReserved1$VH_; }

    static final MemoryLayout tagWAVEINCAPSW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wMid"),
        C_SHORT.withName("wPid"),
        C_INT.withName("vDriverVersion"),
        MemoryLayout.ofSequence(32, C_SHORT).withName("szPname"),
        C_LONG.withName("dwFormats"),
        C_SHORT.withName("wChannels"),
        C_SHORT.withName("wReserved1")
    ).withName("tagWAVEINCAPSW");
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPSW$struct$LAYOUT() { return tagWAVEINCAPSW$struct$LAYOUT_; }

    static final MemoryLayout tagWAVEINCAPSW$wMid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPSW$wMid$LAYOUT() { return tagWAVEINCAPSW$wMid$LAYOUT_; }

    static final VarHandle tagWAVEINCAPSW$wMid$VH_ = tagWAVEINCAPSW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMid"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPSW$wMid$VH() { return tagWAVEINCAPSW$wMid$VH_; }

    static final MemoryLayout tagWAVEINCAPSW$wPid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPSW$wPid$LAYOUT() { return tagWAVEINCAPSW$wPid$LAYOUT_; }

    static final VarHandle tagWAVEINCAPSW$wPid$VH_ = tagWAVEINCAPSW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wPid"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPSW$wPid$VH() { return tagWAVEINCAPSW$wPid$VH_; }

    static final MemoryLayout tagWAVEINCAPSW$vDriverVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPSW$vDriverVersion$LAYOUT() { return tagWAVEINCAPSW$vDriverVersion$LAYOUT_; }

    static final VarHandle tagWAVEINCAPSW$vDriverVersion$VH_ = tagWAVEINCAPSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("vDriverVersion"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPSW$vDriverVersion$VH() { return tagWAVEINCAPSW$vDriverVersion$VH_; }

    static final MemoryLayout tagWAVEINCAPSW$dwFormats$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPSW$dwFormats$LAYOUT() { return tagWAVEINCAPSW$dwFormats$LAYOUT_; }

    static final VarHandle tagWAVEINCAPSW$dwFormats$VH_ = tagWAVEINCAPSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFormats"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPSW$dwFormats$VH() { return tagWAVEINCAPSW$dwFormats$VH_; }

    static final MemoryLayout tagWAVEINCAPSW$wChannels$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPSW$wChannels$LAYOUT() { return tagWAVEINCAPSW$wChannels$LAYOUT_; }

    static final VarHandle tagWAVEINCAPSW$wChannels$VH_ = tagWAVEINCAPSW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wChannels"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPSW$wChannels$VH() { return tagWAVEINCAPSW$wChannels$VH_; }

    static final MemoryLayout tagWAVEINCAPSW$wReserved1$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPSW$wReserved1$LAYOUT() { return tagWAVEINCAPSW$wReserved1$LAYOUT_; }

    static final VarHandle tagWAVEINCAPSW$wReserved1$VH_ = tagWAVEINCAPSW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReserved1"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPSW$wReserved1$VH() { return tagWAVEINCAPSW$wReserved1$VH_; }

    static final MemoryLayout tagWAVEINCAPS2A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wMid"),
        C_SHORT.withName("wPid"),
        C_INT.withName("vDriverVersion"),
        MemoryLayout.ofSequence(32, C_CHAR).withName("szPname"),
        C_LONG.withName("dwFormats"),
        C_SHORT.withName("wChannels"),
        C_SHORT.withName("wReserved1"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ManufacturerGuid"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ProductGuid"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("NameGuid")
    ).withName("tagWAVEINCAPS2A");
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPS2A$struct$LAYOUT() { return tagWAVEINCAPS2A$struct$LAYOUT_; }

    static final MemoryLayout tagWAVEINCAPS2A$wMid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPS2A$wMid$LAYOUT() { return tagWAVEINCAPS2A$wMid$LAYOUT_; }

    static final VarHandle tagWAVEINCAPS2A$wMid$VH_ = tagWAVEINCAPS2A$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMid"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPS2A$wMid$VH() { return tagWAVEINCAPS2A$wMid$VH_; }

    static final MemoryLayout tagWAVEINCAPS2A$wPid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPS2A$wPid$LAYOUT() { return tagWAVEINCAPS2A$wPid$LAYOUT_; }

    static final VarHandle tagWAVEINCAPS2A$wPid$VH_ = tagWAVEINCAPS2A$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wPid"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPS2A$wPid$VH() { return tagWAVEINCAPS2A$wPid$VH_; }

    static final MemoryLayout tagWAVEINCAPS2A$vDriverVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPS2A$vDriverVersion$LAYOUT() { return tagWAVEINCAPS2A$vDriverVersion$LAYOUT_; }

    static final VarHandle tagWAVEINCAPS2A$vDriverVersion$VH_ = tagWAVEINCAPS2A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("vDriverVersion"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPS2A$vDriverVersion$VH() { return tagWAVEINCAPS2A$vDriverVersion$VH_; }

    static final MemoryLayout tagWAVEINCAPS2A$dwFormats$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPS2A$dwFormats$LAYOUT() { return tagWAVEINCAPS2A$dwFormats$LAYOUT_; }

    static final VarHandle tagWAVEINCAPS2A$dwFormats$VH_ = tagWAVEINCAPS2A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFormats"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPS2A$dwFormats$VH() { return tagWAVEINCAPS2A$dwFormats$VH_; }

    static final MemoryLayout tagWAVEINCAPS2A$wChannels$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPS2A$wChannels$LAYOUT() { return tagWAVEINCAPS2A$wChannels$LAYOUT_; }

    static final VarHandle tagWAVEINCAPS2A$wChannels$VH_ = tagWAVEINCAPS2A$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wChannels"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPS2A$wChannels$VH() { return tagWAVEINCAPS2A$wChannels$VH_; }

    static final MemoryLayout tagWAVEINCAPS2A$wReserved1$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPS2A$wReserved1$LAYOUT() { return tagWAVEINCAPS2A$wReserved1$LAYOUT_; }

    static final VarHandle tagWAVEINCAPS2A$wReserved1$VH_ = tagWAVEINCAPS2A$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReserved1"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPS2A$wReserved1$VH() { return tagWAVEINCAPS2A$wReserved1$VH_; }

    static final MemoryLayout tagWAVEINCAPS2W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wMid"),
        C_SHORT.withName("wPid"),
        C_INT.withName("vDriverVersion"),
        MemoryLayout.ofSequence(32, C_SHORT).withName("szPname"),
        C_LONG.withName("dwFormats"),
        C_SHORT.withName("wChannels"),
        C_SHORT.withName("wReserved1"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ManufacturerGuid"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ProductGuid"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("NameGuid")
    ).withName("tagWAVEINCAPS2W");
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPS2W$struct$LAYOUT() { return tagWAVEINCAPS2W$struct$LAYOUT_; }

    static final MemoryLayout tagWAVEINCAPS2W$wMid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPS2W$wMid$LAYOUT() { return tagWAVEINCAPS2W$wMid$LAYOUT_; }

    static final VarHandle tagWAVEINCAPS2W$wMid$VH_ = tagWAVEINCAPS2W$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMid"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPS2W$wMid$VH() { return tagWAVEINCAPS2W$wMid$VH_; }

    static final MemoryLayout tagWAVEINCAPS2W$wPid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPS2W$wPid$LAYOUT() { return tagWAVEINCAPS2W$wPid$LAYOUT_; }

    static final VarHandle tagWAVEINCAPS2W$wPid$VH_ = tagWAVEINCAPS2W$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wPid"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPS2W$wPid$VH() { return tagWAVEINCAPS2W$wPid$VH_; }

    static final MemoryLayout tagWAVEINCAPS2W$vDriverVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPS2W$vDriverVersion$LAYOUT() { return tagWAVEINCAPS2W$vDriverVersion$LAYOUT_; }

    static final VarHandle tagWAVEINCAPS2W$vDriverVersion$VH_ = tagWAVEINCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("vDriverVersion"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPS2W$vDriverVersion$VH() { return tagWAVEINCAPS2W$vDriverVersion$VH_; }

    static final MemoryLayout tagWAVEINCAPS2W$dwFormats$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPS2W$dwFormats$LAYOUT() { return tagWAVEINCAPS2W$dwFormats$LAYOUT_; }

    static final VarHandle tagWAVEINCAPS2W$dwFormats$VH_ = tagWAVEINCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFormats"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPS2W$dwFormats$VH() { return tagWAVEINCAPS2W$dwFormats$VH_; }

    static final MemoryLayout tagWAVEINCAPS2W$wChannels$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPS2W$wChannels$LAYOUT() { return tagWAVEINCAPS2W$wChannels$LAYOUT_; }

    static final VarHandle tagWAVEINCAPS2W$wChannels$VH_ = tagWAVEINCAPS2W$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wChannels"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPS2W$wChannels$VH() { return tagWAVEINCAPS2W$wChannels$VH_; }

    static final MemoryLayout tagWAVEINCAPS2W$wReserved1$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagWAVEINCAPS2W$wReserved1$LAYOUT() { return tagWAVEINCAPS2W$wReserved1$LAYOUT_; }

    static final VarHandle tagWAVEINCAPS2W$wReserved1$VH_ = tagWAVEINCAPS2W$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReserved1"));
    static final java.lang.invoke.VarHandle tagWAVEINCAPS2W$wReserved1$VH() { return tagWAVEINCAPS2W$wReserved1$VH_; }

    static final MemoryLayout waveformat_tag$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wFormatTag"),
        C_SHORT.withName("nChannels"),
        C_LONG.withName("nSamplesPerSec"),
        C_LONG.withName("nAvgBytesPerSec"),
        C_SHORT.withName("nBlockAlign")
    ).withName("waveformat_tag");
    static final jdk.incubator.foreign.MemoryLayout waveformat_tag$struct$LAYOUT() { return waveformat_tag$struct$LAYOUT_; }

    static final MemoryLayout waveformat_tag$wFormatTag$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout waveformat_tag$wFormatTag$LAYOUT() { return waveformat_tag$wFormatTag$LAYOUT_; }

    static final VarHandle waveformat_tag$wFormatTag$VH_ = waveformat_tag$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wFormatTag"));
    static final java.lang.invoke.VarHandle waveformat_tag$wFormatTag$VH() { return waveformat_tag$wFormatTag$VH_; }

    static final MemoryLayout waveformat_tag$nChannels$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout waveformat_tag$nChannels$LAYOUT() { return waveformat_tag$nChannels$LAYOUT_; }

    static final VarHandle waveformat_tag$nChannels$VH_ = waveformat_tag$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("nChannels"));
    static final java.lang.invoke.VarHandle waveformat_tag$nChannels$VH() { return waveformat_tag$nChannels$VH_; }

    static final MemoryLayout waveformat_tag$nSamplesPerSec$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout waveformat_tag$nSamplesPerSec$LAYOUT() { return waveformat_tag$nSamplesPerSec$LAYOUT_; }

    static final VarHandle waveformat_tag$nSamplesPerSec$VH_ = waveformat_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nSamplesPerSec"));
    static final java.lang.invoke.VarHandle waveformat_tag$nSamplesPerSec$VH() { return waveformat_tag$nSamplesPerSec$VH_; }

    static final MemoryLayout waveformat_tag$nAvgBytesPerSec$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout waveformat_tag$nAvgBytesPerSec$LAYOUT() { return waveformat_tag$nAvgBytesPerSec$LAYOUT_; }

    static final VarHandle waveformat_tag$nAvgBytesPerSec$VH_ = waveformat_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nAvgBytesPerSec"));
    static final java.lang.invoke.VarHandle waveformat_tag$nAvgBytesPerSec$VH() { return waveformat_tag$nAvgBytesPerSec$VH_; }

    static final MemoryLayout waveformat_tag$nBlockAlign$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout waveformat_tag$nBlockAlign$LAYOUT() { return waveformat_tag$nBlockAlign$LAYOUT_; }

    static final VarHandle waveformat_tag$nBlockAlign$VH_ = waveformat_tag$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("nBlockAlign"));
    static final java.lang.invoke.VarHandle waveformat_tag$nBlockAlign$VH() { return waveformat_tag$nBlockAlign$VH_; }

    static final MemoryLayout pcmwaveformat_tag$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_SHORT.withName("wFormatTag"),
            C_SHORT.withName("nChannels"),
            C_LONG.withName("nSamplesPerSec"),
            C_LONG.withName("nAvgBytesPerSec"),
            C_SHORT.withName("nBlockAlign")
        ).withName("wf"),
        C_SHORT.withName("wBitsPerSample")
    ).withName("pcmwaveformat_tag");
    static final jdk.incubator.foreign.MemoryLayout pcmwaveformat_tag$struct$LAYOUT() { return pcmwaveformat_tag$struct$LAYOUT_; }

    static final MemoryLayout pcmwaveformat_tag$wBitsPerSample$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout pcmwaveformat_tag$wBitsPerSample$LAYOUT() { return pcmwaveformat_tag$wBitsPerSample$LAYOUT_; }

    static final VarHandle pcmwaveformat_tag$wBitsPerSample$VH_ = pcmwaveformat_tag$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wBitsPerSample"));
    static final java.lang.invoke.VarHandle pcmwaveformat_tag$wBitsPerSample$VH() { return pcmwaveformat_tag$wBitsPerSample$VH_; }

    static final MemoryLayout tWAVEFORMATEX$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wFormatTag"),
        C_SHORT.withName("nChannels"),
        C_LONG.withName("nSamplesPerSec"),
        C_LONG.withName("nAvgBytesPerSec"),
        C_SHORT.withName("nBlockAlign"),
        C_SHORT.withName("wBitsPerSample"),
        C_SHORT.withName("cbSize")
    ).withName("tWAVEFORMATEX");
    static final jdk.incubator.foreign.MemoryLayout tWAVEFORMATEX$struct$LAYOUT() { return tWAVEFORMATEX$struct$LAYOUT_; }

    static final MemoryLayout tWAVEFORMATEX$wFormatTag$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tWAVEFORMATEX$wFormatTag$LAYOUT() { return tWAVEFORMATEX$wFormatTag$LAYOUT_; }

    static final VarHandle tWAVEFORMATEX$wFormatTag$VH_ = tWAVEFORMATEX$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wFormatTag"));
    static final java.lang.invoke.VarHandle tWAVEFORMATEX$wFormatTag$VH() { return tWAVEFORMATEX$wFormatTag$VH_; }

    static final MemoryLayout tWAVEFORMATEX$nChannels$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tWAVEFORMATEX$nChannels$LAYOUT() { return tWAVEFORMATEX$nChannels$LAYOUT_; }

    static final VarHandle tWAVEFORMATEX$nChannels$VH_ = tWAVEFORMATEX$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("nChannels"));
    static final java.lang.invoke.VarHandle tWAVEFORMATEX$nChannels$VH() { return tWAVEFORMATEX$nChannels$VH_; }

    static final MemoryLayout tWAVEFORMATEX$nSamplesPerSec$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tWAVEFORMATEX$nSamplesPerSec$LAYOUT() { return tWAVEFORMATEX$nSamplesPerSec$LAYOUT_; }

    static final VarHandle tWAVEFORMATEX$nSamplesPerSec$VH_ = tWAVEFORMATEX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nSamplesPerSec"));
    static final java.lang.invoke.VarHandle tWAVEFORMATEX$nSamplesPerSec$VH() { return tWAVEFORMATEX$nSamplesPerSec$VH_; }

    static final MemoryLayout tWAVEFORMATEX$nAvgBytesPerSec$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tWAVEFORMATEX$nAvgBytesPerSec$LAYOUT() { return tWAVEFORMATEX$nAvgBytesPerSec$LAYOUT_; }

    static final VarHandle tWAVEFORMATEX$nAvgBytesPerSec$VH_ = tWAVEFORMATEX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nAvgBytesPerSec"));
    static final java.lang.invoke.VarHandle tWAVEFORMATEX$nAvgBytesPerSec$VH() { return tWAVEFORMATEX$nAvgBytesPerSec$VH_; }

    static final MemoryLayout tWAVEFORMATEX$nBlockAlign$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tWAVEFORMATEX$nBlockAlign$LAYOUT() { return tWAVEFORMATEX$nBlockAlign$LAYOUT_; }

    static final VarHandle tWAVEFORMATEX$nBlockAlign$VH_ = tWAVEFORMATEX$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("nBlockAlign"));
    static final java.lang.invoke.VarHandle tWAVEFORMATEX$nBlockAlign$VH() { return tWAVEFORMATEX$nBlockAlign$VH_; }

    static final MemoryLayout tWAVEFORMATEX$wBitsPerSample$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tWAVEFORMATEX$wBitsPerSample$LAYOUT() { return tWAVEFORMATEX$wBitsPerSample$LAYOUT_; }

    static final VarHandle tWAVEFORMATEX$wBitsPerSample$VH_ = tWAVEFORMATEX$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wBitsPerSample"));
    static final java.lang.invoke.VarHandle tWAVEFORMATEX$wBitsPerSample$VH() { return tWAVEFORMATEX$wBitsPerSample$VH_; }

    static final MemoryLayout tWAVEFORMATEX$cbSize$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tWAVEFORMATEX$cbSize$LAYOUT() { return tWAVEFORMATEX$cbSize$LAYOUT_; }

    static final VarHandle tWAVEFORMATEX$cbSize$VH_ = tWAVEFORMATEX$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle tWAVEFORMATEX$cbSize$VH() { return tWAVEFORMATEX$cbSize$VH_; }

    static final FunctionDescriptor waveOutGetNumDevs$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor waveOutGetNumDevs$FUNC() { return waveOutGetNumDevs$FUNC_; }

    static final MethodHandle waveOutGetNumDevs$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutGetNumDevs",
        "()I",
        waveOutGetNumDevs$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutGetNumDevs$MH() { return waveOutGetNumDevs$MH_; }

    static final FunctionDescriptor waveOutGetDevCapsA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutGetDevCapsA$FUNC() { return waveOutGetDevCapsA$FUNC_; }

    static final MethodHandle waveOutGetDevCapsA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutGetDevCapsA",
        "(JLjdk/incubator/foreign/MemoryAddress;I)I",
        waveOutGetDevCapsA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutGetDevCapsA$MH() { return waveOutGetDevCapsA$MH_; }

    static final FunctionDescriptor waveOutGetDevCapsW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutGetDevCapsW$FUNC() { return waveOutGetDevCapsW$FUNC_; }

    static final MethodHandle waveOutGetDevCapsW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutGetDevCapsW",
        "(JLjdk/incubator/foreign/MemoryAddress;I)I",
        waveOutGetDevCapsW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutGetDevCapsW$MH() { return waveOutGetDevCapsW$MH_; }

    static final FunctionDescriptor waveOutGetVolume$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutGetVolume$FUNC() { return waveOutGetVolume$FUNC_; }

    static final MethodHandle waveOutGetVolume$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutGetVolume",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        waveOutGetVolume$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutGetVolume$MH() { return waveOutGetVolume$MH_; }

    static final FunctionDescriptor waveOutSetVolume$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutSetVolume$FUNC() { return waveOutSetVolume$FUNC_; }

    static final MethodHandle waveOutSetVolume$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutSetVolume",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        waveOutSetVolume$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutSetVolume$MH() { return waveOutSetVolume$MH_; }

    static final FunctionDescriptor waveOutGetErrorTextA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutGetErrorTextA$FUNC() { return waveOutGetErrorTextA$FUNC_; }

    static final MethodHandle waveOutGetErrorTextA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutGetErrorTextA",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        waveOutGetErrorTextA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutGetErrorTextA$MH() { return waveOutGetErrorTextA$MH_; }

    static final FunctionDescriptor waveOutGetErrorTextW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutGetErrorTextW$FUNC() { return waveOutGetErrorTextW$FUNC_; }

    static final MethodHandle waveOutGetErrorTextW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutGetErrorTextW",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        waveOutGetErrorTextW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutGetErrorTextW$MH() { return waveOutGetErrorTextW$MH_; }

    static final FunctionDescriptor waveOutOpen$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_LONGLONG,
        C_LONGLONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutOpen$FUNC() { return waveOutOpen$FUNC_; }

    static final MethodHandle waveOutOpen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutOpen",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;JJI)I",
        waveOutOpen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutOpen$MH() { return waveOutOpen$MH_; }

    static final FunctionDescriptor waveOutClose$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutClose$FUNC() { return waveOutClose$FUNC_; }

    static final MethodHandle waveOutClose$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutClose",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        waveOutClose$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutClose$MH() { return waveOutClose$MH_; }

    static final FunctionDescriptor waveOutPrepareHeader$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutPrepareHeader$FUNC() { return waveOutPrepareHeader$FUNC_; }

    static final MethodHandle waveOutPrepareHeader$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutPrepareHeader",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        waveOutPrepareHeader$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutPrepareHeader$MH() { return waveOutPrepareHeader$MH_; }

    static final FunctionDescriptor waveOutUnprepareHeader$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutUnprepareHeader$FUNC() { return waveOutUnprepareHeader$FUNC_; }

    static final MethodHandle waveOutUnprepareHeader$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutUnprepareHeader",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        waveOutUnprepareHeader$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutUnprepareHeader$MH() { return waveOutUnprepareHeader$MH_; }

    static final FunctionDescriptor waveOutWrite$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutWrite$FUNC() { return waveOutWrite$FUNC_; }

    static final MethodHandle waveOutWrite$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutWrite",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        waveOutWrite$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutWrite$MH() { return waveOutWrite$MH_; }

    static final FunctionDescriptor waveOutPause$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutPause$FUNC() { return waveOutPause$FUNC_; }

    static final MethodHandle waveOutPause$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutPause",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        waveOutPause$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutPause$MH() { return waveOutPause$MH_; }

    static final FunctionDescriptor waveOutRestart$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutRestart$FUNC() { return waveOutRestart$FUNC_; }

    static final MethodHandle waveOutRestart$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutRestart",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        waveOutRestart$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutRestart$MH() { return waveOutRestart$MH_; }

    static final FunctionDescriptor waveOutReset$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutReset$FUNC() { return waveOutReset$FUNC_; }

    static final MethodHandle waveOutReset$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutReset",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        waveOutReset$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutReset$MH() { return waveOutReset$MH_; }

    static final FunctionDescriptor waveOutBreakLoop$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutBreakLoop$FUNC() { return waveOutBreakLoop$FUNC_; }

    static final MethodHandle waveOutBreakLoop$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutBreakLoop",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        waveOutBreakLoop$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutBreakLoop$MH() { return waveOutBreakLoop$MH_; }

    static final FunctionDescriptor waveOutGetPosition$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutGetPosition$FUNC() { return waveOutGetPosition$FUNC_; }

    static final MethodHandle waveOutGetPosition$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutGetPosition",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        waveOutGetPosition$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutGetPosition$MH() { return waveOutGetPosition$MH_; }

    static final FunctionDescriptor waveOutGetPitch$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutGetPitch$FUNC() { return waveOutGetPitch$FUNC_; }

    static final MethodHandle waveOutGetPitch$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutGetPitch",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        waveOutGetPitch$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutGetPitch$MH() { return waveOutGetPitch$MH_; }

    static final FunctionDescriptor waveOutSetPitch$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutSetPitch$FUNC() { return waveOutSetPitch$FUNC_; }

    static final MethodHandle waveOutSetPitch$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutSetPitch",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        waveOutSetPitch$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutSetPitch$MH() { return waveOutSetPitch$MH_; }

    static final FunctionDescriptor waveOutGetPlaybackRate$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutGetPlaybackRate$FUNC() { return waveOutGetPlaybackRate$FUNC_; }

    static final MethodHandle waveOutGetPlaybackRate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutGetPlaybackRate",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        waveOutGetPlaybackRate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutGetPlaybackRate$MH() { return waveOutGetPlaybackRate$MH_; }

    static final FunctionDescriptor waveOutSetPlaybackRate$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutSetPlaybackRate$FUNC() { return waveOutSetPlaybackRate$FUNC_; }

    static final MethodHandle waveOutSetPlaybackRate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutSetPlaybackRate",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        waveOutSetPlaybackRate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutSetPlaybackRate$MH() { return waveOutSetPlaybackRate$MH_; }

    static final FunctionDescriptor waveOutGetID$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutGetID$FUNC() { return waveOutGetID$FUNC_; }

    static final MethodHandle waveOutGetID$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutGetID",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        waveOutGetID$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutGetID$MH() { return waveOutGetID$MH_; }

    static final FunctionDescriptor waveOutMessage$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveOutMessage$FUNC() { return waveOutMessage$FUNC_; }

    static final MethodHandle waveOutMessage$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveOutMessage",
        "(Ljdk/incubator/foreign/MemoryAddress;IJJ)I",
        waveOutMessage$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveOutMessage$MH() { return waveOutMessage$MH_; }

    static final FunctionDescriptor waveInGetNumDevs$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor waveInGetNumDevs$FUNC() { return waveInGetNumDevs$FUNC_; }

    static final MethodHandle waveInGetNumDevs$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveInGetNumDevs",
        "()I",
        waveInGetNumDevs$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveInGetNumDevs$MH() { return waveInGetNumDevs$MH_; }

    static final FunctionDescriptor waveInGetDevCapsA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveInGetDevCapsA$FUNC() { return waveInGetDevCapsA$FUNC_; }

    static final MethodHandle waveInGetDevCapsA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveInGetDevCapsA",
        "(JLjdk/incubator/foreign/MemoryAddress;I)I",
        waveInGetDevCapsA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveInGetDevCapsA$MH() { return waveInGetDevCapsA$MH_; }

    static final FunctionDescriptor waveInGetDevCapsW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveInGetDevCapsW$FUNC() { return waveInGetDevCapsW$FUNC_; }

    static final MethodHandle waveInGetDevCapsW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveInGetDevCapsW",
        "(JLjdk/incubator/foreign/MemoryAddress;I)I",
        waveInGetDevCapsW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveInGetDevCapsW$MH() { return waveInGetDevCapsW$MH_; }

    static final FunctionDescriptor waveInGetErrorTextA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveInGetErrorTextA$FUNC() { return waveInGetErrorTextA$FUNC_; }

    static final MethodHandle waveInGetErrorTextA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveInGetErrorTextA",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        waveInGetErrorTextA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveInGetErrorTextA$MH() { return waveInGetErrorTextA$MH_; }

    static final FunctionDescriptor waveInGetErrorTextW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveInGetErrorTextW$FUNC() { return waveInGetErrorTextW$FUNC_; }

    static final MethodHandle waveInGetErrorTextW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveInGetErrorTextW",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        waveInGetErrorTextW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveInGetErrorTextW$MH() { return waveInGetErrorTextW$MH_; }

    static final FunctionDescriptor waveInOpen$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_LONGLONG,
        C_LONGLONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveInOpen$FUNC() { return waveInOpen$FUNC_; }

    static final MethodHandle waveInOpen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveInOpen",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;JJI)I",
        waveInOpen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveInOpen$MH() { return waveInOpen$MH_; }

    static final FunctionDescriptor waveInClose$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveInClose$FUNC() { return waveInClose$FUNC_; }

    static final MethodHandle waveInClose$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveInClose",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        waveInClose$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveInClose$MH() { return waveInClose$MH_; }

    static final FunctionDescriptor waveInPrepareHeader$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveInPrepareHeader$FUNC() { return waveInPrepareHeader$FUNC_; }

    static final MethodHandle waveInPrepareHeader$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveInPrepareHeader",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        waveInPrepareHeader$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveInPrepareHeader$MH() { return waveInPrepareHeader$MH_; }

    static final FunctionDescriptor waveInUnprepareHeader$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveInUnprepareHeader$FUNC() { return waveInUnprepareHeader$FUNC_; }

    static final MethodHandle waveInUnprepareHeader$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveInUnprepareHeader",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        waveInUnprepareHeader$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveInUnprepareHeader$MH() { return waveInUnprepareHeader$MH_; }

    static final FunctionDescriptor waveInAddBuffer$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveInAddBuffer$FUNC() { return waveInAddBuffer$FUNC_; }

    static final MethodHandle waveInAddBuffer$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveInAddBuffer",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        waveInAddBuffer$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveInAddBuffer$MH() { return waveInAddBuffer$MH_; }

    static final FunctionDescriptor waveInStart$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveInStart$FUNC() { return waveInStart$FUNC_; }

    static final MethodHandle waveInStart$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveInStart",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        waveInStart$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveInStart$MH() { return waveInStart$MH_; }

    static final FunctionDescriptor waveInStop$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveInStop$FUNC() { return waveInStop$FUNC_; }

    static final MethodHandle waveInStop$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveInStop",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        waveInStop$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveInStop$MH() { return waveInStop$MH_; }

    static final FunctionDescriptor waveInReset$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveInReset$FUNC() { return waveInReset$FUNC_; }

    static final MethodHandle waveInReset$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveInReset",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        waveInReset$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveInReset$MH() { return waveInReset$MH_; }

    static final FunctionDescriptor waveInGetPosition$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveInGetPosition$FUNC() { return waveInGetPosition$FUNC_; }

    static final MethodHandle waveInGetPosition$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveInGetPosition",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        waveInGetPosition$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveInGetPosition$MH() { return waveInGetPosition$MH_; }

    static final FunctionDescriptor waveInGetID$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveInGetID$FUNC() { return waveInGetID$FUNC_; }

    static final MethodHandle waveInGetID$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveInGetID",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        waveInGetID$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveInGetID$MH() { return waveInGetID$MH_; }

    static final FunctionDescriptor waveInMessage$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor waveInMessage$FUNC() { return waveInMessage$FUNC_; }

    static final MethodHandle waveInMessage$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "waveInMessage",
        "(Ljdk/incubator/foreign/MemoryAddress;IJJ)I",
        waveInMessage$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle waveInMessage$MH() { return waveInMessage$MH_; }

    static final MemoryLayout HMIDI__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HMIDI__");
    static final jdk.incubator.foreign.MemoryLayout HMIDI__$struct$LAYOUT() { return HMIDI__$struct$LAYOUT_; }

    static final MemoryLayout HMIDI__$unused$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout HMIDI__$unused$LAYOUT() { return HMIDI__$unused$LAYOUT_; }

    static final VarHandle HMIDI__$unused$VH_ = HMIDI__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    static final java.lang.invoke.VarHandle HMIDI__$unused$VH() { return HMIDI__$unused$VH_; }

    static final MemoryLayout HMIDIIN__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HMIDIIN__");
    static final jdk.incubator.foreign.MemoryLayout HMIDIIN__$struct$LAYOUT() { return HMIDIIN__$struct$LAYOUT_; }

    static final MemoryLayout HMIDIIN__$unused$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout HMIDIIN__$unused$LAYOUT() { return HMIDIIN__$unused$LAYOUT_; }

    static final VarHandle HMIDIIN__$unused$VH_ = HMIDIIN__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    static final java.lang.invoke.VarHandle HMIDIIN__$unused$VH() { return HMIDIIN__$unused$VH_; }

    static final MemoryLayout HMIDIOUT__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HMIDIOUT__");
    static final jdk.incubator.foreign.MemoryLayout HMIDIOUT__$struct$LAYOUT() { return HMIDIOUT__$struct$LAYOUT_; }

    static final MemoryLayout HMIDIOUT__$unused$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout HMIDIOUT__$unused$LAYOUT() { return HMIDIOUT__$unused$LAYOUT_; }

    static final VarHandle HMIDIOUT__$unused$VH_ = HMIDIOUT__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    static final java.lang.invoke.VarHandle HMIDIOUT__$unused$VH() { return HMIDIOUT__$unused$VH_; }

    static final MemoryLayout HMIDISTRM__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HMIDISTRM__");
    static final jdk.incubator.foreign.MemoryLayout HMIDISTRM__$struct$LAYOUT() { return HMIDISTRM__$struct$LAYOUT_; }

    static final MemoryLayout HMIDISTRM__$unused$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout HMIDISTRM__$unused$LAYOUT() { return HMIDISTRM__$unused$LAYOUT_; }

    static final VarHandle HMIDISTRM__$unused$VH_ = HMIDISTRM__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    static final java.lang.invoke.VarHandle HMIDISTRM__$unused$VH() { return HMIDISTRM__$unused$VH_; }

    static final MemoryLayout tagMIDIOUTCAPSA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wMid"),
        C_SHORT.withName("wPid"),
        C_INT.withName("vDriverVersion"),
        MemoryLayout.ofSequence(32, C_CHAR).withName("szPname"),
        C_SHORT.withName("wTechnology"),
        C_SHORT.withName("wVoices"),
        C_SHORT.withName("wNotes"),
        C_SHORT.withName("wChannelMask"),
        C_LONG.withName("dwSupport")
    ).withName("tagMIDIOUTCAPSA");
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPSA$struct$LAYOUT() { return tagMIDIOUTCAPSA$struct$LAYOUT_; }

    static final MemoryLayout tagMIDIOUTCAPSA$wMid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPSA$wMid$LAYOUT() { return tagMIDIOUTCAPSA$wMid$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPSA$wMid$VH_ = tagMIDIOUTCAPSA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMid"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPSA$wMid$VH() { return tagMIDIOUTCAPSA$wMid$VH_; }

    static final MemoryLayout tagMIDIOUTCAPSA$wPid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPSA$wPid$LAYOUT() { return tagMIDIOUTCAPSA$wPid$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPSA$wPid$VH_ = tagMIDIOUTCAPSA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wPid"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPSA$wPid$VH() { return tagMIDIOUTCAPSA$wPid$VH_; }

    static final MemoryLayout tagMIDIOUTCAPSA$vDriverVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPSA$vDriverVersion$LAYOUT() { return tagMIDIOUTCAPSA$vDriverVersion$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPSA$vDriverVersion$VH_ = tagMIDIOUTCAPSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("vDriverVersion"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPSA$vDriverVersion$VH() { return tagMIDIOUTCAPSA$vDriverVersion$VH_; }

    static final MemoryLayout tagMIDIOUTCAPSA$wTechnology$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPSA$wTechnology$LAYOUT() { return tagMIDIOUTCAPSA$wTechnology$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPSA$wTechnology$VH_ = tagMIDIOUTCAPSA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wTechnology"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPSA$wTechnology$VH() { return tagMIDIOUTCAPSA$wTechnology$VH_; }

    static final MemoryLayout tagMIDIOUTCAPSA$wVoices$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPSA$wVoices$LAYOUT() { return tagMIDIOUTCAPSA$wVoices$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPSA$wVoices$VH_ = tagMIDIOUTCAPSA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wVoices"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPSA$wVoices$VH() { return tagMIDIOUTCAPSA$wVoices$VH_; }

    static final MemoryLayout tagMIDIOUTCAPSA$wNotes$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPSA$wNotes$LAYOUT() { return tagMIDIOUTCAPSA$wNotes$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPSA$wNotes$VH_ = tagMIDIOUTCAPSA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wNotes"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPSA$wNotes$VH() { return tagMIDIOUTCAPSA$wNotes$VH_; }

    static final MemoryLayout tagMIDIOUTCAPSA$wChannelMask$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPSA$wChannelMask$LAYOUT() { return tagMIDIOUTCAPSA$wChannelMask$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPSA$wChannelMask$VH_ = tagMIDIOUTCAPSA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wChannelMask"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPSA$wChannelMask$VH() { return tagMIDIOUTCAPSA$wChannelMask$VH_; }

    static final MemoryLayout tagMIDIOUTCAPSA$dwSupport$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPSA$dwSupport$LAYOUT() { return tagMIDIOUTCAPSA$dwSupport$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPSA$dwSupport$VH_ = tagMIDIOUTCAPSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSupport"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPSA$dwSupport$VH() { return tagMIDIOUTCAPSA$dwSupport$VH_; }

    static final MemoryLayout tagMIDIOUTCAPSW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wMid"),
        C_SHORT.withName("wPid"),
        C_INT.withName("vDriverVersion"),
        MemoryLayout.ofSequence(32, C_SHORT).withName("szPname"),
        C_SHORT.withName("wTechnology"),
        C_SHORT.withName("wVoices"),
        C_SHORT.withName("wNotes"),
        C_SHORT.withName("wChannelMask"),
        C_LONG.withName("dwSupport")
    ).withName("tagMIDIOUTCAPSW");
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPSW$struct$LAYOUT() { return tagMIDIOUTCAPSW$struct$LAYOUT_; }

    static final MemoryLayout tagMIDIOUTCAPSW$wMid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPSW$wMid$LAYOUT() { return tagMIDIOUTCAPSW$wMid$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPSW$wMid$VH_ = tagMIDIOUTCAPSW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMid"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPSW$wMid$VH() { return tagMIDIOUTCAPSW$wMid$VH_; }

    static final MemoryLayout tagMIDIOUTCAPSW$wPid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPSW$wPid$LAYOUT() { return tagMIDIOUTCAPSW$wPid$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPSW$wPid$VH_ = tagMIDIOUTCAPSW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wPid"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPSW$wPid$VH() { return tagMIDIOUTCAPSW$wPid$VH_; }

    static final MemoryLayout tagMIDIOUTCAPSW$vDriverVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPSW$vDriverVersion$LAYOUT() { return tagMIDIOUTCAPSW$vDriverVersion$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPSW$vDriverVersion$VH_ = tagMIDIOUTCAPSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("vDriverVersion"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPSW$vDriverVersion$VH() { return tagMIDIOUTCAPSW$vDriverVersion$VH_; }

    static final MemoryLayout tagMIDIOUTCAPSW$wTechnology$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPSW$wTechnology$LAYOUT() { return tagMIDIOUTCAPSW$wTechnology$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPSW$wTechnology$VH_ = tagMIDIOUTCAPSW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wTechnology"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPSW$wTechnology$VH() { return tagMIDIOUTCAPSW$wTechnology$VH_; }

    static final MemoryLayout tagMIDIOUTCAPSW$wVoices$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPSW$wVoices$LAYOUT() { return tagMIDIOUTCAPSW$wVoices$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPSW$wVoices$VH_ = tagMIDIOUTCAPSW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wVoices"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPSW$wVoices$VH() { return tagMIDIOUTCAPSW$wVoices$VH_; }

    static final MemoryLayout tagMIDIOUTCAPSW$wNotes$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPSW$wNotes$LAYOUT() { return tagMIDIOUTCAPSW$wNotes$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPSW$wNotes$VH_ = tagMIDIOUTCAPSW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wNotes"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPSW$wNotes$VH() { return tagMIDIOUTCAPSW$wNotes$VH_; }

    static final MemoryLayout tagMIDIOUTCAPSW$wChannelMask$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPSW$wChannelMask$LAYOUT() { return tagMIDIOUTCAPSW$wChannelMask$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPSW$wChannelMask$VH_ = tagMIDIOUTCAPSW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wChannelMask"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPSW$wChannelMask$VH() { return tagMIDIOUTCAPSW$wChannelMask$VH_; }

    static final MemoryLayout tagMIDIOUTCAPSW$dwSupport$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPSW$dwSupport$LAYOUT() { return tagMIDIOUTCAPSW$dwSupport$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPSW$dwSupport$VH_ = tagMIDIOUTCAPSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSupport"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPSW$dwSupport$VH() { return tagMIDIOUTCAPSW$dwSupport$VH_; }

    static final MemoryLayout tagMIDIOUTCAPS2A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wMid"),
        C_SHORT.withName("wPid"),
        C_INT.withName("vDriverVersion"),
        MemoryLayout.ofSequence(32, C_CHAR).withName("szPname"),
        C_SHORT.withName("wTechnology"),
        C_SHORT.withName("wVoices"),
        C_SHORT.withName("wNotes"),
        C_SHORT.withName("wChannelMask"),
        C_LONG.withName("dwSupport"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ManufacturerGuid"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ProductGuid"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("NameGuid")
    ).withName("tagMIDIOUTCAPS2A");
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPS2A$struct$LAYOUT() { return tagMIDIOUTCAPS2A$struct$LAYOUT_; }

    static final MemoryLayout tagMIDIOUTCAPS2A$wMid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPS2A$wMid$LAYOUT() { return tagMIDIOUTCAPS2A$wMid$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPS2A$wMid$VH_ = tagMIDIOUTCAPS2A$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMid"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPS2A$wMid$VH() { return tagMIDIOUTCAPS2A$wMid$VH_; }

    static final MemoryLayout tagMIDIOUTCAPS2A$wPid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPS2A$wPid$LAYOUT() { return tagMIDIOUTCAPS2A$wPid$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPS2A$wPid$VH_ = tagMIDIOUTCAPS2A$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wPid"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPS2A$wPid$VH() { return tagMIDIOUTCAPS2A$wPid$VH_; }

    static final MemoryLayout tagMIDIOUTCAPS2A$vDriverVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPS2A$vDriverVersion$LAYOUT() { return tagMIDIOUTCAPS2A$vDriverVersion$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPS2A$vDriverVersion$VH_ = tagMIDIOUTCAPS2A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("vDriverVersion"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPS2A$vDriverVersion$VH() { return tagMIDIOUTCAPS2A$vDriverVersion$VH_; }

    static final MemoryLayout tagMIDIOUTCAPS2A$wTechnology$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPS2A$wTechnology$LAYOUT() { return tagMIDIOUTCAPS2A$wTechnology$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPS2A$wTechnology$VH_ = tagMIDIOUTCAPS2A$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wTechnology"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPS2A$wTechnology$VH() { return tagMIDIOUTCAPS2A$wTechnology$VH_; }

    static final MemoryLayout tagMIDIOUTCAPS2A$wVoices$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPS2A$wVoices$LAYOUT() { return tagMIDIOUTCAPS2A$wVoices$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPS2A$wVoices$VH_ = tagMIDIOUTCAPS2A$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wVoices"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPS2A$wVoices$VH() { return tagMIDIOUTCAPS2A$wVoices$VH_; }

    static final MemoryLayout tagMIDIOUTCAPS2A$wNotes$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPS2A$wNotes$LAYOUT() { return tagMIDIOUTCAPS2A$wNotes$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPS2A$wNotes$VH_ = tagMIDIOUTCAPS2A$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wNotes"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPS2A$wNotes$VH() { return tagMIDIOUTCAPS2A$wNotes$VH_; }

    static final MemoryLayout tagMIDIOUTCAPS2A$wChannelMask$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPS2A$wChannelMask$LAYOUT() { return tagMIDIOUTCAPS2A$wChannelMask$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPS2A$wChannelMask$VH_ = tagMIDIOUTCAPS2A$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wChannelMask"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPS2A$wChannelMask$VH() { return tagMIDIOUTCAPS2A$wChannelMask$VH_; }

    static final MemoryLayout tagMIDIOUTCAPS2A$dwSupport$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPS2A$dwSupport$LAYOUT() { return tagMIDIOUTCAPS2A$dwSupport$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPS2A$dwSupport$VH_ = tagMIDIOUTCAPS2A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSupport"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPS2A$dwSupport$VH() { return tagMIDIOUTCAPS2A$dwSupport$VH_; }

    static final MemoryLayout tagMIDIOUTCAPS2W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wMid"),
        C_SHORT.withName("wPid"),
        C_INT.withName("vDriverVersion"),
        MemoryLayout.ofSequence(32, C_SHORT).withName("szPname"),
        C_SHORT.withName("wTechnology"),
        C_SHORT.withName("wVoices"),
        C_SHORT.withName("wNotes"),
        C_SHORT.withName("wChannelMask"),
        C_LONG.withName("dwSupport"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ManufacturerGuid"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ProductGuid"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("NameGuid")
    ).withName("tagMIDIOUTCAPS2W");
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPS2W$struct$LAYOUT() { return tagMIDIOUTCAPS2W$struct$LAYOUT_; }

    static final MemoryLayout tagMIDIOUTCAPS2W$wMid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPS2W$wMid$LAYOUT() { return tagMIDIOUTCAPS2W$wMid$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPS2W$wMid$VH_ = tagMIDIOUTCAPS2W$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMid"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPS2W$wMid$VH() { return tagMIDIOUTCAPS2W$wMid$VH_; }

    static final MemoryLayout tagMIDIOUTCAPS2W$wPid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPS2W$wPid$LAYOUT() { return tagMIDIOUTCAPS2W$wPid$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPS2W$wPid$VH_ = tagMIDIOUTCAPS2W$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wPid"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPS2W$wPid$VH() { return tagMIDIOUTCAPS2W$wPid$VH_; }

    static final MemoryLayout tagMIDIOUTCAPS2W$vDriverVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPS2W$vDriverVersion$LAYOUT() { return tagMIDIOUTCAPS2W$vDriverVersion$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPS2W$vDriverVersion$VH_ = tagMIDIOUTCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("vDriverVersion"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPS2W$vDriverVersion$VH() { return tagMIDIOUTCAPS2W$vDriverVersion$VH_; }

    static final MemoryLayout tagMIDIOUTCAPS2W$wTechnology$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPS2W$wTechnology$LAYOUT() { return tagMIDIOUTCAPS2W$wTechnology$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPS2W$wTechnology$VH_ = tagMIDIOUTCAPS2W$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wTechnology"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPS2W$wTechnology$VH() { return tagMIDIOUTCAPS2W$wTechnology$VH_; }

    static final MemoryLayout tagMIDIOUTCAPS2W$wVoices$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPS2W$wVoices$LAYOUT() { return tagMIDIOUTCAPS2W$wVoices$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPS2W$wVoices$VH_ = tagMIDIOUTCAPS2W$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wVoices"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPS2W$wVoices$VH() { return tagMIDIOUTCAPS2W$wVoices$VH_; }

    static final MemoryLayout tagMIDIOUTCAPS2W$wNotes$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPS2W$wNotes$LAYOUT() { return tagMIDIOUTCAPS2W$wNotes$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPS2W$wNotes$VH_ = tagMIDIOUTCAPS2W$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wNotes"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPS2W$wNotes$VH() { return tagMIDIOUTCAPS2W$wNotes$VH_; }

    static final MemoryLayout tagMIDIOUTCAPS2W$wChannelMask$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPS2W$wChannelMask$LAYOUT() { return tagMIDIOUTCAPS2W$wChannelMask$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPS2W$wChannelMask$VH_ = tagMIDIOUTCAPS2W$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wChannelMask"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPS2W$wChannelMask$VH() { return tagMIDIOUTCAPS2W$wChannelMask$VH_; }

    static final MemoryLayout tagMIDIOUTCAPS2W$dwSupport$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIOUTCAPS2W$dwSupport$LAYOUT() { return tagMIDIOUTCAPS2W$dwSupport$LAYOUT_; }

    static final VarHandle tagMIDIOUTCAPS2W$dwSupport$VH_ = tagMIDIOUTCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSupport"));
    static final java.lang.invoke.VarHandle tagMIDIOUTCAPS2W$dwSupport$VH() { return tagMIDIOUTCAPS2W$dwSupport$VH_; }

    static final MemoryLayout tagMIDIINCAPSA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wMid"),
        C_SHORT.withName("wPid"),
        C_INT.withName("vDriverVersion"),
        MemoryLayout.ofSequence(32, C_CHAR).withName("szPname"),
        C_LONG.withName("dwSupport")
    ).withName("tagMIDIINCAPSA");
    static final jdk.incubator.foreign.MemoryLayout tagMIDIINCAPSA$struct$LAYOUT() { return tagMIDIINCAPSA$struct$LAYOUT_; }

    static final MemoryLayout tagMIDIINCAPSA$wMid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIINCAPSA$wMid$LAYOUT() { return tagMIDIINCAPSA$wMid$LAYOUT_; }

    static final VarHandle tagMIDIINCAPSA$wMid$VH_ = tagMIDIINCAPSA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMid"));
    static final java.lang.invoke.VarHandle tagMIDIINCAPSA$wMid$VH() { return tagMIDIINCAPSA$wMid$VH_; }

    static final MemoryLayout tagMIDIINCAPSA$wPid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIINCAPSA$wPid$LAYOUT() { return tagMIDIINCAPSA$wPid$LAYOUT_; }

    static final VarHandle tagMIDIINCAPSA$wPid$VH_ = tagMIDIINCAPSA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wPid"));
    static final java.lang.invoke.VarHandle tagMIDIINCAPSA$wPid$VH() { return tagMIDIINCAPSA$wPid$VH_; }

    static final MemoryLayout tagMIDIINCAPSA$vDriverVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIINCAPSA$vDriverVersion$LAYOUT() { return tagMIDIINCAPSA$vDriverVersion$LAYOUT_; }

    static final VarHandle tagMIDIINCAPSA$vDriverVersion$VH_ = tagMIDIINCAPSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("vDriverVersion"));
    static final java.lang.invoke.VarHandle tagMIDIINCAPSA$vDriverVersion$VH() { return tagMIDIINCAPSA$vDriverVersion$VH_; }

    static final MemoryLayout tagMIDIINCAPSA$dwSupport$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIINCAPSA$dwSupport$LAYOUT() { return tagMIDIINCAPSA$dwSupport$LAYOUT_; }

    static final VarHandle tagMIDIINCAPSA$dwSupport$VH_ = tagMIDIINCAPSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSupport"));
    static final java.lang.invoke.VarHandle tagMIDIINCAPSA$dwSupport$VH() { return tagMIDIINCAPSA$dwSupport$VH_; }

    static final MemoryLayout tagMIDIINCAPSW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wMid"),
        C_SHORT.withName("wPid"),
        C_INT.withName("vDriverVersion"),
        MemoryLayout.ofSequence(32, C_SHORT).withName("szPname"),
        C_LONG.withName("dwSupport")
    ).withName("tagMIDIINCAPSW");
    static final jdk.incubator.foreign.MemoryLayout tagMIDIINCAPSW$struct$LAYOUT() { return tagMIDIINCAPSW$struct$LAYOUT_; }

    static final MemoryLayout tagMIDIINCAPSW$wMid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIINCAPSW$wMid$LAYOUT() { return tagMIDIINCAPSW$wMid$LAYOUT_; }

    static final VarHandle tagMIDIINCAPSW$wMid$VH_ = tagMIDIINCAPSW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMid"));
    static final java.lang.invoke.VarHandle tagMIDIINCAPSW$wMid$VH() { return tagMIDIINCAPSW$wMid$VH_; }

    static final MemoryLayout tagMIDIINCAPSW$wPid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIINCAPSW$wPid$LAYOUT() { return tagMIDIINCAPSW$wPid$LAYOUT_; }

    static final VarHandle tagMIDIINCAPSW$wPid$VH_ = tagMIDIINCAPSW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wPid"));
    static final java.lang.invoke.VarHandle tagMIDIINCAPSW$wPid$VH() { return tagMIDIINCAPSW$wPid$VH_; }

    static final MemoryLayout tagMIDIINCAPSW$vDriverVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIINCAPSW$vDriverVersion$LAYOUT() { return tagMIDIINCAPSW$vDriverVersion$LAYOUT_; }

    static final VarHandle tagMIDIINCAPSW$vDriverVersion$VH_ = tagMIDIINCAPSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("vDriverVersion"));
    static final java.lang.invoke.VarHandle tagMIDIINCAPSW$vDriverVersion$VH() { return tagMIDIINCAPSW$vDriverVersion$VH_; }

    static final MemoryLayout tagMIDIINCAPSW$dwSupport$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIINCAPSW$dwSupport$LAYOUT() { return tagMIDIINCAPSW$dwSupport$LAYOUT_; }

    static final VarHandle tagMIDIINCAPSW$dwSupport$VH_ = tagMIDIINCAPSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSupport"));
    static final java.lang.invoke.VarHandle tagMIDIINCAPSW$dwSupport$VH() { return tagMIDIINCAPSW$dwSupport$VH_; }

    static final MemoryLayout tagMIDIINCAPS2A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wMid"),
        C_SHORT.withName("wPid"),
        C_INT.withName("vDriverVersion"),
        MemoryLayout.ofSequence(32, C_CHAR).withName("szPname"),
        C_LONG.withName("dwSupport"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ManufacturerGuid"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ProductGuid"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("NameGuid")
    ).withName("tagMIDIINCAPS2A");
    static final jdk.incubator.foreign.MemoryLayout tagMIDIINCAPS2A$struct$LAYOUT() { return tagMIDIINCAPS2A$struct$LAYOUT_; }

    static final MemoryLayout tagMIDIINCAPS2A$wMid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIINCAPS2A$wMid$LAYOUT() { return tagMIDIINCAPS2A$wMid$LAYOUT_; }

    static final VarHandle tagMIDIINCAPS2A$wMid$VH_ = tagMIDIINCAPS2A$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMid"));
    static final java.lang.invoke.VarHandle tagMIDIINCAPS2A$wMid$VH() { return tagMIDIINCAPS2A$wMid$VH_; }

    static final MemoryLayout tagMIDIINCAPS2A$wPid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIINCAPS2A$wPid$LAYOUT() { return tagMIDIINCAPS2A$wPid$LAYOUT_; }

    static final VarHandle tagMIDIINCAPS2A$wPid$VH_ = tagMIDIINCAPS2A$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wPid"));
    static final java.lang.invoke.VarHandle tagMIDIINCAPS2A$wPid$VH() { return tagMIDIINCAPS2A$wPid$VH_; }

    static final MemoryLayout tagMIDIINCAPS2A$vDriverVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIINCAPS2A$vDriverVersion$LAYOUT() { return tagMIDIINCAPS2A$vDriverVersion$LAYOUT_; }

    static final VarHandle tagMIDIINCAPS2A$vDriverVersion$VH_ = tagMIDIINCAPS2A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("vDriverVersion"));
    static final java.lang.invoke.VarHandle tagMIDIINCAPS2A$vDriverVersion$VH() { return tagMIDIINCAPS2A$vDriverVersion$VH_; }

    static final MemoryLayout tagMIDIINCAPS2A$dwSupport$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIINCAPS2A$dwSupport$LAYOUT() { return tagMIDIINCAPS2A$dwSupport$LAYOUT_; }

    static final VarHandle tagMIDIINCAPS2A$dwSupport$VH_ = tagMIDIINCAPS2A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSupport"));
    static final java.lang.invoke.VarHandle tagMIDIINCAPS2A$dwSupport$VH() { return tagMIDIINCAPS2A$dwSupport$VH_; }

    static final MemoryLayout tagMIDIINCAPS2W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wMid"),
        C_SHORT.withName("wPid"),
        C_INT.withName("vDriverVersion"),
        MemoryLayout.ofSequence(32, C_SHORT).withName("szPname"),
        C_LONG.withName("dwSupport"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ManufacturerGuid"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ProductGuid"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("NameGuid")
    ).withName("tagMIDIINCAPS2W");
    static final jdk.incubator.foreign.MemoryLayout tagMIDIINCAPS2W$struct$LAYOUT() { return tagMIDIINCAPS2W$struct$LAYOUT_; }

    static final MemoryLayout tagMIDIINCAPS2W$wMid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIINCAPS2W$wMid$LAYOUT() { return tagMIDIINCAPS2W$wMid$LAYOUT_; }

    static final VarHandle tagMIDIINCAPS2W$wMid$VH_ = tagMIDIINCAPS2W$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMid"));
    static final java.lang.invoke.VarHandle tagMIDIINCAPS2W$wMid$VH() { return tagMIDIINCAPS2W$wMid$VH_; }

    static final MemoryLayout tagMIDIINCAPS2W$wPid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIINCAPS2W$wPid$LAYOUT() { return tagMIDIINCAPS2W$wPid$LAYOUT_; }

    static final VarHandle tagMIDIINCAPS2W$wPid$VH_ = tagMIDIINCAPS2W$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wPid"));
    static final java.lang.invoke.VarHandle tagMIDIINCAPS2W$wPid$VH() { return tagMIDIINCAPS2W$wPid$VH_; }

    static final MemoryLayout tagMIDIINCAPS2W$vDriverVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIINCAPS2W$vDriverVersion$LAYOUT() { return tagMIDIINCAPS2W$vDriverVersion$LAYOUT_; }

    static final VarHandle tagMIDIINCAPS2W$vDriverVersion$VH_ = tagMIDIINCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("vDriverVersion"));
    static final java.lang.invoke.VarHandle tagMIDIINCAPS2W$vDriverVersion$VH() { return tagMIDIINCAPS2W$vDriverVersion$VH_; }

    static final MemoryLayout tagMIDIINCAPS2W$dwSupport$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMIDIINCAPS2W$dwSupport$LAYOUT() { return tagMIDIINCAPS2W$dwSupport$LAYOUT_; }

    static final VarHandle tagMIDIINCAPS2W$dwSupport$VH_ = tagMIDIINCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSupport"));
    static final java.lang.invoke.VarHandle tagMIDIINCAPS2W$dwSupport$VH() { return tagMIDIINCAPS2W$dwSupport$VH_; }

    static final MemoryLayout midihdr_tag$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpData"),
        C_LONG.withName("dwBufferLength"),
        C_LONG.withName("dwBytesRecorded"),
        C_LONGLONG.withName("dwUser"),
        C_LONG.withName("dwFlags"),
        C_POINTER.withName("lpNext"),
        C_LONGLONG.withName("reserved"),
        C_LONG.withName("dwOffset"),
        MemoryLayout.ofSequence(8, C_LONGLONG).withName("dwReserved")
    ).withName("midihdr_tag");
    static final jdk.incubator.foreign.MemoryLayout midihdr_tag$struct$LAYOUT() { return midihdr_tag$struct$LAYOUT_; }

    static final MemoryLayout midihdr_tag$lpData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout midihdr_tag$lpData$LAYOUT() { return midihdr_tag$lpData$LAYOUT_; }

    static final VarHandle midihdr_tag$lpData$VH_ = MemoryHandles.asAddressVarHandle(midihdr_tag$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpData")));
    static final java.lang.invoke.VarHandle midihdr_tag$lpData$VH() { return midihdr_tag$lpData$VH_; }

    static final MemoryLayout midihdr_tag$dwBufferLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout midihdr_tag$dwBufferLength$LAYOUT() { return midihdr_tag$dwBufferLength$LAYOUT_; }

    static final VarHandle midihdr_tag$dwBufferLength$VH_ = midihdr_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwBufferLength"));
    static final java.lang.invoke.VarHandle midihdr_tag$dwBufferLength$VH() { return midihdr_tag$dwBufferLength$VH_; }

    static final MemoryLayout midihdr_tag$dwBytesRecorded$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout midihdr_tag$dwBytesRecorded$LAYOUT() { return midihdr_tag$dwBytesRecorded$LAYOUT_; }

    static final VarHandle midihdr_tag$dwBytesRecorded$VH_ = midihdr_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwBytesRecorded"));
    static final java.lang.invoke.VarHandle midihdr_tag$dwBytesRecorded$VH() { return midihdr_tag$dwBytesRecorded$VH_; }

    static final MemoryLayout midihdr_tag$dwUser$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout midihdr_tag$dwUser$LAYOUT() { return midihdr_tag$dwUser$LAYOUT_; }

    static final VarHandle midihdr_tag$dwUser$VH_ = midihdr_tag$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwUser"));
    static final java.lang.invoke.VarHandle midihdr_tag$dwUser$VH() { return midihdr_tag$dwUser$VH_; }

    static final MemoryLayout midihdr_tag$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout midihdr_tag$dwFlags$LAYOUT() { return midihdr_tag$dwFlags$LAYOUT_; }

    static final VarHandle midihdr_tag$dwFlags$VH_ = midihdr_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle midihdr_tag$dwFlags$VH() { return midihdr_tag$dwFlags$VH_; }

    static final MemoryLayout midihdr_tag$lpNext$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout midihdr_tag$lpNext$LAYOUT() { return midihdr_tag$lpNext$LAYOUT_; }

    static final VarHandle midihdr_tag$lpNext$VH_ = MemoryHandles.asAddressVarHandle(midihdr_tag$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpNext")));
    static final java.lang.invoke.VarHandle midihdr_tag$lpNext$VH() { return midihdr_tag$lpNext$VH_; }

    static final MemoryLayout midihdr_tag$reserved$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout midihdr_tag$reserved$LAYOUT() { return midihdr_tag$reserved$LAYOUT_; }

    static final VarHandle midihdr_tag$reserved$VH_ = midihdr_tag$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("reserved"));
    static final java.lang.invoke.VarHandle midihdr_tag$reserved$VH() { return midihdr_tag$reserved$VH_; }

    static final MemoryLayout midihdr_tag$dwOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout midihdr_tag$dwOffset$LAYOUT() { return midihdr_tag$dwOffset$LAYOUT_; }

    static final VarHandle midihdr_tag$dwOffset$VH_ = midihdr_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwOffset"));
    static final java.lang.invoke.VarHandle midihdr_tag$dwOffset$VH() { return midihdr_tag$dwOffset$VH_; }

    static final MemoryLayout midievent_tag$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwDeltaTime"),
        C_LONG.withName("dwStreamID"),
        C_LONG.withName("dwEvent"),
        MemoryLayout.ofSequence(1, C_LONG).withName("dwParms")
    ).withName("midievent_tag");
    static final jdk.incubator.foreign.MemoryLayout midievent_tag$struct$LAYOUT() { return midievent_tag$struct$LAYOUT_; }

    static final MemoryLayout midievent_tag$dwDeltaTime$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout midievent_tag$dwDeltaTime$LAYOUT() { return midievent_tag$dwDeltaTime$LAYOUT_; }

    static final VarHandle midievent_tag$dwDeltaTime$VH_ = midievent_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwDeltaTime"));
    static final java.lang.invoke.VarHandle midievent_tag$dwDeltaTime$VH() { return midievent_tag$dwDeltaTime$VH_; }

    static final MemoryLayout midievent_tag$dwStreamID$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout midievent_tag$dwStreamID$LAYOUT() { return midievent_tag$dwStreamID$LAYOUT_; }

    static final VarHandle midievent_tag$dwStreamID$VH_ = midievent_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStreamID"));
    static final java.lang.invoke.VarHandle midievent_tag$dwStreamID$VH() { return midievent_tag$dwStreamID$VH_; }

    static final MemoryLayout midievent_tag$dwEvent$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout midievent_tag$dwEvent$LAYOUT() { return midievent_tag$dwEvent$LAYOUT_; }

    static final VarHandle midievent_tag$dwEvent$VH_ = midievent_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwEvent"));
    static final java.lang.invoke.VarHandle midievent_tag$dwEvent$VH() { return midievent_tag$dwEvent$VH_; }

    static final MemoryLayout midistrmbuffver_tag$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwVersion"),
        C_LONG.withName("dwMid"),
        C_LONG.withName("dwOEMVersion")
    ).withName("midistrmbuffver_tag");
    static final jdk.incubator.foreign.MemoryLayout midistrmbuffver_tag$struct$LAYOUT() { return midistrmbuffver_tag$struct$LAYOUT_; }

    static final MemoryLayout midistrmbuffver_tag$dwVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout midistrmbuffver_tag$dwVersion$LAYOUT() { return midistrmbuffver_tag$dwVersion$LAYOUT_; }

    static final VarHandle midistrmbuffver_tag$dwVersion$VH_ = midistrmbuffver_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersion"));
    static final java.lang.invoke.VarHandle midistrmbuffver_tag$dwVersion$VH() { return midistrmbuffver_tag$dwVersion$VH_; }

    static final MemoryLayout midistrmbuffver_tag$dwMid$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout midistrmbuffver_tag$dwMid$LAYOUT() { return midistrmbuffver_tag$dwMid$LAYOUT_; }

    static final VarHandle midistrmbuffver_tag$dwMid$VH_ = midistrmbuffver_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwMid"));
    static final java.lang.invoke.VarHandle midistrmbuffver_tag$dwMid$VH() { return midistrmbuffver_tag$dwMid$VH_; }

    static final MemoryLayout midistrmbuffver_tag$dwOEMVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout midistrmbuffver_tag$dwOEMVersion$LAYOUT() { return midistrmbuffver_tag$dwOEMVersion$LAYOUT_; }

    static final VarHandle midistrmbuffver_tag$dwOEMVersion$VH_ = midistrmbuffver_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwOEMVersion"));
    static final java.lang.invoke.VarHandle midistrmbuffver_tag$dwOEMVersion$VH() { return midistrmbuffver_tag$dwOEMVersion$VH_; }

    static final MemoryLayout midiproptimediv_tag$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbStruct"),
        C_LONG.withName("dwTimeDiv")
    ).withName("midiproptimediv_tag");
    static final jdk.incubator.foreign.MemoryLayout midiproptimediv_tag$struct$LAYOUT() { return midiproptimediv_tag$struct$LAYOUT_; }

    static final MemoryLayout midiproptimediv_tag$cbStruct$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout midiproptimediv_tag$cbStruct$LAYOUT() { return midiproptimediv_tag$cbStruct$LAYOUT_; }

    static final VarHandle midiproptimediv_tag$cbStruct$VH_ = midiproptimediv_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbStruct"));
    static final java.lang.invoke.VarHandle midiproptimediv_tag$cbStruct$VH() { return midiproptimediv_tag$cbStruct$VH_; }

    static final MemoryLayout midiproptimediv_tag$dwTimeDiv$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout midiproptimediv_tag$dwTimeDiv$LAYOUT() { return midiproptimediv_tag$dwTimeDiv$LAYOUT_; }

    static final VarHandle midiproptimediv_tag$dwTimeDiv$VH_ = midiproptimediv_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwTimeDiv"));
    static final java.lang.invoke.VarHandle midiproptimediv_tag$dwTimeDiv$VH() { return midiproptimediv_tag$dwTimeDiv$VH_; }

    static final MemoryLayout midiproptempo_tag$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbStruct"),
        C_LONG.withName("dwTempo")
    ).withName("midiproptempo_tag");
    static final jdk.incubator.foreign.MemoryLayout midiproptempo_tag$struct$LAYOUT() { return midiproptempo_tag$struct$LAYOUT_; }

    static final MemoryLayout midiproptempo_tag$cbStruct$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout midiproptempo_tag$cbStruct$LAYOUT() { return midiproptempo_tag$cbStruct$LAYOUT_; }

    static final VarHandle midiproptempo_tag$cbStruct$VH_ = midiproptempo_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbStruct"));
    static final java.lang.invoke.VarHandle midiproptempo_tag$cbStruct$VH() { return midiproptempo_tag$cbStruct$VH_; }

    static final MemoryLayout midiproptempo_tag$dwTempo$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout midiproptempo_tag$dwTempo$LAYOUT() { return midiproptempo_tag$dwTempo$LAYOUT_; }

    static final VarHandle midiproptempo_tag$dwTempo$VH_ = midiproptempo_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwTempo"));
    static final java.lang.invoke.VarHandle midiproptempo_tag$dwTempo$VH() { return midiproptempo_tag$dwTempo$VH_; }

    static final FunctionDescriptor midiOutGetNumDevs$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor midiOutGetNumDevs$FUNC() { return midiOutGetNumDevs$FUNC_; }

    static final MethodHandle midiOutGetNumDevs$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiOutGetNumDevs",
        "()I",
        midiOutGetNumDevs$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiOutGetNumDevs$MH() { return midiOutGetNumDevs$MH_; }

    static final FunctionDescriptor midiStreamOpen$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONGLONG,
        C_LONGLONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiStreamOpen$FUNC() { return midiStreamOpen$FUNC_; }

    static final MethodHandle midiStreamOpen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiStreamOpen",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IJJI)I",
        midiStreamOpen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiStreamOpen$MH() { return midiStreamOpen$MH_; }

    static final FunctionDescriptor midiStreamClose$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiStreamClose$FUNC() { return midiStreamClose$FUNC_; }

    static final MethodHandle midiStreamClose$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiStreamClose",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        midiStreamClose$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiStreamClose$MH() { return midiStreamClose$MH_; }

    static final FunctionDescriptor midiStreamProperty$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiStreamProperty$FUNC() { return midiStreamProperty$FUNC_; }

    static final MethodHandle midiStreamProperty$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiStreamProperty",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        midiStreamProperty$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiStreamProperty$MH() { return midiStreamProperty$MH_; }

    static final FunctionDescriptor midiStreamPosition$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiStreamPosition$FUNC() { return midiStreamPosition$FUNC_; }

    static final MethodHandle midiStreamPosition$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiStreamPosition",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        midiStreamPosition$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiStreamPosition$MH() { return midiStreamPosition$MH_; }

    static final FunctionDescriptor midiStreamOut$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiStreamOut$FUNC() { return midiStreamOut$FUNC_; }

    static final MethodHandle midiStreamOut$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiStreamOut",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        midiStreamOut$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiStreamOut$MH() { return midiStreamOut$MH_; }

    static final FunctionDescriptor midiStreamPause$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiStreamPause$FUNC() { return midiStreamPause$FUNC_; }

    static final MethodHandle midiStreamPause$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiStreamPause",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        midiStreamPause$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiStreamPause$MH() { return midiStreamPause$MH_; }

    static final FunctionDescriptor midiStreamRestart$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiStreamRestart$FUNC() { return midiStreamRestart$FUNC_; }

    static final MethodHandle midiStreamRestart$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiStreamRestart",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        midiStreamRestart$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiStreamRestart$MH() { return midiStreamRestart$MH_; }

    static final FunctionDescriptor midiStreamStop$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiStreamStop$FUNC() { return midiStreamStop$FUNC_; }

    static final MethodHandle midiStreamStop$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiStreamStop",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        midiStreamStop$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiStreamStop$MH() { return midiStreamStop$MH_; }

    static final FunctionDescriptor midiConnect$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiConnect$FUNC() { return midiConnect$FUNC_; }

    static final MethodHandle midiConnect$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiConnect",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        midiConnect$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiConnect$MH() { return midiConnect$MH_; }

    static final FunctionDescriptor midiDisconnect$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiDisconnect$FUNC() { return midiDisconnect$FUNC_; }

    static final MethodHandle midiDisconnect$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiDisconnect",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        midiDisconnect$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiDisconnect$MH() { return midiDisconnect$MH_; }

    static final FunctionDescriptor midiOutGetDevCapsA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiOutGetDevCapsA$FUNC() { return midiOutGetDevCapsA$FUNC_; }

    static final MethodHandle midiOutGetDevCapsA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiOutGetDevCapsA",
        "(JLjdk/incubator/foreign/MemoryAddress;I)I",
        midiOutGetDevCapsA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiOutGetDevCapsA$MH() { return midiOutGetDevCapsA$MH_; }

    static final FunctionDescriptor midiOutGetDevCapsW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiOutGetDevCapsW$FUNC() { return midiOutGetDevCapsW$FUNC_; }

    static final MethodHandle midiOutGetDevCapsW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiOutGetDevCapsW",
        "(JLjdk/incubator/foreign/MemoryAddress;I)I",
        midiOutGetDevCapsW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiOutGetDevCapsW$MH() { return midiOutGetDevCapsW$MH_; }

    static final FunctionDescriptor midiOutGetVolume$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiOutGetVolume$FUNC() { return midiOutGetVolume$FUNC_; }

    static final MethodHandle midiOutGetVolume$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiOutGetVolume",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        midiOutGetVolume$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiOutGetVolume$MH() { return midiOutGetVolume$MH_; }

    static final FunctionDescriptor midiOutSetVolume$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiOutSetVolume$FUNC() { return midiOutSetVolume$FUNC_; }

    static final MethodHandle midiOutSetVolume$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiOutSetVolume",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        midiOutSetVolume$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiOutSetVolume$MH() { return midiOutSetVolume$MH_; }

    static final FunctionDescriptor midiOutGetErrorTextA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiOutGetErrorTextA$FUNC() { return midiOutGetErrorTextA$FUNC_; }

    static final MethodHandle midiOutGetErrorTextA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiOutGetErrorTextA",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        midiOutGetErrorTextA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiOutGetErrorTextA$MH() { return midiOutGetErrorTextA$MH_; }

    static final FunctionDescriptor midiOutGetErrorTextW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiOutGetErrorTextW$FUNC() { return midiOutGetErrorTextW$FUNC_; }

    static final MethodHandle midiOutGetErrorTextW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiOutGetErrorTextW",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        midiOutGetErrorTextW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiOutGetErrorTextW$MH() { return midiOutGetErrorTextW$MH_; }

    static final FunctionDescriptor midiOutOpen$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_LONGLONG,
        C_LONGLONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiOutOpen$FUNC() { return midiOutOpen$FUNC_; }

    static final MethodHandle midiOutOpen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiOutOpen",
        "(Ljdk/incubator/foreign/MemoryAddress;IJJI)I",
        midiOutOpen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiOutOpen$MH() { return midiOutOpen$MH_; }

    static final FunctionDescriptor midiOutClose$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiOutClose$FUNC() { return midiOutClose$FUNC_; }

    static final MethodHandle midiOutClose$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiOutClose",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        midiOutClose$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiOutClose$MH() { return midiOutClose$MH_; }

    static final FunctionDescriptor midiOutPrepareHeader$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiOutPrepareHeader$FUNC() { return midiOutPrepareHeader$FUNC_; }

    static final MethodHandle midiOutPrepareHeader$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiOutPrepareHeader",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        midiOutPrepareHeader$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiOutPrepareHeader$MH() { return midiOutPrepareHeader$MH_; }

    static final FunctionDescriptor midiOutUnprepareHeader$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiOutUnprepareHeader$FUNC() { return midiOutUnprepareHeader$FUNC_; }

    static final MethodHandle midiOutUnprepareHeader$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiOutUnprepareHeader",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        midiOutUnprepareHeader$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiOutUnprepareHeader$MH() { return midiOutUnprepareHeader$MH_; }

    static final FunctionDescriptor midiOutShortMsg$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiOutShortMsg$FUNC() { return midiOutShortMsg$FUNC_; }

    static final MethodHandle midiOutShortMsg$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiOutShortMsg",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        midiOutShortMsg$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiOutShortMsg$MH() { return midiOutShortMsg$MH_; }

    static final FunctionDescriptor midiOutLongMsg$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiOutLongMsg$FUNC() { return midiOutLongMsg$FUNC_; }

    static final MethodHandle midiOutLongMsg$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiOutLongMsg",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        midiOutLongMsg$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiOutLongMsg$MH() { return midiOutLongMsg$MH_; }

    static final FunctionDescriptor midiOutReset$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiOutReset$FUNC() { return midiOutReset$FUNC_; }

    static final MethodHandle midiOutReset$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiOutReset",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        midiOutReset$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiOutReset$MH() { return midiOutReset$MH_; }

    static final FunctionDescriptor midiOutCachePatches$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiOutCachePatches$FUNC() { return midiOutCachePatches$FUNC_; }

    static final MethodHandle midiOutCachePatches$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiOutCachePatches",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        midiOutCachePatches$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiOutCachePatches$MH() { return midiOutCachePatches$MH_; }

    static final FunctionDescriptor midiOutCacheDrumPatches$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiOutCacheDrumPatches$FUNC() { return midiOutCacheDrumPatches$FUNC_; }

    static final MethodHandle midiOutCacheDrumPatches$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiOutCacheDrumPatches",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        midiOutCacheDrumPatches$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiOutCacheDrumPatches$MH() { return midiOutCacheDrumPatches$MH_; }

    static final FunctionDescriptor midiOutGetID$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiOutGetID$FUNC() { return midiOutGetID$FUNC_; }

    static final MethodHandle midiOutGetID$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiOutGetID",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        midiOutGetID$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiOutGetID$MH() { return midiOutGetID$MH_; }

    static final FunctionDescriptor midiOutMessage$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiOutMessage$FUNC() { return midiOutMessage$FUNC_; }

    static final MethodHandle midiOutMessage$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiOutMessage",
        "(Ljdk/incubator/foreign/MemoryAddress;IJJ)I",
        midiOutMessage$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiOutMessage$MH() { return midiOutMessage$MH_; }

    static final FunctionDescriptor midiInGetNumDevs$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor midiInGetNumDevs$FUNC() { return midiInGetNumDevs$FUNC_; }

    static final MethodHandle midiInGetNumDevs$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiInGetNumDevs",
        "()I",
        midiInGetNumDevs$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiInGetNumDevs$MH() { return midiInGetNumDevs$MH_; }

    static final FunctionDescriptor midiInGetDevCapsA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiInGetDevCapsA$FUNC() { return midiInGetDevCapsA$FUNC_; }

    static final MethodHandle midiInGetDevCapsA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiInGetDevCapsA",
        "(JLjdk/incubator/foreign/MemoryAddress;I)I",
        midiInGetDevCapsA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiInGetDevCapsA$MH() { return midiInGetDevCapsA$MH_; }

    static final FunctionDescriptor midiInGetDevCapsW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiInGetDevCapsW$FUNC() { return midiInGetDevCapsW$FUNC_; }

    static final MethodHandle midiInGetDevCapsW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiInGetDevCapsW",
        "(JLjdk/incubator/foreign/MemoryAddress;I)I",
        midiInGetDevCapsW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiInGetDevCapsW$MH() { return midiInGetDevCapsW$MH_; }

    static final FunctionDescriptor midiInGetErrorTextA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiInGetErrorTextA$FUNC() { return midiInGetErrorTextA$FUNC_; }

    static final MethodHandle midiInGetErrorTextA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiInGetErrorTextA",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        midiInGetErrorTextA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiInGetErrorTextA$MH() { return midiInGetErrorTextA$MH_; }

    static final FunctionDescriptor midiInGetErrorTextW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiInGetErrorTextW$FUNC() { return midiInGetErrorTextW$FUNC_; }

    static final MethodHandle midiInGetErrorTextW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiInGetErrorTextW",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        midiInGetErrorTextW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiInGetErrorTextW$MH() { return midiInGetErrorTextW$MH_; }

    static final FunctionDescriptor midiInOpen$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_LONGLONG,
        C_LONGLONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiInOpen$FUNC() { return midiInOpen$FUNC_; }

    static final MethodHandle midiInOpen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiInOpen",
        "(Ljdk/incubator/foreign/MemoryAddress;IJJI)I",
        midiInOpen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiInOpen$MH() { return midiInOpen$MH_; }

    static final FunctionDescriptor midiInClose$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiInClose$FUNC() { return midiInClose$FUNC_; }

    static final MethodHandle midiInClose$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiInClose",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        midiInClose$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiInClose$MH() { return midiInClose$MH_; }

    static final FunctionDescriptor midiInPrepareHeader$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiInPrepareHeader$FUNC() { return midiInPrepareHeader$FUNC_; }

    static final MethodHandle midiInPrepareHeader$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiInPrepareHeader",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        midiInPrepareHeader$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiInPrepareHeader$MH() { return midiInPrepareHeader$MH_; }

    static final FunctionDescriptor midiInUnprepareHeader$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiInUnprepareHeader$FUNC() { return midiInUnprepareHeader$FUNC_; }

    static final MethodHandle midiInUnprepareHeader$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiInUnprepareHeader",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        midiInUnprepareHeader$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiInUnprepareHeader$MH() { return midiInUnprepareHeader$MH_; }

    static final FunctionDescriptor midiInAddBuffer$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiInAddBuffer$FUNC() { return midiInAddBuffer$FUNC_; }

    static final MethodHandle midiInAddBuffer$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiInAddBuffer",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        midiInAddBuffer$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiInAddBuffer$MH() { return midiInAddBuffer$MH_; }

    static final FunctionDescriptor midiInStart$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiInStart$FUNC() { return midiInStart$FUNC_; }

    static final MethodHandle midiInStart$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiInStart",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        midiInStart$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiInStart$MH() { return midiInStart$MH_; }

    static final FunctionDescriptor midiInStop$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiInStop$FUNC() { return midiInStop$FUNC_; }

    static final MethodHandle midiInStop$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiInStop",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        midiInStop$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiInStop$MH() { return midiInStop$MH_; }

    static final FunctionDescriptor midiInReset$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiInReset$FUNC() { return midiInReset$FUNC_; }

    static final MethodHandle midiInReset$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiInReset",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        midiInReset$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiInReset$MH() { return midiInReset$MH_; }

    static final FunctionDescriptor midiInGetID$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiInGetID$FUNC() { return midiInGetID$FUNC_; }

    static final MethodHandle midiInGetID$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiInGetID",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        midiInGetID$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiInGetID$MH() { return midiInGetID$MH_; }

    static final FunctionDescriptor midiInMessage$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor midiInMessage$FUNC() { return midiInMessage$FUNC_; }

    static final MethodHandle midiInMessage$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "midiInMessage",
        "(Ljdk/incubator/foreign/MemoryAddress;IJJ)I",
        midiInMessage$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle midiInMessage$MH() { return midiInMessage$MH_; }

    static final MemoryLayout tagAUXCAPSA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wMid"),
        C_SHORT.withName("wPid"),
        C_INT.withName("vDriverVersion"),
        MemoryLayout.ofSequence(32, C_CHAR).withName("szPname"),
        C_SHORT.withName("wTechnology"),
        C_SHORT.withName("wReserved1"),
        C_LONG.withName("dwSupport")
    ).withName("tagAUXCAPSA");
    static final jdk.incubator.foreign.MemoryLayout tagAUXCAPSA$struct$LAYOUT() { return tagAUXCAPSA$struct$LAYOUT_; }

    static final MemoryLayout tagAUXCAPSA$wMid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagAUXCAPSA$wMid$LAYOUT() { return tagAUXCAPSA$wMid$LAYOUT_; }

    static final VarHandle tagAUXCAPSA$wMid$VH_ = tagAUXCAPSA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMid"));
    static final java.lang.invoke.VarHandle tagAUXCAPSA$wMid$VH() { return tagAUXCAPSA$wMid$VH_; }

    static final MemoryLayout tagAUXCAPSA$wPid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagAUXCAPSA$wPid$LAYOUT() { return tagAUXCAPSA$wPid$LAYOUT_; }

    static final VarHandle tagAUXCAPSA$wPid$VH_ = tagAUXCAPSA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wPid"));
    static final java.lang.invoke.VarHandle tagAUXCAPSA$wPid$VH() { return tagAUXCAPSA$wPid$VH_; }

    static final MemoryLayout tagAUXCAPSA$vDriverVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagAUXCAPSA$vDriverVersion$LAYOUT() { return tagAUXCAPSA$vDriverVersion$LAYOUT_; }

    static final VarHandle tagAUXCAPSA$vDriverVersion$VH_ = tagAUXCAPSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("vDriverVersion"));
    static final java.lang.invoke.VarHandle tagAUXCAPSA$vDriverVersion$VH() { return tagAUXCAPSA$vDriverVersion$VH_; }

    static final MemoryLayout tagAUXCAPSA$wTechnology$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagAUXCAPSA$wTechnology$LAYOUT() { return tagAUXCAPSA$wTechnology$LAYOUT_; }

    static final VarHandle tagAUXCAPSA$wTechnology$VH_ = tagAUXCAPSA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wTechnology"));
    static final java.lang.invoke.VarHandle tagAUXCAPSA$wTechnology$VH() { return tagAUXCAPSA$wTechnology$VH_; }

    static final MemoryLayout tagAUXCAPSA$wReserved1$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagAUXCAPSA$wReserved1$LAYOUT() { return tagAUXCAPSA$wReserved1$LAYOUT_; }

    static final VarHandle tagAUXCAPSA$wReserved1$VH_ = tagAUXCAPSA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReserved1"));
    static final java.lang.invoke.VarHandle tagAUXCAPSA$wReserved1$VH() { return tagAUXCAPSA$wReserved1$VH_; }

    static final MemoryLayout tagAUXCAPSA$dwSupport$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagAUXCAPSA$dwSupport$LAYOUT() { return tagAUXCAPSA$dwSupport$LAYOUT_; }

    static final VarHandle tagAUXCAPSA$dwSupport$VH_ = tagAUXCAPSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSupport"));
    static final java.lang.invoke.VarHandle tagAUXCAPSA$dwSupport$VH() { return tagAUXCAPSA$dwSupport$VH_; }

    static final MemoryLayout tagAUXCAPSW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wMid"),
        C_SHORT.withName("wPid"),
        C_INT.withName("vDriverVersion"),
        MemoryLayout.ofSequence(32, C_SHORT).withName("szPname"),
        C_SHORT.withName("wTechnology"),
        C_SHORT.withName("wReserved1"),
        C_LONG.withName("dwSupport")
    ).withName("tagAUXCAPSW");
    static final jdk.incubator.foreign.MemoryLayout tagAUXCAPSW$struct$LAYOUT() { return tagAUXCAPSW$struct$LAYOUT_; }

    static final MemoryLayout tagAUXCAPSW$wMid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagAUXCAPSW$wMid$LAYOUT() { return tagAUXCAPSW$wMid$LAYOUT_; }

    static final VarHandle tagAUXCAPSW$wMid$VH_ = tagAUXCAPSW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMid"));
    static final java.lang.invoke.VarHandle tagAUXCAPSW$wMid$VH() { return tagAUXCAPSW$wMid$VH_; }

    static final MemoryLayout tagAUXCAPSW$wPid$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagAUXCAPSW$wPid$LAYOUT() { return tagAUXCAPSW$wPid$LAYOUT_; }

    static final VarHandle tagAUXCAPSW$wPid$VH_ = tagAUXCAPSW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wPid"));
    static final java.lang.invoke.VarHandle tagAUXCAPSW$wPid$VH() { return tagAUXCAPSW$wPid$VH_; }

    static final MemoryLayout tagAUXCAPSW$vDriverVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagAUXCAPSW$vDriverVersion$LAYOUT() { return tagAUXCAPSW$vDriverVersion$LAYOUT_; }

    static final VarHandle tagAUXCAPSW$vDriverVersion$VH_ = tagAUXCAPSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("vDriverVersion"));
    static final java.lang.invoke.VarHandle tagAUXCAPSW$vDriverVersion$VH() { return tagAUXCAPSW$vDriverVersion$VH_; }

    static final MemoryLayout tagAUXCAPSW$wTechnology$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagAUXCAPSW$wTechnology$LAYOUT() { return tagAUXCAPSW$wTechnology$LAYOUT_; }

    static final VarHandle tagAUXCAPSW$wTechnology$VH_ = tagAUXCAPSW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wTechnology"));
    static final java.lang.invoke.VarHandle tagAUXCAPSW$wTechnology$VH() { return tagAUXCAPSW$wTechnology$VH_; }

    static final MemoryLayout tagAUXCAPSW$wReserved1$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagAUXCAPSW$wReserved1$LAYOUT() { return tagAUXCAPSW$wReserved1$LAYOUT_; }

    static final VarHandle tagAUXCAPSW$wReserved1$VH_ = tagAUXCAPSW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReserved1"));
    static final java.lang.invoke.VarHandle tagAUXCAPSW$wReserved1$VH() { return tagAUXCAPSW$wReserved1$VH_; }

    static final MemoryLayout tagAUXCAPSW$dwSupport$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagAUXCAPSW$dwSupport$LAYOUT() { return tagAUXCAPSW$dwSupport$LAYOUT_; }

    static final VarHandle tagAUXCAPSW$dwSupport$VH_ = tagAUXCAPSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSupport"));
    static final java.lang.invoke.VarHandle tagAUXCAPSW$dwSupport$VH() { return tagAUXCAPSW$dwSupport$VH_; }

}

