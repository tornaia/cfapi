// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$47 extends cfapi_h$constants$46 {

    /* package-private */ cfapi_h$constants$47() {}
    static final FunctionDescriptor I_RpcFreeBuffer$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcFreeBuffer$FUNC() { return I_RpcFreeBuffer$FUNC_; }

    static final MethodHandle I_RpcFreeBuffer$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcFreeBuffer",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcFreeBuffer$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcFreeBuffer$MH() { return I_RpcFreeBuffer$MH_; }

    static final FunctionDescriptor I_RpcSend$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcSend$FUNC() { return I_RpcSend$FUNC_; }

    static final MethodHandle I_RpcSend$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcSend",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcSend$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcSend$MH() { return I_RpcSend$MH_; }

    static final FunctionDescriptor I_RpcReceive$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcReceive$FUNC() { return I_RpcReceive$FUNC_; }

    static final MethodHandle I_RpcReceive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcReceive",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        I_RpcReceive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcReceive$MH() { return I_RpcReceive$MH_; }

    static final FunctionDescriptor I_RpcFreePipeBuffer$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcFreePipeBuffer$FUNC() { return I_RpcFreePipeBuffer$FUNC_; }

    static final MethodHandle I_RpcFreePipeBuffer$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcFreePipeBuffer",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcFreePipeBuffer$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcFreePipeBuffer$MH() { return I_RpcFreePipeBuffer$MH_; }

    static final FunctionDescriptor I_RpcReallocPipeBuffer$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcReallocPipeBuffer$FUNC() { return I_RpcReallocPipeBuffer$FUNC_; }

    static final MethodHandle I_RpcReallocPipeBuffer$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcReallocPipeBuffer",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        I_RpcReallocPipeBuffer$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcReallocPipeBuffer$MH() { return I_RpcReallocPipeBuffer$MH_; }

    static final FunctionDescriptor I_RpcRequestMutex$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcRequestMutex$FUNC() { return I_RpcRequestMutex$FUNC_; }

    static final MethodHandle I_RpcRequestMutex$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcRequestMutex",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        I_RpcRequestMutex$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcRequestMutex$MH() { return I_RpcRequestMutex$MH_; }

    static final FunctionDescriptor I_RpcClearMutex$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcClearMutex$FUNC() { return I_RpcClearMutex$FUNC_; }

    static final MethodHandle I_RpcClearMutex$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcClearMutex",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        I_RpcClearMutex$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcClearMutex$MH() { return I_RpcClearMutex$MH_; }

    static final FunctionDescriptor I_RpcDeleteMutex$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcDeleteMutex$FUNC() { return I_RpcDeleteMutex$FUNC_; }

    static final MethodHandle I_RpcDeleteMutex$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcDeleteMutex",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        I_RpcDeleteMutex$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcDeleteMutex$MH() { return I_RpcDeleteMutex$MH_; }

    static final FunctionDescriptor I_RpcAllocate$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcAllocate$FUNC() { return I_RpcAllocate$FUNC_; }

    static final MethodHandle I_RpcAllocate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcAllocate",
        "(I)Ljdk/incubator/foreign/MemoryAddress;",
        I_RpcAllocate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcAllocate$MH() { return I_RpcAllocate$MH_; }

    static final FunctionDescriptor I_RpcFree$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcFree$FUNC() { return I_RpcFree$FUNC_; }

    static final MethodHandle I_RpcFree$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcFree",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        I_RpcFree$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcFree$MH() { return I_RpcFree$MH_; }

    static final FunctionDescriptor I_RpcFreeSystemHandleCollection$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcFreeSystemHandleCollection$FUNC() { return I_RpcFreeSystemHandleCollection$FUNC_; }

    static final MethodHandle I_RpcFreeSystemHandleCollection$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcFreeSystemHandleCollection",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        I_RpcFreeSystemHandleCollection$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcFreeSystemHandleCollection$MH() { return I_RpcFreeSystemHandleCollection$MH_; }

    static final FunctionDescriptor I_RpcSetSystemHandle$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_CHAR,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcSetSystemHandle$FUNC() { return I_RpcSetSystemHandle$FUNC_; }

    static final MethodHandle I_RpcSetSystemHandle$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcSetSystemHandle",
        "(Ljdk/incubator/foreign/MemoryAddress;BILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcSetSystemHandle$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcSetSystemHandle$MH() { return I_RpcSetSystemHandle$MH_; }

    static final FunctionDescriptor I_RpcGetSystemHandle$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_CHAR,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcGetSystemHandle$FUNC() { return I_RpcGetSystemHandle$FUNC_; }

    static final MethodHandle I_RpcGetSystemHandle$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcGetSystemHandle",
        "(Ljdk/incubator/foreign/MemoryAddress;BIILjdk/incubator/foreign/MemoryAddress;)I",
        I_RpcGetSystemHandle$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcGetSystemHandle$MH() { return I_RpcGetSystemHandle$MH_; }

    static final FunctionDescriptor I_RpcFreeSystemHandle$FUNC_ = FunctionDescriptor.ofVoid(
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcFreeSystemHandle$FUNC() { return I_RpcFreeSystemHandle$FUNC_; }

    static final MethodHandle I_RpcFreeSystemHandle$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcFreeSystemHandle",
        "(BLjdk/incubator/foreign/MemoryAddress;)V",
        I_RpcFreeSystemHandle$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcFreeSystemHandle$MH() { return I_RpcFreeSystemHandle$MH_; }

    static final FunctionDescriptor I_RpcPauseExecution$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcPauseExecution$FUNC() { return I_RpcPauseExecution$FUNC_; }

    static final MethodHandle I_RpcPauseExecution$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcPauseExecution",
        "(I)V",
        I_RpcPauseExecution$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcPauseExecution$MH() { return I_RpcPauseExecution$MH_; }

    static final FunctionDescriptor I_RpcGetExtendedError$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcGetExtendedError$FUNC() { return I_RpcGetExtendedError$FUNC_; }

    static final MethodHandle I_RpcGetExtendedError$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcGetExtendedError",
        "()I",
        I_RpcGetExtendedError$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcGetExtendedError$MH() { return I_RpcGetExtendedError$MH_; }

    static final int MarshalDirectionMarshal() { return (int)0L; }

    static final int MarshalDirectionUnmarshal() { return (int)1L; }

    static final FunctionDescriptor I_RpcSystemHandleTypeSpecificWork$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_CHAR,
        C_CHAR,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcSystemHandleTypeSpecificWork$FUNC() { return I_RpcSystemHandleTypeSpecificWork$FUNC_; }

    static final MethodHandle I_RpcSystemHandleTypeSpecificWork$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcSystemHandleTypeSpecificWork",
        "(Ljdk/incubator/foreign/MemoryAddress;BBI)I",
        I_RpcSystemHandleTypeSpecificWork$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcSystemHandleTypeSpecificWork$MH() { return I_RpcSystemHandleTypeSpecificWork$MH_; }

    static final FunctionDescriptor I_RpcMonitorAssociation$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcMonitorAssociation$FUNC() { return I_RpcMonitorAssociation$FUNC_; }

    static final MethodHandle I_RpcMonitorAssociation$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcMonitorAssociation",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcMonitorAssociation$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcMonitorAssociation$MH() { return I_RpcMonitorAssociation$MH_; }

    static final FunctionDescriptor I_RpcMonitorAssociation$RundownRoutine$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcMonitorAssociation$RundownRoutine$FUNC() { return I_RpcMonitorAssociation$RundownRoutine$FUNC_; }

    static final FunctionDescriptor I_RpcStopMonitorAssociation$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcStopMonitorAssociation$FUNC() { return I_RpcStopMonitorAssociation$FUNC_; }

    static final MethodHandle I_RpcStopMonitorAssociation$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcStopMonitorAssociation",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcStopMonitorAssociation$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcStopMonitorAssociation$MH() { return I_RpcStopMonitorAssociation$MH_; }

    static final FunctionDescriptor I_RpcGetCurrentCallHandle$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcGetCurrentCallHandle$FUNC() { return I_RpcGetCurrentCallHandle$FUNC_; }

    static final MethodHandle I_RpcGetCurrentCallHandle$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcGetCurrentCallHandle",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        I_RpcGetCurrentCallHandle$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcGetCurrentCallHandle$MH() { return I_RpcGetCurrentCallHandle$MH_; }

    static final FunctionDescriptor I_RpcGetAssociationContext$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcGetAssociationContext$FUNC() { return I_RpcGetAssociationContext$FUNC_; }

    static final MethodHandle I_RpcGetAssociationContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcGetAssociationContext",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcGetAssociationContext$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcGetAssociationContext$MH() { return I_RpcGetAssociationContext$MH_; }

    static final FunctionDescriptor I_RpcGetServerContextList$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcGetServerContextList$FUNC() { return I_RpcGetServerContextList$FUNC_; }

    static final MethodHandle I_RpcGetServerContextList$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcGetServerContextList",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        I_RpcGetServerContextList$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcGetServerContextList$MH() { return I_RpcGetServerContextList$MH_; }

    static final FunctionDescriptor I_RpcSetServerContextList$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcSetServerContextList$FUNC() { return I_RpcSetServerContextList$FUNC_; }

    static final MethodHandle I_RpcSetServerContextList$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcSetServerContextList",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        I_RpcSetServerContextList$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcSetServerContextList$MH() { return I_RpcSetServerContextList$MH_; }

    static final FunctionDescriptor I_RpcNsInterfaceExported$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcNsInterfaceExported$FUNC() { return I_RpcNsInterfaceExported$FUNC_; }

    static final MethodHandle I_RpcNsInterfaceExported$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcNsInterfaceExported",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcNsInterfaceExported$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcNsInterfaceExported$MH() { return I_RpcNsInterfaceExported$MH_; }

    static final FunctionDescriptor I_RpcNsInterfaceUnexported$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcNsInterfaceUnexported$FUNC() { return I_RpcNsInterfaceUnexported$FUNC_; }

    static final MethodHandle I_RpcNsInterfaceUnexported$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcNsInterfaceUnexported",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcNsInterfaceUnexported$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcNsInterfaceUnexported$MH() { return I_RpcNsInterfaceUnexported$MH_; }

    static final FunctionDescriptor I_RpcBindingToStaticStringBindingW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcBindingToStaticStringBindingW$FUNC() { return I_RpcBindingToStaticStringBindingW$FUNC_; }

    static final MethodHandle I_RpcBindingToStaticStringBindingW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcBindingToStaticStringBindingW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcBindingToStaticStringBindingW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcBindingToStaticStringBindingW$MH() { return I_RpcBindingToStaticStringBindingW$MH_; }

    static final FunctionDescriptor I_RpcBindingInqSecurityContext$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcBindingInqSecurityContext$FUNC() { return I_RpcBindingInqSecurityContext$FUNC_; }

    static final MethodHandle I_RpcBindingInqSecurityContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcBindingInqSecurityContext",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcBindingInqSecurityContext$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcBindingInqSecurityContext$MH() { return I_RpcBindingInqSecurityContext$MH_; }

    static final MemoryLayout _RPC_SEC_CONTEXT_KEY_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("EncryptAlgorithm"),
        C_LONG.withName("KeySize"),
        C_LONG.withName("SignatureAlgorithm")
    ).withName("_RPC_SEC_CONTEXT_KEY_INFO");
    static final jdk.incubator.foreign.MemoryLayout _RPC_SEC_CONTEXT_KEY_INFO$struct$LAYOUT() { return _RPC_SEC_CONTEXT_KEY_INFO$struct$LAYOUT_; }

    static final MemoryLayout _RPC_SEC_CONTEXT_KEY_INFO$EncryptAlgorithm$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SEC_CONTEXT_KEY_INFO$EncryptAlgorithm$LAYOUT() { return _RPC_SEC_CONTEXT_KEY_INFO$EncryptAlgorithm$LAYOUT_; }

    static final VarHandle _RPC_SEC_CONTEXT_KEY_INFO$EncryptAlgorithm$VH_ = _RPC_SEC_CONTEXT_KEY_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EncryptAlgorithm"));
    static final java.lang.invoke.VarHandle _RPC_SEC_CONTEXT_KEY_INFO$EncryptAlgorithm$VH() { return _RPC_SEC_CONTEXT_KEY_INFO$EncryptAlgorithm$VH_; }

    static final MemoryLayout _RPC_SEC_CONTEXT_KEY_INFO$KeySize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SEC_CONTEXT_KEY_INFO$KeySize$LAYOUT() { return _RPC_SEC_CONTEXT_KEY_INFO$KeySize$LAYOUT_; }

    static final VarHandle _RPC_SEC_CONTEXT_KEY_INFO$KeySize$VH_ = _RPC_SEC_CONTEXT_KEY_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("KeySize"));
    static final java.lang.invoke.VarHandle _RPC_SEC_CONTEXT_KEY_INFO$KeySize$VH() { return _RPC_SEC_CONTEXT_KEY_INFO$KeySize$VH_; }

    static final MemoryLayout _RPC_SEC_CONTEXT_KEY_INFO$SignatureAlgorithm$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SEC_CONTEXT_KEY_INFO$SignatureAlgorithm$LAYOUT() { return _RPC_SEC_CONTEXT_KEY_INFO$SignatureAlgorithm$LAYOUT_; }

    static final VarHandle _RPC_SEC_CONTEXT_KEY_INFO$SignatureAlgorithm$VH_ = _RPC_SEC_CONTEXT_KEY_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SignatureAlgorithm"));
    static final java.lang.invoke.VarHandle _RPC_SEC_CONTEXT_KEY_INFO$SignatureAlgorithm$VH() { return _RPC_SEC_CONTEXT_KEY_INFO$SignatureAlgorithm$VH_; }

    static final FunctionDescriptor I_RpcBindingInqSecurityContextKeyInfo$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcBindingInqSecurityContextKeyInfo$FUNC() { return I_RpcBindingInqSecurityContextKeyInfo$FUNC_; }

    static final MethodHandle I_RpcBindingInqSecurityContextKeyInfo$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcBindingInqSecurityContextKeyInfo",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcBindingInqSecurityContextKeyInfo$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcBindingInqSecurityContextKeyInfo$MH() { return I_RpcBindingInqSecurityContextKeyInfo$MH_; }

    static final FunctionDescriptor I_RpcBindingInqWireIdForSnego$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcBindingInqWireIdForSnego$FUNC() { return I_RpcBindingInqWireIdForSnego$FUNC_; }

    static final MethodHandle I_RpcBindingInqWireIdForSnego$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcBindingInqWireIdForSnego",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcBindingInqWireIdForSnego$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcBindingInqWireIdForSnego$MH() { return I_RpcBindingInqWireIdForSnego$MH_; }

    static final FunctionDescriptor I_RpcBindingInqMarshalledTargetInfo$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcBindingInqMarshalledTargetInfo$FUNC() { return I_RpcBindingInqMarshalledTargetInfo$FUNC_; }

    static final MethodHandle I_RpcBindingInqMarshalledTargetInfo$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcBindingInqMarshalledTargetInfo",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcBindingInqMarshalledTargetInfo$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcBindingInqMarshalledTargetInfo$MH() { return I_RpcBindingInqMarshalledTargetInfo$MH_; }

    static final FunctionDescriptor I_RpcBindingInqLocalClientPID$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcBindingInqLocalClientPID$FUNC() { return I_RpcBindingInqLocalClientPID$FUNC_; }

    static final MethodHandle I_RpcBindingInqLocalClientPID$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcBindingInqLocalClientPID",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcBindingInqLocalClientPID$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcBindingInqLocalClientPID$MH() { return I_RpcBindingInqLocalClientPID$MH_; }

    static final FunctionDescriptor I_RpcBindingHandleToAsyncHandle$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcBindingHandleToAsyncHandle$FUNC() { return I_RpcBindingHandleToAsyncHandle$FUNC_; }

    static final MethodHandle I_RpcBindingHandleToAsyncHandle$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcBindingHandleToAsyncHandle",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcBindingHandleToAsyncHandle$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcBindingHandleToAsyncHandle$MH() { return I_RpcBindingHandleToAsyncHandle$MH_; }

    static final FunctionDescriptor I_RpcNsBindingSetEntryNameW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcNsBindingSetEntryNameW$FUNC() { return I_RpcNsBindingSetEntryNameW$FUNC_; }

    static final MethodHandle I_RpcNsBindingSetEntryNameW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcNsBindingSetEntryNameW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        I_RpcNsBindingSetEntryNameW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcNsBindingSetEntryNameW$MH() { return I_RpcNsBindingSetEntryNameW$MH_; }

    static final FunctionDescriptor I_RpcNsBindingSetEntryNameA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcNsBindingSetEntryNameA$FUNC() { return I_RpcNsBindingSetEntryNameA$FUNC_; }

    static final MethodHandle I_RpcNsBindingSetEntryNameA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcNsBindingSetEntryNameA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        I_RpcNsBindingSetEntryNameA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcNsBindingSetEntryNameA$MH() { return I_RpcNsBindingSetEntryNameA$MH_; }

    static final FunctionDescriptor I_RpcServerUseProtseqEp2A$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerUseProtseqEp2A$FUNC() { return I_RpcServerUseProtseqEp2A$FUNC_; }

    static final MethodHandle I_RpcServerUseProtseqEp2A$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerUseProtseqEp2A",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcServerUseProtseqEp2A$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerUseProtseqEp2A$MH() { return I_RpcServerUseProtseqEp2A$MH_; }

    static final FunctionDescriptor I_RpcServerUseProtseqEp2W$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerUseProtseqEp2W$FUNC() { return I_RpcServerUseProtseqEp2W$FUNC_; }

    static final MethodHandle I_RpcServerUseProtseqEp2W$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerUseProtseqEp2W",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcServerUseProtseqEp2W$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerUseProtseqEp2W$MH() { return I_RpcServerUseProtseqEp2W$MH_; }

    static final FunctionDescriptor I_RpcServerUseProtseq2W$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerUseProtseq2W$FUNC() { return I_RpcServerUseProtseq2W$FUNC_; }

    static final MethodHandle I_RpcServerUseProtseq2W$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerUseProtseq2W",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcServerUseProtseq2W$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerUseProtseq2W$MH() { return I_RpcServerUseProtseq2W$MH_; }

    static final FunctionDescriptor I_RpcServerUseProtseq2A$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerUseProtseq2A$FUNC() { return I_RpcServerUseProtseq2A$FUNC_; }

    static final MethodHandle I_RpcServerUseProtseq2A$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerUseProtseq2A",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcServerUseProtseq2A$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerUseProtseq2A$MH() { return I_RpcServerUseProtseq2A$MH_; }

    static final FunctionDescriptor I_RpcServerStartService$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerStartService$FUNC() { return I_RpcServerStartService$FUNC_; }

    static final MethodHandle I_RpcServerStartService$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerStartService",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcServerStartService$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerStartService$MH() { return I_RpcServerStartService$MH_; }

    static final FunctionDescriptor I_RpcBindingInqDynamicEndpointW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcBindingInqDynamicEndpointW$FUNC() { return I_RpcBindingInqDynamicEndpointW$FUNC_; }

    static final MethodHandle I_RpcBindingInqDynamicEndpointW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcBindingInqDynamicEndpointW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcBindingInqDynamicEndpointW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcBindingInqDynamicEndpointW$MH() { return I_RpcBindingInqDynamicEndpointW$MH_; }

    static final FunctionDescriptor I_RpcBindingInqDynamicEndpointA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcBindingInqDynamicEndpointA$FUNC() { return I_RpcBindingInqDynamicEndpointA$FUNC_; }

    static final MethodHandle I_RpcBindingInqDynamicEndpointA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcBindingInqDynamicEndpointA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcBindingInqDynamicEndpointA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcBindingInqDynamicEndpointA$MH() { return I_RpcBindingInqDynamicEndpointA$MH_; }

    static final FunctionDescriptor I_RpcServerCheckClientRestriction$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerCheckClientRestriction$FUNC() { return I_RpcServerCheckClientRestriction$FUNC_; }

    static final MethodHandle I_RpcServerCheckClientRestriction$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerCheckClientRestriction",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcServerCheckClientRestriction$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerCheckClientRestriction$MH() { return I_RpcServerCheckClientRestriction$MH_; }

    static final FunctionDescriptor I_RpcBindingInqTransportType$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcBindingInqTransportType$FUNC() { return I_RpcBindingInqTransportType$FUNC_; }

    static final MethodHandle I_RpcBindingInqTransportType$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcBindingInqTransportType",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcBindingInqTransportType$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcBindingInqTransportType$MH() { return I_RpcBindingInqTransportType$MH_; }

    static final MemoryLayout _RPC_TRANSFER_SYNTAX$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("Uuid"),
        C_SHORT.withName("VersMajor"),
        C_SHORT.withName("VersMinor")
    ).withName("_RPC_TRANSFER_SYNTAX");
    static final jdk.incubator.foreign.MemoryLayout _RPC_TRANSFER_SYNTAX$struct$LAYOUT() { return _RPC_TRANSFER_SYNTAX$struct$LAYOUT_; }

    static final MemoryLayout _RPC_TRANSFER_SYNTAX$VersMajor$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_TRANSFER_SYNTAX$VersMajor$LAYOUT() { return _RPC_TRANSFER_SYNTAX$VersMajor$LAYOUT_; }

    static final VarHandle _RPC_TRANSFER_SYNTAX$VersMajor$VH_ = _RPC_TRANSFER_SYNTAX$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("VersMajor"));
    static final java.lang.invoke.VarHandle _RPC_TRANSFER_SYNTAX$VersMajor$VH() { return _RPC_TRANSFER_SYNTAX$VersMajor$VH_; }

    static final MemoryLayout _RPC_TRANSFER_SYNTAX$VersMinor$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_TRANSFER_SYNTAX$VersMinor$LAYOUT() { return _RPC_TRANSFER_SYNTAX$VersMinor$LAYOUT_; }

    static final VarHandle _RPC_TRANSFER_SYNTAX$VersMinor$VH_ = _RPC_TRANSFER_SYNTAX$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("VersMinor"));
    static final java.lang.invoke.VarHandle _RPC_TRANSFER_SYNTAX$VersMinor$VH() { return _RPC_TRANSFER_SYNTAX$VersMinor$VH_; }

    static final FunctionDescriptor I_RpcIfInqTransferSyntaxes$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcIfInqTransferSyntaxes$FUNC() { return I_RpcIfInqTransferSyntaxes$FUNC_; }

    static final MethodHandle I_RpcIfInqTransferSyntaxes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcIfInqTransferSyntaxes",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        I_RpcIfInqTransferSyntaxes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcIfInqTransferSyntaxes$MH() { return I_RpcIfInqTransferSyntaxes$MH_; }

    static final FunctionDescriptor I_UuidCreate$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_UuidCreate$FUNC() { return I_UuidCreate$FUNC_; }

    static final MethodHandle I_UuidCreate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_UuidCreate",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        I_UuidCreate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_UuidCreate$MH() { return I_UuidCreate$MH_; }

    static final FunctionDescriptor I_RpcUninitializeNdrOle$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcUninitializeNdrOle$FUNC() { return I_RpcUninitializeNdrOle$FUNC_; }

    static final MethodHandle I_RpcUninitializeNdrOle$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcUninitializeNdrOle",
        "()V",
        I_RpcUninitializeNdrOle$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcUninitializeNdrOle$MH() { return I_RpcUninitializeNdrOle$MH_; }

    static final FunctionDescriptor I_RpcBindingCopy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcBindingCopy$FUNC() { return I_RpcBindingCopy$FUNC_; }

    static final MethodHandle I_RpcBindingCopy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcBindingCopy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcBindingCopy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcBindingCopy$MH() { return I_RpcBindingCopy$MH_; }

    static final FunctionDescriptor I_RpcBindingIsClientLocal$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcBindingIsClientLocal$FUNC() { return I_RpcBindingIsClientLocal$FUNC_; }

    static final MethodHandle I_RpcBindingIsClientLocal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcBindingIsClientLocal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcBindingIsClientLocal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcBindingIsClientLocal$MH() { return I_RpcBindingIsClientLocal$MH_; }

    static final FunctionDescriptor I_RpcBindingInqConnId$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcBindingInqConnId$FUNC() { return I_RpcBindingInqConnId$FUNC_; }

    static final MethodHandle I_RpcBindingInqConnId$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcBindingInqConnId",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcBindingInqConnId$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcBindingInqConnId$MH() { return I_RpcBindingInqConnId$MH_; }

    static final FunctionDescriptor I_RpcBindingCreateNP$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcBindingCreateNP$FUNC() { return I_RpcBindingCreateNP$FUNC_; }

    static final MethodHandle I_RpcBindingCreateNP$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcBindingCreateNP",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcBindingCreateNP$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcBindingCreateNP$MH() { return I_RpcBindingCreateNP$MH_; }

    static final FunctionDescriptor I_RpcSsDontSerializeContext$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcSsDontSerializeContext$FUNC() { return I_RpcSsDontSerializeContext$FUNC_; }

    static final MethodHandle I_RpcSsDontSerializeContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcSsDontSerializeContext",
        "()V",
        I_RpcSsDontSerializeContext$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcSsDontSerializeContext$MH() { return I_RpcSsDontSerializeContext$MH_; }

    static final FunctionDescriptor I_RpcLaunchDatagramReceiveThread$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcLaunchDatagramReceiveThread$FUNC() { return I_RpcLaunchDatagramReceiveThread$FUNC_; }

    static final MethodHandle I_RpcLaunchDatagramReceiveThread$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcLaunchDatagramReceiveThread",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcLaunchDatagramReceiveThread$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcLaunchDatagramReceiveThread$MH() { return I_RpcLaunchDatagramReceiveThread$MH_; }

    static final FunctionDescriptor I_RpcServerRegisterForwardFunction$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerRegisterForwardFunction$FUNC() { return I_RpcServerRegisterForwardFunction$FUNC_; }

    static final MethodHandle I_RpcServerRegisterForwardFunction$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerRegisterForwardFunction",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcServerRegisterForwardFunction$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerRegisterForwardFunction$MH() { return I_RpcServerRegisterForwardFunction$MH_; }

    static final FunctionDescriptor I_RpcServerRegisterForwardFunction$pForwardFunction$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerRegisterForwardFunction$pForwardFunction$FUNC() { return I_RpcServerRegisterForwardFunction$pForwardFunction$FUNC_; }

    static final FunctionDescriptor I_RpcServerInqAddressChangeFn$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerInqAddressChangeFn$FUNC() { return I_RpcServerInqAddressChangeFn$FUNC_; }

    static final MethodHandle I_RpcServerInqAddressChangeFn$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerInqAddressChangeFn",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        I_RpcServerInqAddressChangeFn$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerInqAddressChangeFn$MH() { return I_RpcServerInqAddressChangeFn$MH_; }

    static final FunctionDescriptor I_RpcServerSetAddressChangeFn$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerSetAddressChangeFn$FUNC() { return I_RpcServerSetAddressChangeFn$FUNC_; }

    static final MethodHandle I_RpcServerSetAddressChangeFn$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerSetAddressChangeFn",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcServerSetAddressChangeFn$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerSetAddressChangeFn$MH() { return I_RpcServerSetAddressChangeFn$MH_; }

    static final FunctionDescriptor I_RpcServerSetAddressChangeFn$pAddressChangeFn$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerSetAddressChangeFn$pAddressChangeFn$FUNC() { return I_RpcServerSetAddressChangeFn$pAddressChangeFn$FUNC_; }

    static final FunctionDescriptor I_RpcServerInqLocalConnAddress$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerInqLocalConnAddress$FUNC() { return I_RpcServerInqLocalConnAddress$FUNC_; }

    static final MethodHandle I_RpcServerInqLocalConnAddress$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerInqLocalConnAddress",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcServerInqLocalConnAddress$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerInqLocalConnAddress$MH() { return I_RpcServerInqLocalConnAddress$MH_; }

    static final FunctionDescriptor I_RpcServerInqRemoteConnAddress$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerInqRemoteConnAddress$FUNC() { return I_RpcServerInqRemoteConnAddress$FUNC_; }

    static final MethodHandle I_RpcServerInqRemoteConnAddress$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerInqRemoteConnAddress",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcServerInqRemoteConnAddress$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerInqRemoteConnAddress$MH() { return I_RpcServerInqRemoteConnAddress$MH_; }

    static final FunctionDescriptor I_RpcSessionStrictContextHandle$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcSessionStrictContextHandle$FUNC() { return I_RpcSessionStrictContextHandle$FUNC_; }

    static final MethodHandle I_RpcSessionStrictContextHandle$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcSessionStrictContextHandle",
        "()V",
        I_RpcSessionStrictContextHandle$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcSessionStrictContextHandle$MH() { return I_RpcSessionStrictContextHandle$MH_; }

    static final FunctionDescriptor I_RpcTurnOnEEInfoPropagation$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcTurnOnEEInfoPropagation$FUNC() { return I_RpcTurnOnEEInfoPropagation$FUNC_; }

    static final MethodHandle I_RpcTurnOnEEInfoPropagation$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcTurnOnEEInfoPropagation",
        "()I",
        I_RpcTurnOnEEInfoPropagation$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcTurnOnEEInfoPropagation$MH() { return I_RpcTurnOnEEInfoPropagation$MH_; }

    static final FunctionDescriptor I_RpcConnectionInqSockBuffSize$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcConnectionInqSockBuffSize$FUNC() { return I_RpcConnectionInqSockBuffSize$FUNC_; }

    static final MethodHandle I_RpcConnectionInqSockBuffSize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcConnectionInqSockBuffSize",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcConnectionInqSockBuffSize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcConnectionInqSockBuffSize$MH() { return I_RpcConnectionInqSockBuffSize$MH_; }

    static final FunctionDescriptor I_RpcConnectionSetSockBuffSize$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcConnectionSetSockBuffSize$FUNC() { return I_RpcConnectionSetSockBuffSize$FUNC_; }

    static final MethodHandle I_RpcConnectionSetSockBuffSize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcConnectionSetSockBuffSize",
        "(II)I",
        I_RpcConnectionSetSockBuffSize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcConnectionSetSockBuffSize$MH() { return I_RpcConnectionSetSockBuffSize$MH_; }

    static final FunctionDescriptor I_RpcServerStartListening$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerStartListening$FUNC() { return I_RpcServerStartListening$FUNC_; }

    static final MethodHandle I_RpcServerStartListening$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerStartListening",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcServerStartListening$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerStartListening$MH() { return I_RpcServerStartListening$MH_; }

    static final FunctionDescriptor I_RpcServerStopListening$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerStopListening$FUNC() { return I_RpcServerStopListening$FUNC_; }

    static final MethodHandle I_RpcServerStopListening$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerStopListening",
        "()I",
        I_RpcServerStopListening$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerStopListening$MH() { return I_RpcServerStopListening$MH_; }

    static final FunctionDescriptor I_RpcBindingSetAsync$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcBindingSetAsync$FUNC() { return I_RpcBindingSetAsync$FUNC_; }

    static final MethodHandle I_RpcBindingSetAsync$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcBindingSetAsync",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        I_RpcBindingSetAsync$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcBindingSetAsync$MH() { return I_RpcBindingSetAsync$MH_; }

    static final FunctionDescriptor I_RpcBindingSetAsync$BlockingFn$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcBindingSetAsync$BlockingFn$FUNC() { return I_RpcBindingSetAsync$BlockingFn$FUNC_; }

    static final FunctionDescriptor I_RpcSetThreadParams$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcSetThreadParams$FUNC() { return I_RpcSetThreadParams$FUNC_; }

    static final MethodHandle I_RpcSetThreadParams$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcSetThreadParams",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcSetThreadParams$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcSetThreadParams$MH() { return I_RpcSetThreadParams$MH_; }

    static final FunctionDescriptor I_RpcWindowProc$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcWindowProc$FUNC() { return I_RpcWindowProc$FUNC_; }

    static final MethodHandle I_RpcWindowProc$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcWindowProc",
        "(Ljdk/incubator/foreign/MemoryAddress;III)I",
        I_RpcWindowProc$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcWindowProc$MH() { return I_RpcWindowProc$MH_; }

    static final FunctionDescriptor I_RpcServerUnregisterEndpointA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerUnregisterEndpointA$FUNC() { return I_RpcServerUnregisterEndpointA$FUNC_; }

    static final MethodHandle I_RpcServerUnregisterEndpointA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerUnregisterEndpointA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcServerUnregisterEndpointA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerUnregisterEndpointA$MH() { return I_RpcServerUnregisterEndpointA$MH_; }

    static final FunctionDescriptor I_RpcServerUnregisterEndpointW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerUnregisterEndpointW$FUNC() { return I_RpcServerUnregisterEndpointW$FUNC_; }

    static final MethodHandle I_RpcServerUnregisterEndpointW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerUnregisterEndpointW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcServerUnregisterEndpointW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerUnregisterEndpointW$MH() { return I_RpcServerUnregisterEndpointW$MH_; }

    static final FunctionDescriptor I_RpcServerInqTransportType$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerInqTransportType$FUNC() { return I_RpcServerInqTransportType$FUNC_; }

    static final MethodHandle I_RpcServerInqTransportType$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerInqTransportType",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcServerInqTransportType$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerInqTransportType$MH() { return I_RpcServerInqTransportType$MH_; }

    static final FunctionDescriptor I_RpcMapWin32Status$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcMapWin32Status$FUNC() { return I_RpcMapWin32Status$FUNC_; }

    static final MethodHandle I_RpcMapWin32Status$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcMapWin32Status",
        "(I)I",
        I_RpcMapWin32Status$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcMapWin32Status$MH() { return I_RpcMapWin32Status$MH_; }

    static final MemoryLayout _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("BufferSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("Buffer")
    ).withName("_RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR$struct$LAYOUT() { return _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR$BufferSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR$BufferSize$LAYOUT() { return _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR$BufferSize$LAYOUT_; }

    static final VarHandle _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR$BufferSize$VH_ = _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BufferSize"));
    static final java.lang.invoke.VarHandle _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR$BufferSize$VH() { return _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR$BufferSize$VH_; }

    static final MemoryLayout _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR$Buffer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR$Buffer$LAYOUT() { return _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR$Buffer$LAYOUT_; }

    static final VarHandle _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR$Buffer$VH_ = MemoryHandles.asAddressVarHandle(_RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Buffer")));
    static final java.lang.invoke.VarHandle _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR$Buffer$VH() { return _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR$Buffer$VH_; }

    static final MemoryLayout _RDR_CALLOUT_STATE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("LastError"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("LastEEInfo"),
        C_INT.withName("LastCalledStage"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ServerName"),
        C_POINTER.withName("ServerPort"),
        C_POINTER.withName("RemoteUser"),
        C_POINTER.withName("AuthType"),
        C_CHAR.withName("ResourceTypePresent"),
        C_CHAR.withName("SessionIdPresent"),
        C_CHAR.withName("InterfacePresent"),
        MemoryLayout.ofPaddingBits(8),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ResourceType"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("SessionId"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
            ).withName("SyntaxGUID"),
            MemoryLayout.ofStruct(
                C_SHORT.withName("MajorVersion"),
                C_SHORT.withName("MinorVersion")
            ).withName("SyntaxVersion")
        ).withName("Interface"),
        C_POINTER.withName("CertContext")
    ).withName("_RDR_CALLOUT_STATE");
    static final jdk.incubator.foreign.MemoryLayout _RDR_CALLOUT_STATE$struct$LAYOUT() { return _RDR_CALLOUT_STATE$struct$LAYOUT_; }

    static final MemoryLayout _RDR_CALLOUT_STATE$LastError$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RDR_CALLOUT_STATE$LastError$LAYOUT() { return _RDR_CALLOUT_STATE$LastError$LAYOUT_; }

    static final VarHandle _RDR_CALLOUT_STATE$LastError$VH_ = _RDR_CALLOUT_STATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LastError"));
    static final java.lang.invoke.VarHandle _RDR_CALLOUT_STATE$LastError$VH() { return _RDR_CALLOUT_STATE$LastError$VH_; }

    static final MemoryLayout _RDR_CALLOUT_STATE$LastEEInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RDR_CALLOUT_STATE$LastEEInfo$LAYOUT() { return _RDR_CALLOUT_STATE$LastEEInfo$LAYOUT_; }

    static final VarHandle _RDR_CALLOUT_STATE$LastEEInfo$VH_ = MemoryHandles.asAddressVarHandle(_RDR_CALLOUT_STATE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LastEEInfo")));
    static final java.lang.invoke.VarHandle _RDR_CALLOUT_STATE$LastEEInfo$VH() { return _RDR_CALLOUT_STATE$LastEEInfo$VH_; }

    static final MemoryLayout _RDR_CALLOUT_STATE$LastCalledStage$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RDR_CALLOUT_STATE$LastCalledStage$LAYOUT() { return _RDR_CALLOUT_STATE$LastCalledStage$LAYOUT_; }

    static final VarHandle _RDR_CALLOUT_STATE$LastCalledStage$VH_ = _RDR_CALLOUT_STATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LastCalledStage"));
    static final java.lang.invoke.VarHandle _RDR_CALLOUT_STATE$LastCalledStage$VH() { return _RDR_CALLOUT_STATE$LastCalledStage$VH_; }

    static final MemoryLayout _RDR_CALLOUT_STATE$ServerName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RDR_CALLOUT_STATE$ServerName$LAYOUT() { return _RDR_CALLOUT_STATE$ServerName$LAYOUT_; }

    static final VarHandle _RDR_CALLOUT_STATE$ServerName$VH_ = MemoryHandles.asAddressVarHandle(_RDR_CALLOUT_STATE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ServerName")));
    static final java.lang.invoke.VarHandle _RDR_CALLOUT_STATE$ServerName$VH() { return _RDR_CALLOUT_STATE$ServerName$VH_; }

    static final MemoryLayout _RDR_CALLOUT_STATE$ServerPort$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RDR_CALLOUT_STATE$ServerPort$LAYOUT() { return _RDR_CALLOUT_STATE$ServerPort$LAYOUT_; }

    static final VarHandle _RDR_CALLOUT_STATE$ServerPort$VH_ = MemoryHandles.asAddressVarHandle(_RDR_CALLOUT_STATE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ServerPort")));
    static final java.lang.invoke.VarHandle _RDR_CALLOUT_STATE$ServerPort$VH() { return _RDR_CALLOUT_STATE$ServerPort$VH_; }

    static final MemoryLayout _RDR_CALLOUT_STATE$RemoteUser$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RDR_CALLOUT_STATE$RemoteUser$LAYOUT() { return _RDR_CALLOUT_STATE$RemoteUser$LAYOUT_; }

    static final VarHandle _RDR_CALLOUT_STATE$RemoteUser$VH_ = MemoryHandles.asAddressVarHandle(_RDR_CALLOUT_STATE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RemoteUser")));
    static final java.lang.invoke.VarHandle _RDR_CALLOUT_STATE$RemoteUser$VH() { return _RDR_CALLOUT_STATE$RemoteUser$VH_; }

    static final MemoryLayout _RDR_CALLOUT_STATE$AuthType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RDR_CALLOUT_STATE$AuthType$LAYOUT() { return _RDR_CALLOUT_STATE$AuthType$LAYOUT_; }

    static final VarHandle _RDR_CALLOUT_STATE$AuthType$VH_ = MemoryHandles.asAddressVarHandle(_RDR_CALLOUT_STATE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AuthType")));
    static final java.lang.invoke.VarHandle _RDR_CALLOUT_STATE$AuthType$VH() { return _RDR_CALLOUT_STATE$AuthType$VH_; }

    static final MemoryLayout _RDR_CALLOUT_STATE$ResourceTypePresent$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _RDR_CALLOUT_STATE$ResourceTypePresent$LAYOUT() { return _RDR_CALLOUT_STATE$ResourceTypePresent$LAYOUT_; }

    static final VarHandle _RDR_CALLOUT_STATE$ResourceTypePresent$VH_ = _RDR_CALLOUT_STATE$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ResourceTypePresent"));
    static final java.lang.invoke.VarHandle _RDR_CALLOUT_STATE$ResourceTypePresent$VH() { return _RDR_CALLOUT_STATE$ResourceTypePresent$VH_; }

    static final MemoryLayout _RDR_CALLOUT_STATE$SessionIdPresent$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _RDR_CALLOUT_STATE$SessionIdPresent$LAYOUT() { return _RDR_CALLOUT_STATE$SessionIdPresent$LAYOUT_; }

    static final VarHandle _RDR_CALLOUT_STATE$SessionIdPresent$VH_ = _RDR_CALLOUT_STATE$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("SessionIdPresent"));
    static final java.lang.invoke.VarHandle _RDR_CALLOUT_STATE$SessionIdPresent$VH() { return _RDR_CALLOUT_STATE$SessionIdPresent$VH_; }

    static final MemoryLayout _RDR_CALLOUT_STATE$InterfacePresent$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _RDR_CALLOUT_STATE$InterfacePresent$LAYOUT() { return _RDR_CALLOUT_STATE$InterfacePresent$LAYOUT_; }

    static final VarHandle _RDR_CALLOUT_STATE$InterfacePresent$VH_ = _RDR_CALLOUT_STATE$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("InterfacePresent"));
    static final java.lang.invoke.VarHandle _RDR_CALLOUT_STATE$InterfacePresent$VH() { return _RDR_CALLOUT_STATE$InterfacePresent$VH_; }

    static final MemoryLayout _RDR_CALLOUT_STATE$CertContext$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RDR_CALLOUT_STATE$CertContext$LAYOUT() { return _RDR_CALLOUT_STATE$CertContext$LAYOUT_; }

    static final VarHandle _RDR_CALLOUT_STATE$CertContext$VH_ = MemoryHandles.asAddressVarHandle(_RDR_CALLOUT_STATE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CertContext")));
    static final java.lang.invoke.VarHandle _RDR_CALLOUT_STATE$CertContext$VH() { return _RDR_CALLOUT_STATE$CertContext$VH_; }

    static final int RpcCurrentUniqueUser() { return (int)1L; }

    static final int RpcBackEndConnectionAttempts() { return (int)2L; }

    static final int RpcBackEndConnectionFailed() { return (int)3L; }

    static final int RpcRequestsPerSecond() { return (int)4L; }

    static final int RpcIncomingConnections() { return (int)5L; }

    static final int RpcIncomingBandwidth() { return (int)6L; }

    static final int RpcOutgoingBandwidth() { return (int)7L; }

    static final int RpcAttemptedLbsDecisions() { return (int)8L; }

    static final int RpcFailedLbsDecisions() { return (int)9L; }

    static final int RpcAttemptedLbsMessages() { return (int)10L; }

    static final int RpcFailedLbsMessages() { return (int)11L; }

    static final int RpcLastCounter() { return (int)12L; }

    static final MemoryLayout tagI_RpcProxyCallbackInterface$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("IsValidMachineFn"),
        C_POINTER.withName("GetClientAddressFn"),
        C_POINTER.withName("GetConnectionTimeoutFn"),
        C_POINTER.withName("PerformCalloutFn"),
        C_POINTER.withName("FreeCalloutStateFn"),
        C_POINTER.withName("GetClientSessionAndResourceUUIDFn"),
        C_POINTER.withName("ProxyFilterIfFn"),
        C_POINTER.withName("RpcProxyUpdatePerfCounterFn"),
        C_POINTER.withName("RpcProxyUpdatePerfCounterBackendServerFn")
    ).withName("tagI_RpcProxyCallbackInterface");
    static final jdk.incubator.foreign.MemoryLayout tagI_RpcProxyCallbackInterface$struct$LAYOUT() { return tagI_RpcProxyCallbackInterface$struct$LAYOUT_; }

    static final MemoryLayout tagI_RpcProxyCallbackInterface$IsValidMachineFn$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagI_RpcProxyCallbackInterface$IsValidMachineFn$LAYOUT() { return tagI_RpcProxyCallbackInterface$IsValidMachineFn$LAYOUT_; }

    static final VarHandle tagI_RpcProxyCallbackInterface$IsValidMachineFn$VH_ = MemoryHandles.asAddressVarHandle(tagI_RpcProxyCallbackInterface$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IsValidMachineFn")));
    static final java.lang.invoke.VarHandle tagI_RpcProxyCallbackInterface$IsValidMachineFn$VH() { return tagI_RpcProxyCallbackInterface$IsValidMachineFn$VH_; }

    static final MemoryLayout tagI_RpcProxyCallbackInterface$GetClientAddressFn$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagI_RpcProxyCallbackInterface$GetClientAddressFn$LAYOUT() { return tagI_RpcProxyCallbackInterface$GetClientAddressFn$LAYOUT_; }

    static final VarHandle tagI_RpcProxyCallbackInterface$GetClientAddressFn$VH_ = MemoryHandles.asAddressVarHandle(tagI_RpcProxyCallbackInterface$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetClientAddressFn")));
    static final java.lang.invoke.VarHandle tagI_RpcProxyCallbackInterface$GetClientAddressFn$VH() { return tagI_RpcProxyCallbackInterface$GetClientAddressFn$VH_; }

    static final MemoryLayout tagI_RpcProxyCallbackInterface$GetConnectionTimeoutFn$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagI_RpcProxyCallbackInterface$GetConnectionTimeoutFn$LAYOUT() { return tagI_RpcProxyCallbackInterface$GetConnectionTimeoutFn$LAYOUT_; }

    static final VarHandle tagI_RpcProxyCallbackInterface$GetConnectionTimeoutFn$VH_ = MemoryHandles.asAddressVarHandle(tagI_RpcProxyCallbackInterface$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetConnectionTimeoutFn")));
    static final java.lang.invoke.VarHandle tagI_RpcProxyCallbackInterface$GetConnectionTimeoutFn$VH() { return tagI_RpcProxyCallbackInterface$GetConnectionTimeoutFn$VH_; }

    static final MemoryLayout tagI_RpcProxyCallbackInterface$PerformCalloutFn$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagI_RpcProxyCallbackInterface$PerformCalloutFn$LAYOUT() { return tagI_RpcProxyCallbackInterface$PerformCalloutFn$LAYOUT_; }

    static final VarHandle tagI_RpcProxyCallbackInterface$PerformCalloutFn$VH_ = MemoryHandles.asAddressVarHandle(tagI_RpcProxyCallbackInterface$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("PerformCalloutFn")));
    static final java.lang.invoke.VarHandle tagI_RpcProxyCallbackInterface$PerformCalloutFn$VH() { return tagI_RpcProxyCallbackInterface$PerformCalloutFn$VH_; }

    static final MemoryLayout tagI_RpcProxyCallbackInterface$FreeCalloutStateFn$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagI_RpcProxyCallbackInterface$FreeCalloutStateFn$LAYOUT() { return tagI_RpcProxyCallbackInterface$FreeCalloutStateFn$LAYOUT_; }

    static final VarHandle tagI_RpcProxyCallbackInterface$FreeCalloutStateFn$VH_ = MemoryHandles.asAddressVarHandle(tagI_RpcProxyCallbackInterface$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("FreeCalloutStateFn")));
    static final java.lang.invoke.VarHandle tagI_RpcProxyCallbackInterface$FreeCalloutStateFn$VH() { return tagI_RpcProxyCallbackInterface$FreeCalloutStateFn$VH_; }

    static final MemoryLayout tagI_RpcProxyCallbackInterface$GetClientSessionAndResourceUUIDFn$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagI_RpcProxyCallbackInterface$GetClientSessionAndResourceUUIDFn$LAYOUT() { return tagI_RpcProxyCallbackInterface$GetClientSessionAndResourceUUIDFn$LAYOUT_; }

    static final VarHandle tagI_RpcProxyCallbackInterface$GetClientSessionAndResourceUUIDFn$VH_ = MemoryHandles.asAddressVarHandle(tagI_RpcProxyCallbackInterface$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetClientSessionAndResourceUUIDFn")));
    static final java.lang.invoke.VarHandle tagI_RpcProxyCallbackInterface$GetClientSessionAndResourceUUIDFn$VH() { return tagI_RpcProxyCallbackInterface$GetClientSessionAndResourceUUIDFn$VH_; }

    static final MemoryLayout tagI_RpcProxyCallbackInterface$ProxyFilterIfFn$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagI_RpcProxyCallbackInterface$ProxyFilterIfFn$LAYOUT() { return tagI_RpcProxyCallbackInterface$ProxyFilterIfFn$LAYOUT_; }

    static final VarHandle tagI_RpcProxyCallbackInterface$ProxyFilterIfFn$VH_ = MemoryHandles.asAddressVarHandle(tagI_RpcProxyCallbackInterface$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ProxyFilterIfFn")));
    static final java.lang.invoke.VarHandle tagI_RpcProxyCallbackInterface$ProxyFilterIfFn$VH() { return tagI_RpcProxyCallbackInterface$ProxyFilterIfFn$VH_; }

    static final MemoryLayout tagI_RpcProxyCallbackInterface$RpcProxyUpdatePerfCounterFn$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagI_RpcProxyCallbackInterface$RpcProxyUpdatePerfCounterFn$LAYOUT() { return tagI_RpcProxyCallbackInterface$RpcProxyUpdatePerfCounterFn$LAYOUT_; }

    static final VarHandle tagI_RpcProxyCallbackInterface$RpcProxyUpdatePerfCounterFn$VH_ = MemoryHandles.asAddressVarHandle(tagI_RpcProxyCallbackInterface$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RpcProxyUpdatePerfCounterFn")));
    static final java.lang.invoke.VarHandle tagI_RpcProxyCallbackInterface$RpcProxyUpdatePerfCounterFn$VH() { return tagI_RpcProxyCallbackInterface$RpcProxyUpdatePerfCounterFn$VH_; }

    static final MemoryLayout tagI_RpcProxyCallbackInterface$RpcProxyUpdatePerfCounterBackendServerFn$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagI_RpcProxyCallbackInterface$RpcProxyUpdatePerfCounterBackendServerFn$LAYOUT() { return tagI_RpcProxyCallbackInterface$RpcProxyUpdatePerfCounterBackendServerFn$LAYOUT_; }

    static final VarHandle tagI_RpcProxyCallbackInterface$RpcProxyUpdatePerfCounterBackendServerFn$VH_ = MemoryHandles.asAddressVarHandle(tagI_RpcProxyCallbackInterface$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RpcProxyUpdatePerfCounterBackendServerFn")));
    static final java.lang.invoke.VarHandle tagI_RpcProxyCallbackInterface$RpcProxyUpdatePerfCounterBackendServerFn$VH() { return tagI_RpcProxyCallbackInterface$RpcProxyUpdatePerfCounterBackendServerFn$VH_; }

    static final FunctionDescriptor I_RpcProxyNewConnection$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcProxyNewConnection$FUNC() { return I_RpcProxyNewConnection$FUNC_; }

    static final MethodHandle I_RpcProxyNewConnection$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcProxyNewConnection",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcProxyNewConnection$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcProxyNewConnection$MH() { return I_RpcProxyNewConnection$MH_; }

    static final FunctionDescriptor I_RpcReplyToClientWithStatus$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcReplyToClientWithStatus$FUNC() { return I_RpcReplyToClientWithStatus$FUNC_; }

    static final MethodHandle I_RpcReplyToClientWithStatus$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcReplyToClientWithStatus",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        I_RpcReplyToClientWithStatus$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcReplyToClientWithStatus$MH() { return I_RpcReplyToClientWithStatus$MH_; }

    static final FunctionDescriptor I_RpcRecordCalloutFailure$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcRecordCalloutFailure$FUNC() { return I_RpcRecordCalloutFailure$FUNC_; }

    static final MethodHandle I_RpcRecordCalloutFailure$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcRecordCalloutFailure",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        I_RpcRecordCalloutFailure$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcRecordCalloutFailure$MH() { return I_RpcRecordCalloutFailure$MH_; }

    static final FunctionDescriptor I_RpcMgmtEnableDedicatedThreadPool$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcMgmtEnableDedicatedThreadPool$FUNC() { return I_RpcMgmtEnableDedicatedThreadPool$FUNC_; }

    static final MethodHandle I_RpcMgmtEnableDedicatedThreadPool$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcMgmtEnableDedicatedThreadPool",
        "()I",
        I_RpcMgmtEnableDedicatedThreadPool$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcMgmtEnableDedicatedThreadPool$MH() { return I_RpcMgmtEnableDedicatedThreadPool$MH_; }

    static final FunctionDescriptor I_RpcGetDefaultSD$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcGetDefaultSD$FUNC() { return I_RpcGetDefaultSD$FUNC_; }

    static final MethodHandle I_RpcGetDefaultSD$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcGetDefaultSD",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcGetDefaultSD$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcGetDefaultSD$MH() { return I_RpcGetDefaultSD$MH_; }

    static final FunctionDescriptor I_RpcOpenClientProcess$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcOpenClientProcess$FUNC() { return I_RpcOpenClientProcess$FUNC_; }

    static final MethodHandle I_RpcOpenClientProcess$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcOpenClientProcess",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        I_RpcOpenClientProcess$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcOpenClientProcess$MH() { return I_RpcOpenClientProcess$MH_; }

    static final FunctionDescriptor I_RpcBindingIsServerLocal$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcBindingIsServerLocal$FUNC() { return I_RpcBindingIsServerLocal$FUNC_; }

    static final MethodHandle I_RpcBindingIsServerLocal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcBindingIsServerLocal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcBindingIsServerLocal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcBindingIsServerLocal$MH() { return I_RpcBindingIsServerLocal$MH_; }

    static final FunctionDescriptor I_RpcBindingSetPrivateOption$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcBindingSetPrivateOption$FUNC() { return I_RpcBindingSetPrivateOption$FUNC_; }

    static final MethodHandle I_RpcBindingSetPrivateOption$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcBindingSetPrivateOption",
        "(Ljdk/incubator/foreign/MemoryAddress;IJ)I",
        I_RpcBindingSetPrivateOption$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcBindingSetPrivateOption$MH() { return I_RpcBindingSetPrivateOption$MH_; }

    static final FunctionDescriptor I_RpcServerSubscribeForDisconnectNotification$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerSubscribeForDisconnectNotification$FUNC() { return I_RpcServerSubscribeForDisconnectNotification$FUNC_; }

    static final MethodHandle I_RpcServerSubscribeForDisconnectNotification$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerSubscribeForDisconnectNotification",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcServerSubscribeForDisconnectNotification$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerSubscribeForDisconnectNotification$MH() { return I_RpcServerSubscribeForDisconnectNotification$MH_; }

    static final FunctionDescriptor I_RpcServerGetAssociationID$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerGetAssociationID$FUNC() { return I_RpcServerGetAssociationID$FUNC_; }

    static final MethodHandle I_RpcServerGetAssociationID$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerGetAssociationID",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcServerGetAssociationID$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerGetAssociationID$MH() { return I_RpcServerGetAssociationID$MH_; }

    static final FunctionDescriptor I_RpcServerDisableExceptionFilter$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerDisableExceptionFilter$FUNC() { return I_RpcServerDisableExceptionFilter$FUNC_; }

    static final MethodHandle I_RpcServerDisableExceptionFilter$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerDisableExceptionFilter",
        "()I",
        I_RpcServerDisableExceptionFilter$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerDisableExceptionFilter$MH() { return I_RpcServerDisableExceptionFilter$MH_; }

    static final FunctionDescriptor I_RpcServerSubscribeForDisconnectNotification2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerSubscribeForDisconnectNotification2$FUNC() { return I_RpcServerSubscribeForDisconnectNotification2$FUNC_; }

    static final MethodHandle I_RpcServerSubscribeForDisconnectNotification2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerSubscribeForDisconnectNotification2",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcServerSubscribeForDisconnectNotification2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerSubscribeForDisconnectNotification2$MH() { return I_RpcServerSubscribeForDisconnectNotification2$MH_; }

    static final FunctionDescriptor I_RpcServerUnsubscribeForDisconnectNotification$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("_GUID")
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcServerUnsubscribeForDisconnectNotification$FUNC() { return I_RpcServerUnsubscribeForDisconnectNotification$FUNC_; }

    static final MethodHandle I_RpcServerUnsubscribeForDisconnectNotification$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcServerUnsubscribeForDisconnectNotification",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;)I",
        I_RpcServerUnsubscribeForDisconnectNotification$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcServerUnsubscribeForDisconnectNotification$MH() { return I_RpcServerUnsubscribeForDisconnectNotification$MH_; }

    static final FunctionDescriptor RpcNsBindingExportA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsBindingExportA$FUNC() { return RpcNsBindingExportA$FUNC_; }

    static final MethodHandle RpcNsBindingExportA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsBindingExportA",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsBindingExportA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsBindingExportA$MH() { return RpcNsBindingExportA$MH_; }

    static final FunctionDescriptor RpcNsBindingUnexportA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsBindingUnexportA$FUNC() { return RpcNsBindingUnexportA$FUNC_; }

    static final MethodHandle RpcNsBindingUnexportA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsBindingUnexportA",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsBindingUnexportA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsBindingUnexportA$MH() { return RpcNsBindingUnexportA$MH_; }

    static final FunctionDescriptor RpcNsBindingExportW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsBindingExportW$FUNC() { return RpcNsBindingExportW$FUNC_; }

    static final MethodHandle RpcNsBindingExportW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsBindingExportW",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsBindingExportW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsBindingExportW$MH() { return RpcNsBindingExportW$MH_; }

    static final FunctionDescriptor RpcNsBindingUnexportW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsBindingUnexportW$FUNC() { return RpcNsBindingUnexportW$FUNC_; }

    static final MethodHandle RpcNsBindingUnexportW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsBindingUnexportW",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsBindingUnexportW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsBindingUnexportW$MH() { return RpcNsBindingUnexportW$MH_; }

    static final FunctionDescriptor RpcNsBindingExportPnPA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsBindingExportPnPA$FUNC() { return RpcNsBindingExportPnPA$FUNC_; }

    static final MethodHandle RpcNsBindingExportPnPA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsBindingExportPnPA",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsBindingExportPnPA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsBindingExportPnPA$MH() { return RpcNsBindingExportPnPA$MH_; }

    static final FunctionDescriptor RpcNsBindingUnexportPnPA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsBindingUnexportPnPA$FUNC() { return RpcNsBindingUnexportPnPA$FUNC_; }

    static final MethodHandle RpcNsBindingUnexportPnPA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsBindingUnexportPnPA",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsBindingUnexportPnPA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsBindingUnexportPnPA$MH() { return RpcNsBindingUnexportPnPA$MH_; }

    static final FunctionDescriptor RpcNsBindingExportPnPW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsBindingExportPnPW$FUNC() { return RpcNsBindingExportPnPW$FUNC_; }

    static final MethodHandle RpcNsBindingExportPnPW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsBindingExportPnPW",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsBindingExportPnPW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsBindingExportPnPW$MH() { return RpcNsBindingExportPnPW$MH_; }

    static final FunctionDescriptor RpcNsBindingUnexportPnPW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsBindingUnexportPnPW$FUNC() { return RpcNsBindingUnexportPnPW$FUNC_; }

    static final MethodHandle RpcNsBindingUnexportPnPW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsBindingUnexportPnPW",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsBindingUnexportPnPW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsBindingUnexportPnPW$MH() { return RpcNsBindingUnexportPnPW$MH_; }

    static final FunctionDescriptor RpcNsBindingLookupBeginA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsBindingLookupBeginA$FUNC() { return RpcNsBindingLookupBeginA$FUNC_; }

    static final MethodHandle RpcNsBindingLookupBeginA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsBindingLookupBeginA",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsBindingLookupBeginA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsBindingLookupBeginA$MH() { return RpcNsBindingLookupBeginA$MH_; }

    static final FunctionDescriptor RpcNsBindingLookupBeginW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsBindingLookupBeginW$FUNC() { return RpcNsBindingLookupBeginW$FUNC_; }

    static final MethodHandle RpcNsBindingLookupBeginW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsBindingLookupBeginW",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsBindingLookupBeginW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsBindingLookupBeginW$MH() { return RpcNsBindingLookupBeginW$MH_; }

    static final FunctionDescriptor RpcNsBindingLookupNext$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsBindingLookupNext$FUNC() { return RpcNsBindingLookupNext$FUNC_; }

    static final MethodHandle RpcNsBindingLookupNext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsBindingLookupNext",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsBindingLookupNext$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsBindingLookupNext$MH() { return RpcNsBindingLookupNext$MH_; }

    static final FunctionDescriptor RpcNsBindingLookupDone$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsBindingLookupDone$FUNC() { return RpcNsBindingLookupDone$FUNC_; }

    static final MethodHandle RpcNsBindingLookupDone$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsBindingLookupDone",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsBindingLookupDone$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsBindingLookupDone$MH() { return RpcNsBindingLookupDone$MH_; }

    static final FunctionDescriptor RpcNsGroupDeleteA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsGroupDeleteA$FUNC() { return RpcNsGroupDeleteA$FUNC_; }

    static final MethodHandle RpcNsGroupDeleteA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsGroupDeleteA",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsGroupDeleteA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsGroupDeleteA$MH() { return RpcNsGroupDeleteA$MH_; }

    static final FunctionDescriptor RpcNsGroupMbrAddA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsGroupMbrAddA$FUNC() { return RpcNsGroupMbrAddA$FUNC_; }

    static final MethodHandle RpcNsGroupMbrAddA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsGroupMbrAddA",
        "(ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsGroupMbrAddA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsGroupMbrAddA$MH() { return RpcNsGroupMbrAddA$MH_; }

    static final FunctionDescriptor RpcNsGroupMbrRemoveA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsGroupMbrRemoveA$FUNC() { return RpcNsGroupMbrRemoveA$FUNC_; }

    static final MethodHandle RpcNsGroupMbrRemoveA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsGroupMbrRemoveA",
        "(ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsGroupMbrRemoveA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsGroupMbrRemoveA$MH() { return RpcNsGroupMbrRemoveA$MH_; }

    static final FunctionDescriptor RpcNsGroupMbrInqBeginA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsGroupMbrInqBeginA$FUNC() { return RpcNsGroupMbrInqBeginA$FUNC_; }

    static final MethodHandle RpcNsGroupMbrInqBeginA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsGroupMbrInqBeginA",
        "(ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsGroupMbrInqBeginA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsGroupMbrInqBeginA$MH() { return RpcNsGroupMbrInqBeginA$MH_; }

    static final FunctionDescriptor RpcNsGroupMbrInqNextA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsGroupMbrInqNextA$FUNC() { return RpcNsGroupMbrInqNextA$FUNC_; }

    static final MethodHandle RpcNsGroupMbrInqNextA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsGroupMbrInqNextA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsGroupMbrInqNextA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsGroupMbrInqNextA$MH() { return RpcNsGroupMbrInqNextA$MH_; }

    static final FunctionDescriptor RpcNsGroupDeleteW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsGroupDeleteW$FUNC() { return RpcNsGroupDeleteW$FUNC_; }

    static final MethodHandle RpcNsGroupDeleteW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsGroupDeleteW",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsGroupDeleteW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsGroupDeleteW$MH() { return RpcNsGroupDeleteW$MH_; }

    static final FunctionDescriptor RpcNsGroupMbrAddW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsGroupMbrAddW$FUNC() { return RpcNsGroupMbrAddW$FUNC_; }

    static final MethodHandle RpcNsGroupMbrAddW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsGroupMbrAddW",
        "(ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsGroupMbrAddW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsGroupMbrAddW$MH() { return RpcNsGroupMbrAddW$MH_; }

    static final FunctionDescriptor RpcNsGroupMbrRemoveW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsGroupMbrRemoveW$FUNC() { return RpcNsGroupMbrRemoveW$FUNC_; }

    static final MethodHandle RpcNsGroupMbrRemoveW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsGroupMbrRemoveW",
        "(ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsGroupMbrRemoveW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsGroupMbrRemoveW$MH() { return RpcNsGroupMbrRemoveW$MH_; }

    static final FunctionDescriptor RpcNsGroupMbrInqBeginW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsGroupMbrInqBeginW$FUNC() { return RpcNsGroupMbrInqBeginW$FUNC_; }

    static final MethodHandle RpcNsGroupMbrInqBeginW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsGroupMbrInqBeginW",
        "(ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsGroupMbrInqBeginW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsGroupMbrInqBeginW$MH() { return RpcNsGroupMbrInqBeginW$MH_; }

    static final FunctionDescriptor RpcNsGroupMbrInqNextW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsGroupMbrInqNextW$FUNC() { return RpcNsGroupMbrInqNextW$FUNC_; }

    static final MethodHandle RpcNsGroupMbrInqNextW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsGroupMbrInqNextW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsGroupMbrInqNextW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsGroupMbrInqNextW$MH() { return RpcNsGroupMbrInqNextW$MH_; }

    static final FunctionDescriptor RpcNsGroupMbrInqDone$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsGroupMbrInqDone$FUNC() { return RpcNsGroupMbrInqDone$FUNC_; }

    static final MethodHandle RpcNsGroupMbrInqDone$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsGroupMbrInqDone",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsGroupMbrInqDone$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsGroupMbrInqDone$MH() { return RpcNsGroupMbrInqDone$MH_; }

    static final FunctionDescriptor RpcNsProfileDeleteA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsProfileDeleteA$FUNC() { return RpcNsProfileDeleteA$FUNC_; }

    static final MethodHandle RpcNsProfileDeleteA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsProfileDeleteA",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsProfileDeleteA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsProfileDeleteA$MH() { return RpcNsProfileDeleteA$MH_; }

    static final FunctionDescriptor RpcNsProfileEltAddA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsProfileEltAddA$FUNC() { return RpcNsProfileEltAddA$FUNC_; }

    static final MethodHandle RpcNsProfileEltAddA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsProfileEltAddA",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsProfileEltAddA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsProfileEltAddA$MH() { return RpcNsProfileEltAddA$MH_; }

    static final FunctionDescriptor RpcNsProfileEltRemoveA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsProfileEltRemoveA$FUNC() { return RpcNsProfileEltRemoveA$FUNC_; }

    static final MethodHandle RpcNsProfileEltRemoveA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsProfileEltRemoveA",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsProfileEltRemoveA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsProfileEltRemoveA$MH() { return RpcNsProfileEltRemoveA$MH_; }

    static final FunctionDescriptor RpcNsProfileEltInqBeginA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsProfileEltInqBeginA$FUNC() { return RpcNsProfileEltInqBeginA$FUNC_; }

    static final MethodHandle RpcNsProfileEltInqBeginA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsProfileEltInqBeginA",
        "(ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsProfileEltInqBeginA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsProfileEltInqBeginA$MH() { return RpcNsProfileEltInqBeginA$MH_; }

    static final FunctionDescriptor RpcNsProfileEltInqNextA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsProfileEltInqNextA$FUNC() { return RpcNsProfileEltInqNextA$FUNC_; }

    static final MethodHandle RpcNsProfileEltInqNextA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsProfileEltInqNextA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsProfileEltInqNextA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsProfileEltInqNextA$MH() { return RpcNsProfileEltInqNextA$MH_; }

    static final FunctionDescriptor RpcNsProfileDeleteW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsProfileDeleteW$FUNC() { return RpcNsProfileDeleteW$FUNC_; }

    static final MethodHandle RpcNsProfileDeleteW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsProfileDeleteW",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsProfileDeleteW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsProfileDeleteW$MH() { return RpcNsProfileDeleteW$MH_; }

    static final FunctionDescriptor RpcNsProfileEltAddW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsProfileEltAddW$FUNC() { return RpcNsProfileEltAddW$FUNC_; }

    static final MethodHandle RpcNsProfileEltAddW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsProfileEltAddW",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsProfileEltAddW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsProfileEltAddW$MH() { return RpcNsProfileEltAddW$MH_; }

    static final FunctionDescriptor RpcNsProfileEltRemoveW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsProfileEltRemoveW$FUNC() { return RpcNsProfileEltRemoveW$FUNC_; }

    static final MethodHandle RpcNsProfileEltRemoveW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsProfileEltRemoveW",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsProfileEltRemoveW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsProfileEltRemoveW$MH() { return RpcNsProfileEltRemoveW$MH_; }

    static final FunctionDescriptor RpcNsProfileEltInqBeginW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsProfileEltInqBeginW$FUNC() { return RpcNsProfileEltInqBeginW$FUNC_; }

    static final MethodHandle RpcNsProfileEltInqBeginW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsProfileEltInqBeginW",
        "(ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsProfileEltInqBeginW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsProfileEltInqBeginW$MH() { return RpcNsProfileEltInqBeginW$MH_; }

    static final FunctionDescriptor RpcNsProfileEltInqNextW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsProfileEltInqNextW$FUNC() { return RpcNsProfileEltInqNextW$FUNC_; }

    static final MethodHandle RpcNsProfileEltInqNextW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsProfileEltInqNextW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsProfileEltInqNextW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsProfileEltInqNextW$MH() { return RpcNsProfileEltInqNextW$MH_; }

    static final FunctionDescriptor RpcNsProfileEltInqDone$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsProfileEltInqDone$FUNC() { return RpcNsProfileEltInqDone$FUNC_; }

    static final MethodHandle RpcNsProfileEltInqDone$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsProfileEltInqDone",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsProfileEltInqDone$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsProfileEltInqDone$MH() { return RpcNsProfileEltInqDone$MH_; }

    static final FunctionDescriptor RpcNsEntryObjectInqBeginA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsEntryObjectInqBeginA$FUNC() { return RpcNsEntryObjectInqBeginA$FUNC_; }

    static final MethodHandle RpcNsEntryObjectInqBeginA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsEntryObjectInqBeginA",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsEntryObjectInqBeginA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsEntryObjectInqBeginA$MH() { return RpcNsEntryObjectInqBeginA$MH_; }

    static final FunctionDescriptor RpcNsEntryObjectInqBeginW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsEntryObjectInqBeginW$FUNC() { return RpcNsEntryObjectInqBeginW$FUNC_; }

    static final MethodHandle RpcNsEntryObjectInqBeginW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsEntryObjectInqBeginW",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsEntryObjectInqBeginW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsEntryObjectInqBeginW$MH() { return RpcNsEntryObjectInqBeginW$MH_; }

    static final FunctionDescriptor RpcNsEntryObjectInqNext$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsEntryObjectInqNext$FUNC() { return RpcNsEntryObjectInqNext$FUNC_; }

    static final MethodHandle RpcNsEntryObjectInqNext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsEntryObjectInqNext",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsEntryObjectInqNext$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsEntryObjectInqNext$MH() { return RpcNsEntryObjectInqNext$MH_; }

    static final FunctionDescriptor RpcNsEntryObjectInqDone$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsEntryObjectInqDone$FUNC() { return RpcNsEntryObjectInqDone$FUNC_; }

    static final MethodHandle RpcNsEntryObjectInqDone$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsEntryObjectInqDone",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsEntryObjectInqDone$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsEntryObjectInqDone$MH() { return RpcNsEntryObjectInqDone$MH_; }

    static final FunctionDescriptor RpcNsEntryExpandNameA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsEntryExpandNameA$FUNC() { return RpcNsEntryExpandNameA$FUNC_; }

    static final MethodHandle RpcNsEntryExpandNameA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsEntryExpandNameA",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsEntryExpandNameA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsEntryExpandNameA$MH() { return RpcNsEntryExpandNameA$MH_; }

    static final FunctionDescriptor RpcNsMgmtBindingUnexportA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsMgmtBindingUnexportA$FUNC() { return RpcNsMgmtBindingUnexportA$FUNC_; }

    static final MethodHandle RpcNsMgmtBindingUnexportA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsMgmtBindingUnexportA",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsMgmtBindingUnexportA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsMgmtBindingUnexportA$MH() { return RpcNsMgmtBindingUnexportA$MH_; }

    static final FunctionDescriptor RpcNsMgmtEntryCreateA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsMgmtEntryCreateA$FUNC() { return RpcNsMgmtEntryCreateA$FUNC_; }

    static final MethodHandle RpcNsMgmtEntryCreateA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsMgmtEntryCreateA",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsMgmtEntryCreateA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsMgmtEntryCreateA$MH() { return RpcNsMgmtEntryCreateA$MH_; }

    static final FunctionDescriptor RpcNsMgmtEntryDeleteA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsMgmtEntryDeleteA$FUNC() { return RpcNsMgmtEntryDeleteA$FUNC_; }

    static final MethodHandle RpcNsMgmtEntryDeleteA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsMgmtEntryDeleteA",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsMgmtEntryDeleteA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsMgmtEntryDeleteA$MH() { return RpcNsMgmtEntryDeleteA$MH_; }

    static final FunctionDescriptor RpcNsMgmtEntryInqIfIdsA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsMgmtEntryInqIfIdsA$FUNC() { return RpcNsMgmtEntryInqIfIdsA$FUNC_; }

    static final MethodHandle RpcNsMgmtEntryInqIfIdsA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsMgmtEntryInqIfIdsA",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsMgmtEntryInqIfIdsA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsMgmtEntryInqIfIdsA$MH() { return RpcNsMgmtEntryInqIfIdsA$MH_; }

    static final FunctionDescriptor RpcNsMgmtHandleSetExpAge$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsMgmtHandleSetExpAge$FUNC() { return RpcNsMgmtHandleSetExpAge$FUNC_; }

    static final MethodHandle RpcNsMgmtHandleSetExpAge$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsMgmtHandleSetExpAge",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        RpcNsMgmtHandleSetExpAge$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsMgmtHandleSetExpAge$MH() { return RpcNsMgmtHandleSetExpAge$MH_; }

    static final FunctionDescriptor RpcNsMgmtInqExpAge$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsMgmtInqExpAge$FUNC() { return RpcNsMgmtInqExpAge$FUNC_; }

    static final MethodHandle RpcNsMgmtInqExpAge$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsMgmtInqExpAge",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsMgmtInqExpAge$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsMgmtInqExpAge$MH() { return RpcNsMgmtInqExpAge$MH_; }

    static final FunctionDescriptor RpcNsMgmtSetExpAge$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsMgmtSetExpAge$FUNC() { return RpcNsMgmtSetExpAge$FUNC_; }

    static final MethodHandle RpcNsMgmtSetExpAge$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsMgmtSetExpAge",
        "(I)I",
        RpcNsMgmtSetExpAge$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsMgmtSetExpAge$MH() { return RpcNsMgmtSetExpAge$MH_; }

    static final FunctionDescriptor RpcNsEntryExpandNameW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsEntryExpandNameW$FUNC() { return RpcNsEntryExpandNameW$FUNC_; }

    static final MethodHandle RpcNsEntryExpandNameW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsEntryExpandNameW",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsEntryExpandNameW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsEntryExpandNameW$MH() { return RpcNsEntryExpandNameW$MH_; }

    static final FunctionDescriptor RpcNsMgmtBindingUnexportW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsMgmtBindingUnexportW$FUNC() { return RpcNsMgmtBindingUnexportW$FUNC_; }

    static final MethodHandle RpcNsMgmtBindingUnexportW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsMgmtBindingUnexportW",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsMgmtBindingUnexportW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsMgmtBindingUnexportW$MH() { return RpcNsMgmtBindingUnexportW$MH_; }

    static final FunctionDescriptor RpcNsMgmtEntryCreateW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsMgmtEntryCreateW$FUNC() { return RpcNsMgmtEntryCreateW$FUNC_; }

    static final MethodHandle RpcNsMgmtEntryCreateW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsMgmtEntryCreateW",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsMgmtEntryCreateW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsMgmtEntryCreateW$MH() { return RpcNsMgmtEntryCreateW$MH_; }

    static final FunctionDescriptor RpcNsMgmtEntryDeleteW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsMgmtEntryDeleteW$FUNC() { return RpcNsMgmtEntryDeleteW$FUNC_; }

    static final MethodHandle RpcNsMgmtEntryDeleteW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsMgmtEntryDeleteW",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsMgmtEntryDeleteW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsMgmtEntryDeleteW$MH() { return RpcNsMgmtEntryDeleteW$MH_; }

    static final FunctionDescriptor RpcNsMgmtEntryInqIfIdsW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsMgmtEntryInqIfIdsW$FUNC() { return RpcNsMgmtEntryInqIfIdsW$FUNC_; }

    static final MethodHandle RpcNsMgmtEntryInqIfIdsW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsMgmtEntryInqIfIdsW",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsMgmtEntryInqIfIdsW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsMgmtEntryInqIfIdsW$MH() { return RpcNsMgmtEntryInqIfIdsW$MH_; }

    static final FunctionDescriptor RpcNsBindingImportBeginA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsBindingImportBeginA$FUNC() { return RpcNsBindingImportBeginA$FUNC_; }

    static final MethodHandle RpcNsBindingImportBeginA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsBindingImportBeginA",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsBindingImportBeginA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsBindingImportBeginA$MH() { return RpcNsBindingImportBeginA$MH_; }

    static final FunctionDescriptor RpcNsBindingImportBeginW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsBindingImportBeginW$FUNC() { return RpcNsBindingImportBeginW$FUNC_; }

    static final MethodHandle RpcNsBindingImportBeginW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsBindingImportBeginW",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsBindingImportBeginW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsBindingImportBeginW$MH() { return RpcNsBindingImportBeginW$MH_; }

    static final FunctionDescriptor RpcNsBindingImportNext$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsBindingImportNext$FUNC() { return RpcNsBindingImportNext$FUNC_; }

    static final MethodHandle RpcNsBindingImportNext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsBindingImportNext",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsBindingImportNext$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsBindingImportNext$MH() { return RpcNsBindingImportNext$MH_; }

    static final FunctionDescriptor RpcNsBindingImportDone$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsBindingImportDone$FUNC() { return RpcNsBindingImportDone$FUNC_; }

    static final MethodHandle RpcNsBindingImportDone$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsBindingImportDone",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsBindingImportDone$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsBindingImportDone$MH() { return RpcNsBindingImportDone$MH_; }

    static final FunctionDescriptor RpcNsBindingSelect$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsBindingSelect$FUNC() { return RpcNsBindingSelect$FUNC_; }

    static final MethodHandle RpcNsBindingSelect$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsBindingSelect",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNsBindingSelect$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsBindingSelect$MH() { return RpcNsBindingSelect$MH_; }

    static final int RpcNotificationTypeNone() { return (int)0L; }

    static final int RpcNotificationTypeEvent() { return (int)1L; }

    static final int RpcNotificationTypeApc() { return (int)2L; }

    static final int RpcNotificationTypeIoc() { return (int)3L; }

    static final int RpcNotificationTypeHwnd() { return (int)4L; }

    static final int RpcNotificationTypeCallback() { return (int)5L; }

    static final int RpcCallComplete() { return (int)0L; }

    static final int RpcSendComplete() { return (int)1L; }

    static final int RpcReceiveComplete() { return (int)2L; }

    static final int RpcClientDisconnect() { return (int)3L; }

    static final int RpcClientCancel() { return (int)4L; }

    static final MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$union$LAYOUT_ = MemoryLayout.ofUnion(
        MemoryLayout.ofStruct(
            C_POINTER.withName("NotificationRoutine"),
            C_POINTER.withName("hThread")
        ).withName("APC"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("hIOPort"),
            C_LONG.withName("dwNumberOfBytesTransferred"),
            MemoryLayout.ofPaddingBits(32),
            C_LONGLONG.withName("dwCompletionKey"),
            C_POINTER.withName("lpOverlapped")
        ).withName("IOC"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("hWnd"),
            C_INT.withName("Msg"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("HWND"),
        C_POINTER.withName("hEvent"),
        C_POINTER.withName("NotificationRoutine")
    ).withName("_RPC_ASYNC_NOTIFICATION_INFO");
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$union$LAYOUT() { return _RPC_ASYNC_NOTIFICATION_INFO$union$LAYOUT_; }

    static final MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$APC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("NotificationRoutine"),
        C_POINTER.withName("hThread")
    );
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$APC$struct$LAYOUT() { return _RPC_ASYNC_NOTIFICATION_INFO$APC$struct$LAYOUT_; }

    static final MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$APC$NotificationRoutine$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$APC$NotificationRoutine$LAYOUT() { return _RPC_ASYNC_NOTIFICATION_INFO$APC$NotificationRoutine$LAYOUT_; }

    static final VarHandle _RPC_ASYNC_NOTIFICATION_INFO$APC$NotificationRoutine$VH_ = MemoryHandles.asAddressVarHandle(_RPC_ASYNC_NOTIFICATION_INFO$APC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("NotificationRoutine")));
    static final java.lang.invoke.VarHandle _RPC_ASYNC_NOTIFICATION_INFO$APC$NotificationRoutine$VH() { return _RPC_ASYNC_NOTIFICATION_INFO$APC$NotificationRoutine$VH_; }

    static final MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$APC$hThread$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$APC$hThread$LAYOUT() { return _RPC_ASYNC_NOTIFICATION_INFO$APC$hThread$LAYOUT_; }

    static final VarHandle _RPC_ASYNC_NOTIFICATION_INFO$APC$hThread$VH_ = MemoryHandles.asAddressVarHandle(_RPC_ASYNC_NOTIFICATION_INFO$APC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hThread")));
    static final java.lang.invoke.VarHandle _RPC_ASYNC_NOTIFICATION_INFO$APC$hThread$VH() { return _RPC_ASYNC_NOTIFICATION_INFO$APC$hThread$VH_; }

    static final MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$IOC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("hIOPort"),
        C_LONG.withName("dwNumberOfBytesTransferred"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("dwCompletionKey"),
        C_POINTER.withName("lpOverlapped")
    );
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$IOC$struct$LAYOUT() { return _RPC_ASYNC_NOTIFICATION_INFO$IOC$struct$LAYOUT_; }

    static final MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$IOC$hIOPort$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$IOC$hIOPort$LAYOUT() { return _RPC_ASYNC_NOTIFICATION_INFO$IOC$hIOPort$LAYOUT_; }

    static final VarHandle _RPC_ASYNC_NOTIFICATION_INFO$IOC$hIOPort$VH_ = MemoryHandles.asAddressVarHandle(_RPC_ASYNC_NOTIFICATION_INFO$IOC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hIOPort")));
    static final java.lang.invoke.VarHandle _RPC_ASYNC_NOTIFICATION_INFO$IOC$hIOPort$VH() { return _RPC_ASYNC_NOTIFICATION_INFO$IOC$hIOPort$VH_; }

    static final MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$IOC$dwNumberOfBytesTransferred$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$IOC$dwNumberOfBytesTransferred$LAYOUT() { return _RPC_ASYNC_NOTIFICATION_INFO$IOC$dwNumberOfBytesTransferred$LAYOUT_; }

    static final VarHandle _RPC_ASYNC_NOTIFICATION_INFO$IOC$dwNumberOfBytesTransferred$VH_ = _RPC_ASYNC_NOTIFICATION_INFO$IOC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwNumberOfBytesTransferred"));
    static final java.lang.invoke.VarHandle _RPC_ASYNC_NOTIFICATION_INFO$IOC$dwNumberOfBytesTransferred$VH() { return _RPC_ASYNC_NOTIFICATION_INFO$IOC$dwNumberOfBytesTransferred$VH_; }

    static final MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$IOC$dwCompletionKey$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$IOC$dwCompletionKey$LAYOUT() { return _RPC_ASYNC_NOTIFICATION_INFO$IOC$dwCompletionKey$LAYOUT_; }

    static final VarHandle _RPC_ASYNC_NOTIFICATION_INFO$IOC$dwCompletionKey$VH_ = _RPC_ASYNC_NOTIFICATION_INFO$IOC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwCompletionKey"));
    static final java.lang.invoke.VarHandle _RPC_ASYNC_NOTIFICATION_INFO$IOC$dwCompletionKey$VH() { return _RPC_ASYNC_NOTIFICATION_INFO$IOC$dwCompletionKey$VH_; }

    static final MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$IOC$lpOverlapped$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$IOC$lpOverlapped$LAYOUT() { return _RPC_ASYNC_NOTIFICATION_INFO$IOC$lpOverlapped$LAYOUT_; }

    static final VarHandle _RPC_ASYNC_NOTIFICATION_INFO$IOC$lpOverlapped$VH_ = MemoryHandles.asAddressVarHandle(_RPC_ASYNC_NOTIFICATION_INFO$IOC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpOverlapped")));
    static final java.lang.invoke.VarHandle _RPC_ASYNC_NOTIFICATION_INFO$IOC$lpOverlapped$VH() { return _RPC_ASYNC_NOTIFICATION_INFO$IOC$lpOverlapped$VH_; }

    static final MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$HWND$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("hWnd"),
        C_INT.withName("Msg"),
        MemoryLayout.ofPaddingBits(32)
    );
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$HWND$struct$LAYOUT() { return _RPC_ASYNC_NOTIFICATION_INFO$HWND$struct$LAYOUT_; }

    static final MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$HWND$hWnd$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$HWND$hWnd$LAYOUT() { return _RPC_ASYNC_NOTIFICATION_INFO$HWND$hWnd$LAYOUT_; }

    static final VarHandle _RPC_ASYNC_NOTIFICATION_INFO$HWND$hWnd$VH_ = MemoryHandles.asAddressVarHandle(_RPC_ASYNC_NOTIFICATION_INFO$HWND$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hWnd")));
    static final java.lang.invoke.VarHandle _RPC_ASYNC_NOTIFICATION_INFO$HWND$hWnd$VH() { return _RPC_ASYNC_NOTIFICATION_INFO$HWND$hWnd$VH_; }

    static final MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$HWND$Msg$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$HWND$Msg$LAYOUT() { return _RPC_ASYNC_NOTIFICATION_INFO$HWND$Msg$LAYOUT_; }

    static final VarHandle _RPC_ASYNC_NOTIFICATION_INFO$HWND$Msg$VH_ = _RPC_ASYNC_NOTIFICATION_INFO$HWND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Msg"));
    static final java.lang.invoke.VarHandle _RPC_ASYNC_NOTIFICATION_INFO$HWND$Msg$VH() { return _RPC_ASYNC_NOTIFICATION_INFO$HWND$Msg$VH_; }

    static final MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$hEvent$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$hEvent$LAYOUT() { return _RPC_ASYNC_NOTIFICATION_INFO$hEvent$LAYOUT_; }

    static final VarHandle _RPC_ASYNC_NOTIFICATION_INFO$hEvent$VH_ = MemoryHandles.asAddressVarHandle(_RPC_ASYNC_NOTIFICATION_INFO$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hEvent")));
    static final java.lang.invoke.VarHandle _RPC_ASYNC_NOTIFICATION_INFO$hEvent$VH() { return _RPC_ASYNC_NOTIFICATION_INFO$hEvent$VH_; }

    static final MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$NotificationRoutine$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_NOTIFICATION_INFO$NotificationRoutine$LAYOUT() { return _RPC_ASYNC_NOTIFICATION_INFO$NotificationRoutine$LAYOUT_; }

    static final VarHandle _RPC_ASYNC_NOTIFICATION_INFO$NotificationRoutine$VH_ = MemoryHandles.asAddressVarHandle(_RPC_ASYNC_NOTIFICATION_INFO$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("NotificationRoutine")));
    static final java.lang.invoke.VarHandle _RPC_ASYNC_NOTIFICATION_INFO$NotificationRoutine$VH() { return _RPC_ASYNC_NOTIFICATION_INFO$NotificationRoutine$VH_; }

    static final MemoryLayout _RPC_ASYNC_STATE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Size"),
        C_LONG.withName("Signature"),
        C_LONG.withName("Lock"),
        C_LONG.withName("Flags"),
        C_POINTER.withName("StubInfo"),
        C_POINTER.withName("UserInfo"),
        C_POINTER.withName("RuntimeInfo"),
        C_INT.withName("Event"),
        C_INT.withName("NotificationType"),
        MemoryLayout.ofUnion(
            MemoryLayout.ofStruct(
                C_POINTER.withName("NotificationRoutine"),
                C_POINTER.withName("hThread")
            ).withName("APC"),
            MemoryLayout.ofStruct(
                C_POINTER.withName("hIOPort"),
                C_LONG.withName("dwNumberOfBytesTransferred"),
                MemoryLayout.ofPaddingBits(32),
                C_LONGLONG.withName("dwCompletionKey"),
                C_POINTER.withName("lpOverlapped")
            ).withName("IOC"),
            MemoryLayout.ofStruct(
                C_POINTER.withName("hWnd"),
                C_INT.withName("Msg"),
                MemoryLayout.ofPaddingBits(32)
            ).withName("HWND"),
            C_POINTER.withName("hEvent"),
            C_POINTER.withName("NotificationRoutine")
        ).withName("u"),
        MemoryLayout.ofSequence(4, C_LONGLONG).withName("Reserved")
    ).withName("_RPC_ASYNC_STATE");
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_STATE$struct$LAYOUT() { return _RPC_ASYNC_STATE$struct$LAYOUT_; }

    static final MemoryLayout _RPC_ASYNC_STATE$Size$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_STATE$Size$LAYOUT() { return _RPC_ASYNC_STATE$Size$LAYOUT_; }

    static final VarHandle _RPC_ASYNC_STATE$Size$VH_ = _RPC_ASYNC_STATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _RPC_ASYNC_STATE$Size$VH() { return _RPC_ASYNC_STATE$Size$VH_; }

    static final MemoryLayout _RPC_ASYNC_STATE$Signature$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_STATE$Signature$LAYOUT() { return _RPC_ASYNC_STATE$Signature$LAYOUT_; }

    static final VarHandle _RPC_ASYNC_STATE$Signature$VH_ = _RPC_ASYNC_STATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Signature"));
    static final java.lang.invoke.VarHandle _RPC_ASYNC_STATE$Signature$VH() { return _RPC_ASYNC_STATE$Signature$VH_; }

    static final MemoryLayout _RPC_ASYNC_STATE$Lock$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_STATE$Lock$LAYOUT() { return _RPC_ASYNC_STATE$Lock$LAYOUT_; }

    static final VarHandle _RPC_ASYNC_STATE$Lock$VH_ = _RPC_ASYNC_STATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Lock"));
    static final java.lang.invoke.VarHandle _RPC_ASYNC_STATE$Lock$VH() { return _RPC_ASYNC_STATE$Lock$VH_; }

    static final MemoryLayout _RPC_ASYNC_STATE$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_STATE$Flags$LAYOUT() { return _RPC_ASYNC_STATE$Flags$LAYOUT_; }

    static final VarHandle _RPC_ASYNC_STATE$Flags$VH_ = _RPC_ASYNC_STATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _RPC_ASYNC_STATE$Flags$VH() { return _RPC_ASYNC_STATE$Flags$VH_; }

    static final MemoryLayout _RPC_ASYNC_STATE$StubInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_STATE$StubInfo$LAYOUT() { return _RPC_ASYNC_STATE$StubInfo$LAYOUT_; }

    static final VarHandle _RPC_ASYNC_STATE$StubInfo$VH_ = MemoryHandles.asAddressVarHandle(_RPC_ASYNC_STATE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("StubInfo")));
    static final java.lang.invoke.VarHandle _RPC_ASYNC_STATE$StubInfo$VH() { return _RPC_ASYNC_STATE$StubInfo$VH_; }

    static final MemoryLayout _RPC_ASYNC_STATE$UserInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_STATE$UserInfo$LAYOUT() { return _RPC_ASYNC_STATE$UserInfo$LAYOUT_; }

    static final VarHandle _RPC_ASYNC_STATE$UserInfo$VH_ = MemoryHandles.asAddressVarHandle(_RPC_ASYNC_STATE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("UserInfo")));
    static final java.lang.invoke.VarHandle _RPC_ASYNC_STATE$UserInfo$VH() { return _RPC_ASYNC_STATE$UserInfo$VH_; }

    static final MemoryLayout _RPC_ASYNC_STATE$RuntimeInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_STATE$RuntimeInfo$LAYOUT() { return _RPC_ASYNC_STATE$RuntimeInfo$LAYOUT_; }

    static final VarHandle _RPC_ASYNC_STATE$RuntimeInfo$VH_ = MemoryHandles.asAddressVarHandle(_RPC_ASYNC_STATE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RuntimeInfo")));
    static final java.lang.invoke.VarHandle _RPC_ASYNC_STATE$RuntimeInfo$VH() { return _RPC_ASYNC_STATE$RuntimeInfo$VH_; }

    static final MemoryLayout _RPC_ASYNC_STATE$Event$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_STATE$Event$LAYOUT() { return _RPC_ASYNC_STATE$Event$LAYOUT_; }

    static final VarHandle _RPC_ASYNC_STATE$Event$VH_ = _RPC_ASYNC_STATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Event"));
    static final java.lang.invoke.VarHandle _RPC_ASYNC_STATE$Event$VH() { return _RPC_ASYNC_STATE$Event$VH_; }

    static final MemoryLayout _RPC_ASYNC_STATE$NotificationType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_ASYNC_STATE$NotificationType$LAYOUT() { return _RPC_ASYNC_STATE$NotificationType$LAYOUT_; }

    static final VarHandle _RPC_ASYNC_STATE$NotificationType$VH_ = _RPC_ASYNC_STATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NotificationType"));
    static final java.lang.invoke.VarHandle _RPC_ASYNC_STATE$NotificationType$VH() { return _RPC_ASYNC_STATE$NotificationType$VH_; }

    static final FunctionDescriptor RpcAsyncRegisterInfo$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcAsyncRegisterInfo$FUNC() { return RpcAsyncRegisterInfo$FUNC_; }

    static final MethodHandle RpcAsyncRegisterInfo$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcAsyncRegisterInfo",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcAsyncRegisterInfo$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcAsyncRegisterInfo$MH() { return RpcAsyncRegisterInfo$MH_; }

    static final FunctionDescriptor RpcAsyncInitializeHandle$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcAsyncInitializeHandle$FUNC() { return RpcAsyncInitializeHandle$FUNC_; }

    static final MethodHandle RpcAsyncInitializeHandle$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcAsyncInitializeHandle",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        RpcAsyncInitializeHandle$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcAsyncInitializeHandle$MH() { return RpcAsyncInitializeHandle$MH_; }

    static final FunctionDescriptor RpcAsyncGetCallStatus$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcAsyncGetCallStatus$FUNC() { return RpcAsyncGetCallStatus$FUNC_; }

    static final MethodHandle RpcAsyncGetCallStatus$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcAsyncGetCallStatus",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcAsyncGetCallStatus$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcAsyncGetCallStatus$MH() { return RpcAsyncGetCallStatus$MH_; }

    static final FunctionDescriptor RpcAsyncCompleteCall$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcAsyncCompleteCall$FUNC() { return RpcAsyncCompleteCall$FUNC_; }

    static final MethodHandle RpcAsyncCompleteCall$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcAsyncCompleteCall",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcAsyncCompleteCall$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcAsyncCompleteCall$MH() { return RpcAsyncCompleteCall$MH_; }

    static final FunctionDescriptor RpcAsyncAbortCall$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcAsyncAbortCall$FUNC() { return RpcAsyncAbortCall$FUNC_; }

    static final MethodHandle RpcAsyncAbortCall$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcAsyncAbortCall",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        RpcAsyncAbortCall$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcAsyncAbortCall$MH() { return RpcAsyncAbortCall$MH_; }

    static final FunctionDescriptor RpcAsyncCancelCall$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcAsyncCancelCall$FUNC() { return RpcAsyncCancelCall$FUNC_; }

    static final MethodHandle RpcAsyncCancelCall$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcAsyncCancelCall",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        RpcAsyncCancelCall$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcAsyncCancelCall$MH() { return RpcAsyncCancelCall$MH_; }

    static final int eeptAnsiString() { return (int)1L; }

    static final int eeptUnicodeString() { return (int)2L; }

    static final int eeptLongVal() { return (int)3L; }

    static final int eeptShortVal() { return (int)4L; }

    static final int eeptPointerVal() { return (int)5L; }

    static final int eeptNone() { return (int)6L; }

    static final int eeptBinary() { return (int)7L; }

    static final MemoryLayout tagBinaryParam$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("Buffer"),
        C_SHORT.withName("Size"),
        MemoryLayout.ofPaddingBits(48)
    ).withName("tagBinaryParam");
    static final jdk.incubator.foreign.MemoryLayout tagBinaryParam$struct$LAYOUT() { return tagBinaryParam$struct$LAYOUT_; }

    static final MemoryLayout tagBinaryParam$Buffer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagBinaryParam$Buffer$LAYOUT() { return tagBinaryParam$Buffer$LAYOUT_; }

    static final VarHandle tagBinaryParam$Buffer$VH_ = MemoryHandles.asAddressVarHandle(tagBinaryParam$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Buffer")));
    static final java.lang.invoke.VarHandle tagBinaryParam$Buffer$VH() { return tagBinaryParam$Buffer$VH_; }

    static final MemoryLayout tagBinaryParam$Size$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagBinaryParam$Size$LAYOUT() { return tagBinaryParam$Size$LAYOUT_; }

    static final VarHandle tagBinaryParam$Size$VH_ = tagBinaryParam$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle tagBinaryParam$Size$VH() { return tagBinaryParam$Size$VH_; }

    static final MemoryLayout tagRPC_EE_INFO_PARAM$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("ParameterType"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_POINTER.withName("AnsiString"),
            C_POINTER.withName("UnicodeString"),
            C_LONG.withName("LVal"),
            C_SHORT.withName("SVal"),
            C_LONGLONG.withName("PVal"),
            MemoryLayout.ofStruct(
                C_POINTER.withName("Buffer"),
                C_SHORT.withName("Size"),
                MemoryLayout.ofPaddingBits(48)
            ).withName("BVal")
        ).withName("u")
    ).withName("tagRPC_EE_INFO_PARAM");
    static final jdk.incubator.foreign.MemoryLayout tagRPC_EE_INFO_PARAM$struct$LAYOUT() { return tagRPC_EE_INFO_PARAM$struct$LAYOUT_; }

    static final MemoryLayout tagRPC_EE_INFO_PARAM$ParameterType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_EE_INFO_PARAM$ParameterType$LAYOUT() { return tagRPC_EE_INFO_PARAM$ParameterType$LAYOUT_; }

    static final VarHandle tagRPC_EE_INFO_PARAM$ParameterType$VH_ = tagRPC_EE_INFO_PARAM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ParameterType"));
    static final java.lang.invoke.VarHandle tagRPC_EE_INFO_PARAM$ParameterType$VH() { return tagRPC_EE_INFO_PARAM$ParameterType$VH_; }

    static final MemoryLayout tagRPC_EE_INFO_PARAM$u$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_POINTER.withName("AnsiString"),
        C_POINTER.withName("UnicodeString"),
        C_LONG.withName("LVal"),
        C_SHORT.withName("SVal"),
        C_LONGLONG.withName("PVal"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("Buffer"),
            C_SHORT.withName("Size"),
            MemoryLayout.ofPaddingBits(48)
        ).withName("BVal")
    );
    static final jdk.incubator.foreign.MemoryLayout tagRPC_EE_INFO_PARAM$u$union$LAYOUT() { return tagRPC_EE_INFO_PARAM$u$union$LAYOUT_; }

    static final MemoryLayout tagRPC_EE_INFO_PARAM$u$AnsiString$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_EE_INFO_PARAM$u$AnsiString$LAYOUT() { return tagRPC_EE_INFO_PARAM$u$AnsiString$LAYOUT_; }

    static final VarHandle tagRPC_EE_INFO_PARAM$u$AnsiString$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_EE_INFO_PARAM$u$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AnsiString")));
    static final java.lang.invoke.VarHandle tagRPC_EE_INFO_PARAM$u$AnsiString$VH() { return tagRPC_EE_INFO_PARAM$u$AnsiString$VH_; }

    static final MemoryLayout tagRPC_EE_INFO_PARAM$u$UnicodeString$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_EE_INFO_PARAM$u$UnicodeString$LAYOUT() { return tagRPC_EE_INFO_PARAM$u$UnicodeString$LAYOUT_; }

    static final VarHandle tagRPC_EE_INFO_PARAM$u$UnicodeString$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_EE_INFO_PARAM$u$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("UnicodeString")));
    static final java.lang.invoke.VarHandle tagRPC_EE_INFO_PARAM$u$UnicodeString$VH() { return tagRPC_EE_INFO_PARAM$u$UnicodeString$VH_; }

    static final MemoryLayout tagRPC_EE_INFO_PARAM$u$LVal$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_EE_INFO_PARAM$u$LVal$LAYOUT() { return tagRPC_EE_INFO_PARAM$u$LVal$LAYOUT_; }

    static final VarHandle tagRPC_EE_INFO_PARAM$u$LVal$VH_ = tagRPC_EE_INFO_PARAM$u$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LVal"));
    static final java.lang.invoke.VarHandle tagRPC_EE_INFO_PARAM$u$LVal$VH() { return tagRPC_EE_INFO_PARAM$u$LVal$VH_; }

    static final MemoryLayout tagRPC_EE_INFO_PARAM$u$SVal$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_EE_INFO_PARAM$u$SVal$LAYOUT() { return tagRPC_EE_INFO_PARAM$u$SVal$LAYOUT_; }

    static final VarHandle tagRPC_EE_INFO_PARAM$u$SVal$VH_ = tagRPC_EE_INFO_PARAM$u$union$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("SVal"));
    static final java.lang.invoke.VarHandle tagRPC_EE_INFO_PARAM$u$SVal$VH() { return tagRPC_EE_INFO_PARAM$u$SVal$VH_; }

    static final MemoryLayout tagRPC_EE_INFO_PARAM$u$PVal$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_EE_INFO_PARAM$u$PVal$LAYOUT() { return tagRPC_EE_INFO_PARAM$u$PVal$LAYOUT_; }

    static final VarHandle tagRPC_EE_INFO_PARAM$u$PVal$VH_ = tagRPC_EE_INFO_PARAM$u$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("PVal"));
    static final java.lang.invoke.VarHandle tagRPC_EE_INFO_PARAM$u$PVal$VH() { return tagRPC_EE_INFO_PARAM$u$PVal$VH_; }

    static final MemoryLayout tagRPC_EXTENDED_ERROR_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ComputerName"),
        C_LONG.withName("ProcessID"),
        MemoryLayout.ofUnion(
            MemoryLayout.ofStruct(
                C_SHORT.withName("wYear"),
                C_SHORT.withName("wMonth"),
                C_SHORT.withName("wDayOfWeek"),
                C_SHORT.withName("wDay"),
                C_SHORT.withName("wHour"),
                C_SHORT.withName("wMinute"),
                C_SHORT.withName("wSecond"),
                C_SHORT.withName("wMilliseconds")
            ).withName("SystemTime"),
            MemoryLayout.ofStruct(
                C_LONG.withName("dwLowDateTime"),
                C_LONG.withName("dwHighDateTime")
            ).withName("FileTime")
        ).withName("u"),
        C_LONG.withName("GeneratingComponent"),
        C_LONG.withName("Status"),
        C_SHORT.withName("DetectionLocation"),
        C_SHORT.withName("Flags"),
        C_INT.withName("NumberOfParameters"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofSequence(4, MemoryLayout.ofStruct(
            C_INT.withName("ParameterType"),
            MemoryLayout.ofPaddingBits(32),
            MemoryLayout.ofUnion(
                C_POINTER.withName("AnsiString"),
                C_POINTER.withName("UnicodeString"),
                C_LONG.withName("LVal"),
                C_SHORT.withName("SVal"),
                C_LONGLONG.withName("PVal"),
                MemoryLayout.ofStruct(
                    C_POINTER.withName("Buffer"),
                    C_SHORT.withName("Size"),
                    MemoryLayout.ofPaddingBits(48)
                ).withName("BVal")
            ).withName("u")
        ).withName("tagRPC_EE_INFO_PARAM")).withName("Parameters")
    ).withName("tagRPC_EXTENDED_ERROR_INFO");
    static final jdk.incubator.foreign.MemoryLayout tagRPC_EXTENDED_ERROR_INFO$struct$LAYOUT() { return tagRPC_EXTENDED_ERROR_INFO$struct$LAYOUT_; }

    static final MemoryLayout tagRPC_EXTENDED_ERROR_INFO$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_EXTENDED_ERROR_INFO$Version$LAYOUT() { return tagRPC_EXTENDED_ERROR_INFO$Version$LAYOUT_; }

    static final VarHandle tagRPC_EXTENDED_ERROR_INFO$Version$VH_ = tagRPC_EXTENDED_ERROR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle tagRPC_EXTENDED_ERROR_INFO$Version$VH() { return tagRPC_EXTENDED_ERROR_INFO$Version$VH_; }

    static final MemoryLayout tagRPC_EXTENDED_ERROR_INFO$ComputerName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_EXTENDED_ERROR_INFO$ComputerName$LAYOUT() { return tagRPC_EXTENDED_ERROR_INFO$ComputerName$LAYOUT_; }

    static final VarHandle tagRPC_EXTENDED_ERROR_INFO$ComputerName$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_EXTENDED_ERROR_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ComputerName")));
    static final java.lang.invoke.VarHandle tagRPC_EXTENDED_ERROR_INFO$ComputerName$VH() { return tagRPC_EXTENDED_ERROR_INFO$ComputerName$VH_; }

    static final MemoryLayout tagRPC_EXTENDED_ERROR_INFO$ProcessID$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_EXTENDED_ERROR_INFO$ProcessID$LAYOUT() { return tagRPC_EXTENDED_ERROR_INFO$ProcessID$LAYOUT_; }

    static final VarHandle tagRPC_EXTENDED_ERROR_INFO$ProcessID$VH_ = tagRPC_EXTENDED_ERROR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProcessID"));
    static final java.lang.invoke.VarHandle tagRPC_EXTENDED_ERROR_INFO$ProcessID$VH() { return tagRPC_EXTENDED_ERROR_INFO$ProcessID$VH_; }

    static final MemoryLayout tagRPC_EXTENDED_ERROR_INFO$u$union$LAYOUT_ = MemoryLayout.ofUnion(
        MemoryLayout.ofStruct(
            C_SHORT.withName("wYear"),
            C_SHORT.withName("wMonth"),
            C_SHORT.withName("wDayOfWeek"),
            C_SHORT.withName("wDay"),
            C_SHORT.withName("wHour"),
            C_SHORT.withName("wMinute"),
            C_SHORT.withName("wSecond"),
            C_SHORT.withName("wMilliseconds")
        ).withName("SystemTime"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("FileTime")
    );
    static final jdk.incubator.foreign.MemoryLayout tagRPC_EXTENDED_ERROR_INFO$u$union$LAYOUT() { return tagRPC_EXTENDED_ERROR_INFO$u$union$LAYOUT_; }

    static final MemoryLayout tagRPC_EXTENDED_ERROR_INFO$GeneratingComponent$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_EXTENDED_ERROR_INFO$GeneratingComponent$LAYOUT() { return tagRPC_EXTENDED_ERROR_INFO$GeneratingComponent$LAYOUT_; }

    static final VarHandle tagRPC_EXTENDED_ERROR_INFO$GeneratingComponent$VH_ = tagRPC_EXTENDED_ERROR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GeneratingComponent"));
    static final java.lang.invoke.VarHandle tagRPC_EXTENDED_ERROR_INFO$GeneratingComponent$VH() { return tagRPC_EXTENDED_ERROR_INFO$GeneratingComponent$VH_; }

    static final MemoryLayout tagRPC_EXTENDED_ERROR_INFO$Status$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_EXTENDED_ERROR_INFO$Status$LAYOUT() { return tagRPC_EXTENDED_ERROR_INFO$Status$LAYOUT_; }

    static final VarHandle tagRPC_EXTENDED_ERROR_INFO$Status$VH_ = tagRPC_EXTENDED_ERROR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Status"));
    static final java.lang.invoke.VarHandle tagRPC_EXTENDED_ERROR_INFO$Status$VH() { return tagRPC_EXTENDED_ERROR_INFO$Status$VH_; }

    static final MemoryLayout tagRPC_EXTENDED_ERROR_INFO$DetectionLocation$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_EXTENDED_ERROR_INFO$DetectionLocation$LAYOUT() { return tagRPC_EXTENDED_ERROR_INFO$DetectionLocation$LAYOUT_; }

    static final VarHandle tagRPC_EXTENDED_ERROR_INFO$DetectionLocation$VH_ = tagRPC_EXTENDED_ERROR_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("DetectionLocation"));
    static final java.lang.invoke.VarHandle tagRPC_EXTENDED_ERROR_INFO$DetectionLocation$VH() { return tagRPC_EXTENDED_ERROR_INFO$DetectionLocation$VH_; }

    static final MemoryLayout tagRPC_EXTENDED_ERROR_INFO$Flags$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_EXTENDED_ERROR_INFO$Flags$LAYOUT() { return tagRPC_EXTENDED_ERROR_INFO$Flags$LAYOUT_; }

    static final VarHandle tagRPC_EXTENDED_ERROR_INFO$Flags$VH_ = tagRPC_EXTENDED_ERROR_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle tagRPC_EXTENDED_ERROR_INFO$Flags$VH() { return tagRPC_EXTENDED_ERROR_INFO$Flags$VH_; }

    static final MemoryLayout tagRPC_EXTENDED_ERROR_INFO$NumberOfParameters$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_EXTENDED_ERROR_INFO$NumberOfParameters$LAYOUT() { return tagRPC_EXTENDED_ERROR_INFO$NumberOfParameters$LAYOUT_; }

    static final VarHandle tagRPC_EXTENDED_ERROR_INFO$NumberOfParameters$VH_ = tagRPC_EXTENDED_ERROR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfParameters"));
    static final java.lang.invoke.VarHandle tagRPC_EXTENDED_ERROR_INFO$NumberOfParameters$VH() { return tagRPC_EXTENDED_ERROR_INFO$NumberOfParameters$VH_; }

    static final MemoryLayout tagRPC_ERROR_ENUM_HANDLE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Signature"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("CurrentPos"),
        C_POINTER.withName("Head")
    ).withName("tagRPC_ERROR_ENUM_HANDLE");
    static final jdk.incubator.foreign.MemoryLayout tagRPC_ERROR_ENUM_HANDLE$struct$LAYOUT() { return tagRPC_ERROR_ENUM_HANDLE$struct$LAYOUT_; }

    static final MemoryLayout tagRPC_ERROR_ENUM_HANDLE$Signature$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_ERROR_ENUM_HANDLE$Signature$LAYOUT() { return tagRPC_ERROR_ENUM_HANDLE$Signature$LAYOUT_; }

    static final VarHandle tagRPC_ERROR_ENUM_HANDLE$Signature$VH_ = tagRPC_ERROR_ENUM_HANDLE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Signature"));
    static final java.lang.invoke.VarHandle tagRPC_ERROR_ENUM_HANDLE$Signature$VH() { return tagRPC_ERROR_ENUM_HANDLE$Signature$VH_; }

    static final MemoryLayout tagRPC_ERROR_ENUM_HANDLE$CurrentPos$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_ERROR_ENUM_HANDLE$CurrentPos$LAYOUT() { return tagRPC_ERROR_ENUM_HANDLE$CurrentPos$LAYOUT_; }

    static final VarHandle tagRPC_ERROR_ENUM_HANDLE$CurrentPos$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_ERROR_ENUM_HANDLE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CurrentPos")));
    static final java.lang.invoke.VarHandle tagRPC_ERROR_ENUM_HANDLE$CurrentPos$VH() { return tagRPC_ERROR_ENUM_HANDLE$CurrentPos$VH_; }

    static final MemoryLayout tagRPC_ERROR_ENUM_HANDLE$Head$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_ERROR_ENUM_HANDLE$Head$LAYOUT() { return tagRPC_ERROR_ENUM_HANDLE$Head$LAYOUT_; }

    static final VarHandle tagRPC_ERROR_ENUM_HANDLE$Head$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_ERROR_ENUM_HANDLE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Head")));
    static final java.lang.invoke.VarHandle tagRPC_ERROR_ENUM_HANDLE$Head$VH() { return tagRPC_ERROR_ENUM_HANDLE$Head$VH_; }

    static final FunctionDescriptor RpcErrorStartEnumeration$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcErrorStartEnumeration$FUNC() { return RpcErrorStartEnumeration$FUNC_; }

    static final MethodHandle RpcErrorStartEnumeration$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcErrorStartEnumeration",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcErrorStartEnumeration$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcErrorStartEnumeration$MH() { return RpcErrorStartEnumeration$MH_; }

    static final FunctionDescriptor RpcErrorGetNextRecord$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcErrorGetNextRecord$FUNC() { return RpcErrorGetNextRecord$FUNC_; }

    static final MethodHandle RpcErrorGetNextRecord$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcErrorGetNextRecord",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcErrorGetNextRecord$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcErrorGetNextRecord$MH() { return RpcErrorGetNextRecord$MH_; }

    static final FunctionDescriptor RpcErrorEndEnumeration$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcErrorEndEnumeration$FUNC() { return RpcErrorEndEnumeration$FUNC_; }

    static final MethodHandle RpcErrorEndEnumeration$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcErrorEndEnumeration",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcErrorEndEnumeration$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcErrorEndEnumeration$MH() { return RpcErrorEndEnumeration$MH_; }

    static final FunctionDescriptor RpcErrorResetEnumeration$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcErrorResetEnumeration$FUNC() { return RpcErrorResetEnumeration$FUNC_; }

    static final MethodHandle RpcErrorResetEnumeration$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcErrorResetEnumeration",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcErrorResetEnumeration$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcErrorResetEnumeration$MH() { return RpcErrorResetEnumeration$MH_; }

    static final FunctionDescriptor RpcErrorGetNumberOfRecords$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcErrorGetNumberOfRecords$FUNC() { return RpcErrorGetNumberOfRecords$FUNC_; }

    static final MethodHandle RpcErrorGetNumberOfRecords$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcErrorGetNumberOfRecords",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcErrorGetNumberOfRecords$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcErrorGetNumberOfRecords$MH() { return RpcErrorGetNumberOfRecords$MH_; }

    static final FunctionDescriptor RpcErrorSaveErrorInfo$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcErrorSaveErrorInfo$FUNC() { return RpcErrorSaveErrorInfo$FUNC_; }

    static final MethodHandle RpcErrorSaveErrorInfo$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcErrorSaveErrorInfo",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcErrorSaveErrorInfo$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcErrorSaveErrorInfo$MH() { return RpcErrorSaveErrorInfo$MH_; }

    static final FunctionDescriptor RpcErrorLoadErrorInfo$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcErrorLoadErrorInfo$FUNC() { return RpcErrorLoadErrorInfo$FUNC_; }

    static final MethodHandle RpcErrorLoadErrorInfo$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcErrorLoadErrorInfo",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        RpcErrorLoadErrorInfo$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcErrorLoadErrorInfo$MH() { return RpcErrorLoadErrorInfo$MH_; }

    static final FunctionDescriptor RpcErrorAddRecord$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcErrorAddRecord$FUNC() { return RpcErrorAddRecord$FUNC_; }

    static final MethodHandle RpcErrorAddRecord$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcErrorAddRecord",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcErrorAddRecord$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcErrorAddRecord$MH() { return RpcErrorAddRecord$MH_; }

    static final FunctionDescriptor RpcErrorClearInformation$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor RpcErrorClearInformation$FUNC() { return RpcErrorClearInformation$FUNC_; }

    static final MethodHandle RpcErrorClearInformation$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcErrorClearInformation",
        "()V",
        RpcErrorClearInformation$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcErrorClearInformation$MH() { return RpcErrorClearInformation$MH_; }

    static final FunctionDescriptor RpcAsyncCleanupThread$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcAsyncCleanupThread$FUNC() { return RpcAsyncCleanupThread$FUNC_; }

    static final MethodHandle RpcAsyncCleanupThread$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcAsyncCleanupThread",
        "(I)I",
        RpcAsyncCleanupThread$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcAsyncCleanupThread$MH() { return RpcAsyncCleanupThread$MH_; }

    static final FunctionDescriptor RpcGetAuthorizationContextForClient$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER,
        MemoryLayout.ofStruct(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart")
        ).withName("_LUID"),
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcGetAuthorizationContextForClient$FUNC() { return RpcGetAuthorizationContextForClient$FUNC_; }

    static final MethodHandle RpcGetAuthorizationContextForClient$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcGetAuthorizationContextForClient",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcGetAuthorizationContextForClient$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcGetAuthorizationContextForClient$MH() { return RpcGetAuthorizationContextForClient$MH_; }

    static final FunctionDescriptor RpcFreeAuthorizationContext$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcFreeAuthorizationContext$FUNC() { return RpcFreeAuthorizationContext$FUNC_; }

    static final MethodHandle RpcFreeAuthorizationContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcFreeAuthorizationContext",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcFreeAuthorizationContext$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcFreeAuthorizationContext$MH() { return RpcFreeAuthorizationContext$MH_; }

    static final FunctionDescriptor RpcSsContextLockExclusive$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcSsContextLockExclusive$FUNC() { return RpcSsContextLockExclusive$FUNC_; }

    static final MethodHandle RpcSsContextLockExclusive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcSsContextLockExclusive",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcSsContextLockExclusive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcSsContextLockExclusive$MH() { return RpcSsContextLockExclusive$MH_; }

    static final FunctionDescriptor RpcSsContextLockShared$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcSsContextLockShared$FUNC() { return RpcSsContextLockShared$FUNC_; }

    static final MethodHandle RpcSsContextLockShared$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcSsContextLockShared",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcSsContextLockShared$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcSsContextLockShared$MH() { return RpcSsContextLockShared$MH_; }

    static final int rlafInvalid() { return (int)0L; }

    static final int rlafIPv4() { return (int)1L; }

    static final int rlafIPv6() { return (int)2L; }

    static final MemoryLayout _RPC_CALL_LOCAL_ADDRESS_V1$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Version"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("Buffer"),
        C_LONG.withName("BufferSize"),
        C_INT.withName("AddressFormat")
    ).withName("_RPC_CALL_LOCAL_ADDRESS_V1");
    static final jdk.incubator.foreign.MemoryLayout _RPC_CALL_LOCAL_ADDRESS_V1$struct$LAYOUT() { return _RPC_CALL_LOCAL_ADDRESS_V1$struct$LAYOUT_; }

    static final MemoryLayout _RPC_CALL_LOCAL_ADDRESS_V1$Version$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_CALL_LOCAL_ADDRESS_V1$Version$LAYOUT() { return _RPC_CALL_LOCAL_ADDRESS_V1$Version$LAYOUT_; }

    static final VarHandle _RPC_CALL_LOCAL_ADDRESS_V1$Version$VH_ = _RPC_CALL_LOCAL_ADDRESS_V1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _RPC_CALL_LOCAL_ADDRESS_V1$Version$VH() { return _RPC_CALL_LOCAL_ADDRESS_V1$Version$VH_; }

    static final MemoryLayout _RPC_CALL_LOCAL_ADDRESS_V1$Buffer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_CALL_LOCAL_ADDRESS_V1$Buffer$LAYOUT() { return _RPC_CALL_LOCAL_ADDRESS_V1$Buffer$LAYOUT_; }

    static final VarHandle _RPC_CALL_LOCAL_ADDRESS_V1$Buffer$VH_ = MemoryHandles.asAddressVarHandle(_RPC_CALL_LOCAL_ADDRESS_V1$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Buffer")));
    static final java.lang.invoke.VarHandle _RPC_CALL_LOCAL_ADDRESS_V1$Buffer$VH() { return _RPC_CALL_LOCAL_ADDRESS_V1$Buffer$VH_; }

    static final MemoryLayout _RPC_CALL_LOCAL_ADDRESS_V1$BufferSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_CALL_LOCAL_ADDRESS_V1$BufferSize$LAYOUT() { return _RPC_CALL_LOCAL_ADDRESS_V1$BufferSize$LAYOUT_; }

    static final VarHandle _RPC_CALL_LOCAL_ADDRESS_V1$BufferSize$VH_ = _RPC_CALL_LOCAL_ADDRESS_V1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BufferSize"));
    static final java.lang.invoke.VarHandle _RPC_CALL_LOCAL_ADDRESS_V1$BufferSize$VH() { return _RPC_CALL_LOCAL_ADDRESS_V1$BufferSize$VH_; }

    static final MemoryLayout _RPC_CALL_LOCAL_ADDRESS_V1$AddressFormat$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_CALL_LOCAL_ADDRESS_V1$AddressFormat$LAYOUT() { return _RPC_CALL_LOCAL_ADDRESS_V1$AddressFormat$LAYOUT_; }

    static final VarHandle _RPC_CALL_LOCAL_ADDRESS_V1$AddressFormat$VH_ = _RPC_CALL_LOCAL_ADDRESS_V1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AddressFormat"));
    static final java.lang.invoke.VarHandle _RPC_CALL_LOCAL_ADDRESS_V1$AddressFormat$VH() { return _RPC_CALL_LOCAL_ADDRESS_V1$AddressFormat$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Version"),
        C_LONG.withName("Flags"),
        C_LONG.withName("ServerPrincipalNameBufferLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ServerPrincipalName"),
        C_LONG.withName("ClientPrincipalNameBufferLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ClientPrincipalName"),
        C_LONG.withName("AuthenticationLevel"),
        C_LONG.withName("AuthenticationService"),
        C_INT.withName("NullSession"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagRPC_CALL_ATTRIBUTES_V1_W");
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_W$struct$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V1_W$struct$LAYOUT_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_W$Version$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_W$Version$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V1_W$Version$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V1_W$Version$VH_ = tagRPC_CALL_ATTRIBUTES_V1_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V1_W$Version$VH() { return tagRPC_CALL_ATTRIBUTES_V1_W$Version$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_W$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_W$Flags$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V1_W$Flags$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V1_W$Flags$VH_ = tagRPC_CALL_ATTRIBUTES_V1_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V1_W$Flags$VH() { return tagRPC_CALL_ATTRIBUTES_V1_W$Flags$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_W$ServerPrincipalNameBufferLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_W$ServerPrincipalNameBufferLength$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V1_W$ServerPrincipalNameBufferLength$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V1_W$ServerPrincipalNameBufferLength$VH_ = tagRPC_CALL_ATTRIBUTES_V1_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ServerPrincipalNameBufferLength"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V1_W$ServerPrincipalNameBufferLength$VH() { return tagRPC_CALL_ATTRIBUTES_V1_W$ServerPrincipalNameBufferLength$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_W$ServerPrincipalName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_W$ServerPrincipalName$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V1_W$ServerPrincipalName$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V1_W$ServerPrincipalName$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V1_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ServerPrincipalName")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V1_W$ServerPrincipalName$VH() { return tagRPC_CALL_ATTRIBUTES_V1_W$ServerPrincipalName$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_W$ClientPrincipalNameBufferLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_W$ClientPrincipalNameBufferLength$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V1_W$ClientPrincipalNameBufferLength$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V1_W$ClientPrincipalNameBufferLength$VH_ = tagRPC_CALL_ATTRIBUTES_V1_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ClientPrincipalNameBufferLength"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V1_W$ClientPrincipalNameBufferLength$VH() { return tagRPC_CALL_ATTRIBUTES_V1_W$ClientPrincipalNameBufferLength$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_W$ClientPrincipalName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_W$ClientPrincipalName$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V1_W$ClientPrincipalName$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V1_W$ClientPrincipalName$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V1_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ClientPrincipalName")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V1_W$ClientPrincipalName$VH() { return tagRPC_CALL_ATTRIBUTES_V1_W$ClientPrincipalName$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_W$AuthenticationLevel$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_W$AuthenticationLevel$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V1_W$AuthenticationLevel$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V1_W$AuthenticationLevel$VH_ = tagRPC_CALL_ATTRIBUTES_V1_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthenticationLevel"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V1_W$AuthenticationLevel$VH() { return tagRPC_CALL_ATTRIBUTES_V1_W$AuthenticationLevel$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_W$AuthenticationService$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_W$AuthenticationService$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V1_W$AuthenticationService$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V1_W$AuthenticationService$VH_ = tagRPC_CALL_ATTRIBUTES_V1_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthenticationService"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V1_W$AuthenticationService$VH() { return tagRPC_CALL_ATTRIBUTES_V1_W$AuthenticationService$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_W$NullSession$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_W$NullSession$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V1_W$NullSession$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V1_W$NullSession$VH_ = tagRPC_CALL_ATTRIBUTES_V1_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NullSession"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V1_W$NullSession$VH() { return tagRPC_CALL_ATTRIBUTES_V1_W$NullSession$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Version"),
        C_LONG.withName("Flags"),
        C_LONG.withName("ServerPrincipalNameBufferLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ServerPrincipalName"),
        C_LONG.withName("ClientPrincipalNameBufferLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ClientPrincipalName"),
        C_LONG.withName("AuthenticationLevel"),
        C_LONG.withName("AuthenticationService"),
        C_INT.withName("NullSession"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagRPC_CALL_ATTRIBUTES_V1_A");
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_A$struct$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V1_A$struct$LAYOUT_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_A$Version$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_A$Version$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V1_A$Version$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V1_A$Version$VH_ = tagRPC_CALL_ATTRIBUTES_V1_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V1_A$Version$VH() { return tagRPC_CALL_ATTRIBUTES_V1_A$Version$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_A$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_A$Flags$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V1_A$Flags$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V1_A$Flags$VH_ = tagRPC_CALL_ATTRIBUTES_V1_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V1_A$Flags$VH() { return tagRPC_CALL_ATTRIBUTES_V1_A$Flags$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_A$ServerPrincipalNameBufferLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_A$ServerPrincipalNameBufferLength$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V1_A$ServerPrincipalNameBufferLength$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V1_A$ServerPrincipalNameBufferLength$VH_ = tagRPC_CALL_ATTRIBUTES_V1_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ServerPrincipalNameBufferLength"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V1_A$ServerPrincipalNameBufferLength$VH() { return tagRPC_CALL_ATTRIBUTES_V1_A$ServerPrincipalNameBufferLength$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_A$ServerPrincipalName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_A$ServerPrincipalName$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V1_A$ServerPrincipalName$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V1_A$ServerPrincipalName$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V1_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ServerPrincipalName")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V1_A$ServerPrincipalName$VH() { return tagRPC_CALL_ATTRIBUTES_V1_A$ServerPrincipalName$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_A$ClientPrincipalNameBufferLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_A$ClientPrincipalNameBufferLength$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V1_A$ClientPrincipalNameBufferLength$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V1_A$ClientPrincipalNameBufferLength$VH_ = tagRPC_CALL_ATTRIBUTES_V1_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ClientPrincipalNameBufferLength"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V1_A$ClientPrincipalNameBufferLength$VH() { return tagRPC_CALL_ATTRIBUTES_V1_A$ClientPrincipalNameBufferLength$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_A$ClientPrincipalName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_A$ClientPrincipalName$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V1_A$ClientPrincipalName$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V1_A$ClientPrincipalName$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V1_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ClientPrincipalName")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V1_A$ClientPrincipalName$VH() { return tagRPC_CALL_ATTRIBUTES_V1_A$ClientPrincipalName$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_A$AuthenticationLevel$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_A$AuthenticationLevel$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V1_A$AuthenticationLevel$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V1_A$AuthenticationLevel$VH_ = tagRPC_CALL_ATTRIBUTES_V1_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthenticationLevel"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V1_A$AuthenticationLevel$VH() { return tagRPC_CALL_ATTRIBUTES_V1_A$AuthenticationLevel$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_A$AuthenticationService$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_A$AuthenticationService$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V1_A$AuthenticationService$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V1_A$AuthenticationService$VH_ = tagRPC_CALL_ATTRIBUTES_V1_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthenticationService"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V1_A$AuthenticationService$VH() { return tagRPC_CALL_ATTRIBUTES_V1_A$AuthenticationService$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_A$NullSession$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V1_A$NullSession$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V1_A$NullSession$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V1_A$NullSession$VH_ = tagRPC_CALL_ATTRIBUTES_V1_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NullSession"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V1_A$NullSession$VH() { return tagRPC_CALL_ATTRIBUTES_V1_A$NullSession$VH_; }

    static final int rctInvalid() { return (int)0L; }

    static final int rctNormal() { return (int)1L; }

    static final int rctTraining() { return (int)2L; }

    static final int rctGuaranteed() { return (int)3L; }

    static final int rcclInvalid() { return (int)0L; }

    static final int rcclLocal() { return (int)1L; }

    static final int rcclRemote() { return (int)2L; }

    static final int rcclClientUnknownLocality() { return (int)3L; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Version"),
        C_LONG.withName("Flags"),
        C_LONG.withName("ServerPrincipalNameBufferLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ServerPrincipalName"),
        C_LONG.withName("ClientPrincipalNameBufferLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ClientPrincipalName"),
        C_LONG.withName("AuthenticationLevel"),
        C_LONG.withName("AuthenticationService"),
        C_INT.withName("NullSession"),
        C_INT.withName("KernelModeCaller"),
        C_LONG.withName("ProtocolSequence"),
        C_INT.withName("IsClientLocal"),
        C_POINTER.withName("ClientPID"),
        C_LONG.withName("CallStatus"),
        C_INT.withName("CallType"),
        C_POINTER.withName("CallLocalAddress"),
        C_SHORT.withName("OpNum"),
        MemoryLayout.ofPaddingBits(16),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("InterfaceUuid"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagRPC_CALL_ATTRIBUTES_V2_W");
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$struct$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_W$struct$LAYOUT_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$Version$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$Version$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_W$Version$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$Version$VH_ = tagRPC_CALL_ATTRIBUTES_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$Version$VH() { return tagRPC_CALL_ATTRIBUTES_V2_W$Version$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$Flags$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_W$Flags$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$Flags$VH_ = tagRPC_CALL_ATTRIBUTES_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$Flags$VH() { return tagRPC_CALL_ATTRIBUTES_V2_W$Flags$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$ServerPrincipalNameBufferLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$ServerPrincipalNameBufferLength$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_W$ServerPrincipalNameBufferLength$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$ServerPrincipalNameBufferLength$VH_ = tagRPC_CALL_ATTRIBUTES_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ServerPrincipalNameBufferLength"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$ServerPrincipalNameBufferLength$VH() { return tagRPC_CALL_ATTRIBUTES_V2_W$ServerPrincipalNameBufferLength$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$ServerPrincipalName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$ServerPrincipalName$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_W$ServerPrincipalName$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$ServerPrincipalName$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V2_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ServerPrincipalName")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$ServerPrincipalName$VH() { return tagRPC_CALL_ATTRIBUTES_V2_W$ServerPrincipalName$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$ClientPrincipalNameBufferLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$ClientPrincipalNameBufferLength$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_W$ClientPrincipalNameBufferLength$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$ClientPrincipalNameBufferLength$VH_ = tagRPC_CALL_ATTRIBUTES_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ClientPrincipalNameBufferLength"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$ClientPrincipalNameBufferLength$VH() { return tagRPC_CALL_ATTRIBUTES_V2_W$ClientPrincipalNameBufferLength$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$ClientPrincipalName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$ClientPrincipalName$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_W$ClientPrincipalName$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$ClientPrincipalName$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V2_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ClientPrincipalName")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$ClientPrincipalName$VH() { return tagRPC_CALL_ATTRIBUTES_V2_W$ClientPrincipalName$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$AuthenticationLevel$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$AuthenticationLevel$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_W$AuthenticationLevel$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$AuthenticationLevel$VH_ = tagRPC_CALL_ATTRIBUTES_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthenticationLevel"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$AuthenticationLevel$VH() { return tagRPC_CALL_ATTRIBUTES_V2_W$AuthenticationLevel$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$AuthenticationService$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$AuthenticationService$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_W$AuthenticationService$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$AuthenticationService$VH_ = tagRPC_CALL_ATTRIBUTES_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthenticationService"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$AuthenticationService$VH() { return tagRPC_CALL_ATTRIBUTES_V2_W$AuthenticationService$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$NullSession$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$NullSession$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_W$NullSession$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$NullSession$VH_ = tagRPC_CALL_ATTRIBUTES_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NullSession"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$NullSession$VH() { return tagRPC_CALL_ATTRIBUTES_V2_W$NullSession$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$KernelModeCaller$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$KernelModeCaller$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_W$KernelModeCaller$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$KernelModeCaller$VH_ = tagRPC_CALL_ATTRIBUTES_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("KernelModeCaller"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$KernelModeCaller$VH() { return tagRPC_CALL_ATTRIBUTES_V2_W$KernelModeCaller$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$ProtocolSequence$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$ProtocolSequence$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_W$ProtocolSequence$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$ProtocolSequence$VH_ = tagRPC_CALL_ATTRIBUTES_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolSequence"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$ProtocolSequence$VH() { return tagRPC_CALL_ATTRIBUTES_V2_W$ProtocolSequence$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$IsClientLocal$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$IsClientLocal$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_W$IsClientLocal$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$IsClientLocal$VH_ = tagRPC_CALL_ATTRIBUTES_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IsClientLocal"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$IsClientLocal$VH() { return tagRPC_CALL_ATTRIBUTES_V2_W$IsClientLocal$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$ClientPID$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$ClientPID$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_W$ClientPID$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$ClientPID$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V2_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ClientPID")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$ClientPID$VH() { return tagRPC_CALL_ATTRIBUTES_V2_W$ClientPID$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$CallStatus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$CallStatus$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_W$CallStatus$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$CallStatus$VH_ = tagRPC_CALL_ATTRIBUTES_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CallStatus"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$CallStatus$VH() { return tagRPC_CALL_ATTRIBUTES_V2_W$CallStatus$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$CallType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$CallType$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_W$CallType$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$CallType$VH_ = tagRPC_CALL_ATTRIBUTES_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CallType"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$CallType$VH() { return tagRPC_CALL_ATTRIBUTES_V2_W$CallType$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$CallLocalAddress$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$CallLocalAddress$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_W$CallLocalAddress$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$CallLocalAddress$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V2_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CallLocalAddress")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$CallLocalAddress$VH() { return tagRPC_CALL_ATTRIBUTES_V2_W$CallLocalAddress$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$OpNum$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_W$OpNum$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_W$OpNum$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$OpNum$VH_ = tagRPC_CALL_ATTRIBUTES_V2_W$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("OpNum"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_W$OpNum$VH() { return tagRPC_CALL_ATTRIBUTES_V2_W$OpNum$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Version"),
        C_LONG.withName("Flags"),
        C_LONG.withName("ServerPrincipalNameBufferLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ServerPrincipalName"),
        C_LONG.withName("ClientPrincipalNameBufferLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ClientPrincipalName"),
        C_LONG.withName("AuthenticationLevel"),
        C_LONG.withName("AuthenticationService"),
        C_INT.withName("NullSession"),
        C_INT.withName("KernelModeCaller"),
        C_LONG.withName("ProtocolSequence"),
        C_LONG.withName("IsClientLocal"),
        C_POINTER.withName("ClientPID"),
        C_LONG.withName("CallStatus"),
        C_INT.withName("CallType"),
        C_POINTER.withName("CallLocalAddress"),
        C_SHORT.withName("OpNum"),
        MemoryLayout.ofPaddingBits(16),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("InterfaceUuid"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagRPC_CALL_ATTRIBUTES_V2_A");
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$struct$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_A$struct$LAYOUT_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$Version$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$Version$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_A$Version$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$Version$VH_ = tagRPC_CALL_ATTRIBUTES_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$Version$VH() { return tagRPC_CALL_ATTRIBUTES_V2_A$Version$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$Flags$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_A$Flags$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$Flags$VH_ = tagRPC_CALL_ATTRIBUTES_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$Flags$VH() { return tagRPC_CALL_ATTRIBUTES_V2_A$Flags$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$ServerPrincipalNameBufferLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$ServerPrincipalNameBufferLength$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_A$ServerPrincipalNameBufferLength$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$ServerPrincipalNameBufferLength$VH_ = tagRPC_CALL_ATTRIBUTES_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ServerPrincipalNameBufferLength"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$ServerPrincipalNameBufferLength$VH() { return tagRPC_CALL_ATTRIBUTES_V2_A$ServerPrincipalNameBufferLength$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$ServerPrincipalName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$ServerPrincipalName$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_A$ServerPrincipalName$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$ServerPrincipalName$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V2_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ServerPrincipalName")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$ServerPrincipalName$VH() { return tagRPC_CALL_ATTRIBUTES_V2_A$ServerPrincipalName$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$ClientPrincipalNameBufferLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$ClientPrincipalNameBufferLength$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_A$ClientPrincipalNameBufferLength$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$ClientPrincipalNameBufferLength$VH_ = tagRPC_CALL_ATTRIBUTES_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ClientPrincipalNameBufferLength"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$ClientPrincipalNameBufferLength$VH() { return tagRPC_CALL_ATTRIBUTES_V2_A$ClientPrincipalNameBufferLength$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$ClientPrincipalName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$ClientPrincipalName$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_A$ClientPrincipalName$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$ClientPrincipalName$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V2_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ClientPrincipalName")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$ClientPrincipalName$VH() { return tagRPC_CALL_ATTRIBUTES_V2_A$ClientPrincipalName$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$AuthenticationLevel$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$AuthenticationLevel$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_A$AuthenticationLevel$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$AuthenticationLevel$VH_ = tagRPC_CALL_ATTRIBUTES_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthenticationLevel"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$AuthenticationLevel$VH() { return tagRPC_CALL_ATTRIBUTES_V2_A$AuthenticationLevel$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$AuthenticationService$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$AuthenticationService$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_A$AuthenticationService$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$AuthenticationService$VH_ = tagRPC_CALL_ATTRIBUTES_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthenticationService"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$AuthenticationService$VH() { return tagRPC_CALL_ATTRIBUTES_V2_A$AuthenticationService$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$NullSession$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$NullSession$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_A$NullSession$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$NullSession$VH_ = tagRPC_CALL_ATTRIBUTES_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NullSession"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$NullSession$VH() { return tagRPC_CALL_ATTRIBUTES_V2_A$NullSession$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$KernelModeCaller$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$KernelModeCaller$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_A$KernelModeCaller$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$KernelModeCaller$VH_ = tagRPC_CALL_ATTRIBUTES_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("KernelModeCaller"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$KernelModeCaller$VH() { return tagRPC_CALL_ATTRIBUTES_V2_A$KernelModeCaller$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$ProtocolSequence$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$ProtocolSequence$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_A$ProtocolSequence$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$ProtocolSequence$VH_ = tagRPC_CALL_ATTRIBUTES_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolSequence"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$ProtocolSequence$VH() { return tagRPC_CALL_ATTRIBUTES_V2_A$ProtocolSequence$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$IsClientLocal$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$IsClientLocal$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_A$IsClientLocal$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$IsClientLocal$VH_ = tagRPC_CALL_ATTRIBUTES_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IsClientLocal"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$IsClientLocal$VH() { return tagRPC_CALL_ATTRIBUTES_V2_A$IsClientLocal$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$ClientPID$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$ClientPID$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_A$ClientPID$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$ClientPID$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V2_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ClientPID")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$ClientPID$VH() { return tagRPC_CALL_ATTRIBUTES_V2_A$ClientPID$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$CallStatus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$CallStatus$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_A$CallStatus$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$CallStatus$VH_ = tagRPC_CALL_ATTRIBUTES_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CallStatus"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$CallStatus$VH() { return tagRPC_CALL_ATTRIBUTES_V2_A$CallStatus$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$CallType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$CallType$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_A$CallType$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$CallType$VH_ = tagRPC_CALL_ATTRIBUTES_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CallType"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$CallType$VH() { return tagRPC_CALL_ATTRIBUTES_V2_A$CallType$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$CallLocalAddress$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$CallLocalAddress$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_A$CallLocalAddress$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$CallLocalAddress$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V2_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CallLocalAddress")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$CallLocalAddress$VH() { return tagRPC_CALL_ATTRIBUTES_V2_A$CallLocalAddress$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$OpNum$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V2_A$OpNum$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V2_A$OpNum$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$OpNum$VH_ = tagRPC_CALL_ATTRIBUTES_V2_A$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("OpNum"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V2_A$OpNum$VH() { return tagRPC_CALL_ATTRIBUTES_V2_A$OpNum$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Version"),
        C_LONG.withName("Flags"),
        C_LONG.withName("ServerPrincipalNameBufferLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ServerPrincipalName"),
        C_LONG.withName("ClientPrincipalNameBufferLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ClientPrincipalName"),
        C_LONG.withName("AuthenticationLevel"),
        C_LONG.withName("AuthenticationService"),
        C_INT.withName("NullSession"),
        C_INT.withName("KernelModeCaller"),
        C_LONG.withName("ProtocolSequence"),
        C_INT.withName("IsClientLocal"),
        C_POINTER.withName("ClientPID"),
        C_LONG.withName("CallStatus"),
        C_INT.withName("CallType"),
        C_POINTER.withName("CallLocalAddress"),
        C_SHORT.withName("OpNum"),
        MemoryLayout.ofPaddingBits(16),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("InterfaceUuid"),
        C_LONG.withName("ClientIdentifierBufferLength"),
        C_POINTER.withName("ClientIdentifier")
    ).withName("tagRPC_CALL_ATTRIBUTES_V3_W");
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$Version$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$Version$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_W$Version$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$Version$VH_ = tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$Version$VH() { return tagRPC_CALL_ATTRIBUTES_V3_W$Version$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$Flags$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_W$Flags$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$Flags$VH_ = tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$Flags$VH() { return tagRPC_CALL_ATTRIBUTES_V3_W$Flags$VH_; }

}

