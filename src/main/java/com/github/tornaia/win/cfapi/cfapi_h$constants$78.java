// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$78 extends cfapi_h$constants$77 {

    /* package-private */ cfapi_h$constants$78() {}
    static final MemoryLayout IStorageVtbl$EnumElements$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStorageVtbl$EnumElements$LAYOUT() { return IStorageVtbl$EnumElements$LAYOUT_; }

    static final VarHandle IStorageVtbl$EnumElements$VH_ = MemoryHandles.asAddressVarHandle(IStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EnumElements")));
    static final java.lang.invoke.VarHandle IStorageVtbl$EnumElements$VH() { return IStorageVtbl$EnumElements$VH_; }

    static final MemoryLayout IStorageVtbl$DestroyElement$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStorageVtbl$DestroyElement$LAYOUT() { return IStorageVtbl$DestroyElement$LAYOUT_; }

    static final VarHandle IStorageVtbl$DestroyElement$VH_ = MemoryHandles.asAddressVarHandle(IStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DestroyElement")));
    static final java.lang.invoke.VarHandle IStorageVtbl$DestroyElement$VH() { return IStorageVtbl$DestroyElement$VH_; }

    static final MemoryLayout IStorageVtbl$RenameElement$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStorageVtbl$RenameElement$LAYOUT() { return IStorageVtbl$RenameElement$LAYOUT_; }

    static final VarHandle IStorageVtbl$RenameElement$VH_ = MemoryHandles.asAddressVarHandle(IStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RenameElement")));
    static final java.lang.invoke.VarHandle IStorageVtbl$RenameElement$VH() { return IStorageVtbl$RenameElement$VH_; }

    static final MemoryLayout IStorageVtbl$SetElementTimes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStorageVtbl$SetElementTimes$LAYOUT() { return IStorageVtbl$SetElementTimes$LAYOUT_; }

    static final VarHandle IStorageVtbl$SetElementTimes$VH_ = MemoryHandles.asAddressVarHandle(IStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetElementTimes")));
    static final java.lang.invoke.VarHandle IStorageVtbl$SetElementTimes$VH() { return IStorageVtbl$SetElementTimes$VH_; }

    static final MemoryLayout IStorageVtbl$SetClass$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStorageVtbl$SetClass$LAYOUT() { return IStorageVtbl$SetClass$LAYOUT_; }

    static final VarHandle IStorageVtbl$SetClass$VH_ = MemoryHandles.asAddressVarHandle(IStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetClass")));
    static final java.lang.invoke.VarHandle IStorageVtbl$SetClass$VH() { return IStorageVtbl$SetClass$VH_; }

    static final MemoryLayout IStorageVtbl$SetStateBits$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStorageVtbl$SetStateBits$LAYOUT() { return IStorageVtbl$SetStateBits$LAYOUT_; }

    static final VarHandle IStorageVtbl$SetStateBits$VH_ = MemoryHandles.asAddressVarHandle(IStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetStateBits")));
    static final java.lang.invoke.VarHandle IStorageVtbl$SetStateBits$VH() { return IStorageVtbl$SetStateBits$VH_; }

    static final MemoryLayout IStorageVtbl$Stat$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStorageVtbl$Stat$LAYOUT() { return IStorageVtbl$Stat$LAYOUT_; }

    static final VarHandle IStorageVtbl$Stat$VH_ = MemoryHandles.asAddressVarHandle(IStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Stat")));
    static final java.lang.invoke.VarHandle IStorageVtbl$Stat$VH() { return IStorageVtbl$Stat$VH_; }

    static final MemoryLayout IStorage$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IStorage");
    static final jdk.incubator.foreign.MemoryLayout IStorage$struct$LAYOUT() { return IStorage$struct$LAYOUT_; }

    static final MemoryLayout IStorage$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStorage$lpVtbl$LAYOUT() { return IStorage$lpVtbl$LAYOUT_; }

    static final VarHandle IStorage$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IStorage$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IStorage$lpVtbl$VH() { return IStorage$lpVtbl$VH_; }

    static final FunctionDescriptor IStorage_RemoteOpenStream_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IStorage_RemoteOpenStream_Proxy$FUNC() { return IStorage_RemoteOpenStream_Proxy$FUNC_; }

    static final MethodHandle IStorage_RemoteOpenStream_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IStorage_RemoteOpenStream_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        IStorage_RemoteOpenStream_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IStorage_RemoteOpenStream_Proxy$MH() { return IStorage_RemoteOpenStream_Proxy$MH_; }

    static final FunctionDescriptor IStorage_RemoteOpenStream_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IStorage_RemoteOpenStream_Stub$FUNC() { return IStorage_RemoteOpenStream_Stub$FUNC_; }

    static final MethodHandle IStorage_RemoteOpenStream_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IStorage_RemoteOpenStream_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IStorage_RemoteOpenStream_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IStorage_RemoteOpenStream_Stub$MH() { return IStorage_RemoteOpenStream_Stub$MH_; }

    static final FunctionDescriptor IStorage_RemoteCopyTo_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IStorage_RemoteCopyTo_Proxy$FUNC() { return IStorage_RemoteCopyTo_Proxy$FUNC_; }

    static final MethodHandle IStorage_RemoteCopyTo_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IStorage_RemoteCopyTo_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IStorage_RemoteCopyTo_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IStorage_RemoteCopyTo_Proxy$MH() { return IStorage_RemoteCopyTo_Proxy$MH_; }

    static final FunctionDescriptor IStorage_RemoteCopyTo_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IStorage_RemoteCopyTo_Stub$FUNC() { return IStorage_RemoteCopyTo_Stub$FUNC_; }

    static final MethodHandle IStorage_RemoteCopyTo_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IStorage_RemoteCopyTo_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IStorage_RemoteCopyTo_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IStorage_RemoteCopyTo_Stub$MH() { return IStorage_RemoteCopyTo_Stub$MH_; }

    static final FunctionDescriptor IStorage_RemoteEnumElements_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IStorage_RemoteEnumElements_Proxy$FUNC() { return IStorage_RemoteEnumElements_Proxy$FUNC_; }

    static final MethodHandle IStorage_RemoteEnumElements_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IStorage_RemoteEnumElements_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        IStorage_RemoteEnumElements_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IStorage_RemoteEnumElements_Proxy$MH() { return IStorage_RemoteEnumElements_Proxy$MH_; }

    static final FunctionDescriptor IStorage_RemoteEnumElements_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IStorage_RemoteEnumElements_Stub$FUNC() { return IStorage_RemoteEnumElements_Stub$FUNC_; }

    static final MethodHandle IStorage_RemoteEnumElements_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IStorage_RemoteEnumElements_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IStorage_RemoteEnumElements_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IStorage_RemoteEnumElements_Stub$MH() { return IStorage_RemoteEnumElements_Stub$MH_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$VH() { return __MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0064_v0_0_c_ifspec", __MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$VH() { return __MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0064_v0_0_s_ifspec", __MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IPersistFile$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IPersistFile$LAYOUT() { return IID_IPersistFile$LAYOUT_; }

    static final MemorySegment IID_IPersistFile$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IPersistFile", IID_IPersistFile$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IPersistFile$SEGMENT() { return IID_IPersistFile$SEGMENT_; }

    static final MemoryLayout IPersistFileVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetClassID"),
        C_POINTER.withName("IsDirty"),
        C_POINTER.withName("Load"),
        C_POINTER.withName("Save"),
        C_POINTER.withName("SaveCompleted"),
        C_POINTER.withName("GetCurFile")
    ).withName("IPersistFileVtbl");
    static final jdk.incubator.foreign.MemoryLayout IPersistFileVtbl$struct$LAYOUT() { return IPersistFileVtbl$struct$LAYOUT_; }

    static final MemoryLayout IPersistFileVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistFileVtbl$QueryInterface$LAYOUT() { return IPersistFileVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IPersistFileVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IPersistFileVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IPersistFileVtbl$QueryInterface$VH() { return IPersistFileVtbl$QueryInterface$VH_; }

    static final MemoryLayout IPersistFileVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistFileVtbl$AddRef$LAYOUT() { return IPersistFileVtbl$AddRef$LAYOUT_; }

    static final VarHandle IPersistFileVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IPersistFileVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IPersistFileVtbl$AddRef$VH() { return IPersistFileVtbl$AddRef$VH_; }

    static final MemoryLayout IPersistFileVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistFileVtbl$Release$LAYOUT() { return IPersistFileVtbl$Release$LAYOUT_; }

    static final VarHandle IPersistFileVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IPersistFileVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IPersistFileVtbl$Release$VH() { return IPersistFileVtbl$Release$VH_; }

    static final MemoryLayout IPersistFileVtbl$GetClassID$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistFileVtbl$GetClassID$LAYOUT() { return IPersistFileVtbl$GetClassID$LAYOUT_; }

    static final VarHandle IPersistFileVtbl$GetClassID$VH_ = MemoryHandles.asAddressVarHandle(IPersistFileVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetClassID")));
    static final java.lang.invoke.VarHandle IPersistFileVtbl$GetClassID$VH() { return IPersistFileVtbl$GetClassID$VH_; }

    static final MemoryLayout IPersistFileVtbl$IsDirty$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistFileVtbl$IsDirty$LAYOUT() { return IPersistFileVtbl$IsDirty$LAYOUT_; }

    static final VarHandle IPersistFileVtbl$IsDirty$VH_ = MemoryHandles.asAddressVarHandle(IPersistFileVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IsDirty")));
    static final java.lang.invoke.VarHandle IPersistFileVtbl$IsDirty$VH() { return IPersistFileVtbl$IsDirty$VH_; }

    static final MemoryLayout IPersistFileVtbl$Load$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistFileVtbl$Load$LAYOUT() { return IPersistFileVtbl$Load$LAYOUT_; }

    static final VarHandle IPersistFileVtbl$Load$VH_ = MemoryHandles.asAddressVarHandle(IPersistFileVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Load")));
    static final java.lang.invoke.VarHandle IPersistFileVtbl$Load$VH() { return IPersistFileVtbl$Load$VH_; }

    static final MemoryLayout IPersistFileVtbl$Save$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistFileVtbl$Save$LAYOUT() { return IPersistFileVtbl$Save$LAYOUT_; }

    static final VarHandle IPersistFileVtbl$Save$VH_ = MemoryHandles.asAddressVarHandle(IPersistFileVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Save")));
    static final java.lang.invoke.VarHandle IPersistFileVtbl$Save$VH() { return IPersistFileVtbl$Save$VH_; }

    static final MemoryLayout IPersistFileVtbl$SaveCompleted$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistFileVtbl$SaveCompleted$LAYOUT() { return IPersistFileVtbl$SaveCompleted$LAYOUT_; }

    static final VarHandle IPersistFileVtbl$SaveCompleted$VH_ = MemoryHandles.asAddressVarHandle(IPersistFileVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SaveCompleted")));
    static final java.lang.invoke.VarHandle IPersistFileVtbl$SaveCompleted$VH() { return IPersistFileVtbl$SaveCompleted$VH_; }

    static final MemoryLayout IPersistFileVtbl$GetCurFile$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistFileVtbl$GetCurFile$LAYOUT() { return IPersistFileVtbl$GetCurFile$LAYOUT_; }

    static final VarHandle IPersistFileVtbl$GetCurFile$VH_ = MemoryHandles.asAddressVarHandle(IPersistFileVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetCurFile")));
    static final java.lang.invoke.VarHandle IPersistFileVtbl$GetCurFile$VH() { return IPersistFileVtbl$GetCurFile$VH_; }

    static final MemoryLayout IPersistFile$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IPersistFile");
    static final jdk.incubator.foreign.MemoryLayout IPersistFile$struct$LAYOUT() { return IPersistFile$struct$LAYOUT_; }

    static final MemoryLayout IPersistFile$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistFile$lpVtbl$LAYOUT() { return IPersistFile$lpVtbl$LAYOUT_; }

    static final VarHandle IPersistFile$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IPersistFile$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IPersistFile$lpVtbl$VH() { return IPersistFile$lpVtbl$VH_; }

    static final MemoryLayout IID_IPersistStorage$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IPersistStorage$LAYOUT() { return IID_IPersistStorage$LAYOUT_; }

    static final MemorySegment IID_IPersistStorage$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IPersistStorage", IID_IPersistStorage$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IPersistStorage$SEGMENT() { return IID_IPersistStorage$SEGMENT_; }

    static final MemoryLayout IPersistStorageVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetClassID"),
        C_POINTER.withName("IsDirty"),
        C_POINTER.withName("InitNew"),
        C_POINTER.withName("Load"),
        C_POINTER.withName("Save"),
        C_POINTER.withName("SaveCompleted"),
        C_POINTER.withName("HandsOffStorage")
    ).withName("IPersistStorageVtbl");
    static final jdk.incubator.foreign.MemoryLayout IPersistStorageVtbl$struct$LAYOUT() { return IPersistStorageVtbl$struct$LAYOUT_; }

    static final MemoryLayout IPersistStorageVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistStorageVtbl$QueryInterface$LAYOUT() { return IPersistStorageVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IPersistStorageVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IPersistStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IPersistStorageVtbl$QueryInterface$VH() { return IPersistStorageVtbl$QueryInterface$VH_; }

    static final MemoryLayout IPersistStorageVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistStorageVtbl$AddRef$LAYOUT() { return IPersistStorageVtbl$AddRef$LAYOUT_; }

    static final VarHandle IPersistStorageVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IPersistStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IPersistStorageVtbl$AddRef$VH() { return IPersistStorageVtbl$AddRef$VH_; }

    static final MemoryLayout IPersistStorageVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistStorageVtbl$Release$LAYOUT() { return IPersistStorageVtbl$Release$LAYOUT_; }

    static final VarHandle IPersistStorageVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IPersistStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IPersistStorageVtbl$Release$VH() { return IPersistStorageVtbl$Release$VH_; }

    static final MemoryLayout IPersistStorageVtbl$GetClassID$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistStorageVtbl$GetClassID$LAYOUT() { return IPersistStorageVtbl$GetClassID$LAYOUT_; }

    static final VarHandle IPersistStorageVtbl$GetClassID$VH_ = MemoryHandles.asAddressVarHandle(IPersistStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetClassID")));
    static final java.lang.invoke.VarHandle IPersistStorageVtbl$GetClassID$VH() { return IPersistStorageVtbl$GetClassID$VH_; }

    static final MemoryLayout IPersistStorageVtbl$IsDirty$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistStorageVtbl$IsDirty$LAYOUT() { return IPersistStorageVtbl$IsDirty$LAYOUT_; }

    static final VarHandle IPersistStorageVtbl$IsDirty$VH_ = MemoryHandles.asAddressVarHandle(IPersistStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IsDirty")));
    static final java.lang.invoke.VarHandle IPersistStorageVtbl$IsDirty$VH() { return IPersistStorageVtbl$IsDirty$VH_; }

    static final MemoryLayout IPersistStorageVtbl$InitNew$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistStorageVtbl$InitNew$LAYOUT() { return IPersistStorageVtbl$InitNew$LAYOUT_; }

    static final VarHandle IPersistStorageVtbl$InitNew$VH_ = MemoryHandles.asAddressVarHandle(IPersistStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("InitNew")));
    static final java.lang.invoke.VarHandle IPersistStorageVtbl$InitNew$VH() { return IPersistStorageVtbl$InitNew$VH_; }

    static final MemoryLayout IPersistStorageVtbl$Load$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistStorageVtbl$Load$LAYOUT() { return IPersistStorageVtbl$Load$LAYOUT_; }

    static final VarHandle IPersistStorageVtbl$Load$VH_ = MemoryHandles.asAddressVarHandle(IPersistStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Load")));
    static final java.lang.invoke.VarHandle IPersistStorageVtbl$Load$VH() { return IPersistStorageVtbl$Load$VH_; }

    static final MemoryLayout IPersistStorageVtbl$Save$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistStorageVtbl$Save$LAYOUT() { return IPersistStorageVtbl$Save$LAYOUT_; }

    static final VarHandle IPersistStorageVtbl$Save$VH_ = MemoryHandles.asAddressVarHandle(IPersistStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Save")));
    static final java.lang.invoke.VarHandle IPersistStorageVtbl$Save$VH() { return IPersistStorageVtbl$Save$VH_; }

    static final MemoryLayout IPersistStorageVtbl$SaveCompleted$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistStorageVtbl$SaveCompleted$LAYOUT() { return IPersistStorageVtbl$SaveCompleted$LAYOUT_; }

    static final VarHandle IPersistStorageVtbl$SaveCompleted$VH_ = MemoryHandles.asAddressVarHandle(IPersistStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SaveCompleted")));
    static final java.lang.invoke.VarHandle IPersistStorageVtbl$SaveCompleted$VH() { return IPersistStorageVtbl$SaveCompleted$VH_; }

    static final MemoryLayout IPersistStorageVtbl$HandsOffStorage$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistStorageVtbl$HandsOffStorage$LAYOUT() { return IPersistStorageVtbl$HandsOffStorage$LAYOUT_; }

    static final VarHandle IPersistStorageVtbl$HandsOffStorage$VH_ = MemoryHandles.asAddressVarHandle(IPersistStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("HandsOffStorage")));
    static final java.lang.invoke.VarHandle IPersistStorageVtbl$HandsOffStorage$VH() { return IPersistStorageVtbl$HandsOffStorage$VH_; }

    static final MemoryLayout IPersistStorage$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IPersistStorage");
    static final jdk.incubator.foreign.MemoryLayout IPersistStorage$struct$LAYOUT() { return IPersistStorage$struct$LAYOUT_; }

    static final MemoryLayout IPersistStorage$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPersistStorage$lpVtbl$LAYOUT() { return IPersistStorage$lpVtbl$LAYOUT_; }

    static final VarHandle IPersistStorage$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IPersistStorage$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IPersistStorage$lpVtbl$VH() { return IPersistStorage$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$VH() { return __MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0066_v0_0_c_ifspec", __MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$VH() { return __MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0066_v0_0_s_ifspec", __MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_ILockBytes$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_ILockBytes$LAYOUT() { return IID_ILockBytes$LAYOUT_; }

    static final MemorySegment IID_ILockBytes$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ILockBytes", IID_ILockBytes$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_ILockBytes$SEGMENT() { return IID_ILockBytes$SEGMENT_; }

    static final MemoryLayout ILockBytesVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("ReadAt"),
        C_POINTER.withName("WriteAt"),
        C_POINTER.withName("Flush"),
        C_POINTER.withName("SetSize"),
        C_POINTER.withName("LockRegion"),
        C_POINTER.withName("UnlockRegion"),
        C_POINTER.withName("Stat")
    ).withName("ILockBytesVtbl");
    static final jdk.incubator.foreign.MemoryLayout ILockBytesVtbl$struct$LAYOUT() { return ILockBytesVtbl$struct$LAYOUT_; }

    static final MemoryLayout ILockBytesVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ILockBytesVtbl$QueryInterface$LAYOUT() { return ILockBytesVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ILockBytesVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ILockBytesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle ILockBytesVtbl$QueryInterface$VH() { return ILockBytesVtbl$QueryInterface$VH_; }

    static final MemoryLayout ILockBytesVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ILockBytesVtbl$AddRef$LAYOUT() { return ILockBytesVtbl$AddRef$LAYOUT_; }

    static final VarHandle ILockBytesVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ILockBytesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle ILockBytesVtbl$AddRef$VH() { return ILockBytesVtbl$AddRef$VH_; }

    static final MemoryLayout ILockBytesVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ILockBytesVtbl$Release$LAYOUT() { return ILockBytesVtbl$Release$LAYOUT_; }

    static final VarHandle ILockBytesVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ILockBytesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle ILockBytesVtbl$Release$VH() { return ILockBytesVtbl$Release$VH_; }

    static final MemoryLayout ILockBytesVtbl$ReadAt$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ILockBytesVtbl$ReadAt$LAYOUT() { return ILockBytesVtbl$ReadAt$LAYOUT_; }

    static final VarHandle ILockBytesVtbl$ReadAt$VH_ = MemoryHandles.asAddressVarHandle(ILockBytesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReadAt")));
    static final java.lang.invoke.VarHandle ILockBytesVtbl$ReadAt$VH() { return ILockBytesVtbl$ReadAt$VH_; }

    static final MemoryLayout ILockBytesVtbl$WriteAt$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ILockBytesVtbl$WriteAt$LAYOUT() { return ILockBytesVtbl$WriteAt$LAYOUT_; }

    static final VarHandle ILockBytesVtbl$WriteAt$VH_ = MemoryHandles.asAddressVarHandle(ILockBytesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("WriteAt")));
    static final java.lang.invoke.VarHandle ILockBytesVtbl$WriteAt$VH() { return ILockBytesVtbl$WriteAt$VH_; }

    static final MemoryLayout ILockBytesVtbl$Flush$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ILockBytesVtbl$Flush$LAYOUT() { return ILockBytesVtbl$Flush$LAYOUT_; }

    static final VarHandle ILockBytesVtbl$Flush$VH_ = MemoryHandles.asAddressVarHandle(ILockBytesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Flush")));
    static final java.lang.invoke.VarHandle ILockBytesVtbl$Flush$VH() { return ILockBytesVtbl$Flush$VH_; }

    static final MemoryLayout ILockBytesVtbl$SetSize$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ILockBytesVtbl$SetSize$LAYOUT() { return ILockBytesVtbl$SetSize$LAYOUT_; }

    static final VarHandle ILockBytesVtbl$SetSize$VH_ = MemoryHandles.asAddressVarHandle(ILockBytesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetSize")));
    static final java.lang.invoke.VarHandle ILockBytesVtbl$SetSize$VH() { return ILockBytesVtbl$SetSize$VH_; }

    static final MemoryLayout ILockBytesVtbl$LockRegion$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ILockBytesVtbl$LockRegion$LAYOUT() { return ILockBytesVtbl$LockRegion$LAYOUT_; }

    static final VarHandle ILockBytesVtbl$LockRegion$VH_ = MemoryHandles.asAddressVarHandle(ILockBytesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LockRegion")));
    static final java.lang.invoke.VarHandle ILockBytesVtbl$LockRegion$VH() { return ILockBytesVtbl$LockRegion$VH_; }

    static final MemoryLayout ILockBytesVtbl$UnlockRegion$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ILockBytesVtbl$UnlockRegion$LAYOUT() { return ILockBytesVtbl$UnlockRegion$LAYOUT_; }

    static final VarHandle ILockBytesVtbl$UnlockRegion$VH_ = MemoryHandles.asAddressVarHandle(ILockBytesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("UnlockRegion")));
    static final java.lang.invoke.VarHandle ILockBytesVtbl$UnlockRegion$VH() { return ILockBytesVtbl$UnlockRegion$VH_; }

    static final MemoryLayout ILockBytesVtbl$Stat$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ILockBytesVtbl$Stat$LAYOUT() { return ILockBytesVtbl$Stat$LAYOUT_; }

    static final VarHandle ILockBytesVtbl$Stat$VH_ = MemoryHandles.asAddressVarHandle(ILockBytesVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Stat")));
    static final java.lang.invoke.VarHandle ILockBytesVtbl$Stat$VH() { return ILockBytesVtbl$Stat$VH_; }

    static final MemoryLayout ILockBytes$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ILockBytes");
    static final jdk.incubator.foreign.MemoryLayout ILockBytes$struct$LAYOUT() { return ILockBytes$struct$LAYOUT_; }

    static final MemoryLayout ILockBytes$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ILockBytes$lpVtbl$LAYOUT() { return ILockBytes$lpVtbl$LAYOUT_; }

    static final VarHandle ILockBytes$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ILockBytes$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle ILockBytes$lpVtbl$VH() { return ILockBytes$lpVtbl$VH_; }

    static final FunctionDescriptor ILockBytes_RemoteReadAt_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("_ULARGE_INTEGER"),
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ILockBytes_RemoteReadAt_Proxy$FUNC() { return ILockBytes_RemoteReadAt_Proxy$FUNC_; }

    static final MethodHandle ILockBytes_RemoteReadAt_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ILockBytes_RemoteReadAt_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ILockBytes_RemoteReadAt_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ILockBytes_RemoteReadAt_Proxy$MH() { return ILockBytes_RemoteReadAt_Proxy$MH_; }

    static final FunctionDescriptor ILockBytes_RemoteReadAt_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ILockBytes_RemoteReadAt_Stub$FUNC() { return ILockBytes_RemoteReadAt_Stub$FUNC_; }

    static final MethodHandle ILockBytes_RemoteReadAt_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ILockBytes_RemoteReadAt_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        ILockBytes_RemoteReadAt_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ILockBytes_RemoteReadAt_Stub$MH() { return ILockBytes_RemoteReadAt_Stub$MH_; }

    static final FunctionDescriptor ILockBytes_RemoteWriteAt_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("_ULARGE_INTEGER"),
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ILockBytes_RemoteWriteAt_Proxy$FUNC() { return ILockBytes_RemoteWriteAt_Proxy$FUNC_; }

    static final MethodHandle ILockBytes_RemoteWriteAt_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ILockBytes_RemoteWriteAt_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ILockBytes_RemoteWriteAt_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ILockBytes_RemoteWriteAt_Proxy$MH() { return ILockBytes_RemoteWriteAt_Proxy$MH_; }

    static final FunctionDescriptor ILockBytes_RemoteWriteAt_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ILockBytes_RemoteWriteAt_Stub$FUNC() { return ILockBytes_RemoteWriteAt_Stub$FUNC_; }

    static final MethodHandle ILockBytes_RemoteWriteAt_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ILockBytes_RemoteWriteAt_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        ILockBytes_RemoteWriteAt_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ILockBytes_RemoteWriteAt_Stub$MH() { return ILockBytes_RemoteWriteAt_Stub$MH_; }

    static final MemoryLayout tagDVTARGETDEVICE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("tdSize"),
        C_SHORT.withName("tdDriverNameOffset"),
        C_SHORT.withName("tdDeviceNameOffset"),
        C_SHORT.withName("tdPortNameOffset"),
        C_SHORT.withName("tdExtDevmodeOffset"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("tdData"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("tagDVTARGETDEVICE");
    static final jdk.incubator.foreign.MemoryLayout tagDVTARGETDEVICE$struct$LAYOUT() { return tagDVTARGETDEVICE$struct$LAYOUT_; }

    static final MemoryLayout tagDVTARGETDEVICE$tdSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagDVTARGETDEVICE$tdSize$LAYOUT() { return tagDVTARGETDEVICE$tdSize$LAYOUT_; }

    static final VarHandle tagDVTARGETDEVICE$tdSize$VH_ = tagDVTARGETDEVICE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tdSize"));
    static final java.lang.invoke.VarHandle tagDVTARGETDEVICE$tdSize$VH() { return tagDVTARGETDEVICE$tdSize$VH_; }

    static final MemoryLayout tagDVTARGETDEVICE$tdDriverNameOffset$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagDVTARGETDEVICE$tdDriverNameOffset$LAYOUT() { return tagDVTARGETDEVICE$tdDriverNameOffset$LAYOUT_; }

    static final VarHandle tagDVTARGETDEVICE$tdDriverNameOffset$VH_ = tagDVTARGETDEVICE$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("tdDriverNameOffset"));
    static final java.lang.invoke.VarHandle tagDVTARGETDEVICE$tdDriverNameOffset$VH() { return tagDVTARGETDEVICE$tdDriverNameOffset$VH_; }

    static final MemoryLayout tagDVTARGETDEVICE$tdDeviceNameOffset$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagDVTARGETDEVICE$tdDeviceNameOffset$LAYOUT() { return tagDVTARGETDEVICE$tdDeviceNameOffset$LAYOUT_; }

    static final VarHandle tagDVTARGETDEVICE$tdDeviceNameOffset$VH_ = tagDVTARGETDEVICE$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("tdDeviceNameOffset"));
    static final java.lang.invoke.VarHandle tagDVTARGETDEVICE$tdDeviceNameOffset$VH() { return tagDVTARGETDEVICE$tdDeviceNameOffset$VH_; }

    static final MemoryLayout tagDVTARGETDEVICE$tdPortNameOffset$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagDVTARGETDEVICE$tdPortNameOffset$LAYOUT() { return tagDVTARGETDEVICE$tdPortNameOffset$LAYOUT_; }

    static final VarHandle tagDVTARGETDEVICE$tdPortNameOffset$VH_ = tagDVTARGETDEVICE$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("tdPortNameOffset"));
    static final java.lang.invoke.VarHandle tagDVTARGETDEVICE$tdPortNameOffset$VH() { return tagDVTARGETDEVICE$tdPortNameOffset$VH_; }

    static final MemoryLayout tagDVTARGETDEVICE$tdExtDevmodeOffset$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagDVTARGETDEVICE$tdExtDevmodeOffset$LAYOUT() { return tagDVTARGETDEVICE$tdExtDevmodeOffset$LAYOUT_; }

    static final VarHandle tagDVTARGETDEVICE$tdExtDevmodeOffset$VH_ = tagDVTARGETDEVICE$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("tdExtDevmodeOffset"));
    static final java.lang.invoke.VarHandle tagDVTARGETDEVICE$tdExtDevmodeOffset$VH() { return tagDVTARGETDEVICE$tdExtDevmodeOffset$VH_; }

    static final MemoryLayout tagFORMATETC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("cfFormat"),
        MemoryLayout.ofPaddingBits(48),
        C_POINTER.withName("ptd"),
        C_LONG.withName("dwAspect"),
        C_LONG.withName("lindex"),
        C_LONG.withName("tymed"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagFORMATETC");
    static final jdk.incubator.foreign.MemoryLayout tagFORMATETC$struct$LAYOUT() { return tagFORMATETC$struct$LAYOUT_; }

    static final MemoryLayout tagFORMATETC$cfFormat$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagFORMATETC$cfFormat$LAYOUT() { return tagFORMATETC$cfFormat$LAYOUT_; }

    static final VarHandle tagFORMATETC$cfFormat$VH_ = tagFORMATETC$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cfFormat"));
    static final java.lang.invoke.VarHandle tagFORMATETC$cfFormat$VH() { return tagFORMATETC$cfFormat$VH_; }

    static final MemoryLayout tagFORMATETC$ptd$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagFORMATETC$ptd$LAYOUT() { return tagFORMATETC$ptd$LAYOUT_; }

    static final VarHandle tagFORMATETC$ptd$VH_ = MemoryHandles.asAddressVarHandle(tagFORMATETC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ptd")));
    static final java.lang.invoke.VarHandle tagFORMATETC$ptd$VH() { return tagFORMATETC$ptd$VH_; }

    static final MemoryLayout tagFORMATETC$dwAspect$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagFORMATETC$dwAspect$LAYOUT() { return tagFORMATETC$dwAspect$LAYOUT_; }

    static final VarHandle tagFORMATETC$dwAspect$VH_ = tagFORMATETC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwAspect"));
    static final java.lang.invoke.VarHandle tagFORMATETC$dwAspect$VH() { return tagFORMATETC$dwAspect$VH_; }

    static final MemoryLayout tagFORMATETC$lindex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagFORMATETC$lindex$LAYOUT() { return tagFORMATETC$lindex$LAYOUT_; }

    static final VarHandle tagFORMATETC$lindex$VH_ = tagFORMATETC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lindex"));
    static final java.lang.invoke.VarHandle tagFORMATETC$lindex$VH() { return tagFORMATETC$lindex$VH_; }

    static final MemoryLayout tagFORMATETC$tymed$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagFORMATETC$tymed$LAYOUT() { return tagFORMATETC$tymed$LAYOUT_; }

    static final VarHandle tagFORMATETC$tymed$VH_ = tagFORMATETC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tymed"));
    static final java.lang.invoke.VarHandle tagFORMATETC$tymed$VH() { return tagFORMATETC$tymed$VH_; }

    static final MemoryLayout IID_IEnumFORMATETC$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IEnumFORMATETC$LAYOUT() { return IID_IEnumFORMATETC$LAYOUT_; }

    static final MemorySegment IID_IEnumFORMATETC$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IEnumFORMATETC", IID_IEnumFORMATETC$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IEnumFORMATETC$SEGMENT() { return IID_IEnumFORMATETC$SEGMENT_; }

    static final MemoryLayout IEnumFORMATETCVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Next"),
        C_POINTER.withName("Skip"),
        C_POINTER.withName("Reset"),
        C_POINTER.withName("Clone")
    ).withName("IEnumFORMATETCVtbl");
    static final jdk.incubator.foreign.MemoryLayout IEnumFORMATETCVtbl$struct$LAYOUT() { return IEnumFORMATETCVtbl$struct$LAYOUT_; }

    static final MemoryLayout IEnumFORMATETCVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumFORMATETCVtbl$QueryInterface$LAYOUT() { return IEnumFORMATETCVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IEnumFORMATETCVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IEnumFORMATETCVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IEnumFORMATETCVtbl$QueryInterface$VH() { return IEnumFORMATETCVtbl$QueryInterface$VH_; }

    static final MemoryLayout IEnumFORMATETCVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumFORMATETCVtbl$AddRef$LAYOUT() { return IEnumFORMATETCVtbl$AddRef$LAYOUT_; }

    static final VarHandle IEnumFORMATETCVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IEnumFORMATETCVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IEnumFORMATETCVtbl$AddRef$VH() { return IEnumFORMATETCVtbl$AddRef$VH_; }

    static final MemoryLayout IEnumFORMATETCVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumFORMATETCVtbl$Release$LAYOUT() { return IEnumFORMATETCVtbl$Release$LAYOUT_; }

    static final VarHandle IEnumFORMATETCVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IEnumFORMATETCVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IEnumFORMATETCVtbl$Release$VH() { return IEnumFORMATETCVtbl$Release$VH_; }

    static final MemoryLayout IEnumFORMATETCVtbl$Next$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumFORMATETCVtbl$Next$LAYOUT() { return IEnumFORMATETCVtbl$Next$LAYOUT_; }

    static final VarHandle IEnumFORMATETCVtbl$Next$VH_ = MemoryHandles.asAddressVarHandle(IEnumFORMATETCVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Next")));
    static final java.lang.invoke.VarHandle IEnumFORMATETCVtbl$Next$VH() { return IEnumFORMATETCVtbl$Next$VH_; }

    static final MemoryLayout IEnumFORMATETCVtbl$Skip$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumFORMATETCVtbl$Skip$LAYOUT() { return IEnumFORMATETCVtbl$Skip$LAYOUT_; }

    static final VarHandle IEnumFORMATETCVtbl$Skip$VH_ = MemoryHandles.asAddressVarHandle(IEnumFORMATETCVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Skip")));
    static final java.lang.invoke.VarHandle IEnumFORMATETCVtbl$Skip$VH() { return IEnumFORMATETCVtbl$Skip$VH_; }

    static final MemoryLayout IEnumFORMATETCVtbl$Reset$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumFORMATETCVtbl$Reset$LAYOUT() { return IEnumFORMATETCVtbl$Reset$LAYOUT_; }

    static final VarHandle IEnumFORMATETCVtbl$Reset$VH_ = MemoryHandles.asAddressVarHandle(IEnumFORMATETCVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Reset")));
    static final java.lang.invoke.VarHandle IEnumFORMATETCVtbl$Reset$VH() { return IEnumFORMATETCVtbl$Reset$VH_; }

    static final MemoryLayout IEnumFORMATETCVtbl$Clone$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumFORMATETCVtbl$Clone$LAYOUT() { return IEnumFORMATETCVtbl$Clone$LAYOUT_; }

    static final VarHandle IEnumFORMATETCVtbl$Clone$VH_ = MemoryHandles.asAddressVarHandle(IEnumFORMATETCVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Clone")));
    static final java.lang.invoke.VarHandle IEnumFORMATETCVtbl$Clone$VH() { return IEnumFORMATETCVtbl$Clone$VH_; }

    static final MemoryLayout IEnumFORMATETC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IEnumFORMATETC");
    static final jdk.incubator.foreign.MemoryLayout IEnumFORMATETC$struct$LAYOUT() { return IEnumFORMATETC$struct$LAYOUT_; }

    static final MemoryLayout IEnumFORMATETC$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumFORMATETC$lpVtbl$LAYOUT() { return IEnumFORMATETC$lpVtbl$LAYOUT_; }

    static final VarHandle IEnumFORMATETC$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IEnumFORMATETC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IEnumFORMATETC$lpVtbl$VH() { return IEnumFORMATETC$lpVtbl$VH_; }

    static final FunctionDescriptor IEnumFORMATETC_RemoteNext_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumFORMATETC_RemoteNext_Proxy$FUNC() { return IEnumFORMATETC_RemoteNext_Proxy$FUNC_; }

    static final MethodHandle IEnumFORMATETC_RemoteNext_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumFORMATETC_RemoteNext_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IEnumFORMATETC_RemoteNext_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumFORMATETC_RemoteNext_Proxy$MH() { return IEnumFORMATETC_RemoteNext_Proxy$MH_; }

    static final FunctionDescriptor IEnumFORMATETC_RemoteNext_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumFORMATETC_RemoteNext_Stub$FUNC() { return IEnumFORMATETC_RemoteNext_Stub$FUNC_; }

    static final MethodHandle IEnumFORMATETC_RemoteNext_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumFORMATETC_RemoteNext_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IEnumFORMATETC_RemoteNext_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumFORMATETC_RemoteNext_Stub$MH() { return IEnumFORMATETC_RemoteNext_Stub$MH_; }

    static final int ADVF_NODATA() { return (int)1L; }

    static final int ADVF_PRIMEFIRST() { return (int)2L; }

    static final int ADVF_ONLYONCE() { return (int)4L; }

    static final int ADVF_DATAONSTOP() { return (int)64L; }

    static final int ADVFCACHE_NOHANDLER() { return (int)8L; }

    static final int ADVFCACHE_FORCEBUILTIN() { return (int)16L; }

    static final int ADVFCACHE_ONSAVE() { return (int)32L; }

    static final MemoryLayout tagSTATDATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_SHORT.withName("cfFormat"),
            MemoryLayout.ofPaddingBits(48),
            C_POINTER.withName("ptd"),
            C_LONG.withName("dwAspect"),
            C_LONG.withName("lindex"),
            C_LONG.withName("tymed"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("formatetc"),
        C_LONG.withName("advf"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pAdvSink"),
        C_LONG.withName("dwConnection"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagSTATDATA");
    static final jdk.incubator.foreign.MemoryLayout tagSTATDATA$struct$LAYOUT() { return tagSTATDATA$struct$LAYOUT_; }

    static final MemoryLayout tagSTATDATA$advf$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagSTATDATA$advf$LAYOUT() { return tagSTATDATA$advf$LAYOUT_; }

    static final VarHandle tagSTATDATA$advf$VH_ = tagSTATDATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("advf"));
    static final java.lang.invoke.VarHandle tagSTATDATA$advf$VH() { return tagSTATDATA$advf$VH_; }

    static final MemoryLayout tagSTATDATA$pAdvSink$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagSTATDATA$pAdvSink$LAYOUT() { return tagSTATDATA$pAdvSink$LAYOUT_; }

    static final VarHandle tagSTATDATA$pAdvSink$VH_ = MemoryHandles.asAddressVarHandle(tagSTATDATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pAdvSink")));
    static final java.lang.invoke.VarHandle tagSTATDATA$pAdvSink$VH() { return tagSTATDATA$pAdvSink$VH_; }

    static final MemoryLayout tagSTATDATA$dwConnection$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagSTATDATA$dwConnection$LAYOUT() { return tagSTATDATA$dwConnection$LAYOUT_; }

    static final VarHandle tagSTATDATA$dwConnection$VH_ = tagSTATDATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwConnection"));
    static final java.lang.invoke.VarHandle tagSTATDATA$dwConnection$VH() { return tagSTATDATA$dwConnection$VH_; }

    static final MemoryLayout IID_IEnumSTATDATA$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IEnumSTATDATA$LAYOUT() { return IID_IEnumSTATDATA$LAYOUT_; }

    static final MemorySegment IID_IEnumSTATDATA$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IEnumSTATDATA", IID_IEnumSTATDATA$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IEnumSTATDATA$SEGMENT() { return IID_IEnumSTATDATA$SEGMENT_; }

    static final MemoryLayout IEnumSTATDATAVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Next"),
        C_POINTER.withName("Skip"),
        C_POINTER.withName("Reset"),
        C_POINTER.withName("Clone")
    ).withName("IEnumSTATDATAVtbl");
    static final jdk.incubator.foreign.MemoryLayout IEnumSTATDATAVtbl$struct$LAYOUT() { return IEnumSTATDATAVtbl$struct$LAYOUT_; }

    static final MemoryLayout IEnumSTATDATAVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumSTATDATAVtbl$QueryInterface$LAYOUT() { return IEnumSTATDATAVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IEnumSTATDATAVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IEnumSTATDATAVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IEnumSTATDATAVtbl$QueryInterface$VH() { return IEnumSTATDATAVtbl$QueryInterface$VH_; }

    static final MemoryLayout IEnumSTATDATAVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumSTATDATAVtbl$AddRef$LAYOUT() { return IEnumSTATDATAVtbl$AddRef$LAYOUT_; }

    static final VarHandle IEnumSTATDATAVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IEnumSTATDATAVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IEnumSTATDATAVtbl$AddRef$VH() { return IEnumSTATDATAVtbl$AddRef$VH_; }

    static final MemoryLayout IEnumSTATDATAVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumSTATDATAVtbl$Release$LAYOUT() { return IEnumSTATDATAVtbl$Release$LAYOUT_; }

    static final VarHandle IEnumSTATDATAVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IEnumSTATDATAVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IEnumSTATDATAVtbl$Release$VH() { return IEnumSTATDATAVtbl$Release$VH_; }

    static final MemoryLayout IEnumSTATDATAVtbl$Next$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumSTATDATAVtbl$Next$LAYOUT() { return IEnumSTATDATAVtbl$Next$LAYOUT_; }

    static final VarHandle IEnumSTATDATAVtbl$Next$VH_ = MemoryHandles.asAddressVarHandle(IEnumSTATDATAVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Next")));
    static final java.lang.invoke.VarHandle IEnumSTATDATAVtbl$Next$VH() { return IEnumSTATDATAVtbl$Next$VH_; }

    static final MemoryLayout IEnumSTATDATAVtbl$Skip$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumSTATDATAVtbl$Skip$LAYOUT() { return IEnumSTATDATAVtbl$Skip$LAYOUT_; }

    static final VarHandle IEnumSTATDATAVtbl$Skip$VH_ = MemoryHandles.asAddressVarHandle(IEnumSTATDATAVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Skip")));
    static final java.lang.invoke.VarHandle IEnumSTATDATAVtbl$Skip$VH() { return IEnumSTATDATAVtbl$Skip$VH_; }

    static final MemoryLayout IEnumSTATDATAVtbl$Reset$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumSTATDATAVtbl$Reset$LAYOUT() { return IEnumSTATDATAVtbl$Reset$LAYOUT_; }

    static final VarHandle IEnumSTATDATAVtbl$Reset$VH_ = MemoryHandles.asAddressVarHandle(IEnumSTATDATAVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Reset")));
    static final java.lang.invoke.VarHandle IEnumSTATDATAVtbl$Reset$VH() { return IEnumSTATDATAVtbl$Reset$VH_; }

    static final MemoryLayout IEnumSTATDATAVtbl$Clone$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumSTATDATAVtbl$Clone$LAYOUT() { return IEnumSTATDATAVtbl$Clone$LAYOUT_; }

    static final VarHandle IEnumSTATDATAVtbl$Clone$VH_ = MemoryHandles.asAddressVarHandle(IEnumSTATDATAVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Clone")));
    static final java.lang.invoke.VarHandle IEnumSTATDATAVtbl$Clone$VH() { return IEnumSTATDATAVtbl$Clone$VH_; }

    static final MemoryLayout IEnumSTATDATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IEnumSTATDATA");
    static final jdk.incubator.foreign.MemoryLayout IEnumSTATDATA$struct$LAYOUT() { return IEnumSTATDATA$struct$LAYOUT_; }

    static final MemoryLayout IEnumSTATDATA$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumSTATDATA$lpVtbl$LAYOUT() { return IEnumSTATDATA$lpVtbl$LAYOUT_; }

    static final VarHandle IEnumSTATDATA$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IEnumSTATDATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IEnumSTATDATA$lpVtbl$VH() { return IEnumSTATDATA$lpVtbl$VH_; }

    static final FunctionDescriptor IEnumSTATDATA_RemoteNext_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumSTATDATA_RemoteNext_Proxy$FUNC() { return IEnumSTATDATA_RemoteNext_Proxy$FUNC_; }

    static final MethodHandle IEnumSTATDATA_RemoteNext_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumSTATDATA_RemoteNext_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IEnumSTATDATA_RemoteNext_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumSTATDATA_RemoteNext_Proxy$MH() { return IEnumSTATDATA_RemoteNext_Proxy$MH_; }

    static final FunctionDescriptor IEnumSTATDATA_RemoteNext_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumSTATDATA_RemoteNext_Stub$FUNC() { return IEnumSTATDATA_RemoteNext_Stub$FUNC_; }

    static final MethodHandle IEnumSTATDATA_RemoteNext_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumSTATDATA_RemoteNext_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IEnumSTATDATA_RemoteNext_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumSTATDATA_RemoteNext_Stub$MH() { return IEnumSTATDATA_RemoteNext_Stub$MH_; }

    static final MemoryLayout IID_IRootStorage$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IRootStorage$LAYOUT() { return IID_IRootStorage$LAYOUT_; }

    static final MemorySegment IID_IRootStorage$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IRootStorage", IID_IRootStorage$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IRootStorage$SEGMENT() { return IID_IRootStorage$SEGMENT_; }

    static final MemoryLayout IRootStorageVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("SwitchToFile")
    ).withName("IRootStorageVtbl");
    static final jdk.incubator.foreign.MemoryLayout IRootStorageVtbl$struct$LAYOUT() { return IRootStorageVtbl$struct$LAYOUT_; }

    static final MemoryLayout IRootStorageVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRootStorageVtbl$QueryInterface$LAYOUT() { return IRootStorageVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IRootStorageVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IRootStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IRootStorageVtbl$QueryInterface$VH() { return IRootStorageVtbl$QueryInterface$VH_; }

    static final MemoryLayout IRootStorageVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRootStorageVtbl$AddRef$LAYOUT() { return IRootStorageVtbl$AddRef$LAYOUT_; }

    static final VarHandle IRootStorageVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IRootStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IRootStorageVtbl$AddRef$VH() { return IRootStorageVtbl$AddRef$VH_; }

    static final MemoryLayout IRootStorageVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRootStorageVtbl$Release$LAYOUT() { return IRootStorageVtbl$Release$LAYOUT_; }

    static final VarHandle IRootStorageVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IRootStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IRootStorageVtbl$Release$VH() { return IRootStorageVtbl$Release$VH_; }

    static final MemoryLayout IRootStorageVtbl$SwitchToFile$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRootStorageVtbl$SwitchToFile$LAYOUT() { return IRootStorageVtbl$SwitchToFile$LAYOUT_; }

    static final VarHandle IRootStorageVtbl$SwitchToFile$VH_ = MemoryHandles.asAddressVarHandle(IRootStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SwitchToFile")));
    static final java.lang.invoke.VarHandle IRootStorageVtbl$SwitchToFile$VH() { return IRootStorageVtbl$SwitchToFile$VH_; }

    static final MemoryLayout IRootStorage$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IRootStorage");
    static final jdk.incubator.foreign.MemoryLayout IRootStorage$struct$LAYOUT() { return IRootStorage$struct$LAYOUT_; }

    static final MemoryLayout IRootStorage$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRootStorage$lpVtbl$LAYOUT() { return IRootStorage$lpVtbl$LAYOUT_; }

    static final VarHandle IRootStorage$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IRootStorage$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IRootStorage$lpVtbl$VH() { return IRootStorage$lpVtbl$VH_; }

    static final int TYMED_HGLOBAL() { return (int)1L; }

    static final int TYMED_FILE() { return (int)2L; }

    static final int TYMED_ISTREAM() { return (int)4L; }

    static final int TYMED_ISTORAGE() { return (int)8L; }

    static final int TYMED_GDI() { return (int)16L; }

    static final int TYMED_MFPICT() { return (int)32L; }

    static final int TYMED_ENHMF() { return (int)64L; }

    static final int TYMED_NULL() { return (int)0L; }

    static final MemoryLayout tagRemSTGMEDIUM$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("tymed"),
        C_LONG.withName("dwHandleType"),
        C_LONG.withName("pData"),
        C_LONG.withName("pUnkForRelease"),
        C_LONG.withName("cbData"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("data"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("tagRemSTGMEDIUM");
    static final jdk.incubator.foreign.MemoryLayout tagRemSTGMEDIUM$struct$LAYOUT() { return tagRemSTGMEDIUM$struct$LAYOUT_; }

    static final MemoryLayout tagRemSTGMEDIUM$tymed$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRemSTGMEDIUM$tymed$LAYOUT() { return tagRemSTGMEDIUM$tymed$LAYOUT_; }

    static final VarHandle tagRemSTGMEDIUM$tymed$VH_ = tagRemSTGMEDIUM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tymed"));
    static final java.lang.invoke.VarHandle tagRemSTGMEDIUM$tymed$VH() { return tagRemSTGMEDIUM$tymed$VH_; }

    static final MemoryLayout tagRemSTGMEDIUM$dwHandleType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRemSTGMEDIUM$dwHandleType$LAYOUT() { return tagRemSTGMEDIUM$dwHandleType$LAYOUT_; }

    static final VarHandle tagRemSTGMEDIUM$dwHandleType$VH_ = tagRemSTGMEDIUM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwHandleType"));
    static final java.lang.invoke.VarHandle tagRemSTGMEDIUM$dwHandleType$VH() { return tagRemSTGMEDIUM$dwHandleType$VH_; }

    static final MemoryLayout tagRemSTGMEDIUM$pData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRemSTGMEDIUM$pData$LAYOUT() { return tagRemSTGMEDIUM$pData$LAYOUT_; }

    static final VarHandle tagRemSTGMEDIUM$pData$VH_ = tagRemSTGMEDIUM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("pData"));
    static final java.lang.invoke.VarHandle tagRemSTGMEDIUM$pData$VH() { return tagRemSTGMEDIUM$pData$VH_; }

    static final MemoryLayout tagRemSTGMEDIUM$pUnkForRelease$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRemSTGMEDIUM$pUnkForRelease$LAYOUT() { return tagRemSTGMEDIUM$pUnkForRelease$LAYOUT_; }

    static final VarHandle tagRemSTGMEDIUM$pUnkForRelease$VH_ = tagRemSTGMEDIUM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("pUnkForRelease"));
    static final java.lang.invoke.VarHandle tagRemSTGMEDIUM$pUnkForRelease$VH() { return tagRemSTGMEDIUM$pUnkForRelease$VH_; }

    static final MemoryLayout tagRemSTGMEDIUM$cbData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRemSTGMEDIUM$cbData$LAYOUT() { return tagRemSTGMEDIUM$cbData$LAYOUT_; }

    static final VarHandle tagRemSTGMEDIUM$cbData$VH_ = tagRemSTGMEDIUM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    static final java.lang.invoke.VarHandle tagRemSTGMEDIUM$cbData$VH() { return tagRemSTGMEDIUM$cbData$VH_; }

    static final MemoryLayout tagSTGMEDIUM$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("tymed"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hBitmap"),
        C_POINTER.withName("hMetaFilePict"),
        C_POINTER.withName("hEnhMetaFile"),
        C_POINTER.withName("hGlobal"),
        C_POINTER.withName("lpszFileName"),
        C_POINTER.withName("pstm"),
        C_POINTER.withName("pstg"),
        C_POINTER.withName("pUnkForRelease")
    ).withName("tagSTGMEDIUM");
    static final jdk.incubator.foreign.MemoryLayout tagSTGMEDIUM$struct$LAYOUT() { return tagSTGMEDIUM$struct$LAYOUT_; }

    static final MemoryLayout tagSTGMEDIUM$tymed$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagSTGMEDIUM$tymed$LAYOUT() { return tagSTGMEDIUM$tymed$LAYOUT_; }

    static final VarHandle tagSTGMEDIUM$tymed$VH_ = tagSTGMEDIUM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tymed"));
    static final java.lang.invoke.VarHandle tagSTGMEDIUM$tymed$VH() { return tagSTGMEDIUM$tymed$VH_; }

    static final MemoryLayout tagSTGMEDIUM$hBitmap$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagSTGMEDIUM$hBitmap$LAYOUT() { return tagSTGMEDIUM$hBitmap$LAYOUT_; }

    static final VarHandle tagSTGMEDIUM$hBitmap$VH_ = MemoryHandles.asAddressVarHandle(tagSTGMEDIUM$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hBitmap")));
    static final java.lang.invoke.VarHandle tagSTGMEDIUM$hBitmap$VH() { return tagSTGMEDIUM$hBitmap$VH_; }

    static final MemoryLayout tagSTGMEDIUM$hMetaFilePict$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagSTGMEDIUM$hMetaFilePict$LAYOUT() { return tagSTGMEDIUM$hMetaFilePict$LAYOUT_; }

    static final VarHandle tagSTGMEDIUM$hMetaFilePict$VH_ = MemoryHandles.asAddressVarHandle(tagSTGMEDIUM$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hMetaFilePict")));
    static final java.lang.invoke.VarHandle tagSTGMEDIUM$hMetaFilePict$VH() { return tagSTGMEDIUM$hMetaFilePict$VH_; }

    static final MemoryLayout tagSTGMEDIUM$hEnhMetaFile$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagSTGMEDIUM$hEnhMetaFile$LAYOUT() { return tagSTGMEDIUM$hEnhMetaFile$LAYOUT_; }

    static final VarHandle tagSTGMEDIUM$hEnhMetaFile$VH_ = MemoryHandles.asAddressVarHandle(tagSTGMEDIUM$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hEnhMetaFile")));
    static final java.lang.invoke.VarHandle tagSTGMEDIUM$hEnhMetaFile$VH() { return tagSTGMEDIUM$hEnhMetaFile$VH_; }

    static final MemoryLayout tagSTGMEDIUM$hGlobal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagSTGMEDIUM$hGlobal$LAYOUT() { return tagSTGMEDIUM$hGlobal$LAYOUT_; }

    static final VarHandle tagSTGMEDIUM$hGlobal$VH_ = MemoryHandles.asAddressVarHandle(tagSTGMEDIUM$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hGlobal")));
    static final java.lang.invoke.VarHandle tagSTGMEDIUM$hGlobal$VH() { return tagSTGMEDIUM$hGlobal$VH_; }

    static final MemoryLayout tagSTGMEDIUM$lpszFileName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagSTGMEDIUM$lpszFileName$LAYOUT() { return tagSTGMEDIUM$lpszFileName$LAYOUT_; }

    static final VarHandle tagSTGMEDIUM$lpszFileName$VH_ = MemoryHandles.asAddressVarHandle(tagSTGMEDIUM$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszFileName")));
    static final java.lang.invoke.VarHandle tagSTGMEDIUM$lpszFileName$VH() { return tagSTGMEDIUM$lpszFileName$VH_; }

    static final MemoryLayout tagSTGMEDIUM$pstm$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagSTGMEDIUM$pstm$LAYOUT() { return tagSTGMEDIUM$pstm$LAYOUT_; }

    static final VarHandle tagSTGMEDIUM$pstm$VH_ = MemoryHandles.asAddressVarHandle(tagSTGMEDIUM$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pstm")));
    static final java.lang.invoke.VarHandle tagSTGMEDIUM$pstm$VH() { return tagSTGMEDIUM$pstm$VH_; }

    static final MemoryLayout tagSTGMEDIUM$pstg$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagSTGMEDIUM$pstg$LAYOUT() { return tagSTGMEDIUM$pstg$LAYOUT_; }

    static final VarHandle tagSTGMEDIUM$pstg$VH_ = MemoryHandles.asAddressVarHandle(tagSTGMEDIUM$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pstg")));
    static final java.lang.invoke.VarHandle tagSTGMEDIUM$pstg$VH() { return tagSTGMEDIUM$pstg$VH_; }

    static final MemoryLayout tagSTGMEDIUM$pUnkForRelease$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagSTGMEDIUM$pUnkForRelease$LAYOUT() { return tagSTGMEDIUM$pUnkForRelease$LAYOUT_; }

    static final VarHandle tagSTGMEDIUM$pUnkForRelease$VH_ = MemoryHandles.asAddressVarHandle(tagSTGMEDIUM$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pUnkForRelease")));
    static final java.lang.invoke.VarHandle tagSTGMEDIUM$pUnkForRelease$VH() { return tagSTGMEDIUM$pUnkForRelease$VH_; }

    static final MemoryLayout _GDI_OBJECT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ObjectType"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_POINTER.withName("hBitmap"),
            C_POINTER.withName("hPalette"),
            C_POINTER.withName("hGeneric")
        ).withName("u")
    ).withName("_GDI_OBJECT");
    static final jdk.incubator.foreign.MemoryLayout _GDI_OBJECT$struct$LAYOUT() { return _GDI_OBJECT$struct$LAYOUT_; }

    static final MemoryLayout _GDI_OBJECT$ObjectType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _GDI_OBJECT$ObjectType$LAYOUT() { return _GDI_OBJECT$ObjectType$LAYOUT_; }

    static final VarHandle _GDI_OBJECT$ObjectType$VH_ = _GDI_OBJECT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ObjectType"));
    static final java.lang.invoke.VarHandle _GDI_OBJECT$ObjectType$VH() { return _GDI_OBJECT$ObjectType$VH_; }

    static final MemoryLayout _GDI_OBJECT$__MIDL_IAdviseSink_0002$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_POINTER.withName("hBitmap"),
        C_POINTER.withName("hPalette"),
        C_POINTER.withName("hGeneric")
    ).withName("__MIDL_IAdviseSink_0002");
    static final jdk.incubator.foreign.MemoryLayout _GDI_OBJECT$__MIDL_IAdviseSink_0002$union$LAYOUT() { return _GDI_OBJECT$__MIDL_IAdviseSink_0002$union$LAYOUT_; }

    static final MemoryLayout _GDI_OBJECT$__MIDL_IAdviseSink_0002$hBitmap$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _GDI_OBJECT$__MIDL_IAdviseSink_0002$hBitmap$LAYOUT() { return _GDI_OBJECT$__MIDL_IAdviseSink_0002$hBitmap$LAYOUT_; }

    static final VarHandle _GDI_OBJECT$__MIDL_IAdviseSink_0002$hBitmap$VH_ = MemoryHandles.asAddressVarHandle(_GDI_OBJECT$__MIDL_IAdviseSink_0002$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hBitmap")));
    static final java.lang.invoke.VarHandle _GDI_OBJECT$__MIDL_IAdviseSink_0002$hBitmap$VH() { return _GDI_OBJECT$__MIDL_IAdviseSink_0002$hBitmap$VH_; }

    static final MemoryLayout _GDI_OBJECT$__MIDL_IAdviseSink_0002$hPalette$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _GDI_OBJECT$__MIDL_IAdviseSink_0002$hPalette$LAYOUT() { return _GDI_OBJECT$__MIDL_IAdviseSink_0002$hPalette$LAYOUT_; }

    static final VarHandle _GDI_OBJECT$__MIDL_IAdviseSink_0002$hPalette$VH_ = MemoryHandles.asAddressVarHandle(_GDI_OBJECT$__MIDL_IAdviseSink_0002$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hPalette")));
    static final java.lang.invoke.VarHandle _GDI_OBJECT$__MIDL_IAdviseSink_0002$hPalette$VH() { return _GDI_OBJECT$__MIDL_IAdviseSink_0002$hPalette$VH_; }

    static final MemoryLayout _GDI_OBJECT$__MIDL_IAdviseSink_0002$hGeneric$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _GDI_OBJECT$__MIDL_IAdviseSink_0002$hGeneric$LAYOUT() { return _GDI_OBJECT$__MIDL_IAdviseSink_0002$hGeneric$LAYOUT_; }

    static final VarHandle _GDI_OBJECT$__MIDL_IAdviseSink_0002$hGeneric$VH_ = MemoryHandles.asAddressVarHandle(_GDI_OBJECT$__MIDL_IAdviseSink_0002$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hGeneric")));
    static final java.lang.invoke.VarHandle _GDI_OBJECT$__MIDL_IAdviseSink_0002$hGeneric$VH() { return _GDI_OBJECT$__MIDL_IAdviseSink_0002$hGeneric$VH_; }

    static final MemoryLayout _userSTGMEDIUM$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofPaddingBits(128),
        C_POINTER.withName("pUnkForRelease")
    ).withName("_userSTGMEDIUM");
    static final jdk.incubator.foreign.MemoryLayout _userSTGMEDIUM$struct$LAYOUT() { return _userSTGMEDIUM$struct$LAYOUT_; }

    static final MemoryLayout _userSTGMEDIUM$_STGMEDIUM_UNION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("tymed"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_POINTER.withName("hMetaFilePict"),
            C_POINTER.withName("hHEnhMetaFile"),
            C_POINTER.withName("hGdiHandle"),
            C_POINTER.withName("hGlobal"),
            C_POINTER.withName("lpszFileName"),
            C_POINTER.withName("pstm"),
            C_POINTER.withName("pstg")
        ).withName("u")
    ).withName("_STGMEDIUM_UNION");
    static final jdk.incubator.foreign.MemoryLayout _userSTGMEDIUM$_STGMEDIUM_UNION$struct$LAYOUT() { return _userSTGMEDIUM$_STGMEDIUM_UNION$struct$LAYOUT_; }

    static final MemoryLayout _userSTGMEDIUM$_STGMEDIUM_UNION$tymed$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userSTGMEDIUM$_STGMEDIUM_UNION$tymed$LAYOUT() { return _userSTGMEDIUM$_STGMEDIUM_UNION$tymed$LAYOUT_; }

    static final VarHandle _userSTGMEDIUM$_STGMEDIUM_UNION$tymed$VH_ = _userSTGMEDIUM$_STGMEDIUM_UNION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tymed"));
    static final java.lang.invoke.VarHandle _userSTGMEDIUM$_STGMEDIUM_UNION$tymed$VH() { return _userSTGMEDIUM$_STGMEDIUM_UNION$tymed$VH_; }

    static final MemoryLayout _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_POINTER.withName("hMetaFilePict"),
        C_POINTER.withName("hHEnhMetaFile"),
        C_POINTER.withName("hGdiHandle"),
        C_POINTER.withName("hGlobal"),
        C_POINTER.withName("lpszFileName"),
        C_POINTER.withName("pstm"),
        C_POINTER.withName("pstg")
    ).withName("__MIDL_IAdviseSink_0003");
    static final jdk.incubator.foreign.MemoryLayout _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$union$LAYOUT() { return _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$union$LAYOUT_; }

    static final MemoryLayout _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hMetaFilePict$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hMetaFilePict$LAYOUT() { return _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hMetaFilePict$LAYOUT_; }

    static final VarHandle _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hMetaFilePict$VH_ = MemoryHandles.asAddressVarHandle(_userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hMetaFilePict")));
    static final java.lang.invoke.VarHandle _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hMetaFilePict$VH() { return _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hMetaFilePict$VH_; }

    static final MemoryLayout _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hHEnhMetaFile$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hHEnhMetaFile$LAYOUT() { return _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hHEnhMetaFile$LAYOUT_; }

    static final VarHandle _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hHEnhMetaFile$VH_ = MemoryHandles.asAddressVarHandle(_userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hHEnhMetaFile")));
    static final java.lang.invoke.VarHandle _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hHEnhMetaFile$VH() { return _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hHEnhMetaFile$VH_; }

    static final MemoryLayout _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hGdiHandle$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hGdiHandle$LAYOUT() { return _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hGdiHandle$LAYOUT_; }

    static final VarHandle _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hGdiHandle$VH_ = MemoryHandles.asAddressVarHandle(_userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hGdiHandle")));
    static final java.lang.invoke.VarHandle _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hGdiHandle$VH() { return _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hGdiHandle$VH_; }

    static final MemoryLayout _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hGlobal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hGlobal$LAYOUT() { return _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hGlobal$LAYOUT_; }

    static final VarHandle _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hGlobal$VH_ = MemoryHandles.asAddressVarHandle(_userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hGlobal")));
    static final java.lang.invoke.VarHandle _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hGlobal$VH() { return _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$hGlobal$VH_; }

    static final MemoryLayout _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$lpszFileName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$lpszFileName$LAYOUT() { return _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$lpszFileName$LAYOUT_; }

    static final VarHandle _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$lpszFileName$VH_ = MemoryHandles.asAddressVarHandle(_userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszFileName")));
    static final java.lang.invoke.VarHandle _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$lpszFileName$VH() { return _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$lpszFileName$VH_; }

    static final MemoryLayout _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$pstm$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$pstm$LAYOUT() { return _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$pstm$LAYOUT_; }

    static final VarHandle _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$pstm$VH_ = MemoryHandles.asAddressVarHandle(_userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pstm")));
    static final java.lang.invoke.VarHandle _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$pstm$VH() { return _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$pstm$VH_; }

    static final MemoryLayout _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$pstg$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$pstg$LAYOUT() { return _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$pstg$LAYOUT_; }

    static final VarHandle _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$pstg$VH_ = MemoryHandles.asAddressVarHandle(_userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pstg")));
    static final java.lang.invoke.VarHandle _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$pstg$VH() { return _userSTGMEDIUM$_STGMEDIUM_UNION$__MIDL_IAdviseSink_0003$pstg$VH_; }

    static final MemoryLayout _userSTGMEDIUM$pUnkForRelease$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _userSTGMEDIUM$pUnkForRelease$LAYOUT() { return _userSTGMEDIUM$pUnkForRelease$LAYOUT_; }

    static final VarHandle _userSTGMEDIUM$pUnkForRelease$VH_ = MemoryHandles.asAddressVarHandle(_userSTGMEDIUM$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pUnkForRelease")));
    static final java.lang.invoke.VarHandle _userSTGMEDIUM$pUnkForRelease$VH() { return _userSTGMEDIUM$pUnkForRelease$VH_; }

    static final MemoryLayout _userFLAG_STGMEDIUM$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ContextFlags"),
        C_LONG.withName("fPassOwnership"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofPaddingBits(128),
            C_POINTER.withName("pUnkForRelease")
        ).withName("Stgmed")
    ).withName("_userFLAG_STGMEDIUM");
    static final jdk.incubator.foreign.MemoryLayout _userFLAG_STGMEDIUM$struct$LAYOUT() { return _userFLAG_STGMEDIUM$struct$LAYOUT_; }

    static final MemoryLayout _userFLAG_STGMEDIUM$ContextFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userFLAG_STGMEDIUM$ContextFlags$LAYOUT() { return _userFLAG_STGMEDIUM$ContextFlags$LAYOUT_; }

    static final VarHandle _userFLAG_STGMEDIUM$ContextFlags$VH_ = _userFLAG_STGMEDIUM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ContextFlags"));
    static final java.lang.invoke.VarHandle _userFLAG_STGMEDIUM$ContextFlags$VH() { return _userFLAG_STGMEDIUM$ContextFlags$VH_; }

    static final MemoryLayout _userFLAG_STGMEDIUM$fPassOwnership$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userFLAG_STGMEDIUM$fPassOwnership$LAYOUT() { return _userFLAG_STGMEDIUM$fPassOwnership$LAYOUT_; }

    static final VarHandle _userFLAG_STGMEDIUM$fPassOwnership$VH_ = _userFLAG_STGMEDIUM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fPassOwnership"));
    static final java.lang.invoke.VarHandle _userFLAG_STGMEDIUM$fPassOwnership$VH() { return _userFLAG_STGMEDIUM$fPassOwnership$VH_; }

    static final MemoryLayout _FLAG_STGMEDIUM$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ContextFlags"),
        C_LONG.withName("fPassOwnership"),
        MemoryLayout.ofStruct(
            C_LONG.withName("tymed"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("hBitmap"),
            C_POINTER.withName("hMetaFilePict"),
            C_POINTER.withName("hEnhMetaFile"),
            C_POINTER.withName("hGlobal"),
            C_POINTER.withName("lpszFileName"),
            C_POINTER.withName("pstm"),
            C_POINTER.withName("pstg"),
            C_POINTER.withName("pUnkForRelease")
        ).withName("Stgmed")
    ).withName("_FLAG_STGMEDIUM");
    static final jdk.incubator.foreign.MemoryLayout _FLAG_STGMEDIUM$struct$LAYOUT() { return _FLAG_STGMEDIUM$struct$LAYOUT_; }

    static final MemoryLayout _FLAG_STGMEDIUM$ContextFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FLAG_STGMEDIUM$ContextFlags$LAYOUT() { return _FLAG_STGMEDIUM$ContextFlags$LAYOUT_; }

    static final VarHandle _FLAG_STGMEDIUM$ContextFlags$VH_ = _FLAG_STGMEDIUM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ContextFlags"));
    static final java.lang.invoke.VarHandle _FLAG_STGMEDIUM$ContextFlags$VH() { return _FLAG_STGMEDIUM$ContextFlags$VH_; }

    static final MemoryLayout _FLAG_STGMEDIUM$fPassOwnership$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FLAG_STGMEDIUM$fPassOwnership$LAYOUT() { return _FLAG_STGMEDIUM$fPassOwnership$LAYOUT_; }

    static final VarHandle _FLAG_STGMEDIUM$fPassOwnership$VH_ = _FLAG_STGMEDIUM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fPassOwnership"));
    static final java.lang.invoke.VarHandle _FLAG_STGMEDIUM$fPassOwnership$VH() { return _FLAG_STGMEDIUM$fPassOwnership$VH_; }

    static final MemoryLayout IID_IAdviseSink$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IAdviseSink$LAYOUT() { return IID_IAdviseSink$LAYOUT_; }

    static final MemorySegment IID_IAdviseSink$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IAdviseSink", IID_IAdviseSink$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IAdviseSink$SEGMENT() { return IID_IAdviseSink$SEGMENT_; }

    static final MemoryLayout IAdviseSinkVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("OnDataChange"),
        C_POINTER.withName("OnViewChange"),
        C_POINTER.withName("OnRename"),
        C_POINTER.withName("OnSave"),
        C_POINTER.withName("OnClose")
    ).withName("IAdviseSinkVtbl");
    static final jdk.incubator.foreign.MemoryLayout IAdviseSinkVtbl$struct$LAYOUT() { return IAdviseSinkVtbl$struct$LAYOUT_; }

    static final MemoryLayout IAdviseSinkVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAdviseSinkVtbl$QueryInterface$LAYOUT() { return IAdviseSinkVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IAdviseSinkVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IAdviseSinkVtbl$QueryInterface$VH() { return IAdviseSinkVtbl$QueryInterface$VH_; }

    static final MemoryLayout IAdviseSinkVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAdviseSinkVtbl$AddRef$LAYOUT() { return IAdviseSinkVtbl$AddRef$LAYOUT_; }

    static final VarHandle IAdviseSinkVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IAdviseSinkVtbl$AddRef$VH() { return IAdviseSinkVtbl$AddRef$VH_; }

    static final MemoryLayout IAdviseSinkVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAdviseSinkVtbl$Release$LAYOUT() { return IAdviseSinkVtbl$Release$LAYOUT_; }

    static final VarHandle IAdviseSinkVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IAdviseSinkVtbl$Release$VH() { return IAdviseSinkVtbl$Release$VH_; }

    static final MemoryLayout IAdviseSinkVtbl$OnDataChange$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAdviseSinkVtbl$OnDataChange$LAYOUT() { return IAdviseSinkVtbl$OnDataChange$LAYOUT_; }

    static final VarHandle IAdviseSinkVtbl$OnDataChange$VH_ = MemoryHandles.asAddressVarHandle(IAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnDataChange")));
    static final java.lang.invoke.VarHandle IAdviseSinkVtbl$OnDataChange$VH() { return IAdviseSinkVtbl$OnDataChange$VH_; }

    static final MemoryLayout IAdviseSinkVtbl$OnViewChange$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAdviseSinkVtbl$OnViewChange$LAYOUT() { return IAdviseSinkVtbl$OnViewChange$LAYOUT_; }

    static final VarHandle IAdviseSinkVtbl$OnViewChange$VH_ = MemoryHandles.asAddressVarHandle(IAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnViewChange")));
    static final java.lang.invoke.VarHandle IAdviseSinkVtbl$OnViewChange$VH() { return IAdviseSinkVtbl$OnViewChange$VH_; }

    static final MemoryLayout IAdviseSinkVtbl$OnRename$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAdviseSinkVtbl$OnRename$LAYOUT() { return IAdviseSinkVtbl$OnRename$LAYOUT_; }

    static final VarHandle IAdviseSinkVtbl$OnRename$VH_ = MemoryHandles.asAddressVarHandle(IAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnRename")));
    static final java.lang.invoke.VarHandle IAdviseSinkVtbl$OnRename$VH() { return IAdviseSinkVtbl$OnRename$VH_; }

    static final MemoryLayout IAdviseSinkVtbl$OnSave$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAdviseSinkVtbl$OnSave$LAYOUT() { return IAdviseSinkVtbl$OnSave$LAYOUT_; }

    static final VarHandle IAdviseSinkVtbl$OnSave$VH_ = MemoryHandles.asAddressVarHandle(IAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnSave")));
    static final java.lang.invoke.VarHandle IAdviseSinkVtbl$OnSave$VH() { return IAdviseSinkVtbl$OnSave$VH_; }

    static final MemoryLayout IAdviseSinkVtbl$OnClose$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAdviseSinkVtbl$OnClose$LAYOUT() { return IAdviseSinkVtbl$OnClose$LAYOUT_; }

    static final VarHandle IAdviseSinkVtbl$OnClose$VH_ = MemoryHandles.asAddressVarHandle(IAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnClose")));
    static final java.lang.invoke.VarHandle IAdviseSinkVtbl$OnClose$VH() { return IAdviseSinkVtbl$OnClose$VH_; }

    static final MemoryLayout IAdviseSink$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IAdviseSink");
    static final jdk.incubator.foreign.MemoryLayout IAdviseSink$struct$LAYOUT() { return IAdviseSink$struct$LAYOUT_; }

    static final MemoryLayout IAdviseSink$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAdviseSink$lpVtbl$LAYOUT() { return IAdviseSink$lpVtbl$LAYOUT_; }

    static final VarHandle IAdviseSink$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IAdviseSink$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IAdviseSink$lpVtbl$VH() { return IAdviseSink$lpVtbl$VH_; }

    static final FunctionDescriptor IAdviseSink_RemoteOnDataChange_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink_RemoteOnDataChange_Proxy$FUNC() { return IAdviseSink_RemoteOnDataChange_Proxy$FUNC_; }

    static final MethodHandle IAdviseSink_RemoteOnDataChange_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink_RemoteOnDataChange_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IAdviseSink_RemoteOnDataChange_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink_RemoteOnDataChange_Proxy$MH() { return IAdviseSink_RemoteOnDataChange_Proxy$MH_; }

    static final FunctionDescriptor IAdviseSink_RemoteOnDataChange_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink_RemoteOnDataChange_Stub$FUNC() { return IAdviseSink_RemoteOnDataChange_Stub$FUNC_; }

    static final MethodHandle IAdviseSink_RemoteOnDataChange_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink_RemoteOnDataChange_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IAdviseSink_RemoteOnDataChange_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink_RemoteOnDataChange_Stub$MH() { return IAdviseSink_RemoteOnDataChange_Stub$MH_; }

    static final FunctionDescriptor IAdviseSink_RemoteOnViewChange_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink_RemoteOnViewChange_Proxy$FUNC() { return IAdviseSink_RemoteOnViewChange_Proxy$FUNC_; }

    static final MethodHandle IAdviseSink_RemoteOnViewChange_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink_RemoteOnViewChange_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        IAdviseSink_RemoteOnViewChange_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink_RemoteOnViewChange_Proxy$MH() { return IAdviseSink_RemoteOnViewChange_Proxy$MH_; }

    static final FunctionDescriptor IAdviseSink_RemoteOnViewChange_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink_RemoteOnViewChange_Stub$FUNC() { return IAdviseSink_RemoteOnViewChange_Stub$FUNC_; }

    static final MethodHandle IAdviseSink_RemoteOnViewChange_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink_RemoteOnViewChange_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IAdviseSink_RemoteOnViewChange_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink_RemoteOnViewChange_Stub$MH() { return IAdviseSink_RemoteOnViewChange_Stub$MH_; }

    static final FunctionDescriptor IAdviseSink_RemoteOnRename_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink_RemoteOnRename_Proxy$FUNC() { return IAdviseSink_RemoteOnRename_Proxy$FUNC_; }

    static final MethodHandle IAdviseSink_RemoteOnRename_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink_RemoteOnRename_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IAdviseSink_RemoteOnRename_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink_RemoteOnRename_Proxy$MH() { return IAdviseSink_RemoteOnRename_Proxy$MH_; }

    static final FunctionDescriptor IAdviseSink_RemoteOnRename_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink_RemoteOnRename_Stub$FUNC() { return IAdviseSink_RemoteOnRename_Stub$FUNC_; }

    static final MethodHandle IAdviseSink_RemoteOnRename_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink_RemoteOnRename_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IAdviseSink_RemoteOnRename_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink_RemoteOnRename_Stub$MH() { return IAdviseSink_RemoteOnRename_Stub$MH_; }

    static final FunctionDescriptor IAdviseSink_RemoteOnSave_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink_RemoteOnSave_Proxy$FUNC() { return IAdviseSink_RemoteOnSave_Proxy$FUNC_; }

    static final MethodHandle IAdviseSink_RemoteOnSave_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink_RemoteOnSave_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        IAdviseSink_RemoteOnSave_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink_RemoteOnSave_Proxy$MH() { return IAdviseSink_RemoteOnSave_Proxy$MH_; }

    static final FunctionDescriptor IAdviseSink_RemoteOnSave_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink_RemoteOnSave_Stub$FUNC() { return IAdviseSink_RemoteOnSave_Stub$FUNC_; }

    static final MethodHandle IAdviseSink_RemoteOnSave_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink_RemoteOnSave_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IAdviseSink_RemoteOnSave_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink_RemoteOnSave_Stub$MH() { return IAdviseSink_RemoteOnSave_Stub$MH_; }

    static final FunctionDescriptor IAdviseSink_RemoteOnClose_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink_RemoteOnClose_Proxy$FUNC() { return IAdviseSink_RemoteOnClose_Proxy$FUNC_; }

    static final MethodHandle IAdviseSink_RemoteOnClose_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink_RemoteOnClose_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        IAdviseSink_RemoteOnClose_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink_RemoteOnClose_Proxy$MH() { return IAdviseSink_RemoteOnClose_Proxy$MH_; }

    static final FunctionDescriptor IAdviseSink_RemoteOnClose_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink_RemoteOnClose_Stub$FUNC() { return IAdviseSink_RemoteOnClose_Stub$FUNC_; }

    static final MethodHandle IAdviseSink_RemoteOnClose_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink_RemoteOnClose_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IAdviseSink_RemoteOnClose_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink_RemoteOnClose_Stub$MH() { return IAdviseSink_RemoteOnClose_Stub$MH_; }

    static final MemoryLayout IID_AsyncIAdviseSink$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_AsyncIAdviseSink$LAYOUT() { return IID_AsyncIAdviseSink$LAYOUT_; }

    static final MemorySegment IID_AsyncIAdviseSink$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_AsyncIAdviseSink", IID_AsyncIAdviseSink$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_AsyncIAdviseSink$SEGMENT() { return IID_AsyncIAdviseSink$SEGMENT_; }

    static final MemoryLayout AsyncIAdviseSinkVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Begin_OnDataChange"),
        C_POINTER.withName("Finish_OnDataChange"),
        C_POINTER.withName("Begin_OnViewChange"),
        C_POINTER.withName("Finish_OnViewChange"),
        C_POINTER.withName("Begin_OnRename"),
        C_POINTER.withName("Finish_OnRename"),
        C_POINTER.withName("Begin_OnSave"),
        C_POINTER.withName("Finish_OnSave"),
        C_POINTER.withName("Begin_OnClose"),
        C_POINTER.withName("Finish_OnClose")
    ).withName("AsyncIAdviseSinkVtbl");
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSinkVtbl$struct$LAYOUT() { return AsyncIAdviseSinkVtbl$struct$LAYOUT_; }

    static final MemoryLayout AsyncIAdviseSinkVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSinkVtbl$QueryInterface$LAYOUT() { return AsyncIAdviseSinkVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle AsyncIAdviseSinkVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSinkVtbl$QueryInterface$VH() { return AsyncIAdviseSinkVtbl$QueryInterface$VH_; }

    static final MemoryLayout AsyncIAdviseSinkVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSinkVtbl$AddRef$LAYOUT() { return AsyncIAdviseSinkVtbl$AddRef$LAYOUT_; }

    static final VarHandle AsyncIAdviseSinkVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSinkVtbl$AddRef$VH() { return AsyncIAdviseSinkVtbl$AddRef$VH_; }

    static final MemoryLayout AsyncIAdviseSinkVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSinkVtbl$Release$LAYOUT() { return AsyncIAdviseSinkVtbl$Release$LAYOUT_; }

    static final VarHandle AsyncIAdviseSinkVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSinkVtbl$Release$VH() { return AsyncIAdviseSinkVtbl$Release$VH_; }

    static final MemoryLayout AsyncIAdviseSinkVtbl$Begin_OnDataChange$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSinkVtbl$Begin_OnDataChange$LAYOUT() { return AsyncIAdviseSinkVtbl$Begin_OnDataChange$LAYOUT_; }

    static final VarHandle AsyncIAdviseSinkVtbl$Begin_OnDataChange$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Begin_OnDataChange")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSinkVtbl$Begin_OnDataChange$VH() { return AsyncIAdviseSinkVtbl$Begin_OnDataChange$VH_; }

    static final MemoryLayout AsyncIAdviseSinkVtbl$Finish_OnDataChange$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSinkVtbl$Finish_OnDataChange$LAYOUT() { return AsyncIAdviseSinkVtbl$Finish_OnDataChange$LAYOUT_; }

    static final VarHandle AsyncIAdviseSinkVtbl$Finish_OnDataChange$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Finish_OnDataChange")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSinkVtbl$Finish_OnDataChange$VH() { return AsyncIAdviseSinkVtbl$Finish_OnDataChange$VH_; }

    static final MemoryLayout AsyncIAdviseSinkVtbl$Begin_OnViewChange$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSinkVtbl$Begin_OnViewChange$LAYOUT() { return AsyncIAdviseSinkVtbl$Begin_OnViewChange$LAYOUT_; }

    static final VarHandle AsyncIAdviseSinkVtbl$Begin_OnViewChange$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Begin_OnViewChange")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSinkVtbl$Begin_OnViewChange$VH() { return AsyncIAdviseSinkVtbl$Begin_OnViewChange$VH_; }

    static final MemoryLayout AsyncIAdviseSinkVtbl$Finish_OnViewChange$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSinkVtbl$Finish_OnViewChange$LAYOUT() { return AsyncIAdviseSinkVtbl$Finish_OnViewChange$LAYOUT_; }

    static final VarHandle AsyncIAdviseSinkVtbl$Finish_OnViewChange$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Finish_OnViewChange")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSinkVtbl$Finish_OnViewChange$VH() { return AsyncIAdviseSinkVtbl$Finish_OnViewChange$VH_; }

    static final MemoryLayout AsyncIAdviseSinkVtbl$Begin_OnRename$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSinkVtbl$Begin_OnRename$LAYOUT() { return AsyncIAdviseSinkVtbl$Begin_OnRename$LAYOUT_; }

    static final VarHandle AsyncIAdviseSinkVtbl$Begin_OnRename$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Begin_OnRename")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSinkVtbl$Begin_OnRename$VH() { return AsyncIAdviseSinkVtbl$Begin_OnRename$VH_; }

    static final MemoryLayout AsyncIAdviseSinkVtbl$Finish_OnRename$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSinkVtbl$Finish_OnRename$LAYOUT() { return AsyncIAdviseSinkVtbl$Finish_OnRename$LAYOUT_; }

    static final VarHandle AsyncIAdviseSinkVtbl$Finish_OnRename$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Finish_OnRename")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSinkVtbl$Finish_OnRename$VH() { return AsyncIAdviseSinkVtbl$Finish_OnRename$VH_; }

    static final MemoryLayout AsyncIAdviseSinkVtbl$Begin_OnSave$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSinkVtbl$Begin_OnSave$LAYOUT() { return AsyncIAdviseSinkVtbl$Begin_OnSave$LAYOUT_; }

    static final VarHandle AsyncIAdviseSinkVtbl$Begin_OnSave$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Begin_OnSave")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSinkVtbl$Begin_OnSave$VH() { return AsyncIAdviseSinkVtbl$Begin_OnSave$VH_; }

    static final MemoryLayout AsyncIAdviseSinkVtbl$Finish_OnSave$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSinkVtbl$Finish_OnSave$LAYOUT() { return AsyncIAdviseSinkVtbl$Finish_OnSave$LAYOUT_; }

    static final VarHandle AsyncIAdviseSinkVtbl$Finish_OnSave$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Finish_OnSave")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSinkVtbl$Finish_OnSave$VH() { return AsyncIAdviseSinkVtbl$Finish_OnSave$VH_; }

    static final MemoryLayout AsyncIAdviseSinkVtbl$Begin_OnClose$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSinkVtbl$Begin_OnClose$LAYOUT() { return AsyncIAdviseSinkVtbl$Begin_OnClose$LAYOUT_; }

    static final VarHandle AsyncIAdviseSinkVtbl$Begin_OnClose$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Begin_OnClose")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSinkVtbl$Begin_OnClose$VH() { return AsyncIAdviseSinkVtbl$Begin_OnClose$VH_; }

    static final MemoryLayout AsyncIAdviseSinkVtbl$Finish_OnClose$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSinkVtbl$Finish_OnClose$LAYOUT() { return AsyncIAdviseSinkVtbl$Finish_OnClose$LAYOUT_; }

    static final VarHandle AsyncIAdviseSinkVtbl$Finish_OnClose$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSinkVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Finish_OnClose")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSinkVtbl$Finish_OnClose$VH() { return AsyncIAdviseSinkVtbl$Finish_OnClose$VH_; }

    static final MemoryLayout AsyncIAdviseSink$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("AsyncIAdviseSink");
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSink$struct$LAYOUT() { return AsyncIAdviseSink$struct$LAYOUT_; }

    static final MemoryLayout AsyncIAdviseSink$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSink$lpVtbl$LAYOUT() { return AsyncIAdviseSink$lpVtbl$LAYOUT_; }

    static final VarHandle AsyncIAdviseSink$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSink$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSink$lpVtbl$VH() { return AsyncIAdviseSink$lpVtbl$VH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Begin_RemoteOnDataChange_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Begin_RemoteOnDataChange_Proxy$FUNC() { return AsyncIAdviseSink_Begin_RemoteOnDataChange_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Begin_RemoteOnDataChange_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Begin_RemoteOnDataChange_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink_Begin_RemoteOnDataChange_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Begin_RemoteOnDataChange_Proxy$MH() { return AsyncIAdviseSink_Begin_RemoteOnDataChange_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Begin_RemoteOnDataChange_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Begin_RemoteOnDataChange_Stub$FUNC() { return AsyncIAdviseSink_Begin_RemoteOnDataChange_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Begin_RemoteOnDataChange_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Begin_RemoteOnDataChange_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink_Begin_RemoteOnDataChange_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Begin_RemoteOnDataChange_Stub$MH() { return AsyncIAdviseSink_Begin_RemoteOnDataChange_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Finish_RemoteOnDataChange_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Finish_RemoteOnDataChange_Proxy$FUNC() { return AsyncIAdviseSink_Finish_RemoteOnDataChange_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Finish_RemoteOnDataChange_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Finish_RemoteOnDataChange_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink_Finish_RemoteOnDataChange_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Finish_RemoteOnDataChange_Proxy$MH() { return AsyncIAdviseSink_Finish_RemoteOnDataChange_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Finish_RemoteOnDataChange_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Finish_RemoteOnDataChange_Stub$FUNC() { return AsyncIAdviseSink_Finish_RemoteOnDataChange_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Finish_RemoteOnDataChange_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Finish_RemoteOnDataChange_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink_Finish_RemoteOnDataChange_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Finish_RemoteOnDataChange_Stub$MH() { return AsyncIAdviseSink_Finish_RemoteOnDataChange_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Begin_RemoteOnViewChange_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Begin_RemoteOnViewChange_Proxy$FUNC() { return AsyncIAdviseSink_Begin_RemoteOnViewChange_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Begin_RemoteOnViewChange_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Begin_RemoteOnViewChange_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        AsyncIAdviseSink_Begin_RemoteOnViewChange_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Begin_RemoteOnViewChange_Proxy$MH() { return AsyncIAdviseSink_Begin_RemoteOnViewChange_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Begin_RemoteOnViewChange_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Begin_RemoteOnViewChange_Stub$FUNC() { return AsyncIAdviseSink_Begin_RemoteOnViewChange_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Begin_RemoteOnViewChange_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Begin_RemoteOnViewChange_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink_Begin_RemoteOnViewChange_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Begin_RemoteOnViewChange_Stub$MH() { return AsyncIAdviseSink_Begin_RemoteOnViewChange_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Finish_RemoteOnViewChange_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Finish_RemoteOnViewChange_Proxy$FUNC() { return AsyncIAdviseSink_Finish_RemoteOnViewChange_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Finish_RemoteOnViewChange_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Finish_RemoteOnViewChange_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink_Finish_RemoteOnViewChange_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Finish_RemoteOnViewChange_Proxy$MH() { return AsyncIAdviseSink_Finish_RemoteOnViewChange_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Finish_RemoteOnViewChange_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Finish_RemoteOnViewChange_Stub$FUNC() { return AsyncIAdviseSink_Finish_RemoteOnViewChange_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Finish_RemoteOnViewChange_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Finish_RemoteOnViewChange_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink_Finish_RemoteOnViewChange_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Finish_RemoteOnViewChange_Stub$MH() { return AsyncIAdviseSink_Finish_RemoteOnViewChange_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Begin_RemoteOnRename_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Begin_RemoteOnRename_Proxy$FUNC() { return AsyncIAdviseSink_Begin_RemoteOnRename_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Begin_RemoteOnRename_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Begin_RemoteOnRename_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink_Begin_RemoteOnRename_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Begin_RemoteOnRename_Proxy$MH() { return AsyncIAdviseSink_Begin_RemoteOnRename_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Begin_RemoteOnRename_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Begin_RemoteOnRename_Stub$FUNC() { return AsyncIAdviseSink_Begin_RemoteOnRename_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Begin_RemoteOnRename_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Begin_RemoteOnRename_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink_Begin_RemoteOnRename_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Begin_RemoteOnRename_Stub$MH() { return AsyncIAdviseSink_Begin_RemoteOnRename_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Finish_RemoteOnRename_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Finish_RemoteOnRename_Proxy$FUNC() { return AsyncIAdviseSink_Finish_RemoteOnRename_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Finish_RemoteOnRename_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Finish_RemoteOnRename_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink_Finish_RemoteOnRename_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Finish_RemoteOnRename_Proxy$MH() { return AsyncIAdviseSink_Finish_RemoteOnRename_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Finish_RemoteOnRename_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Finish_RemoteOnRename_Stub$FUNC() { return AsyncIAdviseSink_Finish_RemoteOnRename_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Finish_RemoteOnRename_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Finish_RemoteOnRename_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink_Finish_RemoteOnRename_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Finish_RemoteOnRename_Stub$MH() { return AsyncIAdviseSink_Finish_RemoteOnRename_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Begin_RemoteOnSave_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Begin_RemoteOnSave_Proxy$FUNC() { return AsyncIAdviseSink_Begin_RemoteOnSave_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Begin_RemoteOnSave_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Begin_RemoteOnSave_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink_Begin_RemoteOnSave_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Begin_RemoteOnSave_Proxy$MH() { return AsyncIAdviseSink_Begin_RemoteOnSave_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Begin_RemoteOnSave_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Begin_RemoteOnSave_Stub$FUNC() { return AsyncIAdviseSink_Begin_RemoteOnSave_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Begin_RemoteOnSave_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Begin_RemoteOnSave_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink_Begin_RemoteOnSave_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Begin_RemoteOnSave_Stub$MH() { return AsyncIAdviseSink_Begin_RemoteOnSave_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Finish_RemoteOnSave_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Finish_RemoteOnSave_Proxy$FUNC() { return AsyncIAdviseSink_Finish_RemoteOnSave_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Finish_RemoteOnSave_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Finish_RemoteOnSave_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink_Finish_RemoteOnSave_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Finish_RemoteOnSave_Proxy$MH() { return AsyncIAdviseSink_Finish_RemoteOnSave_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Finish_RemoteOnSave_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Finish_RemoteOnSave_Stub$FUNC() { return AsyncIAdviseSink_Finish_RemoteOnSave_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Finish_RemoteOnSave_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Finish_RemoteOnSave_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink_Finish_RemoteOnSave_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Finish_RemoteOnSave_Stub$MH() { return AsyncIAdviseSink_Finish_RemoteOnSave_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Begin_RemoteOnClose_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Begin_RemoteOnClose_Proxy$FUNC() { return AsyncIAdviseSink_Begin_RemoteOnClose_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Begin_RemoteOnClose_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Begin_RemoteOnClose_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink_Begin_RemoteOnClose_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Begin_RemoteOnClose_Proxy$MH() { return AsyncIAdviseSink_Begin_RemoteOnClose_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Begin_RemoteOnClose_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Begin_RemoteOnClose_Stub$FUNC() { return AsyncIAdviseSink_Begin_RemoteOnClose_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Begin_RemoteOnClose_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Begin_RemoteOnClose_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink_Begin_RemoteOnClose_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Begin_RemoteOnClose_Stub$MH() { return AsyncIAdviseSink_Begin_RemoteOnClose_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Finish_RemoteOnClose_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Finish_RemoteOnClose_Proxy$FUNC() { return AsyncIAdviseSink_Finish_RemoteOnClose_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Finish_RemoteOnClose_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Finish_RemoteOnClose_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink_Finish_RemoteOnClose_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Finish_RemoteOnClose_Proxy$MH() { return AsyncIAdviseSink_Finish_RemoteOnClose_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Finish_RemoteOnClose_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Finish_RemoteOnClose_Stub$FUNC() { return AsyncIAdviseSink_Finish_RemoteOnClose_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Finish_RemoteOnClose_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Finish_RemoteOnClose_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink_Finish_RemoteOnClose_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Finish_RemoteOnClose_Stub$MH() { return AsyncIAdviseSink_Finish_RemoteOnClose_Stub$MH_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0071_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0071_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0071_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0071_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0071_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0071_v0_0_c_ifspec$VH() { return __MIDL_itf_objidl_0000_0071_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0071_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0071_v0_0_c_ifspec", __MIDL_itf_objidl_0000_0071_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0071_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0071_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0071_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0071_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0071_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0071_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0071_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0071_v0_0_s_ifspec$VH() { return __MIDL_itf_objidl_0000_0071_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0071_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0071_v0_0_s_ifspec", __MIDL_itf_objidl_0000_0071_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0071_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0071_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IAdviseSink2$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IAdviseSink2$LAYOUT() { return IID_IAdviseSink2$LAYOUT_; }

    static final MemorySegment IID_IAdviseSink2$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IAdviseSink2", IID_IAdviseSink2$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IAdviseSink2$SEGMENT() { return IID_IAdviseSink2$SEGMENT_; }

    static final MemoryLayout IAdviseSink2Vtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("OnDataChange"),
        C_POINTER.withName("OnViewChange"),
        C_POINTER.withName("OnRename"),
        C_POINTER.withName("OnSave"),
        C_POINTER.withName("OnClose"),
        C_POINTER.withName("OnLinkSrcChange")
    ).withName("IAdviseSink2Vtbl");
    static final jdk.incubator.foreign.MemoryLayout IAdviseSink2Vtbl$struct$LAYOUT() { return IAdviseSink2Vtbl$struct$LAYOUT_; }

    static final MemoryLayout IAdviseSink2Vtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAdviseSink2Vtbl$QueryInterface$LAYOUT() { return IAdviseSink2Vtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IAdviseSink2Vtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IAdviseSink2Vtbl$QueryInterface$VH() { return IAdviseSink2Vtbl$QueryInterface$VH_; }

    static final MemoryLayout IAdviseSink2Vtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAdviseSink2Vtbl$AddRef$LAYOUT() { return IAdviseSink2Vtbl$AddRef$LAYOUT_; }

    static final VarHandle IAdviseSink2Vtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IAdviseSink2Vtbl$AddRef$VH() { return IAdviseSink2Vtbl$AddRef$VH_; }

    static final MemoryLayout IAdviseSink2Vtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAdviseSink2Vtbl$Release$LAYOUT() { return IAdviseSink2Vtbl$Release$LAYOUT_; }

    static final VarHandle IAdviseSink2Vtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IAdviseSink2Vtbl$Release$VH() { return IAdviseSink2Vtbl$Release$VH_; }

    static final MemoryLayout IAdviseSink2Vtbl$OnDataChange$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAdviseSink2Vtbl$OnDataChange$LAYOUT() { return IAdviseSink2Vtbl$OnDataChange$LAYOUT_; }

    static final VarHandle IAdviseSink2Vtbl$OnDataChange$VH_ = MemoryHandles.asAddressVarHandle(IAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnDataChange")));
    static final java.lang.invoke.VarHandle IAdviseSink2Vtbl$OnDataChange$VH() { return IAdviseSink2Vtbl$OnDataChange$VH_; }

    static final MemoryLayout IAdviseSink2Vtbl$OnViewChange$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAdviseSink2Vtbl$OnViewChange$LAYOUT() { return IAdviseSink2Vtbl$OnViewChange$LAYOUT_; }

    static final VarHandle IAdviseSink2Vtbl$OnViewChange$VH_ = MemoryHandles.asAddressVarHandle(IAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnViewChange")));
    static final java.lang.invoke.VarHandle IAdviseSink2Vtbl$OnViewChange$VH() { return IAdviseSink2Vtbl$OnViewChange$VH_; }

    static final MemoryLayout IAdviseSink2Vtbl$OnRename$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAdviseSink2Vtbl$OnRename$LAYOUT() { return IAdviseSink2Vtbl$OnRename$LAYOUT_; }

    static final VarHandle IAdviseSink2Vtbl$OnRename$VH_ = MemoryHandles.asAddressVarHandle(IAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnRename")));
    static final java.lang.invoke.VarHandle IAdviseSink2Vtbl$OnRename$VH() { return IAdviseSink2Vtbl$OnRename$VH_; }

    static final MemoryLayout IAdviseSink2Vtbl$OnSave$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAdviseSink2Vtbl$OnSave$LAYOUT() { return IAdviseSink2Vtbl$OnSave$LAYOUT_; }

    static final VarHandle IAdviseSink2Vtbl$OnSave$VH_ = MemoryHandles.asAddressVarHandle(IAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnSave")));
    static final java.lang.invoke.VarHandle IAdviseSink2Vtbl$OnSave$VH() { return IAdviseSink2Vtbl$OnSave$VH_; }

    static final MemoryLayout IAdviseSink2Vtbl$OnClose$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAdviseSink2Vtbl$OnClose$LAYOUT() { return IAdviseSink2Vtbl$OnClose$LAYOUT_; }

    static final VarHandle IAdviseSink2Vtbl$OnClose$VH_ = MemoryHandles.asAddressVarHandle(IAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnClose")));
    static final java.lang.invoke.VarHandle IAdviseSink2Vtbl$OnClose$VH() { return IAdviseSink2Vtbl$OnClose$VH_; }

    static final MemoryLayout IAdviseSink2Vtbl$OnLinkSrcChange$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAdviseSink2Vtbl$OnLinkSrcChange$LAYOUT() { return IAdviseSink2Vtbl$OnLinkSrcChange$LAYOUT_; }

    static final VarHandle IAdviseSink2Vtbl$OnLinkSrcChange$VH_ = MemoryHandles.asAddressVarHandle(IAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnLinkSrcChange")));
    static final java.lang.invoke.VarHandle IAdviseSink2Vtbl$OnLinkSrcChange$VH() { return IAdviseSink2Vtbl$OnLinkSrcChange$VH_; }

    static final MemoryLayout IAdviseSink2$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IAdviseSink2");
    static final jdk.incubator.foreign.MemoryLayout IAdviseSink2$struct$LAYOUT() { return IAdviseSink2$struct$LAYOUT_; }

    static final MemoryLayout IAdviseSink2$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAdviseSink2$lpVtbl$LAYOUT() { return IAdviseSink2$lpVtbl$LAYOUT_; }

    static final VarHandle IAdviseSink2$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IAdviseSink2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IAdviseSink2$lpVtbl$VH() { return IAdviseSink2$lpVtbl$VH_; }

    static final FunctionDescriptor IAdviseSink2_RemoteOnLinkSrcChange_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink2_RemoteOnLinkSrcChange_Proxy$FUNC() { return IAdviseSink2_RemoteOnLinkSrcChange_Proxy$FUNC_; }

    static final MethodHandle IAdviseSink2_RemoteOnLinkSrcChange_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink2_RemoteOnLinkSrcChange_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IAdviseSink2_RemoteOnLinkSrcChange_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink2_RemoteOnLinkSrcChange_Proxy$MH() { return IAdviseSink2_RemoteOnLinkSrcChange_Proxy$MH_; }

    static final FunctionDescriptor IAdviseSink2_RemoteOnLinkSrcChange_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink2_RemoteOnLinkSrcChange_Stub$FUNC() { return IAdviseSink2_RemoteOnLinkSrcChange_Stub$FUNC_; }

    static final MethodHandle IAdviseSink2_RemoteOnLinkSrcChange_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink2_RemoteOnLinkSrcChange_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IAdviseSink2_RemoteOnLinkSrcChange_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink2_RemoteOnLinkSrcChange_Stub$MH() { return IAdviseSink2_RemoteOnLinkSrcChange_Stub$MH_; }

    static final MemoryLayout IID_AsyncIAdviseSink2$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_AsyncIAdviseSink2$LAYOUT() { return IID_AsyncIAdviseSink2$LAYOUT_; }

    static final MemorySegment IID_AsyncIAdviseSink2$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_AsyncIAdviseSink2", IID_AsyncIAdviseSink2$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_AsyncIAdviseSink2$SEGMENT() { return IID_AsyncIAdviseSink2$SEGMENT_; }

    static final MemoryLayout AsyncIAdviseSink2Vtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Begin_OnDataChange"),
        C_POINTER.withName("Finish_OnDataChange"),
        C_POINTER.withName("Begin_OnViewChange"),
        C_POINTER.withName("Finish_OnViewChange"),
        C_POINTER.withName("Begin_OnRename"),
        C_POINTER.withName("Finish_OnRename"),
        C_POINTER.withName("Begin_OnSave"),
        C_POINTER.withName("Finish_OnSave"),
        C_POINTER.withName("Begin_OnClose"),
        C_POINTER.withName("Finish_OnClose"),
        C_POINTER.withName("Begin_OnLinkSrcChange"),
        C_POINTER.withName("Finish_OnLinkSrcChange")
    ).withName("AsyncIAdviseSink2Vtbl");
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSink2Vtbl$struct$LAYOUT() { return AsyncIAdviseSink2Vtbl$struct$LAYOUT_; }

    static final MemoryLayout AsyncIAdviseSink2Vtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSink2Vtbl$QueryInterface$LAYOUT() { return AsyncIAdviseSink2Vtbl$QueryInterface$LAYOUT_; }

    static final VarHandle AsyncIAdviseSink2Vtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSink2Vtbl$QueryInterface$VH() { return AsyncIAdviseSink2Vtbl$QueryInterface$VH_; }

    static final MemoryLayout AsyncIAdviseSink2Vtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSink2Vtbl$AddRef$LAYOUT() { return AsyncIAdviseSink2Vtbl$AddRef$LAYOUT_; }

    static final VarHandle AsyncIAdviseSink2Vtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSink2Vtbl$AddRef$VH() { return AsyncIAdviseSink2Vtbl$AddRef$VH_; }

    static final MemoryLayout AsyncIAdviseSink2Vtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSink2Vtbl$Release$LAYOUT() { return AsyncIAdviseSink2Vtbl$Release$LAYOUT_; }

    static final VarHandle AsyncIAdviseSink2Vtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSink2Vtbl$Release$VH() { return AsyncIAdviseSink2Vtbl$Release$VH_; }

    static final MemoryLayout AsyncIAdviseSink2Vtbl$Begin_OnDataChange$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSink2Vtbl$Begin_OnDataChange$LAYOUT() { return AsyncIAdviseSink2Vtbl$Begin_OnDataChange$LAYOUT_; }

    static final VarHandle AsyncIAdviseSink2Vtbl$Begin_OnDataChange$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Begin_OnDataChange")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSink2Vtbl$Begin_OnDataChange$VH() { return AsyncIAdviseSink2Vtbl$Begin_OnDataChange$VH_; }

    static final MemoryLayout AsyncIAdviseSink2Vtbl$Finish_OnDataChange$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSink2Vtbl$Finish_OnDataChange$LAYOUT() { return AsyncIAdviseSink2Vtbl$Finish_OnDataChange$LAYOUT_; }

    static final VarHandle AsyncIAdviseSink2Vtbl$Finish_OnDataChange$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Finish_OnDataChange")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSink2Vtbl$Finish_OnDataChange$VH() { return AsyncIAdviseSink2Vtbl$Finish_OnDataChange$VH_; }

    static final MemoryLayout AsyncIAdviseSink2Vtbl$Begin_OnViewChange$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSink2Vtbl$Begin_OnViewChange$LAYOUT() { return AsyncIAdviseSink2Vtbl$Begin_OnViewChange$LAYOUT_; }

    static final VarHandle AsyncIAdviseSink2Vtbl$Begin_OnViewChange$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Begin_OnViewChange")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSink2Vtbl$Begin_OnViewChange$VH() { return AsyncIAdviseSink2Vtbl$Begin_OnViewChange$VH_; }

    static final MemoryLayout AsyncIAdviseSink2Vtbl$Finish_OnViewChange$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSink2Vtbl$Finish_OnViewChange$LAYOUT() { return AsyncIAdviseSink2Vtbl$Finish_OnViewChange$LAYOUT_; }

    static final VarHandle AsyncIAdviseSink2Vtbl$Finish_OnViewChange$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Finish_OnViewChange")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSink2Vtbl$Finish_OnViewChange$VH() { return AsyncIAdviseSink2Vtbl$Finish_OnViewChange$VH_; }

    static final MemoryLayout AsyncIAdviseSink2Vtbl$Begin_OnRename$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSink2Vtbl$Begin_OnRename$LAYOUT() { return AsyncIAdviseSink2Vtbl$Begin_OnRename$LAYOUT_; }

    static final VarHandle AsyncIAdviseSink2Vtbl$Begin_OnRename$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Begin_OnRename")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSink2Vtbl$Begin_OnRename$VH() { return AsyncIAdviseSink2Vtbl$Begin_OnRename$VH_; }

    static final MemoryLayout AsyncIAdviseSink2Vtbl$Finish_OnRename$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSink2Vtbl$Finish_OnRename$LAYOUT() { return AsyncIAdviseSink2Vtbl$Finish_OnRename$LAYOUT_; }

    static final VarHandle AsyncIAdviseSink2Vtbl$Finish_OnRename$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Finish_OnRename")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSink2Vtbl$Finish_OnRename$VH() { return AsyncIAdviseSink2Vtbl$Finish_OnRename$VH_; }

    static final MemoryLayout AsyncIAdviseSink2Vtbl$Begin_OnSave$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSink2Vtbl$Begin_OnSave$LAYOUT() { return AsyncIAdviseSink2Vtbl$Begin_OnSave$LAYOUT_; }

    static final VarHandle AsyncIAdviseSink2Vtbl$Begin_OnSave$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Begin_OnSave")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSink2Vtbl$Begin_OnSave$VH() { return AsyncIAdviseSink2Vtbl$Begin_OnSave$VH_; }

    static final MemoryLayout AsyncIAdviseSink2Vtbl$Finish_OnSave$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSink2Vtbl$Finish_OnSave$LAYOUT() { return AsyncIAdviseSink2Vtbl$Finish_OnSave$LAYOUT_; }

    static final VarHandle AsyncIAdviseSink2Vtbl$Finish_OnSave$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Finish_OnSave")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSink2Vtbl$Finish_OnSave$VH() { return AsyncIAdviseSink2Vtbl$Finish_OnSave$VH_; }

    static final MemoryLayout AsyncIAdviseSink2Vtbl$Begin_OnClose$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSink2Vtbl$Begin_OnClose$LAYOUT() { return AsyncIAdviseSink2Vtbl$Begin_OnClose$LAYOUT_; }

    static final VarHandle AsyncIAdviseSink2Vtbl$Begin_OnClose$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Begin_OnClose")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSink2Vtbl$Begin_OnClose$VH() { return AsyncIAdviseSink2Vtbl$Begin_OnClose$VH_; }

    static final MemoryLayout AsyncIAdviseSink2Vtbl$Finish_OnClose$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSink2Vtbl$Finish_OnClose$LAYOUT() { return AsyncIAdviseSink2Vtbl$Finish_OnClose$LAYOUT_; }

    static final VarHandle AsyncIAdviseSink2Vtbl$Finish_OnClose$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Finish_OnClose")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSink2Vtbl$Finish_OnClose$VH() { return AsyncIAdviseSink2Vtbl$Finish_OnClose$VH_; }

    static final MemoryLayout AsyncIAdviseSink2Vtbl$Begin_OnLinkSrcChange$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSink2Vtbl$Begin_OnLinkSrcChange$LAYOUT() { return AsyncIAdviseSink2Vtbl$Begin_OnLinkSrcChange$LAYOUT_; }

    static final VarHandle AsyncIAdviseSink2Vtbl$Begin_OnLinkSrcChange$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Begin_OnLinkSrcChange")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSink2Vtbl$Begin_OnLinkSrcChange$VH() { return AsyncIAdviseSink2Vtbl$Begin_OnLinkSrcChange$VH_; }

    static final MemoryLayout AsyncIAdviseSink2Vtbl$Finish_OnLinkSrcChange$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSink2Vtbl$Finish_OnLinkSrcChange$LAYOUT() { return AsyncIAdviseSink2Vtbl$Finish_OnLinkSrcChange$LAYOUT_; }

    static final VarHandle AsyncIAdviseSink2Vtbl$Finish_OnLinkSrcChange$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSink2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Finish_OnLinkSrcChange")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSink2Vtbl$Finish_OnLinkSrcChange$VH() { return AsyncIAdviseSink2Vtbl$Finish_OnLinkSrcChange$VH_; }

    static final MemoryLayout AsyncIAdviseSink2$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("AsyncIAdviseSink2");
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSink2$struct$LAYOUT() { return AsyncIAdviseSink2$struct$LAYOUT_; }

    static final MemoryLayout AsyncIAdviseSink2$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIAdviseSink2$lpVtbl$LAYOUT() { return AsyncIAdviseSink2$lpVtbl$LAYOUT_; }

    static final VarHandle AsyncIAdviseSink2$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(AsyncIAdviseSink2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle AsyncIAdviseSink2$lpVtbl$VH() { return AsyncIAdviseSink2$lpVtbl$VH_; }

    static final FunctionDescriptor AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Proxy$FUNC() { return AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Proxy$MH() { return AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Stub$FUNC() { return AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Stub$MH() { return AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Proxy$FUNC() { return AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Proxy$MH() { return AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Stub$FUNC() { return AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Stub$MH() { return AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Stub$MH_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0072_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0072_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0072_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0072_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0072_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0072_v0_0_c_ifspec$VH() { return __MIDL_itf_objidl_0000_0072_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0072_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0072_v0_0_c_ifspec", __MIDL_itf_objidl_0000_0072_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0072_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0072_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidl_0000_0072_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidl_0000_0072_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidl_0000_0072_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidl_0000_0072_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidl_0000_0072_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidl_0000_0072_v0_0_s_ifspec$VH() { return __MIDL_itf_objidl_0000_0072_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidl_0000_0072_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidl_0000_0072_v0_0_s_ifspec", __MIDL_itf_objidl_0000_0072_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidl_0000_0072_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidl_0000_0072_v0_0_s_ifspec$SEGMENT_; }

    static final int DATADIR_GET() { return (int)1L; }

    static final int DATADIR_SET() { return (int)2L; }

    static final MemoryLayout IID_IDataObject$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IDataObject$LAYOUT() { return IID_IDataObject$LAYOUT_; }

    static final MemorySegment IID_IDataObject$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IDataObject", IID_IDataObject$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IDataObject$SEGMENT() { return IID_IDataObject$SEGMENT_; }

    static final MemoryLayout IDataObjectVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetData"),
        C_POINTER.withName("GetDataHere"),
        C_POINTER.withName("QueryGetData"),
        C_POINTER.withName("GetCanonicalFormatEtc"),
        C_POINTER.withName("SetData"),
        C_POINTER.withName("EnumFormatEtc"),
        C_POINTER.withName("DAdvise"),
        C_POINTER.withName("DUnadvise"),
        C_POINTER.withName("EnumDAdvise")
    ).withName("IDataObjectVtbl");
    static final jdk.incubator.foreign.MemoryLayout IDataObjectVtbl$struct$LAYOUT() { return IDataObjectVtbl$struct$LAYOUT_; }

    static final MemoryLayout IDataObjectVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataObjectVtbl$QueryInterface$LAYOUT() { return IDataObjectVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IDataObjectVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IDataObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IDataObjectVtbl$QueryInterface$VH() { return IDataObjectVtbl$QueryInterface$VH_; }

    static final MemoryLayout IDataObjectVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataObjectVtbl$AddRef$LAYOUT() { return IDataObjectVtbl$AddRef$LAYOUT_; }

    static final VarHandle IDataObjectVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IDataObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IDataObjectVtbl$AddRef$VH() { return IDataObjectVtbl$AddRef$VH_; }

}

