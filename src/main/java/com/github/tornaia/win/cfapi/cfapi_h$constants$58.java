// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$58 extends cfapi_h$constants$57 {

    /* package-private */ cfapi_h$constants$58() {}
    static final MemoryLayout _HYPER_SIZEDARR$pData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _HYPER_SIZEDARR$pData$LAYOUT() { return _HYPER_SIZEDARR$pData$LAYOUT_; }

    static final VarHandle _HYPER_SIZEDARR$pData$VH_ = MemoryHandles.asAddressVarHandle(_HYPER_SIZEDARR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pData")));
    static final java.lang.invoke.VarHandle _HYPER_SIZEDARR$pData$VH() { return _HYPER_SIZEDARR$pData$VH_; }

    static final MemoryLayout IWinTypesBase_v0_1_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinTypesBase_v0_1_c_ifspec$LAYOUT() { return IWinTypesBase_v0_1_c_ifspec$LAYOUT_; }

    static final VarHandle IWinTypesBase_v0_1_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(IWinTypesBase_v0_1_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle IWinTypesBase_v0_1_c_ifspec$VH() { return IWinTypesBase_v0_1_c_ifspec$VH_; }

    static final MemorySegment IWinTypesBase_v0_1_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IWinTypesBase_v0_1_c_ifspec", IWinTypesBase_v0_1_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IWinTypesBase_v0_1_c_ifspec$SEGMENT() { return IWinTypesBase_v0_1_c_ifspec$SEGMENT_; }

    static final MemoryLayout IWinTypesBase_v0_1_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinTypesBase_v0_1_s_ifspec$LAYOUT() { return IWinTypesBase_v0_1_s_ifspec$LAYOUT_; }

    static final VarHandle IWinTypesBase_v0_1_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(IWinTypesBase_v0_1_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle IWinTypesBase_v0_1_s_ifspec$VH() { return IWinTypesBase_v0_1_s_ifspec$VH_; }

    static final MemorySegment IWinTypesBase_v0_1_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IWinTypesBase_v0_1_s_ifspec", IWinTypesBase_v0_1_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IWinTypesBase_v0_1_s_ifspec$SEGMENT() { return IWinTypesBase_v0_1_s_ifspec$SEGMENT_; }

    static final MemoryLayout tagBLOB$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pBlobData")
    ).withName("tagBLOB");
    static final jdk.incubator.foreign.MemoryLayout tagBLOB$struct$LAYOUT() { return tagBLOB$struct$LAYOUT_; }

    static final MemoryLayout tagBLOB$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagBLOB$cbSize$LAYOUT() { return tagBLOB$cbSize$LAYOUT_; }

    static final VarHandle tagBLOB$cbSize$VH_ = tagBLOB$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle tagBLOB$cbSize$VH() { return tagBLOB$cbSize$VH_; }

    static final MemoryLayout tagBLOB$pBlobData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagBLOB$pBlobData$LAYOUT() { return tagBLOB$pBlobData$LAYOUT_; }

    static final VarHandle tagBLOB$pBlobData$VH_ = MemoryHandles.asAddressVarHandle(tagBLOB$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pBlobData")));
    static final java.lang.invoke.VarHandle tagBLOB$pBlobData$VH() { return tagBLOB$pBlobData$VH_; }

    static final MemoryLayout __MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec$VH() { return __MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec", __MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec$VH() { return __MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec", __MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec$VH() { return __MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec", __MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec$VH() { return __MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec", __MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout tagRemHGLOBAL$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("fNullHGlobal"),
        C_LONG.withName("cbData"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("data"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("tagRemHGLOBAL");
    static final jdk.incubator.foreign.MemoryLayout tagRemHGLOBAL$struct$LAYOUT() { return tagRemHGLOBAL$struct$LAYOUT_; }

    static final MemoryLayout tagRemHGLOBAL$fNullHGlobal$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRemHGLOBAL$fNullHGlobal$LAYOUT() { return tagRemHGLOBAL$fNullHGlobal$LAYOUT_; }

    static final VarHandle tagRemHGLOBAL$fNullHGlobal$VH_ = tagRemHGLOBAL$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fNullHGlobal"));
    static final java.lang.invoke.VarHandle tagRemHGLOBAL$fNullHGlobal$VH() { return tagRemHGLOBAL$fNullHGlobal$VH_; }

    static final MemoryLayout tagRemHGLOBAL$cbData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRemHGLOBAL$cbData$LAYOUT() { return tagRemHGLOBAL$cbData$LAYOUT_; }

    static final VarHandle tagRemHGLOBAL$cbData$VH_ = tagRemHGLOBAL$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    static final java.lang.invoke.VarHandle tagRemHGLOBAL$cbData$VH() { return tagRemHGLOBAL$cbData$VH_; }

    static final MemoryLayout tagRemHMETAFILEPICT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("mm"),
        C_LONG.withName("xExt"),
        C_LONG.withName("yExt"),
        C_LONG.withName("cbData"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("data"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("tagRemHMETAFILEPICT");
    static final jdk.incubator.foreign.MemoryLayout tagRemHMETAFILEPICT$struct$LAYOUT() { return tagRemHMETAFILEPICT$struct$LAYOUT_; }

    static final MemoryLayout tagRemHMETAFILEPICT$mm$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRemHMETAFILEPICT$mm$LAYOUT() { return tagRemHMETAFILEPICT$mm$LAYOUT_; }

    static final VarHandle tagRemHMETAFILEPICT$mm$VH_ = tagRemHMETAFILEPICT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("mm"));
    static final java.lang.invoke.VarHandle tagRemHMETAFILEPICT$mm$VH() { return tagRemHMETAFILEPICT$mm$VH_; }

    static final MemoryLayout tagRemHMETAFILEPICT$xExt$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRemHMETAFILEPICT$xExt$LAYOUT() { return tagRemHMETAFILEPICT$xExt$LAYOUT_; }

    static final VarHandle tagRemHMETAFILEPICT$xExt$VH_ = tagRemHMETAFILEPICT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("xExt"));
    static final java.lang.invoke.VarHandle tagRemHMETAFILEPICT$xExt$VH() { return tagRemHMETAFILEPICT$xExt$VH_; }

    static final MemoryLayout tagRemHMETAFILEPICT$yExt$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRemHMETAFILEPICT$yExt$LAYOUT() { return tagRemHMETAFILEPICT$yExt$LAYOUT_; }

    static final VarHandle tagRemHMETAFILEPICT$yExt$VH_ = tagRemHMETAFILEPICT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("yExt"));
    static final java.lang.invoke.VarHandle tagRemHMETAFILEPICT$yExt$VH() { return tagRemHMETAFILEPICT$yExt$VH_; }

    static final MemoryLayout tagRemHMETAFILEPICT$cbData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRemHMETAFILEPICT$cbData$LAYOUT() { return tagRemHMETAFILEPICT$cbData$LAYOUT_; }

    static final VarHandle tagRemHMETAFILEPICT$cbData$VH_ = tagRemHMETAFILEPICT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    static final java.lang.invoke.VarHandle tagRemHMETAFILEPICT$cbData$VH() { return tagRemHMETAFILEPICT$cbData$VH_; }

    static final MemoryLayout tagRemHENHMETAFILE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbData"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("data"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("tagRemHENHMETAFILE");
    static final jdk.incubator.foreign.MemoryLayout tagRemHENHMETAFILE$struct$LAYOUT() { return tagRemHENHMETAFILE$struct$LAYOUT_; }

    static final MemoryLayout tagRemHENHMETAFILE$cbData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRemHENHMETAFILE$cbData$LAYOUT() { return tagRemHENHMETAFILE$cbData$LAYOUT_; }

    static final VarHandle tagRemHENHMETAFILE$cbData$VH_ = tagRemHENHMETAFILE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    static final java.lang.invoke.VarHandle tagRemHENHMETAFILE$cbData$VH() { return tagRemHENHMETAFILE$cbData$VH_; }

    static final MemoryLayout tagRemHBITMAP$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbData"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("data"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("tagRemHBITMAP");
    static final jdk.incubator.foreign.MemoryLayout tagRemHBITMAP$struct$LAYOUT() { return tagRemHBITMAP$struct$LAYOUT_; }

    static final MemoryLayout tagRemHBITMAP$cbData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRemHBITMAP$cbData$LAYOUT() { return tagRemHBITMAP$cbData$LAYOUT_; }

    static final VarHandle tagRemHBITMAP$cbData$VH_ = tagRemHBITMAP$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    static final java.lang.invoke.VarHandle tagRemHBITMAP$cbData$VH() { return tagRemHBITMAP$cbData$VH_; }

    static final MemoryLayout tagRemHPALETTE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbData"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("data"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("tagRemHPALETTE");
    static final jdk.incubator.foreign.MemoryLayout tagRemHPALETTE$struct$LAYOUT() { return tagRemHPALETTE$struct$LAYOUT_; }

    static final MemoryLayout tagRemHPALETTE$cbData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRemHPALETTE$cbData$LAYOUT() { return tagRemHPALETTE$cbData$LAYOUT_; }

    static final VarHandle tagRemHPALETTE$cbData$VH_ = tagRemHPALETTE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    static final java.lang.invoke.VarHandle tagRemHPALETTE$cbData$VH() { return tagRemHPALETTE$cbData$VH_; }

    static final MemoryLayout tagRemBRUSH$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbData"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("data"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("tagRemBRUSH");
    static final jdk.incubator.foreign.MemoryLayout tagRemBRUSH$struct$LAYOUT() { return tagRemBRUSH$struct$LAYOUT_; }

    static final MemoryLayout tagRemBRUSH$cbData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRemBRUSH$cbData$LAYOUT() { return tagRemBRUSH$cbData$LAYOUT_; }

    static final VarHandle tagRemBRUSH$cbData$VH_ = tagRemBRUSH$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    static final java.lang.invoke.VarHandle tagRemBRUSH$cbData$VH() { return tagRemBRUSH$cbData$VH_; }

    static final int DVASPECT_CONTENT() { return (int)1L; }

    static final int DVASPECT_THUMBNAIL() { return (int)2L; }

    static final int DVASPECT_ICON() { return (int)4L; }

    static final int DVASPECT_DOCPRINT() { return (int)8L; }

    static final int STGC_DEFAULT() { return (int)0L; }

    static final int STGC_OVERWRITE() { return (int)1L; }

    static final int STGC_ONLYIFCURRENT() { return (int)2L; }

    static final int STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE() { return (int)4L; }

    static final int STGC_CONSOLIDATE() { return (int)8L; }

    static final int STGMOVE_MOVE() { return (int)0L; }

    static final int STGMOVE_COPY() { return (int)1L; }

    static final int STGMOVE_SHALLOWCOPY() { return (int)2L; }

    static final int STATFLAG_DEFAULT() { return (int)0L; }

    static final int STATFLAG_NONAME() { return (int)1L; }

    static final int STATFLAG_NOOPEN() { return (int)2L; }

    static final MemoryLayout _userCLIPFORMAT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("fContext"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_LONG.withName("dwValue"),
            C_POINTER.withName("pwszName")
        ).withName("u")
    ).withName("_userCLIPFORMAT");
    static final jdk.incubator.foreign.MemoryLayout _userCLIPFORMAT$struct$LAYOUT() { return _userCLIPFORMAT$struct$LAYOUT_; }

    static final MemoryLayout _userCLIPFORMAT$fContext$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userCLIPFORMAT$fContext$LAYOUT() { return _userCLIPFORMAT$fContext$LAYOUT_; }

    static final VarHandle _userCLIPFORMAT$fContext$VH_ = _userCLIPFORMAT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fContext"));
    static final java.lang.invoke.VarHandle _userCLIPFORMAT$fContext$VH() { return _userCLIPFORMAT$fContext$VH_; }

    static final MemoryLayout _userCLIPFORMAT$__MIDL_IWinTypes_0001$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_LONG.withName("dwValue"),
        C_POINTER.withName("pwszName")
    ).withName("__MIDL_IWinTypes_0001");
    static final jdk.incubator.foreign.MemoryLayout _userCLIPFORMAT$__MIDL_IWinTypes_0001$union$LAYOUT() { return _userCLIPFORMAT$__MIDL_IWinTypes_0001$union$LAYOUT_; }

    static final MemoryLayout _userCLIPFORMAT$__MIDL_IWinTypes_0001$dwValue$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userCLIPFORMAT$__MIDL_IWinTypes_0001$dwValue$LAYOUT() { return _userCLIPFORMAT$__MIDL_IWinTypes_0001$dwValue$LAYOUT_; }

    static final VarHandle _userCLIPFORMAT$__MIDL_IWinTypes_0001$dwValue$VH_ = _userCLIPFORMAT$__MIDL_IWinTypes_0001$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwValue"));
    static final java.lang.invoke.VarHandle _userCLIPFORMAT$__MIDL_IWinTypes_0001$dwValue$VH() { return _userCLIPFORMAT$__MIDL_IWinTypes_0001$dwValue$VH_; }

    static final MemoryLayout _userCLIPFORMAT$__MIDL_IWinTypes_0001$pwszName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _userCLIPFORMAT$__MIDL_IWinTypes_0001$pwszName$LAYOUT() { return _userCLIPFORMAT$__MIDL_IWinTypes_0001$pwszName$LAYOUT_; }

    static final VarHandle _userCLIPFORMAT$__MIDL_IWinTypes_0001$pwszName$VH_ = MemoryHandles.asAddressVarHandle(_userCLIPFORMAT$__MIDL_IWinTypes_0001$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszName")));
    static final java.lang.invoke.VarHandle _userCLIPFORMAT$__MIDL_IWinTypes_0001$pwszName$VH() { return _userCLIPFORMAT$__MIDL_IWinTypes_0001$pwszName$VH_; }

    static final MemoryLayout _GDI_NONREMOTE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("fContext"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_LONG.withName("hInproc"),
            C_POINTER.withName("hRemote")
        ).withName("u")
    ).withName("_GDI_NONREMOTE");
    static final jdk.incubator.foreign.MemoryLayout _GDI_NONREMOTE$struct$LAYOUT() { return _GDI_NONREMOTE$struct$LAYOUT_; }

    static final MemoryLayout _GDI_NONREMOTE$fContext$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _GDI_NONREMOTE$fContext$LAYOUT() { return _GDI_NONREMOTE$fContext$LAYOUT_; }

    static final VarHandle _GDI_NONREMOTE$fContext$VH_ = _GDI_NONREMOTE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fContext"));
    static final java.lang.invoke.VarHandle _GDI_NONREMOTE$fContext$VH() { return _GDI_NONREMOTE$fContext$VH_; }

    static final MemoryLayout _GDI_NONREMOTE$__MIDL_IWinTypes_0002$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_LONG.withName("hInproc"),
        C_POINTER.withName("hRemote")
    ).withName("__MIDL_IWinTypes_0002");
    static final jdk.incubator.foreign.MemoryLayout _GDI_NONREMOTE$__MIDL_IWinTypes_0002$union$LAYOUT() { return _GDI_NONREMOTE$__MIDL_IWinTypes_0002$union$LAYOUT_; }

    static final MemoryLayout _GDI_NONREMOTE$__MIDL_IWinTypes_0002$hInproc$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _GDI_NONREMOTE$__MIDL_IWinTypes_0002$hInproc$LAYOUT() { return _GDI_NONREMOTE$__MIDL_IWinTypes_0002$hInproc$LAYOUT_; }

    static final VarHandle _GDI_NONREMOTE$__MIDL_IWinTypes_0002$hInproc$VH_ = _GDI_NONREMOTE$__MIDL_IWinTypes_0002$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("hInproc"));
    static final java.lang.invoke.VarHandle _GDI_NONREMOTE$__MIDL_IWinTypes_0002$hInproc$VH() { return _GDI_NONREMOTE$__MIDL_IWinTypes_0002$hInproc$VH_; }

    static final MemoryLayout _GDI_NONREMOTE$__MIDL_IWinTypes_0002$hRemote$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _GDI_NONREMOTE$__MIDL_IWinTypes_0002$hRemote$LAYOUT() { return _GDI_NONREMOTE$__MIDL_IWinTypes_0002$hRemote$LAYOUT_; }

    static final VarHandle _GDI_NONREMOTE$__MIDL_IWinTypes_0002$hRemote$VH_ = MemoryHandles.asAddressVarHandle(_GDI_NONREMOTE$__MIDL_IWinTypes_0002$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hRemote")));
    static final java.lang.invoke.VarHandle _GDI_NONREMOTE$__MIDL_IWinTypes_0002$hRemote$VH() { return _GDI_NONREMOTE$__MIDL_IWinTypes_0002$hRemote$VH_; }

    static final MemoryLayout _userHGLOBAL$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("fContext"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_LONG.withName("hInproc"),
            C_POINTER.withName("hRemote"),
            C_LONGLONG.withName("hInproc64")
        ).withName("u")
    ).withName("_userHGLOBAL");
    static final jdk.incubator.foreign.MemoryLayout _userHGLOBAL$struct$LAYOUT() { return _userHGLOBAL$struct$LAYOUT_; }

    static final MemoryLayout _userHGLOBAL$fContext$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userHGLOBAL$fContext$LAYOUT() { return _userHGLOBAL$fContext$LAYOUT_; }

    static final VarHandle _userHGLOBAL$fContext$VH_ = _userHGLOBAL$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fContext"));
    static final java.lang.invoke.VarHandle _userHGLOBAL$fContext$VH() { return _userHGLOBAL$fContext$VH_; }

    static final MemoryLayout _userHGLOBAL$__MIDL_IWinTypes_0003$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_LONG.withName("hInproc"),
        C_POINTER.withName("hRemote"),
        C_LONGLONG.withName("hInproc64")
    ).withName("__MIDL_IWinTypes_0003");
    static final jdk.incubator.foreign.MemoryLayout _userHGLOBAL$__MIDL_IWinTypes_0003$union$LAYOUT() { return _userHGLOBAL$__MIDL_IWinTypes_0003$union$LAYOUT_; }

    static final MemoryLayout _userHGLOBAL$__MIDL_IWinTypes_0003$hInproc$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userHGLOBAL$__MIDL_IWinTypes_0003$hInproc$LAYOUT() { return _userHGLOBAL$__MIDL_IWinTypes_0003$hInproc$LAYOUT_; }

    static final VarHandle _userHGLOBAL$__MIDL_IWinTypes_0003$hInproc$VH_ = _userHGLOBAL$__MIDL_IWinTypes_0003$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("hInproc"));
    static final java.lang.invoke.VarHandle _userHGLOBAL$__MIDL_IWinTypes_0003$hInproc$VH() { return _userHGLOBAL$__MIDL_IWinTypes_0003$hInproc$VH_; }

    static final MemoryLayout _userHGLOBAL$__MIDL_IWinTypes_0003$hRemote$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _userHGLOBAL$__MIDL_IWinTypes_0003$hRemote$LAYOUT() { return _userHGLOBAL$__MIDL_IWinTypes_0003$hRemote$LAYOUT_; }

    static final VarHandle _userHGLOBAL$__MIDL_IWinTypes_0003$hRemote$VH_ = MemoryHandles.asAddressVarHandle(_userHGLOBAL$__MIDL_IWinTypes_0003$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hRemote")));
    static final java.lang.invoke.VarHandle _userHGLOBAL$__MIDL_IWinTypes_0003$hRemote$VH() { return _userHGLOBAL$__MIDL_IWinTypes_0003$hRemote$VH_; }

    static final MemoryLayout _userHGLOBAL$__MIDL_IWinTypes_0003$hInproc64$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _userHGLOBAL$__MIDL_IWinTypes_0003$hInproc64$LAYOUT() { return _userHGLOBAL$__MIDL_IWinTypes_0003$hInproc64$LAYOUT_; }

    static final VarHandle _userHGLOBAL$__MIDL_IWinTypes_0003$hInproc64$VH_ = _userHGLOBAL$__MIDL_IWinTypes_0003$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInproc64"));
    static final java.lang.invoke.VarHandle _userHGLOBAL$__MIDL_IWinTypes_0003$hInproc64$VH() { return _userHGLOBAL$__MIDL_IWinTypes_0003$hInproc64$VH_; }

    static final MemoryLayout _userHMETAFILE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("fContext"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_LONG.withName("hInproc"),
            C_POINTER.withName("hRemote"),
            C_LONGLONG.withName("hInproc64")
        ).withName("u")
    ).withName("_userHMETAFILE");
    static final jdk.incubator.foreign.MemoryLayout _userHMETAFILE$struct$LAYOUT() { return _userHMETAFILE$struct$LAYOUT_; }

    static final MemoryLayout _userHMETAFILE$fContext$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userHMETAFILE$fContext$LAYOUT() { return _userHMETAFILE$fContext$LAYOUT_; }

    static final VarHandle _userHMETAFILE$fContext$VH_ = _userHMETAFILE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fContext"));
    static final java.lang.invoke.VarHandle _userHMETAFILE$fContext$VH() { return _userHMETAFILE$fContext$VH_; }

    static final MemoryLayout _userHMETAFILE$__MIDL_IWinTypes_0004$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_LONG.withName("hInproc"),
        C_POINTER.withName("hRemote"),
        C_LONGLONG.withName("hInproc64")
    ).withName("__MIDL_IWinTypes_0004");
    static final jdk.incubator.foreign.MemoryLayout _userHMETAFILE$__MIDL_IWinTypes_0004$union$LAYOUT() { return _userHMETAFILE$__MIDL_IWinTypes_0004$union$LAYOUT_; }

    static final MemoryLayout _userHMETAFILE$__MIDL_IWinTypes_0004$hInproc$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userHMETAFILE$__MIDL_IWinTypes_0004$hInproc$LAYOUT() { return _userHMETAFILE$__MIDL_IWinTypes_0004$hInproc$LAYOUT_; }

    static final VarHandle _userHMETAFILE$__MIDL_IWinTypes_0004$hInproc$VH_ = _userHMETAFILE$__MIDL_IWinTypes_0004$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("hInproc"));
    static final java.lang.invoke.VarHandle _userHMETAFILE$__MIDL_IWinTypes_0004$hInproc$VH() { return _userHMETAFILE$__MIDL_IWinTypes_0004$hInproc$VH_; }

    static final MemoryLayout _userHMETAFILE$__MIDL_IWinTypes_0004$hRemote$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _userHMETAFILE$__MIDL_IWinTypes_0004$hRemote$LAYOUT() { return _userHMETAFILE$__MIDL_IWinTypes_0004$hRemote$LAYOUT_; }

    static final VarHandle _userHMETAFILE$__MIDL_IWinTypes_0004$hRemote$VH_ = MemoryHandles.asAddressVarHandle(_userHMETAFILE$__MIDL_IWinTypes_0004$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hRemote")));
    static final java.lang.invoke.VarHandle _userHMETAFILE$__MIDL_IWinTypes_0004$hRemote$VH() { return _userHMETAFILE$__MIDL_IWinTypes_0004$hRemote$VH_; }

    static final MemoryLayout _userHMETAFILE$__MIDL_IWinTypes_0004$hInproc64$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _userHMETAFILE$__MIDL_IWinTypes_0004$hInproc64$LAYOUT() { return _userHMETAFILE$__MIDL_IWinTypes_0004$hInproc64$LAYOUT_; }

    static final VarHandle _userHMETAFILE$__MIDL_IWinTypes_0004$hInproc64$VH_ = _userHMETAFILE$__MIDL_IWinTypes_0004$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInproc64"));
    static final java.lang.invoke.VarHandle _userHMETAFILE$__MIDL_IWinTypes_0004$hInproc64$VH() { return _userHMETAFILE$__MIDL_IWinTypes_0004$hInproc64$VH_; }

    static final MemoryLayout _remoteMETAFILEPICT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("mm"),
        C_LONG.withName("xExt"),
        C_LONG.withName("yExt"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hMF")
    ).withName("_remoteMETAFILEPICT");
    static final jdk.incubator.foreign.MemoryLayout _remoteMETAFILEPICT$struct$LAYOUT() { return _remoteMETAFILEPICT$struct$LAYOUT_; }

    static final MemoryLayout _remoteMETAFILEPICT$mm$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _remoteMETAFILEPICT$mm$LAYOUT() { return _remoteMETAFILEPICT$mm$LAYOUT_; }

    static final VarHandle _remoteMETAFILEPICT$mm$VH_ = _remoteMETAFILEPICT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("mm"));
    static final java.lang.invoke.VarHandle _remoteMETAFILEPICT$mm$VH() { return _remoteMETAFILEPICT$mm$VH_; }

    static final MemoryLayout _remoteMETAFILEPICT$xExt$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _remoteMETAFILEPICT$xExt$LAYOUT() { return _remoteMETAFILEPICT$xExt$LAYOUT_; }

    static final VarHandle _remoteMETAFILEPICT$xExt$VH_ = _remoteMETAFILEPICT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("xExt"));
    static final java.lang.invoke.VarHandle _remoteMETAFILEPICT$xExt$VH() { return _remoteMETAFILEPICT$xExt$VH_; }

    static final MemoryLayout _remoteMETAFILEPICT$yExt$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _remoteMETAFILEPICT$yExt$LAYOUT() { return _remoteMETAFILEPICT$yExt$LAYOUT_; }

    static final VarHandle _remoteMETAFILEPICT$yExt$VH_ = _remoteMETAFILEPICT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("yExt"));
    static final java.lang.invoke.VarHandle _remoteMETAFILEPICT$yExt$VH() { return _remoteMETAFILEPICT$yExt$VH_; }

    static final MemoryLayout _remoteMETAFILEPICT$hMF$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _remoteMETAFILEPICT$hMF$LAYOUT() { return _remoteMETAFILEPICT$hMF$LAYOUT_; }

    static final VarHandle _remoteMETAFILEPICT$hMF$VH_ = MemoryHandles.asAddressVarHandle(_remoteMETAFILEPICT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hMF")));
    static final java.lang.invoke.VarHandle _remoteMETAFILEPICT$hMF$VH() { return _remoteMETAFILEPICT$hMF$VH_; }

    static final MemoryLayout _userHMETAFILEPICT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("fContext"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_LONG.withName("hInproc"),
            C_POINTER.withName("hRemote"),
            C_LONGLONG.withName("hInproc64")
        ).withName("u")
    ).withName("_userHMETAFILEPICT");
    static final jdk.incubator.foreign.MemoryLayout _userHMETAFILEPICT$struct$LAYOUT() { return _userHMETAFILEPICT$struct$LAYOUT_; }

    static final MemoryLayout _userHMETAFILEPICT$fContext$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userHMETAFILEPICT$fContext$LAYOUT() { return _userHMETAFILEPICT$fContext$LAYOUT_; }

    static final VarHandle _userHMETAFILEPICT$fContext$VH_ = _userHMETAFILEPICT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fContext"));
    static final java.lang.invoke.VarHandle _userHMETAFILEPICT$fContext$VH() { return _userHMETAFILEPICT$fContext$VH_; }

    static final MemoryLayout _userHMETAFILEPICT$__MIDL_IWinTypes_0005$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_LONG.withName("hInproc"),
        C_POINTER.withName("hRemote"),
        C_LONGLONG.withName("hInproc64")
    ).withName("__MIDL_IWinTypes_0005");
    static final jdk.incubator.foreign.MemoryLayout _userHMETAFILEPICT$__MIDL_IWinTypes_0005$union$LAYOUT() { return _userHMETAFILEPICT$__MIDL_IWinTypes_0005$union$LAYOUT_; }

    static final MemoryLayout _userHMETAFILEPICT$__MIDL_IWinTypes_0005$hInproc$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userHMETAFILEPICT$__MIDL_IWinTypes_0005$hInproc$LAYOUT() { return _userHMETAFILEPICT$__MIDL_IWinTypes_0005$hInproc$LAYOUT_; }

    static final VarHandle _userHMETAFILEPICT$__MIDL_IWinTypes_0005$hInproc$VH_ = _userHMETAFILEPICT$__MIDL_IWinTypes_0005$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("hInproc"));
    static final java.lang.invoke.VarHandle _userHMETAFILEPICT$__MIDL_IWinTypes_0005$hInproc$VH() { return _userHMETAFILEPICT$__MIDL_IWinTypes_0005$hInproc$VH_; }

    static final MemoryLayout _userHMETAFILEPICT$__MIDL_IWinTypes_0005$hRemote$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _userHMETAFILEPICT$__MIDL_IWinTypes_0005$hRemote$LAYOUT() { return _userHMETAFILEPICT$__MIDL_IWinTypes_0005$hRemote$LAYOUT_; }

    static final VarHandle _userHMETAFILEPICT$__MIDL_IWinTypes_0005$hRemote$VH_ = MemoryHandles.asAddressVarHandle(_userHMETAFILEPICT$__MIDL_IWinTypes_0005$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hRemote")));
    static final java.lang.invoke.VarHandle _userHMETAFILEPICT$__MIDL_IWinTypes_0005$hRemote$VH() { return _userHMETAFILEPICT$__MIDL_IWinTypes_0005$hRemote$VH_; }

    static final MemoryLayout _userHMETAFILEPICT$__MIDL_IWinTypes_0005$hInproc64$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _userHMETAFILEPICT$__MIDL_IWinTypes_0005$hInproc64$LAYOUT() { return _userHMETAFILEPICT$__MIDL_IWinTypes_0005$hInproc64$LAYOUT_; }

    static final VarHandle _userHMETAFILEPICT$__MIDL_IWinTypes_0005$hInproc64$VH_ = _userHMETAFILEPICT$__MIDL_IWinTypes_0005$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInproc64"));
    static final java.lang.invoke.VarHandle _userHMETAFILEPICT$__MIDL_IWinTypes_0005$hInproc64$VH() { return _userHMETAFILEPICT$__MIDL_IWinTypes_0005$hInproc64$VH_; }

    static final MemoryLayout _userHENHMETAFILE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("fContext"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_LONG.withName("hInproc"),
            C_POINTER.withName("hRemote"),
            C_LONGLONG.withName("hInproc64")
        ).withName("u")
    ).withName("_userHENHMETAFILE");
    static final jdk.incubator.foreign.MemoryLayout _userHENHMETAFILE$struct$LAYOUT() { return _userHENHMETAFILE$struct$LAYOUT_; }

    static final MemoryLayout _userHENHMETAFILE$fContext$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userHENHMETAFILE$fContext$LAYOUT() { return _userHENHMETAFILE$fContext$LAYOUT_; }

    static final VarHandle _userHENHMETAFILE$fContext$VH_ = _userHENHMETAFILE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fContext"));
    static final java.lang.invoke.VarHandle _userHENHMETAFILE$fContext$VH() { return _userHENHMETAFILE$fContext$VH_; }

    static final MemoryLayout _userHENHMETAFILE$__MIDL_IWinTypes_0006$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_LONG.withName("hInproc"),
        C_POINTER.withName("hRemote"),
        C_LONGLONG.withName("hInproc64")
    ).withName("__MIDL_IWinTypes_0006");
    static final jdk.incubator.foreign.MemoryLayout _userHENHMETAFILE$__MIDL_IWinTypes_0006$union$LAYOUT() { return _userHENHMETAFILE$__MIDL_IWinTypes_0006$union$LAYOUT_; }

    static final MemoryLayout _userHENHMETAFILE$__MIDL_IWinTypes_0006$hInproc$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userHENHMETAFILE$__MIDL_IWinTypes_0006$hInproc$LAYOUT() { return _userHENHMETAFILE$__MIDL_IWinTypes_0006$hInproc$LAYOUT_; }

    static final VarHandle _userHENHMETAFILE$__MIDL_IWinTypes_0006$hInproc$VH_ = _userHENHMETAFILE$__MIDL_IWinTypes_0006$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("hInproc"));
    static final java.lang.invoke.VarHandle _userHENHMETAFILE$__MIDL_IWinTypes_0006$hInproc$VH() { return _userHENHMETAFILE$__MIDL_IWinTypes_0006$hInproc$VH_; }

    static final MemoryLayout _userHENHMETAFILE$__MIDL_IWinTypes_0006$hRemote$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _userHENHMETAFILE$__MIDL_IWinTypes_0006$hRemote$LAYOUT() { return _userHENHMETAFILE$__MIDL_IWinTypes_0006$hRemote$LAYOUT_; }

    static final VarHandle _userHENHMETAFILE$__MIDL_IWinTypes_0006$hRemote$VH_ = MemoryHandles.asAddressVarHandle(_userHENHMETAFILE$__MIDL_IWinTypes_0006$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hRemote")));
    static final java.lang.invoke.VarHandle _userHENHMETAFILE$__MIDL_IWinTypes_0006$hRemote$VH() { return _userHENHMETAFILE$__MIDL_IWinTypes_0006$hRemote$VH_; }

    static final MemoryLayout _userHENHMETAFILE$__MIDL_IWinTypes_0006$hInproc64$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _userHENHMETAFILE$__MIDL_IWinTypes_0006$hInproc64$LAYOUT() { return _userHENHMETAFILE$__MIDL_IWinTypes_0006$hInproc64$LAYOUT_; }

    static final VarHandle _userHENHMETAFILE$__MIDL_IWinTypes_0006$hInproc64$VH_ = _userHENHMETAFILE$__MIDL_IWinTypes_0006$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInproc64"));
    static final java.lang.invoke.VarHandle _userHENHMETAFILE$__MIDL_IWinTypes_0006$hInproc64$VH() { return _userHENHMETAFILE$__MIDL_IWinTypes_0006$hInproc64$VH_; }

    static final MemoryLayout _userBITMAP$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("bmType"),
        C_LONG.withName("bmWidth"),
        C_LONG.withName("bmHeight"),
        C_LONG.withName("bmWidthBytes"),
        C_SHORT.withName("bmPlanes"),
        C_SHORT.withName("bmBitsPixel"),
        C_LONG.withName("cbSize"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("pBuffer"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("_userBITMAP");
    static final jdk.incubator.foreign.MemoryLayout _userBITMAP$struct$LAYOUT() { return _userBITMAP$struct$LAYOUT_; }

    static final MemoryLayout _userBITMAP$bmType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userBITMAP$bmType$LAYOUT() { return _userBITMAP$bmType$LAYOUT_; }

    static final VarHandle _userBITMAP$bmType$VH_ = _userBITMAP$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bmType"));
    static final java.lang.invoke.VarHandle _userBITMAP$bmType$VH() { return _userBITMAP$bmType$VH_; }

    static final MemoryLayout _userBITMAP$bmWidth$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userBITMAP$bmWidth$LAYOUT() { return _userBITMAP$bmWidth$LAYOUT_; }

    static final VarHandle _userBITMAP$bmWidth$VH_ = _userBITMAP$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bmWidth"));
    static final java.lang.invoke.VarHandle _userBITMAP$bmWidth$VH() { return _userBITMAP$bmWidth$VH_; }

    static final MemoryLayout _userBITMAP$bmHeight$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userBITMAP$bmHeight$LAYOUT() { return _userBITMAP$bmHeight$LAYOUT_; }

    static final VarHandle _userBITMAP$bmHeight$VH_ = _userBITMAP$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bmHeight"));
    static final java.lang.invoke.VarHandle _userBITMAP$bmHeight$VH() { return _userBITMAP$bmHeight$VH_; }

    static final MemoryLayout _userBITMAP$bmWidthBytes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userBITMAP$bmWidthBytes$LAYOUT() { return _userBITMAP$bmWidthBytes$LAYOUT_; }

    static final VarHandle _userBITMAP$bmWidthBytes$VH_ = _userBITMAP$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bmWidthBytes"));
    static final java.lang.invoke.VarHandle _userBITMAP$bmWidthBytes$VH() { return _userBITMAP$bmWidthBytes$VH_; }

    static final MemoryLayout _userBITMAP$bmPlanes$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _userBITMAP$bmPlanes$LAYOUT() { return _userBITMAP$bmPlanes$LAYOUT_; }

    static final VarHandle _userBITMAP$bmPlanes$VH_ = _userBITMAP$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("bmPlanes"));
    static final java.lang.invoke.VarHandle _userBITMAP$bmPlanes$VH() { return _userBITMAP$bmPlanes$VH_; }

    static final MemoryLayout _userBITMAP$bmBitsPixel$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _userBITMAP$bmBitsPixel$LAYOUT() { return _userBITMAP$bmBitsPixel$LAYOUT_; }

    static final VarHandle _userBITMAP$bmBitsPixel$VH_ = _userBITMAP$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("bmBitsPixel"));
    static final java.lang.invoke.VarHandle _userBITMAP$bmBitsPixel$VH() { return _userBITMAP$bmBitsPixel$VH_; }

    static final MemoryLayout _userBITMAP$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userBITMAP$cbSize$LAYOUT() { return _userBITMAP$cbSize$LAYOUT_; }

    static final VarHandle _userBITMAP$cbSize$VH_ = _userBITMAP$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _userBITMAP$cbSize$VH() { return _userBITMAP$cbSize$VH_; }

    static final MemoryLayout _userHBITMAP$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("fContext"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_LONG.withName("hInproc"),
            C_POINTER.withName("hRemote"),
            C_LONGLONG.withName("hInproc64")
        ).withName("u")
    ).withName("_userHBITMAP");
    static final jdk.incubator.foreign.MemoryLayout _userHBITMAP$struct$LAYOUT() { return _userHBITMAP$struct$LAYOUT_; }

    static final MemoryLayout _userHBITMAP$fContext$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userHBITMAP$fContext$LAYOUT() { return _userHBITMAP$fContext$LAYOUT_; }

    static final VarHandle _userHBITMAP$fContext$VH_ = _userHBITMAP$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fContext"));
    static final java.lang.invoke.VarHandle _userHBITMAP$fContext$VH() { return _userHBITMAP$fContext$VH_; }

    static final MemoryLayout _userHBITMAP$__MIDL_IWinTypes_0007$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_LONG.withName("hInproc"),
        C_POINTER.withName("hRemote"),
        C_LONGLONG.withName("hInproc64")
    ).withName("__MIDL_IWinTypes_0007");
    static final jdk.incubator.foreign.MemoryLayout _userHBITMAP$__MIDL_IWinTypes_0007$union$LAYOUT() { return _userHBITMAP$__MIDL_IWinTypes_0007$union$LAYOUT_; }

    static final MemoryLayout _userHBITMAP$__MIDL_IWinTypes_0007$hInproc$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userHBITMAP$__MIDL_IWinTypes_0007$hInproc$LAYOUT() { return _userHBITMAP$__MIDL_IWinTypes_0007$hInproc$LAYOUT_; }

    static final VarHandle _userHBITMAP$__MIDL_IWinTypes_0007$hInproc$VH_ = _userHBITMAP$__MIDL_IWinTypes_0007$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("hInproc"));
    static final java.lang.invoke.VarHandle _userHBITMAP$__MIDL_IWinTypes_0007$hInproc$VH() { return _userHBITMAP$__MIDL_IWinTypes_0007$hInproc$VH_; }

    static final MemoryLayout _userHBITMAP$__MIDL_IWinTypes_0007$hRemote$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _userHBITMAP$__MIDL_IWinTypes_0007$hRemote$LAYOUT() { return _userHBITMAP$__MIDL_IWinTypes_0007$hRemote$LAYOUT_; }

    static final VarHandle _userHBITMAP$__MIDL_IWinTypes_0007$hRemote$VH_ = MemoryHandles.asAddressVarHandle(_userHBITMAP$__MIDL_IWinTypes_0007$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hRemote")));
    static final java.lang.invoke.VarHandle _userHBITMAP$__MIDL_IWinTypes_0007$hRemote$VH() { return _userHBITMAP$__MIDL_IWinTypes_0007$hRemote$VH_; }

    static final MemoryLayout _userHBITMAP$__MIDL_IWinTypes_0007$hInproc64$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _userHBITMAP$__MIDL_IWinTypes_0007$hInproc64$LAYOUT() { return _userHBITMAP$__MIDL_IWinTypes_0007$hInproc64$LAYOUT_; }

    static final VarHandle _userHBITMAP$__MIDL_IWinTypes_0007$hInproc64$VH_ = _userHBITMAP$__MIDL_IWinTypes_0007$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInproc64"));
    static final java.lang.invoke.VarHandle _userHBITMAP$__MIDL_IWinTypes_0007$hInproc64$VH() { return _userHBITMAP$__MIDL_IWinTypes_0007$hInproc64$VH_; }

    static final MemoryLayout _userHPALETTE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("fContext"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_LONG.withName("hInproc"),
            C_POINTER.withName("hRemote"),
            C_LONGLONG.withName("hInproc64")
        ).withName("u")
    ).withName("_userHPALETTE");
    static final jdk.incubator.foreign.MemoryLayout _userHPALETTE$struct$LAYOUT() { return _userHPALETTE$struct$LAYOUT_; }

    static final MemoryLayout _userHPALETTE$fContext$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userHPALETTE$fContext$LAYOUT() { return _userHPALETTE$fContext$LAYOUT_; }

    static final VarHandle _userHPALETTE$fContext$VH_ = _userHPALETTE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fContext"));
    static final java.lang.invoke.VarHandle _userHPALETTE$fContext$VH() { return _userHPALETTE$fContext$VH_; }

    static final MemoryLayout _userHPALETTE$__MIDL_IWinTypes_0008$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_LONG.withName("hInproc"),
        C_POINTER.withName("hRemote"),
        C_LONGLONG.withName("hInproc64")
    ).withName("__MIDL_IWinTypes_0008");
    static final jdk.incubator.foreign.MemoryLayout _userHPALETTE$__MIDL_IWinTypes_0008$union$LAYOUT() { return _userHPALETTE$__MIDL_IWinTypes_0008$union$LAYOUT_; }

    static final MemoryLayout _userHPALETTE$__MIDL_IWinTypes_0008$hInproc$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _userHPALETTE$__MIDL_IWinTypes_0008$hInproc$LAYOUT() { return _userHPALETTE$__MIDL_IWinTypes_0008$hInproc$LAYOUT_; }

    static final VarHandle _userHPALETTE$__MIDL_IWinTypes_0008$hInproc$VH_ = _userHPALETTE$__MIDL_IWinTypes_0008$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("hInproc"));
    static final java.lang.invoke.VarHandle _userHPALETTE$__MIDL_IWinTypes_0008$hInproc$VH() { return _userHPALETTE$__MIDL_IWinTypes_0008$hInproc$VH_; }

    static final MemoryLayout _userHPALETTE$__MIDL_IWinTypes_0008$hRemote$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _userHPALETTE$__MIDL_IWinTypes_0008$hRemote$LAYOUT() { return _userHPALETTE$__MIDL_IWinTypes_0008$hRemote$LAYOUT_; }

    static final VarHandle _userHPALETTE$__MIDL_IWinTypes_0008$hRemote$VH_ = MemoryHandles.asAddressVarHandle(_userHPALETTE$__MIDL_IWinTypes_0008$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hRemote")));
    static final java.lang.invoke.VarHandle _userHPALETTE$__MIDL_IWinTypes_0008$hRemote$VH() { return _userHPALETTE$__MIDL_IWinTypes_0008$hRemote$VH_; }

    static final MemoryLayout _userHPALETTE$__MIDL_IWinTypes_0008$hInproc64$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _userHPALETTE$__MIDL_IWinTypes_0008$hInproc64$LAYOUT() { return _userHPALETTE$__MIDL_IWinTypes_0008$hInproc64$LAYOUT_; }

    static final VarHandle _userHPALETTE$__MIDL_IWinTypes_0008$hInproc64$VH_ = _userHPALETTE$__MIDL_IWinTypes_0008$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInproc64"));
    static final java.lang.invoke.VarHandle _userHPALETTE$__MIDL_IWinTypes_0008$hInproc64$VH() { return _userHPALETTE$__MIDL_IWinTypes_0008$hInproc64$VH_; }

    static final MemoryLayout _RemotableHandle$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("fContext"),
        MemoryLayout.ofUnion(
            C_LONG.withName("hInproc"),
            C_LONG.withName("hRemote")
        ).withName("u")
    ).withName("_RemotableHandle");
    static final jdk.incubator.foreign.MemoryLayout _RemotableHandle$struct$LAYOUT() { return _RemotableHandle$struct$LAYOUT_; }

    static final MemoryLayout _RemotableHandle$fContext$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RemotableHandle$fContext$LAYOUT() { return _RemotableHandle$fContext$LAYOUT_; }

    static final VarHandle _RemotableHandle$fContext$VH_ = _RemotableHandle$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fContext"));
    static final java.lang.invoke.VarHandle _RemotableHandle$fContext$VH() { return _RemotableHandle$fContext$VH_; }

    static final MemoryLayout _RemotableHandle$__MIDL_IWinTypes_0009$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_LONG.withName("hInproc"),
        C_LONG.withName("hRemote")
    ).withName("__MIDL_IWinTypes_0009");
    static final jdk.incubator.foreign.MemoryLayout _RemotableHandle$__MIDL_IWinTypes_0009$union$LAYOUT() { return _RemotableHandle$__MIDL_IWinTypes_0009$union$LAYOUT_; }

    static final MemoryLayout _RemotableHandle$__MIDL_IWinTypes_0009$hInproc$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RemotableHandle$__MIDL_IWinTypes_0009$hInproc$LAYOUT() { return _RemotableHandle$__MIDL_IWinTypes_0009$hInproc$LAYOUT_; }

    static final VarHandle _RemotableHandle$__MIDL_IWinTypes_0009$hInproc$VH_ = _RemotableHandle$__MIDL_IWinTypes_0009$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("hInproc"));
    static final java.lang.invoke.VarHandle _RemotableHandle$__MIDL_IWinTypes_0009$hInproc$VH() { return _RemotableHandle$__MIDL_IWinTypes_0009$hInproc$VH_; }

    static final MemoryLayout _RemotableHandle$__MIDL_IWinTypes_0009$hRemote$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RemotableHandle$__MIDL_IWinTypes_0009$hRemote$LAYOUT() { return _RemotableHandle$__MIDL_IWinTypes_0009$hRemote$LAYOUT_; }

    static final VarHandle _RemotableHandle$__MIDL_IWinTypes_0009$hRemote$VH_ = _RemotableHandle$__MIDL_IWinTypes_0009$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("hRemote"));
    static final java.lang.invoke.VarHandle _RemotableHandle$__MIDL_IWinTypes_0009$hRemote$VH() { return _RemotableHandle$__MIDL_IWinTypes_0009$hRemote$VH_; }

    static final MemoryLayout IWinTypes_v0_1_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinTypes_v0_1_c_ifspec$LAYOUT() { return IWinTypes_v0_1_c_ifspec$LAYOUT_; }

    static final VarHandle IWinTypes_v0_1_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(IWinTypes_v0_1_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle IWinTypes_v0_1_c_ifspec$VH() { return IWinTypes_v0_1_c_ifspec$VH_; }

    static final MemorySegment IWinTypes_v0_1_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IWinTypes_v0_1_c_ifspec", IWinTypes_v0_1_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IWinTypes_v0_1_c_ifspec$SEGMENT() { return IWinTypes_v0_1_c_ifspec$SEGMENT_; }

    static final MemoryLayout IWinTypes_v0_1_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinTypes_v0_1_s_ifspec$LAYOUT() { return IWinTypes_v0_1_s_ifspec$LAYOUT_; }

    static final VarHandle IWinTypes_v0_1_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(IWinTypes_v0_1_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle IWinTypes_v0_1_s_ifspec$VH() { return IWinTypes_v0_1_s_ifspec$VH_; }

    static final MemorySegment IWinTypes_v0_1_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IWinTypes_v0_1_s_ifspec", IWinTypes_v0_1_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IWinTypes_v0_1_s_ifspec$SEGMENT() { return IWinTypes_v0_1_s_ifspec$SEGMENT_; }

    static final MemoryLayout tagCY$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_LONG.withName("Lo"),
        C_LONG.withName("Hi"),
        C_LONGLONG.withName("int64")
    ).withName("tagCY");
    static final jdk.incubator.foreign.MemoryLayout tagCY$union$LAYOUT() { return tagCY$union$LAYOUT_; }

    static final MemoryLayout tagCY$Lo$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCY$Lo$LAYOUT() { return tagCY$Lo$LAYOUT_; }

    static final VarHandle tagCY$Lo$VH_ = tagCY$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Lo"));
    static final java.lang.invoke.VarHandle tagCY$Lo$VH() { return tagCY$Lo$VH_; }

    static final MemoryLayout tagCY$Hi$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCY$Hi$LAYOUT() { return tagCY$Hi$LAYOUT_; }

    static final VarHandle tagCY$Hi$VH_ = tagCY$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Hi"));
    static final java.lang.invoke.VarHandle tagCY$Hi$VH() { return tagCY$Hi$VH_; }

    static final MemoryLayout tagCY$int64$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagCY$int64$LAYOUT() { return tagCY$int64$LAYOUT_; }

    static final VarHandle tagCY$int64$VH_ = tagCY$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("int64"));
    static final java.lang.invoke.VarHandle tagCY$int64$VH() { return tagCY$int64$VH_; }

    static final MemoryLayout tagDEC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("wReserved"),
        C_CHAR.withName("scale"),
        C_CHAR.withName("sign"),
        C_SHORT.withName("signscale"),
        C_LONG.withName("Hi32"),
        C_LONG.withName("Lo32"),
        C_LONG.withName("Mid32"),
        C_LONGLONG.withName("Lo64")
    ).withName("tagDEC");
    static final jdk.incubator.foreign.MemoryLayout tagDEC$struct$LAYOUT() { return tagDEC$struct$LAYOUT_; }

    static final MemoryLayout tagDEC$wReserved$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagDEC$wReserved$LAYOUT() { return tagDEC$wReserved$LAYOUT_; }

    static final VarHandle tagDEC$wReserved$VH_ = tagDEC$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReserved"));
    static final java.lang.invoke.VarHandle tagDEC$wReserved$VH() { return tagDEC$wReserved$VH_; }

    static final MemoryLayout tagDEC$scale$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout tagDEC$scale$LAYOUT() { return tagDEC$scale$LAYOUT_; }

    static final VarHandle tagDEC$scale$VH_ = tagDEC$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("scale"));
    static final java.lang.invoke.VarHandle tagDEC$scale$VH() { return tagDEC$scale$VH_; }

    static final MemoryLayout tagDEC$sign$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout tagDEC$sign$LAYOUT() { return tagDEC$sign$LAYOUT_; }

    static final VarHandle tagDEC$sign$VH_ = tagDEC$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("sign"));
    static final java.lang.invoke.VarHandle tagDEC$sign$VH() { return tagDEC$sign$VH_; }

    static final MemoryLayout tagDEC$signscale$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagDEC$signscale$LAYOUT() { return tagDEC$signscale$LAYOUT_; }

    static final VarHandle tagDEC$signscale$VH_ = tagDEC$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("signscale"));
    static final java.lang.invoke.VarHandle tagDEC$signscale$VH() { return tagDEC$signscale$VH_; }

    static final MemoryLayout tagDEC$Hi32$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagDEC$Hi32$LAYOUT() { return tagDEC$Hi32$LAYOUT_; }

    static final VarHandle tagDEC$Hi32$VH_ = tagDEC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Hi32"));
    static final java.lang.invoke.VarHandle tagDEC$Hi32$VH() { return tagDEC$Hi32$VH_; }

    static final MemoryLayout tagDEC$Lo32$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagDEC$Lo32$LAYOUT() { return tagDEC$Lo32$LAYOUT_; }

    static final VarHandle tagDEC$Lo32$VH_ = tagDEC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Lo32"));
    static final java.lang.invoke.VarHandle tagDEC$Lo32$VH() { return tagDEC$Lo32$VH_; }

    static final MemoryLayout tagDEC$Mid32$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagDEC$Mid32$LAYOUT() { return tagDEC$Mid32$LAYOUT_; }

    static final VarHandle tagDEC$Mid32$VH_ = tagDEC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Mid32"));
    static final java.lang.invoke.VarHandle tagDEC$Mid32$VH() { return tagDEC$Mid32$VH_; }

    static final MemoryLayout tagDEC$Lo64$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagDEC$Lo64$LAYOUT() { return tagDEC$Lo64$LAYOUT_; }

    static final VarHandle tagDEC$Lo64$VH_ = tagDEC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Lo64"));
    static final java.lang.invoke.VarHandle tagDEC$Lo64$VH() { return tagDEC$Lo64$VH_; }

    static final MemoryLayout tagBSTRBLOB$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pData")
    ).withName("tagBSTRBLOB");
    static final jdk.incubator.foreign.MemoryLayout tagBSTRBLOB$struct$LAYOUT() { return tagBSTRBLOB$struct$LAYOUT_; }

    static final MemoryLayout tagBSTRBLOB$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagBSTRBLOB$cbSize$LAYOUT() { return tagBSTRBLOB$cbSize$LAYOUT_; }

    static final VarHandle tagBSTRBLOB$cbSize$VH_ = tagBSTRBLOB$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle tagBSTRBLOB$cbSize$VH() { return tagBSTRBLOB$cbSize$VH_; }

    static final MemoryLayout tagBSTRBLOB$pData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagBSTRBLOB$pData$LAYOUT() { return tagBSTRBLOB$pData$LAYOUT_; }

    static final VarHandle tagBSTRBLOB$pData$VH_ = MemoryHandles.asAddressVarHandle(tagBSTRBLOB$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pData")));
    static final java.lang.invoke.VarHandle tagBSTRBLOB$pData$VH() { return tagBSTRBLOB$pData$VH_; }

    static final MemoryLayout tagCLIPDATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("ulClipFmt"),
        C_POINTER.withName("pClipData")
    ).withName("tagCLIPDATA");
    static final jdk.incubator.foreign.MemoryLayout tagCLIPDATA$struct$LAYOUT() { return tagCLIPDATA$struct$LAYOUT_; }

    static final MemoryLayout tagCLIPDATA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCLIPDATA$cbSize$LAYOUT() { return tagCLIPDATA$cbSize$LAYOUT_; }

    static final VarHandle tagCLIPDATA$cbSize$VH_ = tagCLIPDATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle tagCLIPDATA$cbSize$VH() { return tagCLIPDATA$cbSize$VH_; }

    static final MemoryLayout tagCLIPDATA$ulClipFmt$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCLIPDATA$ulClipFmt$LAYOUT() { return tagCLIPDATA$ulClipFmt$LAYOUT_; }

    static final VarHandle tagCLIPDATA$ulClipFmt$VH_ = tagCLIPDATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulClipFmt"));
    static final java.lang.invoke.VarHandle tagCLIPDATA$ulClipFmt$VH() { return tagCLIPDATA$ulClipFmt$VH_; }

    static final MemoryLayout tagCLIPDATA$pClipData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCLIPDATA$pClipData$LAYOUT() { return tagCLIPDATA$pClipData$LAYOUT_; }

    static final VarHandle tagCLIPDATA$pClipData$VH_ = MemoryHandles.asAddressVarHandle(tagCLIPDATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pClipData")));
    static final java.lang.invoke.VarHandle tagCLIPDATA$pClipData$VH() { return tagCLIPDATA$pClipData$VH_; }

    static final int VT_EMPTY() { return (int)0L; }

    static final int VT_NULL() { return (int)1L; }

    static final int VT_I2() { return (int)2L; }

    static final int VT_I4() { return (int)3L; }

    static final int VT_R4() { return (int)4L; }

    static final int VT_R8() { return (int)5L; }

    static final int VT_CY() { return (int)6L; }

    static final int VT_DATE() { return (int)7L; }

    static final int VT_BSTR() { return (int)8L; }

    static final int VT_DISPATCH() { return (int)9L; }

    static final int VT_ERROR() { return (int)10L; }

    static final int VT_BOOL() { return (int)11L; }

    static final int VT_VARIANT() { return (int)12L; }

    static final int VT_UNKNOWN() { return (int)13L; }

    static final int VT_DECIMAL() { return (int)14L; }

    static final int VT_I1() { return (int)16L; }

    static final int VT_UI1() { return (int)17L; }

    static final int VT_UI2() { return (int)18L; }

    static final int VT_UI4() { return (int)19L; }

    static final int VT_I8() { return (int)20L; }

    static final int VT_UI8() { return (int)21L; }

    static final int VT_INT() { return (int)22L; }

    static final int VT_UINT() { return (int)23L; }

    static final int VT_VOID() { return (int)24L; }

    static final int VT_HRESULT() { return (int)25L; }

    static final int VT_PTR() { return (int)26L; }

    static final int VT_SAFEARRAY() { return (int)27L; }

    static final int VT_CARRAY() { return (int)28L; }

    static final int VT_USERDEFINED() { return (int)29L; }

    static final int VT_LPSTR() { return (int)30L; }

    static final int VT_LPWSTR() { return (int)31L; }

    static final int VT_RECORD() { return (int)36L; }

    static final int VT_INT_PTR() { return (int)37L; }

    static final int VT_UINT_PTR() { return (int)38L; }

    static final int VT_FILETIME() { return (int)64L; }

    static final int VT_BLOB() { return (int)65L; }

    static final int VT_STREAM() { return (int)66L; }

    static final int VT_STORAGE() { return (int)67L; }

    static final int VT_STREAMED_OBJECT() { return (int)68L; }

    static final int VT_STORED_OBJECT() { return (int)69L; }

    static final int VT_BLOB_OBJECT() { return (int)70L; }

    static final int VT_CF() { return (int)71L; }

    static final int VT_CLSID() { return (int)72L; }

    static final int VT_VERSIONED_STREAM() { return (int)73L; }

    static final int VT_BSTR_BLOB() { return (int)4095L; }

    static final int VT_VECTOR() { return (int)4096L; }

    static final int VT_ARRAY() { return (int)8192L; }

    static final int VT_BYREF() { return (int)16384L; }

    static final int VT_RESERVED() { return (int)32768L; }

    static final int VT_ILLEGAL() { return (int)65535L; }

    static final int VT_ILLEGALMASKED() { return (int)4095L; }

    static final int VT_TYPEMASK() { return (int)4095L; }

    static final MemoryLayout _tagpropertykey$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("fmtid"),
        C_LONG.withName("pid")
    ).withName("_tagpropertykey");
    static final jdk.incubator.foreign.MemoryLayout _tagpropertykey$struct$LAYOUT() { return _tagpropertykey$struct$LAYOUT_; }

    static final MemoryLayout _tagpropertykey$pid$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _tagpropertykey$pid$LAYOUT() { return _tagpropertykey$pid$LAYOUT_; }

    static final VarHandle _tagpropertykey$pid$VH_ = _tagpropertykey$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("pid"));
    static final java.lang.invoke.VarHandle _tagpropertykey$pid$VH() { return _tagpropertykey$pid$VH_; }

    static final MemoryLayout tagCSPLATFORM$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwPlatformId"),
        C_LONG.withName("dwVersionHi"),
        C_LONG.withName("dwVersionLo"),
        C_LONG.withName("dwProcessorArch")
    ).withName("tagCSPLATFORM");
    static final jdk.incubator.foreign.MemoryLayout tagCSPLATFORM$struct$LAYOUT() { return tagCSPLATFORM$struct$LAYOUT_; }

    static final MemoryLayout tagCSPLATFORM$dwPlatformId$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCSPLATFORM$dwPlatformId$LAYOUT() { return tagCSPLATFORM$dwPlatformId$LAYOUT_; }

    static final VarHandle tagCSPLATFORM$dwPlatformId$VH_ = tagCSPLATFORM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwPlatformId"));
    static final java.lang.invoke.VarHandle tagCSPLATFORM$dwPlatformId$VH() { return tagCSPLATFORM$dwPlatformId$VH_; }

    static final MemoryLayout tagCSPLATFORM$dwVersionHi$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCSPLATFORM$dwVersionHi$LAYOUT() { return tagCSPLATFORM$dwVersionHi$LAYOUT_; }

    static final VarHandle tagCSPLATFORM$dwVersionHi$VH_ = tagCSPLATFORM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersionHi"));
    static final java.lang.invoke.VarHandle tagCSPLATFORM$dwVersionHi$VH() { return tagCSPLATFORM$dwVersionHi$VH_; }

    static final MemoryLayout tagCSPLATFORM$dwVersionLo$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCSPLATFORM$dwVersionLo$LAYOUT() { return tagCSPLATFORM$dwVersionLo$LAYOUT_; }

    static final VarHandle tagCSPLATFORM$dwVersionLo$VH_ = tagCSPLATFORM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersionLo"));
    static final java.lang.invoke.VarHandle tagCSPLATFORM$dwVersionLo$VH() { return tagCSPLATFORM$dwVersionLo$VH_; }

    static final MemoryLayout tagCSPLATFORM$dwProcessorArch$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCSPLATFORM$dwProcessorArch$LAYOUT() { return tagCSPLATFORM$dwProcessorArch$LAYOUT_; }

    static final VarHandle tagCSPLATFORM$dwProcessorArch$VH_ = tagCSPLATFORM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwProcessorArch"));
    static final java.lang.invoke.VarHandle tagCSPLATFORM$dwProcessorArch$VH() { return tagCSPLATFORM$dwProcessorArch$VH_; }

    static final MemoryLayout tagQUERYCONTEXT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwContext"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwPlatformId"),
            C_LONG.withName("dwVersionHi"),
            C_LONG.withName("dwVersionLo"),
            C_LONG.withName("dwProcessorArch")
        ).withName("Platform"),
        C_LONG.withName("Locale"),
        C_LONG.withName("dwVersionHi"),
        C_LONG.withName("dwVersionLo")
    ).withName("tagQUERYCONTEXT");
    static final jdk.incubator.foreign.MemoryLayout tagQUERYCONTEXT$struct$LAYOUT() { return tagQUERYCONTEXT$struct$LAYOUT_; }

    static final MemoryLayout tagQUERYCONTEXT$dwContext$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagQUERYCONTEXT$dwContext$LAYOUT() { return tagQUERYCONTEXT$dwContext$LAYOUT_; }

    static final VarHandle tagQUERYCONTEXT$dwContext$VH_ = tagQUERYCONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwContext"));
    static final java.lang.invoke.VarHandle tagQUERYCONTEXT$dwContext$VH() { return tagQUERYCONTEXT$dwContext$VH_; }

    static final MemoryLayout tagQUERYCONTEXT$Locale$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagQUERYCONTEXT$Locale$LAYOUT() { return tagQUERYCONTEXT$Locale$LAYOUT_; }

    static final VarHandle tagQUERYCONTEXT$Locale$VH_ = tagQUERYCONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Locale"));
    static final java.lang.invoke.VarHandle tagQUERYCONTEXT$Locale$VH() { return tagQUERYCONTEXT$Locale$VH_; }

    static final MemoryLayout tagQUERYCONTEXT$dwVersionHi$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagQUERYCONTEXT$dwVersionHi$LAYOUT() { return tagQUERYCONTEXT$dwVersionHi$LAYOUT_; }

    static final VarHandle tagQUERYCONTEXT$dwVersionHi$VH_ = tagQUERYCONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersionHi"));
    static final java.lang.invoke.VarHandle tagQUERYCONTEXT$dwVersionHi$VH() { return tagQUERYCONTEXT$dwVersionHi$VH_; }

    static final MemoryLayout tagQUERYCONTEXT$dwVersionLo$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagQUERYCONTEXT$dwVersionLo$LAYOUT() { return tagQUERYCONTEXT$dwVersionLo$LAYOUT_; }

    static final VarHandle tagQUERYCONTEXT$dwVersionLo$VH_ = tagQUERYCONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersionLo"));
    static final java.lang.invoke.VarHandle tagQUERYCONTEXT$dwVersionLo$VH() { return tagQUERYCONTEXT$dwVersionLo$VH_; }

    static final int TYSPEC_CLSID() { return (int)0L; }

    static final int TYSPEC_FILEEXT() { return (int)1L; }

    static final int TYSPEC_MIMETYPE() { return (int)2L; }

    static final int TYSPEC_FILENAME() { return (int)3L; }

    static final int TYSPEC_PROGID() { return (int)4L; }

    static final int TYSPEC_PACKAGENAME() { return (int)5L; }

    static final int TYSPEC_OBJECTID() { return (int)6L; }

    static final MemoryLayout __MIDL___MIDL_itf_wtypes_0000_0001_0001$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("tyspec"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            MemoryLayout.ofStruct(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
            ).withName("clsid"),
            C_POINTER.withName("pFileExt"),
            C_POINTER.withName("pMimeType"),
            C_POINTER.withName("pProgId"),
            C_POINTER.withName("pFileName"),
            MemoryLayout.ofStruct(
                C_POINTER.withName("pPackageName"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("Data1"),
                    C_SHORT.withName("Data2"),
                    C_SHORT.withName("Data3"),
                    MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
                ).withName("PolicyId")
            ).withName("ByName"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofStruct(
                    C_LONG.withName("Data1"),
                    C_SHORT.withName("Data2"),
                    C_SHORT.withName("Data3"),
                    MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
                ).withName("ObjectId"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("Data1"),
                    C_SHORT.withName("Data2"),
                    C_SHORT.withName("Data3"),
                    MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
                ).withName("PolicyId")
            ).withName("ByObjectId")
        ).withName("tagged_union")
    ).withName("__MIDL___MIDL_itf_wtypes_0000_0001_0001");
    static final jdk.incubator.foreign.MemoryLayout __MIDL___MIDL_itf_wtypes_0000_0001_0001$struct$LAYOUT() { return __MIDL___MIDL_itf_wtypes_0000_0001_0001$struct$LAYOUT_; }

    static final MemoryLayout __MIDL___MIDL_itf_wtypes_0000_0001_0001$tyspec$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout __MIDL___MIDL_itf_wtypes_0000_0001_0001$tyspec$LAYOUT() { return __MIDL___MIDL_itf_wtypes_0000_0001_0001$tyspec$LAYOUT_; }

    static final VarHandle __MIDL___MIDL_itf_wtypes_0000_0001_0001$tyspec$VH_ = __MIDL___MIDL_itf_wtypes_0000_0001_0001$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tyspec"));
    static final java.lang.invoke.VarHandle __MIDL___MIDL_itf_wtypes_0000_0001_0001$tyspec$VH() { return __MIDL___MIDL_itf_wtypes_0000_0001_0001$tyspec$VH_; }

    static final MemoryLayout __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$union$LAYOUT_ = MemoryLayout.ofUnion(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("clsid"),
        C_POINTER.withName("pFileExt"),
        C_POINTER.withName("pMimeType"),
        C_POINTER.withName("pProgId"),
        C_POINTER.withName("pFileName"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pPackageName"),
            MemoryLayout.ofStruct(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
            ).withName("PolicyId")
        ).withName("ByName"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
            ).withName("ObjectId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
            ).withName("PolicyId")
        ).withName("ByObjectId")
    ).withName("__MIDL___MIDL_itf_wtypes_0000_0001_0005");
    static final jdk.incubator.foreign.MemoryLayout __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$union$LAYOUT() { return __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$union$LAYOUT_; }

    static final MemoryLayout __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pFileExt$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pFileExt$LAYOUT() { return __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pFileExt$LAYOUT_; }

    static final VarHandle __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pFileExt$VH_ = MemoryHandles.asAddressVarHandle(__MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pFileExt")));
    static final java.lang.invoke.VarHandle __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pFileExt$VH() { return __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pFileExt$VH_; }

    static final MemoryLayout __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pMimeType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pMimeType$LAYOUT() { return __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pMimeType$LAYOUT_; }

    static final VarHandle __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pMimeType$VH_ = MemoryHandles.asAddressVarHandle(__MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pMimeType")));
    static final java.lang.invoke.VarHandle __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pMimeType$VH() { return __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pMimeType$VH_; }

    static final MemoryLayout __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pProgId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pProgId$LAYOUT() { return __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pProgId$LAYOUT_; }

    static final VarHandle __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pProgId$VH_ = MemoryHandles.asAddressVarHandle(__MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pProgId")));
    static final java.lang.invoke.VarHandle __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pProgId$VH() { return __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pProgId$VH_; }

    static final MemoryLayout __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pFileName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pFileName$LAYOUT() { return __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pFileName$LAYOUT_; }

    static final VarHandle __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pFileName$VH_ = MemoryHandles.asAddressVarHandle(__MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pFileName")));
    static final java.lang.invoke.VarHandle __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pFileName$VH() { return __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$pFileName$VH_; }

    static final MemoryLayout __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$ByName$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pPackageName"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("PolicyId")
    );
    static final jdk.incubator.foreign.MemoryLayout __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$ByName$struct$LAYOUT() { return __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$ByName$struct$LAYOUT_; }

    static final MemoryLayout __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$ByName$pPackageName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$ByName$pPackageName$LAYOUT() { return __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$ByName$pPackageName$LAYOUT_; }

    static final VarHandle __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$ByName$pPackageName$VH_ = MemoryHandles.asAddressVarHandle(__MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$ByName$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pPackageName")));
    static final java.lang.invoke.VarHandle __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$ByName$pPackageName$VH() { return __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$ByName$pPackageName$VH_; }

    static final MemoryLayout __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$ByObjectId$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ObjectId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("PolicyId")
    );
    static final jdk.incubator.foreign.MemoryLayout __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$ByObjectId$struct$LAYOUT() { return __MIDL___MIDL_itf_wtypes_0000_0001_0001$__MIDL___MIDL_itf_wtypes_0000_0001_0005$ByObjectId$struct$LAYOUT_; }

    static final MemoryLayout __MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec$VH() { return __MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec", __MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec$VH() { return __MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec", __MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout GUID_DEVINTERFACE_DISK$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVINTERFACE_DISK$LAYOUT() { return GUID_DEVINTERFACE_DISK$LAYOUT_; }

    static final MemorySegment GUID_DEVINTERFACE_DISK$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVINTERFACE_DISK", GUID_DEVINTERFACE_DISK$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVINTERFACE_DISK$SEGMENT() { return GUID_DEVINTERFACE_DISK$SEGMENT_; }

    static final MemoryLayout GUID_DEVINTERFACE_CDROM$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVINTERFACE_CDROM$LAYOUT() { return GUID_DEVINTERFACE_CDROM$LAYOUT_; }

    static final MemorySegment GUID_DEVINTERFACE_CDROM$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVINTERFACE_CDROM", GUID_DEVINTERFACE_CDROM$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVINTERFACE_CDROM$SEGMENT() { return GUID_DEVINTERFACE_CDROM$SEGMENT_; }

    static final MemoryLayout GUID_DEVINTERFACE_PARTITION$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVINTERFACE_PARTITION$LAYOUT() { return GUID_DEVINTERFACE_PARTITION$LAYOUT_; }

    static final MemorySegment GUID_DEVINTERFACE_PARTITION$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVINTERFACE_PARTITION", GUID_DEVINTERFACE_PARTITION$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVINTERFACE_PARTITION$SEGMENT() { return GUID_DEVINTERFACE_PARTITION$SEGMENT_; }

    static final MemoryLayout GUID_DEVINTERFACE_TAPE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVINTERFACE_TAPE$LAYOUT() { return GUID_DEVINTERFACE_TAPE$LAYOUT_; }

    static final MemorySegment GUID_DEVINTERFACE_TAPE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVINTERFACE_TAPE", GUID_DEVINTERFACE_TAPE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVINTERFACE_TAPE$SEGMENT() { return GUID_DEVINTERFACE_TAPE$SEGMENT_; }

    static final MemoryLayout GUID_DEVINTERFACE_WRITEONCEDISK$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVINTERFACE_WRITEONCEDISK$LAYOUT() { return GUID_DEVINTERFACE_WRITEONCEDISK$LAYOUT_; }

    static final MemorySegment GUID_DEVINTERFACE_WRITEONCEDISK$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVINTERFACE_WRITEONCEDISK", GUID_DEVINTERFACE_WRITEONCEDISK$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVINTERFACE_WRITEONCEDISK$SEGMENT() { return GUID_DEVINTERFACE_WRITEONCEDISK$SEGMENT_; }

    static final MemoryLayout GUID_DEVINTERFACE_VOLUME$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVINTERFACE_VOLUME$LAYOUT() { return GUID_DEVINTERFACE_VOLUME$LAYOUT_; }

    static final MemorySegment GUID_DEVINTERFACE_VOLUME$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVINTERFACE_VOLUME", GUID_DEVINTERFACE_VOLUME$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVINTERFACE_VOLUME$SEGMENT() { return GUID_DEVINTERFACE_VOLUME$SEGMENT_; }

    static final MemoryLayout GUID_DEVINTERFACE_MEDIUMCHANGER$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVINTERFACE_MEDIUMCHANGER$LAYOUT() { return GUID_DEVINTERFACE_MEDIUMCHANGER$LAYOUT_; }

    static final MemorySegment GUID_DEVINTERFACE_MEDIUMCHANGER$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVINTERFACE_MEDIUMCHANGER", GUID_DEVINTERFACE_MEDIUMCHANGER$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVINTERFACE_MEDIUMCHANGER$SEGMENT() { return GUID_DEVINTERFACE_MEDIUMCHANGER$SEGMENT_; }

    static final MemoryLayout GUID_DEVINTERFACE_FLOPPY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVINTERFACE_FLOPPY$LAYOUT() { return GUID_DEVINTERFACE_FLOPPY$LAYOUT_; }

    static final MemorySegment GUID_DEVINTERFACE_FLOPPY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVINTERFACE_FLOPPY", GUID_DEVINTERFACE_FLOPPY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVINTERFACE_FLOPPY$SEGMENT() { return GUID_DEVINTERFACE_FLOPPY$SEGMENT_; }

    static final MemoryLayout GUID_DEVINTERFACE_CDCHANGER$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVINTERFACE_CDCHANGER$LAYOUT() { return GUID_DEVINTERFACE_CDCHANGER$LAYOUT_; }

    static final MemorySegment GUID_DEVINTERFACE_CDCHANGER$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVINTERFACE_CDCHANGER", GUID_DEVINTERFACE_CDCHANGER$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVINTERFACE_CDCHANGER$SEGMENT() { return GUID_DEVINTERFACE_CDCHANGER$SEGMENT_; }

    static final MemoryLayout GUID_DEVINTERFACE_STORAGEPORT$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVINTERFACE_STORAGEPORT$LAYOUT() { return GUID_DEVINTERFACE_STORAGEPORT$LAYOUT_; }

    static final MemorySegment GUID_DEVINTERFACE_STORAGEPORT$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVINTERFACE_STORAGEPORT", GUID_DEVINTERFACE_STORAGEPORT$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVINTERFACE_STORAGEPORT$SEGMENT() { return GUID_DEVINTERFACE_STORAGEPORT$SEGMENT_; }

    static final MemoryLayout GUID_DEVINTERFACE_VMLUN$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVINTERFACE_VMLUN$LAYOUT() { return GUID_DEVINTERFACE_VMLUN$LAYOUT_; }

    static final MemorySegment GUID_DEVINTERFACE_VMLUN$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVINTERFACE_VMLUN", GUID_DEVINTERFACE_VMLUN$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVINTERFACE_VMLUN$SEGMENT() { return GUID_DEVINTERFACE_VMLUN$SEGMENT_; }

    static final MemoryLayout GUID_DEVINTERFACE_SES$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVINTERFACE_SES$LAYOUT() { return GUID_DEVINTERFACE_SES$LAYOUT_; }

    static final MemorySegment GUID_DEVINTERFACE_SES$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVINTERFACE_SES", GUID_DEVINTERFACE_SES$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVINTERFACE_SES$SEGMENT() { return GUID_DEVINTERFACE_SES$SEGMENT_; }

    static final MemoryLayout GUID_DEVINTERFACE_SERVICE_VOLUME$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVINTERFACE_SERVICE_VOLUME$LAYOUT() { return GUID_DEVINTERFACE_SERVICE_VOLUME$LAYOUT_; }

    static final MemorySegment GUID_DEVINTERFACE_SERVICE_VOLUME$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVINTERFACE_SERVICE_VOLUME", GUID_DEVINTERFACE_SERVICE_VOLUME$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVINTERFACE_SERVICE_VOLUME$SEGMENT() { return GUID_DEVINTERFACE_SERVICE_VOLUME$SEGMENT_; }

    static final MemoryLayout GUID_DEVINTERFACE_HIDDEN_VOLUME$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVINTERFACE_HIDDEN_VOLUME$LAYOUT() { return GUID_DEVINTERFACE_HIDDEN_VOLUME$LAYOUT_; }

    static final MemorySegment GUID_DEVINTERFACE_HIDDEN_VOLUME$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVINTERFACE_HIDDEN_VOLUME", GUID_DEVINTERFACE_HIDDEN_VOLUME$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVINTERFACE_HIDDEN_VOLUME$SEGMENT() { return GUID_DEVINTERFACE_HIDDEN_VOLUME$SEGMENT_; }

    static final MemoryLayout GUID_DEVINTERFACE_UNIFIED_ACCESS_RPMB$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVINTERFACE_UNIFIED_ACCESS_RPMB$LAYOUT() { return GUID_DEVINTERFACE_UNIFIED_ACCESS_RPMB$LAYOUT_; }

    static final MemorySegment GUID_DEVINTERFACE_UNIFIED_ACCESS_RPMB$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVINTERFACE_UNIFIED_ACCESS_RPMB", GUID_DEVINTERFACE_UNIFIED_ACCESS_RPMB$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVINTERFACE_UNIFIED_ACCESS_RPMB$SEGMENT() { return GUID_DEVINTERFACE_UNIFIED_ACCESS_RPMB$SEGMENT_; }

    static final MemoryLayout GUID_DEVINTERFACE_SCM_PHYSICAL_DEVICE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVINTERFACE_SCM_PHYSICAL_DEVICE$LAYOUT() { return GUID_DEVINTERFACE_SCM_PHYSICAL_DEVICE$LAYOUT_; }

    static final MemorySegment GUID_DEVINTERFACE_SCM_PHYSICAL_DEVICE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVINTERFACE_SCM_PHYSICAL_DEVICE", GUID_DEVINTERFACE_SCM_PHYSICAL_DEVICE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVINTERFACE_SCM_PHYSICAL_DEVICE$SEGMENT() { return GUID_DEVINTERFACE_SCM_PHYSICAL_DEVICE$SEGMENT_; }

    static final MemoryLayout GUID_SCM_PD_HEALTH_NOTIFICATION$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_SCM_PD_HEALTH_NOTIFICATION$LAYOUT() { return GUID_SCM_PD_HEALTH_NOTIFICATION$LAYOUT_; }

    static final MemorySegment GUID_SCM_PD_HEALTH_NOTIFICATION$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_SCM_PD_HEALTH_NOTIFICATION", GUID_SCM_PD_HEALTH_NOTIFICATION$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_SCM_PD_HEALTH_NOTIFICATION$SEGMENT() { return GUID_SCM_PD_HEALTH_NOTIFICATION$SEGMENT_; }

    static final MemoryLayout GUID_SCM_PD_PASSTHROUGH_INVDIMM$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_SCM_PD_PASSTHROUGH_INVDIMM$LAYOUT() { return GUID_SCM_PD_PASSTHROUGH_INVDIMM$LAYOUT_; }

    static final MemorySegment GUID_SCM_PD_PASSTHROUGH_INVDIMM$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_SCM_PD_PASSTHROUGH_INVDIMM", GUID_SCM_PD_PASSTHROUGH_INVDIMM$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_SCM_PD_PASSTHROUGH_INVDIMM$SEGMENT() { return GUID_SCM_PD_PASSTHROUGH_INVDIMM$SEGMENT_; }

    static final MemoryLayout GUID_DEVINTERFACE_COMPORT$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVINTERFACE_COMPORT$LAYOUT() { return GUID_DEVINTERFACE_COMPORT$LAYOUT_; }

    static final MemorySegment GUID_DEVINTERFACE_COMPORT$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVINTERFACE_COMPORT", GUID_DEVINTERFACE_COMPORT$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVINTERFACE_COMPORT$SEGMENT() { return GUID_DEVINTERFACE_COMPORT$SEGMENT_; }

    static final MemoryLayout GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR$LAYOUT() { return GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR$LAYOUT_; }

    static final MemorySegment GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR", GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR$SEGMENT() { return GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR$SEGMENT_; }

    static final MemoryLayout _STORAGE_HOTPLUG_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        C_CHAR.withName("MediaRemovable"),
        C_CHAR.withName("MediaHotplug"),
        C_CHAR.withName("DeviceHotplug"),
        C_CHAR.withName("WriteCacheEnableOverride")
    ).withName("_STORAGE_HOTPLUG_INFO");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HOTPLUG_INFO$struct$LAYOUT() { return _STORAGE_HOTPLUG_INFO$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_HOTPLUG_INFO$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HOTPLUG_INFO$Size$LAYOUT() { return _STORAGE_HOTPLUG_INFO$Size$LAYOUT_; }

    static final VarHandle _STORAGE_HOTPLUG_INFO$Size$VH_ = _STORAGE_HOTPLUG_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_HOTPLUG_INFO$Size$VH() { return _STORAGE_HOTPLUG_INFO$Size$VH_; }

    static final MemoryLayout _STORAGE_HOTPLUG_INFO$MediaRemovable$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HOTPLUG_INFO$MediaRemovable$LAYOUT() { return _STORAGE_HOTPLUG_INFO$MediaRemovable$LAYOUT_; }

    static final VarHandle _STORAGE_HOTPLUG_INFO$MediaRemovable$VH_ = _STORAGE_HOTPLUG_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("MediaRemovable"));
    static final java.lang.invoke.VarHandle _STORAGE_HOTPLUG_INFO$MediaRemovable$VH() { return _STORAGE_HOTPLUG_INFO$MediaRemovable$VH_; }

    static final MemoryLayout _STORAGE_HOTPLUG_INFO$MediaHotplug$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HOTPLUG_INFO$MediaHotplug$LAYOUT() { return _STORAGE_HOTPLUG_INFO$MediaHotplug$LAYOUT_; }

    static final VarHandle _STORAGE_HOTPLUG_INFO$MediaHotplug$VH_ = _STORAGE_HOTPLUG_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("MediaHotplug"));
    static final java.lang.invoke.VarHandle _STORAGE_HOTPLUG_INFO$MediaHotplug$VH() { return _STORAGE_HOTPLUG_INFO$MediaHotplug$VH_; }

    static final MemoryLayout _STORAGE_HOTPLUG_INFO$DeviceHotplug$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HOTPLUG_INFO$DeviceHotplug$LAYOUT() { return _STORAGE_HOTPLUG_INFO$DeviceHotplug$LAYOUT_; }

    static final VarHandle _STORAGE_HOTPLUG_INFO$DeviceHotplug$VH_ = _STORAGE_HOTPLUG_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("DeviceHotplug"));
    static final java.lang.invoke.VarHandle _STORAGE_HOTPLUG_INFO$DeviceHotplug$VH() { return _STORAGE_HOTPLUG_INFO$DeviceHotplug$VH_; }

    static final MemoryLayout _STORAGE_HOTPLUG_INFO$WriteCacheEnableOverride$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HOTPLUG_INFO$WriteCacheEnableOverride$LAYOUT() { return _STORAGE_HOTPLUG_INFO$WriteCacheEnableOverride$LAYOUT_; }

    static final VarHandle _STORAGE_HOTPLUG_INFO$WriteCacheEnableOverride$VH_ = _STORAGE_HOTPLUG_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("WriteCacheEnableOverride"));
    static final java.lang.invoke.VarHandle _STORAGE_HOTPLUG_INFO$WriteCacheEnableOverride$VH() { return _STORAGE_HOTPLUG_INFO$WriteCacheEnableOverride$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_NUMBER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("DeviceType"),
        C_LONG.withName("DeviceNumber"),
        C_LONG.withName("PartitionNumber")
    ).withName("_STORAGE_DEVICE_NUMBER");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_NUMBER$struct$LAYOUT() { return _STORAGE_DEVICE_NUMBER$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_DEVICE_NUMBER$DeviceType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_NUMBER$DeviceType$LAYOUT() { return _STORAGE_DEVICE_NUMBER$DeviceType$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_NUMBER$DeviceType$VH_ = _STORAGE_DEVICE_NUMBER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DeviceType"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_NUMBER$DeviceType$VH() { return _STORAGE_DEVICE_NUMBER$DeviceType$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_NUMBER$DeviceNumber$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_NUMBER$DeviceNumber$LAYOUT() { return _STORAGE_DEVICE_NUMBER$DeviceNumber$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_NUMBER$DeviceNumber$VH_ = _STORAGE_DEVICE_NUMBER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DeviceNumber"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_NUMBER$DeviceNumber$VH() { return _STORAGE_DEVICE_NUMBER$DeviceNumber$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_NUMBER$PartitionNumber$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_NUMBER$PartitionNumber$LAYOUT() { return _STORAGE_DEVICE_NUMBER$PartitionNumber$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_NUMBER$PartitionNumber$VH_ = _STORAGE_DEVICE_NUMBER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PartitionNumber"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_NUMBER$PartitionNumber$VH() { return _STORAGE_DEVICE_NUMBER$PartitionNumber$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_NUMBERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("NumberOfDevices"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONG.withName("DeviceType"),
            C_LONG.withName("DeviceNumber"),
            C_LONG.withName("PartitionNumber")
        ).withName("_STORAGE_DEVICE_NUMBER")).withName("Devices")
    ).withName("_STORAGE_DEVICE_NUMBERS");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_NUMBERS$struct$LAYOUT() { return _STORAGE_DEVICE_NUMBERS$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_DEVICE_NUMBERS$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_NUMBERS$Version$LAYOUT() { return _STORAGE_DEVICE_NUMBERS$Version$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_NUMBERS$Version$VH_ = _STORAGE_DEVICE_NUMBERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_NUMBERS$Version$VH() { return _STORAGE_DEVICE_NUMBERS$Version$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_NUMBERS$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_NUMBERS$Size$LAYOUT() { return _STORAGE_DEVICE_NUMBERS$Size$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_NUMBERS$Size$VH_ = _STORAGE_DEVICE_NUMBERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_NUMBERS$Size$VH() { return _STORAGE_DEVICE_NUMBERS$Size$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_NUMBERS$NumberOfDevices$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_NUMBERS$NumberOfDevices$LAYOUT() { return _STORAGE_DEVICE_NUMBERS$NumberOfDevices$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_NUMBERS$NumberOfDevices$VH_ = _STORAGE_DEVICE_NUMBERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfDevices"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_NUMBERS$NumberOfDevices$VH() { return _STORAGE_DEVICE_NUMBERS$NumberOfDevices$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_NUMBER_EX$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("Flags"),
        C_LONG.withName("DeviceType"),
        C_LONG.withName("DeviceNumber"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("DeviceGuid"),
        C_LONG.withName("PartitionNumber")
    ).withName("_STORAGE_DEVICE_NUMBER_EX");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_NUMBER_EX$struct$LAYOUT() { return _STORAGE_DEVICE_NUMBER_EX$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_DEVICE_NUMBER_EX$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_NUMBER_EX$Version$LAYOUT() { return _STORAGE_DEVICE_NUMBER_EX$Version$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_NUMBER_EX$Version$VH_ = _STORAGE_DEVICE_NUMBER_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_NUMBER_EX$Version$VH() { return _STORAGE_DEVICE_NUMBER_EX$Version$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_NUMBER_EX$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_NUMBER_EX$Size$LAYOUT() { return _STORAGE_DEVICE_NUMBER_EX$Size$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_NUMBER_EX$Size$VH_ = _STORAGE_DEVICE_NUMBER_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_NUMBER_EX$Size$VH() { return _STORAGE_DEVICE_NUMBER_EX$Size$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_NUMBER_EX$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_NUMBER_EX$Flags$LAYOUT() { return _STORAGE_DEVICE_NUMBER_EX$Flags$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_NUMBER_EX$Flags$VH_ = _STORAGE_DEVICE_NUMBER_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_NUMBER_EX$Flags$VH() { return _STORAGE_DEVICE_NUMBER_EX$Flags$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_NUMBER_EX$DeviceType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_NUMBER_EX$DeviceType$LAYOUT() { return _STORAGE_DEVICE_NUMBER_EX$DeviceType$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_NUMBER_EX$DeviceType$VH_ = _STORAGE_DEVICE_NUMBER_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DeviceType"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_NUMBER_EX$DeviceType$VH() { return _STORAGE_DEVICE_NUMBER_EX$DeviceType$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_NUMBER_EX$DeviceNumber$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_NUMBER_EX$DeviceNumber$LAYOUT() { return _STORAGE_DEVICE_NUMBER_EX$DeviceNumber$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_NUMBER_EX$DeviceNumber$VH_ = _STORAGE_DEVICE_NUMBER_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DeviceNumber"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_NUMBER_EX$DeviceNumber$VH() { return _STORAGE_DEVICE_NUMBER_EX$DeviceNumber$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_NUMBER_EX$PartitionNumber$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_NUMBER_EX$PartitionNumber$LAYOUT() { return _STORAGE_DEVICE_NUMBER_EX$PartitionNumber$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_NUMBER_EX$PartitionNumber$VH_ = _STORAGE_DEVICE_NUMBER_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PartitionNumber"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_NUMBER_EX$PartitionNumber$VH() { return _STORAGE_DEVICE_NUMBER_EX$PartitionNumber$VH_; }

    static final MemoryLayout _STORAGE_BUS_RESET_REQUEST$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("PathId")
    ).withName("_STORAGE_BUS_RESET_REQUEST");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_BUS_RESET_REQUEST$struct$LAYOUT() { return _STORAGE_BUS_RESET_REQUEST$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_BUS_RESET_REQUEST$PathId$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_BUS_RESET_REQUEST$PathId$LAYOUT() { return _STORAGE_BUS_RESET_REQUEST$PathId$LAYOUT_; }

    static final VarHandle _STORAGE_BUS_RESET_REQUEST$PathId$VH_ = _STORAGE_BUS_RESET_REQUEST$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("PathId"));
    static final java.lang.invoke.VarHandle _STORAGE_BUS_RESET_REQUEST$PathId$VH() { return _STORAGE_BUS_RESET_REQUEST$PathId$VH_; }

    static final MemoryLayout STORAGE_BREAK_RESERVATION_REQUEST$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Length"),
        C_CHAR.withName("_unused"),
        C_CHAR.withName("PathId"),
        C_CHAR.withName("TargetId"),
        C_CHAR.withName("Lun")
    ).withName("STORAGE_BREAK_RESERVATION_REQUEST");
    static final jdk.incubator.foreign.MemoryLayout STORAGE_BREAK_RESERVATION_REQUEST$struct$LAYOUT() { return STORAGE_BREAK_RESERVATION_REQUEST$struct$LAYOUT_; }

    static final MemoryLayout STORAGE_BREAK_RESERVATION_REQUEST$Length$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout STORAGE_BREAK_RESERVATION_REQUEST$Length$LAYOUT() { return STORAGE_BREAK_RESERVATION_REQUEST$Length$LAYOUT_; }

    static final VarHandle STORAGE_BREAK_RESERVATION_REQUEST$Length$VH_ = STORAGE_BREAK_RESERVATION_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Length"));
    static final java.lang.invoke.VarHandle STORAGE_BREAK_RESERVATION_REQUEST$Length$VH() { return STORAGE_BREAK_RESERVATION_REQUEST$Length$VH_; }

    static final MemoryLayout STORAGE_BREAK_RESERVATION_REQUEST$_unused$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout STORAGE_BREAK_RESERVATION_REQUEST$_unused$LAYOUT() { return STORAGE_BREAK_RESERVATION_REQUEST$_unused$LAYOUT_; }

    static final VarHandle STORAGE_BREAK_RESERVATION_REQUEST$_unused$VH_ = STORAGE_BREAK_RESERVATION_REQUEST$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("_unused"));
    static final java.lang.invoke.VarHandle STORAGE_BREAK_RESERVATION_REQUEST$_unused$VH() { return STORAGE_BREAK_RESERVATION_REQUEST$_unused$VH_; }

    static final MemoryLayout STORAGE_BREAK_RESERVATION_REQUEST$PathId$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout STORAGE_BREAK_RESERVATION_REQUEST$PathId$LAYOUT() { return STORAGE_BREAK_RESERVATION_REQUEST$PathId$LAYOUT_; }

    static final VarHandle STORAGE_BREAK_RESERVATION_REQUEST$PathId$VH_ = STORAGE_BREAK_RESERVATION_REQUEST$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("PathId"));
    static final java.lang.invoke.VarHandle STORAGE_BREAK_RESERVATION_REQUEST$PathId$VH() { return STORAGE_BREAK_RESERVATION_REQUEST$PathId$VH_; }

    static final MemoryLayout STORAGE_BREAK_RESERVATION_REQUEST$TargetId$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout STORAGE_BREAK_RESERVATION_REQUEST$TargetId$LAYOUT() { return STORAGE_BREAK_RESERVATION_REQUEST$TargetId$LAYOUT_; }

    static final VarHandle STORAGE_BREAK_RESERVATION_REQUEST$TargetId$VH_ = STORAGE_BREAK_RESERVATION_REQUEST$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("TargetId"));
    static final java.lang.invoke.VarHandle STORAGE_BREAK_RESERVATION_REQUEST$TargetId$VH() { return STORAGE_BREAK_RESERVATION_REQUEST$TargetId$VH_; }

    static final MemoryLayout STORAGE_BREAK_RESERVATION_REQUEST$Lun$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout STORAGE_BREAK_RESERVATION_REQUEST$Lun$LAYOUT() { return STORAGE_BREAK_RESERVATION_REQUEST$Lun$LAYOUT_; }

    static final VarHandle STORAGE_BREAK_RESERVATION_REQUEST$Lun$VH_ = STORAGE_BREAK_RESERVATION_REQUEST$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Lun"));
    static final java.lang.invoke.VarHandle STORAGE_BREAK_RESERVATION_REQUEST$Lun$VH() { return STORAGE_BREAK_RESERVATION_REQUEST$Lun$VH_; }

    static final MemoryLayout _PREVENT_MEDIA_REMOVAL$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("PreventMediaRemoval")
    ).withName("_PREVENT_MEDIA_REMOVAL");
    static final jdk.incubator.foreign.MemoryLayout _PREVENT_MEDIA_REMOVAL$struct$LAYOUT() { return _PREVENT_MEDIA_REMOVAL$struct$LAYOUT_; }

    static final MemoryLayout _PREVENT_MEDIA_REMOVAL$PreventMediaRemoval$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _PREVENT_MEDIA_REMOVAL$PreventMediaRemoval$LAYOUT() { return _PREVENT_MEDIA_REMOVAL$PreventMediaRemoval$LAYOUT_; }

    static final VarHandle _PREVENT_MEDIA_REMOVAL$PreventMediaRemoval$VH_ = _PREVENT_MEDIA_REMOVAL$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("PreventMediaRemoval"));
    static final java.lang.invoke.VarHandle _PREVENT_MEDIA_REMOVAL$PreventMediaRemoval$VH() { return _PREVENT_MEDIA_REMOVAL$PreventMediaRemoval$VH_; }

    static final MemoryLayout _CLASS_MEDIA_CHANGE_CONTEXT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("MediaChangeCount"),
        C_LONG.withName("NewState")
    ).withName("_CLASS_MEDIA_CHANGE_CONTEXT");
    static final jdk.incubator.foreign.MemoryLayout _CLASS_MEDIA_CHANGE_CONTEXT$struct$LAYOUT() { return _CLASS_MEDIA_CHANGE_CONTEXT$struct$LAYOUT_; }

    static final MemoryLayout _CLASS_MEDIA_CHANGE_CONTEXT$MediaChangeCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CLASS_MEDIA_CHANGE_CONTEXT$MediaChangeCount$LAYOUT() { return _CLASS_MEDIA_CHANGE_CONTEXT$MediaChangeCount$LAYOUT_; }

    static final VarHandle _CLASS_MEDIA_CHANGE_CONTEXT$MediaChangeCount$VH_ = _CLASS_MEDIA_CHANGE_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MediaChangeCount"));
    static final java.lang.invoke.VarHandle _CLASS_MEDIA_CHANGE_CONTEXT$MediaChangeCount$VH() { return _CLASS_MEDIA_CHANGE_CONTEXT$MediaChangeCount$VH_; }

    static final MemoryLayout _CLASS_MEDIA_CHANGE_CONTEXT$NewState$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CLASS_MEDIA_CHANGE_CONTEXT$NewState$LAYOUT() { return _CLASS_MEDIA_CHANGE_CONTEXT$NewState$LAYOUT_; }

    static final VarHandle _CLASS_MEDIA_CHANGE_CONTEXT$NewState$VH_ = _CLASS_MEDIA_CHANGE_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NewState"));
    static final java.lang.invoke.VarHandle _CLASS_MEDIA_CHANGE_CONTEXT$NewState$VH() { return _CLASS_MEDIA_CHANGE_CONTEXT$NewState$VH_; }

    static final MemoryLayout _TAPE_STATISTICS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Flags"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("RecoveredWrites"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("UnrecoveredWrites"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("RecoveredReads"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("UnrecoveredReads"),
        C_CHAR.withName("CompressionRatioReads"),
        C_CHAR.withName("CompressionRatioWrites"),
        MemoryLayout.ofPaddingBits(48)
    ).withName("_TAPE_STATISTICS");
    static final jdk.incubator.foreign.MemoryLayout _TAPE_STATISTICS$struct$LAYOUT() { return _TAPE_STATISTICS$struct$LAYOUT_; }

    static final MemoryLayout _TAPE_STATISTICS$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_STATISTICS$Version$LAYOUT() { return _TAPE_STATISTICS$Version$LAYOUT_; }

    static final VarHandle _TAPE_STATISTICS$Version$VH_ = _TAPE_STATISTICS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _TAPE_STATISTICS$Version$VH() { return _TAPE_STATISTICS$Version$VH_; }

    static final MemoryLayout _TAPE_STATISTICS$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_STATISTICS$Flags$LAYOUT() { return _TAPE_STATISTICS$Flags$LAYOUT_; }

    static final VarHandle _TAPE_STATISTICS$Flags$VH_ = _TAPE_STATISTICS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _TAPE_STATISTICS$Flags$VH() { return _TAPE_STATISTICS$Flags$VH_; }

    static final MemoryLayout _TAPE_STATISTICS$CompressionRatioReads$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_STATISTICS$CompressionRatioReads$LAYOUT() { return _TAPE_STATISTICS$CompressionRatioReads$LAYOUT_; }

    static final VarHandle _TAPE_STATISTICS$CompressionRatioReads$VH_ = _TAPE_STATISTICS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("CompressionRatioReads"));
    static final java.lang.invoke.VarHandle _TAPE_STATISTICS$CompressionRatioReads$VH() { return _TAPE_STATISTICS$CompressionRatioReads$VH_; }

    static final MemoryLayout _TAPE_STATISTICS$CompressionRatioWrites$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_STATISTICS$CompressionRatioWrites$LAYOUT() { return _TAPE_STATISTICS$CompressionRatioWrites$LAYOUT_; }

    static final VarHandle _TAPE_STATISTICS$CompressionRatioWrites$VH_ = _TAPE_STATISTICS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("CompressionRatioWrites"));
    static final java.lang.invoke.VarHandle _TAPE_STATISTICS$CompressionRatioWrites$VH() { return _TAPE_STATISTICS$CompressionRatioWrites$VH_; }

    static final MemoryLayout _TAPE_GET_STATISTICS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Operation")
    ).withName("_TAPE_GET_STATISTICS");
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_STATISTICS$struct$LAYOUT() { return _TAPE_GET_STATISTICS$struct$LAYOUT_; }

    static final MemoryLayout _TAPE_GET_STATISTICS$Operation$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_STATISTICS$Operation$LAYOUT() { return _TAPE_GET_STATISTICS$Operation$LAYOUT_; }

    static final VarHandle _TAPE_GET_STATISTICS$Operation$VH_ = _TAPE_GET_STATISTICS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Operation"));
    static final java.lang.invoke.VarHandle _TAPE_GET_STATISTICS$Operation$VH() { return _TAPE_GET_STATISTICS$Operation$VH_; }

    static final int DDS_4mm() { return (int)32L; }

    static final int MiniQic() { return (int)33L; }

    static final int Travan() { return (int)34L; }

    static final int QIC() { return (int)35L; }

    static final int MP_8mm() { return (int)36L; }

    static final int AME_8mm() { return (int)37L; }

    static final int AIT1_8mm() { return (int)38L; }

    static final int DLT() { return (int)39L; }

    static final int NCTP() { return (int)40L; }

    static final int IBM_3480() { return (int)41L; }

    static final int IBM_3490E() { return (int)42L; }

    static final int IBM_Magstar_3590() { return (int)43L; }

    static final int IBM_Magstar_MP() { return (int)44L; }

    static final int STK_DATA_D3() { return (int)45L; }

    static final int SONY_DTF() { return (int)46L; }

    static final int DV_6mm() { return (int)47L; }

    static final int DMI() { return (int)48L; }

    static final int SONY_D2() { return (int)49L; }

    static final int CLEANER_CARTRIDGE() { return (int)50L; }

    static final int CD_ROM() { return (int)51L; }

    static final int CD_R() { return (int)52L; }

    static final int CD_RW() { return (int)53L; }

    static final int DVD_ROM() { return (int)54L; }

    static final int DVD_R() { return (int)55L; }

    static final int DVD_RW() { return (int)56L; }

    static final int MO_3_RW() { return (int)57L; }

    static final int MO_5_WO() { return (int)58L; }

    static final int MO_5_RW() { return (int)59L; }

    static final int MO_5_LIMDOW() { return (int)60L; }

    static final int PC_5_WO() { return (int)61L; }

    static final int PC_5_RW() { return (int)62L; }

    static final int PD_5_RW() { return (int)63L; }

    static final int ABL_5_WO() { return (int)64L; }

    static final int PINNACLE_APEX_5_RW() { return (int)65L; }

    static final int SONY_12_WO() { return (int)66L; }

    static final int PHILIPS_12_WO() { return (int)67L; }

    static final int HITACHI_12_WO() { return (int)68L; }

    static final int CYGNET_12_WO() { return (int)69L; }

    static final int KODAK_14_WO() { return (int)70L; }

    static final int MO_NFR_525() { return (int)71L; }

    static final int NIKON_12_RW() { return (int)72L; }

    static final int IOMEGA_ZIP() { return (int)73L; }

    static final int IOMEGA_JAZ() { return (int)74L; }

    static final int SYQUEST_EZ135() { return (int)75L; }

    static final int SYQUEST_EZFLYER() { return (int)76L; }

    static final int SYQUEST_SYJET() { return (int)77L; }

    static final int AVATAR_F2() { return (int)78L; }

    static final int MP2_8mm() { return (int)79L; }

    static final int DST_S() { return (int)80L; }

    static final int DST_M() { return (int)81L; }

    static final int DST_L() { return (int)82L; }

    static final int VXATape_1() { return (int)83L; }

    static final int VXATape_2() { return (int)84L; }

    static final int STK_9840() { return (int)85L; }

    static final int LTO_Ultrium() { return (int)86L; }

    static final int LTO_Accelis() { return (int)87L; }

    static final int DVD_RAM() { return (int)88L; }

    static final int AIT_8mm() { return (int)89L; }

    static final int ADR_1() { return (int)90L; }

    static final int ADR_2() { return (int)91L; }

    static final int STK_9940() { return (int)92L; }

    static final int SAIT() { return (int)93L; }

    static final int VXATape() { return (int)94L; }

    static final int BusTypeUnknown() { return (int)0L; }

    static final int BusTypeScsi() { return (int)1L; }

    static final int BusTypeAtapi() { return (int)2L; }

    static final int BusTypeAta() { return (int)3L; }

    static final int BusType1394() { return (int)4L; }

    static final int BusTypeSsa() { return (int)5L; }

    static final int BusTypeFibre() { return (int)6L; }

    static final int BusTypeUsb() { return (int)7L; }

    static final int BusTypeRAID() { return (int)8L; }

    static final int BusTypeiScsi() { return (int)9L; }

    static final int BusTypeSas() { return (int)10L; }

    static final int BusTypeSata() { return (int)11L; }

    static final int BusTypeSd() { return (int)12L; }

    static final int BusTypeMmc() { return (int)13L; }

    static final int BusTypeVirtual() { return (int)14L; }

    static final int BusTypeFileBackedVirtual() { return (int)15L; }

    static final int BusTypeSpaces() { return (int)16L; }

    static final int BusTypeNvme() { return (int)17L; }

    static final int BusTypeSCM() { return (int)18L; }

    static final int BusTypeUfs() { return (int)19L; }

    static final int BusTypeMax() { return (int)20L; }

    static final int BusTypeMaxReserved() { return (int)127L; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            MemoryLayout.ofStruct(
                MemoryLayout.ofUnion(
                    C_LONG.withName("LowPart"),
                    C_LONG.withName("HighPart"),
                    MemoryLayout.ofStruct(
                        C_LONG.withName("LowPart"),
                        C_LONG.withName("HighPart")
                    ).withName("u"),
                    C_LONGLONG.withName("QuadPart")
                ).withName("Cylinders"),
                C_INT.withName("MediaType"),
                C_LONG.withName("TracksPerCylinder"),
                C_LONG.withName("SectorsPerTrack"),
                C_LONG.withName("BytesPerSector"),
                C_LONG.withName("NumberMediaSides"),
                C_LONG.withName("MediaCharacteristics")
            ).withName("DiskInfo"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofUnion(
                    C_LONG.withName("LowPart"),
                    C_LONG.withName("HighPart"),
                    MemoryLayout.ofStruct(
                        C_LONG.withName("LowPart"),
                        C_LONG.withName("HighPart")
                    ).withName("u"),
                    C_LONGLONG.withName("QuadPart")
                ).withName("Cylinders"),
                C_INT.withName("MediaType"),
                C_LONG.withName("TracksPerCylinder"),
                C_LONG.withName("SectorsPerTrack"),
                C_LONG.withName("BytesPerSector"),
                C_LONG.withName("NumberMediaSides"),
                C_LONG.withName("MediaCharacteristics")
            ).withName("RemovableDiskInfo"),
            MemoryLayout.ofStruct(
                C_INT.withName("MediaType"),
                C_LONG.withName("MediaCharacteristics"),
                C_LONG.withName("CurrentBlockSize"),
                C_INT.withName("BusType"),
                MemoryLayout.ofUnion(
                    MemoryLayout.ofStruct(
                        C_CHAR.withName("MediumType"),
                        C_CHAR.withName("DensityCode")
                    ).withName("ScsiInformation")
                ).withName("BusSpecificData"),
                MemoryLayout.ofPaddingBits(16)
            ).withName("TapeInfo")
        ).withName("DeviceSpecific")
    ).withName("_DEVICE_MEDIA_INFO");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$struct$LAYOUT() { return _DEVICE_MEDIA_INFO$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$union$LAYOUT_ = MemoryLayout.ofUnion(
        MemoryLayout.ofStruct(
            MemoryLayout.ofUnion(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("LowPart"),
                    C_LONG.withName("HighPart")
                ).withName("u"),
                C_LONGLONG.withName("QuadPart")
            ).withName("Cylinders"),
            C_INT.withName("MediaType"),
            C_LONG.withName("TracksPerCylinder"),
            C_LONG.withName("SectorsPerTrack"),
            C_LONG.withName("BytesPerSector"),
            C_LONG.withName("NumberMediaSides"),
            C_LONG.withName("MediaCharacteristics")
        ).withName("DiskInfo"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofUnion(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("LowPart"),
                    C_LONG.withName("HighPart")
                ).withName("u"),
                C_LONGLONG.withName("QuadPart")
            ).withName("Cylinders"),
            C_INT.withName("MediaType"),
            C_LONG.withName("TracksPerCylinder"),
            C_LONG.withName("SectorsPerTrack"),
            C_LONG.withName("BytesPerSector"),
            C_LONG.withName("NumberMediaSides"),
            C_LONG.withName("MediaCharacteristics")
        ).withName("RemovableDiskInfo"),
        MemoryLayout.ofStruct(
            C_INT.withName("MediaType"),
            C_LONG.withName("MediaCharacteristics"),
            C_LONG.withName("CurrentBlockSize"),
            C_INT.withName("BusType"),
            MemoryLayout.ofUnion(
                MemoryLayout.ofStruct(
                    C_CHAR.withName("MediumType"),
                    C_CHAR.withName("DensityCode")
                ).withName("ScsiInformation")
            ).withName("BusSpecificData"),
            MemoryLayout.ofPaddingBits(16)
        ).withName("TapeInfo")
    );
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$union$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$union$LAYOUT_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("Cylinders"),
        C_INT.withName("MediaType"),
        C_LONG.withName("TracksPerCylinder"),
        C_LONG.withName("SectorsPerTrack"),
        C_LONG.withName("BytesPerSector"),
        C_LONG.withName("NumberMediaSides"),
        C_LONG.withName("MediaCharacteristics")
    );
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$struct$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$MediaType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$MediaType$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$MediaType$LAYOUT_; }

    static final VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$MediaType$VH_ = _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MediaType"));
    static final java.lang.invoke.VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$MediaType$VH() { return _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$MediaType$VH_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$TracksPerCylinder$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$TracksPerCylinder$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$TracksPerCylinder$LAYOUT_; }

    static final VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$TracksPerCylinder$VH_ = _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TracksPerCylinder"));
    static final java.lang.invoke.VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$TracksPerCylinder$VH() { return _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$TracksPerCylinder$VH_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$SectorsPerTrack$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$SectorsPerTrack$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$SectorsPerTrack$LAYOUT_; }

    static final VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$SectorsPerTrack$VH_ = _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SectorsPerTrack"));
    static final java.lang.invoke.VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$SectorsPerTrack$VH() { return _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$SectorsPerTrack$VH_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$BytesPerSector$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$BytesPerSector$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$BytesPerSector$LAYOUT_; }

    static final VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$BytesPerSector$VH_ = _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BytesPerSector"));
    static final java.lang.invoke.VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$BytesPerSector$VH() { return _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$BytesPerSector$VH_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$NumberMediaSides$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$NumberMediaSides$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$NumberMediaSides$LAYOUT_; }

    static final VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$NumberMediaSides$VH_ = _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberMediaSides"));
    static final java.lang.invoke.VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$NumberMediaSides$VH() { return _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$NumberMediaSides$VH_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$MediaCharacteristics$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$MediaCharacteristics$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$MediaCharacteristics$LAYOUT_; }

    static final VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$MediaCharacteristics$VH_ = _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MediaCharacteristics"));
    static final java.lang.invoke.VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$MediaCharacteristics$VH() { return _DEVICE_MEDIA_INFO$DeviceSpecific$DiskInfo$MediaCharacteristics$VH_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("Cylinders"),
        C_INT.withName("MediaType"),
        C_LONG.withName("TracksPerCylinder"),
        C_LONG.withName("SectorsPerTrack"),
        C_LONG.withName("BytesPerSector"),
        C_LONG.withName("NumberMediaSides"),
        C_LONG.withName("MediaCharacteristics")
    );
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$struct$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$MediaType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$MediaType$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$MediaType$LAYOUT_; }

    static final VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$MediaType$VH_ = _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MediaType"));
    static final java.lang.invoke.VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$MediaType$VH() { return _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$MediaType$VH_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$TracksPerCylinder$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$TracksPerCylinder$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$TracksPerCylinder$LAYOUT_; }

    static final VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$TracksPerCylinder$VH_ = _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TracksPerCylinder"));
    static final java.lang.invoke.VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$TracksPerCylinder$VH() { return _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$TracksPerCylinder$VH_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$SectorsPerTrack$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$SectorsPerTrack$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$SectorsPerTrack$LAYOUT_; }

    static final VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$SectorsPerTrack$VH_ = _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SectorsPerTrack"));
    static final java.lang.invoke.VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$SectorsPerTrack$VH() { return _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$SectorsPerTrack$VH_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$BytesPerSector$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$BytesPerSector$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$BytesPerSector$LAYOUT_; }

    static final VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$BytesPerSector$VH_ = _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BytesPerSector"));
    static final java.lang.invoke.VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$BytesPerSector$VH() { return _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$BytesPerSector$VH_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$NumberMediaSides$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$NumberMediaSides$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$NumberMediaSides$LAYOUT_; }

    static final VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$NumberMediaSides$VH_ = _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberMediaSides"));
    static final java.lang.invoke.VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$NumberMediaSides$VH() { return _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$NumberMediaSides$VH_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$MediaCharacteristics$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$MediaCharacteristics$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$MediaCharacteristics$LAYOUT_; }

    static final VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$MediaCharacteristics$VH_ = _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MediaCharacteristics"));
    static final java.lang.invoke.VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$MediaCharacteristics$VH() { return _DEVICE_MEDIA_INFO$DeviceSpecific$RemovableDiskInfo$MediaCharacteristics$VH_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("MediaType"),
        C_LONG.withName("MediaCharacteristics"),
        C_LONG.withName("CurrentBlockSize"),
        C_INT.withName("BusType"),
        MemoryLayout.ofUnion(
            MemoryLayout.ofStruct(
                C_CHAR.withName("MediumType"),
                C_CHAR.withName("DensityCode")
            ).withName("ScsiInformation")
        ).withName("BusSpecificData"),
        MemoryLayout.ofPaddingBits(16)
    );
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$struct$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$MediaType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$MediaType$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$MediaType$LAYOUT_; }

    static final VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$MediaType$VH_ = _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MediaType"));
    static final java.lang.invoke.VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$MediaType$VH() { return _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$MediaType$VH_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$MediaCharacteristics$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$MediaCharacteristics$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$MediaCharacteristics$LAYOUT_; }

    static final VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$MediaCharacteristics$VH_ = _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MediaCharacteristics"));
    static final java.lang.invoke.VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$MediaCharacteristics$VH() { return _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$MediaCharacteristics$VH_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$CurrentBlockSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$CurrentBlockSize$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$CurrentBlockSize$LAYOUT_; }

    static final VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$CurrentBlockSize$VH_ = _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CurrentBlockSize"));
    static final java.lang.invoke.VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$CurrentBlockSize$VH() { return _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$CurrentBlockSize$VH_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusType$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusType$LAYOUT_; }

    static final VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusType$VH_ = _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BusType"));
    static final java.lang.invoke.VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusType$VH() { return _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusType$VH_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusSpecificData$union$LAYOUT_ = MemoryLayout.ofUnion(
        MemoryLayout.ofStruct(
            C_CHAR.withName("MediumType"),
            C_CHAR.withName("DensityCode")
        ).withName("ScsiInformation")
    );
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusSpecificData$union$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusSpecificData$union$LAYOUT_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusSpecificData$ScsiInformation$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("MediumType"),
        C_CHAR.withName("DensityCode")
    );
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusSpecificData$ScsiInformation$struct$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusSpecificData$ScsiInformation$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusSpecificData$ScsiInformation$MediumType$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusSpecificData$ScsiInformation$MediumType$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusSpecificData$ScsiInformation$MediumType$LAYOUT_; }

    static final VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusSpecificData$ScsiInformation$MediumType$VH_ = _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusSpecificData$ScsiInformation$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("MediumType"));
    static final java.lang.invoke.VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusSpecificData$ScsiInformation$MediumType$VH() { return _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusSpecificData$ScsiInformation$MediumType$VH_; }

    static final MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusSpecificData$ScsiInformation$DensityCode$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusSpecificData$ScsiInformation$DensityCode$LAYOUT() { return _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusSpecificData$ScsiInformation$DensityCode$LAYOUT_; }

    static final VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusSpecificData$ScsiInformation$DensityCode$VH_ = _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusSpecificData$ScsiInformation$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("DensityCode"));
    static final java.lang.invoke.VarHandle _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusSpecificData$ScsiInformation$DensityCode$VH() { return _DEVICE_MEDIA_INFO$DeviceSpecific$TapeInfo$BusSpecificData$ScsiInformation$DensityCode$VH_; }

    static final MemoryLayout _GET_MEDIA_TYPES$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("DeviceType"),
        C_LONG.withName("MediaInfoCount"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            MemoryLayout.ofUnion(
                MemoryLayout.ofStruct(
                    MemoryLayout.ofUnion(
                        C_LONG.withName("LowPart"),
                        C_LONG.withName("HighPart"),
                        MemoryLayout.ofStruct(
                            C_LONG.withName("LowPart"),
                            C_LONG.withName("HighPart")
                        ).withName("u"),
                        C_LONGLONG.withName("QuadPart")
                    ).withName("Cylinders"),
                    C_INT.withName("MediaType"),
                    C_LONG.withName("TracksPerCylinder"),
                    C_LONG.withName("SectorsPerTrack"),
                    C_LONG.withName("BytesPerSector"),
                    C_LONG.withName("NumberMediaSides"),
                    C_LONG.withName("MediaCharacteristics")
                ).withName("DiskInfo"),
                MemoryLayout.ofStruct(
                    MemoryLayout.ofUnion(
                        C_LONG.withName("LowPart"),
                        C_LONG.withName("HighPart"),
                        MemoryLayout.ofStruct(
                            C_LONG.withName("LowPart"),
                            C_LONG.withName("HighPart")
                        ).withName("u"),
                        C_LONGLONG.withName("QuadPart")
                    ).withName("Cylinders"),
                    C_INT.withName("MediaType"),
                    C_LONG.withName("TracksPerCylinder"),
                    C_LONG.withName("SectorsPerTrack"),
                    C_LONG.withName("BytesPerSector"),
                    C_LONG.withName("NumberMediaSides"),
                    C_LONG.withName("MediaCharacteristics")
                ).withName("RemovableDiskInfo"),
                MemoryLayout.ofStruct(
                    C_INT.withName("MediaType"),
                    C_LONG.withName("MediaCharacteristics"),
                    C_LONG.withName("CurrentBlockSize"),
                    C_INT.withName("BusType"),
                    MemoryLayout.ofUnion(
                        MemoryLayout.ofStruct(
                            C_CHAR.withName("MediumType"),
                            C_CHAR.withName("DensityCode")
                        ).withName("ScsiInformation")
                    ).withName("BusSpecificData"),
                    MemoryLayout.ofPaddingBits(16)
                ).withName("TapeInfo")
            ).withName("DeviceSpecific")
        ).withName("_DEVICE_MEDIA_INFO")).withName("MediaInfo")
    ).withName("_GET_MEDIA_TYPES");
    static final jdk.incubator.foreign.MemoryLayout _GET_MEDIA_TYPES$struct$LAYOUT() { return _GET_MEDIA_TYPES$struct$LAYOUT_; }

    static final MemoryLayout _GET_MEDIA_TYPES$DeviceType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _GET_MEDIA_TYPES$DeviceType$LAYOUT() { return _GET_MEDIA_TYPES$DeviceType$LAYOUT_; }

    static final VarHandle _GET_MEDIA_TYPES$DeviceType$VH_ = _GET_MEDIA_TYPES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DeviceType"));
    static final java.lang.invoke.VarHandle _GET_MEDIA_TYPES$DeviceType$VH() { return _GET_MEDIA_TYPES$DeviceType$VH_; }

    static final MemoryLayout _GET_MEDIA_TYPES$MediaInfoCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _GET_MEDIA_TYPES$MediaInfoCount$LAYOUT() { return _GET_MEDIA_TYPES$MediaInfoCount$LAYOUT_; }

    static final VarHandle _GET_MEDIA_TYPES$MediaInfoCount$VH_ = _GET_MEDIA_TYPES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MediaInfoCount"));
    static final java.lang.invoke.VarHandle _GET_MEDIA_TYPES$MediaInfoCount$VH() { return _GET_MEDIA_TYPES$MediaInfoCount$VH_; }

}

