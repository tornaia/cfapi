// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$13 extends cfapi_h$constants$12 {

    /* package-private */ cfapi_h$constants$13() {}
    static final FunctionDescriptor _InterlockedOr8$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER,
        C_CHAR
    );
    static final jdk.incubator.foreign.FunctionDescriptor _InterlockedOr8$FUNC() { return _InterlockedOr8$FUNC_; }

    static final MethodHandle _InterlockedOr8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_InterlockedOr8",
        "(Ljdk/incubator/foreign/MemoryAddress;B)B",
        _InterlockedOr8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _InterlockedOr8$MH() { return _InterlockedOr8$MH_; }

    static final FunctionDescriptor _InterlockedXor8$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER,
        C_CHAR
    );
    static final jdk.incubator.foreign.FunctionDescriptor _InterlockedXor8$FUNC() { return _InterlockedXor8$FUNC_; }

    static final MethodHandle _InterlockedXor8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_InterlockedXor8",
        "(Ljdk/incubator/foreign/MemoryAddress;B)B",
        _InterlockedXor8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _InterlockedXor8$MH() { return _InterlockedXor8$MH_; }

    static final FunctionDescriptor _InterlockedAnd16$FUNC_ = FunctionDescriptor.of(C_SHORT,
        C_POINTER,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _InterlockedAnd16$FUNC() { return _InterlockedAnd16$FUNC_; }

    static final MethodHandle _InterlockedAnd16$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_InterlockedAnd16",
        "(Ljdk/incubator/foreign/MemoryAddress;S)S",
        _InterlockedAnd16$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _InterlockedAnd16$MH() { return _InterlockedAnd16$MH_; }

    static final FunctionDescriptor _InterlockedOr16$FUNC_ = FunctionDescriptor.of(C_SHORT,
        C_POINTER,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _InterlockedOr16$FUNC() { return _InterlockedOr16$FUNC_; }

    static final MethodHandle _InterlockedOr16$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_InterlockedOr16",
        "(Ljdk/incubator/foreign/MemoryAddress;S)S",
        _InterlockedOr16$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _InterlockedOr16$MH() { return _InterlockedOr16$MH_; }

    static final FunctionDescriptor _InterlockedXor16$FUNC_ = FunctionDescriptor.of(C_SHORT,
        C_POINTER,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _InterlockedXor16$FUNC() { return _InterlockedXor16$FUNC_; }

    static final MethodHandle _InterlockedXor16$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_InterlockedXor16",
        "(Ljdk/incubator/foreign/MemoryAddress;S)S",
        _InterlockedXor16$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _InterlockedXor16$MH() { return _InterlockedXor16$MH_; }

    static final FunctionDescriptor __cpuidex$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor __cpuidex$FUNC() { return __cpuidex$FUNC_; }

    static final MethodHandle __cpuidex$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__cpuidex",
        "(Ljdk/incubator/foreign/MemoryAddress;II)V",
        __cpuidex$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __cpuidex$MH() { return __cpuidex$MH_; }

    static final FunctionDescriptor _mm_clflush$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _mm_clflush$FUNC() { return _mm_clflush$FUNC_; }

    static final MethodHandle _mm_clflush$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_mm_clflush",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        _mm_clflush$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _mm_clflush$MH() { return _mm_clflush$MH_; }

    static final FunctionDescriptor _ReadWriteBarrier$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor _ReadWriteBarrier$FUNC() { return _ReadWriteBarrier$FUNC_; }

    static final MethodHandle _ReadWriteBarrier$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_ReadWriteBarrier",
        "()V",
        _ReadWriteBarrier$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _ReadWriteBarrier$MH() { return _ReadWriteBarrier$MH_; }

    static final FunctionDescriptor __faststorefence$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor __faststorefence$FUNC() { return __faststorefence$FUNC_; }

    static final MethodHandle __faststorefence$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__faststorefence",
        "()V",
        __faststorefence$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __faststorefence$MH() { return __faststorefence$MH_; }

    static final FunctionDescriptor _mm_lfence$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor _mm_lfence$FUNC() { return _mm_lfence$FUNC_; }

    static final MethodHandle _mm_lfence$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_mm_lfence",
        "()V",
        _mm_lfence$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _mm_lfence$MH() { return _mm_lfence$MH_; }

    static final FunctionDescriptor _mm_mfence$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor _mm_mfence$FUNC() { return _mm_mfence$FUNC_; }

    static final MethodHandle _mm_mfence$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_mm_mfence",
        "()V",
        _mm_mfence$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _mm_mfence$MH() { return _mm_mfence$MH_; }

    static final FunctionDescriptor _mm_sfence$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor _mm_sfence$FUNC() { return _mm_sfence$FUNC_; }

    static final MethodHandle _mm_sfence$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_mm_sfence",
        "()V",
        _mm_sfence$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _mm_sfence$MH() { return _mm_sfence$MH_; }

    static final FunctionDescriptor _mm_pause$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor _mm_pause$FUNC() { return _mm_pause$FUNC_; }

    static final MethodHandle _mm_pause$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_mm_pause",
        "()V",
        _mm_pause$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _mm_pause$MH() { return _mm_pause$MH_; }

    static final FunctionDescriptor _mm_prefetch$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _mm_prefetch$FUNC() { return _mm_prefetch$FUNC_; }

    static final MethodHandle _mm_prefetch$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_mm_prefetch",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        _mm_prefetch$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _mm_prefetch$MH() { return _mm_prefetch$MH_; }

    static final FunctionDescriptor _m_prefetchw$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _m_prefetchw$FUNC() { return _m_prefetchw$FUNC_; }

    static final MethodHandle _m_prefetchw$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_m_prefetchw",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        _m_prefetchw$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _m_prefetchw$MH() { return _m_prefetchw$MH_; }

    static final FunctionDescriptor _mm_getcsr$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor _mm_getcsr$FUNC() { return _mm_getcsr$FUNC_; }

    static final MethodHandle _mm_getcsr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_mm_getcsr",
        "()I",
        _mm_getcsr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _mm_getcsr$MH() { return _mm_getcsr$MH_; }

    static final FunctionDescriptor _mm_setcsr$FUNC_ = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _mm_setcsr$FUNC() { return _mm_setcsr$FUNC_; }

    static final MethodHandle _mm_setcsr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_mm_setcsr",
        "(I)V",
        _mm_setcsr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _mm_setcsr$MH() { return _mm_setcsr$MH_; }

    static final FunctionDescriptor __getcallerseflags$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor __getcallerseflags$FUNC() { return __getcallerseflags$FUNC_; }

    static final MethodHandle __getcallerseflags$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__getcallerseflags",
        "()I",
        __getcallerseflags$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __getcallerseflags$MH() { return __getcallerseflags$MH_; }

    static final FunctionDescriptor __segmentlimit$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __segmentlimit$FUNC() { return __segmentlimit$FUNC_; }

    static final MethodHandle __segmentlimit$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__segmentlimit",
        "(I)I",
        __segmentlimit$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __segmentlimit$MH() { return __segmentlimit$MH_; }

    static final FunctionDescriptor __readpmc$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __readpmc$FUNC() { return __readpmc$FUNC_; }

    static final MethodHandle __readpmc$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__readpmc",
        "(I)J",
        __readpmc$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __readpmc$MH() { return __readpmc$MH_; }

    static final FunctionDescriptor __rdtsc$FUNC_ = FunctionDescriptor.of(C_LONGLONG);
    static final jdk.incubator.foreign.FunctionDescriptor __rdtsc$FUNC() { return __rdtsc$FUNC_; }

    static final MethodHandle __rdtsc$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__rdtsc",
        "()J",
        __rdtsc$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __rdtsc$MH() { return __rdtsc$MH_; }

    static final FunctionDescriptor __movsb$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __movsb$FUNC() { return __movsb$FUNC_; }

    static final MethodHandle __movsb$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__movsb",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)V",
        __movsb$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __movsb$MH() { return __movsb$MH_; }

    static final FunctionDescriptor __movsw$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __movsw$FUNC() { return __movsw$FUNC_; }

    static final MethodHandle __movsw$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__movsw",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)V",
        __movsw$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __movsw$MH() { return __movsw$MH_; }

    static final FunctionDescriptor __movsd$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __movsd$FUNC() { return __movsd$FUNC_; }

    static final MethodHandle __movsd$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__movsd",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)V",
        __movsd$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __movsd$MH() { return __movsd$MH_; }

    static final FunctionDescriptor __movsq$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __movsq$FUNC() { return __movsq$FUNC_; }

    static final MethodHandle __movsq$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__movsq",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)V",
        __movsq$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __movsq$MH() { return __movsq$MH_; }

    static final FunctionDescriptor __stosb$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_CHAR,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __stosb$FUNC() { return __stosb$FUNC_; }

    static final MethodHandle __stosb$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__stosb",
        "(Ljdk/incubator/foreign/MemoryAddress;BJ)V",
        __stosb$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __stosb$MH() { return __stosb$MH_; }

    static final FunctionDescriptor __stosw$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_SHORT,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __stosw$FUNC() { return __stosw$FUNC_; }

    static final MethodHandle __stosw$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__stosw",
        "(Ljdk/incubator/foreign/MemoryAddress;SJ)V",
        __stosw$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __stosw$MH() { return __stosw$MH_; }

    static final FunctionDescriptor __stosd$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __stosd$FUNC() { return __stosd$FUNC_; }

    static final MethodHandle __stosd$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__stosd",
        "(Ljdk/incubator/foreign/MemoryAddress;IJ)V",
        __stosd$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __stosd$MH() { return __stosd$MH_; }

    static final FunctionDescriptor __stosq$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __stosq$FUNC() { return __stosq$FUNC_; }

    static final MethodHandle __stosq$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__stosq",
        "(Ljdk/incubator/foreign/MemoryAddress;JJ)V",
        __stosq$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __stosq$MH() { return __stosq$MH_; }

    static final FunctionDescriptor __mulh$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __mulh$FUNC() { return __mulh$FUNC_; }

    static final MethodHandle __mulh$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__mulh",
        "(JJ)J",
        __mulh$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __mulh$MH() { return __mulh$MH_; }

    static final FunctionDescriptor __umulh$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __umulh$FUNC() { return __umulh$FUNC_; }

    static final MethodHandle __umulh$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__umulh",
        "(JJ)J",
        __umulh$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __umulh$MH() { return __umulh$MH_; }

    static final FunctionDescriptor __popcnt64$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __popcnt64$FUNC() { return __popcnt64$FUNC_; }

    static final MethodHandle __popcnt64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__popcnt64",
        "(J)J",
        __popcnt64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __popcnt64$MH() { return __popcnt64$MH_; }

    static final FunctionDescriptor __shiftleft128$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_LONGLONG,
        C_LONGLONG,
        C_CHAR
    );
    static final jdk.incubator.foreign.FunctionDescriptor __shiftleft128$FUNC() { return __shiftleft128$FUNC_; }

    static final MethodHandle __shiftleft128$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__shiftleft128",
        "(JJB)J",
        __shiftleft128$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __shiftleft128$MH() { return __shiftleft128$MH_; }

    static final FunctionDescriptor __shiftright128$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_LONGLONG,
        C_LONGLONG,
        C_CHAR
    );
    static final jdk.incubator.foreign.FunctionDescriptor __shiftright128$FUNC() { return __shiftright128$FUNC_; }

    static final MethodHandle __shiftright128$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__shiftright128",
        "(JJB)J",
        __shiftright128$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __shiftright128$MH() { return __shiftright128$MH_; }

    static final FunctionDescriptor _mul128$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_LONGLONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _mul128$FUNC() { return _mul128$FUNC_; }

    static final MethodHandle _mul128$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_mul128",
        "(JJLjdk/incubator/foreign/MemoryAddress;)J",
        _mul128$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _mul128$MH() { return _mul128$MH_; }

    static final FunctionDescriptor _umul128$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_LONGLONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _umul128$FUNC() { return _umul128$FUNC_; }

    static final MethodHandle _umul128$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_umul128",
        "(JJLjdk/incubator/foreign/MemoryAddress;)J",
        _umul128$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _umul128$MH() { return _umul128$MH_; }

    static final FunctionDescriptor MultiplyExtract128$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_LONGLONG,
        C_LONGLONG,
        C_CHAR
    );
    static final jdk.incubator.foreign.FunctionDescriptor MultiplyExtract128$FUNC() { return MultiplyExtract128$FUNC_; }

    static final MethodHandle MultiplyExtract128$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "MultiplyExtract128",
        "(JJB)J",
        MultiplyExtract128$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle MultiplyExtract128$MH() { return MultiplyExtract128$MH_; }

    static final FunctionDescriptor UnsignedMultiplyExtract128$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_LONGLONG,
        C_LONGLONG,
        C_CHAR
    );
    static final jdk.incubator.foreign.FunctionDescriptor UnsignedMultiplyExtract128$FUNC() { return UnsignedMultiplyExtract128$FUNC_; }

    static final MethodHandle UnsignedMultiplyExtract128$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "UnsignedMultiplyExtract128",
        "(JJB)J",
        UnsignedMultiplyExtract128$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle UnsignedMultiplyExtract128$MH() { return UnsignedMultiplyExtract128$MH_; }

    static final FunctionDescriptor __readgsbyte$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __readgsbyte$FUNC() { return __readgsbyte$FUNC_; }

    static final MethodHandle __readgsbyte$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__readgsbyte",
        "(I)B",
        __readgsbyte$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __readgsbyte$MH() { return __readgsbyte$MH_; }

    static final FunctionDescriptor __readgsword$FUNC_ = FunctionDescriptor.of(C_SHORT,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __readgsword$FUNC() { return __readgsword$FUNC_; }

    static final MethodHandle __readgsword$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__readgsword",
        "(I)S",
        __readgsword$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __readgsword$MH() { return __readgsword$MH_; }

    static final FunctionDescriptor __readgsdword$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __readgsdword$FUNC() { return __readgsdword$FUNC_; }

    static final MethodHandle __readgsdword$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__readgsdword",
        "(I)I",
        __readgsdword$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __readgsdword$MH() { return __readgsdword$MH_; }

    static final FunctionDescriptor __readgsqword$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __readgsqword$FUNC() { return __readgsqword$FUNC_; }

    static final MethodHandle __readgsqword$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__readgsqword",
        "(I)J",
        __readgsqword$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __readgsqword$MH() { return __readgsqword$MH_; }

    static final FunctionDescriptor __writegsbyte$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG,
        C_CHAR
    );
    static final jdk.incubator.foreign.FunctionDescriptor __writegsbyte$FUNC() { return __writegsbyte$FUNC_; }

    static final MethodHandle __writegsbyte$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__writegsbyte",
        "(IB)V",
        __writegsbyte$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __writegsbyte$MH() { return __writegsbyte$MH_; }

    static final FunctionDescriptor __writegsword$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor __writegsword$FUNC() { return __writegsword$FUNC_; }

    static final MethodHandle __writegsword$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__writegsword",
        "(IS)V",
        __writegsword$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __writegsword$MH() { return __writegsword$MH_; }

    static final FunctionDescriptor __writegsdword$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __writegsdword$FUNC() { return __writegsdword$FUNC_; }

    static final MethodHandle __writegsdword$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__writegsdword",
        "(II)V",
        __writegsdword$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __writegsdword$MH() { return __writegsdword$MH_; }

    static final FunctionDescriptor __writegsqword$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __writegsqword$FUNC() { return __writegsqword$FUNC_; }

    static final MethodHandle __writegsqword$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__writegsqword",
        "(IJ)V",
        __writegsqword$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __writegsqword$MH() { return __writegsqword$MH_; }

    static final FunctionDescriptor __incgsbyte$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __incgsbyte$FUNC() { return __incgsbyte$FUNC_; }

    static final MethodHandle __incgsbyte$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__incgsbyte",
        "(I)V",
        __incgsbyte$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __incgsbyte$MH() { return __incgsbyte$MH_; }

    static final FunctionDescriptor __addgsbyte$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG,
        C_CHAR
    );
    static final jdk.incubator.foreign.FunctionDescriptor __addgsbyte$FUNC() { return __addgsbyte$FUNC_; }

    static final MethodHandle __addgsbyte$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__addgsbyte",
        "(IB)V",
        __addgsbyte$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __addgsbyte$MH() { return __addgsbyte$MH_; }

    static final FunctionDescriptor __incgsword$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __incgsword$FUNC() { return __incgsword$FUNC_; }

    static final MethodHandle __incgsword$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__incgsword",
        "(I)V",
        __incgsword$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __incgsword$MH() { return __incgsword$MH_; }

    static final FunctionDescriptor __addgsword$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor __addgsword$FUNC() { return __addgsword$FUNC_; }

    static final MethodHandle __addgsword$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__addgsword",
        "(IS)V",
        __addgsword$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __addgsword$MH() { return __addgsword$MH_; }

    static final FunctionDescriptor __incgsdword$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __incgsdword$FUNC() { return __incgsdword$FUNC_; }

    static final MethodHandle __incgsdword$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__incgsdword",
        "(I)V",
        __incgsdword$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __incgsdword$MH() { return __incgsdword$MH_; }

    static final FunctionDescriptor __addgsdword$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __addgsdword$FUNC() { return __addgsdword$FUNC_; }

    static final MethodHandle __addgsdword$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__addgsdword",
        "(II)V",
        __addgsdword$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __addgsdword$MH() { return __addgsdword$MH_; }

    static final FunctionDescriptor __incgsqword$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __incgsqword$FUNC() { return __incgsqword$FUNC_; }

    static final MethodHandle __incgsqword$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__incgsqword",
        "(I)V",
        __incgsqword$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __incgsqword$MH() { return __incgsqword$MH_; }

    static final FunctionDescriptor __addgsqword$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __addgsqword$FUNC() { return __addgsqword$FUNC_; }

    static final MethodHandle __addgsqword$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__addgsqword",
        "(IJ)V",
        __addgsqword$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __addgsqword$MH() { return __addgsqword$MH_; }

    static final MemoryLayout _CONTEXT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("P1Home"),
        C_LONGLONG.withName("P2Home"),
        C_LONGLONG.withName("P3Home"),
        C_LONGLONG.withName("P4Home"),
        C_LONGLONG.withName("P5Home"),
        C_LONGLONG.withName("P6Home"),
        C_LONG.withName("ContextFlags"),
        C_LONG.withName("MxCsr"),
        C_SHORT.withName("SegCs"),
        C_SHORT.withName("SegDs"),
        C_SHORT.withName("SegEs"),
        C_SHORT.withName("SegFs"),
        C_SHORT.withName("SegGs"),
        C_SHORT.withName("SegSs"),
        C_LONG.withName("EFlags"),
        C_LONGLONG.withName("Dr0"),
        C_LONGLONG.withName("Dr1"),
        C_LONGLONG.withName("Dr2"),
        C_LONGLONG.withName("Dr3"),
        C_LONGLONG.withName("Dr6"),
        C_LONGLONG.withName("Dr7"),
        C_LONGLONG.withName("Rax"),
        C_LONGLONG.withName("Rcx"),
        C_LONGLONG.withName("Rdx"),
        C_LONGLONG.withName("Rbx"),
        C_LONGLONG.withName("Rsp"),
        C_LONGLONG.withName("Rbp"),
        C_LONGLONG.withName("Rsi"),
        C_LONGLONG.withName("Rdi"),
        C_LONGLONG.withName("R8"),
        C_LONGLONG.withName("R9"),
        C_LONGLONG.withName("R10"),
        C_LONGLONG.withName("R11"),
        C_LONGLONG.withName("R12"),
        C_LONGLONG.withName("R13"),
        C_LONGLONG.withName("R14"),
        C_LONGLONG.withName("R15"),
        C_LONGLONG.withName("Rip"),
        MemoryLayout.ofStruct(
            C_SHORT.withName("ControlWord"),
            C_SHORT.withName("StatusWord"),
            C_CHAR.withName("TagWord"),
            C_CHAR.withName("Reserved1"),
            C_SHORT.withName("ErrorOpcode"),
            C_LONG.withName("ErrorOffset"),
            C_SHORT.withName("ErrorSelector"),
            C_SHORT.withName("Reserved2"),
            C_LONG.withName("DataOffset"),
            C_SHORT.withName("DataSelector"),
            C_SHORT.withName("Reserved3"),
            C_LONG.withName("MxCsr"),
            C_LONG.withName("MxCsr_Mask"),
            MemoryLayout.ofSequence(8, MemoryLayout.ofStruct(
                C_LONGLONG.withName("Low"),
                C_LONGLONG.withName("High")
            ).withName("_M128A")).withName("FloatRegisters"),
            MemoryLayout.ofSequence(16, MemoryLayout.ofStruct(
                C_LONGLONG.withName("Low"),
                C_LONGLONG.withName("High")
            ).withName("_M128A")).withName("XmmRegisters"),
            MemoryLayout.ofSequence(96, C_CHAR).withName("Reserved4")
        ).withName("FltSave"),
        MemoryLayout.ofSequence(2, MemoryLayout.ofStruct(
            C_LONGLONG.withName("Low"),
            C_LONGLONG.withName("High")
        ).withName("_M128A")).withName("Header"),
        MemoryLayout.ofSequence(8, MemoryLayout.ofStruct(
            C_LONGLONG.withName("Low"),
            C_LONGLONG.withName("High")
        ).withName("_M128A")).withName("Legacy"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("Low"),
            C_LONGLONG.withName("High")
        ).withName("Xmm0"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("Low"),
            C_LONGLONG.withName("High")
        ).withName("Xmm1"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("Low"),
            C_LONGLONG.withName("High")
        ).withName("Xmm2"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("Low"),
            C_LONGLONG.withName("High")
        ).withName("Xmm3"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("Low"),
            C_LONGLONG.withName("High")
        ).withName("Xmm4"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("Low"),
            C_LONGLONG.withName("High")
        ).withName("Xmm5"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("Low"),
            C_LONGLONG.withName("High")
        ).withName("Xmm6"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("Low"),
            C_LONGLONG.withName("High")
        ).withName("Xmm7"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("Low"),
            C_LONGLONG.withName("High")
        ).withName("Xmm8"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("Low"),
            C_LONGLONG.withName("High")
        ).withName("Xmm9"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("Low"),
            C_LONGLONG.withName("High")
        ).withName("Xmm10"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("Low"),
            C_LONGLONG.withName("High")
        ).withName("Xmm11"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("Low"),
            C_LONGLONG.withName("High")
        ).withName("Xmm12"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("Low"),
            C_LONGLONG.withName("High")
        ).withName("Xmm13"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("Low"),
            C_LONGLONG.withName("High")
        ).withName("Xmm14"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("Low"),
            C_LONGLONG.withName("High")
        ).withName("Xmm15"),
        MemoryLayout.ofSequence(26, MemoryLayout.ofStruct(
            C_LONGLONG.withName("Low"),
            C_LONGLONG.withName("High")
        ).withName("_M128A")).withName("VectorRegister"),
        C_LONGLONG.withName("VectorControl"),
        C_LONGLONG.withName("DebugControl"),
        C_LONGLONG.withName("LastBranchToRip"),
        C_LONGLONG.withName("LastBranchFromRip"),
        C_LONGLONG.withName("LastExceptionToRip"),
        C_LONGLONG.withName("LastExceptionFromRip")
    ).withName("_CONTEXT");
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$struct$LAYOUT() { return _CONTEXT$struct$LAYOUT_; }

    static final MemoryLayout _CONTEXT$P1Home$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$P1Home$LAYOUT() { return _CONTEXT$P1Home$LAYOUT_; }

    static final VarHandle _CONTEXT$P1Home$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("P1Home"));
    static final java.lang.invoke.VarHandle _CONTEXT$P1Home$VH() { return _CONTEXT$P1Home$VH_; }

    static final MemoryLayout _CONTEXT$P2Home$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$P2Home$LAYOUT() { return _CONTEXT$P2Home$LAYOUT_; }

    static final VarHandle _CONTEXT$P2Home$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("P2Home"));
    static final java.lang.invoke.VarHandle _CONTEXT$P2Home$VH() { return _CONTEXT$P2Home$VH_; }

    static final MemoryLayout _CONTEXT$P3Home$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$P3Home$LAYOUT() { return _CONTEXT$P3Home$LAYOUT_; }

    static final VarHandle _CONTEXT$P3Home$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("P3Home"));
    static final java.lang.invoke.VarHandle _CONTEXT$P3Home$VH() { return _CONTEXT$P3Home$VH_; }

    static final MemoryLayout _CONTEXT$P4Home$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$P4Home$LAYOUT() { return _CONTEXT$P4Home$LAYOUT_; }

    static final VarHandle _CONTEXT$P4Home$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("P4Home"));
    static final java.lang.invoke.VarHandle _CONTEXT$P4Home$VH() { return _CONTEXT$P4Home$VH_; }

    static final MemoryLayout _CONTEXT$P5Home$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$P5Home$LAYOUT() { return _CONTEXT$P5Home$LAYOUT_; }

    static final VarHandle _CONTEXT$P5Home$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("P5Home"));
    static final java.lang.invoke.VarHandle _CONTEXT$P5Home$VH() { return _CONTEXT$P5Home$VH_; }

    static final MemoryLayout _CONTEXT$P6Home$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$P6Home$LAYOUT() { return _CONTEXT$P6Home$LAYOUT_; }

    static final VarHandle _CONTEXT$P6Home$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("P6Home"));
    static final java.lang.invoke.VarHandle _CONTEXT$P6Home$VH() { return _CONTEXT$P6Home$VH_; }

    static final MemoryLayout _CONTEXT$ContextFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$ContextFlags$LAYOUT() { return _CONTEXT$ContextFlags$LAYOUT_; }

    static final VarHandle _CONTEXT$ContextFlags$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ContextFlags"));
    static final java.lang.invoke.VarHandle _CONTEXT$ContextFlags$VH() { return _CONTEXT$ContextFlags$VH_; }

    static final MemoryLayout _CONTEXT$MxCsr$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$MxCsr$LAYOUT() { return _CONTEXT$MxCsr$LAYOUT_; }

    static final VarHandle _CONTEXT$MxCsr$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MxCsr"));
    static final java.lang.invoke.VarHandle _CONTEXT$MxCsr$VH() { return _CONTEXT$MxCsr$VH_; }

    static final MemoryLayout _CONTEXT$SegCs$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$SegCs$LAYOUT() { return _CONTEXT$SegCs$LAYOUT_; }

    static final VarHandle _CONTEXT$SegCs$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("SegCs"));
    static final java.lang.invoke.VarHandle _CONTEXT$SegCs$VH() { return _CONTEXT$SegCs$VH_; }

    static final MemoryLayout _CONTEXT$SegDs$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$SegDs$LAYOUT() { return _CONTEXT$SegDs$LAYOUT_; }

    static final VarHandle _CONTEXT$SegDs$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("SegDs"));
    static final java.lang.invoke.VarHandle _CONTEXT$SegDs$VH() { return _CONTEXT$SegDs$VH_; }

    static final MemoryLayout _CONTEXT$SegEs$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$SegEs$LAYOUT() { return _CONTEXT$SegEs$LAYOUT_; }

    static final VarHandle _CONTEXT$SegEs$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("SegEs"));
    static final java.lang.invoke.VarHandle _CONTEXT$SegEs$VH() { return _CONTEXT$SegEs$VH_; }

    static final MemoryLayout _CONTEXT$SegFs$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$SegFs$LAYOUT() { return _CONTEXT$SegFs$LAYOUT_; }

    static final VarHandle _CONTEXT$SegFs$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("SegFs"));
    static final java.lang.invoke.VarHandle _CONTEXT$SegFs$VH() { return _CONTEXT$SegFs$VH_; }

    static final MemoryLayout _CONTEXT$SegGs$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$SegGs$LAYOUT() { return _CONTEXT$SegGs$LAYOUT_; }

    static final VarHandle _CONTEXT$SegGs$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("SegGs"));
    static final java.lang.invoke.VarHandle _CONTEXT$SegGs$VH() { return _CONTEXT$SegGs$VH_; }

    static final MemoryLayout _CONTEXT$SegSs$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$SegSs$LAYOUT() { return _CONTEXT$SegSs$LAYOUT_; }

    static final VarHandle _CONTEXT$SegSs$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("SegSs"));
    static final java.lang.invoke.VarHandle _CONTEXT$SegSs$VH() { return _CONTEXT$SegSs$VH_; }

    static final MemoryLayout _CONTEXT$EFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$EFlags$LAYOUT() { return _CONTEXT$EFlags$LAYOUT_; }

    static final VarHandle _CONTEXT$EFlags$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EFlags"));
    static final java.lang.invoke.VarHandle _CONTEXT$EFlags$VH() { return _CONTEXT$EFlags$VH_; }

    static final MemoryLayout _CONTEXT$Dr0$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$Dr0$LAYOUT() { return _CONTEXT$Dr0$LAYOUT_; }

    static final VarHandle _CONTEXT$Dr0$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Dr0"));
    static final java.lang.invoke.VarHandle _CONTEXT$Dr0$VH() { return _CONTEXT$Dr0$VH_; }

    static final MemoryLayout _CONTEXT$Dr1$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$Dr1$LAYOUT() { return _CONTEXT$Dr1$LAYOUT_; }

    static final VarHandle _CONTEXT$Dr1$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Dr1"));
    static final java.lang.invoke.VarHandle _CONTEXT$Dr1$VH() { return _CONTEXT$Dr1$VH_; }

    static final MemoryLayout _CONTEXT$Dr2$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$Dr2$LAYOUT() { return _CONTEXT$Dr2$LAYOUT_; }

    static final VarHandle _CONTEXT$Dr2$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Dr2"));
    static final java.lang.invoke.VarHandle _CONTEXT$Dr2$VH() { return _CONTEXT$Dr2$VH_; }

    static final MemoryLayout _CONTEXT$Dr3$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$Dr3$LAYOUT() { return _CONTEXT$Dr3$LAYOUT_; }

    static final VarHandle _CONTEXT$Dr3$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Dr3"));
    static final java.lang.invoke.VarHandle _CONTEXT$Dr3$VH() { return _CONTEXT$Dr3$VH_; }

    static final MemoryLayout _CONTEXT$Dr6$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$Dr6$LAYOUT() { return _CONTEXT$Dr6$LAYOUT_; }

    static final VarHandle _CONTEXT$Dr6$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Dr6"));
    static final java.lang.invoke.VarHandle _CONTEXT$Dr6$VH() { return _CONTEXT$Dr6$VH_; }

    static final MemoryLayout _CONTEXT$Dr7$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$Dr7$LAYOUT() { return _CONTEXT$Dr7$LAYOUT_; }

    static final VarHandle _CONTEXT$Dr7$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Dr7"));
    static final java.lang.invoke.VarHandle _CONTEXT$Dr7$VH() { return _CONTEXT$Dr7$VH_; }

    static final MemoryLayout _CONTEXT$Rax$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$Rax$LAYOUT() { return _CONTEXT$Rax$LAYOUT_; }

    static final VarHandle _CONTEXT$Rax$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Rax"));
    static final java.lang.invoke.VarHandle _CONTEXT$Rax$VH() { return _CONTEXT$Rax$VH_; }

    static final MemoryLayout _CONTEXT$Rcx$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$Rcx$LAYOUT() { return _CONTEXT$Rcx$LAYOUT_; }

    static final VarHandle _CONTEXT$Rcx$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Rcx"));
    static final java.lang.invoke.VarHandle _CONTEXT$Rcx$VH() { return _CONTEXT$Rcx$VH_; }

    static final MemoryLayout _CONTEXT$Rdx$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$Rdx$LAYOUT() { return _CONTEXT$Rdx$LAYOUT_; }

    static final VarHandle _CONTEXT$Rdx$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Rdx"));
    static final java.lang.invoke.VarHandle _CONTEXT$Rdx$VH() { return _CONTEXT$Rdx$VH_; }

    static final MemoryLayout _CONTEXT$Rbx$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$Rbx$LAYOUT() { return _CONTEXT$Rbx$LAYOUT_; }

    static final VarHandle _CONTEXT$Rbx$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Rbx"));
    static final java.lang.invoke.VarHandle _CONTEXT$Rbx$VH() { return _CONTEXT$Rbx$VH_; }

    static final MemoryLayout _CONTEXT$Rsp$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$Rsp$LAYOUT() { return _CONTEXT$Rsp$LAYOUT_; }

    static final VarHandle _CONTEXT$Rsp$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Rsp"));
    static final java.lang.invoke.VarHandle _CONTEXT$Rsp$VH() { return _CONTEXT$Rsp$VH_; }

    static final MemoryLayout _CONTEXT$Rbp$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$Rbp$LAYOUT() { return _CONTEXT$Rbp$LAYOUT_; }

    static final VarHandle _CONTEXT$Rbp$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Rbp"));
    static final java.lang.invoke.VarHandle _CONTEXT$Rbp$VH() { return _CONTEXT$Rbp$VH_; }

    static final MemoryLayout _CONTEXT$Rsi$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$Rsi$LAYOUT() { return _CONTEXT$Rsi$LAYOUT_; }

    static final VarHandle _CONTEXT$Rsi$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Rsi"));
    static final java.lang.invoke.VarHandle _CONTEXT$Rsi$VH() { return _CONTEXT$Rsi$VH_; }

    static final MemoryLayout _CONTEXT$Rdi$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$Rdi$LAYOUT() { return _CONTEXT$Rdi$LAYOUT_; }

    static final VarHandle _CONTEXT$Rdi$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Rdi"));
    static final java.lang.invoke.VarHandle _CONTEXT$Rdi$VH() { return _CONTEXT$Rdi$VH_; }

    static final MemoryLayout _CONTEXT$R8$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$R8$LAYOUT() { return _CONTEXT$R8$LAYOUT_; }

    static final VarHandle _CONTEXT$R8$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("R8"));
    static final java.lang.invoke.VarHandle _CONTEXT$R8$VH() { return _CONTEXT$R8$VH_; }

    static final MemoryLayout _CONTEXT$R9$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$R9$LAYOUT() { return _CONTEXT$R9$LAYOUT_; }

    static final VarHandle _CONTEXT$R9$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("R9"));
    static final java.lang.invoke.VarHandle _CONTEXT$R9$VH() { return _CONTEXT$R9$VH_; }

    static final MemoryLayout _CONTEXT$R10$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$R10$LAYOUT() { return _CONTEXT$R10$LAYOUT_; }

    static final VarHandle _CONTEXT$R10$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("R10"));
    static final java.lang.invoke.VarHandle _CONTEXT$R10$VH() { return _CONTEXT$R10$VH_; }

    static final MemoryLayout _CONTEXT$R11$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$R11$LAYOUT() { return _CONTEXT$R11$LAYOUT_; }

    static final VarHandle _CONTEXT$R11$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("R11"));
    static final java.lang.invoke.VarHandle _CONTEXT$R11$VH() { return _CONTEXT$R11$VH_; }

    static final MemoryLayout _CONTEXT$R12$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$R12$LAYOUT() { return _CONTEXT$R12$LAYOUT_; }

    static final VarHandle _CONTEXT$R12$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("R12"));
    static final java.lang.invoke.VarHandle _CONTEXT$R12$VH() { return _CONTEXT$R12$VH_; }

    static final MemoryLayout _CONTEXT$R13$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$R13$LAYOUT() { return _CONTEXT$R13$LAYOUT_; }

    static final VarHandle _CONTEXT$R13$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("R13"));
    static final java.lang.invoke.VarHandle _CONTEXT$R13$VH() { return _CONTEXT$R13$VH_; }

    static final MemoryLayout _CONTEXT$R14$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$R14$LAYOUT() { return _CONTEXT$R14$LAYOUT_; }

    static final VarHandle _CONTEXT$R14$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("R14"));
    static final java.lang.invoke.VarHandle _CONTEXT$R14$VH() { return _CONTEXT$R14$VH_; }

    static final MemoryLayout _CONTEXT$R15$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$R15$LAYOUT() { return _CONTEXT$R15$LAYOUT_; }

    static final VarHandle _CONTEXT$R15$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("R15"));
    static final java.lang.invoke.VarHandle _CONTEXT$R15$VH() { return _CONTEXT$R15$VH_; }

    static final MemoryLayout _CONTEXT$Rip$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$Rip$LAYOUT() { return _CONTEXT$Rip$LAYOUT_; }

    static final VarHandle _CONTEXT$Rip$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Rip"));
    static final java.lang.invoke.VarHandle _CONTEXT$Rip$VH() { return _CONTEXT$Rip$VH_; }

    static final MemoryLayout _CONTEXT$VectorControl$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$VectorControl$LAYOUT() { return _CONTEXT$VectorControl$LAYOUT_; }

    static final VarHandle _CONTEXT$VectorControl$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("VectorControl"));
    static final java.lang.invoke.VarHandle _CONTEXT$VectorControl$VH() { return _CONTEXT$VectorControl$VH_; }

    static final MemoryLayout _CONTEXT$DebugControl$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$DebugControl$LAYOUT() { return _CONTEXT$DebugControl$LAYOUT_; }

    static final VarHandle _CONTEXT$DebugControl$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DebugControl"));
    static final java.lang.invoke.VarHandle _CONTEXT$DebugControl$VH() { return _CONTEXT$DebugControl$VH_; }

    static final MemoryLayout _CONTEXT$LastBranchToRip$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$LastBranchToRip$LAYOUT() { return _CONTEXT$LastBranchToRip$LAYOUT_; }

    static final VarHandle _CONTEXT$LastBranchToRip$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LastBranchToRip"));
    static final java.lang.invoke.VarHandle _CONTEXT$LastBranchToRip$VH() { return _CONTEXT$LastBranchToRip$VH_; }

    static final MemoryLayout _CONTEXT$LastBranchFromRip$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$LastBranchFromRip$LAYOUT() { return _CONTEXT$LastBranchFromRip$LAYOUT_; }

    static final VarHandle _CONTEXT$LastBranchFromRip$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LastBranchFromRip"));
    static final java.lang.invoke.VarHandle _CONTEXT$LastBranchFromRip$VH() { return _CONTEXT$LastBranchFromRip$VH_; }

    static final MemoryLayout _CONTEXT$LastExceptionToRip$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$LastExceptionToRip$LAYOUT() { return _CONTEXT$LastExceptionToRip$LAYOUT_; }

    static final VarHandle _CONTEXT$LastExceptionToRip$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LastExceptionToRip"));
    static final java.lang.invoke.VarHandle _CONTEXT$LastExceptionToRip$VH() { return _CONTEXT$LastExceptionToRip$VH_; }

    static final MemoryLayout _CONTEXT$LastExceptionFromRip$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CONTEXT$LastExceptionFromRip$LAYOUT() { return _CONTEXT$LastExceptionFromRip$LAYOUT_; }

    static final VarHandle _CONTEXT$LastExceptionFromRip$VH_ = _CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LastExceptionFromRip"));
    static final java.lang.invoke.VarHandle _CONTEXT$LastExceptionFromRip$VH() { return _CONTEXT$LastExceptionFromRip$VH_; }

    static final MemoryLayout _UNWIND_HISTORY_TABLE_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("ImageBase"),
        C_POINTER.withName("FunctionEntry")
    ).withName("_UNWIND_HISTORY_TABLE_ENTRY");
    static final jdk.incubator.foreign.MemoryLayout _UNWIND_HISTORY_TABLE_ENTRY$struct$LAYOUT() { return _UNWIND_HISTORY_TABLE_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _UNWIND_HISTORY_TABLE_ENTRY$ImageBase$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _UNWIND_HISTORY_TABLE_ENTRY$ImageBase$LAYOUT() { return _UNWIND_HISTORY_TABLE_ENTRY$ImageBase$LAYOUT_; }

    static final VarHandle _UNWIND_HISTORY_TABLE_ENTRY$ImageBase$VH_ = _UNWIND_HISTORY_TABLE_ENTRY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ImageBase"));
    static final java.lang.invoke.VarHandle _UNWIND_HISTORY_TABLE_ENTRY$ImageBase$VH() { return _UNWIND_HISTORY_TABLE_ENTRY$ImageBase$VH_; }

    static final MemoryLayout _UNWIND_HISTORY_TABLE_ENTRY$FunctionEntry$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _UNWIND_HISTORY_TABLE_ENTRY$FunctionEntry$LAYOUT() { return _UNWIND_HISTORY_TABLE_ENTRY$FunctionEntry$LAYOUT_; }

    static final VarHandle _UNWIND_HISTORY_TABLE_ENTRY$FunctionEntry$VH_ = MemoryHandles.asAddressVarHandle(_UNWIND_HISTORY_TABLE_ENTRY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("FunctionEntry")));
    static final java.lang.invoke.VarHandle _UNWIND_HISTORY_TABLE_ENTRY$FunctionEntry$VH() { return _UNWIND_HISTORY_TABLE_ENTRY$FunctionEntry$VH_; }

    static final MemoryLayout _UNWIND_HISTORY_TABLE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Count"),
        C_CHAR.withName("LocalHint"),
        C_CHAR.withName("GlobalHint"),
        C_CHAR.withName("Search"),
        C_CHAR.withName("Once"),
        C_LONGLONG.withName("LowAddress"),
        C_LONGLONG.withName("HighAddress"),
        MemoryLayout.ofSequence(12, MemoryLayout.ofStruct(
            C_LONGLONG.withName("ImageBase"),
            C_POINTER.withName("FunctionEntry")
        ).withName("_UNWIND_HISTORY_TABLE_ENTRY")).withName("Entry")
    ).withName("_UNWIND_HISTORY_TABLE");
    static final jdk.incubator.foreign.MemoryLayout _UNWIND_HISTORY_TABLE$struct$LAYOUT() { return _UNWIND_HISTORY_TABLE$struct$LAYOUT_; }

    static final MemoryLayout _UNWIND_HISTORY_TABLE$Count$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _UNWIND_HISTORY_TABLE$Count$LAYOUT() { return _UNWIND_HISTORY_TABLE$Count$LAYOUT_; }

    static final VarHandle _UNWIND_HISTORY_TABLE$Count$VH_ = _UNWIND_HISTORY_TABLE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Count"));
    static final java.lang.invoke.VarHandle _UNWIND_HISTORY_TABLE$Count$VH() { return _UNWIND_HISTORY_TABLE$Count$VH_; }

    static final MemoryLayout _UNWIND_HISTORY_TABLE$LocalHint$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _UNWIND_HISTORY_TABLE$LocalHint$LAYOUT() { return _UNWIND_HISTORY_TABLE$LocalHint$LAYOUT_; }

    static final VarHandle _UNWIND_HISTORY_TABLE$LocalHint$VH_ = _UNWIND_HISTORY_TABLE$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("LocalHint"));
    static final java.lang.invoke.VarHandle _UNWIND_HISTORY_TABLE$LocalHint$VH() { return _UNWIND_HISTORY_TABLE$LocalHint$VH_; }

    static final MemoryLayout _UNWIND_HISTORY_TABLE$GlobalHint$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _UNWIND_HISTORY_TABLE$GlobalHint$LAYOUT() { return _UNWIND_HISTORY_TABLE$GlobalHint$LAYOUT_; }

    static final VarHandle _UNWIND_HISTORY_TABLE$GlobalHint$VH_ = _UNWIND_HISTORY_TABLE$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("GlobalHint"));
    static final java.lang.invoke.VarHandle _UNWIND_HISTORY_TABLE$GlobalHint$VH() { return _UNWIND_HISTORY_TABLE$GlobalHint$VH_; }

    static final MemoryLayout _UNWIND_HISTORY_TABLE$Search$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _UNWIND_HISTORY_TABLE$Search$LAYOUT() { return _UNWIND_HISTORY_TABLE$Search$LAYOUT_; }

    static final VarHandle _UNWIND_HISTORY_TABLE$Search$VH_ = _UNWIND_HISTORY_TABLE$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Search"));
    static final java.lang.invoke.VarHandle _UNWIND_HISTORY_TABLE$Search$VH() { return _UNWIND_HISTORY_TABLE$Search$VH_; }

    static final MemoryLayout _UNWIND_HISTORY_TABLE$Once$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _UNWIND_HISTORY_TABLE$Once$LAYOUT() { return _UNWIND_HISTORY_TABLE$Once$LAYOUT_; }

    static final VarHandle _UNWIND_HISTORY_TABLE$Once$VH_ = _UNWIND_HISTORY_TABLE$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Once"));
    static final java.lang.invoke.VarHandle _UNWIND_HISTORY_TABLE$Once$VH() { return _UNWIND_HISTORY_TABLE$Once$VH_; }

    static final MemoryLayout _UNWIND_HISTORY_TABLE$LowAddress$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _UNWIND_HISTORY_TABLE$LowAddress$LAYOUT() { return _UNWIND_HISTORY_TABLE$LowAddress$LAYOUT_; }

    static final VarHandle _UNWIND_HISTORY_TABLE$LowAddress$VH_ = _UNWIND_HISTORY_TABLE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LowAddress"));
    static final java.lang.invoke.VarHandle _UNWIND_HISTORY_TABLE$LowAddress$VH() { return _UNWIND_HISTORY_TABLE$LowAddress$VH_; }

    static final MemoryLayout _UNWIND_HISTORY_TABLE$HighAddress$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _UNWIND_HISTORY_TABLE$HighAddress$LAYOUT() { return _UNWIND_HISTORY_TABLE$HighAddress$LAYOUT_; }

    static final VarHandle _UNWIND_HISTORY_TABLE$HighAddress$VH_ = _UNWIND_HISTORY_TABLE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("HighAddress"));
    static final java.lang.invoke.VarHandle _UNWIND_HISTORY_TABLE$HighAddress$VH() { return _UNWIND_HISTORY_TABLE$HighAddress$VH_; }

    static final MemoryLayout _DISPATCHER_CONTEXT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("ControlPc"),
        C_LONGLONG.withName("ImageBase"),
        C_POINTER.withName("FunctionEntry"),
        C_LONGLONG.withName("EstablisherFrame"),
        C_LONGLONG.withName("TargetIp"),
        C_POINTER.withName("ContextRecord"),
        C_POINTER.withName("LanguageHandler"),
        C_POINTER.withName("HandlerData"),
        C_POINTER.withName("HistoryTable"),
        C_LONG.withName("ScopeIndex"),
        C_LONG.withName("Fill0")
    ).withName("_DISPATCHER_CONTEXT");
    static final jdk.incubator.foreign.MemoryLayout _DISPATCHER_CONTEXT$struct$LAYOUT() { return _DISPATCHER_CONTEXT$struct$LAYOUT_; }

    static final MemoryLayout _DISPATCHER_CONTEXT$ControlPc$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DISPATCHER_CONTEXT$ControlPc$LAYOUT() { return _DISPATCHER_CONTEXT$ControlPc$LAYOUT_; }

    static final VarHandle _DISPATCHER_CONTEXT$ControlPc$VH_ = _DISPATCHER_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ControlPc"));
    static final java.lang.invoke.VarHandle _DISPATCHER_CONTEXT$ControlPc$VH() { return _DISPATCHER_CONTEXT$ControlPc$VH_; }

    static final MemoryLayout _DISPATCHER_CONTEXT$ImageBase$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DISPATCHER_CONTEXT$ImageBase$LAYOUT() { return _DISPATCHER_CONTEXT$ImageBase$LAYOUT_; }

    static final VarHandle _DISPATCHER_CONTEXT$ImageBase$VH_ = _DISPATCHER_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ImageBase"));
    static final java.lang.invoke.VarHandle _DISPATCHER_CONTEXT$ImageBase$VH() { return _DISPATCHER_CONTEXT$ImageBase$VH_; }

    static final MemoryLayout _DISPATCHER_CONTEXT$FunctionEntry$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DISPATCHER_CONTEXT$FunctionEntry$LAYOUT() { return _DISPATCHER_CONTEXT$FunctionEntry$LAYOUT_; }

    static final VarHandle _DISPATCHER_CONTEXT$FunctionEntry$VH_ = MemoryHandles.asAddressVarHandle(_DISPATCHER_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("FunctionEntry")));
    static final java.lang.invoke.VarHandle _DISPATCHER_CONTEXT$FunctionEntry$VH() { return _DISPATCHER_CONTEXT$FunctionEntry$VH_; }

    static final MemoryLayout _DISPATCHER_CONTEXT$EstablisherFrame$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DISPATCHER_CONTEXT$EstablisherFrame$LAYOUT() { return _DISPATCHER_CONTEXT$EstablisherFrame$LAYOUT_; }

    static final VarHandle _DISPATCHER_CONTEXT$EstablisherFrame$VH_ = _DISPATCHER_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EstablisherFrame"));
    static final java.lang.invoke.VarHandle _DISPATCHER_CONTEXT$EstablisherFrame$VH() { return _DISPATCHER_CONTEXT$EstablisherFrame$VH_; }

    static final MemoryLayout _DISPATCHER_CONTEXT$TargetIp$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DISPATCHER_CONTEXT$TargetIp$LAYOUT() { return _DISPATCHER_CONTEXT$TargetIp$LAYOUT_; }

    static final VarHandle _DISPATCHER_CONTEXT$TargetIp$VH_ = _DISPATCHER_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TargetIp"));
    static final java.lang.invoke.VarHandle _DISPATCHER_CONTEXT$TargetIp$VH() { return _DISPATCHER_CONTEXT$TargetIp$VH_; }

    static final MemoryLayout _DISPATCHER_CONTEXT$ContextRecord$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DISPATCHER_CONTEXT$ContextRecord$LAYOUT() { return _DISPATCHER_CONTEXT$ContextRecord$LAYOUT_; }

    static final VarHandle _DISPATCHER_CONTEXT$ContextRecord$VH_ = MemoryHandles.asAddressVarHandle(_DISPATCHER_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ContextRecord")));
    static final java.lang.invoke.VarHandle _DISPATCHER_CONTEXT$ContextRecord$VH() { return _DISPATCHER_CONTEXT$ContextRecord$VH_; }

    static final MemoryLayout _DISPATCHER_CONTEXT$LanguageHandler$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DISPATCHER_CONTEXT$LanguageHandler$LAYOUT() { return _DISPATCHER_CONTEXT$LanguageHandler$LAYOUT_; }

    static final VarHandle _DISPATCHER_CONTEXT$LanguageHandler$VH_ = MemoryHandles.asAddressVarHandle(_DISPATCHER_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LanguageHandler")));
    static final java.lang.invoke.VarHandle _DISPATCHER_CONTEXT$LanguageHandler$VH() { return _DISPATCHER_CONTEXT$LanguageHandler$VH_; }

    static final MemoryLayout _DISPATCHER_CONTEXT$HandlerData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DISPATCHER_CONTEXT$HandlerData$LAYOUT() { return _DISPATCHER_CONTEXT$HandlerData$LAYOUT_; }

    static final VarHandle _DISPATCHER_CONTEXT$HandlerData$VH_ = MemoryHandles.asAddressVarHandle(_DISPATCHER_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("HandlerData")));
    static final java.lang.invoke.VarHandle _DISPATCHER_CONTEXT$HandlerData$VH() { return _DISPATCHER_CONTEXT$HandlerData$VH_; }

    static final MemoryLayout _DISPATCHER_CONTEXT$HistoryTable$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DISPATCHER_CONTEXT$HistoryTable$LAYOUT() { return _DISPATCHER_CONTEXT$HistoryTable$LAYOUT_; }

    static final VarHandle _DISPATCHER_CONTEXT$HistoryTable$VH_ = MemoryHandles.asAddressVarHandle(_DISPATCHER_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("HistoryTable")));
    static final java.lang.invoke.VarHandle _DISPATCHER_CONTEXT$HistoryTable$VH() { return _DISPATCHER_CONTEXT$HistoryTable$VH_; }

    static final MemoryLayout _DISPATCHER_CONTEXT$ScopeIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DISPATCHER_CONTEXT$ScopeIndex$LAYOUT() { return _DISPATCHER_CONTEXT$ScopeIndex$LAYOUT_; }

    static final VarHandle _DISPATCHER_CONTEXT$ScopeIndex$VH_ = _DISPATCHER_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ScopeIndex"));
    static final java.lang.invoke.VarHandle _DISPATCHER_CONTEXT$ScopeIndex$VH() { return _DISPATCHER_CONTEXT$ScopeIndex$VH_; }

    static final MemoryLayout _DISPATCHER_CONTEXT$Fill0$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DISPATCHER_CONTEXT$Fill0$LAYOUT() { return _DISPATCHER_CONTEXT$Fill0$LAYOUT_; }

    static final VarHandle _DISPATCHER_CONTEXT$Fill0$VH_ = _DISPATCHER_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Fill0"));
    static final java.lang.invoke.VarHandle _DISPATCHER_CONTEXT$Fill0$VH() { return _DISPATCHER_CONTEXT$Fill0$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(16, C_POINTER).withName("FloatingContext"),
        C_POINTER.withName("Xmm0"),
        C_POINTER.withName("Xmm1"),
        C_POINTER.withName("Xmm2"),
        C_POINTER.withName("Xmm3"),
        C_POINTER.withName("Xmm4"),
        C_POINTER.withName("Xmm5"),
        C_POINTER.withName("Xmm6"),
        C_POINTER.withName("Xmm7"),
        C_POINTER.withName("Xmm8"),
        C_POINTER.withName("Xmm9"),
        C_POINTER.withName("Xmm10"),
        C_POINTER.withName("Xmm11"),
        C_POINTER.withName("Xmm12"),
        C_POINTER.withName("Xmm13"),
        C_POINTER.withName("Xmm14"),
        C_POINTER.withName("Xmm15"),
        MemoryLayout.ofSequence(16, C_POINTER).withName("IntegerContext"),
        C_POINTER.withName("Rax"),
        C_POINTER.withName("Rcx"),
        C_POINTER.withName("Rdx"),
        C_POINTER.withName("Rbx"),
        C_POINTER.withName("Rsp"),
        C_POINTER.withName("Rbp"),
        C_POINTER.withName("Rsi"),
        C_POINTER.withName("Rdi"),
        C_POINTER.withName("R8"),
        C_POINTER.withName("R9"),
        C_POINTER.withName("R10"),
        C_POINTER.withName("R11"),
        C_POINTER.withName("R12"),
        C_POINTER.withName("R13"),
        C_POINTER.withName("R14"),
        C_POINTER.withName("R15")
    ).withName("_KNONVOLATILE_CONTEXT_POINTERS");
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm0$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm0$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm0$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm0$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Xmm0")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm0$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm0$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm1$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm1$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm1$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm1$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Xmm1")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm1$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm1$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm2$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm2$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm2$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm2$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Xmm2")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm2$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm2$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm3$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm3$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm3$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm3$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Xmm3")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm3$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm3$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm4$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm4$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm4$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm4$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Xmm4")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm4$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm4$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm5$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm5$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm5$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm5$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Xmm5")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm5$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm5$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm6$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm6$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm6$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm6$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Xmm6")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm6$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm6$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm7$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm7$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm7$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm7$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Xmm7")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm7$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm7$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm8$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm8$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm8$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm8$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Xmm8")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm8$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm8$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm9$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm9$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm9$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm9$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Xmm9")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm9$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm9$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm10$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm10$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm10$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm10$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Xmm10")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm10$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm10$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm11$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm11$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm11$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm11$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Xmm11")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm11$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm11$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm12$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm12$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm12$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm12$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Xmm12")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm12$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm12$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm13$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm13$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm13$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm13$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Xmm13")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm13$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm13$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm14$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm14$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm14$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm14$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Xmm14")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm14$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm14$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm15$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Xmm15$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm15$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm15$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Xmm15")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Xmm15$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Xmm15$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Rax$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Rax$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Rax$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Rax$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Rax")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Rax$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Rax$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Rcx$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Rcx$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Rcx$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Rcx$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Rcx")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Rcx$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Rcx$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Rdx$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Rdx$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Rdx$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Rdx$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Rdx")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Rdx$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Rdx$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Rbx$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Rbx$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Rbx$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Rbx$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Rbx")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Rbx$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Rbx$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Rsp$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Rsp$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Rsp$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Rsp$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Rsp")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Rsp$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Rsp$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Rbp$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Rbp$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Rbp$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Rbp$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Rbp")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Rbp$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Rbp$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Rsi$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Rsi$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Rsi$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Rsi$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Rsi")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Rsi$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Rsi$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Rdi$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$Rdi$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$Rdi$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Rdi$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Rdi")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$Rdi$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$Rdi$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$R8$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$R8$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$R8$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$R8$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("R8")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$R8$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$R8$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$R9$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$R9$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$R9$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$R9$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("R9")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$R9$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$R9$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$R10$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$R10$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$R10$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$R10$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("R10")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$R10$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$R10$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$R11$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$R11$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$R11$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$R11$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("R11")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$R11$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$R11$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$R12$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$R12$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$R12$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$R12$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("R12")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$R12$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$R12$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$R13$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$R13$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$R13$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$R13$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("R13")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$R13$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$R13$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$R14$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$R14$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$R14$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$R14$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("R14")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$R14$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$R14$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$R15$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS$R15$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS$R15$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS$R15$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("R15")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS$R15$VH() { return _KNONVOLATILE_CONTEXT_POINTERS$R15$VH_; }

    static final MemoryLayout _SCOPE_TABLE_ARM$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Count"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONG.withName("BeginAddress"),
            C_LONG.withName("EndAddress"),
            C_LONG.withName("HandlerAddress"),
            C_LONG.withName("JumpTarget")
        )).withName("ScopeRecord")
    ).withName("_SCOPE_TABLE_ARM");
    static final jdk.incubator.foreign.MemoryLayout _SCOPE_TABLE_ARM$struct$LAYOUT() { return _SCOPE_TABLE_ARM$struct$LAYOUT_; }

    static final MemoryLayout _SCOPE_TABLE_ARM$Count$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SCOPE_TABLE_ARM$Count$LAYOUT() { return _SCOPE_TABLE_ARM$Count$LAYOUT_; }

    static final VarHandle _SCOPE_TABLE_ARM$Count$VH_ = _SCOPE_TABLE_ARM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Count"));
    static final java.lang.invoke.VarHandle _SCOPE_TABLE_ARM$Count$VH() { return _SCOPE_TABLE_ARM$Count$VH_; }

    static final MemoryLayout _SCOPE_TABLE_ARM64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Count"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONG.withName("BeginAddress"),
            C_LONG.withName("EndAddress"),
            C_LONG.withName("HandlerAddress"),
            C_LONG.withName("JumpTarget")
        )).withName("ScopeRecord")
    ).withName("_SCOPE_TABLE_ARM64");
    static final jdk.incubator.foreign.MemoryLayout _SCOPE_TABLE_ARM64$struct$LAYOUT() { return _SCOPE_TABLE_ARM64$struct$LAYOUT_; }

    static final MemoryLayout _SCOPE_TABLE_ARM64$Count$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SCOPE_TABLE_ARM64$Count$LAYOUT() { return _SCOPE_TABLE_ARM64$Count$LAYOUT_; }

    static final VarHandle _SCOPE_TABLE_ARM64$Count$VH_ = _SCOPE_TABLE_ARM64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Count"));
    static final java.lang.invoke.VarHandle _SCOPE_TABLE_ARM64$Count$VH() { return _SCOPE_TABLE_ARM64$Count$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("X19"),
        C_POINTER.withName("X20"),
        C_POINTER.withName("X21"),
        C_POINTER.withName("X22"),
        C_POINTER.withName("X23"),
        C_POINTER.withName("X24"),
        C_POINTER.withName("X25"),
        C_POINTER.withName("X26"),
        C_POINTER.withName("X27"),
        C_POINTER.withName("X28"),
        C_POINTER.withName("Fp"),
        C_POINTER.withName("Lr"),
        C_POINTER.withName("D8"),
        C_POINTER.withName("D9"),
        C_POINTER.withName("D10"),
        C_POINTER.withName("D11"),
        C_POINTER.withName("D12"),
        C_POINTER.withName("D13"),
        C_POINTER.withName("D14"),
        C_POINTER.withName("D15")
    ).withName("_KNONVOLATILE_CONTEXT_POINTERS_ARM64");
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X19$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X19$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X19$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X19$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("X19")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X19$VH() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X19$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X20$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X20$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X20$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X20$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("X20")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X20$VH() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X20$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X21$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X21$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X21$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X21$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("X21")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X21$VH() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X21$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X22$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X22$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X22$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X22$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("X22")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X22$VH() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X22$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X23$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X23$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X23$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X23$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("X23")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X23$VH() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X23$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X24$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X24$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X24$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X24$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("X24")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X24$VH() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X24$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X25$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X25$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X25$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X25$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("X25")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X25$VH() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X25$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X26$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X26$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X26$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X26$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("X26")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X26$VH() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X26$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X27$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X27$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X27$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X27$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("X27")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X27$VH() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X27$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X28$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X28$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X28$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X28$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("X28")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X28$VH() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$X28$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$Fp$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$Fp$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$Fp$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$Fp$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Fp")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$Fp$VH() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$Fp$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$Lr$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$Lr$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$Lr$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$Lr$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Lr")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$Lr$VH() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$Lr$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D8$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D8$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D8$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D8$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("D8")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D8$VH() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D8$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D9$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D9$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D9$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D9$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("D9")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D9$VH() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D9$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D10$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D10$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D10$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D10$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("D10")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D10$VH() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D10$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D11$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D11$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D11$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D11$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("D11")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D11$VH() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D11$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D12$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D12$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D12$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D12$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("D12")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D12$VH() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D12$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D13$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D13$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D13$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D13$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("D13")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D13$VH() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D13$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D14$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D14$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D14$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D14$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("D14")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D14$VH() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D14$VH_; }

    static final MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D15$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D15$LAYOUT() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D15$LAYOUT_; }

    static final VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D15$VH_ = MemoryHandles.asAddressVarHandle(_KNONVOLATILE_CONTEXT_POINTERS_ARM64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("D15")));
    static final java.lang.invoke.VarHandle _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D15$VH() { return _KNONVOLATILE_CONTEXT_POINTERS_ARM64$D15$VH_; }

    static final FunctionDescriptor __int2c$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor __int2c$FUNC() { return __int2c$FUNC_; }

    static final MethodHandle __int2c$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__int2c",
        "()V",
        __int2c$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __int2c$MH() { return __int2c$MH_; }

    static final MemoryLayout _LDT_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("LimitLow"),
        C_SHORT.withName("BaseLow"),
        MemoryLayout.ofUnion(
            MemoryLayout.ofStruct(
                C_CHAR.withName("BaseMid"),
                C_CHAR.withName("Flags1"),
                C_CHAR.withName("Flags2"),
                C_CHAR.withName("BaseHi")
            ).withName("Bytes"),
            MemoryLayout.ofStruct(
                C_INT
            ).withName("Bits")
        ).withName("HighWord")
    ).withName("_LDT_ENTRY");
    static final jdk.incubator.foreign.MemoryLayout _LDT_ENTRY$struct$LAYOUT() { return _LDT_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _LDT_ENTRY$LimitLow$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _LDT_ENTRY$LimitLow$LAYOUT() { return _LDT_ENTRY$LimitLow$LAYOUT_; }

    static final VarHandle _LDT_ENTRY$LimitLow$VH_ = _LDT_ENTRY$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("LimitLow"));
    static final java.lang.invoke.VarHandle _LDT_ENTRY$LimitLow$VH() { return _LDT_ENTRY$LimitLow$VH_; }

    static final MemoryLayout _LDT_ENTRY$BaseLow$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _LDT_ENTRY$BaseLow$LAYOUT() { return _LDT_ENTRY$BaseLow$LAYOUT_; }

    static final VarHandle _LDT_ENTRY$BaseLow$VH_ = _LDT_ENTRY$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("BaseLow"));
    static final java.lang.invoke.VarHandle _LDT_ENTRY$BaseLow$VH() { return _LDT_ENTRY$BaseLow$VH_; }

    static final MemoryLayout _LDT_ENTRY$HighWord$union$LAYOUT_ = MemoryLayout.ofUnion(
        MemoryLayout.ofStruct(
            C_CHAR.withName("BaseMid"),
            C_CHAR.withName("Flags1"),
            C_CHAR.withName("Flags2"),
            C_CHAR.withName("BaseHi")
        ).withName("Bytes"),
        MemoryLayout.ofStruct(
            C_INT
        ).withName("Bits")
    );
    static final jdk.incubator.foreign.MemoryLayout _LDT_ENTRY$HighWord$union$LAYOUT() { return _LDT_ENTRY$HighWord$union$LAYOUT_; }

    static final MemoryLayout _LDT_ENTRY$HighWord$Bytes$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("BaseMid"),
        C_CHAR.withName("Flags1"),
        C_CHAR.withName("Flags2"),
        C_CHAR.withName("BaseHi")
    );
    static final jdk.incubator.foreign.MemoryLayout _LDT_ENTRY$HighWord$Bytes$struct$LAYOUT() { return _LDT_ENTRY$HighWord$Bytes$struct$LAYOUT_; }

    static final MemoryLayout _LDT_ENTRY$HighWord$Bytes$BaseMid$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _LDT_ENTRY$HighWord$Bytes$BaseMid$LAYOUT() { return _LDT_ENTRY$HighWord$Bytes$BaseMid$LAYOUT_; }

    static final VarHandle _LDT_ENTRY$HighWord$Bytes$BaseMid$VH_ = _LDT_ENTRY$HighWord$Bytes$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("BaseMid"));
    static final java.lang.invoke.VarHandle _LDT_ENTRY$HighWord$Bytes$BaseMid$VH() { return _LDT_ENTRY$HighWord$Bytes$BaseMid$VH_; }

    static final MemoryLayout _LDT_ENTRY$HighWord$Bytes$Flags1$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _LDT_ENTRY$HighWord$Bytes$Flags1$LAYOUT() { return _LDT_ENTRY$HighWord$Bytes$Flags1$LAYOUT_; }

    static final VarHandle _LDT_ENTRY$HighWord$Bytes$Flags1$VH_ = _LDT_ENTRY$HighWord$Bytes$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Flags1"));
    static final java.lang.invoke.VarHandle _LDT_ENTRY$HighWord$Bytes$Flags1$VH() { return _LDT_ENTRY$HighWord$Bytes$Flags1$VH_; }

    static final MemoryLayout _LDT_ENTRY$HighWord$Bytes$Flags2$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _LDT_ENTRY$HighWord$Bytes$Flags2$LAYOUT() { return _LDT_ENTRY$HighWord$Bytes$Flags2$LAYOUT_; }

    static final VarHandle _LDT_ENTRY$HighWord$Bytes$Flags2$VH_ = _LDT_ENTRY$HighWord$Bytes$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Flags2"));
    static final java.lang.invoke.VarHandle _LDT_ENTRY$HighWord$Bytes$Flags2$VH() { return _LDT_ENTRY$HighWord$Bytes$Flags2$VH_; }

    static final MemoryLayout _LDT_ENTRY$HighWord$Bytes$BaseHi$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _LDT_ENTRY$HighWord$Bytes$BaseHi$LAYOUT() { return _LDT_ENTRY$HighWord$Bytes$BaseHi$LAYOUT_; }

    static final VarHandle _LDT_ENTRY$HighWord$Bytes$BaseHi$VH_ = _LDT_ENTRY$HighWord$Bytes$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("BaseHi"));
    static final java.lang.invoke.VarHandle _LDT_ENTRY$HighWord$Bytes$BaseHi$VH() { return _LDT_ENTRY$HighWord$Bytes$BaseHi$VH_; }

    static final MemoryLayout _LDT_ENTRY$HighWord$Bits$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT
    );
    static final jdk.incubator.foreign.MemoryLayout _LDT_ENTRY$HighWord$Bits$struct$LAYOUT() { return _LDT_ENTRY$HighWord$Bits$struct$LAYOUT_; }

    static final FunctionDescriptor ReadAcquire8$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadAcquire8$FUNC() { return ReadAcquire8$FUNC_; }

    static final MethodHandle ReadAcquire8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadAcquire8",
        "(Ljdk/incubator/foreign/MemoryAddress;)B",
        ReadAcquire8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadAcquire8$MH() { return ReadAcquire8$MH_; }

    static final FunctionDescriptor ReadNoFence8$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadNoFence8$FUNC() { return ReadNoFence8$FUNC_; }

    static final MethodHandle ReadNoFence8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadNoFence8",
        "(Ljdk/incubator/foreign/MemoryAddress;)B",
        ReadNoFence8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadNoFence8$MH() { return ReadNoFence8$MH_; }

    static final FunctionDescriptor WriteRelease8$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_CHAR
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteRelease8$FUNC() { return WriteRelease8$FUNC_; }

    static final MethodHandle WriteRelease8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteRelease8",
        "(Ljdk/incubator/foreign/MemoryAddress;B)V",
        WriteRelease8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteRelease8$MH() { return WriteRelease8$MH_; }

    static final FunctionDescriptor WriteNoFence8$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_CHAR
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteNoFence8$FUNC() { return WriteNoFence8$FUNC_; }

    static final MethodHandle WriteNoFence8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteNoFence8",
        "(Ljdk/incubator/foreign/MemoryAddress;B)V",
        WriteNoFence8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteNoFence8$MH() { return WriteNoFence8$MH_; }

    static final FunctionDescriptor ReadAcquire16$FUNC_ = FunctionDescriptor.of(C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadAcquire16$FUNC() { return ReadAcquire16$FUNC_; }

    static final MethodHandle ReadAcquire16$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadAcquire16",
        "(Ljdk/incubator/foreign/MemoryAddress;)S",
        ReadAcquire16$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadAcquire16$MH() { return ReadAcquire16$MH_; }

    static final FunctionDescriptor ReadNoFence16$FUNC_ = FunctionDescriptor.of(C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadNoFence16$FUNC() { return ReadNoFence16$FUNC_; }

    static final MethodHandle ReadNoFence16$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadNoFence16",
        "(Ljdk/incubator/foreign/MemoryAddress;)S",
        ReadNoFence16$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadNoFence16$MH() { return ReadNoFence16$MH_; }

    static final FunctionDescriptor WriteRelease16$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteRelease16$FUNC() { return WriteRelease16$FUNC_; }

    static final MethodHandle WriteRelease16$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteRelease16",
        "(Ljdk/incubator/foreign/MemoryAddress;S)V",
        WriteRelease16$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteRelease16$MH() { return WriteRelease16$MH_; }

    static final FunctionDescriptor WriteNoFence16$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteNoFence16$FUNC() { return WriteNoFence16$FUNC_; }

    static final MethodHandle WriteNoFence16$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteNoFence16",
        "(Ljdk/incubator/foreign/MemoryAddress;S)V",
        WriteNoFence16$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteNoFence16$MH() { return WriteNoFence16$MH_; }

    static final FunctionDescriptor ReadAcquire$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadAcquire$FUNC() { return ReadAcquire$FUNC_; }

    static final MethodHandle ReadAcquire$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadAcquire",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ReadAcquire$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadAcquire$MH() { return ReadAcquire$MH_; }

    static final FunctionDescriptor ReadNoFence$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadNoFence$FUNC() { return ReadNoFence$FUNC_; }

    static final MethodHandle ReadNoFence$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadNoFence",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ReadNoFence$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadNoFence$MH() { return ReadNoFence$MH_; }

    static final FunctionDescriptor WriteRelease$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteRelease$FUNC() { return WriteRelease$FUNC_; }

    static final MethodHandle WriteRelease$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteRelease",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        WriteRelease$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteRelease$MH() { return WriteRelease$MH_; }

    static final FunctionDescriptor WriteNoFence$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteNoFence$FUNC() { return WriteNoFence$FUNC_; }

    static final MethodHandle WriteNoFence$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteNoFence",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        WriteNoFence$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteNoFence$MH() { return WriteNoFence$MH_; }

    static final FunctionDescriptor ReadAcquire64$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadAcquire64$FUNC() { return ReadAcquire64$FUNC_; }

    static final MethodHandle ReadAcquire64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadAcquire64",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        ReadAcquire64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadAcquire64$MH() { return ReadAcquire64$MH_; }

    static final FunctionDescriptor ReadNoFence64$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadNoFence64$FUNC() { return ReadNoFence64$FUNC_; }

    static final MethodHandle ReadNoFence64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadNoFence64",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        ReadNoFence64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadNoFence64$MH() { return ReadNoFence64$MH_; }

    static final FunctionDescriptor WriteRelease64$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteRelease64$FUNC() { return WriteRelease64$FUNC_; }

    static final MethodHandle WriteRelease64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteRelease64",
        "(Ljdk/incubator/foreign/MemoryAddress;J)V",
        WriteRelease64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteRelease64$MH() { return WriteRelease64$MH_; }

    static final FunctionDescriptor WriteNoFence64$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteNoFence64$FUNC() { return WriteNoFence64$FUNC_; }

    static final MethodHandle WriteNoFence64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteNoFence64",
        "(Ljdk/incubator/foreign/MemoryAddress;J)V",
        WriteNoFence64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteNoFence64$MH() { return WriteNoFence64$MH_; }

    static final FunctionDescriptor ReadRaw8$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadRaw8$FUNC() { return ReadRaw8$FUNC_; }

    static final MethodHandle ReadRaw8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadRaw8",
        "(Ljdk/incubator/foreign/MemoryAddress;)B",
        ReadRaw8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadRaw8$MH() { return ReadRaw8$MH_; }

    static final FunctionDescriptor WriteRaw8$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_CHAR
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteRaw8$FUNC() { return WriteRaw8$FUNC_; }

    static final MethodHandle WriteRaw8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteRaw8",
        "(Ljdk/incubator/foreign/MemoryAddress;B)V",
        WriteRaw8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteRaw8$MH() { return WriteRaw8$MH_; }

    static final FunctionDescriptor ReadRaw16$FUNC_ = FunctionDescriptor.of(C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadRaw16$FUNC() { return ReadRaw16$FUNC_; }

    static final MethodHandle ReadRaw16$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadRaw16",
        "(Ljdk/incubator/foreign/MemoryAddress;)S",
        ReadRaw16$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadRaw16$MH() { return ReadRaw16$MH_; }

    static final FunctionDescriptor WriteRaw16$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteRaw16$FUNC() { return WriteRaw16$FUNC_; }

    static final MethodHandle WriteRaw16$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteRaw16",
        "(Ljdk/incubator/foreign/MemoryAddress;S)V",
        WriteRaw16$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteRaw16$MH() { return WriteRaw16$MH_; }

    static final FunctionDescriptor ReadRaw$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadRaw$FUNC() { return ReadRaw$FUNC_; }

    static final MethodHandle ReadRaw$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadRaw",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ReadRaw$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadRaw$MH() { return ReadRaw$MH_; }

    static final FunctionDescriptor WriteRaw$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteRaw$FUNC() { return WriteRaw$FUNC_; }

    static final MethodHandle WriteRaw$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteRaw",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        WriteRaw$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteRaw$MH() { return WriteRaw$MH_; }

    static final FunctionDescriptor ReadRaw64$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadRaw64$FUNC() { return ReadRaw64$FUNC_; }

    static final MethodHandle ReadRaw64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadRaw64",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        ReadRaw64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadRaw64$MH() { return ReadRaw64$MH_; }

    static final FunctionDescriptor WriteRaw64$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteRaw64$FUNC() { return WriteRaw64$FUNC_; }

    static final MethodHandle WriteRaw64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteRaw64",
        "(Ljdk/incubator/foreign/MemoryAddress;J)V",
        WriteRaw64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteRaw64$MH() { return WriteRaw64$MH_; }

    static final FunctionDescriptor ReadUCharAcquire$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadUCharAcquire$FUNC() { return ReadUCharAcquire$FUNC_; }

    static final MethodHandle ReadUCharAcquire$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadUCharAcquire",
        "(Ljdk/incubator/foreign/MemoryAddress;)B",
        ReadUCharAcquire$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadUCharAcquire$MH() { return ReadUCharAcquire$MH_; }

    static final FunctionDescriptor ReadUCharNoFence$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadUCharNoFence$FUNC() { return ReadUCharNoFence$FUNC_; }

    static final MethodHandle ReadUCharNoFence$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadUCharNoFence",
        "(Ljdk/incubator/foreign/MemoryAddress;)B",
        ReadUCharNoFence$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadUCharNoFence$MH() { return ReadUCharNoFence$MH_; }

    static final FunctionDescriptor ReadBooleanAcquire$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadBooleanAcquire$FUNC() { return ReadBooleanAcquire$FUNC_; }

    static final MethodHandle ReadBooleanAcquire$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadBooleanAcquire",
        "(Ljdk/incubator/foreign/MemoryAddress;)B",
        ReadBooleanAcquire$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadBooleanAcquire$MH() { return ReadBooleanAcquire$MH_; }

    static final FunctionDescriptor ReadBooleanNoFence$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadBooleanNoFence$FUNC() { return ReadBooleanNoFence$FUNC_; }

    static final MethodHandle ReadBooleanNoFence$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadBooleanNoFence",
        "(Ljdk/incubator/foreign/MemoryAddress;)B",
        ReadBooleanNoFence$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadBooleanNoFence$MH() { return ReadBooleanNoFence$MH_; }

    static final FunctionDescriptor ReadUCharRaw$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadUCharRaw$FUNC() { return ReadUCharRaw$FUNC_; }

    static final MethodHandle ReadUCharRaw$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadUCharRaw",
        "(Ljdk/incubator/foreign/MemoryAddress;)B",
        ReadUCharRaw$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadUCharRaw$MH() { return ReadUCharRaw$MH_; }

    static final FunctionDescriptor WriteUCharRelease$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_CHAR
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteUCharRelease$FUNC() { return WriteUCharRelease$FUNC_; }

    static final MethodHandle WriteUCharRelease$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteUCharRelease",
        "(Ljdk/incubator/foreign/MemoryAddress;B)V",
        WriteUCharRelease$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteUCharRelease$MH() { return WriteUCharRelease$MH_; }

    static final FunctionDescriptor WriteUCharNoFence$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_CHAR
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteUCharNoFence$FUNC() { return WriteUCharNoFence$FUNC_; }

    static final MethodHandle WriteUCharNoFence$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteUCharNoFence",
        "(Ljdk/incubator/foreign/MemoryAddress;B)V",
        WriteUCharNoFence$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteUCharNoFence$MH() { return WriteUCharNoFence$MH_; }

    static final FunctionDescriptor WriteBooleanRelease$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_CHAR
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteBooleanRelease$FUNC() { return WriteBooleanRelease$FUNC_; }

    static final MethodHandle WriteBooleanRelease$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteBooleanRelease",
        "(Ljdk/incubator/foreign/MemoryAddress;B)V",
        WriteBooleanRelease$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteBooleanRelease$MH() { return WriteBooleanRelease$MH_; }

    static final FunctionDescriptor WriteBooleanNoFence$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_CHAR
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteBooleanNoFence$FUNC() { return WriteBooleanNoFence$FUNC_; }

    static final MethodHandle WriteBooleanNoFence$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteBooleanNoFence",
        "(Ljdk/incubator/foreign/MemoryAddress;B)V",
        WriteBooleanNoFence$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteBooleanNoFence$MH() { return WriteBooleanNoFence$MH_; }

    static final FunctionDescriptor WriteUCharRaw$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_CHAR
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteUCharRaw$FUNC() { return WriteUCharRaw$FUNC_; }

    static final MethodHandle WriteUCharRaw$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteUCharRaw",
        "(Ljdk/incubator/foreign/MemoryAddress;B)V",
        WriteUCharRaw$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteUCharRaw$MH() { return WriteUCharRaw$MH_; }

    static final FunctionDescriptor ReadUShortAcquire$FUNC_ = FunctionDescriptor.of(C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadUShortAcquire$FUNC() { return ReadUShortAcquire$FUNC_; }

    static final MethodHandle ReadUShortAcquire$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadUShortAcquire",
        "(Ljdk/incubator/foreign/MemoryAddress;)S",
        ReadUShortAcquire$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadUShortAcquire$MH() { return ReadUShortAcquire$MH_; }

    static final FunctionDescriptor ReadUShortNoFence$FUNC_ = FunctionDescriptor.of(C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadUShortNoFence$FUNC() { return ReadUShortNoFence$FUNC_; }

    static final MethodHandle ReadUShortNoFence$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadUShortNoFence",
        "(Ljdk/incubator/foreign/MemoryAddress;)S",
        ReadUShortNoFence$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadUShortNoFence$MH() { return ReadUShortNoFence$MH_; }

    static final FunctionDescriptor ReadUShortRaw$FUNC_ = FunctionDescriptor.of(C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadUShortRaw$FUNC() { return ReadUShortRaw$FUNC_; }

    static final MethodHandle ReadUShortRaw$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadUShortRaw",
        "(Ljdk/incubator/foreign/MemoryAddress;)S",
        ReadUShortRaw$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadUShortRaw$MH() { return ReadUShortRaw$MH_; }

    static final FunctionDescriptor WriteUShortRelease$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteUShortRelease$FUNC() { return WriteUShortRelease$FUNC_; }

    static final MethodHandle WriteUShortRelease$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteUShortRelease",
        "(Ljdk/incubator/foreign/MemoryAddress;S)V",
        WriteUShortRelease$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteUShortRelease$MH() { return WriteUShortRelease$MH_; }

    static final FunctionDescriptor WriteUShortNoFence$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteUShortNoFence$FUNC() { return WriteUShortNoFence$FUNC_; }

    static final MethodHandle WriteUShortNoFence$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteUShortNoFence",
        "(Ljdk/incubator/foreign/MemoryAddress;S)V",
        WriteUShortNoFence$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteUShortNoFence$MH() { return WriteUShortNoFence$MH_; }

    static final FunctionDescriptor WriteUShortRaw$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteUShortRaw$FUNC() { return WriteUShortRaw$FUNC_; }

    static final MethodHandle WriteUShortRaw$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteUShortRaw",
        "(Ljdk/incubator/foreign/MemoryAddress;S)V",
        WriteUShortRaw$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteUShortRaw$MH() { return WriteUShortRaw$MH_; }

    static final FunctionDescriptor ReadULongAcquire$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadULongAcquire$FUNC() { return ReadULongAcquire$FUNC_; }

    static final MethodHandle ReadULongAcquire$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadULongAcquire",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ReadULongAcquire$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadULongAcquire$MH() { return ReadULongAcquire$MH_; }

    static final FunctionDescriptor ReadULongNoFence$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadULongNoFence$FUNC() { return ReadULongNoFence$FUNC_; }

    static final MethodHandle ReadULongNoFence$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadULongNoFence",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ReadULongNoFence$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadULongNoFence$MH() { return ReadULongNoFence$MH_; }

    static final FunctionDescriptor ReadULongRaw$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadULongRaw$FUNC() { return ReadULongRaw$FUNC_; }

    static final MethodHandle ReadULongRaw$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadULongRaw",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ReadULongRaw$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadULongRaw$MH() { return ReadULongRaw$MH_; }

    static final FunctionDescriptor WriteULongRelease$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteULongRelease$FUNC() { return WriteULongRelease$FUNC_; }

    static final MethodHandle WriteULongRelease$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteULongRelease",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        WriteULongRelease$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteULongRelease$MH() { return WriteULongRelease$MH_; }

    static final FunctionDescriptor WriteULongNoFence$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteULongNoFence$FUNC() { return WriteULongNoFence$FUNC_; }

    static final MethodHandle WriteULongNoFence$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteULongNoFence",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        WriteULongNoFence$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteULongNoFence$MH() { return WriteULongNoFence$MH_; }

    static final FunctionDescriptor WriteULongRaw$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteULongRaw$FUNC() { return WriteULongRaw$FUNC_; }

    static final MethodHandle WriteULongRaw$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteULongRaw",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        WriteULongRaw$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteULongRaw$MH() { return WriteULongRaw$MH_; }

    static final FunctionDescriptor ReadULong64Acquire$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadULong64Acquire$FUNC() { return ReadULong64Acquire$FUNC_; }

    static final MethodHandle ReadULong64Acquire$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadULong64Acquire",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        ReadULong64Acquire$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadULong64Acquire$MH() { return ReadULong64Acquire$MH_; }

    static final FunctionDescriptor ReadULong64NoFence$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadULong64NoFence$FUNC() { return ReadULong64NoFence$FUNC_; }

    static final MethodHandle ReadULong64NoFence$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadULong64NoFence",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        ReadULong64NoFence$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadULong64NoFence$MH() { return ReadULong64NoFence$MH_; }

    static final FunctionDescriptor ReadULong64Raw$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadULong64Raw$FUNC() { return ReadULong64Raw$FUNC_; }

    static final MethodHandle ReadULong64Raw$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadULong64Raw",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        ReadULong64Raw$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadULong64Raw$MH() { return ReadULong64Raw$MH_; }

    static final FunctionDescriptor WriteULong64Release$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteULong64Release$FUNC() { return WriteULong64Release$FUNC_; }

    static final MethodHandle WriteULong64Release$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteULong64Release",
        "(Ljdk/incubator/foreign/MemoryAddress;J)V",
        WriteULong64Release$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteULong64Release$MH() { return WriteULong64Release$MH_; }

    static final FunctionDescriptor WriteULong64NoFence$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteULong64NoFence$FUNC() { return WriteULong64NoFence$FUNC_; }

    static final MethodHandle WriteULong64NoFence$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteULong64NoFence",
        "(Ljdk/incubator/foreign/MemoryAddress;J)V",
        WriteULong64NoFence$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteULong64NoFence$MH() { return WriteULong64NoFence$MH_; }

    static final FunctionDescriptor WriteULong64Raw$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteULong64Raw$FUNC() { return WriteULong64Raw$FUNC_; }

    static final MethodHandle WriteULong64Raw$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteULong64Raw",
        "(Ljdk/incubator/foreign/MemoryAddress;J)V",
        WriteULong64Raw$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteULong64Raw$MH() { return WriteULong64Raw$MH_; }

    static final FunctionDescriptor ReadPointerAcquire$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadPointerAcquire$FUNC() { return ReadPointerAcquire$FUNC_; }

    static final MethodHandle ReadPointerAcquire$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadPointerAcquire",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        ReadPointerAcquire$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadPointerAcquire$MH() { return ReadPointerAcquire$MH_; }

    static final FunctionDescriptor ReadPointerNoFence$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadPointerNoFence$FUNC() { return ReadPointerNoFence$FUNC_; }

    static final MethodHandle ReadPointerNoFence$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadPointerNoFence",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        ReadPointerNoFence$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadPointerNoFence$MH() { return ReadPointerNoFence$MH_; }

    static final FunctionDescriptor ReadPointerRaw$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadPointerRaw$FUNC() { return ReadPointerRaw$FUNC_; }

    static final MethodHandle ReadPointerRaw$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadPointerRaw",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        ReadPointerRaw$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadPointerRaw$MH() { return ReadPointerRaw$MH_; }

    static final FunctionDescriptor WritePointerRelease$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WritePointerRelease$FUNC() { return WritePointerRelease$FUNC_; }

    static final MethodHandle WritePointerRelease$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WritePointerRelease",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        WritePointerRelease$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WritePointerRelease$MH() { return WritePointerRelease$MH_; }

    static final FunctionDescriptor WritePointerNoFence$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WritePointerNoFence$FUNC() { return WritePointerNoFence$FUNC_; }

    static final MethodHandle WritePointerNoFence$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WritePointerNoFence",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        WritePointerNoFence$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WritePointerNoFence$MH() { return WritePointerNoFence$MH_; }

    static final FunctionDescriptor WritePointerRaw$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WritePointerRaw$FUNC() { return WritePointerRaw$FUNC_; }

    static final MethodHandle WritePointerRaw$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WritePointerRaw",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        WritePointerRaw$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WritePointerRaw$MH() { return WritePointerRaw$MH_; }

    static final MemoryLayout _WOW64_FLOATING_SAVE_AREA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ControlWord"),
        C_LONG.withName("StatusWord"),
        C_LONG.withName("TagWord"),
        C_LONG.withName("ErrorOffset"),
        C_LONG.withName("ErrorSelector"),
        C_LONG.withName("DataOffset"),
        C_LONG.withName("DataSelector"),
        MemoryLayout.ofSequence(80, C_CHAR).withName("RegisterArea"),
        C_LONG.withName("Cr0NpxState")
    ).withName("_WOW64_FLOATING_SAVE_AREA");
    static final jdk.incubator.foreign.MemoryLayout _WOW64_FLOATING_SAVE_AREA$struct$LAYOUT() { return _WOW64_FLOATING_SAVE_AREA$struct$LAYOUT_; }

    static final MemoryLayout _WOW64_FLOATING_SAVE_AREA$ControlWord$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_FLOATING_SAVE_AREA$ControlWord$LAYOUT() { return _WOW64_FLOATING_SAVE_AREA$ControlWord$LAYOUT_; }

    static final VarHandle _WOW64_FLOATING_SAVE_AREA$ControlWord$VH_ = _WOW64_FLOATING_SAVE_AREA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ControlWord"));
    static final java.lang.invoke.VarHandle _WOW64_FLOATING_SAVE_AREA$ControlWord$VH() { return _WOW64_FLOATING_SAVE_AREA$ControlWord$VH_; }

    static final MemoryLayout _WOW64_FLOATING_SAVE_AREA$StatusWord$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_FLOATING_SAVE_AREA$StatusWord$LAYOUT() { return _WOW64_FLOATING_SAVE_AREA$StatusWord$LAYOUT_; }

    static final VarHandle _WOW64_FLOATING_SAVE_AREA$StatusWord$VH_ = _WOW64_FLOATING_SAVE_AREA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StatusWord"));
    static final java.lang.invoke.VarHandle _WOW64_FLOATING_SAVE_AREA$StatusWord$VH() { return _WOW64_FLOATING_SAVE_AREA$StatusWord$VH_; }

    static final MemoryLayout _WOW64_FLOATING_SAVE_AREA$TagWord$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_FLOATING_SAVE_AREA$TagWord$LAYOUT() { return _WOW64_FLOATING_SAVE_AREA$TagWord$LAYOUT_; }

    static final VarHandle _WOW64_FLOATING_SAVE_AREA$TagWord$VH_ = _WOW64_FLOATING_SAVE_AREA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TagWord"));
    static final java.lang.invoke.VarHandle _WOW64_FLOATING_SAVE_AREA$TagWord$VH() { return _WOW64_FLOATING_SAVE_AREA$TagWord$VH_; }

    static final MemoryLayout _WOW64_FLOATING_SAVE_AREA$ErrorOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_FLOATING_SAVE_AREA$ErrorOffset$LAYOUT() { return _WOW64_FLOATING_SAVE_AREA$ErrorOffset$LAYOUT_; }

    static final VarHandle _WOW64_FLOATING_SAVE_AREA$ErrorOffset$VH_ = _WOW64_FLOATING_SAVE_AREA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ErrorOffset"));
    static final java.lang.invoke.VarHandle _WOW64_FLOATING_SAVE_AREA$ErrorOffset$VH() { return _WOW64_FLOATING_SAVE_AREA$ErrorOffset$VH_; }

    static final MemoryLayout _WOW64_FLOATING_SAVE_AREA$ErrorSelector$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_FLOATING_SAVE_AREA$ErrorSelector$LAYOUT() { return _WOW64_FLOATING_SAVE_AREA$ErrorSelector$LAYOUT_; }

    static final VarHandle _WOW64_FLOATING_SAVE_AREA$ErrorSelector$VH_ = _WOW64_FLOATING_SAVE_AREA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ErrorSelector"));
    static final java.lang.invoke.VarHandle _WOW64_FLOATING_SAVE_AREA$ErrorSelector$VH() { return _WOW64_FLOATING_SAVE_AREA$ErrorSelector$VH_; }

    static final MemoryLayout _WOW64_FLOATING_SAVE_AREA$DataOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_FLOATING_SAVE_AREA$DataOffset$LAYOUT() { return _WOW64_FLOATING_SAVE_AREA$DataOffset$LAYOUT_; }

    static final VarHandle _WOW64_FLOATING_SAVE_AREA$DataOffset$VH_ = _WOW64_FLOATING_SAVE_AREA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DataOffset"));
    static final java.lang.invoke.VarHandle _WOW64_FLOATING_SAVE_AREA$DataOffset$VH() { return _WOW64_FLOATING_SAVE_AREA$DataOffset$VH_; }

    static final MemoryLayout _WOW64_FLOATING_SAVE_AREA$DataSelector$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_FLOATING_SAVE_AREA$DataSelector$LAYOUT() { return _WOW64_FLOATING_SAVE_AREA$DataSelector$LAYOUT_; }

    static final VarHandle _WOW64_FLOATING_SAVE_AREA$DataSelector$VH_ = _WOW64_FLOATING_SAVE_AREA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DataSelector"));
    static final java.lang.invoke.VarHandle _WOW64_FLOATING_SAVE_AREA$DataSelector$VH() { return _WOW64_FLOATING_SAVE_AREA$DataSelector$VH_; }

    static final MemoryLayout _WOW64_FLOATING_SAVE_AREA$Cr0NpxState$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_FLOATING_SAVE_AREA$Cr0NpxState$LAYOUT() { return _WOW64_FLOATING_SAVE_AREA$Cr0NpxState$LAYOUT_; }

    static final VarHandle _WOW64_FLOATING_SAVE_AREA$Cr0NpxState$VH_ = _WOW64_FLOATING_SAVE_AREA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Cr0NpxState"));
    static final java.lang.invoke.VarHandle _WOW64_FLOATING_SAVE_AREA$Cr0NpxState$VH() { return _WOW64_FLOATING_SAVE_AREA$Cr0NpxState$VH_; }

    static final MemoryLayout _WOW64_CONTEXT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ContextFlags"),
        C_LONG.withName("Dr0"),
        C_LONG.withName("Dr1"),
        C_LONG.withName("Dr2"),
        C_LONG.withName("Dr3"),
        C_LONG.withName("Dr6"),
        C_LONG.withName("Dr7"),
        MemoryLayout.ofStruct(
            C_LONG.withName("ControlWord"),
            C_LONG.withName("StatusWord"),
            C_LONG.withName("TagWord"),
            C_LONG.withName("ErrorOffset"),
            C_LONG.withName("ErrorSelector"),
            C_LONG.withName("DataOffset"),
            C_LONG.withName("DataSelector"),
            MemoryLayout.ofSequence(80, C_CHAR).withName("RegisterArea"),
            C_LONG.withName("Cr0NpxState")
        ).withName("FloatSave"),
        C_LONG.withName("SegGs"),
        C_LONG.withName("SegFs"),
        C_LONG.withName("SegEs"),
        C_LONG.withName("SegDs"),
        C_LONG.withName("Edi"),
        C_LONG.withName("Esi"),
        C_LONG.withName("Ebx"),
        C_LONG.withName("Edx"),
        C_LONG.withName("Ecx"),
        C_LONG.withName("Eax"),
        C_LONG.withName("Ebp"),
        C_LONG.withName("Eip"),
        C_LONG.withName("SegCs"),
        C_LONG.withName("EFlags"),
        C_LONG.withName("Esp"),
        C_LONG.withName("SegSs"),
        MemoryLayout.ofSequence(512, C_CHAR).withName("ExtendedRegisters")
    ).withName("_WOW64_CONTEXT");
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$struct$LAYOUT() { return _WOW64_CONTEXT$struct$LAYOUT_; }

    static final MemoryLayout _WOW64_CONTEXT$ContextFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$ContextFlags$LAYOUT() { return _WOW64_CONTEXT$ContextFlags$LAYOUT_; }

    static final VarHandle _WOW64_CONTEXT$ContextFlags$VH_ = _WOW64_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ContextFlags"));
    static final java.lang.invoke.VarHandle _WOW64_CONTEXT$ContextFlags$VH() { return _WOW64_CONTEXT$ContextFlags$VH_; }

    static final MemoryLayout _WOW64_CONTEXT$Dr0$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$Dr0$LAYOUT() { return _WOW64_CONTEXT$Dr0$LAYOUT_; }

    static final VarHandle _WOW64_CONTEXT$Dr0$VH_ = _WOW64_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Dr0"));
    static final java.lang.invoke.VarHandle _WOW64_CONTEXT$Dr0$VH() { return _WOW64_CONTEXT$Dr0$VH_; }

    static final MemoryLayout _WOW64_CONTEXT$Dr1$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$Dr1$LAYOUT() { return _WOW64_CONTEXT$Dr1$LAYOUT_; }

    static final VarHandle _WOW64_CONTEXT$Dr1$VH_ = _WOW64_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Dr1"));
    static final java.lang.invoke.VarHandle _WOW64_CONTEXT$Dr1$VH() { return _WOW64_CONTEXT$Dr1$VH_; }

    static final MemoryLayout _WOW64_CONTEXT$Dr2$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$Dr2$LAYOUT() { return _WOW64_CONTEXT$Dr2$LAYOUT_; }

    static final VarHandle _WOW64_CONTEXT$Dr2$VH_ = _WOW64_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Dr2"));
    static final java.lang.invoke.VarHandle _WOW64_CONTEXT$Dr2$VH() { return _WOW64_CONTEXT$Dr2$VH_; }

    static final MemoryLayout _WOW64_CONTEXT$Dr3$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$Dr3$LAYOUT() { return _WOW64_CONTEXT$Dr3$LAYOUT_; }

    static final VarHandle _WOW64_CONTEXT$Dr3$VH_ = _WOW64_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Dr3"));
    static final java.lang.invoke.VarHandle _WOW64_CONTEXT$Dr3$VH() { return _WOW64_CONTEXT$Dr3$VH_; }

    static final MemoryLayout _WOW64_CONTEXT$Dr6$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$Dr6$LAYOUT() { return _WOW64_CONTEXT$Dr6$LAYOUT_; }

    static final VarHandle _WOW64_CONTEXT$Dr6$VH_ = _WOW64_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Dr6"));
    static final java.lang.invoke.VarHandle _WOW64_CONTEXT$Dr6$VH() { return _WOW64_CONTEXT$Dr6$VH_; }

    static final MemoryLayout _WOW64_CONTEXT$Dr7$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$Dr7$LAYOUT() { return _WOW64_CONTEXT$Dr7$LAYOUT_; }

    static final VarHandle _WOW64_CONTEXT$Dr7$VH_ = _WOW64_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Dr7"));
    static final java.lang.invoke.VarHandle _WOW64_CONTEXT$Dr7$VH() { return _WOW64_CONTEXT$Dr7$VH_; }

    static final MemoryLayout _WOW64_CONTEXT$SegGs$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$SegGs$LAYOUT() { return _WOW64_CONTEXT$SegGs$LAYOUT_; }

    static final VarHandle _WOW64_CONTEXT$SegGs$VH_ = _WOW64_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SegGs"));
    static final java.lang.invoke.VarHandle _WOW64_CONTEXT$SegGs$VH() { return _WOW64_CONTEXT$SegGs$VH_; }

    static final MemoryLayout _WOW64_CONTEXT$SegFs$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$SegFs$LAYOUT() { return _WOW64_CONTEXT$SegFs$LAYOUT_; }

    static final VarHandle _WOW64_CONTEXT$SegFs$VH_ = _WOW64_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SegFs"));
    static final java.lang.invoke.VarHandle _WOW64_CONTEXT$SegFs$VH() { return _WOW64_CONTEXT$SegFs$VH_; }

    static final MemoryLayout _WOW64_CONTEXT$SegEs$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$SegEs$LAYOUT() { return _WOW64_CONTEXT$SegEs$LAYOUT_; }

    static final VarHandle _WOW64_CONTEXT$SegEs$VH_ = _WOW64_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SegEs"));
    static final java.lang.invoke.VarHandle _WOW64_CONTEXT$SegEs$VH() { return _WOW64_CONTEXT$SegEs$VH_; }

    static final MemoryLayout _WOW64_CONTEXT$SegDs$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$SegDs$LAYOUT() { return _WOW64_CONTEXT$SegDs$LAYOUT_; }

    static final VarHandle _WOW64_CONTEXT$SegDs$VH_ = _WOW64_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SegDs"));
    static final java.lang.invoke.VarHandle _WOW64_CONTEXT$SegDs$VH() { return _WOW64_CONTEXT$SegDs$VH_; }

    static final MemoryLayout _WOW64_CONTEXT$Edi$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$Edi$LAYOUT() { return _WOW64_CONTEXT$Edi$LAYOUT_; }

    static final VarHandle _WOW64_CONTEXT$Edi$VH_ = _WOW64_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Edi"));
    static final java.lang.invoke.VarHandle _WOW64_CONTEXT$Edi$VH() { return _WOW64_CONTEXT$Edi$VH_; }

    static final MemoryLayout _WOW64_CONTEXT$Esi$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$Esi$LAYOUT() { return _WOW64_CONTEXT$Esi$LAYOUT_; }

    static final VarHandle _WOW64_CONTEXT$Esi$VH_ = _WOW64_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Esi"));
    static final java.lang.invoke.VarHandle _WOW64_CONTEXT$Esi$VH() { return _WOW64_CONTEXT$Esi$VH_; }

    static final MemoryLayout _WOW64_CONTEXT$Ebx$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$Ebx$LAYOUT() { return _WOW64_CONTEXT$Ebx$LAYOUT_; }

    static final VarHandle _WOW64_CONTEXT$Ebx$VH_ = _WOW64_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Ebx"));
    static final java.lang.invoke.VarHandle _WOW64_CONTEXT$Ebx$VH() { return _WOW64_CONTEXT$Ebx$VH_; }

    static final MemoryLayout _WOW64_CONTEXT$Edx$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$Edx$LAYOUT() { return _WOW64_CONTEXT$Edx$LAYOUT_; }

    static final VarHandle _WOW64_CONTEXT$Edx$VH_ = _WOW64_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Edx"));
    static final java.lang.invoke.VarHandle _WOW64_CONTEXT$Edx$VH() { return _WOW64_CONTEXT$Edx$VH_; }

    static final MemoryLayout _WOW64_CONTEXT$Ecx$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$Ecx$LAYOUT() { return _WOW64_CONTEXT$Ecx$LAYOUT_; }

    static final VarHandle _WOW64_CONTEXT$Ecx$VH_ = _WOW64_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Ecx"));
    static final java.lang.invoke.VarHandle _WOW64_CONTEXT$Ecx$VH() { return _WOW64_CONTEXT$Ecx$VH_; }

    static final MemoryLayout _WOW64_CONTEXT$Eax$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$Eax$LAYOUT() { return _WOW64_CONTEXT$Eax$LAYOUT_; }

    static final VarHandle _WOW64_CONTEXT$Eax$VH_ = _WOW64_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Eax"));
    static final java.lang.invoke.VarHandle _WOW64_CONTEXT$Eax$VH() { return _WOW64_CONTEXT$Eax$VH_; }

    static final MemoryLayout _WOW64_CONTEXT$Ebp$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$Ebp$LAYOUT() { return _WOW64_CONTEXT$Ebp$LAYOUT_; }

    static final VarHandle _WOW64_CONTEXT$Ebp$VH_ = _WOW64_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Ebp"));
    static final java.lang.invoke.VarHandle _WOW64_CONTEXT$Ebp$VH() { return _WOW64_CONTEXT$Ebp$VH_; }

    static final MemoryLayout _WOW64_CONTEXT$Eip$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$Eip$LAYOUT() { return _WOW64_CONTEXT$Eip$LAYOUT_; }

    static final VarHandle _WOW64_CONTEXT$Eip$VH_ = _WOW64_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Eip"));
    static final java.lang.invoke.VarHandle _WOW64_CONTEXT$Eip$VH() { return _WOW64_CONTEXT$Eip$VH_; }

    static final MemoryLayout _WOW64_CONTEXT$SegCs$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _WOW64_CONTEXT$SegCs$LAYOUT() { return _WOW64_CONTEXT$SegCs$LAYOUT_; }

    static final VarHandle _WOW64_CONTEXT$SegCs$VH_ = _WOW64_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SegCs"));
    static final java.lang.invoke.VarHandle _WOW64_CONTEXT$SegCs$VH() { return _WOW64_CONTEXT$SegCs$VH_; }

}

