// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$19 extends cfapi_h$18 {

    /* package-private */ cfapi_h$19() {}
    public static @C("MMRESULT") int mixerGetLineInfoW (@C("HMIXEROBJ") Addressable hmxobj, @C("LPMIXERLINEW") Addressable pmxl, @C("DWORD") int fdwInfo) {
        try {
            return (int)cfapi_h$constants$44.mixerGetLineInfoW$MH().invokeExact(hmxobj.address(), pmxl.address(), fdwInfo);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle mixerGetID$MH() {
        return cfapi_h$constants$44.mixerGetID$MH();
    }
    public static @C("MMRESULT") int mixerGetID (@C("HMIXEROBJ") Addressable hmxobj, @C("UINT*") Addressable puMxId, @C("DWORD") int fdwId) {
        try {
            return (int)cfapi_h$constants$44.mixerGetID$MH().invokeExact(hmxobj.address(), puMxId.address(), fdwId);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle mixerGetLineControlsA$MH() {
        return cfapi_h$constants$44.mixerGetLineControlsA$MH();
    }
    public static @C("MMRESULT") int mixerGetLineControlsA (@C("HMIXEROBJ") Addressable hmxobj, @C("LPMIXERLINECONTROLSA") Addressable pmxlc, @C("DWORD") int fdwControls) {
        try {
            return (int)cfapi_h$constants$44.mixerGetLineControlsA$MH().invokeExact(hmxobj.address(), pmxlc.address(), fdwControls);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle mixerGetLineControlsW$MH() {
        return cfapi_h$constants$44.mixerGetLineControlsW$MH();
    }
    public static @C("MMRESULT") int mixerGetLineControlsW (@C("HMIXEROBJ") Addressable hmxobj, @C("LPMIXERLINECONTROLSW") Addressable pmxlc, @C("DWORD") int fdwControls) {
        try {
            return (int)cfapi_h$constants$44.mixerGetLineControlsW$MH().invokeExact(hmxobj.address(), pmxlc.address(), fdwControls);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle mixerGetControlDetailsA$MH() {
        return cfapi_h$constants$44.mixerGetControlDetailsA$MH();
    }
    public static @C("MMRESULT") int mixerGetControlDetailsA (@C("HMIXEROBJ") Addressable hmxobj, @C("LPMIXERCONTROLDETAILS") Addressable pmxcd, @C("DWORD") int fdwDetails) {
        try {
            return (int)cfapi_h$constants$44.mixerGetControlDetailsA$MH().invokeExact(hmxobj.address(), pmxcd.address(), fdwDetails);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle mixerGetControlDetailsW$MH() {
        return cfapi_h$constants$44.mixerGetControlDetailsW$MH();
    }
    public static @C("MMRESULT") int mixerGetControlDetailsW (@C("HMIXEROBJ") Addressable hmxobj, @C("LPMIXERCONTROLDETAILS") Addressable pmxcd, @C("DWORD") int fdwDetails) {
        try {
            return (int)cfapi_h$constants$44.mixerGetControlDetailsW$MH().invokeExact(hmxobj.address(), pmxcd.address(), fdwDetails);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle mixerSetControlDetails$MH() {
        return cfapi_h$constants$44.mixerSetControlDetails$MH();
    }
    public static @C("MMRESULT") int mixerSetControlDetails (@C("HMIXEROBJ") Addressable hmxobj, @C("LPMIXERCONTROLDETAILS") Addressable pmxcd, @C("DWORD") int fdwDetails) {
        try {
            return (int)cfapi_h$constants$44.mixerSetControlDetails$MH().invokeExact(hmxobj.address(), pmxcd.address(), fdwDetails);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle timeGetSystemTime$MH() {
        return cfapi_h$constants$44.timeGetSystemTime$MH();
    }
    public static @C("MMRESULT") int timeGetSystemTime (@C("LPMMTIME") Addressable pmmt, @C("UINT") int cbmmt) {
        try {
            return (int)cfapi_h$constants$44.timeGetSystemTime$MH().invokeExact(pmmt.address(), cbmmt);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle timeGetTime$MH() {
        return cfapi_h$constants$44.timeGetTime$MH();
    }
    public static @C("DWORD") int timeGetTime () {
        try {
            return (int)cfapi_h$constants$44.timeGetTime$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle timeGetDevCaps$MH() {
        return cfapi_h$constants$44.timeGetDevCaps$MH();
    }
    public static @C("MMRESULT") int timeGetDevCaps (@C("LPTIMECAPS") Addressable ptc, @C("UINT") int cbtc) {
        try {
            return (int)cfapi_h$constants$44.timeGetDevCaps$MH().invokeExact(ptc.address(), cbtc);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle timeBeginPeriod$MH() {
        return cfapi_h$constants$44.timeBeginPeriod$MH();
    }
    public static @C("MMRESULT") int timeBeginPeriod (@C("UINT") int uPeriod) {
        try {
            return (int)cfapi_h$constants$44.timeBeginPeriod$MH().invokeExact(uPeriod);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle timeEndPeriod$MH() {
        return cfapi_h$constants$44.timeEndPeriod$MH();
    }
    public static @C("MMRESULT") int timeEndPeriod (@C("UINT") int uPeriod) {
        try {
            return (int)cfapi_h$constants$44.timeEndPeriod$MH().invokeExact(uPeriod);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle joyGetPosEx$MH() {
        return cfapi_h$constants$45.joyGetPosEx$MH();
    }
    public static @C("MMRESULT") int joyGetPosEx (@C("UINT") int uJoyID, @C("LPJOYINFOEX") Addressable pji) {
        try {
            return (int)cfapi_h$constants$45.joyGetPosEx$MH().invokeExact(uJoyID, pji.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle joyGetNumDevs$MH() {
        return cfapi_h$constants$45.joyGetNumDevs$MH();
    }
    public static @C("UINT") int joyGetNumDevs () {
        try {
            return (int)cfapi_h$constants$45.joyGetNumDevs$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle joyGetDevCapsA$MH() {
        return cfapi_h$constants$45.joyGetDevCapsA$MH();
    }
    public static @C("MMRESULT") int joyGetDevCapsA (@C("UINT_PTR") long uJoyID, @C("LPJOYCAPSA") Addressable pjc, @C("UINT") int cbjc) {
        try {
            return (int)cfapi_h$constants$45.joyGetDevCapsA$MH().invokeExact(uJoyID, pjc.address(), cbjc);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle joyGetDevCapsW$MH() {
        return cfapi_h$constants$45.joyGetDevCapsW$MH();
    }
    public static @C("MMRESULT") int joyGetDevCapsW (@C("UINT_PTR") long uJoyID, @C("LPJOYCAPSW") Addressable pjc, @C("UINT") int cbjc) {
        try {
            return (int)cfapi_h$constants$45.joyGetDevCapsW$MH().invokeExact(uJoyID, pjc.address(), cbjc);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle joyGetPos$MH() {
        return cfapi_h$constants$45.joyGetPos$MH();
    }
    public static @C("MMRESULT") int joyGetPos (@C("UINT") int uJoyID, @C("LPJOYINFO") Addressable pji) {
        try {
            return (int)cfapi_h$constants$45.joyGetPos$MH().invokeExact(uJoyID, pji.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle joyGetThreshold$MH() {
        return cfapi_h$constants$45.joyGetThreshold$MH();
    }
    public static @C("MMRESULT") int joyGetThreshold (@C("UINT") int uJoyID, @C("LPUINT") Addressable puThreshold) {
        try {
            return (int)cfapi_h$constants$45.joyGetThreshold$MH().invokeExact(uJoyID, puThreshold.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle joyReleaseCapture$MH() {
        return cfapi_h$constants$45.joyReleaseCapture$MH();
    }
    public static @C("MMRESULT") int joyReleaseCapture (@C("UINT") int uJoyID) {
        try {
            return (int)cfapi_h$constants$45.joyReleaseCapture$MH().invokeExact(uJoyID);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle joySetCapture$MH() {
        return cfapi_h$constants$45.joySetCapture$MH();
    }
    public static @C("MMRESULT") int joySetCapture (@C("HWND") Addressable hwnd, @C("UINT") int uJoyID, @C("UINT") int uPeriod, @C("BOOL") int fChanged) {
        try {
            return (int)cfapi_h$constants$45.joySetCapture$MH().invokeExact(hwnd.address(), uJoyID, uPeriod, fChanged);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle joySetThreshold$MH() {
        return cfapi_h$constants$45.joySetThreshold$MH();
    }
    public static @C("MMRESULT") int joySetThreshold (@C("UINT") int uJoyID, @C("UINT") int uThreshold) {
        try {
            return (int)cfapi_h$constants$45.joySetThreshold$MH().invokeExact(uJoyID, uThreshold);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle joyConfigChanged$MH() {
        return cfapi_h$constants$45.joyConfigChanged$MH();
    }
    public static @C("MMRESULT") int joyConfigChanged (@C("DWORD") int dwFlags) {
        try {
            return (int)cfapi_h$constants$45.joyConfigChanged$MH().invokeExact(dwFlags);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle Netbios$MH() {
        return cfapi_h$constants$45.Netbios$MH();
    }
    public static @C("UCHAR") byte Netbios (@C("PNCB") Addressable pncb) {
        try {
            return (byte)cfapi_h$constants$45.Netbios$MH().invokeExact(pncb.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("long") ValueLayout RPC_STATUS = C_LONG;
    public static  MethodHandle RpcBindingCopy$MH() {
        return cfapi_h$constants$45.RpcBindingCopy$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingCopy (@C("RPC_BINDING_HANDLE") Addressable SourceBinding, @C("RPC_BINDING_HANDLE*") Addressable DestinationBinding) {
        try {
            return (int)cfapi_h$constants$45.RpcBindingCopy$MH().invokeExact(SourceBinding.address(), DestinationBinding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingFree$MH() {
        return cfapi_h$constants$45.RpcBindingFree$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingFree (@C("RPC_BINDING_HANDLE*") Addressable Binding) {
        try {
            return (int)cfapi_h$constants$45.RpcBindingFree$MH().invokeExact(Binding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingSetOption$MH() {
        return cfapi_h$constants$45.RpcBindingSetOption$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingSetOption (@C("RPC_BINDING_HANDLE") Addressable hBinding, @C("unsigned long") int option, @C("ULONG_PTR") long optionValue) {
        try {
            return (int)cfapi_h$constants$45.RpcBindingSetOption$MH().invokeExact(hBinding.address(), option, optionValue);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingInqOption$MH() {
        return cfapi_h$constants$45.RpcBindingInqOption$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingInqOption (@C("RPC_BINDING_HANDLE") Addressable hBinding, @C("unsigned long") int option, @C("ULONG_PTR*") Addressable pOptionValue) {
        try {
            return (int)cfapi_h$constants$45.RpcBindingInqOption$MH().invokeExact(hBinding.address(), option, pOptionValue.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingFromStringBindingA$MH() {
        return cfapi_h$constants$45.RpcBindingFromStringBindingA$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingFromStringBindingA (@C("RPC_CSTR") Addressable StringBinding, @C("RPC_BINDING_HANDLE*") Addressable Binding) {
        try {
            return (int)cfapi_h$constants$45.RpcBindingFromStringBindingA$MH().invokeExact(StringBinding.address(), Binding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingFromStringBindingW$MH() {
        return cfapi_h$constants$45.RpcBindingFromStringBindingW$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingFromStringBindingW (@C("RPC_WSTR") Addressable StringBinding, @C("RPC_BINDING_HANDLE*") Addressable Binding) {
        try {
            return (int)cfapi_h$constants$45.RpcBindingFromStringBindingW$MH().invokeExact(StringBinding.address(), Binding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcSsGetContextBinding$MH() {
        return cfapi_h$constants$45.RpcSsGetContextBinding$MH();
    }
    public static @C("RPC_STATUS") int RpcSsGetContextBinding (@C("void*") Addressable ContextHandle, @C("RPC_BINDING_HANDLE*") Addressable Binding) {
        try {
            return (int)cfapi_h$constants$45.RpcSsGetContextBinding$MH().invokeExact(ContextHandle.address(), Binding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingInqObject$MH() {
        return cfapi_h$constants$45.RpcBindingInqObject$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingInqObject (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("UUID*") Addressable ObjectUuid) {
        try {
            return (int)cfapi_h$constants$45.RpcBindingInqObject$MH().invokeExact(Binding.address(), ObjectUuid.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingReset$MH() {
        return cfapi_h$constants$45.RpcBindingReset$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingReset (@C("RPC_BINDING_HANDLE") Addressable Binding) {
        try {
            return (int)cfapi_h$constants$45.RpcBindingReset$MH().invokeExact(Binding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingSetObject$MH() {
        return cfapi_h$constants$45.RpcBindingSetObject$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingSetObject (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("UUID*") Addressable ObjectUuid) {
        try {
            return (int)cfapi_h$constants$45.RpcBindingSetObject$MH().invokeExact(Binding.address(), ObjectUuid.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcMgmtInqDefaultProtectLevel$MH() {
        return cfapi_h$constants$45.RpcMgmtInqDefaultProtectLevel$MH();
    }
    public static @C("RPC_STATUS") int RpcMgmtInqDefaultProtectLevel (@C("unsigned long") int AuthnSvc, @C("unsigned long*") Addressable AuthnLevel) {
        try {
            return (int)cfapi_h$constants$45.RpcMgmtInqDefaultProtectLevel$MH().invokeExact(AuthnSvc, AuthnLevel.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingToStringBindingA$MH() {
        return cfapi_h$constants$45.RpcBindingToStringBindingA$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingToStringBindingA (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("RPC_CSTR*") Addressable StringBinding) {
        try {
            return (int)cfapi_h$constants$45.RpcBindingToStringBindingA$MH().invokeExact(Binding.address(), StringBinding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingToStringBindingW$MH() {
        return cfapi_h$constants$45.RpcBindingToStringBindingW$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingToStringBindingW (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("RPC_WSTR*") Addressable StringBinding) {
        try {
            return (int)cfapi_h$constants$45.RpcBindingToStringBindingW$MH().invokeExact(Binding.address(), StringBinding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingVectorFree$MH() {
        return cfapi_h$constants$45.RpcBindingVectorFree$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingVectorFree (@C("RPC_BINDING_VECTOR**") Addressable BindingVector) {
        try {
            return (int)cfapi_h$constants$45.RpcBindingVectorFree$MH().invokeExact(BindingVector.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcStringBindingComposeA$MH() {
        return cfapi_h$constants$45.RpcStringBindingComposeA$MH();
    }
    public static @C("RPC_STATUS") int RpcStringBindingComposeA (@C("RPC_CSTR") Addressable ObjUuid, @C("RPC_CSTR") Addressable ProtSeq, @C("RPC_CSTR") Addressable NetworkAddr, @C("RPC_CSTR") Addressable Endpoint, @C("RPC_CSTR") Addressable Options, @C("RPC_CSTR*") Addressable StringBinding) {
        try {
            return (int)cfapi_h$constants$45.RpcStringBindingComposeA$MH().invokeExact(ObjUuid.address(), ProtSeq.address(), NetworkAddr.address(), Endpoint.address(), Options.address(), StringBinding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcStringBindingComposeW$MH() {
        return cfapi_h$constants$45.RpcStringBindingComposeW$MH();
    }
    public static @C("RPC_STATUS") int RpcStringBindingComposeW (@C("RPC_WSTR") Addressable ObjUuid, @C("RPC_WSTR") Addressable ProtSeq, @C("RPC_WSTR") Addressable NetworkAddr, @C("RPC_WSTR") Addressable Endpoint, @C("RPC_WSTR") Addressable Options, @C("RPC_WSTR*") Addressable StringBinding) {
        try {
            return (int)cfapi_h$constants$45.RpcStringBindingComposeW$MH().invokeExact(ObjUuid.address(), ProtSeq.address(), NetworkAddr.address(), Endpoint.address(), Options.address(), StringBinding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcStringBindingParseA$MH() {
        return cfapi_h$constants$45.RpcStringBindingParseA$MH();
    }
    public static @C("RPC_STATUS") int RpcStringBindingParseA (@C("RPC_CSTR") Addressable StringBinding, @C("RPC_CSTR*") Addressable ObjUuid, @C("RPC_CSTR*") Addressable Protseq, @C("RPC_CSTR*") Addressable NetworkAddr, @C("RPC_CSTR*") Addressable Endpoint, @C("RPC_CSTR*") Addressable NetworkOptions) {
        try {
            return (int)cfapi_h$constants$45.RpcStringBindingParseA$MH().invokeExact(StringBinding.address(), ObjUuid.address(), Protseq.address(), NetworkAddr.address(), Endpoint.address(), NetworkOptions.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcStringBindingParseW$MH() {
        return cfapi_h$constants$45.RpcStringBindingParseW$MH();
    }
    public static @C("RPC_STATUS") int RpcStringBindingParseW (@C("RPC_WSTR") Addressable StringBinding, @C("RPC_WSTR*") Addressable ObjUuid, @C("RPC_WSTR*") Addressable Protseq, @C("RPC_WSTR*") Addressable NetworkAddr, @C("RPC_WSTR*") Addressable Endpoint, @C("RPC_WSTR*") Addressable NetworkOptions) {
        try {
            return (int)cfapi_h$constants$45.RpcStringBindingParseW$MH().invokeExact(StringBinding.address(), ObjUuid.address(), Protseq.address(), NetworkAddr.address(), Endpoint.address(), NetworkOptions.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcStringFreeA$MH() {
        return cfapi_h$constants$45.RpcStringFreeA$MH();
    }
    public static @C("RPC_STATUS") int RpcStringFreeA (@C("RPC_CSTR*") Addressable String) {
        try {
            return (int)cfapi_h$constants$45.RpcStringFreeA$MH().invokeExact(String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcStringFreeW$MH() {
        return cfapi_h$constants$45.RpcStringFreeW$MH();
    }
    public static @C("RPC_STATUS") int RpcStringFreeW (@C("RPC_WSTR*") Addressable String) {
        try {
            return (int)cfapi_h$constants$45.RpcStringFreeW$MH().invokeExact(String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcIfInqId$MH() {
        return cfapi_h$constants$45.RpcIfInqId$MH();
    }
    public static @C("RPC_STATUS") int RpcIfInqId (@C("RPC_IF_HANDLE") Addressable RpcIfHandle, @C("RPC_IF_ID*") Addressable RpcIfId) {
        try {
            return (int)cfapi_h$constants$45.RpcIfInqId$MH().invokeExact(RpcIfHandle.address(), RpcIfId.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNetworkIsProtseqValidA$MH() {
        return cfapi_h$constants$45.RpcNetworkIsProtseqValidA$MH();
    }
    public static @C("RPC_STATUS") int RpcNetworkIsProtseqValidA (@C("RPC_CSTR") Addressable Protseq) {
        try {
            return (int)cfapi_h$constants$45.RpcNetworkIsProtseqValidA$MH().invokeExact(Protseq.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNetworkIsProtseqValidW$MH() {
        return cfapi_h$constants$45.RpcNetworkIsProtseqValidW$MH();
    }
    public static @C("RPC_STATUS") int RpcNetworkIsProtseqValidW (@C("RPC_WSTR") Addressable Protseq) {
        try {
            return (int)cfapi_h$constants$45.RpcNetworkIsProtseqValidW$MH().invokeExact(Protseq.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcMgmtInqComTimeout$MH() {
        return cfapi_h$constants$45.RpcMgmtInqComTimeout$MH();
    }
    public static @C("RPC_STATUS") int RpcMgmtInqComTimeout (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("unsigned int*") Addressable Timeout) {
        try {
            return (int)cfapi_h$constants$45.RpcMgmtInqComTimeout$MH().invokeExact(Binding.address(), Timeout.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcMgmtSetComTimeout$MH() {
        return cfapi_h$constants$45.RpcMgmtSetComTimeout$MH();
    }
    public static @C("RPC_STATUS") int RpcMgmtSetComTimeout (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("unsigned int") int Timeout) {
        try {
            return (int)cfapi_h$constants$45.RpcMgmtSetComTimeout$MH().invokeExact(Binding.address(), Timeout);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcMgmtSetCancelTimeout$MH() {
        return cfapi_h$constants$45.RpcMgmtSetCancelTimeout$MH();
    }
    public static @C("RPC_STATUS") int RpcMgmtSetCancelTimeout (@C("long") int Timeout) {
        try {
            return (int)cfapi_h$constants$45.RpcMgmtSetCancelTimeout$MH().invokeExact(Timeout);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNetworkInqProtseqsA$MH() {
        return cfapi_h$constants$45.RpcNetworkInqProtseqsA$MH();
    }
    public static @C("RPC_STATUS") int RpcNetworkInqProtseqsA (@C("RPC_PROTSEQ_VECTORA**") Addressable ProtseqVector) {
        try {
            return (int)cfapi_h$constants$45.RpcNetworkInqProtseqsA$MH().invokeExact(ProtseqVector.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNetworkInqProtseqsW$MH() {
        return cfapi_h$constants$45.RpcNetworkInqProtseqsW$MH();
    }
    public static @C("RPC_STATUS") int RpcNetworkInqProtseqsW (@C("RPC_PROTSEQ_VECTORW**") Addressable ProtseqVector) {
        try {
            return (int)cfapi_h$constants$45.RpcNetworkInqProtseqsW$MH().invokeExact(ProtseqVector.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcObjectInqType$MH() {
        return cfapi_h$constants$45.RpcObjectInqType$MH();
    }
    public static @C("RPC_STATUS") int RpcObjectInqType (@C("UUID*") Addressable ObjUuid, @C("UUID*") Addressable TypeUuid) {
        try {
            return (int)cfapi_h$constants$45.RpcObjectInqType$MH().invokeExact(ObjUuid.address(), TypeUuid.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcObjectSetInqFn$MH() {
        return cfapi_h$constants$45.RpcObjectSetInqFn$MH();
    }
    public static @C("RPC_STATUS") int RpcObjectSetInqFn (@C("void(*)(UUID*,UUID*,RPC_STATUS*)") Addressable InquiryFn) {
        try {
            return (int)cfapi_h$constants$45.RpcObjectSetInqFn$MH().invokeExact(InquiryFn.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcObjectSetType$MH() {
        return cfapi_h$constants$45.RpcObjectSetType$MH();
    }
    public static @C("RPC_STATUS") int RpcObjectSetType (@C("UUID*") Addressable ObjUuid, @C("UUID*") Addressable TypeUuid) {
        try {
            return (int)cfapi_h$constants$45.RpcObjectSetType$MH().invokeExact(ObjUuid.address(), TypeUuid.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcProtseqVectorFreeA$MH() {
        return cfapi_h$constants$45.RpcProtseqVectorFreeA$MH();
    }
    public static @C("RPC_STATUS") int RpcProtseqVectorFreeA (@C("RPC_PROTSEQ_VECTORA**") Addressable ProtseqVector) {
        try {
            return (int)cfapi_h$constants$45.RpcProtseqVectorFreeA$MH().invokeExact(ProtseqVector.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcProtseqVectorFreeW$MH() {
        return cfapi_h$constants$45.RpcProtseqVectorFreeW$MH();
    }
    public static @C("RPC_STATUS") int RpcProtseqVectorFreeW (@C("RPC_PROTSEQ_VECTORW**") Addressable ProtseqVector) {
        try {
            return (int)cfapi_h$constants$45.RpcProtseqVectorFreeW$MH().invokeExact(ProtseqVector.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerInqBindings$MH() {
        return cfapi_h$constants$45.RpcServerInqBindings$MH();
    }
    public static @C("RPC_STATUS") int RpcServerInqBindings (@C("RPC_BINDING_VECTOR**") Addressable BindingVector) {
        try {
            return (int)cfapi_h$constants$45.RpcServerInqBindings$MH().invokeExact(BindingVector.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerInqBindingsEx$MH() {
        return cfapi_h$constants$45.RpcServerInqBindingsEx$MH();
    }
    public static @C("RPC_STATUS") int RpcServerInqBindingsEx (@C("void*") Addressable SecurityDescriptor, @C("RPC_BINDING_VECTOR**") Addressable BindingVector) {
        try {
            return (int)cfapi_h$constants$45.RpcServerInqBindingsEx$MH().invokeExact(SecurityDescriptor.address(), BindingVector.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerInqIf$MH() {
        return cfapi_h$constants$45.RpcServerInqIf$MH();
    }
    public static @C("RPC_STATUS") int RpcServerInqIf (@C("RPC_IF_HANDLE") Addressable IfSpec, @C("UUID*") Addressable MgrTypeUuid, @C("void**") Addressable MgrEpv) {
        try {
            return (int)cfapi_h$constants$45.RpcServerInqIf$MH().invokeExact(IfSpec.address(), MgrTypeUuid.address(), MgrEpv.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerListen$MH() {
        return cfapi_h$constants$45.RpcServerListen$MH();
    }
    public static @C("RPC_STATUS") int RpcServerListen (@C("unsigned int") int MinimumCallThreads, @C("unsigned int") int MaxCalls, @C("unsigned int") int DontWait) {
        try {
            return (int)cfapi_h$constants$45.RpcServerListen$MH().invokeExact(MinimumCallThreads, MaxCalls, DontWait);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerRegisterIf$MH() {
        return cfapi_h$constants$45.RpcServerRegisterIf$MH();
    }
    public static @C("RPC_STATUS") int RpcServerRegisterIf (@C("RPC_IF_HANDLE") Addressable IfSpec, @C("UUID*") Addressable MgrTypeUuid, @C("void*") Addressable MgrEpv) {
        try {
            return (int)cfapi_h$constants$45.RpcServerRegisterIf$MH().invokeExact(IfSpec.address(), MgrTypeUuid.address(), MgrEpv.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerRegisterIfEx$MH() {
        return cfapi_h$constants$45.RpcServerRegisterIfEx$MH();
    }
    public static @C("RPC_STATUS") int RpcServerRegisterIfEx (@C("RPC_IF_HANDLE") Addressable IfSpec, @C("UUID*") Addressable MgrTypeUuid, @C("void*") Addressable MgrEpv, @C("unsigned int") int Flags, @C("unsigned int") int MaxCalls, @C("RPC_STATUS(*)(RPC_IF_HANDLE,void*)") Addressable IfCallback) {
        try {
            return (int)cfapi_h$constants$45.RpcServerRegisterIfEx$MH().invokeExact(IfSpec.address(), MgrTypeUuid.address(), MgrEpv.address(), Flags, MaxCalls, IfCallback.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerRegisterIf2$MH() {
        return cfapi_h$constants$45.RpcServerRegisterIf2$MH();
    }
    public static @C("RPC_STATUS") int RpcServerRegisterIf2 (@C("RPC_IF_HANDLE") Addressable IfSpec, @C("UUID*") Addressable MgrTypeUuid, @C("void*") Addressable MgrEpv, @C("unsigned int") int Flags, @C("unsigned int") int MaxCalls, @C("unsigned int") int MaxRpcSize, @C("RPC_STATUS(*)(RPC_IF_HANDLE,void*)") Addressable IfCallbackFn) {
        try {
            return (int)cfapi_h$constants$45.RpcServerRegisterIf2$MH().invokeExact(IfSpec.address(), MgrTypeUuid.address(), MgrEpv.address(), Flags, MaxCalls, MaxRpcSize, IfCallbackFn.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerRegisterIf3$MH() {
        return cfapi_h$constants$45.RpcServerRegisterIf3$MH();
    }
    public static @C("RPC_STATUS") int RpcServerRegisterIf3 (@C("RPC_IF_HANDLE") Addressable IfSpec, @C("UUID*") Addressable MgrTypeUuid, @C("void*") Addressable MgrEpv, @C("unsigned int") int Flags, @C("unsigned int") int MaxCalls, @C("unsigned int") int MaxRpcSize, @C("RPC_STATUS(*)(RPC_IF_HANDLE,void*)") Addressable IfCallback, @C("void*") Addressable SecurityDescriptor) {
        try {
            return (int)cfapi_h$constants$45.RpcServerRegisterIf3$MH().invokeExact(IfSpec.address(), MgrTypeUuid.address(), MgrEpv.address(), Flags, MaxCalls, MaxRpcSize, IfCallback.address(), SecurityDescriptor.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerUnregisterIf$MH() {
        return cfapi_h$constants$45.RpcServerUnregisterIf$MH();
    }
    public static @C("RPC_STATUS") int RpcServerUnregisterIf (@C("RPC_IF_HANDLE") Addressable IfSpec, @C("UUID*") Addressable MgrTypeUuid, @C("unsigned int") int WaitForCallsToComplete) {
        try {
            return (int)cfapi_h$constants$45.RpcServerUnregisterIf$MH().invokeExact(IfSpec.address(), MgrTypeUuid.address(), WaitForCallsToComplete);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerUnregisterIfEx$MH() {
        return cfapi_h$constants$45.RpcServerUnregisterIfEx$MH();
    }
    public static @C("RPC_STATUS") int RpcServerUnregisterIfEx (@C("RPC_IF_HANDLE") Addressable IfSpec, @C("UUID*") Addressable MgrTypeUuid, @C("int") int RundownContextHandles) {
        try {
            return (int)cfapi_h$constants$45.RpcServerUnregisterIfEx$MH().invokeExact(IfSpec.address(), MgrTypeUuid.address(), RundownContextHandles);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerUseAllProtseqs$MH() {
        return cfapi_h$constants$45.RpcServerUseAllProtseqs$MH();
    }
    public static @C("RPC_STATUS") int RpcServerUseAllProtseqs (@C("unsigned int") int MaxCalls, @C("void*") Addressable SecurityDescriptor) {
        try {
            return (int)cfapi_h$constants$45.RpcServerUseAllProtseqs$MH().invokeExact(MaxCalls, SecurityDescriptor.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerUseAllProtseqsEx$MH() {
        return cfapi_h$constants$45.RpcServerUseAllProtseqsEx$MH();
    }
    public static @C("RPC_STATUS") int RpcServerUseAllProtseqsEx (@C("unsigned int") int MaxCalls, @C("void*") Addressable SecurityDescriptor, @C("PRPC_POLICY") Addressable Policy) {
        try {
            return (int)cfapi_h$constants$45.RpcServerUseAllProtseqsEx$MH().invokeExact(MaxCalls, SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerUseAllProtseqsIf$MH() {
        return cfapi_h$constants$45.RpcServerUseAllProtseqsIf$MH();
    }
    public static @C("RPC_STATUS") int RpcServerUseAllProtseqsIf (@C("unsigned int") int MaxCalls, @C("RPC_IF_HANDLE") Addressable IfSpec, @C("void*") Addressable SecurityDescriptor) {
        try {
            return (int)cfapi_h$constants$45.RpcServerUseAllProtseqsIf$MH().invokeExact(MaxCalls, IfSpec.address(), SecurityDescriptor.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerUseAllProtseqsIfEx$MH() {
        return cfapi_h$constants$45.RpcServerUseAllProtseqsIfEx$MH();
    }
    public static @C("RPC_STATUS") int RpcServerUseAllProtseqsIfEx (@C("unsigned int") int MaxCalls, @C("RPC_IF_HANDLE") Addressable IfSpec, @C("void*") Addressable SecurityDescriptor, @C("PRPC_POLICY") Addressable Policy) {
        try {
            return (int)cfapi_h$constants$45.RpcServerUseAllProtseqsIfEx$MH().invokeExact(MaxCalls, IfSpec.address(), SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerUseProtseqA$MH() {
        return cfapi_h$constants$45.RpcServerUseProtseqA$MH();
    }
    public static @C("RPC_STATUS") int RpcServerUseProtseqA (@C("RPC_CSTR") Addressable Protseq, @C("unsigned int") int MaxCalls, @C("void*") Addressable SecurityDescriptor) {
        try {
            return (int)cfapi_h$constants$45.RpcServerUseProtseqA$MH().invokeExact(Protseq.address(), MaxCalls, SecurityDescriptor.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerUseProtseqExA$MH() {
        return cfapi_h$constants$45.RpcServerUseProtseqExA$MH();
    }
    public static @C("RPC_STATUS") int RpcServerUseProtseqExA (@C("RPC_CSTR") Addressable Protseq, @C("unsigned int") int MaxCalls, @C("void*") Addressable SecurityDescriptor, @C("PRPC_POLICY") Addressable Policy) {
        try {
            return (int)cfapi_h$constants$45.RpcServerUseProtseqExA$MH().invokeExact(Protseq.address(), MaxCalls, SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerUseProtseqW$MH() {
        return cfapi_h$constants$45.RpcServerUseProtseqW$MH();
    }
    public static @C("RPC_STATUS") int RpcServerUseProtseqW (@C("RPC_WSTR") Addressable Protseq, @C("unsigned int") int MaxCalls, @C("void*") Addressable SecurityDescriptor) {
        try {
            return (int)cfapi_h$constants$45.RpcServerUseProtseqW$MH().invokeExact(Protseq.address(), MaxCalls, SecurityDescriptor.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerUseProtseqExW$MH() {
        return cfapi_h$constants$45.RpcServerUseProtseqExW$MH();
    }
    public static @C("RPC_STATUS") int RpcServerUseProtseqExW (@C("RPC_WSTR") Addressable Protseq, @C("unsigned int") int MaxCalls, @C("void*") Addressable SecurityDescriptor, @C("PRPC_POLICY") Addressable Policy) {
        try {
            return (int)cfapi_h$constants$45.RpcServerUseProtseqExW$MH().invokeExact(Protseq.address(), MaxCalls, SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerUseProtseqEpA$MH() {
        return cfapi_h$constants$45.RpcServerUseProtseqEpA$MH();
    }
    public static @C("RPC_STATUS") int RpcServerUseProtseqEpA (@C("RPC_CSTR") Addressable Protseq, @C("unsigned int") int MaxCalls, @C("RPC_CSTR") Addressable Endpoint, @C("void*") Addressable SecurityDescriptor) {
        try {
            return (int)cfapi_h$constants$45.RpcServerUseProtseqEpA$MH().invokeExact(Protseq.address(), MaxCalls, Endpoint.address(), SecurityDescriptor.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerUseProtseqEpExA$MH() {
        return cfapi_h$constants$45.RpcServerUseProtseqEpExA$MH();
    }
    public static @C("RPC_STATUS") int RpcServerUseProtseqEpExA (@C("RPC_CSTR") Addressable Protseq, @C("unsigned int") int MaxCalls, @C("RPC_CSTR") Addressable Endpoint, @C("void*") Addressable SecurityDescriptor, @C("PRPC_POLICY") Addressable Policy) {
        try {
            return (int)cfapi_h$constants$45.RpcServerUseProtseqEpExA$MH().invokeExact(Protseq.address(), MaxCalls, Endpoint.address(), SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerUseProtseqEpW$MH() {
        return cfapi_h$constants$45.RpcServerUseProtseqEpW$MH();
    }
    public static @C("RPC_STATUS") int RpcServerUseProtseqEpW (@C("RPC_WSTR") Addressable Protseq, @C("unsigned int") int MaxCalls, @C("RPC_WSTR") Addressable Endpoint, @C("void*") Addressable SecurityDescriptor) {
        try {
            return (int)cfapi_h$constants$45.RpcServerUseProtseqEpW$MH().invokeExact(Protseq.address(), MaxCalls, Endpoint.address(), SecurityDescriptor.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerUseProtseqEpExW$MH() {
        return cfapi_h$constants$45.RpcServerUseProtseqEpExW$MH();
    }
    public static @C("RPC_STATUS") int RpcServerUseProtseqEpExW (@C("RPC_WSTR") Addressable Protseq, @C("unsigned int") int MaxCalls, @C("RPC_WSTR") Addressable Endpoint, @C("void*") Addressable SecurityDescriptor, @C("PRPC_POLICY") Addressable Policy) {
        try {
            return (int)cfapi_h$constants$45.RpcServerUseProtseqEpExW$MH().invokeExact(Protseq.address(), MaxCalls, Endpoint.address(), SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerUseProtseqIfA$MH() {
        return cfapi_h$constants$45.RpcServerUseProtseqIfA$MH();
    }
    public static @C("RPC_STATUS") int RpcServerUseProtseqIfA (@C("RPC_CSTR") Addressable Protseq, @C("unsigned int") int MaxCalls, @C("RPC_IF_HANDLE") Addressable IfSpec, @C("void*") Addressable SecurityDescriptor) {
        try {
            return (int)cfapi_h$constants$45.RpcServerUseProtseqIfA$MH().invokeExact(Protseq.address(), MaxCalls, IfSpec.address(), SecurityDescriptor.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerUseProtseqIfExA$MH() {
        return cfapi_h$constants$45.RpcServerUseProtseqIfExA$MH();
    }
    public static @C("RPC_STATUS") int RpcServerUseProtseqIfExA (@C("RPC_CSTR") Addressable Protseq, @C("unsigned int") int MaxCalls, @C("RPC_IF_HANDLE") Addressable IfSpec, @C("void*") Addressable SecurityDescriptor, @C("PRPC_POLICY") Addressable Policy) {
        try {
            return (int)cfapi_h$constants$45.RpcServerUseProtseqIfExA$MH().invokeExact(Protseq.address(), MaxCalls, IfSpec.address(), SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerUseProtseqIfW$MH() {
        return cfapi_h$constants$45.RpcServerUseProtseqIfW$MH();
    }
    public static @C("RPC_STATUS") int RpcServerUseProtseqIfW (@C("RPC_WSTR") Addressable Protseq, @C("unsigned int") int MaxCalls, @C("RPC_IF_HANDLE") Addressable IfSpec, @C("void*") Addressable SecurityDescriptor) {
        try {
            return (int)cfapi_h$constants$45.RpcServerUseProtseqIfW$MH().invokeExact(Protseq.address(), MaxCalls, IfSpec.address(), SecurityDescriptor.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerUseProtseqIfExW$MH() {
        return cfapi_h$constants$45.RpcServerUseProtseqIfExW$MH();
    }
    public static @C("RPC_STATUS") int RpcServerUseProtseqIfExW (@C("RPC_WSTR") Addressable Protseq, @C("unsigned int") int MaxCalls, @C("RPC_IF_HANDLE") Addressable IfSpec, @C("void*") Addressable SecurityDescriptor, @C("PRPC_POLICY") Addressable Policy) {
        try {
            return (int)cfapi_h$constants$45.RpcServerUseProtseqIfExW$MH().invokeExact(Protseq.address(), MaxCalls, IfSpec.address(), SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerYield$MH() {
        return cfapi_h$constants$45.RpcServerYield$MH();
    }
    public static void RpcServerYield () {
        try {
            cfapi_h$constants$45.RpcServerYield$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcMgmtStatsVectorFree$MH() {
        return cfapi_h$constants$45.RpcMgmtStatsVectorFree$MH();
    }
    public static @C("RPC_STATUS") int RpcMgmtStatsVectorFree (@C("RPC_STATS_VECTOR**") Addressable StatsVector) {
        try {
            return (int)cfapi_h$constants$45.RpcMgmtStatsVectorFree$MH().invokeExact(StatsVector.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcMgmtInqStats$MH() {
        return cfapi_h$constants$45.RpcMgmtInqStats$MH();
    }
    public static @C("RPC_STATUS") int RpcMgmtInqStats (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("RPC_STATS_VECTOR**") Addressable Statistics) {
        try {
            return (int)cfapi_h$constants$45.RpcMgmtInqStats$MH().invokeExact(Binding.address(), Statistics.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcMgmtIsServerListening$MH() {
        return cfapi_h$constants$45.RpcMgmtIsServerListening$MH();
    }
    public static @C("RPC_STATUS") int RpcMgmtIsServerListening (@C("RPC_BINDING_HANDLE") Addressable Binding) {
        try {
            return (int)cfapi_h$constants$45.RpcMgmtIsServerListening$MH().invokeExact(Binding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcMgmtStopServerListening$MH() {
        return cfapi_h$constants$45.RpcMgmtStopServerListening$MH();
    }
    public static @C("RPC_STATUS") int RpcMgmtStopServerListening (@C("RPC_BINDING_HANDLE") Addressable Binding) {
        try {
            return (int)cfapi_h$constants$45.RpcMgmtStopServerListening$MH().invokeExact(Binding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcMgmtWaitServerListen$MH() {
        return cfapi_h$constants$45.RpcMgmtWaitServerListen$MH();
    }
    public static @C("RPC_STATUS") int RpcMgmtWaitServerListen () {
        try {
            return (int)cfapi_h$constants$45.RpcMgmtWaitServerListen$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcMgmtSetServerStackSize$MH() {
        return cfapi_h$constants$45.RpcMgmtSetServerStackSize$MH();
    }
    public static @C("RPC_STATUS") int RpcMgmtSetServerStackSize (@C("unsigned long") int ThreadStackSize) {
        try {
            return (int)cfapi_h$constants$45.RpcMgmtSetServerStackSize$MH().invokeExact(ThreadStackSize);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcSsDontSerializeContext$MH() {
        return cfapi_h$constants$45.RpcSsDontSerializeContext$MH();
    }
    public static void RpcSsDontSerializeContext () {
        try {
            cfapi_h$constants$45.RpcSsDontSerializeContext$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcMgmtEnableIdleCleanup$MH() {
        return cfapi_h$constants$45.RpcMgmtEnableIdleCleanup$MH();
    }
    public static @C("RPC_STATUS") int RpcMgmtEnableIdleCleanup () {
        try {
            return (int)cfapi_h$constants$45.RpcMgmtEnableIdleCleanup$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcMgmtInqIfIds$MH() {
        return cfapi_h$constants$45.RpcMgmtInqIfIds$MH();
    }
    public static @C("RPC_STATUS") int RpcMgmtInqIfIds (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("RPC_IF_ID_VECTOR**") Addressable IfIdVector) {
        try {
            return (int)cfapi_h$constants$45.RpcMgmtInqIfIds$MH().invokeExact(Binding.address(), IfIdVector.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcIfIdVectorFree$MH() {
        return cfapi_h$constants$45.RpcIfIdVectorFree$MH();
    }
    public static @C("RPC_STATUS") int RpcIfIdVectorFree (@C("RPC_IF_ID_VECTOR**") Addressable IfIdVector) {
        try {
            return (int)cfapi_h$constants$45.RpcIfIdVectorFree$MH().invokeExact(IfIdVector.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcMgmtInqServerPrincNameA$MH() {
        return cfapi_h$constants$45.RpcMgmtInqServerPrincNameA$MH();
    }
    public static @C("RPC_STATUS") int RpcMgmtInqServerPrincNameA (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("unsigned long") int AuthnSvc, @C("RPC_CSTR*") Addressable ServerPrincName) {
        try {
            return (int)cfapi_h$constants$45.RpcMgmtInqServerPrincNameA$MH().invokeExact(Binding.address(), AuthnSvc, ServerPrincName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcMgmtInqServerPrincNameW$MH() {
        return cfapi_h$constants$45.RpcMgmtInqServerPrincNameW$MH();
    }
    public static @C("RPC_STATUS") int RpcMgmtInqServerPrincNameW (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("unsigned long") int AuthnSvc, @C("RPC_WSTR*") Addressable ServerPrincName) {
        try {
            return (int)cfapi_h$constants$45.RpcMgmtInqServerPrincNameW$MH().invokeExact(Binding.address(), AuthnSvc, ServerPrincName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerInqDefaultPrincNameA$MH() {
        return cfapi_h$constants$45.RpcServerInqDefaultPrincNameA$MH();
    }
    public static @C("RPC_STATUS") int RpcServerInqDefaultPrincNameA (@C("unsigned long") int AuthnSvc, @C("RPC_CSTR*") Addressable PrincName) {
        try {
            return (int)cfapi_h$constants$45.RpcServerInqDefaultPrincNameA$MH().invokeExact(AuthnSvc, PrincName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerInqDefaultPrincNameW$MH() {
        return cfapi_h$constants$45.RpcServerInqDefaultPrincNameW$MH();
    }
    public static @C("RPC_STATUS") int RpcServerInqDefaultPrincNameW (@C("unsigned long") int AuthnSvc, @C("RPC_WSTR*") Addressable PrincName) {
        try {
            return (int)cfapi_h$constants$45.RpcServerInqDefaultPrincNameW$MH().invokeExact(AuthnSvc, PrincName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcEpResolveBinding$MH() {
        return cfapi_h$constants$45.RpcEpResolveBinding$MH();
    }
    public static @C("RPC_STATUS") int RpcEpResolveBinding (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("RPC_IF_HANDLE") Addressable IfSpec) {
        try {
            return (int)cfapi_h$constants$45.RpcEpResolveBinding$MH().invokeExact(Binding.address(), IfSpec.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsBindingInqEntryNameA$MH() {
        return cfapi_h$constants$45.RpcNsBindingInqEntryNameA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsBindingInqEntryNameA (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("unsigned long") int EntryNameSyntax, @C("RPC_CSTR*") Addressable EntryName) {
        try {
            return (int)cfapi_h$constants$45.RpcNsBindingInqEntryNameA$MH().invokeExact(Binding.address(), EntryNameSyntax, EntryName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsBindingInqEntryNameW$MH() {
        return cfapi_h$constants$45.RpcNsBindingInqEntryNameW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsBindingInqEntryNameW (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("unsigned long") int EntryNameSyntax, @C("RPC_WSTR*") Addressable EntryName) {
        try {
            return (int)cfapi_h$constants$45.RpcNsBindingInqEntryNameW$MH().invokeExact(Binding.address(), EntryNameSyntax, EntryName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingCreateA$MH() {
        return cfapi_h$constants$46.RpcBindingCreateA$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingCreateA (@C("RPC_BINDING_HANDLE_TEMPLATE_V1_A*") Addressable Template, @C("RPC_BINDING_HANDLE_SECURITY_V1_A*") Addressable Security, @C("RPC_BINDING_HANDLE_OPTIONS_V1*") Addressable Options, @C("RPC_BINDING_HANDLE*") Addressable Binding) {
        try {
            return (int)cfapi_h$constants$46.RpcBindingCreateA$MH().invokeExact(Template.address(), Security.address(), Options.address(), Binding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingCreateW$MH() {
        return cfapi_h$constants$46.RpcBindingCreateW$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingCreateW (@C("RPC_BINDING_HANDLE_TEMPLATE_V1_W*") Addressable Template, @C("RPC_BINDING_HANDLE_SECURITY_V1_W*") Addressable Security, @C("RPC_BINDING_HANDLE_OPTIONS_V1*") Addressable Options, @C("RPC_BINDING_HANDLE*") Addressable Binding) {
        try {
            return (int)cfapi_h$constants$46.RpcBindingCreateW$MH().invokeExact(Template.address(), Security.address(), Options.address(), Binding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingGetTrainingContextHandle$MH() {
        return cfapi_h$constants$46.RpcBindingGetTrainingContextHandle$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingGetTrainingContextHandle (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("void**") Addressable ContextHandle) {
        try {
            return (int)cfapi_h$constants$46.RpcBindingGetTrainingContextHandle$MH().invokeExact(Binding.address(), ContextHandle.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerInqBindingHandle$MH() {
        return cfapi_h$constants$46.RpcServerInqBindingHandle$MH();
    }
    public static @C("RPC_STATUS") int RpcServerInqBindingHandle (@C("RPC_BINDING_HANDLE*") Addressable Binding) {
        try {
            return (int)cfapi_h$constants$46.RpcServerInqBindingHandle$MH().invokeExact(Binding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int RPCHTTP_RS_REDIRECT() {
        return cfapi_h$constants$46.RPCHTTP_RS_REDIRECT();
    }
    public static @C("int") int RPCHTTP_RS_ACCESS_1() {
        return cfapi_h$constants$46.RPCHTTP_RS_ACCESS_1();
    }
    public static @C("int") int RPCHTTP_RS_SESSION() {
        return cfapi_h$constants$46.RPCHTTP_RS_SESSION();
    }
    public static @C("int") int RPCHTTP_RS_ACCESS_2() {
        return cfapi_h$constants$46.RPCHTTP_RS_ACCESS_2();
    }
    public static @C("int") int RPCHTTP_RS_INTERFACE() {
        return cfapi_h$constants$46.RPCHTTP_RS_INTERFACE();
    }
    public static  MethodHandle RpcImpersonateClient$MH() {
        return cfapi_h$constants$46.RpcImpersonateClient$MH();
    }
    public static @C("RPC_STATUS") int RpcImpersonateClient (@C("RPC_BINDING_HANDLE") Addressable BindingHandle) {
        try {
            return (int)cfapi_h$constants$46.RpcImpersonateClient$MH().invokeExact(BindingHandle.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcImpersonateClient2$MH() {
        return cfapi_h$constants$46.RpcImpersonateClient2$MH();
    }
    public static @C("RPC_STATUS") int RpcImpersonateClient2 (@C("RPC_BINDING_HANDLE") Addressable BindingHandle) {
        try {
            return (int)cfapi_h$constants$46.RpcImpersonateClient2$MH().invokeExact(BindingHandle.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcRevertToSelfEx$MH() {
        return cfapi_h$constants$46.RpcRevertToSelfEx$MH();
    }
    public static @C("RPC_STATUS") int RpcRevertToSelfEx (@C("RPC_BINDING_HANDLE") Addressable BindingHandle) {
        try {
            return (int)cfapi_h$constants$46.RpcRevertToSelfEx$MH().invokeExact(BindingHandle.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcRevertToSelf$MH() {
        return cfapi_h$constants$46.RpcRevertToSelf$MH();
    }
    public static @C("RPC_STATUS") int RpcRevertToSelf () {
        try {
            return (int)cfapi_h$constants$46.RpcRevertToSelf$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcImpersonateClientContainer$MH() {
        return cfapi_h$constants$46.RpcImpersonateClientContainer$MH();
    }
    public static @C("RPC_STATUS") int RpcImpersonateClientContainer (@C("RPC_BINDING_HANDLE") Addressable BindingHandle) {
        try {
            return (int)cfapi_h$constants$46.RpcImpersonateClientContainer$MH().invokeExact(BindingHandle.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcRevertContainerImpersonation$MH() {
        return cfapi_h$constants$46.RpcRevertContainerImpersonation$MH();
    }
    public static @C("RPC_STATUS") int RpcRevertContainerImpersonation () {
        try {
            return (int)cfapi_h$constants$46.RpcRevertContainerImpersonation$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingInqAuthClientA$MH() {
        return cfapi_h$constants$46.RpcBindingInqAuthClientA$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingInqAuthClientA (@C("RPC_BINDING_HANDLE") Addressable ClientBinding, @C("RPC_AUTHZ_HANDLE*") Addressable Privs, @C("RPC_CSTR*") Addressable ServerPrincName, @C("unsigned long*") Addressable AuthnLevel, @C("unsigned long*") Addressable AuthnSvc, @C("unsigned long*") Addressable AuthzSvc) {
        try {
            return (int)cfapi_h$constants$46.RpcBindingInqAuthClientA$MH().invokeExact(ClientBinding.address(), Privs.address(), ServerPrincName.address(), AuthnLevel.address(), AuthnSvc.address(), AuthzSvc.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingInqAuthClientW$MH() {
        return cfapi_h$constants$46.RpcBindingInqAuthClientW$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingInqAuthClientW (@C("RPC_BINDING_HANDLE") Addressable ClientBinding, @C("RPC_AUTHZ_HANDLE*") Addressable Privs, @C("RPC_WSTR*") Addressable ServerPrincName, @C("unsigned long*") Addressable AuthnLevel, @C("unsigned long*") Addressable AuthnSvc, @C("unsigned long*") Addressable AuthzSvc) {
        try {
            return (int)cfapi_h$constants$46.RpcBindingInqAuthClientW$MH().invokeExact(ClientBinding.address(), Privs.address(), ServerPrincName.address(), AuthnLevel.address(), AuthnSvc.address(), AuthzSvc.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingInqAuthClientExA$MH() {
        return cfapi_h$constants$46.RpcBindingInqAuthClientExA$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingInqAuthClientExA (@C("RPC_BINDING_HANDLE") Addressable ClientBinding, @C("RPC_AUTHZ_HANDLE*") Addressable Privs, @C("RPC_CSTR*") Addressable ServerPrincName, @C("unsigned long*") Addressable AuthnLevel, @C("unsigned long*") Addressable AuthnSvc, @C("unsigned long*") Addressable AuthzSvc, @C("unsigned long") int Flags) {
        try {
            return (int)cfapi_h$constants$46.RpcBindingInqAuthClientExA$MH().invokeExact(ClientBinding.address(), Privs.address(), ServerPrincName.address(), AuthnLevel.address(), AuthnSvc.address(), AuthzSvc.address(), Flags);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingInqAuthClientExW$MH() {
        return cfapi_h$constants$46.RpcBindingInqAuthClientExW$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingInqAuthClientExW (@C("RPC_BINDING_HANDLE") Addressable ClientBinding, @C("RPC_AUTHZ_HANDLE*") Addressable Privs, @C("RPC_WSTR*") Addressable ServerPrincName, @C("unsigned long*") Addressable AuthnLevel, @C("unsigned long*") Addressable AuthnSvc, @C("unsigned long*") Addressable AuthzSvc, @C("unsigned long") int Flags) {
        try {
            return (int)cfapi_h$constants$46.RpcBindingInqAuthClientExW$MH().invokeExact(ClientBinding.address(), Privs.address(), ServerPrincName.address(), AuthnLevel.address(), AuthnSvc.address(), AuthzSvc.address(), Flags);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingInqAuthInfoA$MH() {
        return cfapi_h$constants$46.RpcBindingInqAuthInfoA$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingInqAuthInfoA (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("RPC_CSTR*") Addressable ServerPrincName, @C("unsigned long*") Addressable AuthnLevel, @C("unsigned long*") Addressable AuthnSvc, @C("RPC_AUTH_IDENTITY_HANDLE*") Addressable AuthIdentity, @C("unsigned long*") Addressable AuthzSvc) {
        try {
            return (int)cfapi_h$constants$46.RpcBindingInqAuthInfoA$MH().invokeExact(Binding.address(), ServerPrincName.address(), AuthnLevel.address(), AuthnSvc.address(), AuthIdentity.address(), AuthzSvc.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingInqAuthInfoW$MH() {
        return cfapi_h$constants$46.RpcBindingInqAuthInfoW$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingInqAuthInfoW (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("RPC_WSTR*") Addressable ServerPrincName, @C("unsigned long*") Addressable AuthnLevel, @C("unsigned long*") Addressable AuthnSvc, @C("RPC_AUTH_IDENTITY_HANDLE*") Addressable AuthIdentity, @C("unsigned long*") Addressable AuthzSvc) {
        try {
            return (int)cfapi_h$constants$46.RpcBindingInqAuthInfoW$MH().invokeExact(Binding.address(), ServerPrincName.address(), AuthnLevel.address(), AuthnSvc.address(), AuthIdentity.address(), AuthzSvc.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingSetAuthInfoA$MH() {
        return cfapi_h$constants$46.RpcBindingSetAuthInfoA$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingSetAuthInfoA (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("RPC_CSTR") Addressable ServerPrincName, @C("unsigned long") int AuthnLevel, @C("unsigned long") int AuthnSvc, @C("RPC_AUTH_IDENTITY_HANDLE") Addressable AuthIdentity, @C("unsigned long") int AuthzSvc) {
        try {
            return (int)cfapi_h$constants$46.RpcBindingSetAuthInfoA$MH().invokeExact(Binding.address(), ServerPrincName.address(), AuthnLevel, AuthnSvc, AuthIdentity.address(), AuthzSvc);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingSetAuthInfoExA$MH() {
        return cfapi_h$constants$46.RpcBindingSetAuthInfoExA$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingSetAuthInfoExA (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("RPC_CSTR") Addressable ServerPrincName, @C("unsigned long") int AuthnLevel, @C("unsigned long") int AuthnSvc, @C("RPC_AUTH_IDENTITY_HANDLE") Addressable AuthIdentity, @C("unsigned long") int AuthzSvc, @C("RPC_SECURITY_QOS*") Addressable SecurityQos) {
        try {
            return (int)cfapi_h$constants$46.RpcBindingSetAuthInfoExA$MH().invokeExact(Binding.address(), ServerPrincName.address(), AuthnLevel, AuthnSvc, AuthIdentity.address(), AuthzSvc, SecurityQos.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingSetAuthInfoW$MH() {
        return cfapi_h$constants$46.RpcBindingSetAuthInfoW$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingSetAuthInfoW (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("RPC_WSTR") Addressable ServerPrincName, @C("unsigned long") int AuthnLevel, @C("unsigned long") int AuthnSvc, @C("RPC_AUTH_IDENTITY_HANDLE") Addressable AuthIdentity, @C("unsigned long") int AuthzSvc) {
        try {
            return (int)cfapi_h$constants$46.RpcBindingSetAuthInfoW$MH().invokeExact(Binding.address(), ServerPrincName.address(), AuthnLevel, AuthnSvc, AuthIdentity.address(), AuthzSvc);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingSetAuthInfoExW$MH() {
        return cfapi_h$constants$46.RpcBindingSetAuthInfoExW$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingSetAuthInfoExW (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("RPC_WSTR") Addressable ServerPrincName, @C("unsigned long") int AuthnLevel, @C("unsigned long") int AuthnSvc, @C("RPC_AUTH_IDENTITY_HANDLE") Addressable AuthIdentity, @C("unsigned long") int AuthzSvc, @C("RPC_SECURITY_QOS*") Addressable SecurityQOS) {
        try {
            return (int)cfapi_h$constants$46.RpcBindingSetAuthInfoExW$MH().invokeExact(Binding.address(), ServerPrincName.address(), AuthnLevel, AuthnSvc, AuthIdentity.address(), AuthzSvc, SecurityQOS.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingInqAuthInfoExA$MH() {
        return cfapi_h$constants$46.RpcBindingInqAuthInfoExA$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingInqAuthInfoExA (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("RPC_CSTR*") Addressable ServerPrincName, @C("unsigned long*") Addressable AuthnLevel, @C("unsigned long*") Addressable AuthnSvc, @C("RPC_AUTH_IDENTITY_HANDLE*") Addressable AuthIdentity, @C("unsigned long*") Addressable AuthzSvc, @C("unsigned long") int RpcQosVersion, @C("RPC_SECURITY_QOS*") Addressable SecurityQOS) {
        try {
            return (int)cfapi_h$constants$46.RpcBindingInqAuthInfoExA$MH().invokeExact(Binding.address(), ServerPrincName.address(), AuthnLevel.address(), AuthnSvc.address(), AuthIdentity.address(), AuthzSvc.address(), RpcQosVersion, SecurityQOS.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingInqAuthInfoExW$MH() {
        return cfapi_h$constants$46.RpcBindingInqAuthInfoExW$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingInqAuthInfoExW (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("RPC_WSTR*") Addressable ServerPrincName, @C("unsigned long*") Addressable AuthnLevel, @C("unsigned long*") Addressable AuthnSvc, @C("RPC_AUTH_IDENTITY_HANDLE*") Addressable AuthIdentity, @C("unsigned long*") Addressable AuthzSvc, @C("unsigned long") int RpcQosVersion, @C("RPC_SECURITY_QOS*") Addressable SecurityQOS) {
        try {
            return (int)cfapi_h$constants$46.RpcBindingInqAuthInfoExW$MH().invokeExact(Binding.address(), ServerPrincName.address(), AuthnLevel.address(), AuthnSvc.address(), AuthIdentity.address(), AuthzSvc.address(), RpcQosVersion, SecurityQOS.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerCompleteSecurityCallback$MH() {
        return cfapi_h$constants$46.RpcServerCompleteSecurityCallback$MH();
    }
    public static @C("RPC_STATUS") int RpcServerCompleteSecurityCallback (@C("RPC_BINDING_HANDLE") Addressable BindingHandle, @C("RPC_STATUS") int Status) {
        try {
            return (int)cfapi_h$constants$46.RpcServerCompleteSecurityCallback$MH().invokeExact(BindingHandle.address(), Status);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerRegisterAuthInfoA$MH() {
        return cfapi_h$constants$46.RpcServerRegisterAuthInfoA$MH();
    }
    public static @C("RPC_STATUS") int RpcServerRegisterAuthInfoA (@C("RPC_CSTR") Addressable ServerPrincName, @C("unsigned long") int AuthnSvc, @C("RPC_AUTH_KEY_RETRIEVAL_FN") Addressable GetKeyFn, @C("void*") Addressable Arg) {
        try {
            return (int)cfapi_h$constants$46.RpcServerRegisterAuthInfoA$MH().invokeExact(ServerPrincName.address(), AuthnSvc, GetKeyFn.address(), Arg.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerRegisterAuthInfoW$MH() {
        return cfapi_h$constants$46.RpcServerRegisterAuthInfoW$MH();
    }
    public static @C("RPC_STATUS") int RpcServerRegisterAuthInfoW (@C("RPC_WSTR") Addressable ServerPrincName, @C("unsigned long") int AuthnSvc, @C("RPC_AUTH_KEY_RETRIEVAL_FN") Addressable GetKeyFn, @C("void*") Addressable Arg) {
        try {
            return (int)cfapi_h$constants$46.RpcServerRegisterAuthInfoW$MH().invokeExact(ServerPrincName.address(), AuthnSvc, GetKeyFn.address(), Arg.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingServerFromClient$MH() {
        return cfapi_h$constants$46.RpcBindingServerFromClient$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingServerFromClient (@C("RPC_BINDING_HANDLE") Addressable ClientBinding, @C("RPC_BINDING_HANDLE*") Addressable ServerBinding) {
        try {
            return (int)cfapi_h$constants$46.RpcBindingServerFromClient$MH().invokeExact(ClientBinding.address(), ServerBinding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcRaiseException$MH() {
        return cfapi_h$constants$46.RpcRaiseException$MH();
    }
    public static void RpcRaiseException (@C("RPC_STATUS") int exception) {
        try {
            cfapi_h$constants$46.RpcRaiseException$MH().invokeExact(exception);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcTestCancel$MH() {
        return cfapi_h$constants$46.RpcTestCancel$MH();
    }
    public static @C("RPC_STATUS") int RpcTestCancel () {
        try {
            return (int)cfapi_h$constants$46.RpcTestCancel$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerTestCancel$MH() {
        return cfapi_h$constants$46.RpcServerTestCancel$MH();
    }
    public static @C("RPC_STATUS") int RpcServerTestCancel (@C("RPC_BINDING_HANDLE") Addressable BindingHandle) {
        try {
            return (int)cfapi_h$constants$46.RpcServerTestCancel$MH().invokeExact(BindingHandle.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcCancelThread$MH() {
        return cfapi_h$constants$46.RpcCancelThread$MH();
    }
    public static @C("RPC_STATUS") int RpcCancelThread (@C("void*") Addressable Thread) {
        try {
            return (int)cfapi_h$constants$46.RpcCancelThread$MH().invokeExact(Thread.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcCancelThreadEx$MH() {
        return cfapi_h$constants$46.RpcCancelThreadEx$MH();
    }
    public static @C("RPC_STATUS") int RpcCancelThreadEx (@C("void*") Addressable Thread, @C("long") int Timeout) {
        try {
            return (int)cfapi_h$constants$46.RpcCancelThreadEx$MH().invokeExact(Thread.address(), Timeout);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle UuidCreate$MH() {
        return cfapi_h$constants$46.UuidCreate$MH();
    }
    public static @C("RPC_STATUS") int UuidCreate (@C("UUID*") Addressable Uuid) {
        try {
            return (int)cfapi_h$constants$46.UuidCreate$MH().invokeExact(Uuid.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle UuidCreateSequential$MH() {
        return cfapi_h$constants$46.UuidCreateSequential$MH();
    }
    public static @C("RPC_STATUS") int UuidCreateSequential (@C("UUID*") Addressable Uuid) {
        try {
            return (int)cfapi_h$constants$46.UuidCreateSequential$MH().invokeExact(Uuid.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle UuidToStringA$MH() {
        return cfapi_h$constants$46.UuidToStringA$MH();
    }
    public static @C("RPC_STATUS") int UuidToStringA (@C("const UUID*") Addressable Uuid, @C("RPC_CSTR*") Addressable StringUuid) {
        try {
            return (int)cfapi_h$constants$46.UuidToStringA$MH().invokeExact(Uuid.address(), StringUuid.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle UuidFromStringA$MH() {
        return cfapi_h$constants$46.UuidFromStringA$MH();
    }
    public static @C("RPC_STATUS") int UuidFromStringA (@C("RPC_CSTR") Addressable StringUuid, @C("UUID*") Addressable Uuid) {
        try {
            return (int)cfapi_h$constants$46.UuidFromStringA$MH().invokeExact(StringUuid.address(), Uuid.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle UuidToStringW$MH() {
        return cfapi_h$constants$46.UuidToStringW$MH();
    }
    public static @C("RPC_STATUS") int UuidToStringW (@C("const UUID*") Addressable Uuid, @C("RPC_WSTR*") Addressable StringUuid) {
        try {
            return (int)cfapi_h$constants$46.UuidToStringW$MH().invokeExact(Uuid.address(), StringUuid.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle UuidFromStringW$MH() {
        return cfapi_h$constants$46.UuidFromStringW$MH();
    }
    public static @C("RPC_STATUS") int UuidFromStringW (@C("RPC_WSTR") Addressable StringUuid, @C("UUID*") Addressable Uuid) {
        try {
            return (int)cfapi_h$constants$46.UuidFromStringW$MH().invokeExact(StringUuid.address(), Uuid.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle UuidCompare$MH() {
        return cfapi_h$constants$46.UuidCompare$MH();
    }
    public static @C("int") int UuidCompare (@C("UUID*") Addressable Uuid1, @C("UUID*") Addressable Uuid2, @C("RPC_STATUS*") Addressable Status) {
        try {
            return (int)cfapi_h$constants$46.UuidCompare$MH().invokeExact(Uuid1.address(), Uuid2.address(), Status.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle UuidCreateNil$MH() {
        return cfapi_h$constants$46.UuidCreateNil$MH();
    }
    public static @C("RPC_STATUS") int UuidCreateNil (@C("UUID*") Addressable NilUuid) {
        try {
            return (int)cfapi_h$constants$46.UuidCreateNil$MH().invokeExact(NilUuid.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle UuidEqual$MH() {
        return cfapi_h$constants$46.UuidEqual$MH();
    }
    public static @C("int") int UuidEqual (@C("UUID*") Addressable Uuid1, @C("UUID*") Addressable Uuid2, @C("RPC_STATUS*") Addressable Status) {
        try {
            return (int)cfapi_h$constants$46.UuidEqual$MH().invokeExact(Uuid1.address(), Uuid2.address(), Status.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle UuidHash$MH() {
        return cfapi_h$constants$46.UuidHash$MH();
    }
    public static @C("unsigned short") short UuidHash (@C("UUID*") Addressable Uuid, @C("RPC_STATUS*") Addressable Status) {
        try {
            return (short)cfapi_h$constants$46.UuidHash$MH().invokeExact(Uuid.address(), Status.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle UuidIsNil$MH() {
        return cfapi_h$constants$46.UuidIsNil$MH();
    }
    public static @C("int") int UuidIsNil (@C("UUID*") Addressable Uuid, @C("RPC_STATUS*") Addressable Status) {
        try {
            return (int)cfapi_h$constants$46.UuidIsNil$MH().invokeExact(Uuid.address(), Status.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcEpRegisterNoReplaceA$MH() {
        return cfapi_h$constants$46.RpcEpRegisterNoReplaceA$MH();
    }
    public static @C("RPC_STATUS") int RpcEpRegisterNoReplaceA (@C("RPC_IF_HANDLE") Addressable IfSpec, @C("RPC_BINDING_VECTOR*") Addressable BindingVector, @C("UUID_VECTOR*") Addressable UuidVector, @C("RPC_CSTR") Addressable Annotation) {
        try {
            return (int)cfapi_h$constants$46.RpcEpRegisterNoReplaceA$MH().invokeExact(IfSpec.address(), BindingVector.address(), UuidVector.address(), Annotation.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcEpRegisterNoReplaceW$MH() {
        return cfapi_h$constants$46.RpcEpRegisterNoReplaceW$MH();
    }
    public static @C("RPC_STATUS") int RpcEpRegisterNoReplaceW (@C("RPC_IF_HANDLE") Addressable IfSpec, @C("RPC_BINDING_VECTOR*") Addressable BindingVector, @C("UUID_VECTOR*") Addressable UuidVector, @C("RPC_WSTR") Addressable Annotation) {
        try {
            return (int)cfapi_h$constants$46.RpcEpRegisterNoReplaceW$MH().invokeExact(IfSpec.address(), BindingVector.address(), UuidVector.address(), Annotation.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcEpRegisterA$MH() {
        return cfapi_h$constants$46.RpcEpRegisterA$MH();
    }
    public static @C("RPC_STATUS") int RpcEpRegisterA (@C("RPC_IF_HANDLE") Addressable IfSpec, @C("RPC_BINDING_VECTOR*") Addressable BindingVector, @C("UUID_VECTOR*") Addressable UuidVector, @C("RPC_CSTR") Addressable Annotation) {
        try {
            return (int)cfapi_h$constants$46.RpcEpRegisterA$MH().invokeExact(IfSpec.address(), BindingVector.address(), UuidVector.address(), Annotation.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcEpRegisterW$MH() {
        return cfapi_h$constants$46.RpcEpRegisterW$MH();
    }
    public static @C("RPC_STATUS") int RpcEpRegisterW (@C("RPC_IF_HANDLE") Addressable IfSpec, @C("RPC_BINDING_VECTOR*") Addressable BindingVector, @C("UUID_VECTOR*") Addressable UuidVector, @C("RPC_WSTR") Addressable Annotation) {
        try {
            return (int)cfapi_h$constants$46.RpcEpRegisterW$MH().invokeExact(IfSpec.address(), BindingVector.address(), UuidVector.address(), Annotation.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcEpUnregister$MH() {
        return cfapi_h$constants$46.RpcEpUnregister$MH();
    }
    public static @C("RPC_STATUS") int RpcEpUnregister (@C("RPC_IF_HANDLE") Addressable IfSpec, @C("RPC_BINDING_VECTOR*") Addressable BindingVector, @C("UUID_VECTOR*") Addressable UuidVector) {
        try {
            return (int)cfapi_h$constants$46.RpcEpUnregister$MH().invokeExact(IfSpec.address(), BindingVector.address(), UuidVector.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DceErrorInqTextA$MH() {
        return cfapi_h$constants$46.DceErrorInqTextA$MH();
    }
    public static @C("RPC_STATUS") int DceErrorInqTextA (@C("RPC_STATUS") int RpcStatus, @C("RPC_CSTR") Addressable ErrorText) {
        try {
            return (int)cfapi_h$constants$46.DceErrorInqTextA$MH().invokeExact(RpcStatus, ErrorText.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DceErrorInqTextW$MH() {
        return cfapi_h$constants$46.DceErrorInqTextW$MH();
    }
    public static @C("RPC_STATUS") int DceErrorInqTextW (@C("RPC_STATUS") int RpcStatus, @C("RPC_WSTR") Addressable ErrorText) {
        try {
            return (int)cfapi_h$constants$46.DceErrorInqTextW$MH().invokeExact(RpcStatus, ErrorText.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcMgmtEpEltInqBegin$MH() {
        return cfapi_h$constants$46.RpcMgmtEpEltInqBegin$MH();
    }
    public static @C("RPC_STATUS") int RpcMgmtEpEltInqBegin (@C("RPC_BINDING_HANDLE") Addressable EpBinding, @C("unsigned long") int InquiryType, @C("RPC_IF_ID*") Addressable IfId, @C("unsigned long") int VersOption, @C("UUID*") Addressable ObjectUuid, @C("RPC_EP_INQ_HANDLE*") Addressable InquiryContext) {
        try {
            return (int)cfapi_h$constants$46.RpcMgmtEpEltInqBegin$MH().invokeExact(EpBinding.address(), InquiryType, IfId.address(), VersOption, ObjectUuid.address(), InquiryContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcMgmtEpEltInqDone$MH() {
        return cfapi_h$constants$46.RpcMgmtEpEltInqDone$MH();
    }
    public static @C("RPC_STATUS") int RpcMgmtEpEltInqDone (@C("RPC_EP_INQ_HANDLE*") Addressable InquiryContext) {
        try {
            return (int)cfapi_h$constants$46.RpcMgmtEpEltInqDone$MH().invokeExact(InquiryContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcMgmtEpEltInqNextA$MH() {
        return cfapi_h$constants$46.RpcMgmtEpEltInqNextA$MH();
    }
    public static @C("RPC_STATUS") int RpcMgmtEpEltInqNextA (@C("RPC_EP_INQ_HANDLE") Addressable InquiryContext, @C("RPC_IF_ID*") Addressable IfId, @C("RPC_BINDING_HANDLE*") Addressable Binding, @C("UUID*") Addressable ObjectUuid, @C("RPC_CSTR*") Addressable Annotation) {
        try {
            return (int)cfapi_h$constants$46.RpcMgmtEpEltInqNextA$MH().invokeExact(InquiryContext.address(), IfId.address(), Binding.address(), ObjectUuid.address(), Annotation.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcMgmtEpEltInqNextW$MH() {
        return cfapi_h$constants$46.RpcMgmtEpEltInqNextW$MH();
    }
    public static @C("RPC_STATUS") int RpcMgmtEpEltInqNextW (@C("RPC_EP_INQ_HANDLE") Addressable InquiryContext, @C("RPC_IF_ID*") Addressable IfId, @C("RPC_BINDING_HANDLE*") Addressable Binding, @C("UUID*") Addressable ObjectUuid, @C("RPC_WSTR*") Addressable Annotation) {
        try {
            return (int)cfapi_h$constants$46.RpcMgmtEpEltInqNextW$MH().invokeExact(InquiryContext.address(), IfId.address(), Binding.address(), ObjectUuid.address(), Annotation.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcMgmtEpUnregister$MH() {
        return cfapi_h$constants$46.RpcMgmtEpUnregister$MH();
    }
    public static @C("RPC_STATUS") int RpcMgmtEpUnregister (@C("RPC_BINDING_HANDLE") Addressable EpBinding, @C("RPC_IF_ID*") Addressable IfId, @C("RPC_BINDING_HANDLE") Addressable Binding, @C("UUID*") Addressable ObjectUuid) {
        try {
            return (int)cfapi_h$constants$46.RpcMgmtEpUnregister$MH().invokeExact(EpBinding.address(), IfId.address(), Binding.address(), ObjectUuid.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcMgmtSetAuthorizationFn$MH() {
        return cfapi_h$constants$46.RpcMgmtSetAuthorizationFn$MH();
    }
    public static @C("RPC_STATUS") int RpcMgmtSetAuthorizationFn (@C("RPC_MGMT_AUTHORIZATION_FN") Addressable AuthorizationFn) {
        try {
            return (int)cfapi_h$constants$46.RpcMgmtSetAuthorizationFn$MH().invokeExact(AuthorizationFn.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcExceptionFilter$MH() {
        return cfapi_h$constants$46.RpcExceptionFilter$MH();
    }
    public static @C("int") int RpcExceptionFilter (@C("unsigned long") int ExceptionCode) {
        try {
            return (int)cfapi_h$constants$46.RpcExceptionFilter$MH().invokeExact(ExceptionCode);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerInterfaceGroupClose$MH() {
        return cfapi_h$constants$46.RpcServerInterfaceGroupClose$MH();
    }
    public static @C("RPC_STATUS") int RpcServerInterfaceGroupClose (@C("RPC_INTERFACE_GROUP") Addressable IfGroup) {
        try {
            return (int)cfapi_h$constants$46.RpcServerInterfaceGroupClose$MH().invokeExact(IfGroup.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerInterfaceGroupActivate$MH() {
        return cfapi_h$constants$46.RpcServerInterfaceGroupActivate$MH();
    }
    public static @C("RPC_STATUS") int RpcServerInterfaceGroupActivate (@C("RPC_INTERFACE_GROUP") Addressable IfGroup) {
        try {
            return (int)cfapi_h$constants$46.RpcServerInterfaceGroupActivate$MH().invokeExact(IfGroup.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerInterfaceGroupDeactivate$MH() {
        return cfapi_h$constants$46.RpcServerInterfaceGroupDeactivate$MH();
    }
    public static @C("RPC_STATUS") int RpcServerInterfaceGroupDeactivate (@C("RPC_INTERFACE_GROUP") Addressable IfGroup, @C("unsigned long") int ForceDeactivation) {
        try {
            return (int)cfapi_h$constants$46.RpcServerInterfaceGroupDeactivate$MH().invokeExact(IfGroup.address(), ForceDeactivation);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerInterfaceGroupInqBindings$MH() {
        return cfapi_h$constants$46.RpcServerInterfaceGroupInqBindings$MH();
    }
    public static @C("RPC_STATUS") int RpcServerInterfaceGroupInqBindings (@C("RPC_INTERFACE_GROUP") Addressable IfGroup, @C("RPC_BINDING_VECTOR**") Addressable BindingVector) {
        try {
            return (int)cfapi_h$constants$46.RpcServerInterfaceGroupInqBindings$MH().invokeExact(IfGroup.address(), BindingVector.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int PROTOCOL_NOT_LOADED() {
        return cfapi_h$constants$46.PROTOCOL_NOT_LOADED();
    }
    public static @C("int") int PROTOCOL_LOADED() {
        return cfapi_h$constants$46.PROTOCOL_LOADED();
    }
    public static @C("int") int PROTOCOL_ADDRESS_CHANGE() {
        return cfapi_h$constants$46.PROTOCOL_ADDRESS_CHANGE();
    }
    public static  MethodHandle I_RpcNegotiateTransferSyntax$MH() {
        return cfapi_h$constants$46.I_RpcNegotiateTransferSyntax$MH();
    }
    public static @C("RPC_STATUS") int I_RpcNegotiateTransferSyntax (@C("RPC_MESSAGE*") Addressable Message) {
        try {
            return (int)cfapi_h$constants$46.I_RpcNegotiateTransferSyntax$MH().invokeExact(Message.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcGetBuffer$MH() {
        return cfapi_h$constants$46.I_RpcGetBuffer$MH();
    }
    public static @C("RPC_STATUS") int I_RpcGetBuffer (@C("RPC_MESSAGE*") Addressable Message) {
        try {
            return (int)cfapi_h$constants$46.I_RpcGetBuffer$MH().invokeExact(Message.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcGetBufferWithObject$MH() {
        return cfapi_h$constants$46.I_RpcGetBufferWithObject$MH();
    }
    public static @C("RPC_STATUS") int I_RpcGetBufferWithObject (@C("RPC_MESSAGE*") Addressable Message, @C("UUID*") Addressable ObjectUuid) {
        try {
            return (int)cfapi_h$constants$46.I_RpcGetBufferWithObject$MH().invokeExact(Message.address(), ObjectUuid.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcSendReceive$MH() {
        return cfapi_h$constants$46.I_RpcSendReceive$MH();
    }
    public static @C("RPC_STATUS") int I_RpcSendReceive (@C("RPC_MESSAGE*") Addressable Message) {
        try {
            return (int)cfapi_h$constants$46.I_RpcSendReceive$MH().invokeExact(Message.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcFreeBuffer$MH() {
        return cfapi_h$constants$47.I_RpcFreeBuffer$MH();
    }
    public static @C("RPC_STATUS") int I_RpcFreeBuffer (@C("RPC_MESSAGE*") Addressable Message) {
        try {
            return (int)cfapi_h$constants$47.I_RpcFreeBuffer$MH().invokeExact(Message.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcSend$MH() {
        return cfapi_h$constants$47.I_RpcSend$MH();
    }
    public static @C("RPC_STATUS") int I_RpcSend (@C("PRPC_MESSAGE") Addressable Message) {
        try {
            return (int)cfapi_h$constants$47.I_RpcSend$MH().invokeExact(Message.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcReceive$MH() {
        return cfapi_h$constants$47.I_RpcReceive$MH();
    }
    public static @C("RPC_STATUS") int I_RpcReceive (@C("PRPC_MESSAGE") Addressable Message, @C("unsigned int") int Size) {
        try {
            return (int)cfapi_h$constants$47.I_RpcReceive$MH().invokeExact(Message.address(), Size);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcFreePipeBuffer$MH() {
        return cfapi_h$constants$47.I_RpcFreePipeBuffer$MH();
    }
    public static @C("RPC_STATUS") int I_RpcFreePipeBuffer (@C("RPC_MESSAGE*") Addressable Message) {
        try {
            return (int)cfapi_h$constants$47.I_RpcFreePipeBuffer$MH().invokeExact(Message.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcReallocPipeBuffer$MH() {
        return cfapi_h$constants$47.I_RpcReallocPipeBuffer$MH();
    }
    public static @C("RPC_STATUS") int I_RpcReallocPipeBuffer (@C("PRPC_MESSAGE") Addressable Message, @C("unsigned int") int NewSize) {
        try {
            return (int)cfapi_h$constants$47.I_RpcReallocPipeBuffer$MH().invokeExact(Message.address(), NewSize);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcRequestMutex$MH() {
        return cfapi_h$constants$47.I_RpcRequestMutex$MH();
    }
    public static void I_RpcRequestMutex (@C("I_RPC_MUTEX*") Addressable Mutex) {
        try {
            cfapi_h$constants$47.I_RpcRequestMutex$MH().invokeExact(Mutex.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcClearMutex$MH() {
        return cfapi_h$constants$47.I_RpcClearMutex$MH();
    }
    public static void I_RpcClearMutex (@C("I_RPC_MUTEX") Addressable Mutex) {
        try {
            cfapi_h$constants$47.I_RpcClearMutex$MH().invokeExact(Mutex.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcDeleteMutex$MH() {
        return cfapi_h$constants$47.I_RpcDeleteMutex$MH();
    }
    public static void I_RpcDeleteMutex (@C("I_RPC_MUTEX") Addressable Mutex) {
        try {
            cfapi_h$constants$47.I_RpcDeleteMutex$MH().invokeExact(Mutex.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcAllocate$MH() {
        return cfapi_h$constants$47.I_RpcAllocate$MH();
    }
    public static @C("void*") MemoryAddress I_RpcAllocate (@C("unsigned int") int Size) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$47.I_RpcAllocate$MH().invokeExact(Size);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcFree$MH() {
        return cfapi_h$constants$47.I_RpcFree$MH();
    }
    public static void I_RpcFree (@C("void*") Addressable Object) {
        try {
            cfapi_h$constants$47.I_RpcFree$MH().invokeExact(Object.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcFreeSystemHandleCollection$MH() {
        return cfapi_h$constants$47.I_RpcFreeSystemHandleCollection$MH();
    }
    public static @C("unsigned long") int I_RpcFreeSystemHandleCollection (@C("void*") Addressable CallObj, @C("unsigned long") int FreeFlags) {
        try {
            return (int)cfapi_h$constants$47.I_RpcFreeSystemHandleCollection$MH().invokeExact(CallObj.address(), FreeFlags);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcSetSystemHandle$MH() {
        return cfapi_h$constants$47.I_RpcSetSystemHandle$MH();
    }
    public static @C("RPC_STATUS") int I_RpcSetSystemHandle (@C("void*") Addressable Handle, @C("unsigned char") byte Type, @C("unsigned long") int AccessMask, @C("void*") Addressable CallObj, @C("unsigned long*") Addressable HandleIndex) {
        try {
            return (int)cfapi_h$constants$47.I_RpcSetSystemHandle$MH().invokeExact(Handle.address(), Type, AccessMask, CallObj.address(), HandleIndex.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcGetSystemHandle$MH() {
        return cfapi_h$constants$47.I_RpcGetSystemHandle$MH();
    }
    public static @C("RPC_STATUS") int I_RpcGetSystemHandle (@C("unsigned char*") Addressable pMemory, @C("unsigned char") byte Type, @C("unsigned long") int AccessMask, @C("unsigned long") int HandleIndex, @C("void*") Addressable CallObj) {
        try {
            return (int)cfapi_h$constants$47.I_RpcGetSystemHandle$MH().invokeExact(pMemory.address(), Type, AccessMask, HandleIndex, CallObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcFreeSystemHandle$MH() {
        return cfapi_h$constants$47.I_RpcFreeSystemHandle$MH();
    }
    public static void I_RpcFreeSystemHandle (@C("unsigned char") byte Type, @C("void*") Addressable Handle) {
        try {
            cfapi_h$constants$47.I_RpcFreeSystemHandle$MH().invokeExact(Type, Handle.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcPauseExecution$MH() {
        return cfapi_h$constants$47.I_RpcPauseExecution$MH();
    }
    public static void I_RpcPauseExecution (@C("unsigned long") int Milliseconds) {
        try {
            cfapi_h$constants$47.I_RpcPauseExecution$MH().invokeExact(Milliseconds);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcGetExtendedError$MH() {
        return cfapi_h$constants$47.I_RpcGetExtendedError$MH();
    }
    public static @C("RPC_STATUS") int I_RpcGetExtendedError () {
        try {
            return (int)cfapi_h$constants$47.I_RpcGetExtendedError$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int MarshalDirectionMarshal() {
        return cfapi_h$constants$47.MarshalDirectionMarshal();
    }
    public static @C("int") int MarshalDirectionUnmarshal() {
        return cfapi_h$constants$47.MarshalDirectionUnmarshal();
    }
    public static  MethodHandle I_RpcSystemHandleTypeSpecificWork$MH() {
        return cfapi_h$constants$47.I_RpcSystemHandleTypeSpecificWork$MH();
    }
    public static @C("RPC_STATUS") int I_RpcSystemHandleTypeSpecificWork (@C("void*") Addressable Handle, @C("unsigned char") byte ActualType, @C("unsigned char") byte IdlType, @C("LRPC_SYSTEM_HANDLE_MARSHAL_DIRECTION") int MarshalDirection) {
        try {
            return (int)cfapi_h$constants$47.I_RpcSystemHandleTypeSpecificWork$MH().invokeExact(Handle.address(), ActualType, IdlType, MarshalDirection);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcMonitorAssociation$MH() {
        return cfapi_h$constants$47.I_RpcMonitorAssociation$MH();
    }
    public static @C("RPC_STATUS") int I_RpcMonitorAssociation (@C("RPC_BINDING_HANDLE") Addressable Handle, @C("PRPC_RUNDOWN") Addressable RundownRoutine, @C("void*") Addressable Context) {
        try {
            return (int)cfapi_h$constants$47.I_RpcMonitorAssociation$MH().invokeExact(Handle.address(), RundownRoutine.address(), Context.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcStopMonitorAssociation$MH() {
        return cfapi_h$constants$47.I_RpcStopMonitorAssociation$MH();
    }
    public static @C("RPC_STATUS") int I_RpcStopMonitorAssociation (@C("RPC_BINDING_HANDLE") Addressable Handle) {
        try {
            return (int)cfapi_h$constants$47.I_RpcStopMonitorAssociation$MH().invokeExact(Handle.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcGetCurrentCallHandle$MH() {
        return cfapi_h$constants$47.I_RpcGetCurrentCallHandle$MH();
    }
    public static @C("RPC_BINDING_HANDLE") MemoryAddress I_RpcGetCurrentCallHandle () {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$47.I_RpcGetCurrentCallHandle$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcGetAssociationContext$MH() {
        return cfapi_h$constants$47.I_RpcGetAssociationContext$MH();
    }
    public static @C("RPC_STATUS") int I_RpcGetAssociationContext (@C("RPC_BINDING_HANDLE") Addressable BindingHandle, @C("void**") Addressable AssociationContext) {
        try {
            return (int)cfapi_h$constants$47.I_RpcGetAssociationContext$MH().invokeExact(BindingHandle.address(), AssociationContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcGetServerContextList$MH() {
        return cfapi_h$constants$47.I_RpcGetServerContextList$MH();
    }
    public static @C("void*") MemoryAddress I_RpcGetServerContextList (@C("RPC_BINDING_HANDLE") Addressable BindingHandle) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$47.I_RpcGetServerContextList$MH().invokeExact(BindingHandle.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcSetServerContextList$MH() {
        return cfapi_h$constants$47.I_RpcSetServerContextList$MH();
    }
    public static void I_RpcSetServerContextList (@C("RPC_BINDING_HANDLE") Addressable BindingHandle, @C("void*") Addressable ServerContextList) {
        try {
            cfapi_h$constants$47.I_RpcSetServerContextList$MH().invokeExact(BindingHandle.address(), ServerContextList.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcNsInterfaceExported$MH() {
        return cfapi_h$constants$47.I_RpcNsInterfaceExported$MH();
    }
    public static @C("RPC_STATUS") int I_RpcNsInterfaceExported (@C("unsigned long") int EntryNameSyntax, @C("unsigned short*") Addressable EntryName, @C("RPC_SERVER_INTERFACE*") Addressable RpcInterfaceInformation) {
        try {
            return (int)cfapi_h$constants$47.I_RpcNsInterfaceExported$MH().invokeExact(EntryNameSyntax, EntryName.address(), RpcInterfaceInformation.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcNsInterfaceUnexported$MH() {
        return cfapi_h$constants$47.I_RpcNsInterfaceUnexported$MH();
    }
    public static @C("RPC_STATUS") int I_RpcNsInterfaceUnexported (@C("unsigned long") int EntryNameSyntax, @C("unsigned short*") Addressable EntryName, @C("RPC_SERVER_INTERFACE*") Addressable RpcInterfaceInformation) {
        try {
            return (int)cfapi_h$constants$47.I_RpcNsInterfaceUnexported$MH().invokeExact(EntryNameSyntax, EntryName.address(), RpcInterfaceInformation.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcBindingToStaticStringBindingW$MH() {
        return cfapi_h$constants$47.I_RpcBindingToStaticStringBindingW$MH();
    }
    public static @C("RPC_STATUS") int I_RpcBindingToStaticStringBindingW (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("unsigned short**") Addressable StringBinding) {
        try {
            return (int)cfapi_h$constants$47.I_RpcBindingToStaticStringBindingW$MH().invokeExact(Binding.address(), StringBinding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcBindingInqSecurityContext$MH() {
        return cfapi_h$constants$47.I_RpcBindingInqSecurityContext$MH();
    }
    public static @C("RPC_STATUS") int I_RpcBindingInqSecurityContext (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("void**") Addressable SecurityContextHandle) {
        try {
            return (int)cfapi_h$constants$47.I_RpcBindingInqSecurityContext$MH().invokeExact(Binding.address(), SecurityContextHandle.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcBindingInqSecurityContextKeyInfo$MH() {
        return cfapi_h$constants$47.I_RpcBindingInqSecurityContextKeyInfo$MH();
    }
    public static @C("RPC_STATUS") int I_RpcBindingInqSecurityContextKeyInfo (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("void*") Addressable KeyInfo) {
        try {
            return (int)cfapi_h$constants$47.I_RpcBindingInqSecurityContextKeyInfo$MH().invokeExact(Binding.address(), KeyInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcBindingInqWireIdForSnego$MH() {
        return cfapi_h$constants$47.I_RpcBindingInqWireIdForSnego$MH();
    }
    public static @C("RPC_STATUS") int I_RpcBindingInqWireIdForSnego (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("unsigned char*") Addressable WireId) {
        try {
            return (int)cfapi_h$constants$47.I_RpcBindingInqWireIdForSnego$MH().invokeExact(Binding.address(), WireId.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcBindingInqMarshalledTargetInfo$MH() {
        return cfapi_h$constants$47.I_RpcBindingInqMarshalledTargetInfo$MH();
    }
    public static @C("RPC_STATUS") int I_RpcBindingInqMarshalledTargetInfo (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("unsigned long*") Addressable MarshalledTargetInfoSize, @C("RPC_CSTR*") Addressable MarshalledTargetInfo) {
        try {
            return (int)cfapi_h$constants$47.I_RpcBindingInqMarshalledTargetInfo$MH().invokeExact(Binding.address(), MarshalledTargetInfoSize.address(), MarshalledTargetInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcBindingInqLocalClientPID$MH() {
        return cfapi_h$constants$47.I_RpcBindingInqLocalClientPID$MH();
    }
    public static @C("RPC_STATUS") int I_RpcBindingInqLocalClientPID (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("unsigned long*") Addressable Pid) {
        try {
            return (int)cfapi_h$constants$47.I_RpcBindingInqLocalClientPID$MH().invokeExact(Binding.address(), Pid.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcBindingHandleToAsyncHandle$MH() {
        return cfapi_h$constants$47.I_RpcBindingHandleToAsyncHandle$MH();
    }
    public static @C("RPC_STATUS") int I_RpcBindingHandleToAsyncHandle (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("void**") Addressable AsyncHandle) {
        try {
            return (int)cfapi_h$constants$47.I_RpcBindingHandleToAsyncHandle$MH().invokeExact(Binding.address(), AsyncHandle.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcNsBindingSetEntryNameW$MH() {
        return cfapi_h$constants$47.I_RpcNsBindingSetEntryNameW$MH();
    }
    public static @C("RPC_STATUS") int I_RpcNsBindingSetEntryNameW (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("unsigned long") int EntryNameSyntax, @C("RPC_WSTR") Addressable EntryName) {
        try {
            return (int)cfapi_h$constants$47.I_RpcNsBindingSetEntryNameW$MH().invokeExact(Binding.address(), EntryNameSyntax, EntryName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcNsBindingSetEntryNameA$MH() {
        return cfapi_h$constants$47.I_RpcNsBindingSetEntryNameA$MH();
    }
    public static @C("RPC_STATUS") int I_RpcNsBindingSetEntryNameA (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("unsigned long") int EntryNameSyntax, @C("RPC_CSTR") Addressable EntryName) {
        try {
            return (int)cfapi_h$constants$47.I_RpcNsBindingSetEntryNameA$MH().invokeExact(Binding.address(), EntryNameSyntax, EntryName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerUseProtseqEp2A$MH() {
        return cfapi_h$constants$47.I_RpcServerUseProtseqEp2A$MH();
    }
    public static @C("RPC_STATUS") int I_RpcServerUseProtseqEp2A (@C("RPC_CSTR") Addressable NetworkAddress, @C("RPC_CSTR") Addressable Protseq, @C("unsigned int") int MaxCalls, @C("RPC_CSTR") Addressable Endpoint, @C("void*") Addressable SecurityDescriptor, @C("void*") Addressable Policy) {
        try {
            return (int)cfapi_h$constants$47.I_RpcServerUseProtseqEp2A$MH().invokeExact(NetworkAddress.address(), Protseq.address(), MaxCalls, Endpoint.address(), SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerUseProtseqEp2W$MH() {
        return cfapi_h$constants$47.I_RpcServerUseProtseqEp2W$MH();
    }
    public static @C("RPC_STATUS") int I_RpcServerUseProtseqEp2W (@C("RPC_WSTR") Addressable NetworkAddress, @C("RPC_WSTR") Addressable Protseq, @C("unsigned int") int MaxCalls, @C("RPC_WSTR") Addressable Endpoint, @C("void*") Addressable SecurityDescriptor, @C("void*") Addressable Policy) {
        try {
            return (int)cfapi_h$constants$47.I_RpcServerUseProtseqEp2W$MH().invokeExact(NetworkAddress.address(), Protseq.address(), MaxCalls, Endpoint.address(), SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerUseProtseq2W$MH() {
        return cfapi_h$constants$47.I_RpcServerUseProtseq2W$MH();
    }
    public static @C("RPC_STATUS") int I_RpcServerUseProtseq2W (@C("RPC_WSTR") Addressable NetworkAddress, @C("RPC_WSTR") Addressable Protseq, @C("unsigned int") int MaxCalls, @C("void*") Addressable SecurityDescriptor, @C("void*") Addressable Policy) {
        try {
            return (int)cfapi_h$constants$47.I_RpcServerUseProtseq2W$MH().invokeExact(NetworkAddress.address(), Protseq.address(), MaxCalls, SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerUseProtseq2A$MH() {
        return cfapi_h$constants$47.I_RpcServerUseProtseq2A$MH();
    }
    public static @C("RPC_STATUS") int I_RpcServerUseProtseq2A (@C("RPC_CSTR") Addressable NetworkAddress, @C("RPC_CSTR") Addressable Protseq, @C("unsigned int") int MaxCalls, @C("void*") Addressable SecurityDescriptor, @C("void*") Addressable Policy) {
        try {
            return (int)cfapi_h$constants$47.I_RpcServerUseProtseq2A$MH().invokeExact(NetworkAddress.address(), Protseq.address(), MaxCalls, SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerStartService$MH() {
        return cfapi_h$constants$47.I_RpcServerStartService$MH();
    }
    public static @C("RPC_STATUS") int I_RpcServerStartService (@C("RPC_WSTR") Addressable Protseq, @C("RPC_WSTR") Addressable Endpoint, @C("RPC_IF_HANDLE") Addressable IfSpec) {
        try {
            return (int)cfapi_h$constants$47.I_RpcServerStartService$MH().invokeExact(Protseq.address(), Endpoint.address(), IfSpec.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcBindingInqDynamicEndpointW$MH() {
        return cfapi_h$constants$47.I_RpcBindingInqDynamicEndpointW$MH();
    }
    public static @C("RPC_STATUS") int I_RpcBindingInqDynamicEndpointW (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("RPC_WSTR*") Addressable DynamicEndpoint) {
        try {
            return (int)cfapi_h$constants$47.I_RpcBindingInqDynamicEndpointW$MH().invokeExact(Binding.address(), DynamicEndpoint.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcBindingInqDynamicEndpointA$MH() {
        return cfapi_h$constants$47.I_RpcBindingInqDynamicEndpointA$MH();
    }
    public static @C("RPC_STATUS") int I_RpcBindingInqDynamicEndpointA (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("RPC_CSTR*") Addressable DynamicEndpoint) {
        try {
            return (int)cfapi_h$constants$47.I_RpcBindingInqDynamicEndpointA$MH().invokeExact(Binding.address(), DynamicEndpoint.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerCheckClientRestriction$MH() {
        return cfapi_h$constants$47.I_RpcServerCheckClientRestriction$MH();
    }
    public static @C("RPC_STATUS") int I_RpcServerCheckClientRestriction (@C("RPC_BINDING_HANDLE") Addressable Context) {
        try {
            return (int)cfapi_h$constants$47.I_RpcServerCheckClientRestriction$MH().invokeExact(Context.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcBindingInqTransportType$MH() {
        return cfapi_h$constants$47.I_RpcBindingInqTransportType$MH();
    }
    public static @C("RPC_STATUS") int I_RpcBindingInqTransportType (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("unsigned int*") Addressable Type) {
        try {
            return (int)cfapi_h$constants$47.I_RpcBindingInqTransportType$MH().invokeExact(Binding.address(), Type.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcIfInqTransferSyntaxes$MH() {
        return cfapi_h$constants$47.I_RpcIfInqTransferSyntaxes$MH();
    }
    public static @C("RPC_STATUS") int I_RpcIfInqTransferSyntaxes (@C("RPC_IF_HANDLE") Addressable RpcIfHandle, @C("RPC_TRANSFER_SYNTAX*") Addressable TransferSyntaxes, @C("unsigned int") int TransferSyntaxSize, @C("unsigned int*") Addressable TransferSyntaxCount) {
        try {
            return (int)cfapi_h$constants$47.I_RpcIfInqTransferSyntaxes$MH().invokeExact(RpcIfHandle.address(), TransferSyntaxes.address(), TransferSyntaxSize, TransferSyntaxCount.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_UuidCreate$MH() {
        return cfapi_h$constants$47.I_UuidCreate$MH();
    }
    public static @C("RPC_STATUS") int I_UuidCreate (@C("UUID*") Addressable Uuid) {
        try {
            return (int)cfapi_h$constants$47.I_UuidCreate$MH().invokeExact(Uuid.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcUninitializeNdrOle$MH() {
        return cfapi_h$constants$47.I_RpcUninitializeNdrOle$MH();
    }
    public static void I_RpcUninitializeNdrOle () {
        try {
            cfapi_h$constants$47.I_RpcUninitializeNdrOle$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcBindingCopy$MH() {
        return cfapi_h$constants$47.I_RpcBindingCopy$MH();
    }
    public static @C("RPC_STATUS") int I_RpcBindingCopy (@C("RPC_BINDING_HANDLE") Addressable SourceBinding, @C("RPC_BINDING_HANDLE*") Addressable DestinationBinding) {
        try {
            return (int)cfapi_h$constants$47.I_RpcBindingCopy$MH().invokeExact(SourceBinding.address(), DestinationBinding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcBindingIsClientLocal$MH() {
        return cfapi_h$constants$47.I_RpcBindingIsClientLocal$MH();
    }
    public static @C("RPC_STATUS") int I_RpcBindingIsClientLocal (@C("RPC_BINDING_HANDLE") Addressable BindingHandle, @C("unsigned int*") Addressable ClientLocalFlag) {
        try {
            return (int)cfapi_h$constants$47.I_RpcBindingIsClientLocal$MH().invokeExact(BindingHandle.address(), ClientLocalFlag.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcBindingInqConnId$MH() {
        return cfapi_h$constants$47.I_RpcBindingInqConnId$MH();
    }
    public static @C("RPC_STATUS") int I_RpcBindingInqConnId (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("void**") Addressable ConnId, @C("int*") Addressable pfFirstCall) {
        try {
            return (int)cfapi_h$constants$47.I_RpcBindingInqConnId$MH().invokeExact(Binding.address(), ConnId.address(), pfFirstCall.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcBindingCreateNP$MH() {
        return cfapi_h$constants$47.I_RpcBindingCreateNP$MH();
    }
    public static @C("RPC_STATUS") int I_RpcBindingCreateNP (@C("RPC_WSTR") Addressable ServerName, @C("RPC_WSTR") Addressable ServiceName, @C("RPC_WSTR") Addressable NetworkOptions, @C("RPC_BINDING_HANDLE*") Addressable Binding) {
        try {
            return (int)cfapi_h$constants$47.I_RpcBindingCreateNP$MH().invokeExact(ServerName.address(), ServiceName.address(), NetworkOptions.address(), Binding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcSsDontSerializeContext$MH() {
        return cfapi_h$constants$47.I_RpcSsDontSerializeContext$MH();
    }
    public static void I_RpcSsDontSerializeContext () {
        try {
            cfapi_h$constants$47.I_RpcSsDontSerializeContext$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcLaunchDatagramReceiveThread$MH() {
        return cfapi_h$constants$47.I_RpcLaunchDatagramReceiveThread$MH();
    }
    public static @C("RPC_STATUS") int I_RpcLaunchDatagramReceiveThread (@C("void*") Addressable pAddress) {
        try {
            return (int)cfapi_h$constants$47.I_RpcLaunchDatagramReceiveThread$MH().invokeExact(pAddress.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerRegisterForwardFunction$MH() {
        return cfapi_h$constants$47.I_RpcServerRegisterForwardFunction$MH();
    }
    public static @C("RPC_STATUS") int I_RpcServerRegisterForwardFunction (@C("RPC_STATUS(*)(UUID*,RPC_VERSION*,UUID*,unsigned char*,void**)") Addressable pForwardFunction) {
        try {
            return (int)cfapi_h$constants$47.I_RpcServerRegisterForwardFunction$MH().invokeExact(pForwardFunction.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerInqAddressChangeFn$MH() {
        return cfapi_h$constants$47.I_RpcServerInqAddressChangeFn$MH();
    }
    public static @C("void(*)(void*)") MemoryAddress I_RpcServerInqAddressChangeFn () {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$47.I_RpcServerInqAddressChangeFn$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerSetAddressChangeFn$MH() {
        return cfapi_h$constants$47.I_RpcServerSetAddressChangeFn$MH();
    }
    public static @C("RPC_STATUS") int I_RpcServerSetAddressChangeFn (@C("void(*)(void*)") Addressable pAddressChangeFn) {
        try {
            return (int)cfapi_h$constants$47.I_RpcServerSetAddressChangeFn$MH().invokeExact(pAddressChangeFn.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerInqLocalConnAddress$MH() {
        return cfapi_h$constants$47.I_RpcServerInqLocalConnAddress$MH();
    }
    public static @C("RPC_STATUS") int I_RpcServerInqLocalConnAddress (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("void*") Addressable Buffer, @C("unsigned long*") Addressable BufferSize, @C("unsigned long*") Addressable AddressFormat) {
        try {
            return (int)cfapi_h$constants$47.I_RpcServerInqLocalConnAddress$MH().invokeExact(Binding.address(), Buffer.address(), BufferSize.address(), AddressFormat.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerInqRemoteConnAddress$MH() {
        return cfapi_h$constants$47.I_RpcServerInqRemoteConnAddress$MH();
    }
    public static @C("RPC_STATUS") int I_RpcServerInqRemoteConnAddress (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("void*") Addressable Buffer, @C("unsigned long*") Addressable BufferSize, @C("unsigned long*") Addressable AddressFormat) {
        try {
            return (int)cfapi_h$constants$47.I_RpcServerInqRemoteConnAddress$MH().invokeExact(Binding.address(), Buffer.address(), BufferSize.address(), AddressFormat.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcSessionStrictContextHandle$MH() {
        return cfapi_h$constants$47.I_RpcSessionStrictContextHandle$MH();
    }
    public static void I_RpcSessionStrictContextHandle () {
        try {
            cfapi_h$constants$47.I_RpcSessionStrictContextHandle$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcTurnOnEEInfoPropagation$MH() {
        return cfapi_h$constants$47.I_RpcTurnOnEEInfoPropagation$MH();
    }
    public static @C("RPC_STATUS") int I_RpcTurnOnEEInfoPropagation () {
        try {
            return (int)cfapi_h$constants$47.I_RpcTurnOnEEInfoPropagation$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcConnectionInqSockBuffSize$MH() {
        return cfapi_h$constants$47.I_RpcConnectionInqSockBuffSize$MH();
    }
    public static @C("RPC_STATUS") int I_RpcConnectionInqSockBuffSize (@C("unsigned long*") Addressable RecvBuffSize, @C("unsigned long*") Addressable SendBuffSize) {
        try {
            return (int)cfapi_h$constants$47.I_RpcConnectionInqSockBuffSize$MH().invokeExact(RecvBuffSize.address(), SendBuffSize.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcConnectionSetSockBuffSize$MH() {
        return cfapi_h$constants$47.I_RpcConnectionSetSockBuffSize$MH();
    }
    public static @C("RPC_STATUS") int I_RpcConnectionSetSockBuffSize (@C("unsigned long") int RecvBuffSize, @C("unsigned long") int SendBuffSize) {
        try {
            return (int)cfapi_h$constants$47.I_RpcConnectionSetSockBuffSize$MH().invokeExact(RecvBuffSize, SendBuffSize);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerStartListening$MH() {
        return cfapi_h$constants$47.I_RpcServerStartListening$MH();
    }
    public static @C("RPC_STATUS") int I_RpcServerStartListening (@C("void*") Addressable hWnd) {
        try {
            return (int)cfapi_h$constants$47.I_RpcServerStartListening$MH().invokeExact(hWnd.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerStopListening$MH() {
        return cfapi_h$constants$47.I_RpcServerStopListening$MH();
    }
    public static @C("RPC_STATUS") int I_RpcServerStopListening () {
        try {
            return (int)cfapi_h$constants$47.I_RpcServerStopListening$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcBindingSetAsync$MH() {
        return cfapi_h$constants$47.I_RpcBindingSetAsync$MH();
    }
    public static @C("RPC_STATUS") int I_RpcBindingSetAsync (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("RPC_BLOCKING_FN") Addressable BlockingFn, @C("unsigned long") int ServerTid) {
        try {
            return (int)cfapi_h$constants$47.I_RpcBindingSetAsync$MH().invokeExact(Binding.address(), BlockingFn.address(), ServerTid);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcSetThreadParams$MH() {
        return cfapi_h$constants$47.I_RpcSetThreadParams$MH();
    }
    public static @C("RPC_STATUS") int I_RpcSetThreadParams (@C("int") int fClientFree, @C("void*") Addressable Context, @C("void*") Addressable hWndClient) {
        try {
            return (int)cfapi_h$constants$47.I_RpcSetThreadParams$MH().invokeExact(fClientFree, Context.address(), hWndClient.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcWindowProc$MH() {
        return cfapi_h$constants$47.I_RpcWindowProc$MH();
    }
    public static @C("unsigned int") int I_RpcWindowProc (@C("void*") Addressable hWnd, @C("unsigned int") int Message, @C("unsigned int") int wParam, @C("unsigned long") int lParam) {
        try {
            return (int)cfapi_h$constants$47.I_RpcWindowProc$MH().invokeExact(hWnd.address(), Message, wParam, lParam);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerUnregisterEndpointA$MH() {
        return cfapi_h$constants$47.I_RpcServerUnregisterEndpointA$MH();
    }
    public static @C("RPC_STATUS") int I_RpcServerUnregisterEndpointA (@C("RPC_CSTR") Addressable Protseq, @C("RPC_CSTR") Addressable Endpoint) {
        try {
            return (int)cfapi_h$constants$47.I_RpcServerUnregisterEndpointA$MH().invokeExact(Protseq.address(), Endpoint.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerUnregisterEndpointW$MH() {
        return cfapi_h$constants$47.I_RpcServerUnregisterEndpointW$MH();
    }
    public static @C("RPC_STATUS") int I_RpcServerUnregisterEndpointW (@C("RPC_WSTR") Addressable Protseq, @C("RPC_WSTR") Addressable Endpoint) {
        try {
            return (int)cfapi_h$constants$47.I_RpcServerUnregisterEndpointW$MH().invokeExact(Protseq.address(), Endpoint.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerInqTransportType$MH() {
        return cfapi_h$constants$47.I_RpcServerInqTransportType$MH();
    }
    public static @C("RPC_STATUS") int I_RpcServerInqTransportType (@C("unsigned int*") Addressable Type) {
        try {
            return (int)cfapi_h$constants$47.I_RpcServerInqTransportType$MH().invokeExact(Type.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcMapWin32Status$MH() {
        return cfapi_h$constants$47.I_RpcMapWin32Status$MH();
    }
    public static @C("long") int I_RpcMapWin32Status (@C("RPC_STATUS") int Status) {
        try {
            return (int)cfapi_h$constants$47.I_RpcMapWin32Status$MH().invokeExact(Status);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int RpcCurrentUniqueUser() {
        return cfapi_h$constants$47.RpcCurrentUniqueUser();
    }
    public static @C("int") int RpcBackEndConnectionAttempts() {
        return cfapi_h$constants$47.RpcBackEndConnectionAttempts();
    }
    public static @C("int") int RpcBackEndConnectionFailed() {
        return cfapi_h$constants$47.RpcBackEndConnectionFailed();
    }
    public static @C("int") int RpcRequestsPerSecond() {
        return cfapi_h$constants$47.RpcRequestsPerSecond();
    }
    public static @C("int") int RpcIncomingConnections() {
        return cfapi_h$constants$47.RpcIncomingConnections();
    }
    public static @C("int") int RpcIncomingBandwidth() {
        return cfapi_h$constants$47.RpcIncomingBandwidth();
    }
    public static @C("int") int RpcOutgoingBandwidth() {
        return cfapi_h$constants$47.RpcOutgoingBandwidth();
    }
    public static @C("int") int RpcAttemptedLbsDecisions() {
        return cfapi_h$constants$47.RpcAttemptedLbsDecisions();
    }
    public static @C("int") int RpcFailedLbsDecisions() {
        return cfapi_h$constants$47.RpcFailedLbsDecisions();
    }
    public static @C("int") int RpcAttemptedLbsMessages() {
        return cfapi_h$constants$47.RpcAttemptedLbsMessages();
    }
    public static @C("int") int RpcFailedLbsMessages() {
        return cfapi_h$constants$47.RpcFailedLbsMessages();
    }
    public static @C("int") int RpcLastCounter() {
        return cfapi_h$constants$47.RpcLastCounter();
    }
    public static  MethodHandle I_RpcProxyNewConnection$MH() {
        return cfapi_h$constants$47.I_RpcProxyNewConnection$MH();
    }
    public static @C("RPC_STATUS") int I_RpcProxyNewConnection (@C("unsigned long") int ConnectionType, @C("unsigned short*") Addressable ServerAddress, @C("unsigned short*") Addressable ServerPort, @C("unsigned short*") Addressable MinConnTimeout, @C("void*") Addressable ConnectionParameter, @C("RDR_CALLOUT_STATE*") Addressable CallOutState, @C("I_RpcProxyCallbackInterface*") Addressable ProxyCallbackInterface) {
        try {
            return (int)cfapi_h$constants$47.I_RpcProxyNewConnection$MH().invokeExact(ConnectionType, ServerAddress.address(), ServerPort.address(), MinConnTimeout.address(), ConnectionParameter.address(), CallOutState.address(), ProxyCallbackInterface.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcReplyToClientWithStatus$MH() {
        return cfapi_h$constants$47.I_RpcReplyToClientWithStatus$MH();
    }
    public static @C("RPC_STATUS") int I_RpcReplyToClientWithStatus (@C("void*") Addressable ConnectionParameter, @C("RPC_STATUS") int RpcStatus) {
        try {
            return (int)cfapi_h$constants$47.I_RpcReplyToClientWithStatus$MH().invokeExact(ConnectionParameter.address(), RpcStatus);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcRecordCalloutFailure$MH() {
        return cfapi_h$constants$47.I_RpcRecordCalloutFailure$MH();
    }
    public static void I_RpcRecordCalloutFailure (@C("RPC_STATUS") int RpcStatus, @C("RDR_CALLOUT_STATE*") Addressable CallOutState, @C("unsigned short*") Addressable DllName) {
        try {
            cfapi_h$constants$47.I_RpcRecordCalloutFailure$MH().invokeExact(RpcStatus, CallOutState.address(), DllName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcMgmtEnableDedicatedThreadPool$MH() {
        return cfapi_h$constants$47.I_RpcMgmtEnableDedicatedThreadPool$MH();
    }
    public static @C("RPC_STATUS") int I_RpcMgmtEnableDedicatedThreadPool () {
        try {
            return (int)cfapi_h$constants$47.I_RpcMgmtEnableDedicatedThreadPool$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcGetDefaultSD$MH() {
        return cfapi_h$constants$47.I_RpcGetDefaultSD$MH();
    }
    public static @C("RPC_STATUS") int I_RpcGetDefaultSD (@C("void**") Addressable ppSecurityDescriptor) {
        try {
            return (int)cfapi_h$constants$47.I_RpcGetDefaultSD$MH().invokeExact(ppSecurityDescriptor.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcOpenClientProcess$MH() {
        return cfapi_h$constants$47.I_RpcOpenClientProcess$MH();
    }
    public static @C("RPC_STATUS") int I_RpcOpenClientProcess (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("unsigned long") int DesiredAccess, @C("void**") Addressable ClientProcess) {
        try {
            return (int)cfapi_h$constants$47.I_RpcOpenClientProcess$MH().invokeExact(Binding.address(), DesiredAccess, ClientProcess.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcBindingIsServerLocal$MH() {
        return cfapi_h$constants$47.I_RpcBindingIsServerLocal$MH();
    }
    public static @C("RPC_STATUS") int I_RpcBindingIsServerLocal (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("unsigned int*") Addressable ServerLocalFlag) {
        try {
            return (int)cfapi_h$constants$47.I_RpcBindingIsServerLocal$MH().invokeExact(Binding.address(), ServerLocalFlag.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcBindingSetPrivateOption$MH() {
        return cfapi_h$constants$47.I_RpcBindingSetPrivateOption$MH();
    }
    public static @C("RPC_STATUS") int I_RpcBindingSetPrivateOption (@C("RPC_BINDING_HANDLE") Addressable hBinding, @C("unsigned long") int option, @C("ULONG_PTR") long optionValue) {
        try {
            return (int)cfapi_h$constants$47.I_RpcBindingSetPrivateOption$MH().invokeExact(hBinding.address(), option, optionValue);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerSubscribeForDisconnectNotification$MH() {
        return cfapi_h$constants$47.I_RpcServerSubscribeForDisconnectNotification$MH();
    }
    public static @C("RPC_STATUS") int I_RpcServerSubscribeForDisconnectNotification (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("void*") Addressable hEvent) {
        try {
            return (int)cfapi_h$constants$47.I_RpcServerSubscribeForDisconnectNotification$MH().invokeExact(Binding.address(), hEvent.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerGetAssociationID$MH() {
        return cfapi_h$constants$47.I_RpcServerGetAssociationID$MH();
    }
    public static @C("RPC_STATUS") int I_RpcServerGetAssociationID (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("unsigned long*") Addressable AssociationID) {
        try {
            return (int)cfapi_h$constants$47.I_RpcServerGetAssociationID$MH().invokeExact(Binding.address(), AssociationID.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerDisableExceptionFilter$MH() {
        return cfapi_h$constants$47.I_RpcServerDisableExceptionFilter$MH();
    }
    public static @C("long") int I_RpcServerDisableExceptionFilter () {
        try {
            return (int)cfapi_h$constants$47.I_RpcServerDisableExceptionFilter$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerSubscribeForDisconnectNotification2$MH() {
        return cfapi_h$constants$47.I_RpcServerSubscribeForDisconnectNotification2$MH();
    }
    public static @C("RPC_STATUS") int I_RpcServerSubscribeForDisconnectNotification2 (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("void*") Addressable hEvent, @C("UUID*") Addressable SubscriptionId) {
        try {
            return (int)cfapi_h$constants$47.I_RpcServerSubscribeForDisconnectNotification2$MH().invokeExact(Binding.address(), hEvent.address(), SubscriptionId.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcServerUnsubscribeForDisconnectNotification$MH() {
        return cfapi_h$constants$47.I_RpcServerUnsubscribeForDisconnectNotification$MH();
    }
    public static @C("RPC_STATUS") int I_RpcServerUnsubscribeForDisconnectNotification (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("UUID") MemorySegment SubscriptionId) {
        try {
            return (int)cfapi_h$constants$47.I_RpcServerUnsubscribeForDisconnectNotification$MH().invokeExact(Binding.address(), SubscriptionId);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsBindingExportA$MH() {
        return cfapi_h$constants$47.RpcNsBindingExportA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsBindingExportA (@C("unsigned long") int EntryNameSyntax, @C("RPC_CSTR") Addressable EntryName, @C("RPC_IF_HANDLE") Addressable IfSpec, @C("RPC_BINDING_VECTOR*") Addressable BindingVec, @C("UUID_VECTOR*") Addressable ObjectUuidVec) {
        try {
            return (int)cfapi_h$constants$47.RpcNsBindingExportA$MH().invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), BindingVec.address(), ObjectUuidVec.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsBindingUnexportA$MH() {
        return cfapi_h$constants$47.RpcNsBindingUnexportA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsBindingUnexportA (@C("unsigned long") int EntryNameSyntax, @C("RPC_CSTR") Addressable EntryName, @C("RPC_IF_HANDLE") Addressable IfSpec, @C("UUID_VECTOR*") Addressable ObjectUuidVec) {
        try {
            return (int)cfapi_h$constants$47.RpcNsBindingUnexportA$MH().invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), ObjectUuidVec.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsBindingExportW$MH() {
        return cfapi_h$constants$47.RpcNsBindingExportW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsBindingExportW (@C("unsigned long") int EntryNameSyntax, @C("RPC_WSTR") Addressable EntryName, @C("RPC_IF_HANDLE") Addressable IfSpec, @C("RPC_BINDING_VECTOR*") Addressable BindingVec, @C("UUID_VECTOR*") Addressable ObjectUuidVec) {
        try {
            return (int)cfapi_h$constants$47.RpcNsBindingExportW$MH().invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), BindingVec.address(), ObjectUuidVec.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsBindingUnexportW$MH() {
        return cfapi_h$constants$47.RpcNsBindingUnexportW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsBindingUnexportW (@C("unsigned long") int EntryNameSyntax, @C("RPC_WSTR") Addressable EntryName, @C("RPC_IF_HANDLE") Addressable IfSpec, @C("UUID_VECTOR*") Addressable ObjectUuidVec) {
        try {
            return (int)cfapi_h$constants$47.RpcNsBindingUnexportW$MH().invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), ObjectUuidVec.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsBindingExportPnPA$MH() {
        return cfapi_h$constants$47.RpcNsBindingExportPnPA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsBindingExportPnPA (@C("unsigned long") int EntryNameSyntax, @C("RPC_CSTR") Addressable EntryName, @C("RPC_IF_HANDLE") Addressable IfSpec, @C("UUID_VECTOR*") Addressable ObjectVector) {
        try {
            return (int)cfapi_h$constants$47.RpcNsBindingExportPnPA$MH().invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), ObjectVector.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsBindingUnexportPnPA$MH() {
        return cfapi_h$constants$47.RpcNsBindingUnexportPnPA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsBindingUnexportPnPA (@C("unsigned long") int EntryNameSyntax, @C("RPC_CSTR") Addressable EntryName, @C("RPC_IF_HANDLE") Addressable IfSpec, @C("UUID_VECTOR*") Addressable ObjectVector) {
        try {
            return (int)cfapi_h$constants$47.RpcNsBindingUnexportPnPA$MH().invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), ObjectVector.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsBindingExportPnPW$MH() {
        return cfapi_h$constants$47.RpcNsBindingExportPnPW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsBindingExportPnPW (@C("unsigned long") int EntryNameSyntax, @C("RPC_WSTR") Addressable EntryName, @C("RPC_IF_HANDLE") Addressable IfSpec, @C("UUID_VECTOR*") Addressable ObjectVector) {
        try {
            return (int)cfapi_h$constants$47.RpcNsBindingExportPnPW$MH().invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), ObjectVector.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsBindingUnexportPnPW$MH() {
        return cfapi_h$constants$47.RpcNsBindingUnexportPnPW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsBindingUnexportPnPW (@C("unsigned long") int EntryNameSyntax, @C("RPC_WSTR") Addressable EntryName, @C("RPC_IF_HANDLE") Addressable IfSpec, @C("UUID_VECTOR*") Addressable ObjectVector) {
        try {
            return (int)cfapi_h$constants$47.RpcNsBindingUnexportPnPW$MH().invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), ObjectVector.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsBindingLookupBeginA$MH() {
        return cfapi_h$constants$47.RpcNsBindingLookupBeginA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsBindingLookupBeginA (@C("unsigned long") int EntryNameSyntax, @C("RPC_CSTR") Addressable EntryName, @C("RPC_IF_HANDLE") Addressable IfSpec, @C("UUID*") Addressable ObjUuid, @C("unsigned long") int BindingMaxCount, @C("RPC_NS_HANDLE*") Addressable LookupContext) {
        try {
            return (int)cfapi_h$constants$47.RpcNsBindingLookupBeginA$MH().invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), ObjUuid.address(), BindingMaxCount, LookupContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsBindingLookupBeginW$MH() {
        return cfapi_h$constants$47.RpcNsBindingLookupBeginW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsBindingLookupBeginW (@C("unsigned long") int EntryNameSyntax, @C("RPC_WSTR") Addressable EntryName, @C("RPC_IF_HANDLE") Addressable IfSpec, @C("UUID*") Addressable ObjUuid, @C("unsigned long") int BindingMaxCount, @C("RPC_NS_HANDLE*") Addressable LookupContext) {
        try {
            return (int)cfapi_h$constants$47.RpcNsBindingLookupBeginW$MH().invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), ObjUuid.address(), BindingMaxCount, LookupContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsBindingLookupNext$MH() {
        return cfapi_h$constants$47.RpcNsBindingLookupNext$MH();
    }
    public static @C("RPC_STATUS") int RpcNsBindingLookupNext (@C("RPC_NS_HANDLE") Addressable LookupContext, @C("RPC_BINDING_VECTOR**") Addressable BindingVec) {
        try {
            return (int)cfapi_h$constants$47.RpcNsBindingLookupNext$MH().invokeExact(LookupContext.address(), BindingVec.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsBindingLookupDone$MH() {
        return cfapi_h$constants$47.RpcNsBindingLookupDone$MH();
    }
    public static @C("RPC_STATUS") int RpcNsBindingLookupDone (@C("RPC_NS_HANDLE*") Addressable LookupContext) {
        try {
            return (int)cfapi_h$constants$47.RpcNsBindingLookupDone$MH().invokeExact(LookupContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsGroupDeleteA$MH() {
        return cfapi_h$constants$47.RpcNsGroupDeleteA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsGroupDeleteA (@C("unsigned long") int GroupNameSyntax, @C("RPC_CSTR") Addressable GroupName) {
        try {
            return (int)cfapi_h$constants$47.RpcNsGroupDeleteA$MH().invokeExact(GroupNameSyntax, GroupName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsGroupMbrAddA$MH() {
        return cfapi_h$constants$47.RpcNsGroupMbrAddA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsGroupMbrAddA (@C("unsigned long") int GroupNameSyntax, @C("RPC_CSTR") Addressable GroupName, @C("unsigned long") int MemberNameSyntax, @C("RPC_CSTR") Addressable MemberName) {
        try {
            return (int)cfapi_h$constants$47.RpcNsGroupMbrAddA$MH().invokeExact(GroupNameSyntax, GroupName.address(), MemberNameSyntax, MemberName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsGroupMbrRemoveA$MH() {
        return cfapi_h$constants$47.RpcNsGroupMbrRemoveA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsGroupMbrRemoveA (@C("unsigned long") int GroupNameSyntax, @C("RPC_CSTR") Addressable GroupName, @C("unsigned long") int MemberNameSyntax, @C("RPC_CSTR") Addressable MemberName) {
        try {
            return (int)cfapi_h$constants$47.RpcNsGroupMbrRemoveA$MH().invokeExact(GroupNameSyntax, GroupName.address(), MemberNameSyntax, MemberName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsGroupMbrInqBeginA$MH() {
        return cfapi_h$constants$47.RpcNsGroupMbrInqBeginA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsGroupMbrInqBeginA (@C("unsigned long") int GroupNameSyntax, @C("RPC_CSTR") Addressable GroupName, @C("unsigned long") int MemberNameSyntax, @C("RPC_NS_HANDLE*") Addressable InquiryContext) {
        try {
            return (int)cfapi_h$constants$47.RpcNsGroupMbrInqBeginA$MH().invokeExact(GroupNameSyntax, GroupName.address(), MemberNameSyntax, InquiryContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsGroupMbrInqNextA$MH() {
        return cfapi_h$constants$47.RpcNsGroupMbrInqNextA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsGroupMbrInqNextA (@C("RPC_NS_HANDLE") Addressable InquiryContext, @C("RPC_CSTR*") Addressable MemberName) {
        try {
            return (int)cfapi_h$constants$47.RpcNsGroupMbrInqNextA$MH().invokeExact(InquiryContext.address(), MemberName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsGroupDeleteW$MH() {
        return cfapi_h$constants$47.RpcNsGroupDeleteW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsGroupDeleteW (@C("unsigned long") int GroupNameSyntax, @C("RPC_WSTR") Addressable GroupName) {
        try {
            return (int)cfapi_h$constants$47.RpcNsGroupDeleteW$MH().invokeExact(GroupNameSyntax, GroupName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsGroupMbrAddW$MH() {
        return cfapi_h$constants$47.RpcNsGroupMbrAddW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsGroupMbrAddW (@C("unsigned long") int GroupNameSyntax, @C("RPC_WSTR") Addressable GroupName, @C("unsigned long") int MemberNameSyntax, @C("RPC_WSTR") Addressable MemberName) {
        try {
            return (int)cfapi_h$constants$47.RpcNsGroupMbrAddW$MH().invokeExact(GroupNameSyntax, GroupName.address(), MemberNameSyntax, MemberName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsGroupMbrRemoveW$MH() {
        return cfapi_h$constants$47.RpcNsGroupMbrRemoveW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsGroupMbrRemoveW (@C("unsigned long") int GroupNameSyntax, @C("RPC_WSTR") Addressable GroupName, @C("unsigned long") int MemberNameSyntax, @C("RPC_WSTR") Addressable MemberName) {
        try {
            return (int)cfapi_h$constants$47.RpcNsGroupMbrRemoveW$MH().invokeExact(GroupNameSyntax, GroupName.address(), MemberNameSyntax, MemberName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsGroupMbrInqBeginW$MH() {
        return cfapi_h$constants$47.RpcNsGroupMbrInqBeginW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsGroupMbrInqBeginW (@C("unsigned long") int GroupNameSyntax, @C("RPC_WSTR") Addressable GroupName, @C("unsigned long") int MemberNameSyntax, @C("RPC_NS_HANDLE*") Addressable InquiryContext) {
        try {
            return (int)cfapi_h$constants$47.RpcNsGroupMbrInqBeginW$MH().invokeExact(GroupNameSyntax, GroupName.address(), MemberNameSyntax, InquiryContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsGroupMbrInqNextW$MH() {
        return cfapi_h$constants$47.RpcNsGroupMbrInqNextW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsGroupMbrInqNextW (@C("RPC_NS_HANDLE") Addressable InquiryContext, @C("RPC_WSTR*") Addressable MemberName) {
        try {
            return (int)cfapi_h$constants$47.RpcNsGroupMbrInqNextW$MH().invokeExact(InquiryContext.address(), MemberName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsGroupMbrInqDone$MH() {
        return cfapi_h$constants$47.RpcNsGroupMbrInqDone$MH();
    }
    public static @C("RPC_STATUS") int RpcNsGroupMbrInqDone (@C("RPC_NS_HANDLE*") Addressable InquiryContext) {
        try {
            return (int)cfapi_h$constants$47.RpcNsGroupMbrInqDone$MH().invokeExact(InquiryContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsProfileDeleteA$MH() {
        return cfapi_h$constants$47.RpcNsProfileDeleteA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsProfileDeleteA (@C("unsigned long") int ProfileNameSyntax, @C("RPC_CSTR") Addressable ProfileName) {
        try {
            return (int)cfapi_h$constants$47.RpcNsProfileDeleteA$MH().invokeExact(ProfileNameSyntax, ProfileName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsProfileEltAddA$MH() {
        return cfapi_h$constants$47.RpcNsProfileEltAddA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsProfileEltAddA (@C("unsigned long") int ProfileNameSyntax, @C("RPC_CSTR") Addressable ProfileName, @C("RPC_IF_ID*") Addressable IfId, @C("unsigned long") int MemberNameSyntax, @C("RPC_CSTR") Addressable MemberName, @C("unsigned long") int Priority, @C("RPC_CSTR") Addressable Annotation) {
        try {
            return (int)cfapi_h$constants$47.RpcNsProfileEltAddA$MH().invokeExact(ProfileNameSyntax, ProfileName.address(), IfId.address(), MemberNameSyntax, MemberName.address(), Priority, Annotation.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsProfileEltRemoveA$MH() {
        return cfapi_h$constants$47.RpcNsProfileEltRemoveA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsProfileEltRemoveA (@C("unsigned long") int ProfileNameSyntax, @C("RPC_CSTR") Addressable ProfileName, @C("RPC_IF_ID*") Addressable IfId, @C("unsigned long") int MemberNameSyntax, @C("RPC_CSTR") Addressable MemberName) {
        try {
            return (int)cfapi_h$constants$47.RpcNsProfileEltRemoveA$MH().invokeExact(ProfileNameSyntax, ProfileName.address(), IfId.address(), MemberNameSyntax, MemberName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsProfileEltInqBeginA$MH() {
        return cfapi_h$constants$47.RpcNsProfileEltInqBeginA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsProfileEltInqBeginA (@C("unsigned long") int ProfileNameSyntax, @C("RPC_CSTR") Addressable ProfileName, @C("unsigned long") int InquiryType, @C("RPC_IF_ID*") Addressable IfId, @C("unsigned long") int VersOption, @C("unsigned long") int MemberNameSyntax, @C("RPC_CSTR") Addressable MemberName, @C("RPC_NS_HANDLE*") Addressable InquiryContext) {
        try {
            return (int)cfapi_h$constants$47.RpcNsProfileEltInqBeginA$MH().invokeExact(ProfileNameSyntax, ProfileName.address(), InquiryType, IfId.address(), VersOption, MemberNameSyntax, MemberName.address(), InquiryContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsProfileEltInqNextA$MH() {
        return cfapi_h$constants$47.RpcNsProfileEltInqNextA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsProfileEltInqNextA (@C("RPC_NS_HANDLE") Addressable InquiryContext, @C("RPC_IF_ID*") Addressable IfId, @C("RPC_CSTR*") Addressable MemberName, @C("unsigned long*") Addressable Priority, @C("RPC_CSTR*") Addressable Annotation) {
        try {
            return (int)cfapi_h$constants$47.RpcNsProfileEltInqNextA$MH().invokeExact(InquiryContext.address(), IfId.address(), MemberName.address(), Priority.address(), Annotation.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsProfileDeleteW$MH() {
        return cfapi_h$constants$47.RpcNsProfileDeleteW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsProfileDeleteW (@C("unsigned long") int ProfileNameSyntax, @C("RPC_WSTR") Addressable ProfileName) {
        try {
            return (int)cfapi_h$constants$47.RpcNsProfileDeleteW$MH().invokeExact(ProfileNameSyntax, ProfileName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsProfileEltAddW$MH() {
        return cfapi_h$constants$47.RpcNsProfileEltAddW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsProfileEltAddW (@C("unsigned long") int ProfileNameSyntax, @C("RPC_WSTR") Addressable ProfileName, @C("RPC_IF_ID*") Addressable IfId, @C("unsigned long") int MemberNameSyntax, @C("RPC_WSTR") Addressable MemberName, @C("unsigned long") int Priority, @C("RPC_WSTR") Addressable Annotation) {
        try {
            return (int)cfapi_h$constants$47.RpcNsProfileEltAddW$MH().invokeExact(ProfileNameSyntax, ProfileName.address(), IfId.address(), MemberNameSyntax, MemberName.address(), Priority, Annotation.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsProfileEltRemoveW$MH() {
        return cfapi_h$constants$47.RpcNsProfileEltRemoveW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsProfileEltRemoveW (@C("unsigned long") int ProfileNameSyntax, @C("RPC_WSTR") Addressable ProfileName, @C("RPC_IF_ID*") Addressable IfId, @C("unsigned long") int MemberNameSyntax, @C("RPC_WSTR") Addressable MemberName) {
        try {
            return (int)cfapi_h$constants$47.RpcNsProfileEltRemoveW$MH().invokeExact(ProfileNameSyntax, ProfileName.address(), IfId.address(), MemberNameSyntax, MemberName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsProfileEltInqBeginW$MH() {
        return cfapi_h$constants$47.RpcNsProfileEltInqBeginW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsProfileEltInqBeginW (@C("unsigned long") int ProfileNameSyntax, @C("RPC_WSTR") Addressable ProfileName, @C("unsigned long") int InquiryType, @C("RPC_IF_ID*") Addressable IfId, @C("unsigned long") int VersOption, @C("unsigned long") int MemberNameSyntax, @C("RPC_WSTR") Addressable MemberName, @C("RPC_NS_HANDLE*") Addressable InquiryContext) {
        try {
            return (int)cfapi_h$constants$47.RpcNsProfileEltInqBeginW$MH().invokeExact(ProfileNameSyntax, ProfileName.address(), InquiryType, IfId.address(), VersOption, MemberNameSyntax, MemberName.address(), InquiryContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsProfileEltInqNextW$MH() {
        return cfapi_h$constants$47.RpcNsProfileEltInqNextW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsProfileEltInqNextW (@C("RPC_NS_HANDLE") Addressable InquiryContext, @C("RPC_IF_ID*") Addressable IfId, @C("RPC_WSTR*") Addressable MemberName, @C("unsigned long*") Addressable Priority, @C("RPC_WSTR*") Addressable Annotation) {
        try {
            return (int)cfapi_h$constants$47.RpcNsProfileEltInqNextW$MH().invokeExact(InquiryContext.address(), IfId.address(), MemberName.address(), Priority.address(), Annotation.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsProfileEltInqDone$MH() {
        return cfapi_h$constants$47.RpcNsProfileEltInqDone$MH();
    }
    public static @C("RPC_STATUS") int RpcNsProfileEltInqDone (@C("RPC_NS_HANDLE*") Addressable InquiryContext) {
        try {
            return (int)cfapi_h$constants$47.RpcNsProfileEltInqDone$MH().invokeExact(InquiryContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsEntryObjectInqBeginA$MH() {
        return cfapi_h$constants$47.RpcNsEntryObjectInqBeginA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsEntryObjectInqBeginA (@C("unsigned long") int EntryNameSyntax, @C("RPC_CSTR") Addressable EntryName, @C("RPC_NS_HANDLE*") Addressable InquiryContext) {
        try {
            return (int)cfapi_h$constants$47.RpcNsEntryObjectInqBeginA$MH().invokeExact(EntryNameSyntax, EntryName.address(), InquiryContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsEntryObjectInqBeginW$MH() {
        return cfapi_h$constants$47.RpcNsEntryObjectInqBeginW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsEntryObjectInqBeginW (@C("unsigned long") int EntryNameSyntax, @C("RPC_WSTR") Addressable EntryName, @C("RPC_NS_HANDLE*") Addressable InquiryContext) {
        try {
            return (int)cfapi_h$constants$47.RpcNsEntryObjectInqBeginW$MH().invokeExact(EntryNameSyntax, EntryName.address(), InquiryContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsEntryObjectInqNext$MH() {
        return cfapi_h$constants$47.RpcNsEntryObjectInqNext$MH();
    }
    public static @C("RPC_STATUS") int RpcNsEntryObjectInqNext (@C("RPC_NS_HANDLE") Addressable InquiryContext, @C("UUID*") Addressable ObjUuid) {
        try {
            return (int)cfapi_h$constants$47.RpcNsEntryObjectInqNext$MH().invokeExact(InquiryContext.address(), ObjUuid.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsEntryObjectInqDone$MH() {
        return cfapi_h$constants$47.RpcNsEntryObjectInqDone$MH();
    }
    public static @C("RPC_STATUS") int RpcNsEntryObjectInqDone (@C("RPC_NS_HANDLE*") Addressable InquiryContext) {
        try {
            return (int)cfapi_h$constants$47.RpcNsEntryObjectInqDone$MH().invokeExact(InquiryContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsEntryExpandNameA$MH() {
        return cfapi_h$constants$47.RpcNsEntryExpandNameA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsEntryExpandNameA (@C("unsigned long") int EntryNameSyntax, @C("RPC_CSTR") Addressable EntryName, @C("RPC_CSTR*") Addressable ExpandedName) {
        try {
            return (int)cfapi_h$constants$47.RpcNsEntryExpandNameA$MH().invokeExact(EntryNameSyntax, EntryName.address(), ExpandedName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsMgmtBindingUnexportA$MH() {
        return cfapi_h$constants$47.RpcNsMgmtBindingUnexportA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsMgmtBindingUnexportA (@C("unsigned long") int EntryNameSyntax, @C("RPC_CSTR") Addressable EntryName, @C("RPC_IF_ID*") Addressable IfId, @C("unsigned long") int VersOption, @C("UUID_VECTOR*") Addressable ObjectUuidVec) {
        try {
            return (int)cfapi_h$constants$47.RpcNsMgmtBindingUnexportA$MH().invokeExact(EntryNameSyntax, EntryName.address(), IfId.address(), VersOption, ObjectUuidVec.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsMgmtEntryCreateA$MH() {
        return cfapi_h$constants$47.RpcNsMgmtEntryCreateA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsMgmtEntryCreateA (@C("unsigned long") int EntryNameSyntax, @C("RPC_CSTR") Addressable EntryName) {
        try {
            return (int)cfapi_h$constants$47.RpcNsMgmtEntryCreateA$MH().invokeExact(EntryNameSyntax, EntryName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsMgmtEntryDeleteA$MH() {
        return cfapi_h$constants$47.RpcNsMgmtEntryDeleteA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsMgmtEntryDeleteA (@C("unsigned long") int EntryNameSyntax, @C("RPC_CSTR") Addressable EntryName) {
        try {
            return (int)cfapi_h$constants$47.RpcNsMgmtEntryDeleteA$MH().invokeExact(EntryNameSyntax, EntryName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsMgmtEntryInqIfIdsA$MH() {
        return cfapi_h$constants$47.RpcNsMgmtEntryInqIfIdsA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsMgmtEntryInqIfIdsA (@C("unsigned long") int EntryNameSyntax, @C("RPC_CSTR") Addressable EntryName, @C("RPC_IF_ID_VECTOR**") Addressable IfIdVec) {
        try {
            return (int)cfapi_h$constants$47.RpcNsMgmtEntryInqIfIdsA$MH().invokeExact(EntryNameSyntax, EntryName.address(), IfIdVec.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsMgmtHandleSetExpAge$MH() {
        return cfapi_h$constants$47.RpcNsMgmtHandleSetExpAge$MH();
    }
    public static @C("RPC_STATUS") int RpcNsMgmtHandleSetExpAge (@C("RPC_NS_HANDLE") Addressable NsHandle, @C("unsigned long") int ExpirationAge) {
        try {
            return (int)cfapi_h$constants$47.RpcNsMgmtHandleSetExpAge$MH().invokeExact(NsHandle.address(), ExpirationAge);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsMgmtInqExpAge$MH() {
        return cfapi_h$constants$47.RpcNsMgmtInqExpAge$MH();
    }
    public static @C("RPC_STATUS") int RpcNsMgmtInqExpAge (@C("unsigned long*") Addressable ExpirationAge) {
        try {
            return (int)cfapi_h$constants$47.RpcNsMgmtInqExpAge$MH().invokeExact(ExpirationAge.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsMgmtSetExpAge$MH() {
        return cfapi_h$constants$47.RpcNsMgmtSetExpAge$MH();
    }
    public static @C("RPC_STATUS") int RpcNsMgmtSetExpAge (@C("unsigned long") int ExpirationAge) {
        try {
            return (int)cfapi_h$constants$47.RpcNsMgmtSetExpAge$MH().invokeExact(ExpirationAge);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsEntryExpandNameW$MH() {
        return cfapi_h$constants$47.RpcNsEntryExpandNameW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsEntryExpandNameW (@C("unsigned long") int EntryNameSyntax, @C("RPC_WSTR") Addressable EntryName, @C("RPC_WSTR*") Addressable ExpandedName) {
        try {
            return (int)cfapi_h$constants$47.RpcNsEntryExpandNameW$MH().invokeExact(EntryNameSyntax, EntryName.address(), ExpandedName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsMgmtBindingUnexportW$MH() {
        return cfapi_h$constants$47.RpcNsMgmtBindingUnexportW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsMgmtBindingUnexportW (@C("unsigned long") int EntryNameSyntax, @C("RPC_WSTR") Addressable EntryName, @C("RPC_IF_ID*") Addressable IfId, @C("unsigned long") int VersOption, @C("UUID_VECTOR*") Addressable ObjectUuidVec) {
        try {
            return (int)cfapi_h$constants$47.RpcNsMgmtBindingUnexportW$MH().invokeExact(EntryNameSyntax, EntryName.address(), IfId.address(), VersOption, ObjectUuidVec.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsMgmtEntryCreateW$MH() {
        return cfapi_h$constants$47.RpcNsMgmtEntryCreateW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsMgmtEntryCreateW (@C("unsigned long") int EntryNameSyntax, @C("RPC_WSTR") Addressable EntryName) {
        try {
            return (int)cfapi_h$constants$47.RpcNsMgmtEntryCreateW$MH().invokeExact(EntryNameSyntax, EntryName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsMgmtEntryDeleteW$MH() {
        return cfapi_h$constants$47.RpcNsMgmtEntryDeleteW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsMgmtEntryDeleteW (@C("unsigned long") int EntryNameSyntax, @C("RPC_WSTR") Addressable EntryName) {
        try {
            return (int)cfapi_h$constants$47.RpcNsMgmtEntryDeleteW$MH().invokeExact(EntryNameSyntax, EntryName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsMgmtEntryInqIfIdsW$MH() {
        return cfapi_h$constants$47.RpcNsMgmtEntryInqIfIdsW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsMgmtEntryInqIfIdsW (@C("unsigned long") int EntryNameSyntax, @C("RPC_WSTR") Addressable EntryName, @C("RPC_IF_ID_VECTOR**") Addressable IfIdVec) {
        try {
            return (int)cfapi_h$constants$47.RpcNsMgmtEntryInqIfIdsW$MH().invokeExact(EntryNameSyntax, EntryName.address(), IfIdVec.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsBindingImportBeginA$MH() {
        return cfapi_h$constants$47.RpcNsBindingImportBeginA$MH();
    }
    public static @C("RPC_STATUS") int RpcNsBindingImportBeginA (@C("unsigned long") int EntryNameSyntax, @C("RPC_CSTR") Addressable EntryName, @C("RPC_IF_HANDLE") Addressable IfSpec, @C("UUID*") Addressable ObjUuid, @C("RPC_NS_HANDLE*") Addressable ImportContext) {
        try {
            return (int)cfapi_h$constants$47.RpcNsBindingImportBeginA$MH().invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), ObjUuid.address(), ImportContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsBindingImportBeginW$MH() {
        return cfapi_h$constants$47.RpcNsBindingImportBeginW$MH();
    }
    public static @C("RPC_STATUS") int RpcNsBindingImportBeginW (@C("unsigned long") int EntryNameSyntax, @C("RPC_WSTR") Addressable EntryName, @C("RPC_IF_HANDLE") Addressable IfSpec, @C("UUID*") Addressable ObjUuid, @C("RPC_NS_HANDLE*") Addressable ImportContext) {
        try {
            return (int)cfapi_h$constants$47.RpcNsBindingImportBeginW$MH().invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), ObjUuid.address(), ImportContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsBindingImportNext$MH() {
        return cfapi_h$constants$47.RpcNsBindingImportNext$MH();
    }
    public static @C("RPC_STATUS") int RpcNsBindingImportNext (@C("RPC_NS_HANDLE") Addressable ImportContext, @C("RPC_BINDING_HANDLE*") Addressable Binding) {
        try {
            return (int)cfapi_h$constants$47.RpcNsBindingImportNext$MH().invokeExact(ImportContext.address(), Binding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsBindingImportDone$MH() {
        return cfapi_h$constants$47.RpcNsBindingImportDone$MH();
    }
    public static @C("RPC_STATUS") int RpcNsBindingImportDone (@C("RPC_NS_HANDLE*") Addressable ImportContext) {
        try {
            return (int)cfapi_h$constants$47.RpcNsBindingImportDone$MH().invokeExact(ImportContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcNsBindingSelect$MH() {
        return cfapi_h$constants$47.RpcNsBindingSelect$MH();
    }
    public static @C("RPC_STATUS") int RpcNsBindingSelect (@C("RPC_BINDING_VECTOR*") Addressable BindingVec, @C("RPC_BINDING_HANDLE*") Addressable Binding) {
        try {
            return (int)cfapi_h$constants$47.RpcNsBindingSelect$MH().invokeExact(BindingVec.address(), Binding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int RpcNotificationTypeNone() {
        return cfapi_h$constants$47.RpcNotificationTypeNone();
    }
    public static @C("int") int RpcNotificationTypeEvent() {
        return cfapi_h$constants$47.RpcNotificationTypeEvent();
    }
    public static @C("int") int RpcNotificationTypeApc() {
        return cfapi_h$constants$47.RpcNotificationTypeApc();
    }
    public static @C("int") int RpcNotificationTypeIoc() {
        return cfapi_h$constants$47.RpcNotificationTypeIoc();
    }
    public static @C("int") int RpcNotificationTypeHwnd() {
        return cfapi_h$constants$47.RpcNotificationTypeHwnd();
    }
    public static @C("int") int RpcNotificationTypeCallback() {
        return cfapi_h$constants$47.RpcNotificationTypeCallback();
    }
    public static @C("int") int RpcCallComplete() {
        return cfapi_h$constants$47.RpcCallComplete();
    }
    public static @C("int") int RpcSendComplete() {
        return cfapi_h$constants$47.RpcSendComplete();
    }
    public static @C("int") int RpcReceiveComplete() {
        return cfapi_h$constants$47.RpcReceiveComplete();
    }
    public static @C("int") int RpcClientDisconnect() {
        return cfapi_h$constants$47.RpcClientDisconnect();
    }
    public static @C("int") int RpcClientCancel() {
        return cfapi_h$constants$47.RpcClientCancel();
    }
    public static  MethodHandle RpcAsyncRegisterInfo$MH() {
        return cfapi_h$constants$47.RpcAsyncRegisterInfo$MH();
    }
    public static @C("RPC_STATUS") int RpcAsyncRegisterInfo (@C("PRPC_ASYNC_STATE") Addressable pAsync) {
        try {
            return (int)cfapi_h$constants$47.RpcAsyncRegisterInfo$MH().invokeExact(pAsync.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcAsyncInitializeHandle$MH() {
        return cfapi_h$constants$47.RpcAsyncInitializeHandle$MH();
    }
    public static @C("RPC_STATUS") int RpcAsyncInitializeHandle (@C("PRPC_ASYNC_STATE") Addressable pAsync, @C("unsigned int") int Size) {
        try {
            return (int)cfapi_h$constants$47.RpcAsyncInitializeHandle$MH().invokeExact(pAsync.address(), Size);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcAsyncGetCallStatus$MH() {
        return cfapi_h$constants$47.RpcAsyncGetCallStatus$MH();
    }
    public static @C("RPC_STATUS") int RpcAsyncGetCallStatus (@C("PRPC_ASYNC_STATE") Addressable pAsync) {
        try {
            return (int)cfapi_h$constants$47.RpcAsyncGetCallStatus$MH().invokeExact(pAsync.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcAsyncCompleteCall$MH() {
        return cfapi_h$constants$47.RpcAsyncCompleteCall$MH();
    }
    public static @C("RPC_STATUS") int RpcAsyncCompleteCall (@C("PRPC_ASYNC_STATE") Addressable pAsync, @C("void*") Addressable Reply) {
        try {
            return (int)cfapi_h$constants$47.RpcAsyncCompleteCall$MH().invokeExact(pAsync.address(), Reply.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcAsyncAbortCall$MH() {
        return cfapi_h$constants$47.RpcAsyncAbortCall$MH();
    }
    public static @C("RPC_STATUS") int RpcAsyncAbortCall (@C("PRPC_ASYNC_STATE") Addressable pAsync, @C("unsigned long") int ExceptionCode) {
        try {
            return (int)cfapi_h$constants$47.RpcAsyncAbortCall$MH().invokeExact(pAsync.address(), ExceptionCode);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcAsyncCancelCall$MH() {
        return cfapi_h$constants$47.RpcAsyncCancelCall$MH();
    }
    public static @C("RPC_STATUS") int RpcAsyncCancelCall (@C("PRPC_ASYNC_STATE") Addressable pAsync, @C("BOOL") int fAbort) {
        try {
            return (int)cfapi_h$constants$47.RpcAsyncCancelCall$MH().invokeExact(pAsync.address(), fAbort);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int eeptAnsiString() {
        return cfapi_h$constants$47.eeptAnsiString();
    }
    public static @C("int") int eeptUnicodeString() {
        return cfapi_h$constants$47.eeptUnicodeString();
    }
    public static @C("int") int eeptLongVal() {
        return cfapi_h$constants$47.eeptLongVal();
    }
    public static @C("int") int eeptShortVal() {
        return cfapi_h$constants$47.eeptShortVal();
    }
    public static @C("int") int eeptPointerVal() {
        return cfapi_h$constants$47.eeptPointerVal();
    }
    public static @C("int") int eeptNone() {
        return cfapi_h$constants$47.eeptNone();
    }
    public static @C("int") int eeptBinary() {
        return cfapi_h$constants$47.eeptBinary();
    }
    public static  MethodHandle RpcErrorStartEnumeration$MH() {
        return cfapi_h$constants$47.RpcErrorStartEnumeration$MH();
    }
    public static @C("RPC_STATUS") int RpcErrorStartEnumeration (@C("RPC_ERROR_ENUM_HANDLE*") Addressable EnumHandle) {
        try {
            return (int)cfapi_h$constants$47.RpcErrorStartEnumeration$MH().invokeExact(EnumHandle.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcErrorGetNextRecord$MH() {
        return cfapi_h$constants$47.RpcErrorGetNextRecord$MH();
    }
    public static @C("RPC_STATUS") int RpcErrorGetNextRecord (@C("RPC_ERROR_ENUM_HANDLE*") Addressable EnumHandle, @C("BOOL") int CopyStrings, @C("RPC_EXTENDED_ERROR_INFO*") Addressable ErrorInfo) {
        try {
            return (int)cfapi_h$constants$47.RpcErrorGetNextRecord$MH().invokeExact(EnumHandle.address(), CopyStrings, ErrorInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcErrorEndEnumeration$MH() {
        return cfapi_h$constants$47.RpcErrorEndEnumeration$MH();
    }
    public static @C("RPC_STATUS") int RpcErrorEndEnumeration (@C("RPC_ERROR_ENUM_HANDLE*") Addressable EnumHandle) {
        try {
            return (int)cfapi_h$constants$47.RpcErrorEndEnumeration$MH().invokeExact(EnumHandle.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcErrorResetEnumeration$MH() {
        return cfapi_h$constants$47.RpcErrorResetEnumeration$MH();
    }
    public static @C("RPC_STATUS") int RpcErrorResetEnumeration (@C("RPC_ERROR_ENUM_HANDLE*") Addressable EnumHandle) {
        try {
            return (int)cfapi_h$constants$47.RpcErrorResetEnumeration$MH().invokeExact(EnumHandle.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcErrorGetNumberOfRecords$MH() {
        return cfapi_h$constants$47.RpcErrorGetNumberOfRecords$MH();
    }
    public static @C("RPC_STATUS") int RpcErrorGetNumberOfRecords (@C("RPC_ERROR_ENUM_HANDLE*") Addressable EnumHandle, @C("int*") Addressable Records) {
        try {
            return (int)cfapi_h$constants$47.RpcErrorGetNumberOfRecords$MH().invokeExact(EnumHandle.address(), Records.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcErrorSaveErrorInfo$MH() {
        return cfapi_h$constants$47.RpcErrorSaveErrorInfo$MH();
    }
    public static @C("RPC_STATUS") int RpcErrorSaveErrorInfo (@C("RPC_ERROR_ENUM_HANDLE*") Addressable EnumHandle, @C("PVOID*") Addressable ErrorBlob, @C("size_t*") Addressable BlobSize) {
        try {
            return (int)cfapi_h$constants$47.RpcErrorSaveErrorInfo$MH().invokeExact(EnumHandle.address(), ErrorBlob.address(), BlobSize.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcErrorLoadErrorInfo$MH() {
        return cfapi_h$constants$47.RpcErrorLoadErrorInfo$MH();
    }
    public static @C("RPC_STATUS") int RpcErrorLoadErrorInfo (@C("PVOID") Addressable ErrorBlob, @C("size_t") long BlobSize, @C("RPC_ERROR_ENUM_HANDLE*") Addressable EnumHandle) {
        try {
            return (int)cfapi_h$constants$47.RpcErrorLoadErrorInfo$MH().invokeExact(ErrorBlob.address(), BlobSize, EnumHandle.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcErrorAddRecord$MH() {
        return cfapi_h$constants$47.RpcErrorAddRecord$MH();
    }
    public static @C("RPC_STATUS") int RpcErrorAddRecord (@C("RPC_EXTENDED_ERROR_INFO*") Addressable ErrorInfo) {
        try {
            return (int)cfapi_h$constants$47.RpcErrorAddRecord$MH().invokeExact(ErrorInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcErrorClearInformation$MH() {
        return cfapi_h$constants$47.RpcErrorClearInformation$MH();
    }
    public static void RpcErrorClearInformation () {
        try {
            cfapi_h$constants$47.RpcErrorClearInformation$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcAsyncCleanupThread$MH() {
        return cfapi_h$constants$47.RpcAsyncCleanupThread$MH();
    }
    public static @C("RPC_STATUS") int RpcAsyncCleanupThread (@C("DWORD") int dwTimeout) {
        try {
            return (int)cfapi_h$constants$47.RpcAsyncCleanupThread$MH().invokeExact(dwTimeout);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcGetAuthorizationContextForClient$MH() {
        return cfapi_h$constants$47.RpcGetAuthorizationContextForClient$MH();
    }
    public static @C("RPC_STATUS") int RpcGetAuthorizationContextForClient (@C("RPC_BINDING_HANDLE") Addressable ClientBinding, @C("BOOL") int ImpersonateOnReturn, @C("PVOID") Addressable Reserved1, @C("PLARGE_INTEGER") Addressable pExpirationTime, @C("LUID") MemorySegment Reserved2, @C("DWORD") int Reserved3, @C("PVOID") Addressable Reserved4, @C("PVOID*") Addressable pAuthzClientContext) {
        try {
            return (int)cfapi_h$constants$47.RpcGetAuthorizationContextForClient$MH().invokeExact(ClientBinding.address(), ImpersonateOnReturn, Reserved1.address(), pExpirationTime.address(), Reserved2, Reserved3, Reserved4.address(), pAuthzClientContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcFreeAuthorizationContext$MH() {
        return cfapi_h$constants$47.RpcFreeAuthorizationContext$MH();
    }
    public static @C("RPC_STATUS") int RpcFreeAuthorizationContext (@C("PVOID*") Addressable pAuthzClientContext) {
        try {
            return (int)cfapi_h$constants$47.RpcFreeAuthorizationContext$MH().invokeExact(pAuthzClientContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcSsContextLockExclusive$MH() {
        return cfapi_h$constants$47.RpcSsContextLockExclusive$MH();
    }
    public static @C("RPC_STATUS") int RpcSsContextLockExclusive (@C("RPC_BINDING_HANDLE") Addressable ServerBindingHandle, @C("PVOID") Addressable UserContext) {
        try {
            return (int)cfapi_h$constants$47.RpcSsContextLockExclusive$MH().invokeExact(ServerBindingHandle.address(), UserContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcSsContextLockShared$MH() {
        return cfapi_h$constants$47.RpcSsContextLockShared$MH();
    }
    public static @C("RPC_STATUS") int RpcSsContextLockShared (@C("RPC_BINDING_HANDLE") Addressable ServerBindingHandle, @C("PVOID") Addressable UserContext) {
        try {
            return (int)cfapi_h$constants$47.RpcSsContextLockShared$MH().invokeExact(ServerBindingHandle.address(), UserContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int rlafInvalid() {
        return cfapi_h$constants$47.rlafInvalid();
    }
    public static @C("int") int rlafIPv4() {
        return cfapi_h$constants$47.rlafIPv4();
    }
    public static @C("int") int rlafIPv6() {
        return cfapi_h$constants$47.rlafIPv6();
    }
    public static @C("int") int rctInvalid() {
        return cfapi_h$constants$47.rctInvalid();
    }
    public static @C("int") int rctNormal() {
        return cfapi_h$constants$47.rctNormal();
    }
    public static @C("int") int rctTraining() {
        return cfapi_h$constants$47.rctTraining();
    }
    public static @C("int") int rctGuaranteed() {
        return cfapi_h$constants$47.rctGuaranteed();
    }
    public static @C("int") int rcclInvalid() {
        return cfapi_h$constants$47.rcclInvalid();
    }
    public static @C("int") int rcclLocal() {
        return cfapi_h$constants$47.rcclLocal();
    }
    public static @C("int") int rcclRemote() {
        return cfapi_h$constants$47.rcclRemote();
    }
    public static @C("int") int rcclClientUnknownLocality() {
        return cfapi_h$constants$47.rcclClientUnknownLocality();
    }
    public static  MethodHandle RpcServerInqCallAttributesW$MH() {
        return cfapi_h$constants$48.RpcServerInqCallAttributesW$MH();
    }
    public static @C("RPC_STATUS") int RpcServerInqCallAttributesW (@C("RPC_BINDING_HANDLE") Addressable ClientBinding, @C("void*") Addressable RpcCallAttributes) {
        try {
            return (int)cfapi_h$constants$48.RpcServerInqCallAttributesW$MH().invokeExact(ClientBinding.address(), RpcCallAttributes.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerInqCallAttributesA$MH() {
        return cfapi_h$constants$48.RpcServerInqCallAttributesA$MH();
    }
    public static @C("RPC_STATUS") int RpcServerInqCallAttributesA (@C("RPC_BINDING_HANDLE") Addressable ClientBinding, @C("void*") Addressable RpcCallAttributes) {
        try {
            return (int)cfapi_h$constants$48.RpcServerInqCallAttributesA$MH().invokeExact(ClientBinding.address(), RpcCallAttributes.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int RpcNotificationCallNone() {
        return cfapi_h$constants$48.RpcNotificationCallNone();
    }
    public static @C("int") int RpcNotificationClientDisconnect() {
        return cfapi_h$constants$48.RpcNotificationClientDisconnect();
    }
    public static @C("int") int RpcNotificationCallCancel() {
        return cfapi_h$constants$48.RpcNotificationCallCancel();
    }
    public static  MethodHandle RpcServerSubscribeForNotification$MH() {
        return cfapi_h$constants$48.RpcServerSubscribeForNotification$MH();
    }
    public static @C("RPC_STATUS") int RpcServerSubscribeForNotification (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("RPC_NOTIFICATIONS") int Notification, @C("RPC_NOTIFICATION_TYPES") int NotificationType, @C("RPC_ASYNC_NOTIFICATION_INFO*") Addressable NotificationInfo) {
        try {
            return (int)cfapi_h$constants$48.RpcServerSubscribeForNotification$MH().invokeExact(Binding.address(), Notification, NotificationType, NotificationInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcServerUnsubscribeForNotification$MH() {
        return cfapi_h$constants$48.RpcServerUnsubscribeForNotification$MH();
    }
    public static @C("RPC_STATUS") int RpcServerUnsubscribeForNotification (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("RPC_NOTIFICATIONS") int Notification, @C("unsigned long*") Addressable NotificationsQueued) {
        try {
            return (int)cfapi_h$constants$48.RpcServerUnsubscribeForNotification$MH().invokeExact(Binding.address(), Notification, NotificationsQueued.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingBind$MH() {
        return cfapi_h$constants$48.RpcBindingBind$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingBind (@C("PRPC_ASYNC_STATE") Addressable pAsync, @C("RPC_BINDING_HANDLE") Addressable Binding, @C("RPC_IF_HANDLE") Addressable IfSpec) {
        try {
            return (int)cfapi_h$constants$48.RpcBindingBind$MH().invokeExact(pAsync.address(), Binding.address(), IfSpec.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RpcBindingUnbind$MH() {
        return cfapi_h$constants$48.RpcBindingUnbind$MH();
    }
    public static @C("RPC_STATUS") int RpcBindingUnbind (@C("RPC_BINDING_HANDLE") Addressable Binding) {
        try {
            return (int)cfapi_h$constants$48.RpcBindingUnbind$MH().invokeExact(Binding.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcAsyncSetHandle$MH() {
        return cfapi_h$constants$48.I_RpcAsyncSetHandle$MH();
    }
    public static @C("RPC_STATUS") int I_RpcAsyncSetHandle (@C("PRPC_MESSAGE") Addressable Message, @C("PRPC_ASYNC_STATE") Addressable pAsync) {
        try {
            return (int)cfapi_h$constants$48.I_RpcAsyncSetHandle$MH().invokeExact(Message.address(), pAsync.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcAsyncAbortCall$MH() {
        return cfapi_h$constants$48.I_RpcAsyncAbortCall$MH();
    }
    public static @C("RPC_STATUS") int I_RpcAsyncAbortCall (@C("PRPC_ASYNC_STATE") Addressable pAsync, @C("unsigned long") int ExceptionCode) {
        try {
            return (int)cfapi_h$constants$48.I_RpcAsyncAbortCall$MH().invokeExact(pAsync.address(), ExceptionCode);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcExceptionFilter$MH() {
        return cfapi_h$constants$48.I_RpcExceptionFilter$MH();
    }
    public static @C("int") int I_RpcExceptionFilter (@C("unsigned long") int ExceptionCode) {
        try {
            return (int)cfapi_h$constants$48.I_RpcExceptionFilter$MH().invokeExact(ExceptionCode);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle I_RpcBindingInqClientTokenAttributes$MH() {
        return cfapi_h$constants$48.I_RpcBindingInqClientTokenAttributes$MH();
    }
    public static @C("RPC_STATUS") int I_RpcBindingInqClientTokenAttributes (@C("RPC_BINDING_HANDLE") Addressable Binding, @C("LUID*") Addressable TokenId, @C("LUID*") Addressable AuthenticationId, @C("LUID*") Addressable ModifiedId) {
        try {
            return (int)cfapi_h$constants$48.I_RpcBindingInqClientTokenAttributes$MH().invokeExact(Binding.address(), TokenId.address(), AuthenticationId.address(), ModifiedId.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle CommandLineToArgvW$MH() {
        return cfapi_h$constants$48.CommandLineToArgvW$MH();
    }
    public static @C("LPWSTR*") MemoryAddress CommandLineToArgvW (@C("LPCWSTR") Addressable lpCmdLine, @C("int*") Addressable pNumArgs) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$48.CommandLineToArgvW$MH().invokeExact(lpCmdLine.address(), pNumArgs.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DragQueryFileA$MH() {
        return cfapi_h$constants$48.DragQueryFileA$MH();
    }
    public static @C("UINT") int DragQueryFileA (@C("HDROP") Addressable hDrop, @C("UINT") int iFile, @C("LPSTR") Addressable lpszFile, @C("UINT") int cch) {
        try {
            return (int)cfapi_h$constants$48.DragQueryFileA$MH().invokeExact(hDrop.address(), iFile, lpszFile.address(), cch);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DragQueryFileW$MH() {
        return cfapi_h$constants$48.DragQueryFileW$MH();
    }
    public static @C("UINT") int DragQueryFileW (@C("HDROP") Addressable hDrop, @C("UINT") int iFile, @C("LPWSTR") Addressable lpszFile, @C("UINT") int cch) {
        try {
            return (int)cfapi_h$constants$48.DragQueryFileW$MH().invokeExact(hDrop.address(), iFile, lpszFile.address(), cch);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DragQueryPoint$MH() {
        return cfapi_h$constants$48.DragQueryPoint$MH();
    }
    public static @C("BOOL") int DragQueryPoint (@C("HDROP") Addressable hDrop, @C("POINT*") Addressable ppt) {
        try {
            return (int)cfapi_h$constants$48.DragQueryPoint$MH().invokeExact(hDrop.address(), ppt.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DragFinish$MH() {
        return cfapi_h$constants$48.DragFinish$MH();
    }
    public static void DragFinish (@C("HDROP") Addressable hDrop) {
        try {
            cfapi_h$constants$48.DragFinish$MH().invokeExact(hDrop.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DragAcceptFiles$MH() {
        return cfapi_h$constants$48.DragAcceptFiles$MH();
    }
    public static void DragAcceptFiles (@C("HWND") Addressable hWnd, @C("BOOL") int fAccept) {
        try {
            cfapi_h$constants$48.DragAcceptFiles$MH().invokeExact(hWnd.address(), fAccept);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ShellExecuteA$MH() {
        return cfapi_h$constants$48.ShellExecuteA$MH();
    }
    public static @C("HINSTANCE") MemoryAddress ShellExecuteA (@C("HWND") Addressable hwnd, @C("LPCSTR") Addressable lpOperation, @C("LPCSTR") Addressable lpFile, @C("LPCSTR") Addressable lpParameters, @C("LPCSTR") Addressable lpDirectory, @C("INT") int nShowCmd) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$48.ShellExecuteA$MH().invokeExact(hwnd.address(), lpOperation.address(), lpFile.address(), lpParameters.address(), lpDirectory.address(), nShowCmd);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ShellExecuteW$MH() {
        return cfapi_h$constants$48.ShellExecuteW$MH();
    }
    public static @C("HINSTANCE") MemoryAddress ShellExecuteW (@C("HWND") Addressable hwnd, @C("LPCWSTR") Addressable lpOperation, @C("LPCWSTR") Addressable lpFile, @C("LPCWSTR") Addressable lpParameters, @C("LPCWSTR") Addressable lpDirectory, @C("INT") int nShowCmd) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$48.ShellExecuteW$MH().invokeExact(hwnd.address(), lpOperation.address(), lpFile.address(), lpParameters.address(), lpDirectory.address(), nShowCmd);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle FindExecutableA$MH() {
        return cfapi_h$constants$48.FindExecutableA$MH();
    }
    public static @C("HINSTANCE") MemoryAddress FindExecutableA (@C("LPCSTR") Addressable lpFile, @C("LPCSTR") Addressable lpDirectory, @C("LPSTR") Addressable lpResult) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$48.FindExecutableA$MH().invokeExact(lpFile.address(), lpDirectory.address(), lpResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle FindExecutableW$MH() {
        return cfapi_h$constants$48.FindExecutableW$MH();
    }
    public static @C("HINSTANCE") MemoryAddress FindExecutableW (@C("LPCWSTR") Addressable lpFile, @C("LPCWSTR") Addressable lpDirectory, @C("LPWSTR") Addressable lpResult) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$48.FindExecutableW$MH().invokeExact(lpFile.address(), lpDirectory.address(), lpResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ShellAboutA$MH() {
        return cfapi_h$constants$48.ShellAboutA$MH();
    }
    public static @C("INT") int ShellAboutA (@C("HWND") Addressable hWnd, @C("LPCSTR") Addressable szApp, @C("LPCSTR") Addressable szOtherStuff, @C("HICON") Addressable hIcon) {
        try {
            return (int)cfapi_h$constants$48.ShellAboutA$MH().invokeExact(hWnd.address(), szApp.address(), szOtherStuff.address(), hIcon.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ShellAboutW$MH() {
        return cfapi_h$constants$48.ShellAboutW$MH();
    }
    public static @C("INT") int ShellAboutW (@C("HWND") Addressable hWnd, @C("LPCWSTR") Addressable szApp, @C("LPCWSTR") Addressable szOtherStuff, @C("HICON") Addressable hIcon) {
        try {
            return (int)cfapi_h$constants$48.ShellAboutW$MH().invokeExact(hWnd.address(), szApp.address(), szOtherStuff.address(), hIcon.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DuplicateIcon$MH() {
        return cfapi_h$constants$48.DuplicateIcon$MH();
    }
    public static @C("HICON") MemoryAddress DuplicateIcon (@C("HINSTANCE") Addressable hInst, @C("HICON") Addressable hIcon) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$48.DuplicateIcon$MH().invokeExact(hInst.address(), hIcon.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ExtractAssociatedIconA$MH() {
        return cfapi_h$constants$48.ExtractAssociatedIconA$MH();
    }
    public static @C("HICON") MemoryAddress ExtractAssociatedIconA (@C("HINSTANCE") Addressable hInst, @C("LPSTR") Addressable pszIconPath, @C("WORD*") Addressable piIcon) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$48.ExtractAssociatedIconA$MH().invokeExact(hInst.address(), pszIconPath.address(), piIcon.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ExtractAssociatedIconW$MH() {
        return cfapi_h$constants$48.ExtractAssociatedIconW$MH();
    }
    public static @C("HICON") MemoryAddress ExtractAssociatedIconW (@C("HINSTANCE") Addressable hInst, @C("LPWSTR") Addressable pszIconPath, @C("WORD*") Addressable piIcon) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$48.ExtractAssociatedIconW$MH().invokeExact(hInst.address(), pszIconPath.address(), piIcon.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ExtractAssociatedIconExA$MH() {
        return cfapi_h$constants$48.ExtractAssociatedIconExA$MH();
    }
    public static @C("HICON") MemoryAddress ExtractAssociatedIconExA (@C("HINSTANCE") Addressable hInst, @C("LPSTR") Addressable pszIconPath, @C("WORD*") Addressable piIconIndex, @C("WORD*") Addressable piIconId) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$48.ExtractAssociatedIconExA$MH().invokeExact(hInst.address(), pszIconPath.address(), piIconIndex.address(), piIconId.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ExtractAssociatedIconExW$MH() {
        return cfapi_h$constants$48.ExtractAssociatedIconExW$MH();
    }
    public static @C("HICON") MemoryAddress ExtractAssociatedIconExW (@C("HINSTANCE") Addressable hInst, @C("LPWSTR") Addressable pszIconPath, @C("WORD*") Addressable piIconIndex, @C("WORD*") Addressable piIconId) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$48.ExtractAssociatedIconExW$MH().invokeExact(hInst.address(), pszIconPath.address(), piIconIndex.address(), piIconId.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ExtractIconA$MH() {
        return cfapi_h$constants$48.ExtractIconA$MH();
    }
    public static @C("HICON") MemoryAddress ExtractIconA (@C("HINSTANCE") Addressable hInst, @C("LPCSTR") Addressable pszExeFileName, @C("UINT") int nIconIndex) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$48.ExtractIconA$MH().invokeExact(hInst.address(), pszExeFileName.address(), nIconIndex);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ExtractIconW$MH() {
        return cfapi_h$constants$48.ExtractIconW$MH();
    }
    public static @C("HICON") MemoryAddress ExtractIconW (@C("HINSTANCE") Addressable hInst, @C("LPCWSTR") Addressable pszExeFileName, @C("UINT") int nIconIndex) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$48.ExtractIconW$MH().invokeExact(hInst.address(), pszExeFileName.address(), nIconIndex);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHAppBarMessage$MH() {
        return cfapi_h$constants$48.SHAppBarMessage$MH();
    }
    public static @C("UINT_PTR") long SHAppBarMessage (@C("DWORD") int dwMessage, @C("PAPPBARDATA") Addressable pData) {
        try {
            return (long)cfapi_h$constants$48.SHAppBarMessage$MH().invokeExact(dwMessage, pData.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DoEnvironmentSubstA$MH() {
        return cfapi_h$constants$48.DoEnvironmentSubstA$MH();
    }
    public static @C("DWORD") int DoEnvironmentSubstA (@C("LPSTR") Addressable pszSrc, @C("UINT") int cchSrc) {
        try {
            return (int)cfapi_h$constants$48.DoEnvironmentSubstA$MH().invokeExact(pszSrc.address(), cchSrc);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DoEnvironmentSubstW$MH() {
        return cfapi_h$constants$48.DoEnvironmentSubstW$MH();
    }
    public static @C("DWORD") int DoEnvironmentSubstW (@C("LPWSTR") Addressable pszSrc, @C("UINT") int cchSrc) {
        try {
            return (int)cfapi_h$constants$48.DoEnvironmentSubstW$MH().invokeExact(pszSrc.address(), cchSrc);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ExtractIconExA$MH() {
        return cfapi_h$constants$48.ExtractIconExA$MH();
    }
    public static @C("UINT") int ExtractIconExA (@C("LPCSTR") Addressable lpszFile, @C("int") int nIconIndex, @C("HICON*") Addressable phiconLarge, @C("HICON*") Addressable phiconSmall, @C("UINT") int nIcons) {
        try {
            return (int)cfapi_h$constants$48.ExtractIconExA$MH().invokeExact(lpszFile.address(), nIconIndex, phiconLarge.address(), phiconSmall.address(), nIcons);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ExtractIconExW$MH() {
        return cfapi_h$constants$48.ExtractIconExW$MH();
    }
    public static @C("UINT") int ExtractIconExW (@C("LPCWSTR") Addressable lpszFile, @C("int") int nIconIndex, @C("HICON*") Addressable phiconLarge, @C("HICON*") Addressable phiconSmall, @C("UINT") int nIcons) {
        try {
            return (int)cfapi_h$constants$48.ExtractIconExW$MH().invokeExact(lpszFile.address(), nIconIndex, phiconLarge.address(), phiconSmall.address(), nIcons);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHFileOperationA$MH() {
        return cfapi_h$constants$48.SHFileOperationA$MH();
    }
    public static @C("int") int SHFileOperationA (@C("LPSHFILEOPSTRUCTA") Addressable lpFileOp) {
        try {
            return (int)cfapi_h$constants$48.SHFileOperationA$MH().invokeExact(lpFileOp.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHFileOperationW$MH() {
        return cfapi_h$constants$48.SHFileOperationW$MH();
    }
    public static @C("int") int SHFileOperationW (@C("LPSHFILEOPSTRUCTW") Addressable lpFileOp) {
        try {
            return (int)cfapi_h$constants$48.SHFileOperationW$MH().invokeExact(lpFileOp.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHFreeNameMappings$MH() {
        return cfapi_h$constants$48.SHFreeNameMappings$MH();
    }
    public static void SHFreeNameMappings (@C("HANDLE") Addressable hNameMappings) {
        try {
            cfapi_h$constants$48.SHFreeNameMappings$MH().invokeExact(hNameMappings.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ShellExecuteExA$MH() {
        return cfapi_h$constants$48.ShellExecuteExA$MH();
    }
    public static @C("BOOL") int ShellExecuteExA (@C("SHELLEXECUTEINFOA*") Addressable pExecInfo) {
        try {
            return (int)cfapi_h$constants$48.ShellExecuteExA$MH().invokeExact(pExecInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ShellExecuteExW$MH() {
        return cfapi_h$constants$48.ShellExecuteExW$MH();
    }
    public static @C("BOOL") int ShellExecuteExW (@C("SHELLEXECUTEINFOW*") Addressable pExecInfo) {
        try {
            return (int)cfapi_h$constants$48.ShellExecuteExW$MH().invokeExact(pExecInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHCreateProcessAsUserW$MH() {
        return cfapi_h$constants$48.SHCreateProcessAsUserW$MH();
    }
    public static @C("BOOL") int SHCreateProcessAsUserW (@C("PSHCREATEPROCESSINFOW") Addressable pscpi) {
        try {
            return (int)cfapi_h$constants$48.SHCreateProcessAsUserW$MH().invokeExact(pscpi.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHEvaluateSystemCommandTemplate$MH() {
        return cfapi_h$constants$48.SHEvaluateSystemCommandTemplate$MH();
    }
    public static @C("HRESULT") int SHEvaluateSystemCommandTemplate (@C("PCWSTR") Addressable pszCmdTemplate, @C("PWSTR*") Addressable ppszApplication, @C("PWSTR*") Addressable ppszCommandLine, @C("PWSTR*") Addressable ppszParameters) {
        try {
            return (int)cfapi_h$constants$48.SHEvaluateSystemCommandTemplate$MH().invokeExact(pszCmdTemplate.address(), ppszApplication.address(), ppszCommandLine.address(), ppszParameters.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int ASSOCCLASS_SHELL_KEY() {
        return cfapi_h$constants$48.ASSOCCLASS_SHELL_KEY();
    }
    public static @C("int") int ASSOCCLASS_PROGID_KEY() {
        return cfapi_h$constants$48.ASSOCCLASS_PROGID_KEY();
    }
    public static @C("int") int ASSOCCLASS_PROGID_STR() {
        return cfapi_h$constants$48.ASSOCCLASS_PROGID_STR();
    }
    public static @C("int") int ASSOCCLASS_CLSID_KEY() {
        return cfapi_h$constants$48.ASSOCCLASS_CLSID_KEY();
    }
    public static @C("int") int ASSOCCLASS_CLSID_STR() {
        return cfapi_h$constants$48.ASSOCCLASS_CLSID_STR();
    }
    public static @C("int") int ASSOCCLASS_APP_KEY() {
        return cfapi_h$constants$48.ASSOCCLASS_APP_KEY();
    }
    public static @C("int") int ASSOCCLASS_APP_STR() {
        return cfapi_h$constants$48.ASSOCCLASS_APP_STR();
    }
    public static @C("int") int ASSOCCLASS_SYSTEM_STR() {
        return cfapi_h$constants$48.ASSOCCLASS_SYSTEM_STR();
    }
    public static @C("int") int ASSOCCLASS_FOLDER() {
        return cfapi_h$constants$48.ASSOCCLASS_FOLDER();
    }
    public static @C("int") int ASSOCCLASS_STAR() {
        return cfapi_h$constants$48.ASSOCCLASS_STAR();
    }
    public static @C("int") int ASSOCCLASS_FIXED_PROGID_STR() {
        return cfapi_h$constants$48.ASSOCCLASS_FIXED_PROGID_STR();
    }
    public static @C("int") int ASSOCCLASS_PROTOCOL_STR() {
        return cfapi_h$constants$48.ASSOCCLASS_PROTOCOL_STR();
    }
    public static  MethodHandle AssocCreateForClasses$MH() {
        return cfapi_h$constants$48.AssocCreateForClasses$MH();
    }
    public static @C("HRESULT") int AssocCreateForClasses (@C("const ASSOCIATIONELEMENT*") Addressable rgClasses, @C("ULONG") int cClasses, @C("const IID*") Addressable riid, @C("void**") Addressable ppv) {
        try {
            return (int)cfapi_h$constants$48.AssocCreateForClasses$MH().invokeExact(rgClasses.address(), cClasses, riid.address(), ppv.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHQueryRecycleBinA$MH() {
        return cfapi_h$constants$48.SHQueryRecycleBinA$MH();
    }
    public static @C("HRESULT") int SHQueryRecycleBinA (@C("LPCSTR") Addressable pszRootPath, @C("LPSHQUERYRBINFO") Addressable pSHQueryRBInfo) {
        try {
            return (int)cfapi_h$constants$48.SHQueryRecycleBinA$MH().invokeExact(pszRootPath.address(), pSHQueryRBInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHQueryRecycleBinW$MH() {
        return cfapi_h$constants$48.SHQueryRecycleBinW$MH();
    }
    public static @C("HRESULT") int SHQueryRecycleBinW (@C("LPCWSTR") Addressable pszRootPath, @C("LPSHQUERYRBINFO") Addressable pSHQueryRBInfo) {
        try {
            return (int)cfapi_h$constants$48.SHQueryRecycleBinW$MH().invokeExact(pszRootPath.address(), pSHQueryRBInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHEmptyRecycleBinA$MH() {
        return cfapi_h$constants$48.SHEmptyRecycleBinA$MH();
    }
    public static @C("HRESULT") int SHEmptyRecycleBinA (@C("HWND") Addressable hwnd, @C("LPCSTR") Addressable pszRootPath, @C("DWORD") int dwFlags) {
        try {
            return (int)cfapi_h$constants$48.SHEmptyRecycleBinA$MH().invokeExact(hwnd.address(), pszRootPath.address(), dwFlags);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHEmptyRecycleBinW$MH() {
        return cfapi_h$constants$48.SHEmptyRecycleBinW$MH();
    }
    public static @C("HRESULT") int SHEmptyRecycleBinW (@C("HWND") Addressable hwnd, @C("LPCWSTR") Addressable pszRootPath, @C("DWORD") int dwFlags) {
        try {
            return (int)cfapi_h$constants$48.SHEmptyRecycleBinW$MH().invokeExact(hwnd.address(), pszRootPath.address(), dwFlags);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int QUNS_NOT_PRESENT() {
        return cfapi_h$constants$48.QUNS_NOT_PRESENT();
    }
    public static @C("int") int QUNS_BUSY() {
        return cfapi_h$constants$48.QUNS_BUSY();
    }
    public static @C("int") int QUNS_RUNNING_D3D_FULL_SCREEN() {
        return cfapi_h$constants$48.QUNS_RUNNING_D3D_FULL_SCREEN();
    }
    public static @C("int") int QUNS_PRESENTATION_MODE() {
        return cfapi_h$constants$48.QUNS_PRESENTATION_MODE();
    }
    public static @C("int") int QUNS_ACCEPTS_NOTIFICATIONS() {
        return cfapi_h$constants$48.QUNS_ACCEPTS_NOTIFICATIONS();
    }
    public static @C("int") int QUNS_QUIET_TIME() {
        return cfapi_h$constants$48.QUNS_QUIET_TIME();
    }
    public static @C("int") int QUNS_APP() {
        return cfapi_h$constants$48.QUNS_APP();
    }
    public static  MethodHandle SHQueryUserNotificationState$MH() {
        return cfapi_h$constants$48.SHQueryUserNotificationState$MH();
    }
    public static @C("HRESULT") int SHQueryUserNotificationState (@C("QUERY_USER_NOTIFICATION_STATE*") Addressable pquns) {
        try {
            return (int)cfapi_h$constants$48.SHQueryUserNotificationState$MH().invokeExact(pquns.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHGetPropertyStoreForWindow$MH() {
        return cfapi_h$constants$48.SHGetPropertyStoreForWindow$MH();
    }
    public static @C("HRESULT") int SHGetPropertyStoreForWindow (@C("HWND") Addressable hwnd, @C("const IID*") Addressable riid, @C("void**") Addressable ppv) {
        try {
            return (int)cfapi_h$constants$48.SHGetPropertyStoreForWindow$MH().invokeExact(hwnd.address(), riid.address(), ppv.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle Shell_NotifyIconA$MH() {
        return cfapi_h$constants$48.Shell_NotifyIconA$MH();
    }
    public static @C("BOOL") int Shell_NotifyIconA (@C("DWORD") int dwMessage, @C("PNOTIFYICONDATAA") Addressable lpData) {
        try {
            return (int)cfapi_h$constants$48.Shell_NotifyIconA$MH().invokeExact(dwMessage, lpData.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle Shell_NotifyIconW$MH() {
        return cfapi_h$constants$48.Shell_NotifyIconW$MH();
    }
    public static @C("BOOL") int Shell_NotifyIconW (@C("DWORD") int dwMessage, @C("PNOTIFYICONDATAW") Addressable lpData) {
        try {
            return (int)cfapi_h$constants$48.Shell_NotifyIconW$MH().invokeExact(dwMessage, lpData.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle Shell_NotifyIconGetRect$MH() {
        return cfapi_h$constants$48.Shell_NotifyIconGetRect$MH();
    }
    public static @C("HRESULT") int Shell_NotifyIconGetRect (@C("const NOTIFYICONIDENTIFIER*") Addressable identifier, @C("RECT*") Addressable iconLocation) {
        try {
            return (int)cfapi_h$constants$48.Shell_NotifyIconGetRect$MH().invokeExact(identifier.address(), iconLocation.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHGetFileInfoA$MH() {
        return cfapi_h$constants$48.SHGetFileInfoA$MH();
    }
    public static @C("DWORD_PTR") long SHGetFileInfoA (@C("LPCSTR") Addressable pszPath, @C("DWORD") int dwFileAttributes, @C("SHFILEINFOA*") Addressable psfi, @C("UINT") int cbFileInfo, @C("UINT") int uFlags) {
        try {
            return (long)cfapi_h$constants$48.SHGetFileInfoA$MH().invokeExact(pszPath.address(), dwFileAttributes, psfi.address(), cbFileInfo, uFlags);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHGetFileInfoW$MH() {
        return cfapi_h$constants$48.SHGetFileInfoW$MH();
    }
    public static @C("DWORD_PTR") long SHGetFileInfoW (@C("LPCWSTR") Addressable pszPath, @C("DWORD") int dwFileAttributes, @C("SHFILEINFOW*") Addressable psfi, @C("UINT") int cbFileInfo, @C("UINT") int uFlags) {
        try {
            return (long)cfapi_h$constants$48.SHGetFileInfoW$MH().invokeExact(pszPath.address(), dwFileAttributes, psfi.address(), cbFileInfo, uFlags);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int SIID_DOCNOASSOC() {
        return cfapi_h$constants$48.SIID_DOCNOASSOC();
    }
    public static @C("int") int SIID_DOCASSOC() {
        return cfapi_h$constants$48.SIID_DOCASSOC();
    }
    public static @C("int") int SIID_APPLICATION() {
        return cfapi_h$constants$48.SIID_APPLICATION();
    }
    public static @C("int") int SIID_FOLDER() {
        return cfapi_h$constants$48.SIID_FOLDER();
    }
    public static @C("int") int SIID_FOLDEROPEN() {
        return cfapi_h$constants$48.SIID_FOLDEROPEN();
    }
    public static @C("int") int SIID_DRIVE525() {
        return cfapi_h$constants$48.SIID_DRIVE525();
    }
    public static @C("int") int SIID_DRIVE35() {
        return cfapi_h$constants$48.SIID_DRIVE35();
    }
    public static @C("int") int SIID_DRIVEREMOVE() {
        return cfapi_h$constants$48.SIID_DRIVEREMOVE();
    }
    public static @C("int") int SIID_DRIVEFIXED() {
        return cfapi_h$constants$48.SIID_DRIVEFIXED();
    }
    public static @C("int") int SIID_DRIVENET() {
        return cfapi_h$constants$48.SIID_DRIVENET();
    }
    public static @C("int") int SIID_DRIVENETDISABLED() {
        return cfapi_h$constants$48.SIID_DRIVENETDISABLED();
    }
    public static @C("int") int SIID_DRIVECD() {
        return cfapi_h$constants$48.SIID_DRIVECD();
    }
    public static @C("int") int SIID_DRIVERAM() {
        return cfapi_h$constants$48.SIID_DRIVERAM();
    }
    public static @C("int") int SIID_WORLD() {
        return cfapi_h$constants$48.SIID_WORLD();
    }
    public static @C("int") int SIID_SERVER() {
        return cfapi_h$constants$48.SIID_SERVER();
    }
    public static @C("int") int SIID_PRINTER() {
        return cfapi_h$constants$48.SIID_PRINTER();
    }
    public static @C("int") int SIID_MYNETWORK() {
        return cfapi_h$constants$48.SIID_MYNETWORK();
    }
    public static @C("int") int SIID_FIND() {
        return cfapi_h$constants$48.SIID_FIND();
    }
    public static @C("int") int SIID_HELP() {
        return cfapi_h$constants$48.SIID_HELP();
    }
    public static @C("int") int SIID_SHARE() {
        return cfapi_h$constants$48.SIID_SHARE();
    }
    public static @C("int") int SIID_LINK() {
        return cfapi_h$constants$48.SIID_LINK();
    }
    public static @C("int") int SIID_SLOWFILE() {
        return cfapi_h$constants$48.SIID_SLOWFILE();
    }
    public static @C("int") int SIID_RECYCLER() {
        return cfapi_h$constants$48.SIID_RECYCLER();
    }
    public static @C("int") int SIID_RECYCLERFULL() {
        return cfapi_h$constants$48.SIID_RECYCLERFULL();
    }
    public static @C("int") int SIID_MEDIACDAUDIO() {
        return cfapi_h$constants$48.SIID_MEDIACDAUDIO();
    }
    public static @C("int") int SIID_LOCK() {
        return cfapi_h$constants$48.SIID_LOCK();
    }
    public static @C("int") int SIID_AUTOLIST() {
        return cfapi_h$constants$48.SIID_AUTOLIST();
    }
    public static @C("int") int SIID_PRINTERNET() {
        return cfapi_h$constants$48.SIID_PRINTERNET();
    }
    public static @C("int") int SIID_SERVERSHARE() {
        return cfapi_h$constants$48.SIID_SERVERSHARE();
    }
    public static @C("int") int SIID_PRINTERFAX() {
        return cfapi_h$constants$48.SIID_PRINTERFAX();
    }
    public static @C("int") int SIID_PRINTERFAXNET() {
        return cfapi_h$constants$48.SIID_PRINTERFAXNET();
    }
    public static @C("int") int SIID_PRINTERFILE() {
        return cfapi_h$constants$48.SIID_PRINTERFILE();
    }
    public static @C("int") int SIID_STACK() {
        return cfapi_h$constants$48.SIID_STACK();
    }
    public static @C("int") int SIID_MEDIASVCD() {
        return cfapi_h$constants$48.SIID_MEDIASVCD();
    }
    public static @C("int") int SIID_STUFFEDFOLDER() {
        return cfapi_h$constants$48.SIID_STUFFEDFOLDER();
    }
    public static @C("int") int SIID_DRIVEUNKNOWN() {
        return cfapi_h$constants$48.SIID_DRIVEUNKNOWN();
    }
    public static @C("int") int SIID_DRIVEDVD() {
        return cfapi_h$constants$48.SIID_DRIVEDVD();
    }
    public static @C("int") int SIID_MEDIADVD() {
        return cfapi_h$constants$48.SIID_MEDIADVD();
    }
    public static @C("int") int SIID_MEDIADVDRAM() {
        return cfapi_h$constants$48.SIID_MEDIADVDRAM();
    }
    public static @C("int") int SIID_MEDIADVDRW() {
        return cfapi_h$constants$48.SIID_MEDIADVDRW();
    }
    public static @C("int") int SIID_MEDIADVDR() {
        return cfapi_h$constants$48.SIID_MEDIADVDR();
    }
    public static @C("int") int SIID_MEDIADVDROM() {
        return cfapi_h$constants$49.SIID_MEDIADVDROM();
    }
    public static @C("int") int SIID_MEDIACDAUDIOPLUS() {
        return cfapi_h$constants$49.SIID_MEDIACDAUDIOPLUS();
    }
    public static @C("int") int SIID_MEDIACDRW() {
        return cfapi_h$constants$49.SIID_MEDIACDRW();
    }
    public static @C("int") int SIID_MEDIACDR() {
        return cfapi_h$constants$49.SIID_MEDIACDR();
    }
    public static @C("int") int SIID_MEDIACDBURN() {
        return cfapi_h$constants$49.SIID_MEDIACDBURN();
    }
    public static @C("int") int SIID_MEDIABLANKCD() {
        return cfapi_h$constants$49.SIID_MEDIABLANKCD();
    }
    public static @C("int") int SIID_MEDIACDROM() {
        return cfapi_h$constants$49.SIID_MEDIACDROM();
    }
    public static @C("int") int SIID_AUDIOFILES() {
        return cfapi_h$constants$49.SIID_AUDIOFILES();
    }
    public static @C("int") int SIID_IMAGEFILES() {
        return cfapi_h$constants$49.SIID_IMAGEFILES();
    }
    public static @C("int") int SIID_VIDEOFILES() {
        return cfapi_h$constants$49.SIID_VIDEOFILES();
    }
    public static @C("int") int SIID_MIXEDFILES() {
        return cfapi_h$constants$49.SIID_MIXEDFILES();
    }
    public static @C("int") int SIID_FOLDERBACK() {
        return cfapi_h$constants$49.SIID_FOLDERBACK();
    }
    public static @C("int") int SIID_FOLDERFRONT() {
        return cfapi_h$constants$49.SIID_FOLDERFRONT();
    }
    public static @C("int") int SIID_SHIELD() {
        return cfapi_h$constants$49.SIID_SHIELD();
    }
    public static @C("int") int SIID_WARNING() {
        return cfapi_h$constants$49.SIID_WARNING();
    }
    public static @C("int") int SIID_INFO() {
        return cfapi_h$constants$49.SIID_INFO();
    }
    public static @C("int") int SIID_ERROR() {
        return cfapi_h$constants$49.SIID_ERROR();
    }
    public static @C("int") int SIID_KEY() {
        return cfapi_h$constants$49.SIID_KEY();
    }
    public static @C("int") int SIID_SOFTWARE() {
        return cfapi_h$constants$49.SIID_SOFTWARE();
    }
    public static @C("int") int SIID_RENAME() {
        return cfapi_h$constants$49.SIID_RENAME();
    }
    public static @C("int") int SIID_DELETE() {
        return cfapi_h$constants$49.SIID_DELETE();
    }
    public static @C("int") int SIID_MEDIAAUDIODVD() {
        return cfapi_h$constants$49.SIID_MEDIAAUDIODVD();
    }
    public static @C("int") int SIID_MEDIAMOVIEDVD() {
        return cfapi_h$constants$49.SIID_MEDIAMOVIEDVD();
    }
    public static @C("int") int SIID_MEDIAENHANCEDCD() {
        return cfapi_h$constants$49.SIID_MEDIAENHANCEDCD();
    }
    public static @C("int") int SIID_MEDIAENHANCEDDVD() {
        return cfapi_h$constants$49.SIID_MEDIAENHANCEDDVD();
    }
    public static @C("int") int SIID_MEDIAHDDVD() {
        return cfapi_h$constants$49.SIID_MEDIAHDDVD();
    }
    public static @C("int") int SIID_MEDIABLURAY() {
        return cfapi_h$constants$49.SIID_MEDIABLURAY();
    }
    public static @C("int") int SIID_MEDIAVCD() {
        return cfapi_h$constants$49.SIID_MEDIAVCD();
    }
    public static @C("int") int SIID_MEDIADVDPLUSR() {
        return cfapi_h$constants$49.SIID_MEDIADVDPLUSR();
    }
    public static @C("int") int SIID_MEDIADVDPLUSRW() {
        return cfapi_h$constants$49.SIID_MEDIADVDPLUSRW();
    }
    public static @C("int") int SIID_DESKTOPPC() {
        return cfapi_h$constants$49.SIID_DESKTOPPC();
    }
    public static @C("int") int SIID_MOBILEPC() {
        return cfapi_h$constants$49.SIID_MOBILEPC();
    }
    public static @C("int") int SIID_USERS() {
        return cfapi_h$constants$49.SIID_USERS();
    }
    public static @C("int") int SIID_MEDIASMARTMEDIA() {
        return cfapi_h$constants$49.SIID_MEDIASMARTMEDIA();
    }
    public static @C("int") int SIID_MEDIACOMPACTFLASH() {
        return cfapi_h$constants$49.SIID_MEDIACOMPACTFLASH();
    }
    public static @C("int") int SIID_DEVICECELLPHONE() {
        return cfapi_h$constants$49.SIID_DEVICECELLPHONE();
    }
    public static @C("int") int SIID_DEVICECAMERA() {
        return cfapi_h$constants$49.SIID_DEVICECAMERA();
    }
    public static @C("int") int SIID_DEVICEVIDEOCAMERA() {
        return cfapi_h$constants$49.SIID_DEVICEVIDEOCAMERA();
    }
    public static @C("int") int SIID_DEVICEAUDIOPLAYER() {
        return cfapi_h$constants$49.SIID_DEVICEAUDIOPLAYER();
    }
    public static @C("int") int SIID_NETWORKCONNECT() {
        return cfapi_h$constants$49.SIID_NETWORKCONNECT();
    }
    public static @C("int") int SIID_INTERNET() {
        return cfapi_h$constants$49.SIID_INTERNET();
    }
    public static @C("int") int SIID_ZIPFILE() {
        return cfapi_h$constants$49.SIID_ZIPFILE();
    }
    public static @C("int") int SIID_SETTINGS() {
        return cfapi_h$constants$49.SIID_SETTINGS();
    }
    public static @C("int") int SIID_DRIVEHDDVD() {
        return cfapi_h$constants$49.SIID_DRIVEHDDVD();
    }
    public static @C("int") int SIID_DRIVEBD() {
        return cfapi_h$constants$49.SIID_DRIVEBD();
    }
    public static @C("int") int SIID_MEDIAHDDVDROM() {
        return cfapi_h$constants$49.SIID_MEDIAHDDVDROM();
    }
    public static @C("int") int SIID_MEDIAHDDVDR() {
        return cfapi_h$constants$49.SIID_MEDIAHDDVDR();
    }
    public static @C("int") int SIID_MEDIAHDDVDRAM() {
        return cfapi_h$constants$49.SIID_MEDIAHDDVDRAM();
    }
    public static @C("int") int SIID_MEDIABDROM() {
        return cfapi_h$constants$49.SIID_MEDIABDROM();
    }
    public static @C("int") int SIID_MEDIABDR() {
        return cfapi_h$constants$49.SIID_MEDIABDR();
    }
    public static @C("int") int SIID_MEDIABDRE() {
        return cfapi_h$constants$49.SIID_MEDIABDRE();
    }
    public static @C("int") int SIID_CLUSTEREDDRIVE() {
        return cfapi_h$constants$49.SIID_CLUSTEREDDRIVE();
    }
    public static @C("int") int SIID_MAX_ICONS() {
        return cfapi_h$constants$49.SIID_MAX_ICONS();
    }
    public static  MethodHandle SHGetStockIconInfo$MH() {
        return cfapi_h$constants$49.SHGetStockIconInfo$MH();
    }
    public static @C("HRESULT") int SHGetStockIconInfo (@C("SHSTOCKICONID") int siid, @C("UINT") int uFlags, @C("SHSTOCKICONINFO*") Addressable psii) {
        try {
            return (int)cfapi_h$constants$49.SHGetStockIconInfo$MH().invokeExact(siid, uFlags, psii.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHGetDiskFreeSpaceExA$MH() {
        return cfapi_h$constants$49.SHGetDiskFreeSpaceExA$MH();
    }
    public static @C("BOOL") int SHGetDiskFreeSpaceExA (@C("LPCSTR") Addressable pszDirectoryName, @C("ULARGE_INTEGER*") Addressable pulFreeBytesAvailableToCaller, @C("ULARGE_INTEGER*") Addressable pulTotalNumberOfBytes, @C("ULARGE_INTEGER*") Addressable pulTotalNumberOfFreeBytes) {
        try {
            return (int)cfapi_h$constants$49.SHGetDiskFreeSpaceExA$MH().invokeExact(pszDirectoryName.address(), pulFreeBytesAvailableToCaller.address(), pulTotalNumberOfBytes.address(), pulTotalNumberOfFreeBytes.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHGetDiskFreeSpaceExW$MH() {
        return cfapi_h$constants$49.SHGetDiskFreeSpaceExW$MH();
    }
    public static @C("BOOL") int SHGetDiskFreeSpaceExW (@C("LPCWSTR") Addressable pszDirectoryName, @C("ULARGE_INTEGER*") Addressable pulFreeBytesAvailableToCaller, @C("ULARGE_INTEGER*") Addressable pulTotalNumberOfBytes, @C("ULARGE_INTEGER*") Addressable pulTotalNumberOfFreeBytes) {
        try {
            return (int)cfapi_h$constants$49.SHGetDiskFreeSpaceExW$MH().invokeExact(pszDirectoryName.address(), pulFreeBytesAvailableToCaller.address(), pulTotalNumberOfBytes.address(), pulTotalNumberOfFreeBytes.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHGetNewLinkInfoA$MH() {
        return cfapi_h$constants$49.SHGetNewLinkInfoA$MH();
    }
    public static @C("BOOL") int SHGetNewLinkInfoA (@C("LPCSTR") Addressable pszLinkTo, @C("LPCSTR") Addressable pszDir, @C("LPSTR") Addressable pszName, @C("BOOL*") Addressable pfMustCopy, @C("UINT") int uFlags) {
        try {
            return (int)cfapi_h$constants$49.SHGetNewLinkInfoA$MH().invokeExact(pszLinkTo.address(), pszDir.address(), pszName.address(), pfMustCopy.address(), uFlags);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHGetNewLinkInfoW$MH() {
        return cfapi_h$constants$49.SHGetNewLinkInfoW$MH();
    }
    public static @C("BOOL") int SHGetNewLinkInfoW (@C("LPCWSTR") Addressable pszLinkTo, @C("LPCWSTR") Addressable pszDir, @C("LPWSTR") Addressable pszName, @C("BOOL*") Addressable pfMustCopy, @C("UINT") int uFlags) {
        try {
            return (int)cfapi_h$constants$49.SHGetNewLinkInfoW$MH().invokeExact(pszLinkTo.address(), pszDir.address(), pszName.address(), pfMustCopy.address(), uFlags);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHInvokePrinterCommandA$MH() {
        return cfapi_h$constants$49.SHInvokePrinterCommandA$MH();
    }
    public static @C("BOOL") int SHInvokePrinterCommandA (@C("HWND") Addressable hwnd, @C("UINT") int uAction, @C("LPCSTR") Addressable lpBuf1, @C("LPCSTR") Addressable lpBuf2, @C("BOOL") int fModal) {
        try {
            return (int)cfapi_h$constants$49.SHInvokePrinterCommandA$MH().invokeExact(hwnd.address(), uAction, lpBuf1.address(), lpBuf2.address(), fModal);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHInvokePrinterCommandW$MH() {
        return cfapi_h$constants$49.SHInvokePrinterCommandW$MH();
    }
    public static @C("BOOL") int SHInvokePrinterCommandW (@C("HWND") Addressable hwnd, @C("UINT") int uAction, @C("LPCWSTR") Addressable lpBuf1, @C("LPCWSTR") Addressable lpBuf2, @C("BOOL") int fModal) {
        try {
            return (int)cfapi_h$constants$49.SHInvokePrinterCommandW$MH().invokeExact(hwnd.address(), uAction, lpBuf1.address(), lpBuf2.address(), fModal);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHLoadNonloadedIconOverlayIdentifiers$MH() {
        return cfapi_h$constants$49.SHLoadNonloadedIconOverlayIdentifiers$MH();
    }
    public static @C("HRESULT") int SHLoadNonloadedIconOverlayIdentifiers () {
        try {
            return (int)cfapi_h$constants$49.SHLoadNonloadedIconOverlayIdentifiers$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHIsFileAvailableOffline$MH() {
        return cfapi_h$constants$49.SHIsFileAvailableOffline$MH();
    }
    public static @C("HRESULT") int SHIsFileAvailableOffline (@C("PCWSTR") Addressable pwszPath, @C("DWORD*") Addressable pdwStatus) {
        try {
            return (int)cfapi_h$constants$49.SHIsFileAvailableOffline$MH().invokeExact(pwszPath.address(), pdwStatus.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHSetLocalizedName$MH() {
        return cfapi_h$constants$49.SHSetLocalizedName$MH();
    }
    public static @C("HRESULT") int SHSetLocalizedName (@C("PCWSTR") Addressable pszPath, @C("PCWSTR") Addressable pszResModule, @C("int") int idsRes) {
        try {
            return (int)cfapi_h$constants$49.SHSetLocalizedName$MH().invokeExact(pszPath.address(), pszResModule.address(), idsRes);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHRemoveLocalizedName$MH() {
        return cfapi_h$constants$49.SHRemoveLocalizedName$MH();
    }
    public static @C("HRESULT") int SHRemoveLocalizedName (@C("PCWSTR") Addressable pszPath) {
        try {
            return (int)cfapi_h$constants$49.SHRemoveLocalizedName$MH().invokeExact(pszPath.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHGetLocalizedName$MH() {
        return cfapi_h$constants$49.SHGetLocalizedName$MH();
    }
    public static @C("HRESULT") int SHGetLocalizedName (@C("PCWSTR") Addressable pszPath, @C("PWSTR") Addressable pszResModule, @C("UINT") int cch, @C("int*") Addressable pidsRes) {
        try {
            return (int)cfapi_h$constants$49.SHGetLocalizedName$MH().invokeExact(pszPath.address(), pszResModule.address(), cch, pidsRes.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ShellMessageBoxA$MH() {
        return cfapi_h$constants$49.ShellMessageBoxA$MH();
    }
    public static @C("int") int ShellMessageBoxA (@C("HINSTANCE") Addressable hAppInst, @C("HWND") Addressable hWnd, @C("LPCSTR") Addressable lpcText, @C("LPCSTR") Addressable lpcTitle, @C("UINT") int fuStyle, Object... x5) {
        try {
            return (int)cfapi_h$constants$49.ShellMessageBoxA$MH().invokeExact(hAppInst.address(), hWnd.address(), lpcText.address(), lpcTitle.address(), fuStyle, x5);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ShellMessageBoxW$MH() {
        return cfapi_h$constants$49.ShellMessageBoxW$MH();
    }
    public static @C("int") int ShellMessageBoxW (@C("HINSTANCE") Addressable hAppInst, @C("HWND") Addressable hWnd, @C("LPCWSTR") Addressable lpcText, @C("LPCWSTR") Addressable lpcTitle, @C("UINT") int fuStyle, Object... x5) {
        try {
            return (int)cfapi_h$constants$49.ShellMessageBoxW$MH().invokeExact(hAppInst.address(), hWnd.address(), lpcText.address(), lpcTitle.address(), fuStyle, x5);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle IsLFNDriveA$MH() {
        return cfapi_h$constants$49.IsLFNDriveA$MH();
    }
    public static @C("BOOL") int IsLFNDriveA (@C("LPCSTR") Addressable pszPath) {
        try {
            return (int)cfapi_h$constants$49.IsLFNDriveA$MH().invokeExact(pszPath.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle IsLFNDriveW$MH() {
        return cfapi_h$constants$49.IsLFNDriveW$MH();
    }
    public static @C("BOOL") int IsLFNDriveW (@C("LPCWSTR") Addressable pszPath) {
        try {
            return (int)cfapi_h$constants$49.IsLFNDriveW$MH().invokeExact(pszPath.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHEnumerateUnreadMailAccountsA$MH() {
        return cfapi_h$constants$49.SHEnumerateUnreadMailAccountsA$MH();
    }
    public static @C("HRESULT") int SHEnumerateUnreadMailAccountsA (@C("HKEY") Addressable hKeyUser, @C("DWORD") int dwIndex, @C("LPSTR") Addressable pszMailAddress, @C("int") int cchMailAddress) {
        try {
            return (int)cfapi_h$constants$49.SHEnumerateUnreadMailAccountsA$MH().invokeExact(hKeyUser.address(), dwIndex, pszMailAddress.address(), cchMailAddress);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHEnumerateUnreadMailAccountsW$MH() {
        return cfapi_h$constants$49.SHEnumerateUnreadMailAccountsW$MH();
    }
    public static @C("HRESULT") int SHEnumerateUnreadMailAccountsW (@C("HKEY") Addressable hKeyUser, @C("DWORD") int dwIndex, @C("LPWSTR") Addressable pszMailAddress, @C("int") int cchMailAddress) {
        try {
            return (int)cfapi_h$constants$49.SHEnumerateUnreadMailAccountsW$MH().invokeExact(hKeyUser.address(), dwIndex, pszMailAddress.address(), cchMailAddress);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHGetUnreadMailCountA$MH() {
        return cfapi_h$constants$49.SHGetUnreadMailCountA$MH();
    }
    public static @C("HRESULT") int SHGetUnreadMailCountA (@C("HKEY") Addressable hKeyUser, @C("LPCSTR") Addressable pszMailAddress, @C("DWORD*") Addressable pdwCount, @C("FILETIME*") Addressable pFileTime, @C("LPSTR") Addressable pszShellExecuteCommand, @C("int") int cchShellExecuteCommand) {
        try {
            return (int)cfapi_h$constants$49.SHGetUnreadMailCountA$MH().invokeExact(hKeyUser.address(), pszMailAddress.address(), pdwCount.address(), pFileTime.address(), pszShellExecuteCommand.address(), cchShellExecuteCommand);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHGetUnreadMailCountW$MH() {
        return cfapi_h$constants$49.SHGetUnreadMailCountW$MH();
    }
    public static @C("HRESULT") int SHGetUnreadMailCountW (@C("HKEY") Addressable hKeyUser, @C("LPCWSTR") Addressable pszMailAddress, @C("DWORD*") Addressable pdwCount, @C("FILETIME*") Addressable pFileTime, @C("LPWSTR") Addressable pszShellExecuteCommand, @C("int") int cchShellExecuteCommand) {
        try {
            return (int)cfapi_h$constants$49.SHGetUnreadMailCountW$MH().invokeExact(hKeyUser.address(), pszMailAddress.address(), pdwCount.address(), pFileTime.address(), pszShellExecuteCommand.address(), cchShellExecuteCommand);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHSetUnreadMailCountA$MH() {
        return cfapi_h$constants$49.SHSetUnreadMailCountA$MH();
    }
    public static @C("HRESULT") int SHSetUnreadMailCountA (@C("LPCSTR") Addressable pszMailAddress, @C("DWORD") int dwCount, @C("LPCSTR") Addressable pszShellExecuteCommand) {
        try {
            return (int)cfapi_h$constants$49.SHSetUnreadMailCountA$MH().invokeExact(pszMailAddress.address(), dwCount, pszShellExecuteCommand.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHSetUnreadMailCountW$MH() {
        return cfapi_h$constants$49.SHSetUnreadMailCountW$MH();
    }
    public static @C("HRESULT") int SHSetUnreadMailCountW (@C("LPCWSTR") Addressable pszMailAddress, @C("DWORD") int dwCount, @C("LPCWSTR") Addressable pszShellExecuteCommand) {
        try {
            return (int)cfapi_h$constants$49.SHSetUnreadMailCountW$MH().invokeExact(pszMailAddress.address(), dwCount, pszShellExecuteCommand.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHTestTokenMembership$MH() {
        return cfapi_h$constants$49.SHTestTokenMembership$MH();
    }
    public static @C("BOOL") int SHTestTokenMembership (@C("HANDLE") Addressable hToken, @C("ULONG") int ulRID) {
        try {
            return (int)cfapi_h$constants$49.SHTestTokenMembership$MH().invokeExact(hToken.address(), ulRID);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHGetImageList$MH() {
        return cfapi_h$constants$49.SHGetImageList$MH();
    }
    public static @C("HRESULT") int SHGetImageList (@C("int") int iImageList, @C("const IID*") Addressable riid, @C("void**") Addressable ppvObj) {
        try {
            return (int)cfapi_h$constants$49.SHGetImageList$MH().invokeExact(iImageList, riid.address(), ppvObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle InitNetworkAddressControl$MH() {
        return cfapi_h$constants$49.InitNetworkAddressControl$MH();
    }
    public static @C("BOOL") int InitNetworkAddressControl () {
        try {
            return (int)cfapi_h$constants$49.InitNetworkAddressControl$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SHGetDriveMedia$MH() {
        return cfapi_h$constants$49.SHGetDriveMedia$MH();
    }
    public static @C("HRESULT") int SHGetDriveMedia (@C("PCWSTR") Addressable pszDrive, @C("DWORD*") Addressable pdwMediaContent) {
        try {
            return (int)cfapi_h$constants$49.SHGetDriveMedia$MH().invokeExact(pszDrive.address(), pdwMediaContent.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle __WSAFDIsSet$MH() {
        return cfapi_h$constants$49.__WSAFDIsSet$MH();
    }
    public static @C("int") int __WSAFDIsSet (@C("SOCKET") long x0, @C("fd_set*") Addressable x1) {
        try {
            return (int)cfapi_h$constants$49.__WSAFDIsSet$MH().invokeExact(x0, x1.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle accept$MH() {
        return cfapi_h$constants$49.accept$MH();
    }
    public static @C("SOCKET") long accept (@C("SOCKET") long s, @C("struct sockaddr*") Addressable addr, @C("int*") Addressable addrlen) {
        try {
            return (long)cfapi_h$constants$49.accept$MH().invokeExact(s, addr.address(), addrlen.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle bind$MH() {
        return cfapi_h$constants$49.bind$MH();
    }
    public static @C("int") int bind (@C("SOCKET") long s, @C("struct sockaddr*") Addressable addr, @C("int") int namelen) {
        try {
            return (int)cfapi_h$constants$49.bind$MH().invokeExact(s, addr.address(), namelen);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle closesocket$MH() {
        return cfapi_h$constants$49.closesocket$MH();
    }
    public static @C("int") int closesocket (@C("SOCKET") long s) {
        try {
            return (int)cfapi_h$constants$49.closesocket$MH().invokeExact(s);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle connect$MH() {
        return cfapi_h$constants$49.connect$MH();
    }
    public static @C("int") int connect (@C("SOCKET") long s, @C("struct sockaddr*") Addressable name, @C("int") int namelen) {
        try {
            return (int)cfapi_h$constants$49.connect$MH().invokeExact(s, name.address(), namelen);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ioctlsocket$MH() {
        return cfapi_h$constants$49.ioctlsocket$MH();
    }
    public static @C("int") int ioctlsocket (@C("SOCKET") long s, @C("long") int cmd, @C("u_long*") Addressable argp) {
        try {
            return (int)cfapi_h$constants$49.ioctlsocket$MH().invokeExact(s, cmd, argp.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle getpeername$MH() {
        return cfapi_h$constants$49.getpeername$MH();
    }
    public static @C("int") int getpeername (@C("SOCKET") long s, @C("struct sockaddr*") Addressable name, @C("int*") Addressable namelen) {
        try {
            return (int)cfapi_h$constants$49.getpeername$MH().invokeExact(s, name.address(), namelen.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle getsockname$MH() {
        return cfapi_h$constants$49.getsockname$MH();
    }
    public static @C("int") int getsockname (@C("SOCKET") long s, @C("struct sockaddr*") Addressable name, @C("int*") Addressable namelen) {
        try {
            return (int)cfapi_h$constants$49.getsockname$MH().invokeExact(s, name.address(), namelen.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle getsockopt$MH() {
        return cfapi_h$constants$49.getsockopt$MH();
    }
    public static @C("int") int getsockopt (@C("SOCKET") long s, @C("int") int level, @C("int") int optname, @C("char*") Addressable optval, @C("int*") Addressable optlen) {
        try {
            return (int)cfapi_h$constants$49.getsockopt$MH().invokeExact(s, level, optname, optval.address(), optlen.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle htonl$MH() {
        return cfapi_h$constants$49.htonl$MH();
    }
    public static @C("u_long") int htonl (@C("u_long") int hostlong) {
        try {
            return (int)cfapi_h$constants$49.htonl$MH().invokeExact(hostlong);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle htons$MH() {
        return cfapi_h$constants$49.htons$MH();
    }
    public static @C("u_short") short htons (@C("u_short") short hostshort) {
        try {
            return (short)cfapi_h$constants$49.htons$MH().invokeExact(hostshort);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle inet_addr$MH() {
        return cfapi_h$constants$49.inet_addr$MH();
    }
    public static @C("unsigned long") int inet_addr (@C("char*") Addressable cp) {
        try {
            return (int)cfapi_h$constants$49.inet_addr$MH().invokeExact(cp.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle inet_ntoa$MH() {
        return cfapi_h$constants$49.inet_ntoa$MH();
    }
    public static @C("char*") MemoryAddress inet_ntoa (@C("struct in_addr") MemorySegment in) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$49.inet_ntoa$MH().invokeExact(in);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle listen$MH() {
        return cfapi_h$constants$49.listen$MH();
    }
    public static @C("int") int listen (@C("SOCKET") long s, @C("int") int backlog) {
        try {
            return (int)cfapi_h$constants$49.listen$MH().invokeExact(s, backlog);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ntohl$MH() {
        return cfapi_h$constants$49.ntohl$MH();
    }
    public static @C("u_long") int ntohl (@C("u_long") int netlong) {
        try {
            return (int)cfapi_h$constants$49.ntohl$MH().invokeExact(netlong);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
}


