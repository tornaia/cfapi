// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$61 extends cfapi_h$constants$60 {

    /* package-private */ cfapi_h$constants$61() {}
    static final MemoryLayout _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$Flags$LAYOUT() { return _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$Flags$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$Flags$VH_ = _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$Flags$VH() { return _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$Flags$VH_; }

    static final MemoryLayout _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$TotalNumberOfRanges$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$TotalNumberOfRanges$LAYOUT() { return _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$TotalNumberOfRanges$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$TotalNumberOfRanges$VH_ = _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TotalNumberOfRanges"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$TotalNumberOfRanges$VH() { return _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$TotalNumberOfRanges$VH_; }

    static final MemoryLayout _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$NumberOfRangesReturned$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$NumberOfRangesReturned$LAYOUT() { return _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$NumberOfRangesReturned$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$NumberOfRangesReturned$VH_ = _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfRangesReturned"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$NumberOfRangesReturned$VH() { return _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$NumberOfRangesReturned$VH_; }

    static final MemoryLayout _DEVICE_DSM_REPORT_ZONES_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        C_CHAR.withName("ReportOption"),
        C_CHAR.withName("Partial"),
        MemoryLayout.ofSequence(2, C_CHAR).withName("Reserved")
    ).withName("_DEVICE_DSM_REPORT_ZONES_PARAMETERS");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_REPORT_ZONES_PARAMETERS$struct$LAYOUT() { return _DEVICE_DSM_REPORT_ZONES_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DSM_REPORT_ZONES_PARAMETERS$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_REPORT_ZONES_PARAMETERS$Size$LAYOUT() { return _DEVICE_DSM_REPORT_ZONES_PARAMETERS$Size$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_REPORT_ZONES_PARAMETERS$Size$VH_ = _DEVICE_DSM_REPORT_ZONES_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_REPORT_ZONES_PARAMETERS$Size$VH() { return _DEVICE_DSM_REPORT_ZONES_PARAMETERS$Size$VH_; }

    static final MemoryLayout _DEVICE_DSM_REPORT_ZONES_PARAMETERS$ReportOption$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_REPORT_ZONES_PARAMETERS$ReportOption$LAYOUT() { return _DEVICE_DSM_REPORT_ZONES_PARAMETERS$ReportOption$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_REPORT_ZONES_PARAMETERS$ReportOption$VH_ = _DEVICE_DSM_REPORT_ZONES_PARAMETERS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ReportOption"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_REPORT_ZONES_PARAMETERS$ReportOption$VH() { return _DEVICE_DSM_REPORT_ZONES_PARAMETERS$ReportOption$VH_; }

    static final MemoryLayout _DEVICE_DSM_REPORT_ZONES_PARAMETERS$Partial$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_REPORT_ZONES_PARAMETERS$Partial$LAYOUT() { return _DEVICE_DSM_REPORT_ZONES_PARAMETERS$Partial$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_REPORT_ZONES_PARAMETERS$Partial$VH_ = _DEVICE_DSM_REPORT_ZONES_PARAMETERS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Partial"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_REPORT_ZONES_PARAMETERS$Partial$VH() { return _DEVICE_DSM_REPORT_ZONES_PARAMETERS$Partial$VH_; }

    static final int ZonesAttributeTypeAndLengthMayDifferent() { return (int)0L; }

    static final int ZonesAttributeTypeSameLengthSame() { return (int)1L; }

    static final int ZonesAttributeTypeSameLastZoneLengthDifferent() { return (int)2L; }

    static final int ZonesAttributeTypeMayDifferentLengthSame() { return (int)3L; }

    static final int ZoneConditionConventional() { return (int)0L; }

    static final int ZoneConditionEmpty() { return (int)1L; }

    static final int ZoneConditionImplicitlyOpened() { return (int)2L; }

    static final int ZoneConditionExplicitlyOpened() { return (int)3L; }

    static final int ZoneConditionClosed() { return (int)4L; }

    static final int ZoneConditionReadOnly() { return (int)13L; }

    static final int ZoneConditionFull() { return (int)14L; }

    static final int ZoneConditionOffline() { return (int)15L; }

    static final MemoryLayout _STORAGE_ZONE_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        C_INT.withName("ZoneType"),
        C_INT.withName("ZoneCondition"),
        C_CHAR.withName("ResetWritePointerRecommend"),
        MemoryLayout.ofSequence(3, C_CHAR).withName("Reserved0"),
        C_LONGLONG.withName("ZoneSize"),
        C_LONGLONG.withName("WritePointerOffset")
    ).withName("_STORAGE_ZONE_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONE_DESCRIPTOR$struct$LAYOUT() { return _STORAGE_ZONE_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_ZONE_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONE_DESCRIPTOR$Size$LAYOUT() { return _STORAGE_ZONE_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _STORAGE_ZONE_DESCRIPTOR$Size$VH_ = _STORAGE_ZONE_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_ZONE_DESCRIPTOR$Size$VH() { return _STORAGE_ZONE_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _STORAGE_ZONE_DESCRIPTOR$ZoneType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONE_DESCRIPTOR$ZoneType$LAYOUT() { return _STORAGE_ZONE_DESCRIPTOR$ZoneType$LAYOUT_; }

    static final VarHandle _STORAGE_ZONE_DESCRIPTOR$ZoneType$VH_ = _STORAGE_ZONE_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ZoneType"));
    static final java.lang.invoke.VarHandle _STORAGE_ZONE_DESCRIPTOR$ZoneType$VH() { return _STORAGE_ZONE_DESCRIPTOR$ZoneType$VH_; }

    static final MemoryLayout _STORAGE_ZONE_DESCRIPTOR$ZoneCondition$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONE_DESCRIPTOR$ZoneCondition$LAYOUT() { return _STORAGE_ZONE_DESCRIPTOR$ZoneCondition$LAYOUT_; }

    static final VarHandle _STORAGE_ZONE_DESCRIPTOR$ZoneCondition$VH_ = _STORAGE_ZONE_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ZoneCondition"));
    static final java.lang.invoke.VarHandle _STORAGE_ZONE_DESCRIPTOR$ZoneCondition$VH() { return _STORAGE_ZONE_DESCRIPTOR$ZoneCondition$VH_; }

    static final MemoryLayout _STORAGE_ZONE_DESCRIPTOR$ResetWritePointerRecommend$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONE_DESCRIPTOR$ResetWritePointerRecommend$LAYOUT() { return _STORAGE_ZONE_DESCRIPTOR$ResetWritePointerRecommend$LAYOUT_; }

    static final VarHandle _STORAGE_ZONE_DESCRIPTOR$ResetWritePointerRecommend$VH_ = _STORAGE_ZONE_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ResetWritePointerRecommend"));
    static final java.lang.invoke.VarHandle _STORAGE_ZONE_DESCRIPTOR$ResetWritePointerRecommend$VH() { return _STORAGE_ZONE_DESCRIPTOR$ResetWritePointerRecommend$VH_; }

    static final MemoryLayout _STORAGE_ZONE_DESCRIPTOR$ZoneSize$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONE_DESCRIPTOR$ZoneSize$LAYOUT() { return _STORAGE_ZONE_DESCRIPTOR$ZoneSize$LAYOUT_; }

    static final VarHandle _STORAGE_ZONE_DESCRIPTOR$ZoneSize$VH_ = _STORAGE_ZONE_DESCRIPTOR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ZoneSize"));
    static final java.lang.invoke.VarHandle _STORAGE_ZONE_DESCRIPTOR$ZoneSize$VH() { return _STORAGE_ZONE_DESCRIPTOR$ZoneSize$VH_; }

    static final MemoryLayout _STORAGE_ZONE_DESCRIPTOR$WritePointerOffset$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONE_DESCRIPTOR$WritePointerOffset$LAYOUT() { return _STORAGE_ZONE_DESCRIPTOR$WritePointerOffset$LAYOUT_; }

    static final VarHandle _STORAGE_ZONE_DESCRIPTOR$WritePointerOffset$VH_ = _STORAGE_ZONE_DESCRIPTOR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("WritePointerOffset"));
    static final java.lang.invoke.VarHandle _STORAGE_ZONE_DESCRIPTOR$WritePointerOffset$VH() { return _STORAGE_ZONE_DESCRIPTOR$WritePointerOffset$VH_; }

    static final MemoryLayout _DEVICE_DSM_REPORT_ZONES_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        C_LONG.withName("ZoneCount"),
        C_INT.withName("Attributes"),
        C_LONG.withName("Reserved0"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONG.withName("Size"),
            C_INT.withName("ZoneType"),
            C_INT.withName("ZoneCondition"),
            C_CHAR.withName("ResetWritePointerRecommend"),
            MemoryLayout.ofSequence(3, C_CHAR).withName("Reserved0"),
            C_LONGLONG.withName("ZoneSize"),
            C_LONGLONG.withName("WritePointerOffset")
        ).withName("_STORAGE_ZONE_DESCRIPTOR")).withName("ZoneDescriptors")
    ).withName("_DEVICE_DSM_REPORT_ZONES_DATA");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_REPORT_ZONES_DATA$struct$LAYOUT() { return _DEVICE_DSM_REPORT_ZONES_DATA$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DSM_REPORT_ZONES_DATA$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_REPORT_ZONES_DATA$Size$LAYOUT() { return _DEVICE_DSM_REPORT_ZONES_DATA$Size$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_REPORT_ZONES_DATA$Size$VH_ = _DEVICE_DSM_REPORT_ZONES_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_REPORT_ZONES_DATA$Size$VH() { return _DEVICE_DSM_REPORT_ZONES_DATA$Size$VH_; }

    static final MemoryLayout _DEVICE_DSM_REPORT_ZONES_DATA$ZoneCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_REPORT_ZONES_DATA$ZoneCount$LAYOUT() { return _DEVICE_DSM_REPORT_ZONES_DATA$ZoneCount$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_REPORT_ZONES_DATA$ZoneCount$VH_ = _DEVICE_DSM_REPORT_ZONES_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ZoneCount"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_REPORT_ZONES_DATA$ZoneCount$VH() { return _DEVICE_DSM_REPORT_ZONES_DATA$ZoneCount$VH_; }

    static final MemoryLayout _DEVICE_DSM_REPORT_ZONES_DATA$Attributes$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_REPORT_ZONES_DATA$Attributes$LAYOUT() { return _DEVICE_DSM_REPORT_ZONES_DATA$Attributes$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_REPORT_ZONES_DATA$Attributes$VH_ = _DEVICE_DSM_REPORT_ZONES_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Attributes"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_REPORT_ZONES_DATA$Attributes$VH() { return _DEVICE_DSM_REPORT_ZONES_DATA$Attributes$VH_; }

    static final MemoryLayout _DEVICE_DSM_REPORT_ZONES_DATA$Reserved0$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_REPORT_ZONES_DATA$Reserved0$LAYOUT() { return _DEVICE_DSM_REPORT_ZONES_DATA$Reserved0$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_REPORT_ZONES_DATA$Reserved0$VH_ = _DEVICE_DSM_REPORT_ZONES_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved0"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_REPORT_ZONES_DATA$Reserved0$VH() { return _DEVICE_DSM_REPORT_ZONES_DATA$Reserved0$VH_; }

    static final MemoryLayout _DEVICE_STORAGE_RANGE_ATTRIBUTES$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("LengthInBytes"),
        C_LONG.withName("AllFlags"),
        C_INT,
        C_LONG.withName("Reserved")
    ).withName("_DEVICE_STORAGE_RANGE_ATTRIBUTES");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_STORAGE_RANGE_ATTRIBUTES$struct$LAYOUT() { return _DEVICE_STORAGE_RANGE_ATTRIBUTES$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_STORAGE_RANGE_ATTRIBUTES$LengthInBytes$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_STORAGE_RANGE_ATTRIBUTES$LengthInBytes$LAYOUT() { return _DEVICE_STORAGE_RANGE_ATTRIBUTES$LengthInBytes$LAYOUT_; }

    static final VarHandle _DEVICE_STORAGE_RANGE_ATTRIBUTES$LengthInBytes$VH_ = _DEVICE_STORAGE_RANGE_ATTRIBUTES$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LengthInBytes"));
    static final java.lang.invoke.VarHandle _DEVICE_STORAGE_RANGE_ATTRIBUTES$LengthInBytes$VH() { return _DEVICE_STORAGE_RANGE_ATTRIBUTES$LengthInBytes$VH_; }

    static final MemoryLayout _DEVICE_STORAGE_RANGE_ATTRIBUTES$AllFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_STORAGE_RANGE_ATTRIBUTES$AllFlags$LAYOUT() { return _DEVICE_STORAGE_RANGE_ATTRIBUTES$AllFlags$LAYOUT_; }

    static final VarHandle _DEVICE_STORAGE_RANGE_ATTRIBUTES$AllFlags$VH_ = _DEVICE_STORAGE_RANGE_ATTRIBUTES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AllFlags"));
    static final java.lang.invoke.VarHandle _DEVICE_STORAGE_RANGE_ATTRIBUTES$AllFlags$VH() { return _DEVICE_STORAGE_RANGE_ATTRIBUTES$AllFlags$VH_; }

    static final MemoryLayout _DEVICE_STORAGE_RANGE_ATTRIBUTES$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_STORAGE_RANGE_ATTRIBUTES$Reserved$LAYOUT() { return _DEVICE_STORAGE_RANGE_ATTRIBUTES$Reserved$LAYOUT_; }

    static final VarHandle _DEVICE_STORAGE_RANGE_ATTRIBUTES$Reserved$VH_ = _DEVICE_STORAGE_RANGE_ATTRIBUTES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _DEVICE_STORAGE_RANGE_ATTRIBUTES$Reserved$VH() { return _DEVICE_STORAGE_RANGE_ATTRIBUTES$Reserved$VH_; }

    static final MemoryLayout _DEVICE_DSM_RANGE_ERROR_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Flags"),
        C_LONG.withName("TotalNumberOfRanges"),
        C_LONG.withName("NumberOfRangesReturned"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONGLONG.withName("LengthInBytes"),
            C_LONG.withName("AllFlags"),
            C_INT,
            C_LONG.withName("Reserved")
        ).withName("_DEVICE_STORAGE_RANGE_ATTRIBUTES")).withName("Ranges")
    ).withName("_DEVICE_DSM_RANGE_ERROR_INFO");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_RANGE_ERROR_INFO$struct$LAYOUT() { return _DEVICE_DSM_RANGE_ERROR_INFO$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DSM_RANGE_ERROR_INFO$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_RANGE_ERROR_INFO$Version$LAYOUT() { return _DEVICE_DSM_RANGE_ERROR_INFO$Version$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_RANGE_ERROR_INFO$Version$VH_ = _DEVICE_DSM_RANGE_ERROR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_RANGE_ERROR_INFO$Version$VH() { return _DEVICE_DSM_RANGE_ERROR_INFO$Version$VH_; }

    static final MemoryLayout _DEVICE_DSM_RANGE_ERROR_INFO$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_RANGE_ERROR_INFO$Flags$LAYOUT() { return _DEVICE_DSM_RANGE_ERROR_INFO$Flags$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_RANGE_ERROR_INFO$Flags$VH_ = _DEVICE_DSM_RANGE_ERROR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_RANGE_ERROR_INFO$Flags$VH() { return _DEVICE_DSM_RANGE_ERROR_INFO$Flags$VH_; }

    static final MemoryLayout _DEVICE_DSM_RANGE_ERROR_INFO$TotalNumberOfRanges$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_RANGE_ERROR_INFO$TotalNumberOfRanges$LAYOUT() { return _DEVICE_DSM_RANGE_ERROR_INFO$TotalNumberOfRanges$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_RANGE_ERROR_INFO$TotalNumberOfRanges$VH_ = _DEVICE_DSM_RANGE_ERROR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TotalNumberOfRanges"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_RANGE_ERROR_INFO$TotalNumberOfRanges$VH() { return _DEVICE_DSM_RANGE_ERROR_INFO$TotalNumberOfRanges$VH_; }

    static final MemoryLayout _DEVICE_DSM_RANGE_ERROR_INFO$NumberOfRangesReturned$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_RANGE_ERROR_INFO$NumberOfRangesReturned$LAYOUT() { return _DEVICE_DSM_RANGE_ERROR_INFO$NumberOfRangesReturned$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_RANGE_ERROR_INFO$NumberOfRangesReturned$VH_ = _DEVICE_DSM_RANGE_ERROR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfRangesReturned"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_RANGE_ERROR_INFO$NumberOfRangesReturned$VH() { return _DEVICE_DSM_RANGE_ERROR_INFO$NumberOfRangesReturned$VH_; }

    static final MemoryLayout _DEVICE_DSM_LOST_QUERY_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("Granularity")
    ).withName("_DEVICE_DSM_LOST_QUERY_PARAMETERS");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_LOST_QUERY_PARAMETERS$struct$LAYOUT() { return _DEVICE_DSM_LOST_QUERY_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DSM_LOST_QUERY_PARAMETERS$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_LOST_QUERY_PARAMETERS$Version$LAYOUT() { return _DEVICE_DSM_LOST_QUERY_PARAMETERS$Version$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_LOST_QUERY_PARAMETERS$Version$VH_ = _DEVICE_DSM_LOST_QUERY_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_LOST_QUERY_PARAMETERS$Version$VH() { return _DEVICE_DSM_LOST_QUERY_PARAMETERS$Version$VH_; }

    static final MemoryLayout _DEVICE_DSM_LOST_QUERY_PARAMETERS$Granularity$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_LOST_QUERY_PARAMETERS$Granularity$LAYOUT() { return _DEVICE_DSM_LOST_QUERY_PARAMETERS$Granularity$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_LOST_QUERY_PARAMETERS$Granularity$VH_ = _DEVICE_DSM_LOST_QUERY_PARAMETERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Granularity"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_LOST_QUERY_PARAMETERS$Granularity$VH() { return _DEVICE_DSM_LOST_QUERY_PARAMETERS$Granularity$VH_; }

    static final MemoryLayout _DEVICE_DSM_LOST_QUERY_OUTPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONGLONG.withName("Alignment"),
        C_LONG.withName("NumberOfBits"),
        MemoryLayout.ofSequence(1, C_LONG).withName("BitMap")
    ).withName("_DEVICE_DSM_LOST_QUERY_OUTPUT");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_LOST_QUERY_OUTPUT$struct$LAYOUT() { return _DEVICE_DSM_LOST_QUERY_OUTPUT$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DSM_LOST_QUERY_OUTPUT$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_LOST_QUERY_OUTPUT$Version$LAYOUT() { return _DEVICE_DSM_LOST_QUERY_OUTPUT$Version$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_LOST_QUERY_OUTPUT$Version$VH_ = _DEVICE_DSM_LOST_QUERY_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_LOST_QUERY_OUTPUT$Version$VH() { return _DEVICE_DSM_LOST_QUERY_OUTPUT$Version$VH_; }

    static final MemoryLayout _DEVICE_DSM_LOST_QUERY_OUTPUT$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_LOST_QUERY_OUTPUT$Size$LAYOUT() { return _DEVICE_DSM_LOST_QUERY_OUTPUT$Size$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_LOST_QUERY_OUTPUT$Size$VH_ = _DEVICE_DSM_LOST_QUERY_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_LOST_QUERY_OUTPUT$Size$VH() { return _DEVICE_DSM_LOST_QUERY_OUTPUT$Size$VH_; }

    static final MemoryLayout _DEVICE_DSM_LOST_QUERY_OUTPUT$Alignment$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_LOST_QUERY_OUTPUT$Alignment$LAYOUT() { return _DEVICE_DSM_LOST_QUERY_OUTPUT$Alignment$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_LOST_QUERY_OUTPUT$Alignment$VH_ = _DEVICE_DSM_LOST_QUERY_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Alignment"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_LOST_QUERY_OUTPUT$Alignment$VH() { return _DEVICE_DSM_LOST_QUERY_OUTPUT$Alignment$VH_; }

    static final MemoryLayout _DEVICE_DSM_LOST_QUERY_OUTPUT$NumberOfBits$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_LOST_QUERY_OUTPUT$NumberOfBits$LAYOUT() { return _DEVICE_DSM_LOST_QUERY_OUTPUT$NumberOfBits$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_LOST_QUERY_OUTPUT$NumberOfBits$VH_ = _DEVICE_DSM_LOST_QUERY_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfBits"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_LOST_QUERY_OUTPUT$NumberOfBits$VH() { return _DEVICE_DSM_LOST_QUERY_OUTPUT$NumberOfBits$VH_; }

    static final MemoryLayout _DEVICE_DSM_FREE_SPACE_OUTPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("FreeSpace")
    ).withName("_DEVICE_DSM_FREE_SPACE_OUTPUT");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_FREE_SPACE_OUTPUT$struct$LAYOUT() { return _DEVICE_DSM_FREE_SPACE_OUTPUT$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DSM_FREE_SPACE_OUTPUT$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_FREE_SPACE_OUTPUT$Version$LAYOUT() { return _DEVICE_DSM_FREE_SPACE_OUTPUT$Version$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_FREE_SPACE_OUTPUT$Version$VH_ = _DEVICE_DSM_FREE_SPACE_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_FREE_SPACE_OUTPUT$Version$VH() { return _DEVICE_DSM_FREE_SPACE_OUTPUT$Version$VH_; }

    static final MemoryLayout _DEVICE_DSM_FREE_SPACE_OUTPUT$FreeSpace$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_FREE_SPACE_OUTPUT$FreeSpace$LAYOUT() { return _DEVICE_DSM_FREE_SPACE_OUTPUT$FreeSpace$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_FREE_SPACE_OUTPUT$FreeSpace$VH_ = _DEVICE_DSM_FREE_SPACE_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("FreeSpace"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_FREE_SPACE_OUTPUT$FreeSpace$VH() { return _DEVICE_DSM_FREE_SPACE_OUTPUT$FreeSpace$VH_; }

    static final MemoryLayout _DEVICE_DSM_CONVERSION_OUTPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("Source")
    ).withName("_DEVICE_DSM_CONVERSION_OUTPUT");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_CONVERSION_OUTPUT$struct$LAYOUT() { return _DEVICE_DSM_CONVERSION_OUTPUT$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DSM_CONVERSION_OUTPUT$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_CONVERSION_OUTPUT$Version$LAYOUT() { return _DEVICE_DSM_CONVERSION_OUTPUT$Version$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_CONVERSION_OUTPUT$Version$VH_ = _DEVICE_DSM_CONVERSION_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_CONVERSION_OUTPUT$Version$VH() { return _DEVICE_DSM_CONVERSION_OUTPUT$Version$VH_; }

    static final FunctionDescriptor DeviceDsmParameterBlock$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeviceDsmParameterBlock$FUNC() { return DeviceDsmParameterBlock$FUNC_; }

    static final MethodHandle DeviceDsmParameterBlock$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeviceDsmParameterBlock",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        DeviceDsmParameterBlock$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeviceDsmParameterBlock$MH() { return DeviceDsmParameterBlock$MH_; }

    static final FunctionDescriptor DeviceDsmDataSetRanges$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeviceDsmDataSetRanges$FUNC() { return DeviceDsmDataSetRanges$FUNC_; }

    static final MethodHandle DeviceDsmDataSetRanges$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeviceDsmDataSetRanges",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        DeviceDsmDataSetRanges$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeviceDsmDataSetRanges$MH() { return DeviceDsmDataSetRanges$MH_; }

    static final FunctionDescriptor DeviceDsmNumberOfDataSetRanges$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeviceDsmNumberOfDataSetRanges$FUNC() { return DeviceDsmNumberOfDataSetRanges$FUNC_; }

    static final MethodHandle DeviceDsmNumberOfDataSetRanges$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeviceDsmNumberOfDataSetRanges",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        DeviceDsmNumberOfDataSetRanges$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeviceDsmNumberOfDataSetRanges$MH() { return DeviceDsmNumberOfDataSetRanges$MH_; }

    static final FunctionDescriptor DeviceDsmGetInputLength$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeviceDsmGetInputLength$FUNC() { return DeviceDsmGetInputLength$FUNC_; }

    static final MethodHandle DeviceDsmGetInputLength$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeviceDsmGetInputLength",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        DeviceDsmGetInputLength$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeviceDsmGetInputLength$MH() { return DeviceDsmGetInputLength$MH_; }

    static final FunctionDescriptor DeviceDsmGetNumberOfDataSetRanges$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeviceDsmGetNumberOfDataSetRanges$FUNC() { return DeviceDsmGetNumberOfDataSetRanges$FUNC_; }

    static final MethodHandle DeviceDsmGetNumberOfDataSetRanges$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeviceDsmGetNumberOfDataSetRanges",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        DeviceDsmGetNumberOfDataSetRanges$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeviceDsmGetNumberOfDataSetRanges$MH() { return DeviceDsmGetNumberOfDataSetRanges$MH_; }

    static final FunctionDescriptor DeviceDsmInitializeInput$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeviceDsmInitializeInput$FUNC() { return DeviceDsmInitializeInput$FUNC_; }

    static final MethodHandle DeviceDsmInitializeInput$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeviceDsmInitializeInput",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;I)V",
        DeviceDsmInitializeInput$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeviceDsmInitializeInput$MH() { return DeviceDsmInitializeInput$MH_; }

    static final FunctionDescriptor DeviceDsmAddDataSetRange$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER,
        C_LONG,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeviceDsmAddDataSetRange$FUNC() { return DeviceDsmAddDataSetRange$FUNC_; }

    static final MethodHandle DeviceDsmAddDataSetRange$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeviceDsmAddDataSetRange",
        "(Ljdk/incubator/foreign/MemoryAddress;IJJ)B",
        DeviceDsmAddDataSetRange$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeviceDsmAddDataSetRange$MH() { return DeviceDsmAddDataSetRange$MH_; }

    static final FunctionDescriptor DeviceDsmValidateInput$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeviceDsmValidateInput$FUNC() { return DeviceDsmValidateInput$FUNC_; }

    static final MethodHandle DeviceDsmValidateInput$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeviceDsmValidateInput",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)B",
        DeviceDsmValidateInput$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeviceDsmValidateInput$MH() { return DeviceDsmValidateInput$MH_; }

    static final FunctionDescriptor DeviceDsmOutputBlock$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeviceDsmOutputBlock$FUNC() { return DeviceDsmOutputBlock$FUNC_; }

    static final MethodHandle DeviceDsmOutputBlock$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeviceDsmOutputBlock",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        DeviceDsmOutputBlock$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeviceDsmOutputBlock$MH() { return DeviceDsmOutputBlock$MH_; }

    static final FunctionDescriptor DeviceDsmGetOutputLength$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeviceDsmGetOutputLength$FUNC() { return DeviceDsmGetOutputLength$FUNC_; }

    static final MethodHandle DeviceDsmGetOutputLength$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeviceDsmGetOutputLength",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        DeviceDsmGetOutputLength$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeviceDsmGetOutputLength$MH() { return DeviceDsmGetOutputLength$MH_; }

    static final FunctionDescriptor DeviceDsmValidateOutputLength$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeviceDsmValidateOutputLength$FUNC() { return DeviceDsmValidateOutputLength$FUNC_; }

    static final MethodHandle DeviceDsmValidateOutputLength$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeviceDsmValidateOutputLength",
        "(Ljdk/incubator/foreign/MemoryAddress;I)B",
        DeviceDsmValidateOutputLength$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeviceDsmValidateOutputLength$MH() { return DeviceDsmValidateOutputLength$MH_; }

    static final FunctionDescriptor DeviceDsmGetOutputBlockLength$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeviceDsmGetOutputBlockLength$FUNC() { return DeviceDsmGetOutputBlockLength$FUNC_; }

    static final MethodHandle DeviceDsmGetOutputBlockLength$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeviceDsmGetOutputBlockLength",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        DeviceDsmGetOutputBlockLength$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeviceDsmGetOutputBlockLength$MH() { return DeviceDsmGetOutputBlockLength$MH_; }

    static final FunctionDescriptor DeviceDsmInitializeOutput$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeviceDsmInitializeOutput$FUNC() { return DeviceDsmInitializeOutput$FUNC_; }

    static final MethodHandle DeviceDsmInitializeOutput$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeviceDsmInitializeOutput",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)V",
        DeviceDsmInitializeOutput$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeviceDsmInitializeOutput$MH() { return DeviceDsmInitializeOutput$MH_; }

    static final FunctionDescriptor DeviceDsmValidateOutput$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeviceDsmValidateOutput$FUNC() { return DeviceDsmValidateOutput$FUNC_; }

    static final MethodHandle DeviceDsmValidateOutput$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeviceDsmValidateOutput",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)B",
        DeviceDsmValidateOutput$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeviceDsmValidateOutput$MH() { return DeviceDsmValidateOutput$MH_; }

    static final MemoryLayout _STORAGE_GET_BC_PROPERTIES_OUTPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("MaximumRequestsPerPeriod"),
        C_LONG.withName("MinimumPeriod"),
        C_LONGLONG.withName("MaximumRequestSize"),
        C_LONG.withName("EstimatedTimePerRequest"),
        C_LONG.withName("NumOutStandingRequests"),
        C_LONGLONG.withName("RequestSize")
    ).withName("_STORAGE_GET_BC_PROPERTIES_OUTPUT");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_GET_BC_PROPERTIES_OUTPUT$struct$LAYOUT() { return _STORAGE_GET_BC_PROPERTIES_OUTPUT$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_GET_BC_PROPERTIES_OUTPUT$MaximumRequestsPerPeriod$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_GET_BC_PROPERTIES_OUTPUT$MaximumRequestsPerPeriod$LAYOUT() { return _STORAGE_GET_BC_PROPERTIES_OUTPUT$MaximumRequestsPerPeriod$LAYOUT_; }

    static final VarHandle _STORAGE_GET_BC_PROPERTIES_OUTPUT$MaximumRequestsPerPeriod$VH_ = _STORAGE_GET_BC_PROPERTIES_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaximumRequestsPerPeriod"));
    static final java.lang.invoke.VarHandle _STORAGE_GET_BC_PROPERTIES_OUTPUT$MaximumRequestsPerPeriod$VH() { return _STORAGE_GET_BC_PROPERTIES_OUTPUT$MaximumRequestsPerPeriod$VH_; }

    static final MemoryLayout _STORAGE_GET_BC_PROPERTIES_OUTPUT$MinimumPeriod$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_GET_BC_PROPERTIES_OUTPUT$MinimumPeriod$LAYOUT() { return _STORAGE_GET_BC_PROPERTIES_OUTPUT$MinimumPeriod$LAYOUT_; }

    static final VarHandle _STORAGE_GET_BC_PROPERTIES_OUTPUT$MinimumPeriod$VH_ = _STORAGE_GET_BC_PROPERTIES_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MinimumPeriod"));
    static final java.lang.invoke.VarHandle _STORAGE_GET_BC_PROPERTIES_OUTPUT$MinimumPeriod$VH() { return _STORAGE_GET_BC_PROPERTIES_OUTPUT$MinimumPeriod$VH_; }

    static final MemoryLayout _STORAGE_GET_BC_PROPERTIES_OUTPUT$MaximumRequestSize$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_GET_BC_PROPERTIES_OUTPUT$MaximumRequestSize$LAYOUT() { return _STORAGE_GET_BC_PROPERTIES_OUTPUT$MaximumRequestSize$LAYOUT_; }

    static final VarHandle _STORAGE_GET_BC_PROPERTIES_OUTPUT$MaximumRequestSize$VH_ = _STORAGE_GET_BC_PROPERTIES_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MaximumRequestSize"));
    static final java.lang.invoke.VarHandle _STORAGE_GET_BC_PROPERTIES_OUTPUT$MaximumRequestSize$VH() { return _STORAGE_GET_BC_PROPERTIES_OUTPUT$MaximumRequestSize$VH_; }

    static final MemoryLayout _STORAGE_GET_BC_PROPERTIES_OUTPUT$EstimatedTimePerRequest$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_GET_BC_PROPERTIES_OUTPUT$EstimatedTimePerRequest$LAYOUT() { return _STORAGE_GET_BC_PROPERTIES_OUTPUT$EstimatedTimePerRequest$LAYOUT_; }

    static final VarHandle _STORAGE_GET_BC_PROPERTIES_OUTPUT$EstimatedTimePerRequest$VH_ = _STORAGE_GET_BC_PROPERTIES_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EstimatedTimePerRequest"));
    static final java.lang.invoke.VarHandle _STORAGE_GET_BC_PROPERTIES_OUTPUT$EstimatedTimePerRequest$VH() { return _STORAGE_GET_BC_PROPERTIES_OUTPUT$EstimatedTimePerRequest$VH_; }

    static final MemoryLayout _STORAGE_GET_BC_PROPERTIES_OUTPUT$NumOutStandingRequests$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_GET_BC_PROPERTIES_OUTPUT$NumOutStandingRequests$LAYOUT() { return _STORAGE_GET_BC_PROPERTIES_OUTPUT$NumOutStandingRequests$LAYOUT_; }

    static final VarHandle _STORAGE_GET_BC_PROPERTIES_OUTPUT$NumOutStandingRequests$VH_ = _STORAGE_GET_BC_PROPERTIES_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumOutStandingRequests"));
    static final java.lang.invoke.VarHandle _STORAGE_GET_BC_PROPERTIES_OUTPUT$NumOutStandingRequests$VH() { return _STORAGE_GET_BC_PROPERTIES_OUTPUT$NumOutStandingRequests$VH_; }

    static final MemoryLayout _STORAGE_GET_BC_PROPERTIES_OUTPUT$RequestSize$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_GET_BC_PROPERTIES_OUTPUT$RequestSize$LAYOUT() { return _STORAGE_GET_BC_PROPERTIES_OUTPUT$RequestSize$LAYOUT_; }

    static final VarHandle _STORAGE_GET_BC_PROPERTIES_OUTPUT$RequestSize$VH_ = _STORAGE_GET_BC_PROPERTIES_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RequestSize"));
    static final java.lang.invoke.VarHandle _STORAGE_GET_BC_PROPERTIES_OUTPUT$RequestSize$VH() { return _STORAGE_GET_BC_PROPERTIES_OUTPUT$RequestSize$VH_; }

    static final MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_INPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("RequestsPerPeriod"),
        C_LONG.withName("Period"),
        C_CHAR.withName("RetryFailures"),
        C_CHAR.withName("Discardable"),
        MemoryLayout.ofSequence(2, C_CHAR).withName("Reserved1"),
        C_LONG.withName("AccessType"),
        C_LONG.withName("AccessMode")
    ).withName("_STORAGE_ALLOCATE_BC_STREAM_INPUT");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_INPUT$struct$LAYOUT() { return _STORAGE_ALLOCATE_BC_STREAM_INPUT$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_INPUT$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_INPUT$Version$LAYOUT() { return _STORAGE_ALLOCATE_BC_STREAM_INPUT$Version$LAYOUT_; }

    static final VarHandle _STORAGE_ALLOCATE_BC_STREAM_INPUT$Version$VH_ = _STORAGE_ALLOCATE_BC_STREAM_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_ALLOCATE_BC_STREAM_INPUT$Version$VH() { return _STORAGE_ALLOCATE_BC_STREAM_INPUT$Version$VH_; }

    static final MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_INPUT$RequestsPerPeriod$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_INPUT$RequestsPerPeriod$LAYOUT() { return _STORAGE_ALLOCATE_BC_STREAM_INPUT$RequestsPerPeriod$LAYOUT_; }

    static final VarHandle _STORAGE_ALLOCATE_BC_STREAM_INPUT$RequestsPerPeriod$VH_ = _STORAGE_ALLOCATE_BC_STREAM_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RequestsPerPeriod"));
    static final java.lang.invoke.VarHandle _STORAGE_ALLOCATE_BC_STREAM_INPUT$RequestsPerPeriod$VH() { return _STORAGE_ALLOCATE_BC_STREAM_INPUT$RequestsPerPeriod$VH_; }

    static final MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_INPUT$Period$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_INPUT$Period$LAYOUT() { return _STORAGE_ALLOCATE_BC_STREAM_INPUT$Period$LAYOUT_; }

    static final VarHandle _STORAGE_ALLOCATE_BC_STREAM_INPUT$Period$VH_ = _STORAGE_ALLOCATE_BC_STREAM_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Period"));
    static final java.lang.invoke.VarHandle _STORAGE_ALLOCATE_BC_STREAM_INPUT$Period$VH() { return _STORAGE_ALLOCATE_BC_STREAM_INPUT$Period$VH_; }

    static final MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_INPUT$RetryFailures$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_INPUT$RetryFailures$LAYOUT() { return _STORAGE_ALLOCATE_BC_STREAM_INPUT$RetryFailures$LAYOUT_; }

    static final VarHandle _STORAGE_ALLOCATE_BC_STREAM_INPUT$RetryFailures$VH_ = _STORAGE_ALLOCATE_BC_STREAM_INPUT$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("RetryFailures"));
    static final java.lang.invoke.VarHandle _STORAGE_ALLOCATE_BC_STREAM_INPUT$RetryFailures$VH() { return _STORAGE_ALLOCATE_BC_STREAM_INPUT$RetryFailures$VH_; }

    static final MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_INPUT$Discardable$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_INPUT$Discardable$LAYOUT() { return _STORAGE_ALLOCATE_BC_STREAM_INPUT$Discardable$LAYOUT_; }

    static final VarHandle _STORAGE_ALLOCATE_BC_STREAM_INPUT$Discardable$VH_ = _STORAGE_ALLOCATE_BC_STREAM_INPUT$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Discardable"));
    static final java.lang.invoke.VarHandle _STORAGE_ALLOCATE_BC_STREAM_INPUT$Discardable$VH() { return _STORAGE_ALLOCATE_BC_STREAM_INPUT$Discardable$VH_; }

    static final MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_INPUT$AccessType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_INPUT$AccessType$LAYOUT() { return _STORAGE_ALLOCATE_BC_STREAM_INPUT$AccessType$LAYOUT_; }

    static final VarHandle _STORAGE_ALLOCATE_BC_STREAM_INPUT$AccessType$VH_ = _STORAGE_ALLOCATE_BC_STREAM_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AccessType"));
    static final java.lang.invoke.VarHandle _STORAGE_ALLOCATE_BC_STREAM_INPUT$AccessType$VH() { return _STORAGE_ALLOCATE_BC_STREAM_INPUT$AccessType$VH_; }

    static final MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_INPUT$AccessMode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_INPUT$AccessMode$LAYOUT() { return _STORAGE_ALLOCATE_BC_STREAM_INPUT$AccessMode$LAYOUT_; }

    static final VarHandle _STORAGE_ALLOCATE_BC_STREAM_INPUT$AccessMode$VH_ = _STORAGE_ALLOCATE_BC_STREAM_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AccessMode"));
    static final java.lang.invoke.VarHandle _STORAGE_ALLOCATE_BC_STREAM_INPUT$AccessMode$VH() { return _STORAGE_ALLOCATE_BC_STREAM_INPUT$AccessMode$VH_; }

    static final MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_OUTPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("RequestSize"),
        C_LONG.withName("NumOutStandingRequests"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_STORAGE_ALLOCATE_BC_STREAM_OUTPUT");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_OUTPUT$struct$LAYOUT() { return _STORAGE_ALLOCATE_BC_STREAM_OUTPUT$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_OUTPUT$RequestSize$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_OUTPUT$RequestSize$LAYOUT() { return _STORAGE_ALLOCATE_BC_STREAM_OUTPUT$RequestSize$LAYOUT_; }

    static final VarHandle _STORAGE_ALLOCATE_BC_STREAM_OUTPUT$RequestSize$VH_ = _STORAGE_ALLOCATE_BC_STREAM_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RequestSize"));
    static final java.lang.invoke.VarHandle _STORAGE_ALLOCATE_BC_STREAM_OUTPUT$RequestSize$VH() { return _STORAGE_ALLOCATE_BC_STREAM_OUTPUT$RequestSize$VH_; }

    static final MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_OUTPUT$NumOutStandingRequests$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ALLOCATE_BC_STREAM_OUTPUT$NumOutStandingRequests$LAYOUT() { return _STORAGE_ALLOCATE_BC_STREAM_OUTPUT$NumOutStandingRequests$LAYOUT_; }

    static final VarHandle _STORAGE_ALLOCATE_BC_STREAM_OUTPUT$NumOutStandingRequests$VH_ = _STORAGE_ALLOCATE_BC_STREAM_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumOutStandingRequests"));
    static final java.lang.invoke.VarHandle _STORAGE_ALLOCATE_BC_STREAM_OUTPUT$NumOutStandingRequests$VH() { return _STORAGE_ALLOCATE_BC_STREAM_OUTPUT$NumOutStandingRequests$VH_; }

    static final MemoryLayout _STORAGE_PRIORITY_HINT_SUPPORT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("SupportFlags")
    ).withName("_STORAGE_PRIORITY_HINT_SUPPORT");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PRIORITY_HINT_SUPPORT$struct$LAYOUT() { return _STORAGE_PRIORITY_HINT_SUPPORT$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_PRIORITY_HINT_SUPPORT$SupportFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PRIORITY_HINT_SUPPORT$SupportFlags$LAYOUT() { return _STORAGE_PRIORITY_HINT_SUPPORT$SupportFlags$LAYOUT_; }

    static final VarHandle _STORAGE_PRIORITY_HINT_SUPPORT$SupportFlags$VH_ = _STORAGE_PRIORITY_HINT_SUPPORT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SupportFlags"));
    static final java.lang.invoke.VarHandle _STORAGE_PRIORITY_HINT_SUPPORT$SupportFlags$VH() { return _STORAGE_PRIORITY_HINT_SUPPORT$SupportFlags$VH_; }

    static final int StorageDiagnosticLevelDefault() { return (int)0L; }

    static final int StorageDiagnosticLevelMax() { return (int)1L; }

    static final int StorageDiagnosticTargetTypeUndefined() { return (int)0L; }

    static final int StorageDiagnosticTargetTypePort() { return (int)1L; }

    static final int StorageDiagnosticTargetTypeMiniport() { return (int)2L; }

    static final int StorageDiagnosticTargetTypeHbaFirmware() { return (int)3L; }

    static final int StorageDiagnosticTargetTypeMax() { return (int)4L; }

    static final MemoryLayout _STORAGE_DIAGNOSTIC_REQUEST$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("Reserved"),
        C_INT.withName("TargetType"),
        C_INT.withName("Level")
    ).withName("_STORAGE_DIAGNOSTIC_REQUEST");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DIAGNOSTIC_REQUEST$struct$LAYOUT() { return _STORAGE_DIAGNOSTIC_REQUEST$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_DIAGNOSTIC_REQUEST$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DIAGNOSTIC_REQUEST$Version$LAYOUT() { return _STORAGE_DIAGNOSTIC_REQUEST$Version$LAYOUT_; }

    static final VarHandle _STORAGE_DIAGNOSTIC_REQUEST$Version$VH_ = _STORAGE_DIAGNOSTIC_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_DIAGNOSTIC_REQUEST$Version$VH() { return _STORAGE_DIAGNOSTIC_REQUEST$Version$VH_; }

    static final MemoryLayout _STORAGE_DIAGNOSTIC_REQUEST$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DIAGNOSTIC_REQUEST$Size$LAYOUT() { return _STORAGE_DIAGNOSTIC_REQUEST$Size$LAYOUT_; }

    static final VarHandle _STORAGE_DIAGNOSTIC_REQUEST$Size$VH_ = _STORAGE_DIAGNOSTIC_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_DIAGNOSTIC_REQUEST$Size$VH() { return _STORAGE_DIAGNOSTIC_REQUEST$Size$VH_; }

    static final MemoryLayout _STORAGE_DIAGNOSTIC_REQUEST$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DIAGNOSTIC_REQUEST$Reserved$LAYOUT() { return _STORAGE_DIAGNOSTIC_REQUEST$Reserved$LAYOUT_; }

    static final VarHandle _STORAGE_DIAGNOSTIC_REQUEST$Reserved$VH_ = _STORAGE_DIAGNOSTIC_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _STORAGE_DIAGNOSTIC_REQUEST$Reserved$VH() { return _STORAGE_DIAGNOSTIC_REQUEST$Reserved$VH_; }

    static final MemoryLayout _STORAGE_DIAGNOSTIC_REQUEST$TargetType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DIAGNOSTIC_REQUEST$TargetType$LAYOUT() { return _STORAGE_DIAGNOSTIC_REQUEST$TargetType$LAYOUT_; }

    static final VarHandle _STORAGE_DIAGNOSTIC_REQUEST$TargetType$VH_ = _STORAGE_DIAGNOSTIC_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TargetType"));
    static final java.lang.invoke.VarHandle _STORAGE_DIAGNOSTIC_REQUEST$TargetType$VH() { return _STORAGE_DIAGNOSTIC_REQUEST$TargetType$VH_; }

    static final MemoryLayout _STORAGE_DIAGNOSTIC_REQUEST$Level$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DIAGNOSTIC_REQUEST$Level$LAYOUT() { return _STORAGE_DIAGNOSTIC_REQUEST$Level$LAYOUT_; }

    static final VarHandle _STORAGE_DIAGNOSTIC_REQUEST$Level$VH_ = _STORAGE_DIAGNOSTIC_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Level"));
    static final java.lang.invoke.VarHandle _STORAGE_DIAGNOSTIC_REQUEST$Level$VH() { return _STORAGE_DIAGNOSTIC_REQUEST$Level$VH_; }

    static final MemoryLayout _STORAGE_DIAGNOSTIC_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ProviderId"),
        C_LONG.withName("BufferSize"),
        C_LONG.withName("Reserved"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("DiagnosticDataBuffer"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("_STORAGE_DIAGNOSTIC_DATA");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DIAGNOSTIC_DATA$struct$LAYOUT() { return _STORAGE_DIAGNOSTIC_DATA$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_DIAGNOSTIC_DATA$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DIAGNOSTIC_DATA$Version$LAYOUT() { return _STORAGE_DIAGNOSTIC_DATA$Version$LAYOUT_; }

    static final VarHandle _STORAGE_DIAGNOSTIC_DATA$Version$VH_ = _STORAGE_DIAGNOSTIC_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_DIAGNOSTIC_DATA$Version$VH() { return _STORAGE_DIAGNOSTIC_DATA$Version$VH_; }

    static final MemoryLayout _STORAGE_DIAGNOSTIC_DATA$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DIAGNOSTIC_DATA$Size$LAYOUT() { return _STORAGE_DIAGNOSTIC_DATA$Size$LAYOUT_; }

    static final VarHandle _STORAGE_DIAGNOSTIC_DATA$Size$VH_ = _STORAGE_DIAGNOSTIC_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_DIAGNOSTIC_DATA$Size$VH() { return _STORAGE_DIAGNOSTIC_DATA$Size$VH_; }

    static final MemoryLayout _STORAGE_DIAGNOSTIC_DATA$BufferSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DIAGNOSTIC_DATA$BufferSize$LAYOUT() { return _STORAGE_DIAGNOSTIC_DATA$BufferSize$LAYOUT_; }

    static final VarHandle _STORAGE_DIAGNOSTIC_DATA$BufferSize$VH_ = _STORAGE_DIAGNOSTIC_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BufferSize"));
    static final java.lang.invoke.VarHandle _STORAGE_DIAGNOSTIC_DATA$BufferSize$VH() { return _STORAGE_DIAGNOSTIC_DATA$BufferSize$VH_; }

    static final MemoryLayout _STORAGE_DIAGNOSTIC_DATA$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DIAGNOSTIC_DATA$Reserved$LAYOUT() { return _STORAGE_DIAGNOSTIC_DATA$Reserved$LAYOUT_; }

    static final VarHandle _STORAGE_DIAGNOSTIC_DATA$Reserved$VH_ = _STORAGE_DIAGNOSTIC_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _STORAGE_DIAGNOSTIC_DATA$Reserved$VH() { return _STORAGE_DIAGNOSTIC_DATA$Reserved$VH_; }

    static final MemoryLayout _PHYSICAL_ELEMENT_STATUS_REQUEST$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("StartingElement"),
        C_CHAR.withName("Filter"),
        C_CHAR.withName("ReportType"),
        MemoryLayout.ofSequence(2, C_CHAR).withName("Reserved")
    ).withName("_PHYSICAL_ELEMENT_STATUS_REQUEST");
    static final jdk.incubator.foreign.MemoryLayout _PHYSICAL_ELEMENT_STATUS_REQUEST$struct$LAYOUT() { return _PHYSICAL_ELEMENT_STATUS_REQUEST$struct$LAYOUT_; }

    static final MemoryLayout _PHYSICAL_ELEMENT_STATUS_REQUEST$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PHYSICAL_ELEMENT_STATUS_REQUEST$Version$LAYOUT() { return _PHYSICAL_ELEMENT_STATUS_REQUEST$Version$LAYOUT_; }

    static final VarHandle _PHYSICAL_ELEMENT_STATUS_REQUEST$Version$VH_ = _PHYSICAL_ELEMENT_STATUS_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _PHYSICAL_ELEMENT_STATUS_REQUEST$Version$VH() { return _PHYSICAL_ELEMENT_STATUS_REQUEST$Version$VH_; }

    static final MemoryLayout _PHYSICAL_ELEMENT_STATUS_REQUEST$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PHYSICAL_ELEMENT_STATUS_REQUEST$Size$LAYOUT() { return _PHYSICAL_ELEMENT_STATUS_REQUEST$Size$LAYOUT_; }

    static final VarHandle _PHYSICAL_ELEMENT_STATUS_REQUEST$Size$VH_ = _PHYSICAL_ELEMENT_STATUS_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _PHYSICAL_ELEMENT_STATUS_REQUEST$Size$VH() { return _PHYSICAL_ELEMENT_STATUS_REQUEST$Size$VH_; }

    static final MemoryLayout _PHYSICAL_ELEMENT_STATUS_REQUEST$StartingElement$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PHYSICAL_ELEMENT_STATUS_REQUEST$StartingElement$LAYOUT() { return _PHYSICAL_ELEMENT_STATUS_REQUEST$StartingElement$LAYOUT_; }

    static final VarHandle _PHYSICAL_ELEMENT_STATUS_REQUEST$StartingElement$VH_ = _PHYSICAL_ELEMENT_STATUS_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StartingElement"));
    static final java.lang.invoke.VarHandle _PHYSICAL_ELEMENT_STATUS_REQUEST$StartingElement$VH() { return _PHYSICAL_ELEMENT_STATUS_REQUEST$StartingElement$VH_; }

    static final MemoryLayout _PHYSICAL_ELEMENT_STATUS_REQUEST$Filter$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _PHYSICAL_ELEMENT_STATUS_REQUEST$Filter$LAYOUT() { return _PHYSICAL_ELEMENT_STATUS_REQUEST$Filter$LAYOUT_; }

    static final VarHandle _PHYSICAL_ELEMENT_STATUS_REQUEST$Filter$VH_ = _PHYSICAL_ELEMENT_STATUS_REQUEST$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Filter"));
    static final java.lang.invoke.VarHandle _PHYSICAL_ELEMENT_STATUS_REQUEST$Filter$VH() { return _PHYSICAL_ELEMENT_STATUS_REQUEST$Filter$VH_; }

    static final MemoryLayout _PHYSICAL_ELEMENT_STATUS_REQUEST$ReportType$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _PHYSICAL_ELEMENT_STATUS_REQUEST$ReportType$LAYOUT() { return _PHYSICAL_ELEMENT_STATUS_REQUEST$ReportType$LAYOUT_; }

    static final VarHandle _PHYSICAL_ELEMENT_STATUS_REQUEST$ReportType$VH_ = _PHYSICAL_ELEMENT_STATUS_REQUEST$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ReportType"));
    static final java.lang.invoke.VarHandle _PHYSICAL_ELEMENT_STATUS_REQUEST$ReportType$VH() { return _PHYSICAL_ELEMENT_STATUS_REQUEST$ReportType$VH_; }

    static final MemoryLayout _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("ElementIdentifier"),
        C_CHAR.withName("PhysicalElementType"),
        C_CHAR.withName("PhysicalElementHealth"),
        MemoryLayout.ofSequence(2, C_CHAR).withName("Reserved1"),
        C_LONGLONG.withName("AssociatedCapacity"),
        MemoryLayout.ofSequence(4, C_LONG).withName("Reserved2")
    ).withName("_PHYSICAL_ELEMENT_STATUS_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$struct$LAYOUT() { return _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$Version$LAYOUT() { return _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$Version$VH_ = _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$Version$VH() { return _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$Size$LAYOUT() { return _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$Size$VH_ = _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$Size$VH() { return _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$ElementIdentifier$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$ElementIdentifier$LAYOUT() { return _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$ElementIdentifier$LAYOUT_; }

    static final VarHandle _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$ElementIdentifier$VH_ = _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ElementIdentifier"));
    static final java.lang.invoke.VarHandle _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$ElementIdentifier$VH() { return _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$ElementIdentifier$VH_; }

    static final MemoryLayout _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$PhysicalElementType$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$PhysicalElementType$LAYOUT() { return _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$PhysicalElementType$LAYOUT_; }

    static final VarHandle _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$PhysicalElementType$VH_ = _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("PhysicalElementType"));
    static final java.lang.invoke.VarHandle _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$PhysicalElementType$VH() { return _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$PhysicalElementType$VH_; }

    static final MemoryLayout _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$PhysicalElementHealth$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$PhysicalElementHealth$LAYOUT() { return _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$PhysicalElementHealth$LAYOUT_; }

    static final VarHandle _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$PhysicalElementHealth$VH_ = _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("PhysicalElementHealth"));
    static final java.lang.invoke.VarHandle _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$PhysicalElementHealth$VH() { return _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$PhysicalElementHealth$VH_; }

    static final MemoryLayout _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$AssociatedCapacity$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$AssociatedCapacity$LAYOUT() { return _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$AssociatedCapacity$LAYOUT_; }

    static final VarHandle _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$AssociatedCapacity$VH_ = _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AssociatedCapacity"));
    static final java.lang.invoke.VarHandle _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$AssociatedCapacity$VH() { return _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR$AssociatedCapacity$VH_; }

    static final MemoryLayout _PHYSICAL_ELEMENT_STATUS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("DescriptorCount"),
        C_LONG.withName("ReturnedDescriptorCount"),
        C_LONG.withName("ElementIdentifierBeingDepoped"),
        C_LONG.withName("Reserved"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONG.withName("Version"),
            C_LONG.withName("Size"),
            C_LONG.withName("ElementIdentifier"),
            C_CHAR.withName("PhysicalElementType"),
            C_CHAR.withName("PhysicalElementHealth"),
            MemoryLayout.ofSequence(2, C_CHAR).withName("Reserved1"),
            C_LONGLONG.withName("AssociatedCapacity"),
            MemoryLayout.ofSequence(4, C_LONG).withName("Reserved2")
        ).withName("_PHYSICAL_ELEMENT_STATUS_DESCRIPTOR")).withName("Descriptors")
    ).withName("_PHYSICAL_ELEMENT_STATUS");
    static final jdk.incubator.foreign.MemoryLayout _PHYSICAL_ELEMENT_STATUS$struct$LAYOUT() { return _PHYSICAL_ELEMENT_STATUS$struct$LAYOUT_; }

    static final MemoryLayout _PHYSICAL_ELEMENT_STATUS$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PHYSICAL_ELEMENT_STATUS$Version$LAYOUT() { return _PHYSICAL_ELEMENT_STATUS$Version$LAYOUT_; }

    static final VarHandle _PHYSICAL_ELEMENT_STATUS$Version$VH_ = _PHYSICAL_ELEMENT_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _PHYSICAL_ELEMENT_STATUS$Version$VH() { return _PHYSICAL_ELEMENT_STATUS$Version$VH_; }

    static final MemoryLayout _PHYSICAL_ELEMENT_STATUS$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PHYSICAL_ELEMENT_STATUS$Size$LAYOUT() { return _PHYSICAL_ELEMENT_STATUS$Size$LAYOUT_; }

    static final VarHandle _PHYSICAL_ELEMENT_STATUS$Size$VH_ = _PHYSICAL_ELEMENT_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _PHYSICAL_ELEMENT_STATUS$Size$VH() { return _PHYSICAL_ELEMENT_STATUS$Size$VH_; }

    static final MemoryLayout _PHYSICAL_ELEMENT_STATUS$DescriptorCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PHYSICAL_ELEMENT_STATUS$DescriptorCount$LAYOUT() { return _PHYSICAL_ELEMENT_STATUS$DescriptorCount$LAYOUT_; }

    static final VarHandle _PHYSICAL_ELEMENT_STATUS$DescriptorCount$VH_ = _PHYSICAL_ELEMENT_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DescriptorCount"));
    static final java.lang.invoke.VarHandle _PHYSICAL_ELEMENT_STATUS$DescriptorCount$VH() { return _PHYSICAL_ELEMENT_STATUS$DescriptorCount$VH_; }

    static final MemoryLayout _PHYSICAL_ELEMENT_STATUS$ReturnedDescriptorCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PHYSICAL_ELEMENT_STATUS$ReturnedDescriptorCount$LAYOUT() { return _PHYSICAL_ELEMENT_STATUS$ReturnedDescriptorCount$LAYOUT_; }

    static final VarHandle _PHYSICAL_ELEMENT_STATUS$ReturnedDescriptorCount$VH_ = _PHYSICAL_ELEMENT_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ReturnedDescriptorCount"));
    static final java.lang.invoke.VarHandle _PHYSICAL_ELEMENT_STATUS$ReturnedDescriptorCount$VH() { return _PHYSICAL_ELEMENT_STATUS$ReturnedDescriptorCount$VH_; }

    static final MemoryLayout _PHYSICAL_ELEMENT_STATUS$ElementIdentifierBeingDepoped$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PHYSICAL_ELEMENT_STATUS$ElementIdentifierBeingDepoped$LAYOUT() { return _PHYSICAL_ELEMENT_STATUS$ElementIdentifierBeingDepoped$LAYOUT_; }

    static final VarHandle _PHYSICAL_ELEMENT_STATUS$ElementIdentifierBeingDepoped$VH_ = _PHYSICAL_ELEMENT_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ElementIdentifierBeingDepoped"));
    static final java.lang.invoke.VarHandle _PHYSICAL_ELEMENT_STATUS$ElementIdentifierBeingDepoped$VH() { return _PHYSICAL_ELEMENT_STATUS$ElementIdentifierBeingDepoped$VH_; }

    static final MemoryLayout _PHYSICAL_ELEMENT_STATUS$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PHYSICAL_ELEMENT_STATUS$Reserved$LAYOUT() { return _PHYSICAL_ELEMENT_STATUS$Reserved$LAYOUT_; }

    static final VarHandle _PHYSICAL_ELEMENT_STATUS$Reserved$VH_ = _PHYSICAL_ELEMENT_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _PHYSICAL_ELEMENT_STATUS$Reserved$VH() { return _PHYSICAL_ELEMENT_STATUS$Reserved$VH_; }

    static final MemoryLayout _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONGLONG.withName("RequestCapacity"),
        C_LONG.withName("ElementIdentifier"),
        C_LONG.withName("Reserved")
    ).withName("_REMOVE_ELEMENT_AND_TRUNCATE_REQUEST");
    static final jdk.incubator.foreign.MemoryLayout _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$struct$LAYOUT() { return _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$struct$LAYOUT_; }

    static final MemoryLayout _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$Version$LAYOUT() { return _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$Version$LAYOUT_; }

    static final VarHandle _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$Version$VH_ = _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$Version$VH() { return _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$Version$VH_; }

    static final MemoryLayout _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$Size$LAYOUT() { return _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$Size$LAYOUT_; }

    static final VarHandle _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$Size$VH_ = _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$Size$VH() { return _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$Size$VH_; }

    static final MemoryLayout _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$RequestCapacity$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$RequestCapacity$LAYOUT() { return _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$RequestCapacity$LAYOUT_; }

    static final VarHandle _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$RequestCapacity$VH_ = _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RequestCapacity"));
    static final java.lang.invoke.VarHandle _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$RequestCapacity$VH() { return _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$RequestCapacity$VH_; }

    static final MemoryLayout _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$ElementIdentifier$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$ElementIdentifier$LAYOUT() { return _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$ElementIdentifier$LAYOUT_; }

    static final VarHandle _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$ElementIdentifier$VH_ = _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ElementIdentifier"));
    static final java.lang.invoke.VarHandle _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$ElementIdentifier$VH() { return _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$ElementIdentifier$VH_; }

    static final MemoryLayout _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$Reserved$LAYOUT() { return _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$Reserved$LAYOUT_; }

    static final VarHandle _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$Reserved$VH_ = _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$Reserved$VH() { return _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST$Reserved$VH_; }

    static final int DeviceInternalStatusDataRequestTypeUndefined() { return (int)0L; }

    static final int DeviceCurrentInternalStatusDataHeader() { return (int)1L; }

    static final int DeviceCurrentInternalStatusData() { return (int)2L; }

    static final int DeviceStatusDataSetUndefined() { return (int)0L; }

    static final int DeviceStatusDataSet1() { return (int)1L; }

    static final int DeviceStatusDataSet2() { return (int)2L; }

    static final int DeviceStatusDataSet3() { return (int)3L; }

    static final int DeviceStatusDataSet4() { return (int)4L; }

    static final int DeviceStatusDataSetMax() { return (int)5L; }

    static final MemoryLayout _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_INT.withName("RequestDataType"),
        C_INT.withName("RequestDataSet")
    ).withName("_GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST");
    static final jdk.incubator.foreign.MemoryLayout _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$struct$LAYOUT() { return _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$struct$LAYOUT_; }

    static final MemoryLayout _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$Version$LAYOUT() { return _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$Version$LAYOUT_; }

    static final VarHandle _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$Version$VH_ = _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$Version$VH() { return _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$Version$VH_; }

    static final MemoryLayout _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$Size$LAYOUT() { return _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$Size$LAYOUT_; }

    static final VarHandle _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$Size$VH_ = _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$Size$VH() { return _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$Size$VH_; }

    static final MemoryLayout _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$RequestDataType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$RequestDataType$LAYOUT() { return _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$RequestDataType$LAYOUT_; }

    static final VarHandle _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$RequestDataType$VH_ = _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RequestDataType"));
    static final java.lang.invoke.VarHandle _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$RequestDataType$VH() { return _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$RequestDataType$VH_; }

    static final MemoryLayout _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$RequestDataSet$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$RequestDataSet$LAYOUT() { return _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$RequestDataSet$LAYOUT_; }

    static final VarHandle _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$RequestDataSet$VH_ = _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RequestDataSet"));
    static final java.lang.invoke.VarHandle _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$RequestDataSet$VH() { return _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST$RequestDataSet$VH_; }

    static final MemoryLayout _DEVICE_INTERNAL_STATUS_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONGLONG.withName("T10VendorId"),
        C_LONG.withName("DataSet1Length"),
        C_LONG.withName("DataSet2Length"),
        C_LONG.withName("DataSet3Length"),
        C_LONG.withName("DataSet4Length"),
        C_CHAR.withName("StatusDataVersion"),
        MemoryLayout.ofSequence(3, C_CHAR).withName("Reserved"),
        MemoryLayout.ofSequence(128, C_CHAR).withName("ReasonIdentifier"),
        C_LONG.withName("StatusDataLength"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("StatusData"),
        MemoryLayout.ofPaddingBits(56)
    ).withName("_DEVICE_INTERNAL_STATUS_DATA");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_INTERNAL_STATUS_DATA$struct$LAYOUT() { return _DEVICE_INTERNAL_STATUS_DATA$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_INTERNAL_STATUS_DATA$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_INTERNAL_STATUS_DATA$Version$LAYOUT() { return _DEVICE_INTERNAL_STATUS_DATA$Version$LAYOUT_; }

    static final VarHandle _DEVICE_INTERNAL_STATUS_DATA$Version$VH_ = _DEVICE_INTERNAL_STATUS_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _DEVICE_INTERNAL_STATUS_DATA$Version$VH() { return _DEVICE_INTERNAL_STATUS_DATA$Version$VH_; }

    static final MemoryLayout _DEVICE_INTERNAL_STATUS_DATA$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_INTERNAL_STATUS_DATA$Size$LAYOUT() { return _DEVICE_INTERNAL_STATUS_DATA$Size$LAYOUT_; }

    static final VarHandle _DEVICE_INTERNAL_STATUS_DATA$Size$VH_ = _DEVICE_INTERNAL_STATUS_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _DEVICE_INTERNAL_STATUS_DATA$Size$VH() { return _DEVICE_INTERNAL_STATUS_DATA$Size$VH_; }

    static final MemoryLayout _DEVICE_INTERNAL_STATUS_DATA$T10VendorId$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_INTERNAL_STATUS_DATA$T10VendorId$LAYOUT() { return _DEVICE_INTERNAL_STATUS_DATA$T10VendorId$LAYOUT_; }

    static final VarHandle _DEVICE_INTERNAL_STATUS_DATA$T10VendorId$VH_ = _DEVICE_INTERNAL_STATUS_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("T10VendorId"));
    static final java.lang.invoke.VarHandle _DEVICE_INTERNAL_STATUS_DATA$T10VendorId$VH() { return _DEVICE_INTERNAL_STATUS_DATA$T10VendorId$VH_; }

    static final MemoryLayout _DEVICE_INTERNAL_STATUS_DATA$DataSet1Length$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_INTERNAL_STATUS_DATA$DataSet1Length$LAYOUT() { return _DEVICE_INTERNAL_STATUS_DATA$DataSet1Length$LAYOUT_; }

    static final VarHandle _DEVICE_INTERNAL_STATUS_DATA$DataSet1Length$VH_ = _DEVICE_INTERNAL_STATUS_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DataSet1Length"));
    static final java.lang.invoke.VarHandle _DEVICE_INTERNAL_STATUS_DATA$DataSet1Length$VH() { return _DEVICE_INTERNAL_STATUS_DATA$DataSet1Length$VH_; }

    static final MemoryLayout _DEVICE_INTERNAL_STATUS_DATA$DataSet2Length$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_INTERNAL_STATUS_DATA$DataSet2Length$LAYOUT() { return _DEVICE_INTERNAL_STATUS_DATA$DataSet2Length$LAYOUT_; }

    static final VarHandle _DEVICE_INTERNAL_STATUS_DATA$DataSet2Length$VH_ = _DEVICE_INTERNAL_STATUS_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DataSet2Length"));
    static final java.lang.invoke.VarHandle _DEVICE_INTERNAL_STATUS_DATA$DataSet2Length$VH() { return _DEVICE_INTERNAL_STATUS_DATA$DataSet2Length$VH_; }

    static final MemoryLayout _DEVICE_INTERNAL_STATUS_DATA$DataSet3Length$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_INTERNAL_STATUS_DATA$DataSet3Length$LAYOUT() { return _DEVICE_INTERNAL_STATUS_DATA$DataSet3Length$LAYOUT_; }

    static final VarHandle _DEVICE_INTERNAL_STATUS_DATA$DataSet3Length$VH_ = _DEVICE_INTERNAL_STATUS_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DataSet3Length"));
    static final java.lang.invoke.VarHandle _DEVICE_INTERNAL_STATUS_DATA$DataSet3Length$VH() { return _DEVICE_INTERNAL_STATUS_DATA$DataSet3Length$VH_; }

    static final MemoryLayout _DEVICE_INTERNAL_STATUS_DATA$DataSet4Length$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_INTERNAL_STATUS_DATA$DataSet4Length$LAYOUT() { return _DEVICE_INTERNAL_STATUS_DATA$DataSet4Length$LAYOUT_; }

    static final VarHandle _DEVICE_INTERNAL_STATUS_DATA$DataSet4Length$VH_ = _DEVICE_INTERNAL_STATUS_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DataSet4Length"));
    static final java.lang.invoke.VarHandle _DEVICE_INTERNAL_STATUS_DATA$DataSet4Length$VH() { return _DEVICE_INTERNAL_STATUS_DATA$DataSet4Length$VH_; }

    static final MemoryLayout _DEVICE_INTERNAL_STATUS_DATA$StatusDataVersion$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_INTERNAL_STATUS_DATA$StatusDataVersion$LAYOUT() { return _DEVICE_INTERNAL_STATUS_DATA$StatusDataVersion$LAYOUT_; }

    static final VarHandle _DEVICE_INTERNAL_STATUS_DATA$StatusDataVersion$VH_ = _DEVICE_INTERNAL_STATUS_DATA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("StatusDataVersion"));
    static final java.lang.invoke.VarHandle _DEVICE_INTERNAL_STATUS_DATA$StatusDataVersion$VH() { return _DEVICE_INTERNAL_STATUS_DATA$StatusDataVersion$VH_; }

    static final MemoryLayout _DEVICE_INTERNAL_STATUS_DATA$StatusDataLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_INTERNAL_STATUS_DATA$StatusDataLength$LAYOUT() { return _DEVICE_INTERNAL_STATUS_DATA$StatusDataLength$LAYOUT_; }

    static final VarHandle _DEVICE_INTERNAL_STATUS_DATA$StatusDataLength$VH_ = _DEVICE_INTERNAL_STATUS_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StatusDataLength"));
    static final java.lang.invoke.VarHandle _DEVICE_INTERNAL_STATUS_DATA$StatusDataLength$VH() { return _DEVICE_INTERNAL_STATUS_DATA$StatusDataLength$VH_; }

    static final MemoryLayout _STORAGE_MEDIA_SERIAL_NUMBER_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("Reserved"),
        C_SHORT.withName("SerialNumberLength"),
        MemoryLayout.ofSequence(0, C_CHAR).withName("SerialNumber")
    ).withName("_STORAGE_MEDIA_SERIAL_NUMBER_DATA");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_MEDIA_SERIAL_NUMBER_DATA$struct$LAYOUT() { return _STORAGE_MEDIA_SERIAL_NUMBER_DATA$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_MEDIA_SERIAL_NUMBER_DATA$Reserved$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_MEDIA_SERIAL_NUMBER_DATA$Reserved$LAYOUT() { return _STORAGE_MEDIA_SERIAL_NUMBER_DATA$Reserved$LAYOUT_; }

    static final VarHandle _STORAGE_MEDIA_SERIAL_NUMBER_DATA$Reserved$VH_ = _STORAGE_MEDIA_SERIAL_NUMBER_DATA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _STORAGE_MEDIA_SERIAL_NUMBER_DATA$Reserved$VH() { return _STORAGE_MEDIA_SERIAL_NUMBER_DATA$Reserved$VH_; }

    static final MemoryLayout _STORAGE_MEDIA_SERIAL_NUMBER_DATA$SerialNumberLength$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_MEDIA_SERIAL_NUMBER_DATA$SerialNumberLength$LAYOUT() { return _STORAGE_MEDIA_SERIAL_NUMBER_DATA$SerialNumberLength$LAYOUT_; }

    static final VarHandle _STORAGE_MEDIA_SERIAL_NUMBER_DATA$SerialNumberLength$VH_ = _STORAGE_MEDIA_SERIAL_NUMBER_DATA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("SerialNumberLength"));
    static final java.lang.invoke.VarHandle _STORAGE_MEDIA_SERIAL_NUMBER_DATA$SerialNumberLength$VH() { return _STORAGE_MEDIA_SERIAL_NUMBER_DATA$SerialNumberLength$VH_; }

    static final MemoryLayout _STORAGE_READ_CAPACITY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("BlockLength"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("NumberOfBlocks"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("DiskLength")
    ).withName("_STORAGE_READ_CAPACITY");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_READ_CAPACITY$struct$LAYOUT() { return _STORAGE_READ_CAPACITY$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_READ_CAPACITY$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_READ_CAPACITY$Version$LAYOUT() { return _STORAGE_READ_CAPACITY$Version$LAYOUT_; }

    static final VarHandle _STORAGE_READ_CAPACITY$Version$VH_ = _STORAGE_READ_CAPACITY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_READ_CAPACITY$Version$VH() { return _STORAGE_READ_CAPACITY$Version$VH_; }

    static final MemoryLayout _STORAGE_READ_CAPACITY$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_READ_CAPACITY$Size$LAYOUT() { return _STORAGE_READ_CAPACITY$Size$LAYOUT_; }

    static final VarHandle _STORAGE_READ_CAPACITY$Size$VH_ = _STORAGE_READ_CAPACITY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_READ_CAPACITY$Size$VH() { return _STORAGE_READ_CAPACITY$Size$VH_; }

    static final MemoryLayout _STORAGE_READ_CAPACITY$BlockLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_READ_CAPACITY$BlockLength$LAYOUT() { return _STORAGE_READ_CAPACITY$BlockLength$LAYOUT_; }

    static final VarHandle _STORAGE_READ_CAPACITY$BlockLength$VH_ = _STORAGE_READ_CAPACITY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BlockLength"));
    static final java.lang.invoke.VarHandle _STORAGE_READ_CAPACITY$BlockLength$VH() { return _STORAGE_READ_CAPACITY$BlockLength$VH_; }

    static final int WriteCacheTypeUnknown() { return (int)0L; }

    static final int WriteCacheTypeNone() { return (int)1L; }

    static final int WriteCacheTypeWriteBack() { return (int)2L; }

    static final int WriteCacheTypeWriteThrough() { return (int)3L; }

    static final int WriteCacheEnableUnknown() { return (int)0L; }

    static final int WriteCacheDisabled() { return (int)1L; }

    static final int WriteCacheEnabled() { return (int)2L; }

    static final int WriteCacheChangeUnknown() { return (int)0L; }

    static final int WriteCacheNotChangeable() { return (int)1L; }

    static final int WriteCacheChangeable() { return (int)2L; }

    static final int WriteThroughUnknown() { return (int)0L; }

    static final int WriteThroughNotSupported() { return (int)1L; }

    static final int WriteThroughSupported() { return (int)2L; }

    static final MemoryLayout _STORAGE_WRITE_CACHE_PROPERTY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_INT.withName("WriteCacheType"),
        C_INT.withName("WriteCacheEnabled"),
        C_INT.withName("WriteCacheChangeable"),
        C_INT.withName("WriteThroughSupported"),
        C_CHAR.withName("FlushCacheSupported"),
        C_CHAR.withName("UserDefinedPowerProtection"),
        C_CHAR.withName("NVCacheEnabled"),
        MemoryLayout.ofPaddingBits(8)
    ).withName("_STORAGE_WRITE_CACHE_PROPERTY");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_WRITE_CACHE_PROPERTY$struct$LAYOUT() { return _STORAGE_WRITE_CACHE_PROPERTY$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_WRITE_CACHE_PROPERTY$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_WRITE_CACHE_PROPERTY$Version$LAYOUT() { return _STORAGE_WRITE_CACHE_PROPERTY$Version$LAYOUT_; }

    static final VarHandle _STORAGE_WRITE_CACHE_PROPERTY$Version$VH_ = _STORAGE_WRITE_CACHE_PROPERTY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_WRITE_CACHE_PROPERTY$Version$VH() { return _STORAGE_WRITE_CACHE_PROPERTY$Version$VH_; }

    static final MemoryLayout _STORAGE_WRITE_CACHE_PROPERTY$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_WRITE_CACHE_PROPERTY$Size$LAYOUT() { return _STORAGE_WRITE_CACHE_PROPERTY$Size$LAYOUT_; }

    static final VarHandle _STORAGE_WRITE_CACHE_PROPERTY$Size$VH_ = _STORAGE_WRITE_CACHE_PROPERTY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_WRITE_CACHE_PROPERTY$Size$VH() { return _STORAGE_WRITE_CACHE_PROPERTY$Size$VH_; }

    static final MemoryLayout _STORAGE_WRITE_CACHE_PROPERTY$WriteCacheType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_WRITE_CACHE_PROPERTY$WriteCacheType$LAYOUT() { return _STORAGE_WRITE_CACHE_PROPERTY$WriteCacheType$LAYOUT_; }

    static final VarHandle _STORAGE_WRITE_CACHE_PROPERTY$WriteCacheType$VH_ = _STORAGE_WRITE_CACHE_PROPERTY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("WriteCacheType"));
    static final java.lang.invoke.VarHandle _STORAGE_WRITE_CACHE_PROPERTY$WriteCacheType$VH() { return _STORAGE_WRITE_CACHE_PROPERTY$WriteCacheType$VH_; }

    static final MemoryLayout _STORAGE_WRITE_CACHE_PROPERTY$WriteCacheEnabled$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_WRITE_CACHE_PROPERTY$WriteCacheEnabled$LAYOUT() { return _STORAGE_WRITE_CACHE_PROPERTY$WriteCacheEnabled$LAYOUT_; }

    static final VarHandle _STORAGE_WRITE_CACHE_PROPERTY$WriteCacheEnabled$VH_ = _STORAGE_WRITE_CACHE_PROPERTY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("WriteCacheEnabled"));
    static final java.lang.invoke.VarHandle _STORAGE_WRITE_CACHE_PROPERTY$WriteCacheEnabled$VH() { return _STORAGE_WRITE_CACHE_PROPERTY$WriteCacheEnabled$VH_; }

    static final MemoryLayout _STORAGE_WRITE_CACHE_PROPERTY$WriteCacheChangeable$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_WRITE_CACHE_PROPERTY$WriteCacheChangeable$LAYOUT() { return _STORAGE_WRITE_CACHE_PROPERTY$WriteCacheChangeable$LAYOUT_; }

    static final VarHandle _STORAGE_WRITE_CACHE_PROPERTY$WriteCacheChangeable$VH_ = _STORAGE_WRITE_CACHE_PROPERTY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("WriteCacheChangeable"));
    static final java.lang.invoke.VarHandle _STORAGE_WRITE_CACHE_PROPERTY$WriteCacheChangeable$VH() { return _STORAGE_WRITE_CACHE_PROPERTY$WriteCacheChangeable$VH_; }

    static final MemoryLayout _STORAGE_WRITE_CACHE_PROPERTY$WriteThroughSupported$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_WRITE_CACHE_PROPERTY$WriteThroughSupported$LAYOUT() { return _STORAGE_WRITE_CACHE_PROPERTY$WriteThroughSupported$LAYOUT_; }

    static final VarHandle _STORAGE_WRITE_CACHE_PROPERTY$WriteThroughSupported$VH_ = _STORAGE_WRITE_CACHE_PROPERTY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("WriteThroughSupported"));
    static final java.lang.invoke.VarHandle _STORAGE_WRITE_CACHE_PROPERTY$WriteThroughSupported$VH() { return _STORAGE_WRITE_CACHE_PROPERTY$WriteThroughSupported$VH_; }

    static final MemoryLayout _STORAGE_WRITE_CACHE_PROPERTY$FlushCacheSupported$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_WRITE_CACHE_PROPERTY$FlushCacheSupported$LAYOUT() { return _STORAGE_WRITE_CACHE_PROPERTY$FlushCacheSupported$LAYOUT_; }

    static final VarHandle _STORAGE_WRITE_CACHE_PROPERTY$FlushCacheSupported$VH_ = _STORAGE_WRITE_CACHE_PROPERTY$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("FlushCacheSupported"));
    static final java.lang.invoke.VarHandle _STORAGE_WRITE_CACHE_PROPERTY$FlushCacheSupported$VH() { return _STORAGE_WRITE_CACHE_PROPERTY$FlushCacheSupported$VH_; }

    static final MemoryLayout _STORAGE_WRITE_CACHE_PROPERTY$UserDefinedPowerProtection$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_WRITE_CACHE_PROPERTY$UserDefinedPowerProtection$LAYOUT() { return _STORAGE_WRITE_CACHE_PROPERTY$UserDefinedPowerProtection$LAYOUT_; }

    static final VarHandle _STORAGE_WRITE_CACHE_PROPERTY$UserDefinedPowerProtection$VH_ = _STORAGE_WRITE_CACHE_PROPERTY$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("UserDefinedPowerProtection"));
    static final java.lang.invoke.VarHandle _STORAGE_WRITE_CACHE_PROPERTY$UserDefinedPowerProtection$VH() { return _STORAGE_WRITE_CACHE_PROPERTY$UserDefinedPowerProtection$VH_; }

    static final MemoryLayout _STORAGE_WRITE_CACHE_PROPERTY$NVCacheEnabled$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_WRITE_CACHE_PROPERTY$NVCacheEnabled$LAYOUT() { return _STORAGE_WRITE_CACHE_PROPERTY$NVCacheEnabled$LAYOUT_; }

    static final VarHandle _STORAGE_WRITE_CACHE_PROPERTY$NVCacheEnabled$VH_ = _STORAGE_WRITE_CACHE_PROPERTY$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("NVCacheEnabled"));
    static final java.lang.invoke.VarHandle _STORAGE_WRITE_CACHE_PROPERTY$NVCacheEnabled$VH() { return _STORAGE_WRITE_CACHE_PROPERTY$NVCacheEnabled$VH_; }

    static final MemoryLayout _PERSISTENT_RESERVE_COMMAND$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        MemoryLayout.ofStruct(
            C_SHORT,
            C_SHORT.withName("AllocationLength")
        ).withName("PR_IN"),
        MemoryLayout.ofStruct(
            C_SHORT,
            MemoryLayout.ofSequence(0, C_CHAR).withName("ParameterList")
        ).withName("PR_OUT")
    ).withName("_PERSISTENT_RESERVE_COMMAND");
    static final jdk.incubator.foreign.MemoryLayout _PERSISTENT_RESERVE_COMMAND$struct$LAYOUT() { return _PERSISTENT_RESERVE_COMMAND$struct$LAYOUT_; }

    static final MemoryLayout _PERSISTENT_RESERVE_COMMAND$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERSISTENT_RESERVE_COMMAND$Version$LAYOUT() { return _PERSISTENT_RESERVE_COMMAND$Version$LAYOUT_; }

    static final VarHandle _PERSISTENT_RESERVE_COMMAND$Version$VH_ = _PERSISTENT_RESERVE_COMMAND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _PERSISTENT_RESERVE_COMMAND$Version$VH() { return _PERSISTENT_RESERVE_COMMAND$Version$VH_; }

    static final MemoryLayout _PERSISTENT_RESERVE_COMMAND$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERSISTENT_RESERVE_COMMAND$Size$LAYOUT() { return _PERSISTENT_RESERVE_COMMAND$Size$LAYOUT_; }

    static final VarHandle _PERSISTENT_RESERVE_COMMAND$Size$VH_ = _PERSISTENT_RESERVE_COMMAND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _PERSISTENT_RESERVE_COMMAND$Size$VH() { return _PERSISTENT_RESERVE_COMMAND$Size$VH_; }

    static final MemoryLayout _PERSISTENT_RESERVE_COMMAND$PR_IN$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT,
        C_SHORT.withName("AllocationLength")
    );
    static final jdk.incubator.foreign.MemoryLayout _PERSISTENT_RESERVE_COMMAND$PR_IN$struct$LAYOUT() { return _PERSISTENT_RESERVE_COMMAND$PR_IN$struct$LAYOUT_; }

    static final MemoryLayout _PERSISTENT_RESERVE_COMMAND$PR_IN$AllocationLength$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _PERSISTENT_RESERVE_COMMAND$PR_IN$AllocationLength$LAYOUT() { return _PERSISTENT_RESERVE_COMMAND$PR_IN$AllocationLength$LAYOUT_; }

    static final VarHandle _PERSISTENT_RESERVE_COMMAND$PR_IN$AllocationLength$VH_ = _PERSISTENT_RESERVE_COMMAND$PR_IN$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AllocationLength"));
    static final java.lang.invoke.VarHandle _PERSISTENT_RESERVE_COMMAND$PR_IN$AllocationLength$VH() { return _PERSISTENT_RESERVE_COMMAND$PR_IN$AllocationLength$VH_; }

    static final MemoryLayout _PERSISTENT_RESERVE_COMMAND$PR_OUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT,
        MemoryLayout.ofSequence(0, C_CHAR).withName("ParameterList")
    );
    static final jdk.incubator.foreign.MemoryLayout _PERSISTENT_RESERVE_COMMAND$PR_OUT$struct$LAYOUT() { return _PERSISTENT_RESERVE_COMMAND$PR_OUT$struct$LAYOUT_; }

    static final int TCCollectionBugCheck() { return (int)1L; }

    static final int TCCollectionApplicationRequested() { return (int)2L; }

    static final int TCCollectionDeviceRequested() { return (int)3L; }

    static final MemoryLayout _DEVICEDUMP_SUBSECTION_POINTER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwSize"),
        C_LONG.withName("dwFlags"),
        C_LONG.withName("dwOffset")
    ).withName("_DEVICEDUMP_SUBSECTION_POINTER");
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_SUBSECTION_POINTER$struct$LAYOUT() { return _DEVICEDUMP_SUBSECTION_POINTER$struct$LAYOUT_; }

    static final MemoryLayout _DEVICEDUMP_SUBSECTION_POINTER$dwSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_SUBSECTION_POINTER$dwSize$LAYOUT() { return _DEVICEDUMP_SUBSECTION_POINTER$dwSize$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_SUBSECTION_POINTER$dwSize$VH_ = _DEVICEDUMP_SUBSECTION_POINTER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSize"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_SUBSECTION_POINTER$dwSize$VH() { return _DEVICEDUMP_SUBSECTION_POINTER$dwSize$VH_; }

    static final MemoryLayout _DEVICEDUMP_SUBSECTION_POINTER$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_SUBSECTION_POINTER$dwFlags$LAYOUT() { return _DEVICEDUMP_SUBSECTION_POINTER$dwFlags$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_SUBSECTION_POINTER$dwFlags$VH_ = _DEVICEDUMP_SUBSECTION_POINTER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_SUBSECTION_POINTER$dwFlags$VH() { return _DEVICEDUMP_SUBSECTION_POINTER$dwFlags$VH_; }

    static final MemoryLayout _DEVICEDUMP_SUBSECTION_POINTER$dwOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_SUBSECTION_POINTER$dwOffset$LAYOUT() { return _DEVICEDUMP_SUBSECTION_POINTER$dwOffset$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_SUBSECTION_POINTER$dwOffset$VH_ = _DEVICEDUMP_SUBSECTION_POINTER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwOffset"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_SUBSECTION_POINTER$dwOffset$VH() { return _DEVICEDUMP_SUBSECTION_POINTER$dwOffset$VH_; }

    static final MemoryLayout _DEVICEDUMP_STRUCTURE_VERSION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwSignature"),
        C_LONG.withName("dwVersion"),
        C_LONG.withName("dwSize")
    ).withName("_DEVICEDUMP_STRUCTURE_VERSION");
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STRUCTURE_VERSION$struct$LAYOUT() { return _DEVICEDUMP_STRUCTURE_VERSION$struct$LAYOUT_; }

    static final MemoryLayout _DEVICEDUMP_STRUCTURE_VERSION$dwSignature$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STRUCTURE_VERSION$dwSignature$LAYOUT() { return _DEVICEDUMP_STRUCTURE_VERSION$dwSignature$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_STRUCTURE_VERSION$dwSignature$VH_ = _DEVICEDUMP_STRUCTURE_VERSION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSignature"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_STRUCTURE_VERSION$dwSignature$VH() { return _DEVICEDUMP_STRUCTURE_VERSION$dwSignature$VH_; }

    static final MemoryLayout _DEVICEDUMP_STRUCTURE_VERSION$dwVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STRUCTURE_VERSION$dwVersion$LAYOUT() { return _DEVICEDUMP_STRUCTURE_VERSION$dwVersion$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_STRUCTURE_VERSION$dwVersion$VH_ = _DEVICEDUMP_STRUCTURE_VERSION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersion"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_STRUCTURE_VERSION$dwVersion$VH() { return _DEVICEDUMP_STRUCTURE_VERSION$dwVersion$VH_; }

    static final MemoryLayout _DEVICEDUMP_STRUCTURE_VERSION$dwSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STRUCTURE_VERSION$dwSize$LAYOUT() { return _DEVICEDUMP_STRUCTURE_VERSION$dwSize$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_STRUCTURE_VERSION$dwSize$VH_ = _DEVICEDUMP_STRUCTURE_VERSION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSize"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_STRUCTURE_VERSION$dwSize$VH() { return _DEVICEDUMP_STRUCTURE_VERSION$dwSize$VH_; }

    static final MemoryLayout _DEVICEDUMP_SECTION_HEADER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("guidDeviceDataId"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("sOrganizationID"),
        C_LONG.withName("dwFirmwareRevision"),
        MemoryLayout.ofSequence(32, C_CHAR).withName("sModelNumber"),
        MemoryLayout.ofSequence(32, C_CHAR).withName("szDeviceManufacturingID"),
        C_LONG.withName("dwFlags"),
        C_LONG.withName("bRestrictedPrivateDataVersion"),
        C_LONG.withName("dwFirmwareIssueId"),
        MemoryLayout.ofSequence(132, C_CHAR).withName("szIssueDescriptionString")
    ).withName("_DEVICEDUMP_SECTION_HEADER");
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_SECTION_HEADER$struct$LAYOUT() { return _DEVICEDUMP_SECTION_HEADER$struct$LAYOUT_; }

    static final MemoryLayout _DEVICEDUMP_SECTION_HEADER$dwFirmwareRevision$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_SECTION_HEADER$dwFirmwareRevision$LAYOUT() { return _DEVICEDUMP_SECTION_HEADER$dwFirmwareRevision$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_SECTION_HEADER$dwFirmwareRevision$VH_ = _DEVICEDUMP_SECTION_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFirmwareRevision"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_SECTION_HEADER$dwFirmwareRevision$VH() { return _DEVICEDUMP_SECTION_HEADER$dwFirmwareRevision$VH_; }

    static final MemoryLayout _DEVICEDUMP_SECTION_HEADER$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_SECTION_HEADER$dwFlags$LAYOUT() { return _DEVICEDUMP_SECTION_HEADER$dwFlags$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_SECTION_HEADER$dwFlags$VH_ = _DEVICEDUMP_SECTION_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_SECTION_HEADER$dwFlags$VH() { return _DEVICEDUMP_SECTION_HEADER$dwFlags$VH_; }

    static final MemoryLayout _DEVICEDUMP_SECTION_HEADER$bRestrictedPrivateDataVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_SECTION_HEADER$bRestrictedPrivateDataVersion$LAYOUT() { return _DEVICEDUMP_SECTION_HEADER$bRestrictedPrivateDataVersion$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_SECTION_HEADER$bRestrictedPrivateDataVersion$VH_ = _DEVICEDUMP_SECTION_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bRestrictedPrivateDataVersion"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_SECTION_HEADER$bRestrictedPrivateDataVersion$VH() { return _DEVICEDUMP_SECTION_HEADER$bRestrictedPrivateDataVersion$VH_; }

    static final MemoryLayout _DEVICEDUMP_SECTION_HEADER$dwFirmwareIssueId$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_SECTION_HEADER$dwFirmwareIssueId$LAYOUT() { return _DEVICEDUMP_SECTION_HEADER$dwFirmwareIssueId$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_SECTION_HEADER$dwFirmwareIssueId$VH_ = _DEVICEDUMP_SECTION_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFirmwareIssueId"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_SECTION_HEADER$dwFirmwareIssueId$VH() { return _DEVICEDUMP_SECTION_HEADER$dwFirmwareIssueId$VH_; }

    static final MemoryLayout _GP_LOG_PAGE_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("LogAddress"),
        C_SHORT.withName("LogSectors")
    ).withName("_GP_LOG_PAGE_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _GP_LOG_PAGE_DESCRIPTOR$struct$LAYOUT() { return _GP_LOG_PAGE_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _GP_LOG_PAGE_DESCRIPTOR$LogAddress$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _GP_LOG_PAGE_DESCRIPTOR$LogAddress$LAYOUT() { return _GP_LOG_PAGE_DESCRIPTOR$LogAddress$LAYOUT_; }

    static final VarHandle _GP_LOG_PAGE_DESCRIPTOR$LogAddress$VH_ = _GP_LOG_PAGE_DESCRIPTOR$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("LogAddress"));
    static final java.lang.invoke.VarHandle _GP_LOG_PAGE_DESCRIPTOR$LogAddress$VH() { return _GP_LOG_PAGE_DESCRIPTOR$LogAddress$VH_; }

    static final MemoryLayout _GP_LOG_PAGE_DESCRIPTOR$LogSectors$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _GP_LOG_PAGE_DESCRIPTOR$LogSectors$LAYOUT() { return _GP_LOG_PAGE_DESCRIPTOR$LogSectors$LAYOUT_; }

    static final VarHandle _GP_LOG_PAGE_DESCRIPTOR$LogSectors$VH_ = _GP_LOG_PAGE_DESCRIPTOR$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("LogSectors"));
    static final java.lang.invoke.VarHandle _GP_LOG_PAGE_DESCRIPTOR$LogSectors$VH() { return _GP_LOG_PAGE_DESCRIPTOR$LogSectors$VH_; }

    static final MemoryLayout _DEVICEDUMP_PUBLIC_SUBSECTION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwFlags"),
        MemoryLayout.ofSequence(16, MemoryLayout.ofStruct(
            C_SHORT.withName("LogAddress"),
            C_SHORT.withName("LogSectors")
        ).withName("_GP_LOG_PAGE_DESCRIPTOR")).withName("GPLogTable"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("szDescription"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("bData")
    ).withName("_DEVICEDUMP_PUBLIC_SUBSECTION");
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_PUBLIC_SUBSECTION$struct$LAYOUT() { return _DEVICEDUMP_PUBLIC_SUBSECTION$struct$LAYOUT_; }

    static final MemoryLayout _DEVICEDUMP_PUBLIC_SUBSECTION$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_PUBLIC_SUBSECTION$dwFlags$LAYOUT() { return _DEVICEDUMP_PUBLIC_SUBSECTION$dwFlags$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_PUBLIC_SUBSECTION$dwFlags$VH_ = _DEVICEDUMP_PUBLIC_SUBSECTION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_PUBLIC_SUBSECTION$dwFlags$VH() { return _DEVICEDUMP_PUBLIC_SUBSECTION$dwFlags$VH_; }

    static final MemoryLayout _DEVICEDUMP_RESTRICTED_SUBSECTION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(1, C_CHAR).withName("bData")
    ).withName("_DEVICEDUMP_RESTRICTED_SUBSECTION");
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_RESTRICTED_SUBSECTION$struct$LAYOUT() { return _DEVICEDUMP_RESTRICTED_SUBSECTION$struct$LAYOUT_; }

    static final MemoryLayout _DEVICEDUMP_PRIVATE_SUBSECTION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwFlags"),
        MemoryLayout.ofStruct(
            C_SHORT.withName("LogAddress"),
            C_SHORT.withName("LogSectors")
        ).withName("GPLogId"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("bData")
    ).withName("_DEVICEDUMP_PRIVATE_SUBSECTION");
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_PRIVATE_SUBSECTION$struct$LAYOUT() { return _DEVICEDUMP_PRIVATE_SUBSECTION$struct$LAYOUT_; }

    static final MemoryLayout _DEVICEDUMP_PRIVATE_SUBSECTION$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_PRIVATE_SUBSECTION$dwFlags$LAYOUT() { return _DEVICEDUMP_PRIVATE_SUBSECTION$dwFlags$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_PRIVATE_SUBSECTION$dwFlags$VH_ = _DEVICEDUMP_PRIVATE_SUBSECTION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_PRIVATE_SUBSECTION$dwFlags$VH() { return _DEVICEDUMP_PRIVATE_SUBSECTION$dwFlags$VH_; }

    static final MemoryLayout _DEVICEDUMP_STORAGEDEVICE_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("dwSignature"),
            C_LONG.withName("dwVersion"),
            C_LONG.withName("dwSize")
        ).withName("Descriptor"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
            ).withName("guidDeviceDataId"),
            MemoryLayout.ofSequence(16, C_CHAR).withName("sOrganizationID"),
            C_LONG.withName("dwFirmwareRevision"),
            MemoryLayout.ofSequence(32, C_CHAR).withName("sModelNumber"),
            MemoryLayout.ofSequence(32, C_CHAR).withName("szDeviceManufacturingID"),
            C_LONG.withName("dwFlags"),
            C_LONG.withName("bRestrictedPrivateDataVersion"),
            C_LONG.withName("dwFirmwareIssueId"),
            MemoryLayout.ofSequence(132, C_CHAR).withName("szIssueDescriptionString")
        ).withName("SectionHeader"),
        C_LONG.withName("dwBufferSize"),
        C_LONG.withName("dwReasonForCollection"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwSize"),
            C_LONG.withName("dwFlags"),
            C_LONG.withName("dwOffset")
        ).withName("PublicData"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwSize"),
            C_LONG.withName("dwFlags"),
            C_LONG.withName("dwOffset")
        ).withName("RestrictedData"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwSize"),
            C_LONG.withName("dwFlags"),
            C_LONG.withName("dwOffset")
        ).withName("PrivateData")
    ).withName("_DEVICEDUMP_STORAGEDEVICE_DATA");
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STORAGEDEVICE_DATA$struct$LAYOUT() { return _DEVICEDUMP_STORAGEDEVICE_DATA$struct$LAYOUT_; }

    static final MemoryLayout _DEVICEDUMP_STORAGEDEVICE_DATA$dwBufferSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STORAGEDEVICE_DATA$dwBufferSize$LAYOUT() { return _DEVICEDUMP_STORAGEDEVICE_DATA$dwBufferSize$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_STORAGEDEVICE_DATA$dwBufferSize$VH_ = _DEVICEDUMP_STORAGEDEVICE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwBufferSize"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_STORAGEDEVICE_DATA$dwBufferSize$VH() { return _DEVICEDUMP_STORAGEDEVICE_DATA$dwBufferSize$VH_; }

    static final MemoryLayout _DEVICEDUMP_STORAGEDEVICE_DATA$dwReasonForCollection$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STORAGEDEVICE_DATA$dwReasonForCollection$LAYOUT() { return _DEVICEDUMP_STORAGEDEVICE_DATA$dwReasonForCollection$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_STORAGEDEVICE_DATA$dwReasonForCollection$VH_ = _DEVICEDUMP_STORAGEDEVICE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReasonForCollection"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_STORAGEDEVICE_DATA$dwReasonForCollection$VH() { return _DEVICEDUMP_STORAGEDEVICE_DATA$dwReasonForCollection$VH_; }

    static final MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(16, C_CHAR).withName("Cdb"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("Command"),
        C_LONGLONG.withName("StartTime"),
        C_LONGLONG.withName("EndTime"),
        C_LONG.withName("OperationStatus"),
        C_LONG.withName("OperationError"),
        MemoryLayout.ofUnion(
            MemoryLayout.ofStruct(
                C_LONG.withName("dwReserved")
            ).withName("ExternalStack"),
            MemoryLayout.ofStruct(
                C_LONG.withName("dwAtaPortSpecific")
            ).withName("AtaPort"),
            MemoryLayout.ofStruct(
                C_LONG.withName("SrbTag")
            ).withName("StorPort")
        ).withName("StackSpecific")
    ).withName("_DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD");
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$struct$LAYOUT() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$struct$LAYOUT_; }

    static final MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StartTime$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StartTime$LAYOUT() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StartTime$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StartTime$VH_ = _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("StartTime"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StartTime$VH() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StartTime$VH_; }

    static final MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$EndTime$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$EndTime$LAYOUT() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$EndTime$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$EndTime$VH_ = _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EndTime"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$EndTime$VH() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$EndTime$VH_; }

    static final MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$OperationStatus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$OperationStatus$LAYOUT() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$OperationStatus$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$OperationStatus$VH_ = _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OperationStatus"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$OperationStatus$VH() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$OperationStatus$VH_; }

    static final MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$OperationError$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$OperationError$LAYOUT() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$OperationError$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$OperationError$VH_ = _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OperationError"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$OperationError$VH() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$OperationError$VH_; }

    static final MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$union$LAYOUT_ = MemoryLayout.ofUnion(
        MemoryLayout.ofStruct(
            C_LONG.withName("dwReserved")
        ).withName("ExternalStack"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwAtaPortSpecific")
        ).withName("AtaPort"),
        MemoryLayout.ofStruct(
            C_LONG.withName("SrbTag")
        ).withName("StorPort")
    );
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$union$LAYOUT() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$union$LAYOUT_; }

    static final MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$ExternalStack$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwReserved")
    );
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$ExternalStack$struct$LAYOUT() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$ExternalStack$struct$LAYOUT_; }

    static final MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$ExternalStack$dwReserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$ExternalStack$dwReserved$LAYOUT() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$ExternalStack$dwReserved$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$ExternalStack$dwReserved$VH_ = _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$ExternalStack$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReserved"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$ExternalStack$dwReserved$VH() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$ExternalStack$dwReserved$VH_; }

    static final MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$AtaPort$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwAtaPortSpecific")
    );
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$AtaPort$struct$LAYOUT() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$AtaPort$struct$LAYOUT_; }

    static final MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$AtaPort$dwAtaPortSpecific$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$AtaPort$dwAtaPortSpecific$LAYOUT() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$AtaPort$dwAtaPortSpecific$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$AtaPort$dwAtaPortSpecific$VH_ = _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$AtaPort$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwAtaPortSpecific"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$AtaPort$dwAtaPortSpecific$VH() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$AtaPort$dwAtaPortSpecific$VH_; }

    static final MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$StorPort$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("SrbTag")
    );
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$StorPort$struct$LAYOUT() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$StorPort$struct$LAYOUT_; }

    static final MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$StorPort$SrbTag$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$StorPort$SrbTag$LAYOUT() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$StorPort$SrbTag$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$StorPort$SrbTag$VH_ = _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$StorPort$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SrbTag"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$StorPort$SrbTag$VH() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD$StackSpecific$StorPort$SrbTag$VH_; }

    static final MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("dwSignature"),
            C_LONG.withName("dwVersion"),
            C_LONG.withName("dwSize")
        ).withName("Descriptor"),
        C_LONG.withName("dwReasonForCollection"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("cDriverName"),
        C_LONG.withName("uiNumRecords"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("Cdb"),
            MemoryLayout.ofSequence(16, C_CHAR).withName("Command"),
            C_LONGLONG.withName("StartTime"),
            C_LONGLONG.withName("EndTime"),
            C_LONG.withName("OperationStatus"),
            C_LONG.withName("OperationError"),
            MemoryLayout.ofUnion(
                MemoryLayout.ofStruct(
                    C_LONG.withName("dwReserved")
                ).withName("ExternalStack"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("dwAtaPortSpecific")
                ).withName("AtaPort"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("SrbTag")
                ).withName("StorPort")
            ).withName("StackSpecific")
        ).withName("_DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD")).withName("RecordArray")
    ).withName("_DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP");
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP$struct$LAYOUT() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP$struct$LAYOUT_; }

    static final MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP$dwReasonForCollection$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP$dwReasonForCollection$LAYOUT() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP$dwReasonForCollection$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP$dwReasonForCollection$VH_ = _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReasonForCollection"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP$dwReasonForCollection$VH() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP$dwReasonForCollection$VH_; }

    static final MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP$uiNumRecords$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP$uiNumRecords$LAYOUT() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP$uiNumRecords$LAYOUT_; }

    static final VarHandle _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP$uiNumRecords$VH_ = _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uiNumRecords"));
    static final java.lang.invoke.VarHandle _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP$uiNumRecords$VH() { return _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP$uiNumRecords$VH_; }

    static final MemoryLayout _STORAGE_IDLE_POWER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_INT,
        C_LONG.withName("D3IdleTimeout")
    ).withName("_STORAGE_IDLE_POWER");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_IDLE_POWER$struct$LAYOUT() { return _STORAGE_IDLE_POWER$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_IDLE_POWER$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_IDLE_POWER$Version$LAYOUT() { return _STORAGE_IDLE_POWER$Version$LAYOUT_; }

    static final VarHandle _STORAGE_IDLE_POWER$Version$VH_ = _STORAGE_IDLE_POWER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_IDLE_POWER$Version$VH() { return _STORAGE_IDLE_POWER$Version$VH_; }

    static final MemoryLayout _STORAGE_IDLE_POWER$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_IDLE_POWER$Size$LAYOUT() { return _STORAGE_IDLE_POWER$Size$LAYOUT_; }

    static final VarHandle _STORAGE_IDLE_POWER$Size$VH_ = _STORAGE_IDLE_POWER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_IDLE_POWER$Size$VH() { return _STORAGE_IDLE_POWER$Size$VH_; }

    static final MemoryLayout _STORAGE_IDLE_POWER$D3IdleTimeout$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_IDLE_POWER$D3IdleTimeout$LAYOUT() { return _STORAGE_IDLE_POWER$D3IdleTimeout$LAYOUT_; }

    static final VarHandle _STORAGE_IDLE_POWER$D3IdleTimeout$VH_ = _STORAGE_IDLE_POWER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("D3IdleTimeout"));
    static final java.lang.invoke.VarHandle _STORAGE_IDLE_POWER$D3IdleTimeout$VH() { return _STORAGE_IDLE_POWER$D3IdleTimeout$VH_; }

    static final int StoragePowerupUnknown() { return (int)0L; }

    static final int StoragePowerupIO() { return (int)1L; }

    static final int StoragePowerupDeviceAttention() { return (int)2L; }

    static final MemoryLayout _STORAGE_IDLE_POWERUP_REASON$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_INT.withName("PowerupReason")
    ).withName("_STORAGE_IDLE_POWERUP_REASON");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_IDLE_POWERUP_REASON$struct$LAYOUT() { return _STORAGE_IDLE_POWERUP_REASON$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_IDLE_POWERUP_REASON$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_IDLE_POWERUP_REASON$Version$LAYOUT() { return _STORAGE_IDLE_POWERUP_REASON$Version$LAYOUT_; }

    static final VarHandle _STORAGE_IDLE_POWERUP_REASON$Version$VH_ = _STORAGE_IDLE_POWERUP_REASON$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_IDLE_POWERUP_REASON$Version$VH() { return _STORAGE_IDLE_POWERUP_REASON$Version$VH_; }

    static final MemoryLayout _STORAGE_IDLE_POWERUP_REASON$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_IDLE_POWERUP_REASON$Size$LAYOUT() { return _STORAGE_IDLE_POWERUP_REASON$Size$LAYOUT_; }

    static final VarHandle _STORAGE_IDLE_POWERUP_REASON$Size$VH_ = _STORAGE_IDLE_POWERUP_REASON$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_IDLE_POWERUP_REASON$Size$VH() { return _STORAGE_IDLE_POWERUP_REASON$Size$VH_; }

    static final MemoryLayout _STORAGE_IDLE_POWERUP_REASON$PowerupReason$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_IDLE_POWERUP_REASON$PowerupReason$LAYOUT() { return _STORAGE_IDLE_POWERUP_REASON$PowerupReason$LAYOUT_; }

    static final VarHandle _STORAGE_IDLE_POWERUP_REASON$PowerupReason$VH_ = _STORAGE_IDLE_POWERUP_REASON$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PowerupReason"));
    static final java.lang.invoke.VarHandle _STORAGE_IDLE_POWERUP_REASON$PowerupReason$VH() { return _STORAGE_IDLE_POWERUP_REASON$PowerupReason$VH_; }

    static final int StorageDevicePowerCapUnitsPercent() { return (int)0L; }

    static final int StorageDevicePowerCapUnitsMilliwatts() { return (int)1L; }

    static final MemoryLayout _STORAGE_DEVICE_POWER_CAP$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_INT.withName("Units"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("MaxPower")
    ).withName("_STORAGE_DEVICE_POWER_CAP");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_POWER_CAP$struct$LAYOUT() { return _STORAGE_DEVICE_POWER_CAP$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_DEVICE_POWER_CAP$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_POWER_CAP$Version$LAYOUT() { return _STORAGE_DEVICE_POWER_CAP$Version$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_POWER_CAP$Version$VH_ = _STORAGE_DEVICE_POWER_CAP$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_POWER_CAP$Version$VH() { return _STORAGE_DEVICE_POWER_CAP$Version$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_POWER_CAP$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_POWER_CAP$Size$LAYOUT() { return _STORAGE_DEVICE_POWER_CAP$Size$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_POWER_CAP$Size$VH_ = _STORAGE_DEVICE_POWER_CAP$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_POWER_CAP$Size$VH() { return _STORAGE_DEVICE_POWER_CAP$Size$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_POWER_CAP$Units$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_POWER_CAP$Units$LAYOUT() { return _STORAGE_DEVICE_POWER_CAP$Units$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_POWER_CAP$Units$VH_ = _STORAGE_DEVICE_POWER_CAP$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Units"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_POWER_CAP$Units$VH() { return _STORAGE_DEVICE_POWER_CAP$Units$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_POWER_CAP$MaxPower$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_POWER_CAP$MaxPower$LAYOUT() { return _STORAGE_DEVICE_POWER_CAP$MaxPower$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_POWER_CAP$MaxPower$VH_ = _STORAGE_DEVICE_POWER_CAP$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MaxPower"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_POWER_CAP$MaxPower$VH() { return _STORAGE_DEVICE_POWER_CAP$MaxPower$VH_; }

    static final MemoryLayout _STORAGE_RPMB_DATA_FRAME$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(196, C_CHAR).withName("Stuff"),
        MemoryLayout.ofSequence(32, C_CHAR).withName("KeyOrMAC"),
        MemoryLayout.ofSequence(256, C_CHAR).withName("Data"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("Nonce"),
        MemoryLayout.ofSequence(4, C_CHAR).withName("WriteCounter"),
        MemoryLayout.ofSequence(2, C_CHAR).withName("Address"),
        MemoryLayout.ofSequence(2, C_CHAR).withName("BlockCount"),
        MemoryLayout.ofSequence(2, C_CHAR).withName("OperationResult"),
        MemoryLayout.ofSequence(2, C_CHAR).withName("RequestOrResponseType")
    ).withName("_STORAGE_RPMB_DATA_FRAME");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_RPMB_DATA_FRAME$struct$LAYOUT() { return _STORAGE_RPMB_DATA_FRAME$struct$LAYOUT_; }

    static final int StorRpmbProgramAuthKey() { return (int)1L; }

    static final int StorRpmbQueryWriteCounter() { return (int)2L; }

    static final int StorRpmbAuthenticatedWrite() { return (int)3L; }

    static final int StorRpmbAuthenticatedRead() { return (int)4L; }

    static final int StorRpmbReadResultRequest() { return (int)5L; }

    static final int StorRpmbAuthenticatedDeviceConfigWrite() { return (int)6L; }

    static final int StorRpmbAuthenticatedDeviceConfigRead() { return (int)7L; }

    static final MemoryLayout _STORAGE_EVENT_NOTIFICATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONGLONG.withName("Events")
    ).withName("_STORAGE_EVENT_NOTIFICATION");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_EVENT_NOTIFICATION$struct$LAYOUT() { return _STORAGE_EVENT_NOTIFICATION$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_EVENT_NOTIFICATION$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_EVENT_NOTIFICATION$Version$LAYOUT() { return _STORAGE_EVENT_NOTIFICATION$Version$LAYOUT_; }

    static final VarHandle _STORAGE_EVENT_NOTIFICATION$Version$VH_ = _STORAGE_EVENT_NOTIFICATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_EVENT_NOTIFICATION$Version$VH() { return _STORAGE_EVENT_NOTIFICATION$Version$VH_; }

    static final MemoryLayout _STORAGE_EVENT_NOTIFICATION$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_EVENT_NOTIFICATION$Size$LAYOUT() { return _STORAGE_EVENT_NOTIFICATION$Size$LAYOUT_; }

    static final VarHandle _STORAGE_EVENT_NOTIFICATION$Size$VH_ = _STORAGE_EVENT_NOTIFICATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_EVENT_NOTIFICATION$Size$VH() { return _STORAGE_EVENT_NOTIFICATION$Size$VH_; }

    static final MemoryLayout _STORAGE_EVENT_NOTIFICATION$Events$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_EVENT_NOTIFICATION$Events$LAYOUT() { return _STORAGE_EVENT_NOTIFICATION$Events$LAYOUT_; }

    static final VarHandle _STORAGE_EVENT_NOTIFICATION$Events$VH_ = _STORAGE_EVENT_NOTIFICATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Events"));
    static final java.lang.invoke.VarHandle _STORAGE_EVENT_NOTIFICATION$Events$VH() { return _STORAGE_EVENT_NOTIFICATION$Events$VH_; }

    static final int StorageCounterTypeUnknown() { return (int)0L; }

    static final int StorageCounterTypeTemperatureCelsius() { return (int)1L; }

    static final int StorageCounterTypeTemperatureCelsiusMax() { return (int)2L; }

    static final int StorageCounterTypeReadErrorsTotal() { return (int)3L; }

    static final int StorageCounterTypeReadErrorsCorrected() { return (int)4L; }

    static final int StorageCounterTypeReadErrorsUncorrected() { return (int)5L; }

    static final int StorageCounterTypeWriteErrorsTotal() { return (int)6L; }

    static final int StorageCounterTypeWriteErrorsCorrected() { return (int)7L; }

    static final int StorageCounterTypeWriteErrorsUncorrected() { return (int)8L; }

    static final int StorageCounterTypeManufactureDate() { return (int)9L; }

    static final int StorageCounterTypeStartStopCycleCount() { return (int)10L; }

    static final int StorageCounterTypeStartStopCycleCountMax() { return (int)11L; }

    static final int StorageCounterTypeLoadUnloadCycleCount() { return (int)12L; }

    static final int StorageCounterTypeLoadUnloadCycleCountMax() { return (int)13L; }

    static final int StorageCounterTypeWearPercentage() { return (int)14L; }

    static final int StorageCounterTypeWearPercentageWarning() { return (int)15L; }

    static final int StorageCounterTypeWearPercentageMax() { return (int)16L; }

    static final int StorageCounterTypePowerOnHours() { return (int)17L; }

    static final int StorageCounterTypeReadLatency100NSMax() { return (int)18L; }

    static final int StorageCounterTypeWriteLatency100NSMax() { return (int)19L; }

    static final int StorageCounterTypeFlushLatency100NSMax() { return (int)20L; }

    static final int StorageCounterTypeMax() { return (int)21L; }

    static final MemoryLayout _STORAGE_COUNTER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Type"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            MemoryLayout.ofStruct(
                C_LONG.withName("Week"),
                C_LONG.withName("Year")
            ).withName("ManufactureDate"),
            C_LONGLONG.withName("AsUlonglong")
        ).withName("Value")
    ).withName("_STORAGE_COUNTER");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_COUNTER$struct$LAYOUT() { return _STORAGE_COUNTER$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_COUNTER$Type$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_COUNTER$Type$LAYOUT() { return _STORAGE_COUNTER$Type$LAYOUT_; }

    static final VarHandle _STORAGE_COUNTER$Type$VH_ = _STORAGE_COUNTER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    static final java.lang.invoke.VarHandle _STORAGE_COUNTER$Type$VH() { return _STORAGE_COUNTER$Type$VH_; }

    static final MemoryLayout _STORAGE_COUNTER$Value$union$LAYOUT_ = MemoryLayout.ofUnion(
        MemoryLayout.ofStruct(
            C_LONG.withName("Week"),
            C_LONG.withName("Year")
        ).withName("ManufactureDate"),
        C_LONGLONG.withName("AsUlonglong")
    );
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_COUNTER$Value$union$LAYOUT() { return _STORAGE_COUNTER$Value$union$LAYOUT_; }

    static final MemoryLayout _STORAGE_COUNTER$Value$ManufactureDate$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Week"),
        C_LONG.withName("Year")
    );
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_COUNTER$Value$ManufactureDate$struct$LAYOUT() { return _STORAGE_COUNTER$Value$ManufactureDate$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_COUNTER$Value$ManufactureDate$Week$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_COUNTER$Value$ManufactureDate$Week$LAYOUT() { return _STORAGE_COUNTER$Value$ManufactureDate$Week$LAYOUT_; }

    static final VarHandle _STORAGE_COUNTER$Value$ManufactureDate$Week$VH_ = _STORAGE_COUNTER$Value$ManufactureDate$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Week"));
    static final java.lang.invoke.VarHandle _STORAGE_COUNTER$Value$ManufactureDate$Week$VH() { return _STORAGE_COUNTER$Value$ManufactureDate$Week$VH_; }

    static final MemoryLayout _STORAGE_COUNTER$Value$ManufactureDate$Year$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_COUNTER$Value$ManufactureDate$Year$LAYOUT() { return _STORAGE_COUNTER$Value$ManufactureDate$Year$LAYOUT_; }

    static final VarHandle _STORAGE_COUNTER$Value$ManufactureDate$Year$VH_ = _STORAGE_COUNTER$Value$ManufactureDate$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Year"));
    static final java.lang.invoke.VarHandle _STORAGE_COUNTER$Value$ManufactureDate$Year$VH() { return _STORAGE_COUNTER$Value$ManufactureDate$Year$VH_; }

    static final MemoryLayout _STORAGE_COUNTER$Value$AsUlonglong$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_COUNTER$Value$AsUlonglong$LAYOUT() { return _STORAGE_COUNTER$Value$AsUlonglong$LAYOUT_; }

    static final VarHandle _STORAGE_COUNTER$Value$AsUlonglong$VH_ = _STORAGE_COUNTER$Value$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AsUlonglong"));
    static final java.lang.invoke.VarHandle _STORAGE_COUNTER$Value$AsUlonglong$VH() { return _STORAGE_COUNTER$Value$AsUlonglong$VH_; }

    static final MemoryLayout _STORAGE_COUNTERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("NumberOfCounters"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_INT.withName("Type"),
            MemoryLayout.ofPaddingBits(32),
            MemoryLayout.ofUnion(
                MemoryLayout.ofStruct(
                    C_LONG.withName("Week"),
                    C_LONG.withName("Year")
                ).withName("ManufactureDate"),
                C_LONGLONG.withName("AsUlonglong")
            ).withName("Value")
        ).withName("_STORAGE_COUNTER")).withName("Counters")
    ).withName("_STORAGE_COUNTERS");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_COUNTERS$struct$LAYOUT() { return _STORAGE_COUNTERS$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_COUNTERS$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_COUNTERS$Version$LAYOUT() { return _STORAGE_COUNTERS$Version$LAYOUT_; }

    static final VarHandle _STORAGE_COUNTERS$Version$VH_ = _STORAGE_COUNTERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_COUNTERS$Version$VH() { return _STORAGE_COUNTERS$Version$VH_; }

    static final MemoryLayout _STORAGE_COUNTERS$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_COUNTERS$Size$LAYOUT() { return _STORAGE_COUNTERS$Size$LAYOUT_; }

    static final VarHandle _STORAGE_COUNTERS$Size$VH_ = _STORAGE_COUNTERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_COUNTERS$Size$VH() { return _STORAGE_COUNTERS$Size$VH_; }

    static final MemoryLayout _STORAGE_COUNTERS$NumberOfCounters$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_COUNTERS$NumberOfCounters$LAYOUT() { return _STORAGE_COUNTERS$NumberOfCounters$LAYOUT_; }

    static final VarHandle _STORAGE_COUNTERS$NumberOfCounters$VH_ = _STORAGE_COUNTERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfCounters"));
    static final java.lang.invoke.VarHandle _STORAGE_COUNTERS$NumberOfCounters$VH() { return _STORAGE_COUNTERS$NumberOfCounters$VH_; }

    static final MemoryLayout _STORAGE_HW_FIRMWARE_INFO_QUERY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("Flags"),
        C_LONG.withName("Reserved")
    ).withName("_STORAGE_HW_FIRMWARE_INFO_QUERY");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_FIRMWARE_INFO_QUERY$struct$LAYOUT() { return _STORAGE_HW_FIRMWARE_INFO_QUERY$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_HW_FIRMWARE_INFO_QUERY$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_FIRMWARE_INFO_QUERY$Version$LAYOUT() { return _STORAGE_HW_FIRMWARE_INFO_QUERY$Version$LAYOUT_; }

    static final VarHandle _STORAGE_HW_FIRMWARE_INFO_QUERY$Version$VH_ = _STORAGE_HW_FIRMWARE_INFO_QUERY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_HW_FIRMWARE_INFO_QUERY$Version$VH() { return _STORAGE_HW_FIRMWARE_INFO_QUERY$Version$VH_; }

    static final MemoryLayout _STORAGE_HW_FIRMWARE_INFO_QUERY$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_FIRMWARE_INFO_QUERY$Size$LAYOUT() { return _STORAGE_HW_FIRMWARE_INFO_QUERY$Size$LAYOUT_; }

    static final VarHandle _STORAGE_HW_FIRMWARE_INFO_QUERY$Size$VH_ = _STORAGE_HW_FIRMWARE_INFO_QUERY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_HW_FIRMWARE_INFO_QUERY$Size$VH() { return _STORAGE_HW_FIRMWARE_INFO_QUERY$Size$VH_; }

    static final MemoryLayout _STORAGE_HW_FIRMWARE_INFO_QUERY$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_FIRMWARE_INFO_QUERY$Flags$LAYOUT() { return _STORAGE_HW_FIRMWARE_INFO_QUERY$Flags$LAYOUT_; }

    static final VarHandle _STORAGE_HW_FIRMWARE_INFO_QUERY$Flags$VH_ = _STORAGE_HW_FIRMWARE_INFO_QUERY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _STORAGE_HW_FIRMWARE_INFO_QUERY$Flags$VH() { return _STORAGE_HW_FIRMWARE_INFO_QUERY$Flags$VH_; }

    static final MemoryLayout _STORAGE_HW_FIRMWARE_INFO_QUERY$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_FIRMWARE_INFO_QUERY$Reserved$LAYOUT() { return _STORAGE_HW_FIRMWARE_INFO_QUERY$Reserved$LAYOUT_; }

    static final VarHandle _STORAGE_HW_FIRMWARE_INFO_QUERY$Reserved$VH_ = _STORAGE_HW_FIRMWARE_INFO_QUERY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _STORAGE_HW_FIRMWARE_INFO_QUERY$Reserved$VH() { return _STORAGE_HW_FIRMWARE_INFO_QUERY$Reserved$VH_; }

    static final MemoryLayout _STORAGE_HW_FIRMWARE_SLOT_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_CHAR.withName("SlotNumber"),
        C_CHAR,
        MemoryLayout.ofSequence(6, C_CHAR).withName("Reserved1"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("Revision")
    ).withName("_STORAGE_HW_FIRMWARE_SLOT_INFO");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_FIRMWARE_SLOT_INFO$struct$LAYOUT() { return _STORAGE_HW_FIRMWARE_SLOT_INFO$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_HW_FIRMWARE_SLOT_INFO$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_FIRMWARE_SLOT_INFO$Version$LAYOUT() { return _STORAGE_HW_FIRMWARE_SLOT_INFO$Version$LAYOUT_; }

    static final VarHandle _STORAGE_HW_FIRMWARE_SLOT_INFO$Version$VH_ = _STORAGE_HW_FIRMWARE_SLOT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_HW_FIRMWARE_SLOT_INFO$Version$VH() { return _STORAGE_HW_FIRMWARE_SLOT_INFO$Version$VH_; }

    static final MemoryLayout _STORAGE_HW_FIRMWARE_SLOT_INFO$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_FIRMWARE_SLOT_INFO$Size$LAYOUT() { return _STORAGE_HW_FIRMWARE_SLOT_INFO$Size$LAYOUT_; }

    static final VarHandle _STORAGE_HW_FIRMWARE_SLOT_INFO$Size$VH_ = _STORAGE_HW_FIRMWARE_SLOT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_HW_FIRMWARE_SLOT_INFO$Size$VH() { return _STORAGE_HW_FIRMWARE_SLOT_INFO$Size$VH_; }

    static final MemoryLayout _STORAGE_HW_FIRMWARE_SLOT_INFO$SlotNumber$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_FIRMWARE_SLOT_INFO$SlotNumber$LAYOUT() { return _STORAGE_HW_FIRMWARE_SLOT_INFO$SlotNumber$LAYOUT_; }

    static final VarHandle _STORAGE_HW_FIRMWARE_SLOT_INFO$SlotNumber$VH_ = _STORAGE_HW_FIRMWARE_SLOT_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("SlotNumber"));
    static final java.lang.invoke.VarHandle _STORAGE_HW_FIRMWARE_SLOT_INFO$SlotNumber$VH() { return _STORAGE_HW_FIRMWARE_SLOT_INFO$SlotNumber$VH_; }

    static final MemoryLayout _STORAGE_HW_FIRMWARE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_CHAR,
        C_CHAR.withName("SlotCount"),
        C_CHAR.withName("ActiveSlot"),
        C_CHAR.withName("PendingActivateSlot"),
        C_CHAR.withName("FirmwareShared"),
        MemoryLayout.ofSequence(3, C_CHAR).withName("Reserved"),
        C_LONG.withName("ImagePayloadAlignment"),
        C_LONG.withName("ImagePayloadMaxSize"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONG.withName("Version"),
            C_LONG.withName("Size"),
            C_CHAR.withName("SlotNumber"),
            C_CHAR,
            MemoryLayout.ofSequence(6, C_CHAR).withName("Reserved1"),
            MemoryLayout.ofSequence(16, C_CHAR).withName("Revision")
        ).withName("_STORAGE_HW_FIRMWARE_SLOT_INFO")).withName("Slot")
    ).withName("_STORAGE_HW_FIRMWARE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_FIRMWARE_INFO$struct$LAYOUT() { return _STORAGE_HW_FIRMWARE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_HW_FIRMWARE_INFO$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_FIRMWARE_INFO$Version$LAYOUT() { return _STORAGE_HW_FIRMWARE_INFO$Version$LAYOUT_; }

    static final VarHandle _STORAGE_HW_FIRMWARE_INFO$Version$VH_ = _STORAGE_HW_FIRMWARE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_HW_FIRMWARE_INFO$Version$VH() { return _STORAGE_HW_FIRMWARE_INFO$Version$VH_; }

    static final MemoryLayout _STORAGE_HW_FIRMWARE_INFO$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_FIRMWARE_INFO$Size$LAYOUT() { return _STORAGE_HW_FIRMWARE_INFO$Size$LAYOUT_; }

    static final VarHandle _STORAGE_HW_FIRMWARE_INFO$Size$VH_ = _STORAGE_HW_FIRMWARE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_HW_FIRMWARE_INFO$Size$VH() { return _STORAGE_HW_FIRMWARE_INFO$Size$VH_; }

    static final MemoryLayout _STORAGE_HW_FIRMWARE_INFO$SlotCount$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_FIRMWARE_INFO$SlotCount$LAYOUT() { return _STORAGE_HW_FIRMWARE_INFO$SlotCount$LAYOUT_; }

    static final VarHandle _STORAGE_HW_FIRMWARE_INFO$SlotCount$VH_ = _STORAGE_HW_FIRMWARE_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("SlotCount"));
    static final java.lang.invoke.VarHandle _STORAGE_HW_FIRMWARE_INFO$SlotCount$VH() { return _STORAGE_HW_FIRMWARE_INFO$SlotCount$VH_; }

    static final MemoryLayout _STORAGE_HW_FIRMWARE_INFO$ActiveSlot$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_FIRMWARE_INFO$ActiveSlot$LAYOUT() { return _STORAGE_HW_FIRMWARE_INFO$ActiveSlot$LAYOUT_; }

    static final VarHandle _STORAGE_HW_FIRMWARE_INFO$ActiveSlot$VH_ = _STORAGE_HW_FIRMWARE_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ActiveSlot"));
    static final java.lang.invoke.VarHandle _STORAGE_HW_FIRMWARE_INFO$ActiveSlot$VH() { return _STORAGE_HW_FIRMWARE_INFO$ActiveSlot$VH_; }

    static final MemoryLayout _STORAGE_HW_FIRMWARE_INFO$PendingActivateSlot$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_FIRMWARE_INFO$PendingActivateSlot$LAYOUT() { return _STORAGE_HW_FIRMWARE_INFO$PendingActivateSlot$LAYOUT_; }

    static final VarHandle _STORAGE_HW_FIRMWARE_INFO$PendingActivateSlot$VH_ = _STORAGE_HW_FIRMWARE_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("PendingActivateSlot"));
    static final java.lang.invoke.VarHandle _STORAGE_HW_FIRMWARE_INFO$PendingActivateSlot$VH() { return _STORAGE_HW_FIRMWARE_INFO$PendingActivateSlot$VH_; }

    static final MemoryLayout _STORAGE_HW_FIRMWARE_INFO$FirmwareShared$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_FIRMWARE_INFO$FirmwareShared$LAYOUT() { return _STORAGE_HW_FIRMWARE_INFO$FirmwareShared$LAYOUT_; }

    static final VarHandle _STORAGE_HW_FIRMWARE_INFO$FirmwareShared$VH_ = _STORAGE_HW_FIRMWARE_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("FirmwareShared"));
    static final java.lang.invoke.VarHandle _STORAGE_HW_FIRMWARE_INFO$FirmwareShared$VH() { return _STORAGE_HW_FIRMWARE_INFO$FirmwareShared$VH_; }

    static final MemoryLayout _STORAGE_HW_FIRMWARE_INFO$ImagePayloadAlignment$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_FIRMWARE_INFO$ImagePayloadAlignment$LAYOUT() { return _STORAGE_HW_FIRMWARE_INFO$ImagePayloadAlignment$LAYOUT_; }

    static final VarHandle _STORAGE_HW_FIRMWARE_INFO$ImagePayloadAlignment$VH_ = _STORAGE_HW_FIRMWARE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImagePayloadAlignment"));
    static final java.lang.invoke.VarHandle _STORAGE_HW_FIRMWARE_INFO$ImagePayloadAlignment$VH() { return _STORAGE_HW_FIRMWARE_INFO$ImagePayloadAlignment$VH_; }

}

