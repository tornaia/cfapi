// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$92 extends cfapi_h$constants$91 {

    /* package-private */ cfapi_h$constants$92() {}
    static final MemoryLayout IHttpNegotiate3Vtbl$OnResponse$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IHttpNegotiate3Vtbl$OnResponse$LAYOUT() { return IHttpNegotiate3Vtbl$OnResponse$LAYOUT_; }

    static final VarHandle IHttpNegotiate3Vtbl$OnResponse$VH_ = MemoryHandles.asAddressVarHandle(IHttpNegotiate3Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnResponse")));
    static final java.lang.invoke.VarHandle IHttpNegotiate3Vtbl$OnResponse$VH() { return IHttpNegotiate3Vtbl$OnResponse$VH_; }

    static final MemoryLayout IHttpNegotiate3Vtbl$GetRootSecurityId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IHttpNegotiate3Vtbl$GetRootSecurityId$LAYOUT() { return IHttpNegotiate3Vtbl$GetRootSecurityId$LAYOUT_; }

    static final VarHandle IHttpNegotiate3Vtbl$GetRootSecurityId$VH_ = MemoryHandles.asAddressVarHandle(IHttpNegotiate3Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetRootSecurityId")));
    static final java.lang.invoke.VarHandle IHttpNegotiate3Vtbl$GetRootSecurityId$VH() { return IHttpNegotiate3Vtbl$GetRootSecurityId$VH_; }

    static final MemoryLayout IHttpNegotiate3Vtbl$GetSerializedClientCertContext$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IHttpNegotiate3Vtbl$GetSerializedClientCertContext$LAYOUT() { return IHttpNegotiate3Vtbl$GetSerializedClientCertContext$LAYOUT_; }

    static final VarHandle IHttpNegotiate3Vtbl$GetSerializedClientCertContext$VH_ = MemoryHandles.asAddressVarHandle(IHttpNegotiate3Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetSerializedClientCertContext")));
    static final java.lang.invoke.VarHandle IHttpNegotiate3Vtbl$GetSerializedClientCertContext$VH() { return IHttpNegotiate3Vtbl$GetSerializedClientCertContext$VH_; }

    static final MemoryLayout IHttpNegotiate3$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IHttpNegotiate3");
    static final jdk.incubator.foreign.MemoryLayout IHttpNegotiate3$struct$LAYOUT() { return IHttpNegotiate3$struct$LAYOUT_; }

    static final MemoryLayout IHttpNegotiate3$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IHttpNegotiate3$lpVtbl$LAYOUT() { return IHttpNegotiate3$lpVtbl$LAYOUT_; }

    static final VarHandle IHttpNegotiate3$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IHttpNegotiate3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IHttpNegotiate3$lpVtbl$VH() { return IHttpNegotiate3$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0011_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0011_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0011_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0011_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0011_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0011_v0_0_c_ifspec$VH() { return __MIDL_itf_urlmon_0000_0011_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0011_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0011_v0_0_c_ifspec", __MIDL_itf_urlmon_0000_0011_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0011_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0011_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0011_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0011_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0011_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0011_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0011_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0011_v0_0_s_ifspec$VH() { return __MIDL_itf_urlmon_0000_0011_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0011_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0011_v0_0_s_ifspec", __MIDL_itf_urlmon_0000_0011_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0011_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0011_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IWinInetFileStream$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IWinInetFileStream$LAYOUT() { return IID_IWinInetFileStream$LAYOUT_; }

    static final MemorySegment IID_IWinInetFileStream$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IWinInetFileStream", IID_IWinInetFileStream$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IWinInetFileStream$SEGMENT() { return IID_IWinInetFileStream$SEGMENT_; }

    static final MemoryLayout IWinInetFileStreamVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("SetHandleForUnlock"),
        C_POINTER.withName("SetDeleteFile")
    ).withName("IWinInetFileStreamVtbl");
    static final jdk.incubator.foreign.MemoryLayout IWinInetFileStreamVtbl$struct$LAYOUT() { return IWinInetFileStreamVtbl$struct$LAYOUT_; }

    static final MemoryLayout IWinInetFileStreamVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetFileStreamVtbl$QueryInterface$LAYOUT() { return IWinInetFileStreamVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IWinInetFileStreamVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IWinInetFileStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IWinInetFileStreamVtbl$QueryInterface$VH() { return IWinInetFileStreamVtbl$QueryInterface$VH_; }

    static final MemoryLayout IWinInetFileStreamVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetFileStreamVtbl$AddRef$LAYOUT() { return IWinInetFileStreamVtbl$AddRef$LAYOUT_; }

    static final VarHandle IWinInetFileStreamVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IWinInetFileStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IWinInetFileStreamVtbl$AddRef$VH() { return IWinInetFileStreamVtbl$AddRef$VH_; }

    static final MemoryLayout IWinInetFileStreamVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetFileStreamVtbl$Release$LAYOUT() { return IWinInetFileStreamVtbl$Release$LAYOUT_; }

    static final VarHandle IWinInetFileStreamVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IWinInetFileStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IWinInetFileStreamVtbl$Release$VH() { return IWinInetFileStreamVtbl$Release$VH_; }

    static final MemoryLayout IWinInetFileStreamVtbl$SetHandleForUnlock$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetFileStreamVtbl$SetHandleForUnlock$LAYOUT() { return IWinInetFileStreamVtbl$SetHandleForUnlock$LAYOUT_; }

    static final VarHandle IWinInetFileStreamVtbl$SetHandleForUnlock$VH_ = MemoryHandles.asAddressVarHandle(IWinInetFileStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetHandleForUnlock")));
    static final java.lang.invoke.VarHandle IWinInetFileStreamVtbl$SetHandleForUnlock$VH() { return IWinInetFileStreamVtbl$SetHandleForUnlock$VH_; }

    static final MemoryLayout IWinInetFileStreamVtbl$SetDeleteFile$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetFileStreamVtbl$SetDeleteFile$LAYOUT() { return IWinInetFileStreamVtbl$SetDeleteFile$LAYOUT_; }

    static final VarHandle IWinInetFileStreamVtbl$SetDeleteFile$VH_ = MemoryHandles.asAddressVarHandle(IWinInetFileStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetDeleteFile")));
    static final java.lang.invoke.VarHandle IWinInetFileStreamVtbl$SetDeleteFile$VH() { return IWinInetFileStreamVtbl$SetDeleteFile$VH_; }

    static final MemoryLayout IWinInetFileStream$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IWinInetFileStream");
    static final jdk.incubator.foreign.MemoryLayout IWinInetFileStream$struct$LAYOUT() { return IWinInetFileStream$struct$LAYOUT_; }

    static final MemoryLayout IWinInetFileStream$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetFileStream$lpVtbl$LAYOUT() { return IWinInetFileStream$lpVtbl$LAYOUT_; }

    static final VarHandle IWinInetFileStream$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IWinInetFileStream$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IWinInetFileStream$lpVtbl$VH() { return IWinInetFileStream$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0012_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0012_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0012_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0012_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0012_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0012_v0_0_c_ifspec$VH() { return __MIDL_itf_urlmon_0000_0012_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0012_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0012_v0_0_c_ifspec", __MIDL_itf_urlmon_0000_0012_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0012_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0012_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0012_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0012_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0012_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0012_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0012_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0012_v0_0_s_ifspec$VH() { return __MIDL_itf_urlmon_0000_0012_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0012_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0012_v0_0_s_ifspec", __MIDL_itf_urlmon_0000_0012_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0012_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0012_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IWindowForBindingUI$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IWindowForBindingUI$LAYOUT() { return IID_IWindowForBindingUI$LAYOUT_; }

    static final MemorySegment IID_IWindowForBindingUI$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IWindowForBindingUI", IID_IWindowForBindingUI$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IWindowForBindingUI$SEGMENT() { return IID_IWindowForBindingUI$SEGMENT_; }

    static final MemoryLayout IWindowForBindingUIVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetWindow")
    ).withName("IWindowForBindingUIVtbl");
    static final jdk.incubator.foreign.MemoryLayout IWindowForBindingUIVtbl$struct$LAYOUT() { return IWindowForBindingUIVtbl$struct$LAYOUT_; }

    static final MemoryLayout IWindowForBindingUIVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWindowForBindingUIVtbl$QueryInterface$LAYOUT() { return IWindowForBindingUIVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IWindowForBindingUIVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IWindowForBindingUIVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IWindowForBindingUIVtbl$QueryInterface$VH() { return IWindowForBindingUIVtbl$QueryInterface$VH_; }

    static final MemoryLayout IWindowForBindingUIVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWindowForBindingUIVtbl$AddRef$LAYOUT() { return IWindowForBindingUIVtbl$AddRef$LAYOUT_; }

    static final VarHandle IWindowForBindingUIVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IWindowForBindingUIVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IWindowForBindingUIVtbl$AddRef$VH() { return IWindowForBindingUIVtbl$AddRef$VH_; }

    static final MemoryLayout IWindowForBindingUIVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWindowForBindingUIVtbl$Release$LAYOUT() { return IWindowForBindingUIVtbl$Release$LAYOUT_; }

    static final VarHandle IWindowForBindingUIVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IWindowForBindingUIVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IWindowForBindingUIVtbl$Release$VH() { return IWindowForBindingUIVtbl$Release$VH_; }

    static final MemoryLayout IWindowForBindingUIVtbl$GetWindow$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWindowForBindingUIVtbl$GetWindow$LAYOUT() { return IWindowForBindingUIVtbl$GetWindow$LAYOUT_; }

    static final VarHandle IWindowForBindingUIVtbl$GetWindow$VH_ = MemoryHandles.asAddressVarHandle(IWindowForBindingUIVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetWindow")));
    static final java.lang.invoke.VarHandle IWindowForBindingUIVtbl$GetWindow$VH() { return IWindowForBindingUIVtbl$GetWindow$VH_; }

    static final MemoryLayout IWindowForBindingUI$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IWindowForBindingUI");
    static final jdk.incubator.foreign.MemoryLayout IWindowForBindingUI$struct$LAYOUT() { return IWindowForBindingUI$struct$LAYOUT_; }

    static final MemoryLayout IWindowForBindingUI$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWindowForBindingUI$lpVtbl$LAYOUT() { return IWindowForBindingUI$lpVtbl$LAYOUT_; }

    static final VarHandle IWindowForBindingUI$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IWindowForBindingUI$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IWindowForBindingUI$lpVtbl$VH() { return IWindowForBindingUI$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0013_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0013_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0013_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0013_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0013_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0013_v0_0_c_ifspec$VH() { return __MIDL_itf_urlmon_0000_0013_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0013_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0013_v0_0_c_ifspec", __MIDL_itf_urlmon_0000_0013_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0013_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0013_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0013_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0013_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0013_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0013_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0013_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0013_v0_0_s_ifspec$VH() { return __MIDL_itf_urlmon_0000_0013_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0013_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0013_v0_0_s_ifspec", __MIDL_itf_urlmon_0000_0013_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0013_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0013_v0_0_s_ifspec$SEGMENT_; }

    static final int CIP_DISK_FULL() { return (int)0L; }

    static final int CIP_ACCESS_DENIED() { return (int)1L; }

    static final int CIP_NEWER_VERSION_EXISTS() { return (int)2L; }

    static final int CIP_OLDER_VERSION_EXISTS() { return (int)3L; }

    static final int CIP_NAME_CONFLICT() { return (int)4L; }

    static final int CIP_TRUST_VERIFICATION_COMPONENT_MISSING() { return (int)5L; }

    static final int CIP_EXE_SELF_REGISTERATION_TIMEOUT() { return (int)6L; }

    static final int CIP_UNSAFE_TO_ABORT() { return (int)7L; }

    static final int CIP_NEED_REBOOT() { return (int)8L; }

    static final int CIP_NEED_REBOOT_UI_PERMISSION() { return (int)9L; }

    static final MemoryLayout IID_ICodeInstall$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_ICodeInstall$LAYOUT() { return IID_ICodeInstall$LAYOUT_; }

    static final MemorySegment IID_ICodeInstall$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ICodeInstall", IID_ICodeInstall$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_ICodeInstall$SEGMENT() { return IID_ICodeInstall$SEGMENT_; }

    static final MemoryLayout ICodeInstallVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetWindow"),
        C_POINTER.withName("OnCodeInstallProblem")
    ).withName("ICodeInstallVtbl");
    static final jdk.incubator.foreign.MemoryLayout ICodeInstallVtbl$struct$LAYOUT() { return ICodeInstallVtbl$struct$LAYOUT_; }

    static final MemoryLayout ICodeInstallVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ICodeInstallVtbl$QueryInterface$LAYOUT() { return ICodeInstallVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ICodeInstallVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ICodeInstallVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle ICodeInstallVtbl$QueryInterface$VH() { return ICodeInstallVtbl$QueryInterface$VH_; }

    static final MemoryLayout ICodeInstallVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ICodeInstallVtbl$AddRef$LAYOUT() { return ICodeInstallVtbl$AddRef$LAYOUT_; }

    static final VarHandle ICodeInstallVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ICodeInstallVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle ICodeInstallVtbl$AddRef$VH() { return ICodeInstallVtbl$AddRef$VH_; }

    static final MemoryLayout ICodeInstallVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ICodeInstallVtbl$Release$LAYOUT() { return ICodeInstallVtbl$Release$LAYOUT_; }

    static final VarHandle ICodeInstallVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ICodeInstallVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle ICodeInstallVtbl$Release$VH() { return ICodeInstallVtbl$Release$VH_; }

    static final MemoryLayout ICodeInstallVtbl$GetWindow$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ICodeInstallVtbl$GetWindow$LAYOUT() { return ICodeInstallVtbl$GetWindow$LAYOUT_; }

    static final VarHandle ICodeInstallVtbl$GetWindow$VH_ = MemoryHandles.asAddressVarHandle(ICodeInstallVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetWindow")));
    static final java.lang.invoke.VarHandle ICodeInstallVtbl$GetWindow$VH() { return ICodeInstallVtbl$GetWindow$VH_; }

    static final MemoryLayout ICodeInstallVtbl$OnCodeInstallProblem$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ICodeInstallVtbl$OnCodeInstallProblem$LAYOUT() { return ICodeInstallVtbl$OnCodeInstallProblem$LAYOUT_; }

    static final VarHandle ICodeInstallVtbl$OnCodeInstallProblem$VH_ = MemoryHandles.asAddressVarHandle(ICodeInstallVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnCodeInstallProblem")));
    static final java.lang.invoke.VarHandle ICodeInstallVtbl$OnCodeInstallProblem$VH() { return ICodeInstallVtbl$OnCodeInstallProblem$VH_; }

    static final MemoryLayout ICodeInstall$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ICodeInstall");
    static final jdk.incubator.foreign.MemoryLayout ICodeInstall$struct$LAYOUT() { return ICodeInstall$struct$LAYOUT_; }

    static final MemoryLayout ICodeInstall$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ICodeInstall$lpVtbl$LAYOUT() { return ICodeInstall$lpVtbl$LAYOUT_; }

    static final VarHandle ICodeInstall$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ICodeInstall$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle ICodeInstall$lpVtbl$VH() { return ICodeInstall$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0014_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0014_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0014_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0014_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0014_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0014_v0_0_c_ifspec$VH() { return __MIDL_itf_urlmon_0000_0014_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0014_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0014_v0_0_c_ifspec", __MIDL_itf_urlmon_0000_0014_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0014_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0014_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0014_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0014_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0014_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0014_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0014_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0014_v0_0_s_ifspec$VH() { return __MIDL_itf_urlmon_0000_0014_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0014_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0014_v0_0_s_ifspec", __MIDL_itf_urlmon_0000_0014_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0014_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0014_v0_0_s_ifspec$SEGMENT_; }

    static final int Uri_PROPERTY_ABSOLUTE_URI() { return (int)0L; }

    static final int Uri_PROPERTY_STRING_START() { return (int)0L; }

    static final int Uri_PROPERTY_AUTHORITY() { return (int)1L; }

    static final int Uri_PROPERTY_DISPLAY_URI() { return (int)2L; }

    static final int Uri_PROPERTY_DOMAIN() { return (int)3L; }

    static final int Uri_PROPERTY_EXTENSION() { return (int)4L; }

    static final int Uri_PROPERTY_FRAGMENT() { return (int)5L; }

    static final int Uri_PROPERTY_HOST() { return (int)6L; }

    static final int Uri_PROPERTY_PASSWORD() { return (int)7L; }

    static final int Uri_PROPERTY_PATH() { return (int)8L; }

    static final int Uri_PROPERTY_PATH_AND_QUERY() { return (int)9L; }

    static final int Uri_PROPERTY_QUERY() { return (int)10L; }

    static final int Uri_PROPERTY_RAW_URI() { return (int)11L; }

    static final int Uri_PROPERTY_SCHEME_NAME() { return (int)12L; }

    static final int Uri_PROPERTY_USER_INFO() { return (int)13L; }

    static final int Uri_PROPERTY_USER_NAME() { return (int)14L; }

    static final int Uri_PROPERTY_STRING_LAST() { return (int)14L; }

    static final int Uri_PROPERTY_HOST_TYPE() { return (int)15L; }

    static final int Uri_PROPERTY_DWORD_START() { return (int)15L; }

    static final int Uri_PROPERTY_PORT() { return (int)16L; }

    static final int Uri_PROPERTY_SCHEME() { return (int)17L; }

    static final int Uri_PROPERTY_ZONE() { return (int)18L; }

    static final int Uri_PROPERTY_DWORD_LAST() { return (int)18L; }

    static final int Uri_HOST_UNKNOWN() { return (int)0L; }

    static final int Uri_HOST_DNS() { return (int)1L; }

    static final int Uri_HOST_IPV4() { return (int)2L; }

    static final int Uri_HOST_IPV6() { return (int)3L; }

    static final int Uri_HOST_IDN() { return (int)4L; }

    static final MemoryLayout IID_IUri$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IUri$LAYOUT() { return IID_IUri$LAYOUT_; }

    static final MemorySegment IID_IUri$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IUri", IID_IUri$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IUri$SEGMENT() { return IID_IUri$SEGMENT_; }

    static final MemoryLayout IUriVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetPropertyBSTR"),
        C_POINTER.withName("GetPropertyLength"),
        C_POINTER.withName("GetPropertyDWORD"),
        C_POINTER.withName("HasProperty"),
        C_POINTER.withName("GetAbsoluteUri"),
        C_POINTER.withName("GetAuthority"),
        C_POINTER.withName("GetDisplayUri"),
        C_POINTER.withName("GetDomain"),
        C_POINTER.withName("GetExtension"),
        C_POINTER.withName("GetFragment"),
        C_POINTER.withName("GetHost"),
        C_POINTER.withName("GetPassword"),
        C_POINTER.withName("GetPath"),
        C_POINTER.withName("GetPathAndQuery"),
        C_POINTER.withName("GetQuery"),
        C_POINTER.withName("GetRawUri"),
        C_POINTER.withName("GetSchemeName"),
        C_POINTER.withName("GetUserInfo"),
        C_POINTER.withName("GetUserNameA"),
        C_POINTER.withName("GetHostType"),
        C_POINTER.withName("GetPort"),
        C_POINTER.withName("GetScheme"),
        C_POINTER.withName("GetZone"),
        C_POINTER.withName("GetProperties"),
        C_POINTER.withName("IsEqual")
    ).withName("IUriVtbl");
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$struct$LAYOUT() { return IUriVtbl$struct$LAYOUT_; }

    static final MemoryLayout IUriVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$QueryInterface$LAYOUT() { return IUriVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IUriVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IUriVtbl$QueryInterface$VH() { return IUriVtbl$QueryInterface$VH_; }

    static final MemoryLayout IUriVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$AddRef$LAYOUT() { return IUriVtbl$AddRef$LAYOUT_; }

    static final VarHandle IUriVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IUriVtbl$AddRef$VH() { return IUriVtbl$AddRef$VH_; }

    static final MemoryLayout IUriVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$Release$LAYOUT() { return IUriVtbl$Release$LAYOUT_; }

    static final VarHandle IUriVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IUriVtbl$Release$VH() { return IUriVtbl$Release$VH_; }

    static final MemoryLayout IUriVtbl$GetPropertyBSTR$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetPropertyBSTR$LAYOUT() { return IUriVtbl$GetPropertyBSTR$LAYOUT_; }

    static final VarHandle IUriVtbl$GetPropertyBSTR$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPropertyBSTR")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetPropertyBSTR$VH() { return IUriVtbl$GetPropertyBSTR$VH_; }

    static final MemoryLayout IUriVtbl$GetPropertyLength$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetPropertyLength$LAYOUT() { return IUriVtbl$GetPropertyLength$LAYOUT_; }

    static final VarHandle IUriVtbl$GetPropertyLength$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPropertyLength")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetPropertyLength$VH() { return IUriVtbl$GetPropertyLength$VH_; }

    static final MemoryLayout IUriVtbl$GetPropertyDWORD$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetPropertyDWORD$LAYOUT() { return IUriVtbl$GetPropertyDWORD$LAYOUT_; }

    static final VarHandle IUriVtbl$GetPropertyDWORD$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPropertyDWORD")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetPropertyDWORD$VH() { return IUriVtbl$GetPropertyDWORD$VH_; }

    static final MemoryLayout IUriVtbl$HasProperty$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$HasProperty$LAYOUT() { return IUriVtbl$HasProperty$LAYOUT_; }

    static final VarHandle IUriVtbl$HasProperty$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("HasProperty")));
    static final java.lang.invoke.VarHandle IUriVtbl$HasProperty$VH() { return IUriVtbl$HasProperty$VH_; }

    static final MemoryLayout IUriVtbl$GetAbsoluteUri$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetAbsoluteUri$LAYOUT() { return IUriVtbl$GetAbsoluteUri$LAYOUT_; }

    static final VarHandle IUriVtbl$GetAbsoluteUri$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetAbsoluteUri")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetAbsoluteUri$VH() { return IUriVtbl$GetAbsoluteUri$VH_; }

    static final MemoryLayout IUriVtbl$GetAuthority$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetAuthority$LAYOUT() { return IUriVtbl$GetAuthority$LAYOUT_; }

    static final VarHandle IUriVtbl$GetAuthority$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetAuthority")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetAuthority$VH() { return IUriVtbl$GetAuthority$VH_; }

    static final MemoryLayout IUriVtbl$GetDisplayUri$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetDisplayUri$LAYOUT() { return IUriVtbl$GetDisplayUri$LAYOUT_; }

    static final VarHandle IUriVtbl$GetDisplayUri$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDisplayUri")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetDisplayUri$VH() { return IUriVtbl$GetDisplayUri$VH_; }

    static final MemoryLayout IUriVtbl$GetDomain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetDomain$LAYOUT() { return IUriVtbl$GetDomain$LAYOUT_; }

    static final VarHandle IUriVtbl$GetDomain$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDomain")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetDomain$VH() { return IUriVtbl$GetDomain$VH_; }

    static final MemoryLayout IUriVtbl$GetExtension$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetExtension$LAYOUT() { return IUriVtbl$GetExtension$LAYOUT_; }

    static final VarHandle IUriVtbl$GetExtension$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetExtension")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetExtension$VH() { return IUriVtbl$GetExtension$VH_; }

    static final MemoryLayout IUriVtbl$GetFragment$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetFragment$LAYOUT() { return IUriVtbl$GetFragment$LAYOUT_; }

    static final VarHandle IUriVtbl$GetFragment$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetFragment")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetFragment$VH() { return IUriVtbl$GetFragment$VH_; }

    static final MemoryLayout IUriVtbl$GetHost$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetHost$LAYOUT() { return IUriVtbl$GetHost$LAYOUT_; }

    static final VarHandle IUriVtbl$GetHost$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetHost")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetHost$VH() { return IUriVtbl$GetHost$VH_; }

    static final MemoryLayout IUriVtbl$GetPassword$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetPassword$LAYOUT() { return IUriVtbl$GetPassword$LAYOUT_; }

    static final VarHandle IUriVtbl$GetPassword$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPassword")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetPassword$VH() { return IUriVtbl$GetPassword$VH_; }

    static final MemoryLayout IUriVtbl$GetPath$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetPath$LAYOUT() { return IUriVtbl$GetPath$LAYOUT_; }

    static final VarHandle IUriVtbl$GetPath$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPath")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetPath$VH() { return IUriVtbl$GetPath$VH_; }

    static final MemoryLayout IUriVtbl$GetPathAndQuery$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetPathAndQuery$LAYOUT() { return IUriVtbl$GetPathAndQuery$LAYOUT_; }

    static final VarHandle IUriVtbl$GetPathAndQuery$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPathAndQuery")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetPathAndQuery$VH() { return IUriVtbl$GetPathAndQuery$VH_; }

    static final MemoryLayout IUriVtbl$GetQuery$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetQuery$LAYOUT() { return IUriVtbl$GetQuery$LAYOUT_; }

    static final VarHandle IUriVtbl$GetQuery$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetQuery")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetQuery$VH() { return IUriVtbl$GetQuery$VH_; }

    static final MemoryLayout IUriVtbl$GetRawUri$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetRawUri$LAYOUT() { return IUriVtbl$GetRawUri$LAYOUT_; }

    static final VarHandle IUriVtbl$GetRawUri$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetRawUri")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetRawUri$VH() { return IUriVtbl$GetRawUri$VH_; }

    static final MemoryLayout IUriVtbl$GetSchemeName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetSchemeName$LAYOUT() { return IUriVtbl$GetSchemeName$LAYOUT_; }

    static final VarHandle IUriVtbl$GetSchemeName$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetSchemeName")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetSchemeName$VH() { return IUriVtbl$GetSchemeName$VH_; }

    static final MemoryLayout IUriVtbl$GetUserInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetUserInfo$LAYOUT() { return IUriVtbl$GetUserInfo$LAYOUT_; }

    static final VarHandle IUriVtbl$GetUserInfo$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetUserInfo")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetUserInfo$VH() { return IUriVtbl$GetUserInfo$VH_; }

    static final MemoryLayout IUriVtbl$GetUserNameA$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetUserNameA$LAYOUT() { return IUriVtbl$GetUserNameA$LAYOUT_; }

    static final VarHandle IUriVtbl$GetUserNameA$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetUserNameA")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetUserNameA$VH() { return IUriVtbl$GetUserNameA$VH_; }

    static final MemoryLayout IUriVtbl$GetHostType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetHostType$LAYOUT() { return IUriVtbl$GetHostType$LAYOUT_; }

    static final VarHandle IUriVtbl$GetHostType$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetHostType")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetHostType$VH() { return IUriVtbl$GetHostType$VH_; }

    static final MemoryLayout IUriVtbl$GetPort$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetPort$LAYOUT() { return IUriVtbl$GetPort$LAYOUT_; }

    static final VarHandle IUriVtbl$GetPort$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPort")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetPort$VH() { return IUriVtbl$GetPort$VH_; }

    static final MemoryLayout IUriVtbl$GetScheme$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetScheme$LAYOUT() { return IUriVtbl$GetScheme$LAYOUT_; }

    static final VarHandle IUriVtbl$GetScheme$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetScheme")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetScheme$VH() { return IUriVtbl$GetScheme$VH_; }

    static final MemoryLayout IUriVtbl$GetZone$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetZone$LAYOUT() { return IUriVtbl$GetZone$LAYOUT_; }

    static final VarHandle IUriVtbl$GetZone$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetZone")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetZone$VH() { return IUriVtbl$GetZone$VH_; }

    static final MemoryLayout IUriVtbl$GetProperties$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$GetProperties$LAYOUT() { return IUriVtbl$GetProperties$LAYOUT_; }

    static final VarHandle IUriVtbl$GetProperties$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetProperties")));
    static final java.lang.invoke.VarHandle IUriVtbl$GetProperties$VH() { return IUriVtbl$GetProperties$VH_; }

    static final MemoryLayout IUriVtbl$IsEqual$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriVtbl$IsEqual$LAYOUT() { return IUriVtbl$IsEqual$LAYOUT_; }

    static final VarHandle IUriVtbl$IsEqual$VH_ = MemoryHandles.asAddressVarHandle(IUriVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IsEqual")));
    static final java.lang.invoke.VarHandle IUriVtbl$IsEqual$VH() { return IUriVtbl$IsEqual$VH_; }

    static final MemoryLayout IUri$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IUri");
    static final jdk.incubator.foreign.MemoryLayout IUri$struct$LAYOUT() { return IUri$struct$LAYOUT_; }

    static final MemoryLayout IUri$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUri$lpVtbl$LAYOUT() { return IUri$lpVtbl$LAYOUT_; }

    static final VarHandle IUri$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IUri$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IUri$lpVtbl$VH() { return IUri$lpVtbl$VH_; }

    static final FunctionDescriptor CreateUri$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CreateUri$FUNC() { return CreateUri$FUNC_; }

    static final MethodHandle CreateUri$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateUri",
        "(Ljdk/incubator/foreign/MemoryAddress;IJLjdk/incubator/foreign/MemoryAddress;)I",
        CreateUri$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CreateUri$MH() { return CreateUri$MH_; }

    static final FunctionDescriptor CreateUriWithFragment$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CreateUriWithFragment$FUNC() { return CreateUriWithFragment$FUNC_; }

    static final MethodHandle CreateUriWithFragment$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateUriWithFragment",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IJLjdk/incubator/foreign/MemoryAddress;)I",
        CreateUriWithFragment$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CreateUriWithFragment$MH() { return CreateUriWithFragment$MH_; }

    static final FunctionDescriptor CreateUriFromMultiByteString$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CreateUriFromMultiByteString$FUNC() { return CreateUriFromMultiByteString$FUNC_; }

    static final MethodHandle CreateUriFromMultiByteString$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateUriFromMultiByteString",
        "(Ljdk/incubator/foreign/MemoryAddress;IIIJLjdk/incubator/foreign/MemoryAddress;)I",
        CreateUriFromMultiByteString$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CreateUriFromMultiByteString$MH() { return CreateUriFromMultiByteString$MH_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0015_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0015_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0015_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0015_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0015_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0015_v0_0_c_ifspec$VH() { return __MIDL_itf_urlmon_0000_0015_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0015_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0015_v0_0_c_ifspec", __MIDL_itf_urlmon_0000_0015_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0015_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0015_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0015_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0015_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0015_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0015_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0015_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0015_v0_0_s_ifspec$VH() { return __MIDL_itf_urlmon_0000_0015_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0015_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0015_v0_0_s_ifspec", __MIDL_itf_urlmon_0000_0015_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0015_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0015_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IUriContainer$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IUriContainer$LAYOUT() { return IID_IUriContainer$LAYOUT_; }

    static final MemorySegment IID_IUriContainer$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IUriContainer", IID_IUriContainer$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IUriContainer$SEGMENT() { return IID_IUriContainer$SEGMENT_; }

    static final MemoryLayout IUriContainerVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetIUri")
    ).withName("IUriContainerVtbl");
    static final jdk.incubator.foreign.MemoryLayout IUriContainerVtbl$struct$LAYOUT() { return IUriContainerVtbl$struct$LAYOUT_; }

    static final MemoryLayout IUriContainerVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriContainerVtbl$QueryInterface$LAYOUT() { return IUriContainerVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IUriContainerVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IUriContainerVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IUriContainerVtbl$QueryInterface$VH() { return IUriContainerVtbl$QueryInterface$VH_; }

    static final MemoryLayout IUriContainerVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriContainerVtbl$AddRef$LAYOUT() { return IUriContainerVtbl$AddRef$LAYOUT_; }

    static final VarHandle IUriContainerVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IUriContainerVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IUriContainerVtbl$AddRef$VH() { return IUriContainerVtbl$AddRef$VH_; }

    static final MemoryLayout IUriContainerVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriContainerVtbl$Release$LAYOUT() { return IUriContainerVtbl$Release$LAYOUT_; }

    static final VarHandle IUriContainerVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IUriContainerVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IUriContainerVtbl$Release$VH() { return IUriContainerVtbl$Release$VH_; }

    static final MemoryLayout IUriContainerVtbl$GetIUri$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriContainerVtbl$GetIUri$LAYOUT() { return IUriContainerVtbl$GetIUri$LAYOUT_; }

    static final VarHandle IUriContainerVtbl$GetIUri$VH_ = MemoryHandles.asAddressVarHandle(IUriContainerVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetIUri")));
    static final java.lang.invoke.VarHandle IUriContainerVtbl$GetIUri$VH() { return IUriContainerVtbl$GetIUri$VH_; }

    static final MemoryLayout IUriContainer$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IUriContainer");
    static final jdk.incubator.foreign.MemoryLayout IUriContainer$struct$LAYOUT() { return IUriContainer$struct$LAYOUT_; }

    static final MemoryLayout IUriContainer$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriContainer$lpVtbl$LAYOUT() { return IUriContainer$lpVtbl$LAYOUT_; }

    static final VarHandle IUriContainer$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IUriContainer$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IUriContainer$lpVtbl$VH() { return IUriContainer$lpVtbl$VH_; }

    static final MemoryLayout IID_IUriBuilder$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IUriBuilder$LAYOUT() { return IID_IUriBuilder$LAYOUT_; }

    static final MemorySegment IID_IUriBuilder$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IUriBuilder", IID_IUriBuilder$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IUriBuilder$SEGMENT() { return IID_IUriBuilder$SEGMENT_; }

    static final MemoryLayout IUriBuilderVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("CreateUriSimple"),
        C_POINTER.withName("CreateUri"),
        C_POINTER.withName("CreateUriWithFlags"),
        C_POINTER.withName("GetIUri"),
        C_POINTER.withName("SetIUri"),
        C_POINTER.withName("GetFragment"),
        C_POINTER.withName("GetHost"),
        C_POINTER.withName("GetPassword"),
        C_POINTER.withName("GetPath"),
        C_POINTER.withName("GetPort"),
        C_POINTER.withName("GetQuery"),
        C_POINTER.withName("GetSchemeName"),
        C_POINTER.withName("GetUserNameA"),
        C_POINTER.withName("SetFragment"),
        C_POINTER.withName("SetHost"),
        C_POINTER.withName("SetPassword"),
        C_POINTER.withName("SetPath"),
        C_POINTER.withName("SetPortA"),
        C_POINTER.withName("SetQuery"),
        C_POINTER.withName("SetSchemeName"),
        C_POINTER.withName("SetUserName"),
        C_POINTER.withName("RemoveProperties"),
        C_POINTER.withName("HasBeenModified")
    ).withName("IUriBuilderVtbl");
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$struct$LAYOUT() { return IUriBuilderVtbl$struct$LAYOUT_; }

    static final MemoryLayout IUriBuilderVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$QueryInterface$LAYOUT() { return IUriBuilderVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$QueryInterface$VH() { return IUriBuilderVtbl$QueryInterface$VH_; }

    static final MemoryLayout IUriBuilderVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$AddRef$LAYOUT() { return IUriBuilderVtbl$AddRef$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$AddRef$VH() { return IUriBuilderVtbl$AddRef$VH_; }

    static final MemoryLayout IUriBuilderVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$Release$LAYOUT() { return IUriBuilderVtbl$Release$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$Release$VH() { return IUriBuilderVtbl$Release$VH_; }

    static final MemoryLayout IUriBuilderVtbl$CreateUriSimple$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$CreateUriSimple$LAYOUT() { return IUriBuilderVtbl$CreateUriSimple$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$CreateUriSimple$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateUriSimple")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$CreateUriSimple$VH() { return IUriBuilderVtbl$CreateUriSimple$VH_; }

    static final MemoryLayout IUriBuilderVtbl$CreateUri$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$CreateUri$LAYOUT() { return IUriBuilderVtbl$CreateUri$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$CreateUri$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateUri")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$CreateUri$VH() { return IUriBuilderVtbl$CreateUri$VH_; }

    static final MemoryLayout IUriBuilderVtbl$CreateUriWithFlags$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$CreateUriWithFlags$LAYOUT() { return IUriBuilderVtbl$CreateUriWithFlags$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$CreateUriWithFlags$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateUriWithFlags")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$CreateUriWithFlags$VH() { return IUriBuilderVtbl$CreateUriWithFlags$VH_; }

    static final MemoryLayout IUriBuilderVtbl$GetIUri$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$GetIUri$LAYOUT() { return IUriBuilderVtbl$GetIUri$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$GetIUri$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetIUri")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$GetIUri$VH() { return IUriBuilderVtbl$GetIUri$VH_; }

    static final MemoryLayout IUriBuilderVtbl$SetIUri$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$SetIUri$LAYOUT() { return IUriBuilderVtbl$SetIUri$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$SetIUri$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetIUri")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$SetIUri$VH() { return IUriBuilderVtbl$SetIUri$VH_; }

    static final MemoryLayout IUriBuilderVtbl$GetFragment$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$GetFragment$LAYOUT() { return IUriBuilderVtbl$GetFragment$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$GetFragment$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetFragment")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$GetFragment$VH() { return IUriBuilderVtbl$GetFragment$VH_; }

    static final MemoryLayout IUriBuilderVtbl$GetHost$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$GetHost$LAYOUT() { return IUriBuilderVtbl$GetHost$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$GetHost$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetHost")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$GetHost$VH() { return IUriBuilderVtbl$GetHost$VH_; }

    static final MemoryLayout IUriBuilderVtbl$GetPassword$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$GetPassword$LAYOUT() { return IUriBuilderVtbl$GetPassword$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$GetPassword$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPassword")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$GetPassword$VH() { return IUriBuilderVtbl$GetPassword$VH_; }

    static final MemoryLayout IUriBuilderVtbl$GetPath$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$GetPath$LAYOUT() { return IUriBuilderVtbl$GetPath$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$GetPath$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPath")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$GetPath$VH() { return IUriBuilderVtbl$GetPath$VH_; }

    static final MemoryLayout IUriBuilderVtbl$GetPort$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$GetPort$LAYOUT() { return IUriBuilderVtbl$GetPort$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$GetPort$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetPort")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$GetPort$VH() { return IUriBuilderVtbl$GetPort$VH_; }

    static final MemoryLayout IUriBuilderVtbl$GetQuery$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$GetQuery$LAYOUT() { return IUriBuilderVtbl$GetQuery$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$GetQuery$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetQuery")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$GetQuery$VH() { return IUriBuilderVtbl$GetQuery$VH_; }

    static final MemoryLayout IUriBuilderVtbl$GetSchemeName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$GetSchemeName$LAYOUT() { return IUriBuilderVtbl$GetSchemeName$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$GetSchemeName$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetSchemeName")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$GetSchemeName$VH() { return IUriBuilderVtbl$GetSchemeName$VH_; }

    static final MemoryLayout IUriBuilderVtbl$GetUserNameA$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$GetUserNameA$LAYOUT() { return IUriBuilderVtbl$GetUserNameA$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$GetUserNameA$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetUserNameA")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$GetUserNameA$VH() { return IUriBuilderVtbl$GetUserNameA$VH_; }

    static final MemoryLayout IUriBuilderVtbl$SetFragment$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$SetFragment$LAYOUT() { return IUriBuilderVtbl$SetFragment$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$SetFragment$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetFragment")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$SetFragment$VH() { return IUriBuilderVtbl$SetFragment$VH_; }

    static final MemoryLayout IUriBuilderVtbl$SetHost$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$SetHost$LAYOUT() { return IUriBuilderVtbl$SetHost$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$SetHost$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetHost")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$SetHost$VH() { return IUriBuilderVtbl$SetHost$VH_; }

    static final MemoryLayout IUriBuilderVtbl$SetPassword$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$SetPassword$LAYOUT() { return IUriBuilderVtbl$SetPassword$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$SetPassword$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPassword")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$SetPassword$VH() { return IUriBuilderVtbl$SetPassword$VH_; }

    static final MemoryLayout IUriBuilderVtbl$SetPath$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$SetPath$LAYOUT() { return IUriBuilderVtbl$SetPath$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$SetPath$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPath")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$SetPath$VH() { return IUriBuilderVtbl$SetPath$VH_; }

    static final MemoryLayout IUriBuilderVtbl$SetPortA$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$SetPortA$LAYOUT() { return IUriBuilderVtbl$SetPortA$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$SetPortA$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetPortA")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$SetPortA$VH() { return IUriBuilderVtbl$SetPortA$VH_; }

    static final MemoryLayout IUriBuilderVtbl$SetQuery$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$SetQuery$LAYOUT() { return IUriBuilderVtbl$SetQuery$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$SetQuery$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetQuery")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$SetQuery$VH() { return IUriBuilderVtbl$SetQuery$VH_; }

    static final MemoryLayout IUriBuilderVtbl$SetSchemeName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$SetSchemeName$LAYOUT() { return IUriBuilderVtbl$SetSchemeName$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$SetSchemeName$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetSchemeName")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$SetSchemeName$VH() { return IUriBuilderVtbl$SetSchemeName$VH_; }

    static final MemoryLayout IUriBuilderVtbl$SetUserName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$SetUserName$LAYOUT() { return IUriBuilderVtbl$SetUserName$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$SetUserName$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetUserName")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$SetUserName$VH() { return IUriBuilderVtbl$SetUserName$VH_; }

    static final MemoryLayout IUriBuilderVtbl$RemoveProperties$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$RemoveProperties$LAYOUT() { return IUriBuilderVtbl$RemoveProperties$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$RemoveProperties$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RemoveProperties")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$RemoveProperties$VH() { return IUriBuilderVtbl$RemoveProperties$VH_; }

    static final MemoryLayout IUriBuilderVtbl$HasBeenModified$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderVtbl$HasBeenModified$LAYOUT() { return IUriBuilderVtbl$HasBeenModified$LAYOUT_; }

    static final VarHandle IUriBuilderVtbl$HasBeenModified$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("HasBeenModified")));
    static final java.lang.invoke.VarHandle IUriBuilderVtbl$HasBeenModified$VH() { return IUriBuilderVtbl$HasBeenModified$VH_; }

    static final MemoryLayout IUriBuilder$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IUriBuilder");
    static final jdk.incubator.foreign.MemoryLayout IUriBuilder$struct$LAYOUT() { return IUriBuilder$struct$LAYOUT_; }

    static final MemoryLayout IUriBuilder$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilder$lpVtbl$LAYOUT() { return IUriBuilder$lpVtbl$LAYOUT_; }

    static final VarHandle IUriBuilder$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilder$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IUriBuilder$lpVtbl$VH() { return IUriBuilder$lpVtbl$VH_; }

    static final MemoryLayout IID_IUriBuilderFactory$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IUriBuilderFactory$LAYOUT() { return IID_IUriBuilderFactory$LAYOUT_; }

    static final MemorySegment IID_IUriBuilderFactory$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IUriBuilderFactory", IID_IUriBuilderFactory$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IUriBuilderFactory$SEGMENT() { return IID_IUriBuilderFactory$SEGMENT_; }

    static final MemoryLayout IUriBuilderFactoryVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("CreateIUriBuilder"),
        C_POINTER.withName("CreateInitializedIUriBuilder")
    ).withName("IUriBuilderFactoryVtbl");
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderFactoryVtbl$struct$LAYOUT() { return IUriBuilderFactoryVtbl$struct$LAYOUT_; }

    static final MemoryLayout IUriBuilderFactoryVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderFactoryVtbl$QueryInterface$LAYOUT() { return IUriBuilderFactoryVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IUriBuilderFactoryVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderFactoryVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IUriBuilderFactoryVtbl$QueryInterface$VH() { return IUriBuilderFactoryVtbl$QueryInterface$VH_; }

    static final MemoryLayout IUriBuilderFactoryVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderFactoryVtbl$AddRef$LAYOUT() { return IUriBuilderFactoryVtbl$AddRef$LAYOUT_; }

    static final VarHandle IUriBuilderFactoryVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderFactoryVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IUriBuilderFactoryVtbl$AddRef$VH() { return IUriBuilderFactoryVtbl$AddRef$VH_; }

    static final MemoryLayout IUriBuilderFactoryVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderFactoryVtbl$Release$LAYOUT() { return IUriBuilderFactoryVtbl$Release$LAYOUT_; }

    static final VarHandle IUriBuilderFactoryVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderFactoryVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IUriBuilderFactoryVtbl$Release$VH() { return IUriBuilderFactoryVtbl$Release$VH_; }

    static final MemoryLayout IUriBuilderFactoryVtbl$CreateIUriBuilder$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderFactoryVtbl$CreateIUriBuilder$LAYOUT() { return IUriBuilderFactoryVtbl$CreateIUriBuilder$LAYOUT_; }

    static final VarHandle IUriBuilderFactoryVtbl$CreateIUriBuilder$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderFactoryVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateIUriBuilder")));
    static final java.lang.invoke.VarHandle IUriBuilderFactoryVtbl$CreateIUriBuilder$VH() { return IUriBuilderFactoryVtbl$CreateIUriBuilder$VH_; }

    static final MemoryLayout IUriBuilderFactoryVtbl$CreateInitializedIUriBuilder$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderFactoryVtbl$CreateInitializedIUriBuilder$LAYOUT() { return IUriBuilderFactoryVtbl$CreateInitializedIUriBuilder$LAYOUT_; }

    static final VarHandle IUriBuilderFactoryVtbl$CreateInitializedIUriBuilder$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderFactoryVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateInitializedIUriBuilder")));
    static final java.lang.invoke.VarHandle IUriBuilderFactoryVtbl$CreateInitializedIUriBuilder$VH() { return IUriBuilderFactoryVtbl$CreateInitializedIUriBuilder$VH_; }

    static final MemoryLayout IUriBuilderFactory$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IUriBuilderFactory");
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderFactory$struct$LAYOUT() { return IUriBuilderFactory$struct$LAYOUT_; }

    static final MemoryLayout IUriBuilderFactory$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUriBuilderFactory$lpVtbl$LAYOUT() { return IUriBuilderFactory$lpVtbl$LAYOUT_; }

    static final VarHandle IUriBuilderFactory$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IUriBuilderFactory$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IUriBuilderFactory$lpVtbl$VH() { return IUriBuilderFactory$lpVtbl$VH_; }

    static final FunctionDescriptor CreateIUriBuilder$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CreateIUriBuilder$FUNC() { return CreateIUriBuilder$FUNC_; }

    static final MethodHandle CreateIUriBuilder$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateIUriBuilder",
        "(Ljdk/incubator/foreign/MemoryAddress;IJLjdk/incubator/foreign/MemoryAddress;)I",
        CreateIUriBuilder$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CreateIUriBuilder$MH() { return CreateIUriBuilder$MH_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0018_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0018_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0018_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0018_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0018_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0018_v0_0_c_ifspec$VH() { return __MIDL_itf_urlmon_0000_0018_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0018_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0018_v0_0_c_ifspec", __MIDL_itf_urlmon_0000_0018_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0018_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0018_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0018_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0018_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0018_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0018_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0018_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0018_v0_0_s_ifspec$VH() { return __MIDL_itf_urlmon_0000_0018_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0018_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0018_v0_0_s_ifspec", __MIDL_itf_urlmon_0000_0018_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0018_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0018_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IWinInetInfo$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IWinInetInfo$LAYOUT() { return IID_IWinInetInfo$LAYOUT_; }

    static final MemorySegment IID_IWinInetInfo$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IWinInetInfo", IID_IWinInetInfo$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IWinInetInfo$SEGMENT() { return IID_IWinInetInfo$SEGMENT_; }

    static final MemoryLayout IWinInetInfoVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("QueryOption")
    ).withName("IWinInetInfoVtbl");
    static final jdk.incubator.foreign.MemoryLayout IWinInetInfoVtbl$struct$LAYOUT() { return IWinInetInfoVtbl$struct$LAYOUT_; }

    static final MemoryLayout IWinInetInfoVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetInfoVtbl$QueryInterface$LAYOUT() { return IWinInetInfoVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IWinInetInfoVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IWinInetInfoVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IWinInetInfoVtbl$QueryInterface$VH() { return IWinInetInfoVtbl$QueryInterface$VH_; }

    static final MemoryLayout IWinInetInfoVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetInfoVtbl$AddRef$LAYOUT() { return IWinInetInfoVtbl$AddRef$LAYOUT_; }

    static final VarHandle IWinInetInfoVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IWinInetInfoVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IWinInetInfoVtbl$AddRef$VH() { return IWinInetInfoVtbl$AddRef$VH_; }

    static final MemoryLayout IWinInetInfoVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetInfoVtbl$Release$LAYOUT() { return IWinInetInfoVtbl$Release$LAYOUT_; }

    static final VarHandle IWinInetInfoVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IWinInetInfoVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IWinInetInfoVtbl$Release$VH() { return IWinInetInfoVtbl$Release$VH_; }

    static final MemoryLayout IWinInetInfoVtbl$QueryOption$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetInfoVtbl$QueryOption$LAYOUT() { return IWinInetInfoVtbl$QueryOption$LAYOUT_; }

    static final VarHandle IWinInetInfoVtbl$QueryOption$VH_ = MemoryHandles.asAddressVarHandle(IWinInetInfoVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryOption")));
    static final java.lang.invoke.VarHandle IWinInetInfoVtbl$QueryOption$VH() { return IWinInetInfoVtbl$QueryOption$VH_; }

    static final MemoryLayout IWinInetInfo$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IWinInetInfo");
    static final jdk.incubator.foreign.MemoryLayout IWinInetInfo$struct$LAYOUT() { return IWinInetInfo$struct$LAYOUT_; }

    static final MemoryLayout IWinInetInfo$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetInfo$lpVtbl$LAYOUT() { return IWinInetInfo$lpVtbl$LAYOUT_; }

    static final VarHandle IWinInetInfo$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IWinInetInfo$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IWinInetInfo$lpVtbl$VH() { return IWinInetInfo$lpVtbl$VH_; }

    static final FunctionDescriptor IWinInetInfo_RemoteQueryOption_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IWinInetInfo_RemoteQueryOption_Proxy$FUNC() { return IWinInetInfo_RemoteQueryOption_Proxy$FUNC_; }

    static final MethodHandle IWinInetInfo_RemoteQueryOption_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IWinInetInfo_RemoteQueryOption_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IWinInetInfo_RemoteQueryOption_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IWinInetInfo_RemoteQueryOption_Proxy$MH() { return IWinInetInfo_RemoteQueryOption_Proxy$MH_; }

    static final FunctionDescriptor IWinInetInfo_RemoteQueryOption_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IWinInetInfo_RemoteQueryOption_Stub$FUNC() { return IWinInetInfo_RemoteQueryOption_Stub$FUNC_; }

    static final MethodHandle IWinInetInfo_RemoteQueryOption_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IWinInetInfo_RemoteQueryOption_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IWinInetInfo_RemoteQueryOption_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IWinInetInfo_RemoteQueryOption_Stub$MH() { return IWinInetInfo_RemoteQueryOption_Stub$MH_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0019_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0019_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0019_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0019_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0019_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0019_v0_0_c_ifspec$VH() { return __MIDL_itf_urlmon_0000_0019_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0019_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0019_v0_0_c_ifspec", __MIDL_itf_urlmon_0000_0019_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0019_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0019_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0019_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0019_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0019_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0019_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0019_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0019_v0_0_s_ifspec$VH() { return __MIDL_itf_urlmon_0000_0019_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0019_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0019_v0_0_s_ifspec", __MIDL_itf_urlmon_0000_0019_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0019_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0019_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IHttpSecurity$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IHttpSecurity$LAYOUT() { return IID_IHttpSecurity$LAYOUT_; }

    static final MemorySegment IID_IHttpSecurity$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IHttpSecurity", IID_IHttpSecurity$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IHttpSecurity$SEGMENT() { return IID_IHttpSecurity$SEGMENT_; }

    static final MemoryLayout IHttpSecurityVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetWindow"),
        C_POINTER.withName("OnSecurityProblem")
    ).withName("IHttpSecurityVtbl");
    static final jdk.incubator.foreign.MemoryLayout IHttpSecurityVtbl$struct$LAYOUT() { return IHttpSecurityVtbl$struct$LAYOUT_; }

    static final MemoryLayout IHttpSecurityVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IHttpSecurityVtbl$QueryInterface$LAYOUT() { return IHttpSecurityVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IHttpSecurityVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IHttpSecurityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IHttpSecurityVtbl$QueryInterface$VH() { return IHttpSecurityVtbl$QueryInterface$VH_; }

    static final MemoryLayout IHttpSecurityVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IHttpSecurityVtbl$AddRef$LAYOUT() { return IHttpSecurityVtbl$AddRef$LAYOUT_; }

    static final VarHandle IHttpSecurityVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IHttpSecurityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IHttpSecurityVtbl$AddRef$VH() { return IHttpSecurityVtbl$AddRef$VH_; }

    static final MemoryLayout IHttpSecurityVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IHttpSecurityVtbl$Release$LAYOUT() { return IHttpSecurityVtbl$Release$LAYOUT_; }

    static final VarHandle IHttpSecurityVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IHttpSecurityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IHttpSecurityVtbl$Release$VH() { return IHttpSecurityVtbl$Release$VH_; }

    static final MemoryLayout IHttpSecurityVtbl$GetWindow$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IHttpSecurityVtbl$GetWindow$LAYOUT() { return IHttpSecurityVtbl$GetWindow$LAYOUT_; }

    static final VarHandle IHttpSecurityVtbl$GetWindow$VH_ = MemoryHandles.asAddressVarHandle(IHttpSecurityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetWindow")));
    static final java.lang.invoke.VarHandle IHttpSecurityVtbl$GetWindow$VH() { return IHttpSecurityVtbl$GetWindow$VH_; }

    static final MemoryLayout IHttpSecurityVtbl$OnSecurityProblem$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IHttpSecurityVtbl$OnSecurityProblem$LAYOUT() { return IHttpSecurityVtbl$OnSecurityProblem$LAYOUT_; }

    static final VarHandle IHttpSecurityVtbl$OnSecurityProblem$VH_ = MemoryHandles.asAddressVarHandle(IHttpSecurityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnSecurityProblem")));
    static final java.lang.invoke.VarHandle IHttpSecurityVtbl$OnSecurityProblem$VH() { return IHttpSecurityVtbl$OnSecurityProblem$VH_; }

    static final MemoryLayout IHttpSecurity$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IHttpSecurity");
    static final jdk.incubator.foreign.MemoryLayout IHttpSecurity$struct$LAYOUT() { return IHttpSecurity$struct$LAYOUT_; }

    static final MemoryLayout IHttpSecurity$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IHttpSecurity$lpVtbl$LAYOUT() { return IHttpSecurity$lpVtbl$LAYOUT_; }

    static final VarHandle IHttpSecurity$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IHttpSecurity$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IHttpSecurity$lpVtbl$VH() { return IHttpSecurity$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0020_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0020_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0020_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0020_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0020_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0020_v0_0_c_ifspec$VH() { return __MIDL_itf_urlmon_0000_0020_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0020_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0020_v0_0_c_ifspec", __MIDL_itf_urlmon_0000_0020_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0020_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0020_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0020_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0020_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0020_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0020_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0020_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0020_v0_0_s_ifspec$VH() { return __MIDL_itf_urlmon_0000_0020_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0020_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0020_v0_0_s_ifspec", __MIDL_itf_urlmon_0000_0020_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0020_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0020_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IWinInetHttpInfo$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IWinInetHttpInfo$LAYOUT() { return IID_IWinInetHttpInfo$LAYOUT_; }

    static final MemorySegment IID_IWinInetHttpInfo$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IWinInetHttpInfo", IID_IWinInetHttpInfo$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IWinInetHttpInfo$SEGMENT() { return IID_IWinInetHttpInfo$SEGMENT_; }

    static final MemoryLayout IWinInetHttpInfoVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("QueryOption"),
        C_POINTER.withName("QueryInfo")
    ).withName("IWinInetHttpInfoVtbl");
    static final jdk.incubator.foreign.MemoryLayout IWinInetHttpInfoVtbl$struct$LAYOUT() { return IWinInetHttpInfoVtbl$struct$LAYOUT_; }

    static final MemoryLayout IWinInetHttpInfoVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetHttpInfoVtbl$QueryInterface$LAYOUT() { return IWinInetHttpInfoVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IWinInetHttpInfoVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IWinInetHttpInfoVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IWinInetHttpInfoVtbl$QueryInterface$VH() { return IWinInetHttpInfoVtbl$QueryInterface$VH_; }

    static final MemoryLayout IWinInetHttpInfoVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetHttpInfoVtbl$AddRef$LAYOUT() { return IWinInetHttpInfoVtbl$AddRef$LAYOUT_; }

    static final VarHandle IWinInetHttpInfoVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IWinInetHttpInfoVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IWinInetHttpInfoVtbl$AddRef$VH() { return IWinInetHttpInfoVtbl$AddRef$VH_; }

    static final MemoryLayout IWinInetHttpInfoVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetHttpInfoVtbl$Release$LAYOUT() { return IWinInetHttpInfoVtbl$Release$LAYOUT_; }

    static final VarHandle IWinInetHttpInfoVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IWinInetHttpInfoVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IWinInetHttpInfoVtbl$Release$VH() { return IWinInetHttpInfoVtbl$Release$VH_; }

    static final MemoryLayout IWinInetHttpInfoVtbl$QueryOption$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetHttpInfoVtbl$QueryOption$LAYOUT() { return IWinInetHttpInfoVtbl$QueryOption$LAYOUT_; }

    static final VarHandle IWinInetHttpInfoVtbl$QueryOption$VH_ = MemoryHandles.asAddressVarHandle(IWinInetHttpInfoVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryOption")));
    static final java.lang.invoke.VarHandle IWinInetHttpInfoVtbl$QueryOption$VH() { return IWinInetHttpInfoVtbl$QueryOption$VH_; }

    static final MemoryLayout IWinInetHttpInfoVtbl$QueryInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetHttpInfoVtbl$QueryInfo$LAYOUT() { return IWinInetHttpInfoVtbl$QueryInfo$LAYOUT_; }

    static final VarHandle IWinInetHttpInfoVtbl$QueryInfo$VH_ = MemoryHandles.asAddressVarHandle(IWinInetHttpInfoVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInfo")));
    static final java.lang.invoke.VarHandle IWinInetHttpInfoVtbl$QueryInfo$VH() { return IWinInetHttpInfoVtbl$QueryInfo$VH_; }

    static final MemoryLayout IWinInetHttpInfo$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IWinInetHttpInfo");
    static final jdk.incubator.foreign.MemoryLayout IWinInetHttpInfo$struct$LAYOUT() { return IWinInetHttpInfo$struct$LAYOUT_; }

    static final MemoryLayout IWinInetHttpInfo$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetHttpInfo$lpVtbl$LAYOUT() { return IWinInetHttpInfo$lpVtbl$LAYOUT_; }

    static final VarHandle IWinInetHttpInfo$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IWinInetHttpInfo$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IWinInetHttpInfo$lpVtbl$VH() { return IWinInetHttpInfo$lpVtbl$VH_; }

    static final FunctionDescriptor IWinInetHttpInfo_RemoteQueryInfo_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IWinInetHttpInfo_RemoteQueryInfo_Proxy$FUNC() { return IWinInetHttpInfo_RemoteQueryInfo_Proxy$FUNC_; }

    static final MethodHandle IWinInetHttpInfo_RemoteQueryInfo_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IWinInetHttpInfo_RemoteQueryInfo_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IWinInetHttpInfo_RemoteQueryInfo_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IWinInetHttpInfo_RemoteQueryInfo_Proxy$MH() { return IWinInetHttpInfo_RemoteQueryInfo_Proxy$MH_; }

    static final FunctionDescriptor IWinInetHttpInfo_RemoteQueryInfo_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IWinInetHttpInfo_RemoteQueryInfo_Stub$FUNC() { return IWinInetHttpInfo_RemoteQueryInfo_Stub$FUNC_; }

    static final MethodHandle IWinInetHttpInfo_RemoteQueryInfo_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IWinInetHttpInfo_RemoteQueryInfo_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IWinInetHttpInfo_RemoteQueryInfo_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IWinInetHttpInfo_RemoteQueryInfo_Stub$MH() { return IWinInetHttpInfo_RemoteQueryInfo_Stub$MH_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0021_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0021_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0021_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0021_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0021_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0021_v0_0_c_ifspec$VH() { return __MIDL_itf_urlmon_0000_0021_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0021_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0021_v0_0_c_ifspec", __MIDL_itf_urlmon_0000_0021_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0021_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0021_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0021_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0021_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0021_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0021_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0021_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0021_v0_0_s_ifspec$VH() { return __MIDL_itf_urlmon_0000_0021_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0021_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0021_v0_0_s_ifspec", __MIDL_itf_urlmon_0000_0021_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0021_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0021_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IWinInetHttpTimeouts$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IWinInetHttpTimeouts$LAYOUT() { return IID_IWinInetHttpTimeouts$LAYOUT_; }

    static final MemorySegment IID_IWinInetHttpTimeouts$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IWinInetHttpTimeouts", IID_IWinInetHttpTimeouts$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IWinInetHttpTimeouts$SEGMENT() { return IID_IWinInetHttpTimeouts$SEGMENT_; }

    static final MemoryLayout IWinInetHttpTimeoutsVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetRequestTimeouts")
    ).withName("IWinInetHttpTimeoutsVtbl");
    static final jdk.incubator.foreign.MemoryLayout IWinInetHttpTimeoutsVtbl$struct$LAYOUT() { return IWinInetHttpTimeoutsVtbl$struct$LAYOUT_; }

    static final MemoryLayout IWinInetHttpTimeoutsVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetHttpTimeoutsVtbl$QueryInterface$LAYOUT() { return IWinInetHttpTimeoutsVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IWinInetHttpTimeoutsVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IWinInetHttpTimeoutsVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IWinInetHttpTimeoutsVtbl$QueryInterface$VH() { return IWinInetHttpTimeoutsVtbl$QueryInterface$VH_; }

    static final MemoryLayout IWinInetHttpTimeoutsVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetHttpTimeoutsVtbl$AddRef$LAYOUT() { return IWinInetHttpTimeoutsVtbl$AddRef$LAYOUT_; }

    static final VarHandle IWinInetHttpTimeoutsVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IWinInetHttpTimeoutsVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IWinInetHttpTimeoutsVtbl$AddRef$VH() { return IWinInetHttpTimeoutsVtbl$AddRef$VH_; }

    static final MemoryLayout IWinInetHttpTimeoutsVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetHttpTimeoutsVtbl$Release$LAYOUT() { return IWinInetHttpTimeoutsVtbl$Release$LAYOUT_; }

    static final VarHandle IWinInetHttpTimeoutsVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IWinInetHttpTimeoutsVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IWinInetHttpTimeoutsVtbl$Release$VH() { return IWinInetHttpTimeoutsVtbl$Release$VH_; }

    static final MemoryLayout IWinInetHttpTimeoutsVtbl$GetRequestTimeouts$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetHttpTimeoutsVtbl$GetRequestTimeouts$LAYOUT() { return IWinInetHttpTimeoutsVtbl$GetRequestTimeouts$LAYOUT_; }

    static final VarHandle IWinInetHttpTimeoutsVtbl$GetRequestTimeouts$VH_ = MemoryHandles.asAddressVarHandle(IWinInetHttpTimeoutsVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetRequestTimeouts")));
    static final java.lang.invoke.VarHandle IWinInetHttpTimeoutsVtbl$GetRequestTimeouts$VH() { return IWinInetHttpTimeoutsVtbl$GetRequestTimeouts$VH_; }

    static final MemoryLayout IWinInetHttpTimeouts$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IWinInetHttpTimeouts");
    static final jdk.incubator.foreign.MemoryLayout IWinInetHttpTimeouts$struct$LAYOUT() { return IWinInetHttpTimeouts$struct$LAYOUT_; }

    static final MemoryLayout IWinInetHttpTimeouts$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetHttpTimeouts$lpVtbl$LAYOUT() { return IWinInetHttpTimeouts$lpVtbl$LAYOUT_; }

    static final VarHandle IWinInetHttpTimeouts$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IWinInetHttpTimeouts$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IWinInetHttpTimeouts$lpVtbl$VH() { return IWinInetHttpTimeouts$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0022_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0022_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0022_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0022_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0022_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0022_v0_0_c_ifspec$VH() { return __MIDL_itf_urlmon_0000_0022_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0022_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0022_v0_0_c_ifspec", __MIDL_itf_urlmon_0000_0022_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0022_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0022_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0022_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0022_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0022_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0022_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0022_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0022_v0_0_s_ifspec$VH() { return __MIDL_itf_urlmon_0000_0022_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0022_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0022_v0_0_s_ifspec", __MIDL_itf_urlmon_0000_0022_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0022_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0022_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IWinInetCacheHints$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IWinInetCacheHints$LAYOUT() { return IID_IWinInetCacheHints$LAYOUT_; }

    static final MemorySegment IID_IWinInetCacheHints$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IWinInetCacheHints", IID_IWinInetCacheHints$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IWinInetCacheHints$SEGMENT() { return IID_IWinInetCacheHints$SEGMENT_; }

    static final MemoryLayout IWinInetCacheHintsVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("SetCacheExtension")
    ).withName("IWinInetCacheHintsVtbl");
    static final jdk.incubator.foreign.MemoryLayout IWinInetCacheHintsVtbl$struct$LAYOUT() { return IWinInetCacheHintsVtbl$struct$LAYOUT_; }

    static final MemoryLayout IWinInetCacheHintsVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetCacheHintsVtbl$QueryInterface$LAYOUT() { return IWinInetCacheHintsVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IWinInetCacheHintsVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IWinInetCacheHintsVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IWinInetCacheHintsVtbl$QueryInterface$VH() { return IWinInetCacheHintsVtbl$QueryInterface$VH_; }

    static final MemoryLayout IWinInetCacheHintsVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetCacheHintsVtbl$AddRef$LAYOUT() { return IWinInetCacheHintsVtbl$AddRef$LAYOUT_; }

    static final VarHandle IWinInetCacheHintsVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IWinInetCacheHintsVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IWinInetCacheHintsVtbl$AddRef$VH() { return IWinInetCacheHintsVtbl$AddRef$VH_; }

    static final MemoryLayout IWinInetCacheHintsVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetCacheHintsVtbl$Release$LAYOUT() { return IWinInetCacheHintsVtbl$Release$LAYOUT_; }

    static final VarHandle IWinInetCacheHintsVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IWinInetCacheHintsVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IWinInetCacheHintsVtbl$Release$VH() { return IWinInetCacheHintsVtbl$Release$VH_; }

    static final MemoryLayout IWinInetCacheHintsVtbl$SetCacheExtension$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetCacheHintsVtbl$SetCacheExtension$LAYOUT() { return IWinInetCacheHintsVtbl$SetCacheExtension$LAYOUT_; }

    static final VarHandle IWinInetCacheHintsVtbl$SetCacheExtension$VH_ = MemoryHandles.asAddressVarHandle(IWinInetCacheHintsVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetCacheExtension")));
    static final java.lang.invoke.VarHandle IWinInetCacheHintsVtbl$SetCacheExtension$VH() { return IWinInetCacheHintsVtbl$SetCacheExtension$VH_; }

    static final MemoryLayout IWinInetCacheHints$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IWinInetCacheHints");
    static final jdk.incubator.foreign.MemoryLayout IWinInetCacheHints$struct$LAYOUT() { return IWinInetCacheHints$struct$LAYOUT_; }

    static final MemoryLayout IWinInetCacheHints$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetCacheHints$lpVtbl$LAYOUT() { return IWinInetCacheHints$lpVtbl$LAYOUT_; }

    static final VarHandle IWinInetCacheHints$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IWinInetCacheHints$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IWinInetCacheHints$lpVtbl$VH() { return IWinInetCacheHints$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0023_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0023_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0023_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0023_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0023_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0023_v0_0_c_ifspec$VH() { return __MIDL_itf_urlmon_0000_0023_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0023_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0023_v0_0_c_ifspec", __MIDL_itf_urlmon_0000_0023_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0023_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0023_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0023_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0023_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0023_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0023_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0023_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0023_v0_0_s_ifspec$VH() { return __MIDL_itf_urlmon_0000_0023_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0023_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0023_v0_0_s_ifspec", __MIDL_itf_urlmon_0000_0023_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0023_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0023_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IWinInetCacheHints2$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IWinInetCacheHints2$LAYOUT() { return IID_IWinInetCacheHints2$LAYOUT_; }

    static final MemorySegment IID_IWinInetCacheHints2$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IWinInetCacheHints2", IID_IWinInetCacheHints2$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IWinInetCacheHints2$SEGMENT() { return IID_IWinInetCacheHints2$SEGMENT_; }

    static final MemoryLayout IWinInetCacheHints2Vtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("SetCacheExtension"),
        C_POINTER.withName("SetCacheExtension2")
    ).withName("IWinInetCacheHints2Vtbl");
    static final jdk.incubator.foreign.MemoryLayout IWinInetCacheHints2Vtbl$struct$LAYOUT() { return IWinInetCacheHints2Vtbl$struct$LAYOUT_; }

    static final MemoryLayout IWinInetCacheHints2Vtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetCacheHints2Vtbl$QueryInterface$LAYOUT() { return IWinInetCacheHints2Vtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IWinInetCacheHints2Vtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IWinInetCacheHints2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IWinInetCacheHints2Vtbl$QueryInterface$VH() { return IWinInetCacheHints2Vtbl$QueryInterface$VH_; }

    static final MemoryLayout IWinInetCacheHints2Vtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetCacheHints2Vtbl$AddRef$LAYOUT() { return IWinInetCacheHints2Vtbl$AddRef$LAYOUT_; }

    static final VarHandle IWinInetCacheHints2Vtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IWinInetCacheHints2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IWinInetCacheHints2Vtbl$AddRef$VH() { return IWinInetCacheHints2Vtbl$AddRef$VH_; }

    static final MemoryLayout IWinInetCacheHints2Vtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetCacheHints2Vtbl$Release$LAYOUT() { return IWinInetCacheHints2Vtbl$Release$LAYOUT_; }

    static final VarHandle IWinInetCacheHints2Vtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IWinInetCacheHints2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IWinInetCacheHints2Vtbl$Release$VH() { return IWinInetCacheHints2Vtbl$Release$VH_; }

    static final MemoryLayout IWinInetCacheHints2Vtbl$SetCacheExtension$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetCacheHints2Vtbl$SetCacheExtension$LAYOUT() { return IWinInetCacheHints2Vtbl$SetCacheExtension$LAYOUT_; }

    static final VarHandle IWinInetCacheHints2Vtbl$SetCacheExtension$VH_ = MemoryHandles.asAddressVarHandle(IWinInetCacheHints2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetCacheExtension")));
    static final java.lang.invoke.VarHandle IWinInetCacheHints2Vtbl$SetCacheExtension$VH() { return IWinInetCacheHints2Vtbl$SetCacheExtension$VH_; }

    static final MemoryLayout IWinInetCacheHints2Vtbl$SetCacheExtension2$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetCacheHints2Vtbl$SetCacheExtension2$LAYOUT() { return IWinInetCacheHints2Vtbl$SetCacheExtension2$LAYOUT_; }

    static final VarHandle IWinInetCacheHints2Vtbl$SetCacheExtension2$VH_ = MemoryHandles.asAddressVarHandle(IWinInetCacheHints2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetCacheExtension2")));
    static final java.lang.invoke.VarHandle IWinInetCacheHints2Vtbl$SetCacheExtension2$VH() { return IWinInetCacheHints2Vtbl$SetCacheExtension2$VH_; }

    static final MemoryLayout IWinInetCacheHints2$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IWinInetCacheHints2");
    static final jdk.incubator.foreign.MemoryLayout IWinInetCacheHints2$struct$LAYOUT() { return IWinInetCacheHints2$struct$LAYOUT_; }

    static final MemoryLayout IWinInetCacheHints2$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWinInetCacheHints2$lpVtbl$LAYOUT() { return IWinInetCacheHints2$lpVtbl$LAYOUT_; }

    static final VarHandle IWinInetCacheHints2$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IWinInetCacheHints2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IWinInetCacheHints2$lpVtbl$VH() { return IWinInetCacheHints2$lpVtbl$VH_; }

    static final MemoryLayout SID_BindHost$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout SID_BindHost$LAYOUT() { return SID_BindHost$LAYOUT_; }

    static final MemorySegment SID_BindHost$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "SID_BindHost", SID_BindHost$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment SID_BindHost$SEGMENT() { return SID_BindHost$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0024_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0024_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0024_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0024_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0024_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0024_v0_0_c_ifspec$VH() { return __MIDL_itf_urlmon_0000_0024_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0024_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0024_v0_0_c_ifspec", __MIDL_itf_urlmon_0000_0024_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0024_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0024_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0024_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0024_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0024_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0024_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0024_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0024_v0_0_s_ifspec$VH() { return __MIDL_itf_urlmon_0000_0024_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0024_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0024_v0_0_s_ifspec", __MIDL_itf_urlmon_0000_0024_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0024_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0024_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IBindHost$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IBindHost$LAYOUT() { return IID_IBindHost$LAYOUT_; }

    static final MemorySegment IID_IBindHost$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IBindHost", IID_IBindHost$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IBindHost$SEGMENT() { return IID_IBindHost$SEGMENT_; }

    static final MemoryLayout IBindHostVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("CreateMoniker"),
        C_POINTER.withName("MonikerBindToStorage"),
        C_POINTER.withName("MonikerBindToObject")
    ).withName("IBindHostVtbl");
    static final jdk.incubator.foreign.MemoryLayout IBindHostVtbl$struct$LAYOUT() { return IBindHostVtbl$struct$LAYOUT_; }

    static final MemoryLayout IBindHostVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBindHostVtbl$QueryInterface$LAYOUT() { return IBindHostVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IBindHostVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IBindHostVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IBindHostVtbl$QueryInterface$VH() { return IBindHostVtbl$QueryInterface$VH_; }

    static final MemoryLayout IBindHostVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBindHostVtbl$AddRef$LAYOUT() { return IBindHostVtbl$AddRef$LAYOUT_; }

    static final VarHandle IBindHostVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IBindHostVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IBindHostVtbl$AddRef$VH() { return IBindHostVtbl$AddRef$VH_; }

    static final MemoryLayout IBindHostVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBindHostVtbl$Release$LAYOUT() { return IBindHostVtbl$Release$LAYOUT_; }

    static final VarHandle IBindHostVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IBindHostVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IBindHostVtbl$Release$VH() { return IBindHostVtbl$Release$VH_; }

    static final MemoryLayout IBindHostVtbl$CreateMoniker$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBindHostVtbl$CreateMoniker$LAYOUT() { return IBindHostVtbl$CreateMoniker$LAYOUT_; }

    static final VarHandle IBindHostVtbl$CreateMoniker$VH_ = MemoryHandles.asAddressVarHandle(IBindHostVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateMoniker")));
    static final java.lang.invoke.VarHandle IBindHostVtbl$CreateMoniker$VH() { return IBindHostVtbl$CreateMoniker$VH_; }

    static final MemoryLayout IBindHostVtbl$MonikerBindToStorage$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBindHostVtbl$MonikerBindToStorage$LAYOUT() { return IBindHostVtbl$MonikerBindToStorage$LAYOUT_; }

    static final VarHandle IBindHostVtbl$MonikerBindToStorage$VH_ = MemoryHandles.asAddressVarHandle(IBindHostVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MonikerBindToStorage")));
    static final java.lang.invoke.VarHandle IBindHostVtbl$MonikerBindToStorage$VH() { return IBindHostVtbl$MonikerBindToStorage$VH_; }

    static final MemoryLayout IBindHostVtbl$MonikerBindToObject$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBindHostVtbl$MonikerBindToObject$LAYOUT() { return IBindHostVtbl$MonikerBindToObject$LAYOUT_; }

    static final VarHandle IBindHostVtbl$MonikerBindToObject$VH_ = MemoryHandles.asAddressVarHandle(IBindHostVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MonikerBindToObject")));
    static final java.lang.invoke.VarHandle IBindHostVtbl$MonikerBindToObject$VH() { return IBindHostVtbl$MonikerBindToObject$VH_; }

    static final MemoryLayout IBindHost$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IBindHost");
    static final jdk.incubator.foreign.MemoryLayout IBindHost$struct$LAYOUT() { return IBindHost$struct$LAYOUT_; }

    static final MemoryLayout IBindHost$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBindHost$lpVtbl$LAYOUT() { return IBindHost$lpVtbl$LAYOUT_; }

    static final VarHandle IBindHost$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IBindHost$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IBindHost$lpVtbl$VH() { return IBindHost$lpVtbl$VH_; }

    static final FunctionDescriptor IBindHost_RemoteMonikerBindToStorage_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IBindHost_RemoteMonikerBindToStorage_Proxy$FUNC() { return IBindHost_RemoteMonikerBindToStorage_Proxy$FUNC_; }

    static final MethodHandle IBindHost_RemoteMonikerBindToStorage_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IBindHost_RemoteMonikerBindToStorage_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IBindHost_RemoteMonikerBindToStorage_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IBindHost_RemoteMonikerBindToStorage_Proxy$MH() { return IBindHost_RemoteMonikerBindToStorage_Proxy$MH_; }

    static final FunctionDescriptor IBindHost_RemoteMonikerBindToStorage_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IBindHost_RemoteMonikerBindToStorage_Stub$FUNC() { return IBindHost_RemoteMonikerBindToStorage_Stub$FUNC_; }

    static final MethodHandle IBindHost_RemoteMonikerBindToStorage_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IBindHost_RemoteMonikerBindToStorage_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IBindHost_RemoteMonikerBindToStorage_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IBindHost_RemoteMonikerBindToStorage_Stub$MH() { return IBindHost_RemoteMonikerBindToStorage_Stub$MH_; }

    static final FunctionDescriptor IBindHost_RemoteMonikerBindToObject_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IBindHost_RemoteMonikerBindToObject_Proxy$FUNC() { return IBindHost_RemoteMonikerBindToObject_Proxy$FUNC_; }

    static final MethodHandle IBindHost_RemoteMonikerBindToObject_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IBindHost_RemoteMonikerBindToObject_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IBindHost_RemoteMonikerBindToObject_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IBindHost_RemoteMonikerBindToObject_Proxy$MH() { return IBindHost_RemoteMonikerBindToObject_Proxy$MH_; }

    static final FunctionDescriptor IBindHost_RemoteMonikerBindToObject_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IBindHost_RemoteMonikerBindToObject_Stub$FUNC() { return IBindHost_RemoteMonikerBindToObject_Stub$FUNC_; }

    static final MethodHandle IBindHost_RemoteMonikerBindToObject_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IBindHost_RemoteMonikerBindToObject_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IBindHost_RemoteMonikerBindToObject_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IBindHost_RemoteMonikerBindToObject_Stub$MH() { return IBindHost_RemoteMonikerBindToObject_Stub$MH_; }

    static final FunctionDescriptor HlinkSimpleNavigateToString$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor HlinkSimpleNavigateToString$FUNC() { return HlinkSimpleNavigateToString$FUNC_; }

    static final MethodHandle HlinkSimpleNavigateToString$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HlinkSimpleNavigateToString",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        HlinkSimpleNavigateToString$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HlinkSimpleNavigateToString$MH() { return HlinkSimpleNavigateToString$MH_; }

    static final FunctionDescriptor HlinkSimpleNavigateToMoniker$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor HlinkSimpleNavigateToMoniker$FUNC() { return HlinkSimpleNavigateToMoniker$FUNC_; }

    static final MethodHandle HlinkSimpleNavigateToMoniker$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HlinkSimpleNavigateToMoniker",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        HlinkSimpleNavigateToMoniker$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HlinkSimpleNavigateToMoniker$MH() { return HlinkSimpleNavigateToMoniker$MH_; }

    static final FunctionDescriptor URLOpenStreamA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor URLOpenStreamA$FUNC() { return URLOpenStreamA$FUNC_; }

    static final MethodHandle URLOpenStreamA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "URLOpenStreamA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        URLOpenStreamA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle URLOpenStreamA$MH() { return URLOpenStreamA$MH_; }

    static final FunctionDescriptor URLOpenStreamW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor URLOpenStreamW$FUNC() { return URLOpenStreamW$FUNC_; }

    static final MethodHandle URLOpenStreamW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "URLOpenStreamW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        URLOpenStreamW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle URLOpenStreamW$MH() { return URLOpenStreamW$MH_; }

    static final FunctionDescriptor URLOpenPullStreamA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor URLOpenPullStreamA$FUNC() { return URLOpenPullStreamA$FUNC_; }

    static final MethodHandle URLOpenPullStreamA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "URLOpenPullStreamA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        URLOpenPullStreamA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle URLOpenPullStreamA$MH() { return URLOpenPullStreamA$MH_; }

    static final FunctionDescriptor URLOpenPullStreamW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor URLOpenPullStreamW$FUNC() { return URLOpenPullStreamW$FUNC_; }

    static final MethodHandle URLOpenPullStreamW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "URLOpenPullStreamW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        URLOpenPullStreamW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle URLOpenPullStreamW$MH() { return URLOpenPullStreamW$MH_; }

    static final FunctionDescriptor URLDownloadToFileA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor URLDownloadToFileA$FUNC() { return URLDownloadToFileA$FUNC_; }

    static final MethodHandle URLDownloadToFileA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "URLDownloadToFileA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        URLDownloadToFileA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle URLDownloadToFileA$MH() { return URLDownloadToFileA$MH_; }

    static final FunctionDescriptor URLDownloadToFileW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor URLDownloadToFileW$FUNC() { return URLDownloadToFileW$FUNC_; }

    static final MethodHandle URLDownloadToFileW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "URLDownloadToFileW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        URLDownloadToFileW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle URLDownloadToFileW$MH() { return URLDownloadToFileW$MH_; }

    static final FunctionDescriptor URLDownloadToCacheFileA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor URLDownloadToCacheFileA$FUNC() { return URLDownloadToCacheFileA$FUNC_; }

    static final MethodHandle URLDownloadToCacheFileA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "URLDownloadToCacheFileA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        URLDownloadToCacheFileA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle URLDownloadToCacheFileA$MH() { return URLDownloadToCacheFileA$MH_; }

    static final FunctionDescriptor URLDownloadToCacheFileW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor URLDownloadToCacheFileW$FUNC() { return URLDownloadToCacheFileW$FUNC_; }

    static final MethodHandle URLDownloadToCacheFileW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "URLDownloadToCacheFileW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        URLDownloadToCacheFileW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle URLDownloadToCacheFileW$MH() { return URLDownloadToCacheFileW$MH_; }

    static final FunctionDescriptor URLOpenBlockingStreamA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor URLOpenBlockingStreamA$FUNC() { return URLOpenBlockingStreamA$FUNC_; }

    static final MethodHandle URLOpenBlockingStreamA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "URLOpenBlockingStreamA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        URLOpenBlockingStreamA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle URLOpenBlockingStreamA$MH() { return URLOpenBlockingStreamA$MH_; }

    static final FunctionDescriptor URLOpenBlockingStreamW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor URLOpenBlockingStreamW$FUNC() { return URLOpenBlockingStreamW$FUNC_; }

    static final MethodHandle URLOpenBlockingStreamW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "URLOpenBlockingStreamW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        URLOpenBlockingStreamW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle URLOpenBlockingStreamW$MH() { return URLOpenBlockingStreamW$MH_; }

    static final FunctionDescriptor HlinkGoBack$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HlinkGoBack$FUNC() { return HlinkGoBack$FUNC_; }

    static final MethodHandle HlinkGoBack$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HlinkGoBack",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        HlinkGoBack$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HlinkGoBack$MH() { return HlinkGoBack$MH_; }

    static final FunctionDescriptor HlinkGoForward$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HlinkGoForward$FUNC() { return HlinkGoForward$FUNC_; }

    static final MethodHandle HlinkGoForward$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HlinkGoForward",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        HlinkGoForward$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HlinkGoForward$MH() { return HlinkGoForward$MH_; }

    static final FunctionDescriptor HlinkNavigateString$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HlinkNavigateString$FUNC() { return HlinkNavigateString$FUNC_; }

    static final MethodHandle HlinkNavigateString$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HlinkNavigateString",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        HlinkNavigateString$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HlinkNavigateString$MH() { return HlinkNavigateString$MH_; }

    static final FunctionDescriptor HlinkNavigateMoniker$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HlinkNavigateMoniker$FUNC() { return HlinkNavigateMoniker$FUNC_; }

    static final MethodHandle HlinkNavigateMoniker$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HlinkNavigateMoniker",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        HlinkNavigateMoniker$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HlinkNavigateMoniker$MH() { return HlinkNavigateMoniker$MH_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0025_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0025_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0025_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0025_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0025_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0025_v0_0_c_ifspec$VH() { return __MIDL_itf_urlmon_0000_0025_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0025_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0025_v0_0_c_ifspec", __MIDL_itf_urlmon_0000_0025_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0025_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0025_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0025_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0025_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0025_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0025_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0025_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0025_v0_0_s_ifspec$VH() { return __MIDL_itf_urlmon_0000_0025_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0025_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0025_v0_0_s_ifspec", __MIDL_itf_urlmon_0000_0025_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0025_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0025_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IInternet$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IInternet$LAYOUT() { return IID_IInternet$LAYOUT_; }

    static final MemorySegment IID_IInternet$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IInternet", IID_IInternet$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IInternet$SEGMENT() { return IID_IInternet$SEGMENT_; }

    static final MemoryLayout IInternetVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release")
    ).withName("IInternetVtbl");
    static final jdk.incubator.foreign.MemoryLayout IInternetVtbl$struct$LAYOUT() { return IInternetVtbl$struct$LAYOUT_; }

    static final MemoryLayout IInternetVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IInternetVtbl$QueryInterface$LAYOUT() { return IInternetVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IInternetVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IInternetVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IInternetVtbl$QueryInterface$VH() { return IInternetVtbl$QueryInterface$VH_; }

    static final MemoryLayout IInternetVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IInternetVtbl$AddRef$LAYOUT() { return IInternetVtbl$AddRef$LAYOUT_; }

    static final VarHandle IInternetVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IInternetVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IInternetVtbl$AddRef$VH() { return IInternetVtbl$AddRef$VH_; }

    static final MemoryLayout IInternetVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IInternetVtbl$Release$LAYOUT() { return IInternetVtbl$Release$LAYOUT_; }

    static final VarHandle IInternetVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IInternetVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IInternetVtbl$Release$VH() { return IInternetVtbl$Release$VH_; }

    static final MemoryLayout IInternet$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IInternet");
    static final jdk.incubator.foreign.MemoryLayout IInternet$struct$LAYOUT() { return IInternet$struct$LAYOUT_; }

    static final MemoryLayout IInternet$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IInternet$lpVtbl$LAYOUT() { return IInternet$lpVtbl$LAYOUT_; }

    static final VarHandle IInternet$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IInternet$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IInternet$lpVtbl$VH() { return IInternet$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0026_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0026_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0026_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0026_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0026_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0026_v0_0_c_ifspec$VH() { return __MIDL_itf_urlmon_0000_0026_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0026_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0026_v0_0_c_ifspec", __MIDL_itf_urlmon_0000_0026_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0026_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0026_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0026_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0026_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0026_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0026_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0026_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0026_v0_0_s_ifspec$VH() { return __MIDL_itf_urlmon_0000_0026_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0026_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0026_v0_0_s_ifspec", __MIDL_itf_urlmon_0000_0026_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0026_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0026_v0_0_s_ifspec$SEGMENT_; }

    static final int BINDSTRING_HEADERS() { return (int)1L; }

    static final int BINDSTRING_ACCEPT_MIMES() { return (int)2L; }

    static final int BINDSTRING_EXTRA_URL() { return (int)3L; }

}

