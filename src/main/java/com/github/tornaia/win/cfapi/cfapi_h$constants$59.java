// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$59 extends cfapi_h$constants$58 {

    /* package-private */ cfapi_h$constants$59() {}
    static final MemoryLayout _STORAGE_PREDICT_FAILURE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("PredictFailure"),
        MemoryLayout.ofSequence(512, C_CHAR).withName("VendorSpecific")
    ).withName("_STORAGE_PREDICT_FAILURE");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PREDICT_FAILURE$struct$LAYOUT() { return _STORAGE_PREDICT_FAILURE$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_PREDICT_FAILURE$PredictFailure$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PREDICT_FAILURE$PredictFailure$LAYOUT() { return _STORAGE_PREDICT_FAILURE$PredictFailure$LAYOUT_; }

    static final VarHandle _STORAGE_PREDICT_FAILURE$PredictFailure$VH_ = _STORAGE_PREDICT_FAILURE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PredictFailure"));
    static final java.lang.invoke.VarHandle _STORAGE_PREDICT_FAILURE$PredictFailure$VH() { return _STORAGE_PREDICT_FAILURE$PredictFailure$VH_; }

    static final MemoryLayout _STORAGE_FAILURE_PREDICTION_CONFIG$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_CHAR.withName("Set"),
        C_CHAR.withName("Enabled"),
        C_SHORT.withName("Reserved")
    ).withName("_STORAGE_FAILURE_PREDICTION_CONFIG");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_FAILURE_PREDICTION_CONFIG$struct$LAYOUT() { return _STORAGE_FAILURE_PREDICTION_CONFIG$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_FAILURE_PREDICTION_CONFIG$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_FAILURE_PREDICTION_CONFIG$Version$LAYOUT() { return _STORAGE_FAILURE_PREDICTION_CONFIG$Version$LAYOUT_; }

    static final VarHandle _STORAGE_FAILURE_PREDICTION_CONFIG$Version$VH_ = _STORAGE_FAILURE_PREDICTION_CONFIG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_FAILURE_PREDICTION_CONFIG$Version$VH() { return _STORAGE_FAILURE_PREDICTION_CONFIG$Version$VH_; }

    static final MemoryLayout _STORAGE_FAILURE_PREDICTION_CONFIG$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_FAILURE_PREDICTION_CONFIG$Size$LAYOUT() { return _STORAGE_FAILURE_PREDICTION_CONFIG$Size$LAYOUT_; }

    static final VarHandle _STORAGE_FAILURE_PREDICTION_CONFIG$Size$VH_ = _STORAGE_FAILURE_PREDICTION_CONFIG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_FAILURE_PREDICTION_CONFIG$Size$VH() { return _STORAGE_FAILURE_PREDICTION_CONFIG$Size$VH_; }

    static final MemoryLayout _STORAGE_FAILURE_PREDICTION_CONFIG$Set$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_FAILURE_PREDICTION_CONFIG$Set$LAYOUT() { return _STORAGE_FAILURE_PREDICTION_CONFIG$Set$LAYOUT_; }

    static final VarHandle _STORAGE_FAILURE_PREDICTION_CONFIG$Set$VH_ = _STORAGE_FAILURE_PREDICTION_CONFIG$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Set"));
    static final java.lang.invoke.VarHandle _STORAGE_FAILURE_PREDICTION_CONFIG$Set$VH() { return _STORAGE_FAILURE_PREDICTION_CONFIG$Set$VH_; }

    static final MemoryLayout _STORAGE_FAILURE_PREDICTION_CONFIG$Enabled$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_FAILURE_PREDICTION_CONFIG$Enabled$LAYOUT() { return _STORAGE_FAILURE_PREDICTION_CONFIG$Enabled$LAYOUT_; }

    static final VarHandle _STORAGE_FAILURE_PREDICTION_CONFIG$Enabled$VH_ = _STORAGE_FAILURE_PREDICTION_CONFIG$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Enabled"));
    static final java.lang.invoke.VarHandle _STORAGE_FAILURE_PREDICTION_CONFIG$Enabled$VH() { return _STORAGE_FAILURE_PREDICTION_CONFIG$Enabled$VH_; }

    static final MemoryLayout _STORAGE_FAILURE_PREDICTION_CONFIG$Reserved$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_FAILURE_PREDICTION_CONFIG$Reserved$LAYOUT() { return _STORAGE_FAILURE_PREDICTION_CONFIG$Reserved$LAYOUT_; }

    static final VarHandle _STORAGE_FAILURE_PREDICTION_CONFIG$Reserved$VH_ = _STORAGE_FAILURE_PREDICTION_CONFIG$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _STORAGE_FAILURE_PREDICTION_CONFIG$Reserved$VH() { return _STORAGE_FAILURE_PREDICTION_CONFIG$Reserved$VH_; }

    static final int PropertyStandardQuery() { return (int)0L; }

    static final int PropertyExistsQuery() { return (int)1L; }

    static final int PropertyMaskQuery() { return (int)2L; }

    static final int PropertyQueryMaxDefined() { return (int)3L; }

    static final int PropertyStandardSet() { return (int)0L; }

    static final int PropertyExistsSet() { return (int)1L; }

    static final int PropertySetMaxDefined() { return (int)2L; }

    static final int StorageDeviceProperty() { return (int)0L; }

    static final int StorageAdapterProperty() { return (int)1L; }

    static final int StorageDeviceIdProperty() { return (int)2L; }

    static final int StorageDeviceUniqueIdProperty() { return (int)3L; }

    static final int StorageDeviceWriteCacheProperty() { return (int)4L; }

    static final int StorageMiniportProperty() { return (int)5L; }

    static final int StorageAccessAlignmentProperty() { return (int)6L; }

    static final int StorageDeviceSeekPenaltyProperty() { return (int)7L; }

    static final int StorageDeviceTrimProperty() { return (int)8L; }

    static final int StorageDeviceWriteAggregationProperty() { return (int)9L; }

    static final int StorageDeviceDeviceTelemetryProperty() { return (int)10L; }

    static final int StorageDeviceLBProvisioningProperty() { return (int)11L; }

    static final int StorageDevicePowerProperty() { return (int)12L; }

    static final int StorageDeviceCopyOffloadProperty() { return (int)13L; }

    static final int StorageDeviceResiliencyProperty() { return (int)14L; }

    static final int StorageDeviceMediumProductType() { return (int)15L; }

    static final int StorageAdapterRpmbProperty() { return (int)16L; }

    static final int StorageAdapterCryptoProperty() { return (int)17L; }

    static final int StorageDeviceIoCapabilityProperty() { return (int)48L; }

    static final int StorageAdapterProtocolSpecificProperty() { return (int)49L; }

    static final int StorageDeviceProtocolSpecificProperty() { return (int)50L; }

    static final int StorageAdapterTemperatureProperty() { return (int)51L; }

    static final int StorageDeviceTemperatureProperty() { return (int)52L; }

    static final int StorageAdapterPhysicalTopologyProperty() { return (int)53L; }

    static final int StorageDevicePhysicalTopologyProperty() { return (int)54L; }

    static final int StorageDeviceAttributesProperty() { return (int)55L; }

    static final int StorageDeviceManagementStatus() { return (int)56L; }

    static final int StorageAdapterSerialNumberProperty() { return (int)57L; }

    static final int StorageDeviceLocationProperty() { return (int)58L; }

    static final int StorageDeviceNumaProperty() { return (int)59L; }

    static final int StorageDeviceZonedDeviceProperty() { return (int)60L; }

    static final int StorageDeviceUnsafeShutdownCount() { return (int)61L; }

    static final int StorageDeviceEnduranceProperty() { return (int)62L; }

    static final MemoryLayout _STORAGE_PROPERTY_QUERY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("PropertyId"),
        C_INT.withName("QueryType"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("AdditionalParameters"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("_STORAGE_PROPERTY_QUERY");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROPERTY_QUERY$struct$LAYOUT() { return _STORAGE_PROPERTY_QUERY$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_PROPERTY_QUERY$PropertyId$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROPERTY_QUERY$PropertyId$LAYOUT() { return _STORAGE_PROPERTY_QUERY$PropertyId$LAYOUT_; }

    static final VarHandle _STORAGE_PROPERTY_QUERY$PropertyId$VH_ = _STORAGE_PROPERTY_QUERY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PropertyId"));
    static final java.lang.invoke.VarHandle _STORAGE_PROPERTY_QUERY$PropertyId$VH() { return _STORAGE_PROPERTY_QUERY$PropertyId$VH_; }

    static final MemoryLayout _STORAGE_PROPERTY_QUERY$QueryType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROPERTY_QUERY$QueryType$LAYOUT() { return _STORAGE_PROPERTY_QUERY$QueryType$LAYOUT_; }

    static final VarHandle _STORAGE_PROPERTY_QUERY$QueryType$VH_ = _STORAGE_PROPERTY_QUERY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("QueryType"));
    static final java.lang.invoke.VarHandle _STORAGE_PROPERTY_QUERY$QueryType$VH() { return _STORAGE_PROPERTY_QUERY$QueryType$VH_; }

    static final MemoryLayout _STORAGE_PROPERTY_SET$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("PropertyId"),
        C_INT.withName("SetType"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("AdditionalParameters"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("_STORAGE_PROPERTY_SET");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROPERTY_SET$struct$LAYOUT() { return _STORAGE_PROPERTY_SET$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_PROPERTY_SET$PropertyId$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROPERTY_SET$PropertyId$LAYOUT() { return _STORAGE_PROPERTY_SET$PropertyId$LAYOUT_; }

    static final VarHandle _STORAGE_PROPERTY_SET$PropertyId$VH_ = _STORAGE_PROPERTY_SET$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PropertyId"));
    static final java.lang.invoke.VarHandle _STORAGE_PROPERTY_SET$PropertyId$VH() { return _STORAGE_PROPERTY_SET$PropertyId$VH_; }

    static final MemoryLayout _STORAGE_PROPERTY_SET$SetType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROPERTY_SET$SetType$LAYOUT() { return _STORAGE_PROPERTY_SET$SetType$LAYOUT_; }

    static final VarHandle _STORAGE_PROPERTY_SET$SetType$VH_ = _STORAGE_PROPERTY_SET$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SetType"));
    static final java.lang.invoke.VarHandle _STORAGE_PROPERTY_SET$SetType$VH() { return _STORAGE_PROPERTY_SET$SetType$VH_; }

    static final MemoryLayout _STORAGE_DESCRIPTOR_HEADER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size")
    ).withName("_STORAGE_DESCRIPTOR_HEADER");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DESCRIPTOR_HEADER$struct$LAYOUT() { return _STORAGE_DESCRIPTOR_HEADER$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_DESCRIPTOR_HEADER$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DESCRIPTOR_HEADER$Version$LAYOUT() { return _STORAGE_DESCRIPTOR_HEADER$Version$LAYOUT_; }

    static final VarHandle _STORAGE_DESCRIPTOR_HEADER$Version$VH_ = _STORAGE_DESCRIPTOR_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_DESCRIPTOR_HEADER$Version$VH() { return _STORAGE_DESCRIPTOR_HEADER$Version$VH_; }

    static final MemoryLayout _STORAGE_DESCRIPTOR_HEADER$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DESCRIPTOR_HEADER$Size$LAYOUT() { return _STORAGE_DESCRIPTOR_HEADER$Size$LAYOUT_; }

    static final VarHandle _STORAGE_DESCRIPTOR_HEADER$Size$VH_ = _STORAGE_DESCRIPTOR_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_DESCRIPTOR_HEADER$Size$VH() { return _STORAGE_DESCRIPTOR_HEADER$Size$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_CHAR.withName("DeviceType"),
        C_CHAR.withName("DeviceTypeModifier"),
        C_CHAR.withName("RemovableMedia"),
        C_CHAR.withName("CommandQueueing"),
        C_LONG.withName("VendorIdOffset"),
        C_LONG.withName("ProductIdOffset"),
        C_LONG.withName("ProductRevisionOffset"),
        C_LONG.withName("SerialNumberOffset"),
        C_INT.withName("BusType"),
        C_LONG.withName("RawPropertiesLength"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("RawDeviceProperties"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("_STORAGE_DEVICE_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$struct$LAYOUT() { return _STORAGE_DEVICE_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$Version$LAYOUT() { return _STORAGE_DEVICE_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_DESCRIPTOR$Version$VH_ = _STORAGE_DEVICE_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_DESCRIPTOR$Version$VH() { return _STORAGE_DEVICE_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$Size$LAYOUT() { return _STORAGE_DEVICE_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_DESCRIPTOR$Size$VH_ = _STORAGE_DEVICE_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_DESCRIPTOR$Size$VH() { return _STORAGE_DEVICE_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$DeviceType$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$DeviceType$LAYOUT() { return _STORAGE_DEVICE_DESCRIPTOR$DeviceType$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_DESCRIPTOR$DeviceType$VH_ = _STORAGE_DEVICE_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("DeviceType"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_DESCRIPTOR$DeviceType$VH() { return _STORAGE_DEVICE_DESCRIPTOR$DeviceType$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$DeviceTypeModifier$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$DeviceTypeModifier$LAYOUT() { return _STORAGE_DEVICE_DESCRIPTOR$DeviceTypeModifier$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_DESCRIPTOR$DeviceTypeModifier$VH_ = _STORAGE_DEVICE_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("DeviceTypeModifier"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_DESCRIPTOR$DeviceTypeModifier$VH() { return _STORAGE_DEVICE_DESCRIPTOR$DeviceTypeModifier$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$RemovableMedia$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$RemovableMedia$LAYOUT() { return _STORAGE_DEVICE_DESCRIPTOR$RemovableMedia$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_DESCRIPTOR$RemovableMedia$VH_ = _STORAGE_DEVICE_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("RemovableMedia"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_DESCRIPTOR$RemovableMedia$VH() { return _STORAGE_DEVICE_DESCRIPTOR$RemovableMedia$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$CommandQueueing$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$CommandQueueing$LAYOUT() { return _STORAGE_DEVICE_DESCRIPTOR$CommandQueueing$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_DESCRIPTOR$CommandQueueing$VH_ = _STORAGE_DEVICE_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("CommandQueueing"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_DESCRIPTOR$CommandQueueing$VH() { return _STORAGE_DEVICE_DESCRIPTOR$CommandQueueing$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$VendorIdOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$VendorIdOffset$LAYOUT() { return _STORAGE_DEVICE_DESCRIPTOR$VendorIdOffset$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_DESCRIPTOR$VendorIdOffset$VH_ = _STORAGE_DEVICE_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("VendorIdOffset"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_DESCRIPTOR$VendorIdOffset$VH() { return _STORAGE_DEVICE_DESCRIPTOR$VendorIdOffset$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$ProductIdOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$ProductIdOffset$LAYOUT() { return _STORAGE_DEVICE_DESCRIPTOR$ProductIdOffset$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_DESCRIPTOR$ProductIdOffset$VH_ = _STORAGE_DEVICE_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProductIdOffset"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_DESCRIPTOR$ProductIdOffset$VH() { return _STORAGE_DEVICE_DESCRIPTOR$ProductIdOffset$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$ProductRevisionOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$ProductRevisionOffset$LAYOUT() { return _STORAGE_DEVICE_DESCRIPTOR$ProductRevisionOffset$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_DESCRIPTOR$ProductRevisionOffset$VH_ = _STORAGE_DEVICE_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProductRevisionOffset"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_DESCRIPTOR$ProductRevisionOffset$VH() { return _STORAGE_DEVICE_DESCRIPTOR$ProductRevisionOffset$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$SerialNumberOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$SerialNumberOffset$LAYOUT() { return _STORAGE_DEVICE_DESCRIPTOR$SerialNumberOffset$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_DESCRIPTOR$SerialNumberOffset$VH_ = _STORAGE_DEVICE_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SerialNumberOffset"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_DESCRIPTOR$SerialNumberOffset$VH() { return _STORAGE_DEVICE_DESCRIPTOR$SerialNumberOffset$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$BusType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$BusType$LAYOUT() { return _STORAGE_DEVICE_DESCRIPTOR$BusType$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_DESCRIPTOR$BusType$VH_ = _STORAGE_DEVICE_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BusType"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_DESCRIPTOR$BusType$VH() { return _STORAGE_DEVICE_DESCRIPTOR$BusType$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$RawPropertiesLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_DESCRIPTOR$RawPropertiesLength$LAYOUT() { return _STORAGE_DEVICE_DESCRIPTOR$RawPropertiesLength$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_DESCRIPTOR$RawPropertiesLength$VH_ = _STORAGE_DEVICE_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RawPropertiesLength"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_DESCRIPTOR$RawPropertiesLength$VH() { return _STORAGE_DEVICE_DESCRIPTOR$RawPropertiesLength$VH_; }

    static final MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("MaximumTransferLength"),
        C_LONG.withName("MaximumPhysicalPages"),
        C_LONG.withName("AlignmentMask"),
        C_CHAR.withName("AdapterUsesPio"),
        C_CHAR.withName("AdapterScansDown"),
        C_CHAR.withName("CommandQueueing"),
        C_CHAR.withName("AcceleratedTransfer"),
        C_CHAR.withName("BusType"),
        MemoryLayout.ofPaddingBits(8),
        C_SHORT.withName("BusMajorVersion"),
        C_SHORT.withName("BusMinorVersion"),
        C_CHAR.withName("SrbType"),
        C_CHAR.withName("AddressType")
    ).withName("_STORAGE_ADAPTER_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$struct$LAYOUT() { return _STORAGE_ADAPTER_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$Version$LAYOUT() { return _STORAGE_ADAPTER_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _STORAGE_ADAPTER_DESCRIPTOR$Version$VH_ = _STORAGE_ADAPTER_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_ADAPTER_DESCRIPTOR$Version$VH() { return _STORAGE_ADAPTER_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$Size$LAYOUT() { return _STORAGE_ADAPTER_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _STORAGE_ADAPTER_DESCRIPTOR$Size$VH_ = _STORAGE_ADAPTER_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_ADAPTER_DESCRIPTOR$Size$VH() { return _STORAGE_ADAPTER_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$MaximumTransferLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$MaximumTransferLength$LAYOUT() { return _STORAGE_ADAPTER_DESCRIPTOR$MaximumTransferLength$LAYOUT_; }

    static final VarHandle _STORAGE_ADAPTER_DESCRIPTOR$MaximumTransferLength$VH_ = _STORAGE_ADAPTER_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaximumTransferLength"));
    static final java.lang.invoke.VarHandle _STORAGE_ADAPTER_DESCRIPTOR$MaximumTransferLength$VH() { return _STORAGE_ADAPTER_DESCRIPTOR$MaximumTransferLength$VH_; }

    static final MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$MaximumPhysicalPages$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$MaximumPhysicalPages$LAYOUT() { return _STORAGE_ADAPTER_DESCRIPTOR$MaximumPhysicalPages$LAYOUT_; }

    static final VarHandle _STORAGE_ADAPTER_DESCRIPTOR$MaximumPhysicalPages$VH_ = _STORAGE_ADAPTER_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaximumPhysicalPages"));
    static final java.lang.invoke.VarHandle _STORAGE_ADAPTER_DESCRIPTOR$MaximumPhysicalPages$VH() { return _STORAGE_ADAPTER_DESCRIPTOR$MaximumPhysicalPages$VH_; }

    static final MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$AlignmentMask$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$AlignmentMask$LAYOUT() { return _STORAGE_ADAPTER_DESCRIPTOR$AlignmentMask$LAYOUT_; }

    static final VarHandle _STORAGE_ADAPTER_DESCRIPTOR$AlignmentMask$VH_ = _STORAGE_ADAPTER_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AlignmentMask"));
    static final java.lang.invoke.VarHandle _STORAGE_ADAPTER_DESCRIPTOR$AlignmentMask$VH() { return _STORAGE_ADAPTER_DESCRIPTOR$AlignmentMask$VH_; }

    static final MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$AdapterUsesPio$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$AdapterUsesPio$LAYOUT() { return _STORAGE_ADAPTER_DESCRIPTOR$AdapterUsesPio$LAYOUT_; }

    static final VarHandle _STORAGE_ADAPTER_DESCRIPTOR$AdapterUsesPio$VH_ = _STORAGE_ADAPTER_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("AdapterUsesPio"));
    static final java.lang.invoke.VarHandle _STORAGE_ADAPTER_DESCRIPTOR$AdapterUsesPio$VH() { return _STORAGE_ADAPTER_DESCRIPTOR$AdapterUsesPio$VH_; }

    static final MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$AdapterScansDown$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$AdapterScansDown$LAYOUT() { return _STORAGE_ADAPTER_DESCRIPTOR$AdapterScansDown$LAYOUT_; }

    static final VarHandle _STORAGE_ADAPTER_DESCRIPTOR$AdapterScansDown$VH_ = _STORAGE_ADAPTER_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("AdapterScansDown"));
    static final java.lang.invoke.VarHandle _STORAGE_ADAPTER_DESCRIPTOR$AdapterScansDown$VH() { return _STORAGE_ADAPTER_DESCRIPTOR$AdapterScansDown$VH_; }

    static final MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$CommandQueueing$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$CommandQueueing$LAYOUT() { return _STORAGE_ADAPTER_DESCRIPTOR$CommandQueueing$LAYOUT_; }

    static final VarHandle _STORAGE_ADAPTER_DESCRIPTOR$CommandQueueing$VH_ = _STORAGE_ADAPTER_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("CommandQueueing"));
    static final java.lang.invoke.VarHandle _STORAGE_ADAPTER_DESCRIPTOR$CommandQueueing$VH() { return _STORAGE_ADAPTER_DESCRIPTOR$CommandQueueing$VH_; }

    static final MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$AcceleratedTransfer$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$AcceleratedTransfer$LAYOUT() { return _STORAGE_ADAPTER_DESCRIPTOR$AcceleratedTransfer$LAYOUT_; }

    static final VarHandle _STORAGE_ADAPTER_DESCRIPTOR$AcceleratedTransfer$VH_ = _STORAGE_ADAPTER_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("AcceleratedTransfer"));
    static final java.lang.invoke.VarHandle _STORAGE_ADAPTER_DESCRIPTOR$AcceleratedTransfer$VH() { return _STORAGE_ADAPTER_DESCRIPTOR$AcceleratedTransfer$VH_; }

    static final MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$BusType$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$BusType$LAYOUT() { return _STORAGE_ADAPTER_DESCRIPTOR$BusType$LAYOUT_; }

    static final VarHandle _STORAGE_ADAPTER_DESCRIPTOR$BusType$VH_ = _STORAGE_ADAPTER_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("BusType"));
    static final java.lang.invoke.VarHandle _STORAGE_ADAPTER_DESCRIPTOR$BusType$VH() { return _STORAGE_ADAPTER_DESCRIPTOR$BusType$VH_; }

    static final MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$BusMajorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$BusMajorVersion$LAYOUT() { return _STORAGE_ADAPTER_DESCRIPTOR$BusMajorVersion$LAYOUT_; }

    static final VarHandle _STORAGE_ADAPTER_DESCRIPTOR$BusMajorVersion$VH_ = _STORAGE_ADAPTER_DESCRIPTOR$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("BusMajorVersion"));
    static final java.lang.invoke.VarHandle _STORAGE_ADAPTER_DESCRIPTOR$BusMajorVersion$VH() { return _STORAGE_ADAPTER_DESCRIPTOR$BusMajorVersion$VH_; }

    static final MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$BusMinorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$BusMinorVersion$LAYOUT() { return _STORAGE_ADAPTER_DESCRIPTOR$BusMinorVersion$LAYOUT_; }

    static final VarHandle _STORAGE_ADAPTER_DESCRIPTOR$BusMinorVersion$VH_ = _STORAGE_ADAPTER_DESCRIPTOR$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("BusMinorVersion"));
    static final java.lang.invoke.VarHandle _STORAGE_ADAPTER_DESCRIPTOR$BusMinorVersion$VH() { return _STORAGE_ADAPTER_DESCRIPTOR$BusMinorVersion$VH_; }

    static final MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$SrbType$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$SrbType$LAYOUT() { return _STORAGE_ADAPTER_DESCRIPTOR$SrbType$LAYOUT_; }

    static final VarHandle _STORAGE_ADAPTER_DESCRIPTOR$SrbType$VH_ = _STORAGE_ADAPTER_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("SrbType"));
    static final java.lang.invoke.VarHandle _STORAGE_ADAPTER_DESCRIPTOR$SrbType$VH() { return _STORAGE_ADAPTER_DESCRIPTOR$SrbType$VH_; }

    static final MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$AddressType$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ADAPTER_DESCRIPTOR$AddressType$LAYOUT() { return _STORAGE_ADAPTER_DESCRIPTOR$AddressType$LAYOUT_; }

    static final VarHandle _STORAGE_ADAPTER_DESCRIPTOR$AddressType$VH_ = _STORAGE_ADAPTER_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("AddressType"));
    static final java.lang.invoke.VarHandle _STORAGE_ADAPTER_DESCRIPTOR$AddressType$VH() { return _STORAGE_ADAPTER_DESCRIPTOR$AddressType$VH_; }

    static final MemoryLayout _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("BytesPerCacheLine"),
        C_LONG.withName("BytesOffsetForCacheAlignment"),
        C_LONG.withName("BytesPerLogicalSector"),
        C_LONG.withName("BytesPerPhysicalSector"),
        C_LONG.withName("BytesOffsetForSectorAlignment")
    ).withName("_STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$struct$LAYOUT() { return _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$Version$LAYOUT() { return _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$Version$VH_ = _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$Version$VH() { return _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$Size$LAYOUT() { return _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$Size$VH_ = _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$Size$VH() { return _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesPerCacheLine$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesPerCacheLine$LAYOUT() { return _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesPerCacheLine$LAYOUT_; }

    static final VarHandle _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesPerCacheLine$VH_ = _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BytesPerCacheLine"));
    static final java.lang.invoke.VarHandle _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesPerCacheLine$VH() { return _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesPerCacheLine$VH_; }

    static final MemoryLayout _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesOffsetForCacheAlignment$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesOffsetForCacheAlignment$LAYOUT() { return _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesOffsetForCacheAlignment$LAYOUT_; }

    static final VarHandle _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesOffsetForCacheAlignment$VH_ = _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BytesOffsetForCacheAlignment"));
    static final java.lang.invoke.VarHandle _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesOffsetForCacheAlignment$VH() { return _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesOffsetForCacheAlignment$VH_; }

    static final MemoryLayout _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesPerLogicalSector$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesPerLogicalSector$LAYOUT() { return _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesPerLogicalSector$LAYOUT_; }

    static final VarHandle _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesPerLogicalSector$VH_ = _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BytesPerLogicalSector"));
    static final java.lang.invoke.VarHandle _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesPerLogicalSector$VH() { return _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesPerLogicalSector$VH_; }

    static final MemoryLayout _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesPerPhysicalSector$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesPerPhysicalSector$LAYOUT() { return _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesPerPhysicalSector$LAYOUT_; }

    static final VarHandle _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesPerPhysicalSector$VH_ = _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BytesPerPhysicalSector"));
    static final java.lang.invoke.VarHandle _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesPerPhysicalSector$VH() { return _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesPerPhysicalSector$VH_; }

    static final MemoryLayout _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesOffsetForSectorAlignment$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesOffsetForSectorAlignment$LAYOUT() { return _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesOffsetForSectorAlignment$LAYOUT_; }

    static final VarHandle _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesOffsetForSectorAlignment$VH_ = _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BytesOffsetForSectorAlignment"));
    static final java.lang.invoke.VarHandle _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesOffsetForSectorAlignment$VH() { return _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR$BytesOffsetForSectorAlignment$VH_; }

    static final MemoryLayout _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("MediumProductType")
    ).withName("_STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$struct$LAYOUT() { return _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$Version$LAYOUT() { return _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$Version$VH_ = _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$Version$VH() { return _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$Size$LAYOUT() { return _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$Size$VH_ = _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$Size$VH() { return _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$MediumProductType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$MediumProductType$LAYOUT() { return _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$MediumProductType$LAYOUT_; }

    static final VarHandle _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$MediumProductType$VH_ = _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MediumProductType"));
    static final java.lang.invoke.VarHandle _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$MediumProductType$VH() { return _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR$MediumProductType$VH_; }

    static final int StoragePortCodeSetReserved() { return (int)0L; }

    static final int StoragePortCodeSetStorport() { return (int)1L; }

    static final int StoragePortCodeSetSCSIport() { return (int)2L; }

    static final int StoragePortCodeSetSpaceport() { return (int)3L; }

    static final int StoragePortCodeSetATAport() { return (int)4L; }

    static final int StoragePortCodeSetUSBport() { return (int)5L; }

    static final int StoragePortCodeSetSBP2port() { return (int)6L; }

    static final int StoragePortCodeSetSDport() { return (int)7L; }

    static final MemoryLayout _STORAGE_MINIPORT_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_INT.withName("Portdriver"),
        C_CHAR.withName("LUNResetSupported"),
        C_CHAR.withName("TargetResetSupported"),
        C_SHORT.withName("IoTimeoutValue"),
        C_CHAR.withName("ExtraIoInfoSupported"),
        MemoryLayout.ofSequence(3, C_CHAR).withName("Reserved0"),
        C_LONG.withName("Reserved1")
    ).withName("_STORAGE_MINIPORT_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_MINIPORT_DESCRIPTOR$struct$LAYOUT() { return _STORAGE_MINIPORT_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_MINIPORT_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_MINIPORT_DESCRIPTOR$Version$LAYOUT() { return _STORAGE_MINIPORT_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _STORAGE_MINIPORT_DESCRIPTOR$Version$VH_ = _STORAGE_MINIPORT_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_MINIPORT_DESCRIPTOR$Version$VH() { return _STORAGE_MINIPORT_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _STORAGE_MINIPORT_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_MINIPORT_DESCRIPTOR$Size$LAYOUT() { return _STORAGE_MINIPORT_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _STORAGE_MINIPORT_DESCRIPTOR$Size$VH_ = _STORAGE_MINIPORT_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_MINIPORT_DESCRIPTOR$Size$VH() { return _STORAGE_MINIPORT_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _STORAGE_MINIPORT_DESCRIPTOR$Portdriver$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_MINIPORT_DESCRIPTOR$Portdriver$LAYOUT() { return _STORAGE_MINIPORT_DESCRIPTOR$Portdriver$LAYOUT_; }

    static final VarHandle _STORAGE_MINIPORT_DESCRIPTOR$Portdriver$VH_ = _STORAGE_MINIPORT_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Portdriver"));
    static final java.lang.invoke.VarHandle _STORAGE_MINIPORT_DESCRIPTOR$Portdriver$VH() { return _STORAGE_MINIPORT_DESCRIPTOR$Portdriver$VH_; }

    static final MemoryLayout _STORAGE_MINIPORT_DESCRIPTOR$LUNResetSupported$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_MINIPORT_DESCRIPTOR$LUNResetSupported$LAYOUT() { return _STORAGE_MINIPORT_DESCRIPTOR$LUNResetSupported$LAYOUT_; }

    static final VarHandle _STORAGE_MINIPORT_DESCRIPTOR$LUNResetSupported$VH_ = _STORAGE_MINIPORT_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("LUNResetSupported"));
    static final java.lang.invoke.VarHandle _STORAGE_MINIPORT_DESCRIPTOR$LUNResetSupported$VH() { return _STORAGE_MINIPORT_DESCRIPTOR$LUNResetSupported$VH_; }

    static final MemoryLayout _STORAGE_MINIPORT_DESCRIPTOR$TargetResetSupported$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_MINIPORT_DESCRIPTOR$TargetResetSupported$LAYOUT() { return _STORAGE_MINIPORT_DESCRIPTOR$TargetResetSupported$LAYOUT_; }

    static final VarHandle _STORAGE_MINIPORT_DESCRIPTOR$TargetResetSupported$VH_ = _STORAGE_MINIPORT_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("TargetResetSupported"));
    static final java.lang.invoke.VarHandle _STORAGE_MINIPORT_DESCRIPTOR$TargetResetSupported$VH() { return _STORAGE_MINIPORT_DESCRIPTOR$TargetResetSupported$VH_; }

    static final MemoryLayout _STORAGE_MINIPORT_DESCRIPTOR$IoTimeoutValue$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_MINIPORT_DESCRIPTOR$IoTimeoutValue$LAYOUT() { return _STORAGE_MINIPORT_DESCRIPTOR$IoTimeoutValue$LAYOUT_; }

    static final VarHandle _STORAGE_MINIPORT_DESCRIPTOR$IoTimeoutValue$VH_ = _STORAGE_MINIPORT_DESCRIPTOR$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("IoTimeoutValue"));
    static final java.lang.invoke.VarHandle _STORAGE_MINIPORT_DESCRIPTOR$IoTimeoutValue$VH() { return _STORAGE_MINIPORT_DESCRIPTOR$IoTimeoutValue$VH_; }

    static final MemoryLayout _STORAGE_MINIPORT_DESCRIPTOR$ExtraIoInfoSupported$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_MINIPORT_DESCRIPTOR$ExtraIoInfoSupported$LAYOUT() { return _STORAGE_MINIPORT_DESCRIPTOR$ExtraIoInfoSupported$LAYOUT_; }

    static final VarHandle _STORAGE_MINIPORT_DESCRIPTOR$ExtraIoInfoSupported$VH_ = _STORAGE_MINIPORT_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ExtraIoInfoSupported"));
    static final java.lang.invoke.VarHandle _STORAGE_MINIPORT_DESCRIPTOR$ExtraIoInfoSupported$VH() { return _STORAGE_MINIPORT_DESCRIPTOR$ExtraIoInfoSupported$VH_; }

    static final MemoryLayout _STORAGE_MINIPORT_DESCRIPTOR$Reserved1$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_MINIPORT_DESCRIPTOR$Reserved1$LAYOUT() { return _STORAGE_MINIPORT_DESCRIPTOR$Reserved1$LAYOUT_; }

    static final VarHandle _STORAGE_MINIPORT_DESCRIPTOR$Reserved1$VH_ = _STORAGE_MINIPORT_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved1"));
    static final java.lang.invoke.VarHandle _STORAGE_MINIPORT_DESCRIPTOR$Reserved1$VH() { return _STORAGE_MINIPORT_DESCRIPTOR$Reserved1$VH_; }

    static final int StorageIdCodeSetReserved() { return (int)0L; }

    static final int StorageIdCodeSetBinary() { return (int)1L; }

    static final int StorageIdCodeSetAscii() { return (int)2L; }

    static final int StorageIdCodeSetUtf8() { return (int)3L; }

    static final int StorageIdTypeVendorSpecific() { return (int)0L; }

    static final int StorageIdTypeVendorId() { return (int)1L; }

    static final int StorageIdTypeEUI64() { return (int)2L; }

    static final int StorageIdTypeFCPHName() { return (int)3L; }

    static final int StorageIdTypePortRelative() { return (int)4L; }

    static final int StorageIdTypeTargetPortGroup() { return (int)5L; }

    static final int StorageIdTypeLogicalUnitGroup() { return (int)6L; }

    static final int StorageIdTypeMD5LogicalUnitIdentifier() { return (int)7L; }

    static final int StorageIdTypeScsiNameString() { return (int)8L; }

    static final int StorageIdNAAFormatIEEEExtended() { return (int)2L; }

    static final int StorageIdNAAFormatIEEERegistered() { return (int)3L; }

    static final int StorageIdNAAFormatIEEEERegisteredExtended() { return (int)5L; }

    static final int StorageIdAssocDevice() { return (int)0L; }

    static final int StorageIdAssocPort() { return (int)1L; }

    static final int StorageIdAssocTarget() { return (int)2L; }

    static final MemoryLayout _STORAGE_IDENTIFIER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("CodeSet"),
        C_INT.withName("Type"),
        C_SHORT.withName("IdentifierSize"),
        C_SHORT.withName("NextOffset"),
        C_INT.withName("Association"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("Identifier"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("_STORAGE_IDENTIFIER");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_IDENTIFIER$struct$LAYOUT() { return _STORAGE_IDENTIFIER$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_IDENTIFIER$CodeSet$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_IDENTIFIER$CodeSet$LAYOUT() { return _STORAGE_IDENTIFIER$CodeSet$LAYOUT_; }

    static final VarHandle _STORAGE_IDENTIFIER$CodeSet$VH_ = _STORAGE_IDENTIFIER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CodeSet"));
    static final java.lang.invoke.VarHandle _STORAGE_IDENTIFIER$CodeSet$VH() { return _STORAGE_IDENTIFIER$CodeSet$VH_; }

    static final MemoryLayout _STORAGE_IDENTIFIER$Type$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_IDENTIFIER$Type$LAYOUT() { return _STORAGE_IDENTIFIER$Type$LAYOUT_; }

    static final VarHandle _STORAGE_IDENTIFIER$Type$VH_ = _STORAGE_IDENTIFIER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    static final java.lang.invoke.VarHandle _STORAGE_IDENTIFIER$Type$VH() { return _STORAGE_IDENTIFIER$Type$VH_; }

    static final MemoryLayout _STORAGE_IDENTIFIER$IdentifierSize$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_IDENTIFIER$IdentifierSize$LAYOUT() { return _STORAGE_IDENTIFIER$IdentifierSize$LAYOUT_; }

    static final VarHandle _STORAGE_IDENTIFIER$IdentifierSize$VH_ = _STORAGE_IDENTIFIER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("IdentifierSize"));
    static final java.lang.invoke.VarHandle _STORAGE_IDENTIFIER$IdentifierSize$VH() { return _STORAGE_IDENTIFIER$IdentifierSize$VH_; }

    static final MemoryLayout _STORAGE_IDENTIFIER$NextOffset$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_IDENTIFIER$NextOffset$LAYOUT() { return _STORAGE_IDENTIFIER$NextOffset$LAYOUT_; }

    static final VarHandle _STORAGE_IDENTIFIER$NextOffset$VH_ = _STORAGE_IDENTIFIER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("NextOffset"));
    static final java.lang.invoke.VarHandle _STORAGE_IDENTIFIER$NextOffset$VH() { return _STORAGE_IDENTIFIER$NextOffset$VH_; }

    static final MemoryLayout _STORAGE_IDENTIFIER$Association$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_IDENTIFIER$Association$LAYOUT() { return _STORAGE_IDENTIFIER$Association$LAYOUT_; }

    static final VarHandle _STORAGE_IDENTIFIER$Association$VH_ = _STORAGE_IDENTIFIER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Association"));
    static final java.lang.invoke.VarHandle _STORAGE_IDENTIFIER$Association$VH() { return _STORAGE_IDENTIFIER$Association$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_ID_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("NumberOfIdentifiers"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("Identifiers"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("_STORAGE_DEVICE_ID_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_ID_DESCRIPTOR$struct$LAYOUT() { return _STORAGE_DEVICE_ID_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_DEVICE_ID_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_ID_DESCRIPTOR$Version$LAYOUT() { return _STORAGE_DEVICE_ID_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_ID_DESCRIPTOR$Version$VH_ = _STORAGE_DEVICE_ID_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_ID_DESCRIPTOR$Version$VH() { return _STORAGE_DEVICE_ID_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_ID_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_ID_DESCRIPTOR$Size$LAYOUT() { return _STORAGE_DEVICE_ID_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_ID_DESCRIPTOR$Size$VH_ = _STORAGE_DEVICE_ID_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_ID_DESCRIPTOR$Size$VH() { return _STORAGE_DEVICE_ID_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_ID_DESCRIPTOR$NumberOfIdentifiers$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_ID_DESCRIPTOR$NumberOfIdentifiers$LAYOUT() { return _STORAGE_DEVICE_ID_DESCRIPTOR$NumberOfIdentifiers$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_ID_DESCRIPTOR$NumberOfIdentifiers$VH_ = _STORAGE_DEVICE_ID_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfIdentifiers"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_ID_DESCRIPTOR$NumberOfIdentifiers$VH() { return _STORAGE_DEVICE_ID_DESCRIPTOR$NumberOfIdentifiers$VH_; }

    static final MemoryLayout _DEVICE_SEEK_PENALTY_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_CHAR.withName("IncursSeekPenalty"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("_DEVICE_SEEK_PENALTY_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_SEEK_PENALTY_DESCRIPTOR$struct$LAYOUT() { return _DEVICE_SEEK_PENALTY_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_SEEK_PENALTY_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_SEEK_PENALTY_DESCRIPTOR$Version$LAYOUT() { return _DEVICE_SEEK_PENALTY_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _DEVICE_SEEK_PENALTY_DESCRIPTOR$Version$VH_ = _DEVICE_SEEK_PENALTY_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _DEVICE_SEEK_PENALTY_DESCRIPTOR$Version$VH() { return _DEVICE_SEEK_PENALTY_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _DEVICE_SEEK_PENALTY_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_SEEK_PENALTY_DESCRIPTOR$Size$LAYOUT() { return _DEVICE_SEEK_PENALTY_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _DEVICE_SEEK_PENALTY_DESCRIPTOR$Size$VH_ = _DEVICE_SEEK_PENALTY_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _DEVICE_SEEK_PENALTY_DESCRIPTOR$Size$VH() { return _DEVICE_SEEK_PENALTY_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _DEVICE_SEEK_PENALTY_DESCRIPTOR$IncursSeekPenalty$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_SEEK_PENALTY_DESCRIPTOR$IncursSeekPenalty$LAYOUT() { return _DEVICE_SEEK_PENALTY_DESCRIPTOR$IncursSeekPenalty$LAYOUT_; }

    static final VarHandle _DEVICE_SEEK_PENALTY_DESCRIPTOR$IncursSeekPenalty$VH_ = _DEVICE_SEEK_PENALTY_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("IncursSeekPenalty"));
    static final java.lang.invoke.VarHandle _DEVICE_SEEK_PENALTY_DESCRIPTOR$IncursSeekPenalty$VH() { return _DEVICE_SEEK_PENALTY_DESCRIPTOR$IncursSeekPenalty$VH_; }

    static final MemoryLayout _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_CHAR.withName("BenefitsFromWriteAggregation"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("_DEVICE_WRITE_AGGREGATION_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$struct$LAYOUT() { return _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$Version$LAYOUT() { return _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$Version$VH_ = _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$Version$VH() { return _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$Size$LAYOUT() { return _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$Size$VH_ = _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$Size$VH() { return _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$BenefitsFromWriteAggregation$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$BenefitsFromWriteAggregation$LAYOUT() { return _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$BenefitsFromWriteAggregation$LAYOUT_; }

    static final VarHandle _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$BenefitsFromWriteAggregation$VH_ = _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("BenefitsFromWriteAggregation"));
    static final java.lang.invoke.VarHandle _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$BenefitsFromWriteAggregation$VH() { return _DEVICE_WRITE_AGGREGATION_DESCRIPTOR$BenefitsFromWriteAggregation$VH_; }

    static final MemoryLayout _DEVICE_TRIM_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_CHAR.withName("TrimEnabled"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("_DEVICE_TRIM_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_TRIM_DESCRIPTOR$struct$LAYOUT() { return _DEVICE_TRIM_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_TRIM_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_TRIM_DESCRIPTOR$Version$LAYOUT() { return _DEVICE_TRIM_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _DEVICE_TRIM_DESCRIPTOR$Version$VH_ = _DEVICE_TRIM_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _DEVICE_TRIM_DESCRIPTOR$Version$VH() { return _DEVICE_TRIM_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _DEVICE_TRIM_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_TRIM_DESCRIPTOR$Size$LAYOUT() { return _DEVICE_TRIM_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _DEVICE_TRIM_DESCRIPTOR$Size$VH_ = _DEVICE_TRIM_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _DEVICE_TRIM_DESCRIPTOR$Size$VH() { return _DEVICE_TRIM_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _DEVICE_TRIM_DESCRIPTOR$TrimEnabled$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_TRIM_DESCRIPTOR$TrimEnabled$LAYOUT() { return _DEVICE_TRIM_DESCRIPTOR$TrimEnabled$LAYOUT_; }

    static final VarHandle _DEVICE_TRIM_DESCRIPTOR$TrimEnabled$VH_ = _DEVICE_TRIM_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("TrimEnabled"));
    static final java.lang.invoke.VarHandle _DEVICE_TRIM_DESCRIPTOR$TrimEnabled$VH() { return _DEVICE_TRIM_DESCRIPTOR$TrimEnabled$VH_; }

    static final MemoryLayout _DEVICE_LB_PROVISIONING_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_CHAR,
        MemoryLayout.ofSequence(7, C_CHAR).withName("Reserved1"),
        C_LONGLONG.withName("OptimalUnmapGranularity"),
        C_LONGLONG.withName("UnmapGranularityAlignment"),
        C_LONG.withName("MaxUnmapLbaCount"),
        C_LONG.withName("MaxUnmapBlockDescriptorCount")
    ).withName("_DEVICE_LB_PROVISIONING_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_LB_PROVISIONING_DESCRIPTOR$struct$LAYOUT() { return _DEVICE_LB_PROVISIONING_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_LB_PROVISIONING_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_LB_PROVISIONING_DESCRIPTOR$Version$LAYOUT() { return _DEVICE_LB_PROVISIONING_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _DEVICE_LB_PROVISIONING_DESCRIPTOR$Version$VH_ = _DEVICE_LB_PROVISIONING_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _DEVICE_LB_PROVISIONING_DESCRIPTOR$Version$VH() { return _DEVICE_LB_PROVISIONING_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _DEVICE_LB_PROVISIONING_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_LB_PROVISIONING_DESCRIPTOR$Size$LAYOUT() { return _DEVICE_LB_PROVISIONING_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _DEVICE_LB_PROVISIONING_DESCRIPTOR$Size$VH_ = _DEVICE_LB_PROVISIONING_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _DEVICE_LB_PROVISIONING_DESCRIPTOR$Size$VH() { return _DEVICE_LB_PROVISIONING_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _DEVICE_LB_PROVISIONING_DESCRIPTOR$OptimalUnmapGranularity$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_LB_PROVISIONING_DESCRIPTOR$OptimalUnmapGranularity$LAYOUT() { return _DEVICE_LB_PROVISIONING_DESCRIPTOR$OptimalUnmapGranularity$LAYOUT_; }

    static final VarHandle _DEVICE_LB_PROVISIONING_DESCRIPTOR$OptimalUnmapGranularity$VH_ = _DEVICE_LB_PROVISIONING_DESCRIPTOR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OptimalUnmapGranularity"));
    static final java.lang.invoke.VarHandle _DEVICE_LB_PROVISIONING_DESCRIPTOR$OptimalUnmapGranularity$VH() { return _DEVICE_LB_PROVISIONING_DESCRIPTOR$OptimalUnmapGranularity$VH_; }

    static final MemoryLayout _DEVICE_LB_PROVISIONING_DESCRIPTOR$UnmapGranularityAlignment$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_LB_PROVISIONING_DESCRIPTOR$UnmapGranularityAlignment$LAYOUT() { return _DEVICE_LB_PROVISIONING_DESCRIPTOR$UnmapGranularityAlignment$LAYOUT_; }

    static final VarHandle _DEVICE_LB_PROVISIONING_DESCRIPTOR$UnmapGranularityAlignment$VH_ = _DEVICE_LB_PROVISIONING_DESCRIPTOR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("UnmapGranularityAlignment"));
    static final java.lang.invoke.VarHandle _DEVICE_LB_PROVISIONING_DESCRIPTOR$UnmapGranularityAlignment$VH() { return _DEVICE_LB_PROVISIONING_DESCRIPTOR$UnmapGranularityAlignment$VH_; }

    static final MemoryLayout _DEVICE_LB_PROVISIONING_DESCRIPTOR$MaxUnmapLbaCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_LB_PROVISIONING_DESCRIPTOR$MaxUnmapLbaCount$LAYOUT() { return _DEVICE_LB_PROVISIONING_DESCRIPTOR$MaxUnmapLbaCount$LAYOUT_; }

    static final VarHandle _DEVICE_LB_PROVISIONING_DESCRIPTOR$MaxUnmapLbaCount$VH_ = _DEVICE_LB_PROVISIONING_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaxUnmapLbaCount"));
    static final java.lang.invoke.VarHandle _DEVICE_LB_PROVISIONING_DESCRIPTOR$MaxUnmapLbaCount$VH() { return _DEVICE_LB_PROVISIONING_DESCRIPTOR$MaxUnmapLbaCount$VH_; }

    static final MemoryLayout _DEVICE_LB_PROVISIONING_DESCRIPTOR$MaxUnmapBlockDescriptorCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_LB_PROVISIONING_DESCRIPTOR$MaxUnmapBlockDescriptorCount$LAYOUT() { return _DEVICE_LB_PROVISIONING_DESCRIPTOR$MaxUnmapBlockDescriptorCount$LAYOUT_; }

    static final VarHandle _DEVICE_LB_PROVISIONING_DESCRIPTOR$MaxUnmapBlockDescriptorCount$VH_ = _DEVICE_LB_PROVISIONING_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaxUnmapBlockDescriptorCount"));
    static final java.lang.invoke.VarHandle _DEVICE_LB_PROVISIONING_DESCRIPTOR$MaxUnmapBlockDescriptorCount$VH() { return _DEVICE_LB_PROVISIONING_DESCRIPTOR$MaxUnmapBlockDescriptorCount$VH_; }

    static final MemoryLayout _STORAGE_LB_PROVISIONING_MAP_RESOURCES$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        C_LONG.withName("Version"),
        C_CHAR,
        MemoryLayout.ofSequence(3, C_CHAR).withName("Reserved1"),
        C_CHAR,
        MemoryLayout.ofSequence(3, C_CHAR).withName("Reserved3"),
        C_LONGLONG.withName("AvailableMappingResources"),
        C_LONGLONG.withName("UsedMappingResources")
    ).withName("_STORAGE_LB_PROVISIONING_MAP_RESOURCES");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_LB_PROVISIONING_MAP_RESOURCES$struct$LAYOUT() { return _STORAGE_LB_PROVISIONING_MAP_RESOURCES$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_LB_PROVISIONING_MAP_RESOURCES$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_LB_PROVISIONING_MAP_RESOURCES$Size$LAYOUT() { return _STORAGE_LB_PROVISIONING_MAP_RESOURCES$Size$LAYOUT_; }

    static final VarHandle _STORAGE_LB_PROVISIONING_MAP_RESOURCES$Size$VH_ = _STORAGE_LB_PROVISIONING_MAP_RESOURCES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_LB_PROVISIONING_MAP_RESOURCES$Size$VH() { return _STORAGE_LB_PROVISIONING_MAP_RESOURCES$Size$VH_; }

    static final MemoryLayout _STORAGE_LB_PROVISIONING_MAP_RESOURCES$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_LB_PROVISIONING_MAP_RESOURCES$Version$LAYOUT() { return _STORAGE_LB_PROVISIONING_MAP_RESOURCES$Version$LAYOUT_; }

    static final VarHandle _STORAGE_LB_PROVISIONING_MAP_RESOURCES$Version$VH_ = _STORAGE_LB_PROVISIONING_MAP_RESOURCES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_LB_PROVISIONING_MAP_RESOURCES$Version$VH() { return _STORAGE_LB_PROVISIONING_MAP_RESOURCES$Version$VH_; }

    static final MemoryLayout _STORAGE_LB_PROVISIONING_MAP_RESOURCES$AvailableMappingResources$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_LB_PROVISIONING_MAP_RESOURCES$AvailableMappingResources$LAYOUT() { return _STORAGE_LB_PROVISIONING_MAP_RESOURCES$AvailableMappingResources$LAYOUT_; }

    static final VarHandle _STORAGE_LB_PROVISIONING_MAP_RESOURCES$AvailableMappingResources$VH_ = _STORAGE_LB_PROVISIONING_MAP_RESOURCES$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AvailableMappingResources"));
    static final java.lang.invoke.VarHandle _STORAGE_LB_PROVISIONING_MAP_RESOURCES$AvailableMappingResources$VH() { return _STORAGE_LB_PROVISIONING_MAP_RESOURCES$AvailableMappingResources$VH_; }

    static final MemoryLayout _STORAGE_LB_PROVISIONING_MAP_RESOURCES$UsedMappingResources$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_LB_PROVISIONING_MAP_RESOURCES$UsedMappingResources$LAYOUT() { return _STORAGE_LB_PROVISIONING_MAP_RESOURCES$UsedMappingResources$LAYOUT_; }

    static final VarHandle _STORAGE_LB_PROVISIONING_MAP_RESOURCES$UsedMappingResources$VH_ = _STORAGE_LB_PROVISIONING_MAP_RESOURCES$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("UsedMappingResources"));
    static final java.lang.invoke.VarHandle _STORAGE_LB_PROVISIONING_MAP_RESOURCES$UsedMappingResources$VH() { return _STORAGE_LB_PROVISIONING_MAP_RESOURCES$UsedMappingResources$VH_; }

    static final MemoryLayout _DEVICE_POWER_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_CHAR.withName("DeviceAttentionSupported"),
        C_CHAR.withName("AsynchronousNotificationSupported"),
        C_CHAR.withName("IdlePowerManagementEnabled"),
        C_CHAR.withName("D3ColdEnabled"),
        C_CHAR.withName("D3ColdSupported"),
        C_CHAR.withName("NoVerifyDuringIdlePower"),
        MemoryLayout.ofSequence(2, C_CHAR).withName("Reserved"),
        C_LONG.withName("IdleTimeoutInMS")
    ).withName("_DEVICE_POWER_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_POWER_DESCRIPTOR$struct$LAYOUT() { return _DEVICE_POWER_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_POWER_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_POWER_DESCRIPTOR$Version$LAYOUT() { return _DEVICE_POWER_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _DEVICE_POWER_DESCRIPTOR$Version$VH_ = _DEVICE_POWER_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _DEVICE_POWER_DESCRIPTOR$Version$VH() { return _DEVICE_POWER_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _DEVICE_POWER_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_POWER_DESCRIPTOR$Size$LAYOUT() { return _DEVICE_POWER_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _DEVICE_POWER_DESCRIPTOR$Size$VH_ = _DEVICE_POWER_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _DEVICE_POWER_DESCRIPTOR$Size$VH() { return _DEVICE_POWER_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _DEVICE_POWER_DESCRIPTOR$DeviceAttentionSupported$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_POWER_DESCRIPTOR$DeviceAttentionSupported$LAYOUT() { return _DEVICE_POWER_DESCRIPTOR$DeviceAttentionSupported$LAYOUT_; }

    static final VarHandle _DEVICE_POWER_DESCRIPTOR$DeviceAttentionSupported$VH_ = _DEVICE_POWER_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("DeviceAttentionSupported"));
    static final java.lang.invoke.VarHandle _DEVICE_POWER_DESCRIPTOR$DeviceAttentionSupported$VH() { return _DEVICE_POWER_DESCRIPTOR$DeviceAttentionSupported$VH_; }

    static final MemoryLayout _DEVICE_POWER_DESCRIPTOR$AsynchronousNotificationSupported$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_POWER_DESCRIPTOR$AsynchronousNotificationSupported$LAYOUT() { return _DEVICE_POWER_DESCRIPTOR$AsynchronousNotificationSupported$LAYOUT_; }

    static final VarHandle _DEVICE_POWER_DESCRIPTOR$AsynchronousNotificationSupported$VH_ = _DEVICE_POWER_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("AsynchronousNotificationSupported"));
    static final java.lang.invoke.VarHandle _DEVICE_POWER_DESCRIPTOR$AsynchronousNotificationSupported$VH() { return _DEVICE_POWER_DESCRIPTOR$AsynchronousNotificationSupported$VH_; }

    static final MemoryLayout _DEVICE_POWER_DESCRIPTOR$IdlePowerManagementEnabled$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_POWER_DESCRIPTOR$IdlePowerManagementEnabled$LAYOUT() { return _DEVICE_POWER_DESCRIPTOR$IdlePowerManagementEnabled$LAYOUT_; }

    static final VarHandle _DEVICE_POWER_DESCRIPTOR$IdlePowerManagementEnabled$VH_ = _DEVICE_POWER_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("IdlePowerManagementEnabled"));
    static final java.lang.invoke.VarHandle _DEVICE_POWER_DESCRIPTOR$IdlePowerManagementEnabled$VH() { return _DEVICE_POWER_DESCRIPTOR$IdlePowerManagementEnabled$VH_; }

    static final MemoryLayout _DEVICE_POWER_DESCRIPTOR$D3ColdEnabled$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_POWER_DESCRIPTOR$D3ColdEnabled$LAYOUT() { return _DEVICE_POWER_DESCRIPTOR$D3ColdEnabled$LAYOUT_; }

    static final VarHandle _DEVICE_POWER_DESCRIPTOR$D3ColdEnabled$VH_ = _DEVICE_POWER_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("D3ColdEnabled"));
    static final java.lang.invoke.VarHandle _DEVICE_POWER_DESCRIPTOR$D3ColdEnabled$VH() { return _DEVICE_POWER_DESCRIPTOR$D3ColdEnabled$VH_; }

    static final MemoryLayout _DEVICE_POWER_DESCRIPTOR$D3ColdSupported$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_POWER_DESCRIPTOR$D3ColdSupported$LAYOUT() { return _DEVICE_POWER_DESCRIPTOR$D3ColdSupported$LAYOUT_; }

    static final VarHandle _DEVICE_POWER_DESCRIPTOR$D3ColdSupported$VH_ = _DEVICE_POWER_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("D3ColdSupported"));
    static final java.lang.invoke.VarHandle _DEVICE_POWER_DESCRIPTOR$D3ColdSupported$VH() { return _DEVICE_POWER_DESCRIPTOR$D3ColdSupported$VH_; }

    static final MemoryLayout _DEVICE_POWER_DESCRIPTOR$NoVerifyDuringIdlePower$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_POWER_DESCRIPTOR$NoVerifyDuringIdlePower$LAYOUT() { return _DEVICE_POWER_DESCRIPTOR$NoVerifyDuringIdlePower$LAYOUT_; }

    static final VarHandle _DEVICE_POWER_DESCRIPTOR$NoVerifyDuringIdlePower$VH_ = _DEVICE_POWER_DESCRIPTOR$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("NoVerifyDuringIdlePower"));
    static final java.lang.invoke.VarHandle _DEVICE_POWER_DESCRIPTOR$NoVerifyDuringIdlePower$VH() { return _DEVICE_POWER_DESCRIPTOR$NoVerifyDuringIdlePower$VH_; }

    static final MemoryLayout _DEVICE_POWER_DESCRIPTOR$IdleTimeoutInMS$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_POWER_DESCRIPTOR$IdleTimeoutInMS$LAYOUT() { return _DEVICE_POWER_DESCRIPTOR$IdleTimeoutInMS$LAYOUT_; }

    static final VarHandle _DEVICE_POWER_DESCRIPTOR$IdleTimeoutInMS$VH_ = _DEVICE_POWER_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IdleTimeoutInMS"));
    static final java.lang.invoke.VarHandle _DEVICE_POWER_DESCRIPTOR$IdleTimeoutInMS$VH() { return _DEVICE_POWER_DESCRIPTOR$IdleTimeoutInMS$VH_; }

    static final MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("MaximumTokenLifetime"),
        C_LONG.withName("DefaultTokenLifetime"),
        C_LONGLONG.withName("MaximumTransferSize"),
        C_LONGLONG.withName("OptimalTransferCount"),
        C_LONG.withName("MaximumDataDescriptors"),
        C_LONG.withName("MaximumTransferLengthPerDescriptor"),
        C_LONG.withName("OptimalTransferLengthPerDescriptor"),
        C_SHORT.withName("OptimalTransferLengthGranularity"),
        MemoryLayout.ofSequence(2, C_CHAR).withName("Reserved")
    ).withName("_DEVICE_COPY_OFFLOAD_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$struct$LAYOUT() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$Version$LAYOUT() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _DEVICE_COPY_OFFLOAD_DESCRIPTOR$Version$VH_ = _DEVICE_COPY_OFFLOAD_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _DEVICE_COPY_OFFLOAD_DESCRIPTOR$Version$VH() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$Size$LAYOUT() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _DEVICE_COPY_OFFLOAD_DESCRIPTOR$Size$VH_ = _DEVICE_COPY_OFFLOAD_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _DEVICE_COPY_OFFLOAD_DESCRIPTOR$Size$VH() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumTokenLifetime$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumTokenLifetime$LAYOUT() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumTokenLifetime$LAYOUT_; }

    static final VarHandle _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumTokenLifetime$VH_ = _DEVICE_COPY_OFFLOAD_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaximumTokenLifetime"));
    static final java.lang.invoke.VarHandle _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumTokenLifetime$VH() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumTokenLifetime$VH_; }

    static final MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$DefaultTokenLifetime$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$DefaultTokenLifetime$LAYOUT() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$DefaultTokenLifetime$LAYOUT_; }

    static final VarHandle _DEVICE_COPY_OFFLOAD_DESCRIPTOR$DefaultTokenLifetime$VH_ = _DEVICE_COPY_OFFLOAD_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DefaultTokenLifetime"));
    static final java.lang.invoke.VarHandle _DEVICE_COPY_OFFLOAD_DESCRIPTOR$DefaultTokenLifetime$VH() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$DefaultTokenLifetime$VH_; }

    static final MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumTransferSize$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumTransferSize$LAYOUT() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumTransferSize$LAYOUT_; }

    static final VarHandle _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumTransferSize$VH_ = _DEVICE_COPY_OFFLOAD_DESCRIPTOR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MaximumTransferSize"));
    static final java.lang.invoke.VarHandle _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumTransferSize$VH() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumTransferSize$VH_; }

    static final MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$OptimalTransferCount$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$OptimalTransferCount$LAYOUT() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$OptimalTransferCount$LAYOUT_; }

    static final VarHandle _DEVICE_COPY_OFFLOAD_DESCRIPTOR$OptimalTransferCount$VH_ = _DEVICE_COPY_OFFLOAD_DESCRIPTOR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OptimalTransferCount"));
    static final java.lang.invoke.VarHandle _DEVICE_COPY_OFFLOAD_DESCRIPTOR$OptimalTransferCount$VH() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$OptimalTransferCount$VH_; }

    static final MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumDataDescriptors$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumDataDescriptors$LAYOUT() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumDataDescriptors$LAYOUT_; }

    static final VarHandle _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumDataDescriptors$VH_ = _DEVICE_COPY_OFFLOAD_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaximumDataDescriptors"));
    static final java.lang.invoke.VarHandle _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumDataDescriptors$VH() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumDataDescriptors$VH_; }

    static final MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumTransferLengthPerDescriptor$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumTransferLengthPerDescriptor$LAYOUT() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumTransferLengthPerDescriptor$LAYOUT_; }

    static final VarHandle _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumTransferLengthPerDescriptor$VH_ = _DEVICE_COPY_OFFLOAD_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaximumTransferLengthPerDescriptor"));
    static final java.lang.invoke.VarHandle _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumTransferLengthPerDescriptor$VH() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$MaximumTransferLengthPerDescriptor$VH_; }

    static final MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$OptimalTransferLengthPerDescriptor$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$OptimalTransferLengthPerDescriptor$LAYOUT() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$OptimalTransferLengthPerDescriptor$LAYOUT_; }

    static final VarHandle _DEVICE_COPY_OFFLOAD_DESCRIPTOR$OptimalTransferLengthPerDescriptor$VH_ = _DEVICE_COPY_OFFLOAD_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OptimalTransferLengthPerDescriptor"));
    static final java.lang.invoke.VarHandle _DEVICE_COPY_OFFLOAD_DESCRIPTOR$OptimalTransferLengthPerDescriptor$VH() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$OptimalTransferLengthPerDescriptor$VH_; }

    static final MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$OptimalTransferLengthGranularity$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_COPY_OFFLOAD_DESCRIPTOR$OptimalTransferLengthGranularity$LAYOUT() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$OptimalTransferLengthGranularity$LAYOUT_; }

    static final VarHandle _DEVICE_COPY_OFFLOAD_DESCRIPTOR$OptimalTransferLengthGranularity$VH_ = _DEVICE_COPY_OFFLOAD_DESCRIPTOR$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("OptimalTransferLengthGranularity"));
    static final java.lang.invoke.VarHandle _DEVICE_COPY_OFFLOAD_DESCRIPTOR$OptimalTransferLengthGranularity$VH() { return _DEVICE_COPY_OFFLOAD_DESCRIPTOR$OptimalTransferLengthGranularity$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("NameOffset"),
        C_LONG.withName("NumberOfLogicalCopies"),
        C_LONG.withName("NumberOfPhysicalCopies"),
        C_LONG.withName("PhysicalDiskRedundancy"),
        C_LONG.withName("NumberOfColumns"),
        C_LONG.withName("Interleave")
    ).withName("_STORAGE_DEVICE_RESILIENCY_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$struct$LAYOUT() { return _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$Version$LAYOUT() { return _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$Version$VH_ = _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$Version$VH() { return _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$Size$LAYOUT() { return _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$Size$VH_ = _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$Size$VH() { return _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NameOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NameOffset$LAYOUT() { return _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NameOffset$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NameOffset$VH_ = _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NameOffset"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NameOffset$VH() { return _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NameOffset$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NumberOfLogicalCopies$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NumberOfLogicalCopies$LAYOUT() { return _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NumberOfLogicalCopies$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NumberOfLogicalCopies$VH_ = _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfLogicalCopies"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NumberOfLogicalCopies$VH() { return _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NumberOfLogicalCopies$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NumberOfPhysicalCopies$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NumberOfPhysicalCopies$LAYOUT() { return _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NumberOfPhysicalCopies$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NumberOfPhysicalCopies$VH_ = _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfPhysicalCopies"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NumberOfPhysicalCopies$VH() { return _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NumberOfPhysicalCopies$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$PhysicalDiskRedundancy$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$PhysicalDiskRedundancy$LAYOUT() { return _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$PhysicalDiskRedundancy$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$PhysicalDiskRedundancy$VH_ = _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PhysicalDiskRedundancy"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$PhysicalDiskRedundancy$VH() { return _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$PhysicalDiskRedundancy$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NumberOfColumns$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NumberOfColumns$LAYOUT() { return _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NumberOfColumns$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NumberOfColumns$VH_ = _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfColumns"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NumberOfColumns$VH() { return _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$NumberOfColumns$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$Interleave$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$Interleave$LAYOUT() { return _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$Interleave$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$Interleave$VH_ = _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Interleave"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$Interleave$VH() { return _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR$Interleave$VH_; }

    static final int StorageRpmbFrameTypeUnknown() { return (int)0L; }

    static final int StorageRpmbFrameTypeStandard() { return (int)1L; }

    static final int StorageRpmbFrameTypeMax() { return (int)2L; }

    static final MemoryLayout _STORAGE_RPMB_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("SizeInBytes"),
        C_LONG.withName("MaxReliableWriteSizeInBytes"),
        C_INT.withName("FrameFormat")
    ).withName("_STORAGE_RPMB_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_RPMB_DESCRIPTOR$struct$LAYOUT() { return _STORAGE_RPMB_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_RPMB_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_RPMB_DESCRIPTOR$Version$LAYOUT() { return _STORAGE_RPMB_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _STORAGE_RPMB_DESCRIPTOR$Version$VH_ = _STORAGE_RPMB_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_RPMB_DESCRIPTOR$Version$VH() { return _STORAGE_RPMB_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _STORAGE_RPMB_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_RPMB_DESCRIPTOR$Size$LAYOUT() { return _STORAGE_RPMB_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _STORAGE_RPMB_DESCRIPTOR$Size$VH_ = _STORAGE_RPMB_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_RPMB_DESCRIPTOR$Size$VH() { return _STORAGE_RPMB_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _STORAGE_RPMB_DESCRIPTOR$SizeInBytes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_RPMB_DESCRIPTOR$SizeInBytes$LAYOUT() { return _STORAGE_RPMB_DESCRIPTOR$SizeInBytes$LAYOUT_; }

    static final VarHandle _STORAGE_RPMB_DESCRIPTOR$SizeInBytes$VH_ = _STORAGE_RPMB_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SizeInBytes"));
    static final java.lang.invoke.VarHandle _STORAGE_RPMB_DESCRIPTOR$SizeInBytes$VH() { return _STORAGE_RPMB_DESCRIPTOR$SizeInBytes$VH_; }

    static final MemoryLayout _STORAGE_RPMB_DESCRIPTOR$MaxReliableWriteSizeInBytes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_RPMB_DESCRIPTOR$MaxReliableWriteSizeInBytes$LAYOUT() { return _STORAGE_RPMB_DESCRIPTOR$MaxReliableWriteSizeInBytes$LAYOUT_; }

    static final VarHandle _STORAGE_RPMB_DESCRIPTOR$MaxReliableWriteSizeInBytes$VH_ = _STORAGE_RPMB_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaxReliableWriteSizeInBytes"));
    static final java.lang.invoke.VarHandle _STORAGE_RPMB_DESCRIPTOR$MaxReliableWriteSizeInBytes$VH() { return _STORAGE_RPMB_DESCRIPTOR$MaxReliableWriteSizeInBytes$VH_; }

    static final MemoryLayout _STORAGE_RPMB_DESCRIPTOR$FrameFormat$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_RPMB_DESCRIPTOR$FrameFormat$LAYOUT() { return _STORAGE_RPMB_DESCRIPTOR$FrameFormat$LAYOUT_; }

    static final VarHandle _STORAGE_RPMB_DESCRIPTOR$FrameFormat$VH_ = _STORAGE_RPMB_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FrameFormat"));
    static final java.lang.invoke.VarHandle _STORAGE_RPMB_DESCRIPTOR$FrameFormat$VH() { return _STORAGE_RPMB_DESCRIPTOR$FrameFormat$VH_; }

    static final int StorageCryptoAlgorithmUnknown() { return (int)0L; }

    static final int StorageCryptoAlgorithmXTSAES() { return (int)1L; }

    static final int StorageCryptoAlgorithmBitlockerAESCBC() { return (int)2L; }

    static final int StorageCryptoAlgorithmAESECB() { return (int)3L; }

    static final int StorageCryptoAlgorithmESSIVAESCBC() { return (int)4L; }

    static final int StorageCryptoAlgorithmMax() { return (int)5L; }

    static final int StorageCryptoKeySizeUnknown() { return (int)0L; }

    static final int StorageCryptoKeySize128Bits() { return (int)1L; }

    static final int StorageCryptoKeySize192Bits() { return (int)2L; }

    static final int StorageCryptoKeySize256Bits() { return (int)3L; }

    static final int StorageCryptoKeySize512Bits() { return (int)4L; }

    static final MemoryLayout _STORAGE_CRYPTO_CAPABILITY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("CryptoCapabilityIndex"),
        C_INT.withName("AlgorithmId"),
        C_INT.withName("KeySize"),
        C_LONG.withName("DataUnitSizeBitmask")
    ).withName("_STORAGE_CRYPTO_CAPABILITY");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_CRYPTO_CAPABILITY$struct$LAYOUT() { return _STORAGE_CRYPTO_CAPABILITY$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_CRYPTO_CAPABILITY$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_CRYPTO_CAPABILITY$Version$LAYOUT() { return _STORAGE_CRYPTO_CAPABILITY$Version$LAYOUT_; }

    static final VarHandle _STORAGE_CRYPTO_CAPABILITY$Version$VH_ = _STORAGE_CRYPTO_CAPABILITY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_CRYPTO_CAPABILITY$Version$VH() { return _STORAGE_CRYPTO_CAPABILITY$Version$VH_; }

    static final MemoryLayout _STORAGE_CRYPTO_CAPABILITY$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_CRYPTO_CAPABILITY$Size$LAYOUT() { return _STORAGE_CRYPTO_CAPABILITY$Size$LAYOUT_; }

    static final VarHandle _STORAGE_CRYPTO_CAPABILITY$Size$VH_ = _STORAGE_CRYPTO_CAPABILITY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_CRYPTO_CAPABILITY$Size$VH() { return _STORAGE_CRYPTO_CAPABILITY$Size$VH_; }

    static final MemoryLayout _STORAGE_CRYPTO_CAPABILITY$CryptoCapabilityIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_CRYPTO_CAPABILITY$CryptoCapabilityIndex$LAYOUT() { return _STORAGE_CRYPTO_CAPABILITY$CryptoCapabilityIndex$LAYOUT_; }

    static final VarHandle _STORAGE_CRYPTO_CAPABILITY$CryptoCapabilityIndex$VH_ = _STORAGE_CRYPTO_CAPABILITY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CryptoCapabilityIndex"));
    static final java.lang.invoke.VarHandle _STORAGE_CRYPTO_CAPABILITY$CryptoCapabilityIndex$VH() { return _STORAGE_CRYPTO_CAPABILITY$CryptoCapabilityIndex$VH_; }

    static final MemoryLayout _STORAGE_CRYPTO_CAPABILITY$AlgorithmId$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_CRYPTO_CAPABILITY$AlgorithmId$LAYOUT() { return _STORAGE_CRYPTO_CAPABILITY$AlgorithmId$LAYOUT_; }

    static final VarHandle _STORAGE_CRYPTO_CAPABILITY$AlgorithmId$VH_ = _STORAGE_CRYPTO_CAPABILITY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AlgorithmId"));
    static final java.lang.invoke.VarHandle _STORAGE_CRYPTO_CAPABILITY$AlgorithmId$VH() { return _STORAGE_CRYPTO_CAPABILITY$AlgorithmId$VH_; }

    static final MemoryLayout _STORAGE_CRYPTO_CAPABILITY$KeySize$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_CRYPTO_CAPABILITY$KeySize$LAYOUT() { return _STORAGE_CRYPTO_CAPABILITY$KeySize$LAYOUT_; }

    static final VarHandle _STORAGE_CRYPTO_CAPABILITY$KeySize$VH_ = _STORAGE_CRYPTO_CAPABILITY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("KeySize"));
    static final java.lang.invoke.VarHandle _STORAGE_CRYPTO_CAPABILITY$KeySize$VH() { return _STORAGE_CRYPTO_CAPABILITY$KeySize$VH_; }

    static final MemoryLayout _STORAGE_CRYPTO_CAPABILITY$DataUnitSizeBitmask$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_CRYPTO_CAPABILITY$DataUnitSizeBitmask$LAYOUT() { return _STORAGE_CRYPTO_CAPABILITY$DataUnitSizeBitmask$LAYOUT_; }

    static final VarHandle _STORAGE_CRYPTO_CAPABILITY$DataUnitSizeBitmask$VH_ = _STORAGE_CRYPTO_CAPABILITY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DataUnitSizeBitmask"));
    static final java.lang.invoke.VarHandle _STORAGE_CRYPTO_CAPABILITY$DataUnitSizeBitmask$VH() { return _STORAGE_CRYPTO_CAPABILITY$DataUnitSizeBitmask$VH_; }

    static final MemoryLayout _STORAGE_CRYPTO_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("NumKeysSupported"),
        C_LONG.withName("NumCryptoCapabilities"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONG.withName("Version"),
            C_LONG.withName("Size"),
            C_LONG.withName("CryptoCapabilityIndex"),
            C_INT.withName("AlgorithmId"),
            C_INT.withName("KeySize"),
            C_LONG.withName("DataUnitSizeBitmask")
        ).withName("_STORAGE_CRYPTO_CAPABILITY")).withName("CryptoCapabilities")
    ).withName("_STORAGE_CRYPTO_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_CRYPTO_DESCRIPTOR$struct$LAYOUT() { return _STORAGE_CRYPTO_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_CRYPTO_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_CRYPTO_DESCRIPTOR$Version$LAYOUT() { return _STORAGE_CRYPTO_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _STORAGE_CRYPTO_DESCRIPTOR$Version$VH_ = _STORAGE_CRYPTO_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_CRYPTO_DESCRIPTOR$Version$VH() { return _STORAGE_CRYPTO_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _STORAGE_CRYPTO_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_CRYPTO_DESCRIPTOR$Size$LAYOUT() { return _STORAGE_CRYPTO_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _STORAGE_CRYPTO_DESCRIPTOR$Size$VH_ = _STORAGE_CRYPTO_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_CRYPTO_DESCRIPTOR$Size$VH() { return _STORAGE_CRYPTO_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _STORAGE_CRYPTO_DESCRIPTOR$NumKeysSupported$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_CRYPTO_DESCRIPTOR$NumKeysSupported$LAYOUT() { return _STORAGE_CRYPTO_DESCRIPTOR$NumKeysSupported$LAYOUT_; }

    static final VarHandle _STORAGE_CRYPTO_DESCRIPTOR$NumKeysSupported$VH_ = _STORAGE_CRYPTO_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumKeysSupported"));
    static final java.lang.invoke.VarHandle _STORAGE_CRYPTO_DESCRIPTOR$NumKeysSupported$VH() { return _STORAGE_CRYPTO_DESCRIPTOR$NumKeysSupported$VH_; }

    static final MemoryLayout _STORAGE_CRYPTO_DESCRIPTOR$NumCryptoCapabilities$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_CRYPTO_DESCRIPTOR$NumCryptoCapabilities$LAYOUT() { return _STORAGE_CRYPTO_DESCRIPTOR$NumCryptoCapabilities$LAYOUT_; }

    static final VarHandle _STORAGE_CRYPTO_DESCRIPTOR$NumCryptoCapabilities$VH_ = _STORAGE_CRYPTO_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumCryptoCapabilities"));
    static final java.lang.invoke.VarHandle _STORAGE_CRYPTO_DESCRIPTOR$NumCryptoCapabilities$VH() { return _STORAGE_CRYPTO_DESCRIPTOR$NumCryptoCapabilities$VH_; }

    static final int StorageTierMediaTypeUnspecified() { return (int)0L; }

    static final int StorageTierMediaTypeDisk() { return (int)1L; }

    static final int StorageTierMediaTypeSsd() { return (int)2L; }

    static final int StorageTierMediaTypeScm() { return (int)4L; }

    static final int StorageTierMediaTypeMax() { return (int)5L; }

    static final int StorageTierClassUnspecified() { return (int)0L; }

    static final int StorageTierClassCapacity() { return (int)1L; }

    static final int StorageTierClassPerformance() { return (int)2L; }

    static final int StorageTierClassMax() { return (int)3L; }

    static final MemoryLayout _STORAGE_TIER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("Id"),
        MemoryLayout.ofSequence(256, C_SHORT).withName("Name"),
        MemoryLayout.ofSequence(256, C_SHORT).withName("Description"),
        C_LONGLONG.withName("Flags"),
        C_LONGLONG.withName("ProvisionedCapacity"),
        C_INT.withName("MediaType"),
        C_INT.withName("Class")
    ).withName("_STORAGE_TIER");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TIER$struct$LAYOUT() { return _STORAGE_TIER$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_TIER$Flags$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TIER$Flags$LAYOUT() { return _STORAGE_TIER$Flags$LAYOUT_; }

    static final VarHandle _STORAGE_TIER$Flags$VH_ = _STORAGE_TIER$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _STORAGE_TIER$Flags$VH() { return _STORAGE_TIER$Flags$VH_; }

    static final MemoryLayout _STORAGE_TIER$ProvisionedCapacity$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TIER$ProvisionedCapacity$LAYOUT() { return _STORAGE_TIER$ProvisionedCapacity$LAYOUT_; }

    static final VarHandle _STORAGE_TIER$ProvisionedCapacity$VH_ = _STORAGE_TIER$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ProvisionedCapacity"));
    static final java.lang.invoke.VarHandle _STORAGE_TIER$ProvisionedCapacity$VH() { return _STORAGE_TIER$ProvisionedCapacity$VH_; }

    static final MemoryLayout _STORAGE_TIER$MediaType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TIER$MediaType$LAYOUT() { return _STORAGE_TIER$MediaType$LAYOUT_; }

    static final VarHandle _STORAGE_TIER$MediaType$VH_ = _STORAGE_TIER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MediaType"));
    static final java.lang.invoke.VarHandle _STORAGE_TIER$MediaType$VH() { return _STORAGE_TIER$MediaType$VH_; }

    static final MemoryLayout _STORAGE_TIER$Class$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TIER$Class$LAYOUT() { return _STORAGE_TIER$Class$LAYOUT_; }

    static final VarHandle _STORAGE_TIER$Class$VH_ = _STORAGE_TIER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Class"));
    static final java.lang.invoke.VarHandle _STORAGE_TIER$Class$VH() { return _STORAGE_TIER$Class$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_TIERING_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("Flags"),
        C_LONG.withName("TotalNumberOfTiers"),
        C_LONG.withName("NumberOfTiersReturned"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
            ).withName("Id"),
            MemoryLayout.ofSequence(256, C_SHORT).withName("Name"),
            MemoryLayout.ofSequence(256, C_SHORT).withName("Description"),
            C_LONGLONG.withName("Flags"),
            C_LONGLONG.withName("ProvisionedCapacity"),
            C_INT.withName("MediaType"),
            C_INT.withName("Class")
        ).withName("_STORAGE_TIER")).withName("Tiers")
    ).withName("_STORAGE_DEVICE_TIERING_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_TIERING_DESCRIPTOR$struct$LAYOUT() { return _STORAGE_DEVICE_TIERING_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_DEVICE_TIERING_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_TIERING_DESCRIPTOR$Version$LAYOUT() { return _STORAGE_DEVICE_TIERING_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_TIERING_DESCRIPTOR$Version$VH_ = _STORAGE_DEVICE_TIERING_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_TIERING_DESCRIPTOR$Version$VH() { return _STORAGE_DEVICE_TIERING_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_TIERING_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_TIERING_DESCRIPTOR$Size$LAYOUT() { return _STORAGE_DEVICE_TIERING_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_TIERING_DESCRIPTOR$Size$VH_ = _STORAGE_DEVICE_TIERING_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_TIERING_DESCRIPTOR$Size$VH() { return _STORAGE_DEVICE_TIERING_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_TIERING_DESCRIPTOR$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_TIERING_DESCRIPTOR$Flags$LAYOUT() { return _STORAGE_DEVICE_TIERING_DESCRIPTOR$Flags$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_TIERING_DESCRIPTOR$Flags$VH_ = _STORAGE_DEVICE_TIERING_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_TIERING_DESCRIPTOR$Flags$VH() { return _STORAGE_DEVICE_TIERING_DESCRIPTOR$Flags$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_TIERING_DESCRIPTOR$TotalNumberOfTiers$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_TIERING_DESCRIPTOR$TotalNumberOfTiers$LAYOUT() { return _STORAGE_DEVICE_TIERING_DESCRIPTOR$TotalNumberOfTiers$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_TIERING_DESCRIPTOR$TotalNumberOfTiers$VH_ = _STORAGE_DEVICE_TIERING_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TotalNumberOfTiers"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_TIERING_DESCRIPTOR$TotalNumberOfTiers$VH() { return _STORAGE_DEVICE_TIERING_DESCRIPTOR$TotalNumberOfTiers$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_TIERING_DESCRIPTOR$NumberOfTiersReturned$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_TIERING_DESCRIPTOR$NumberOfTiersReturned$LAYOUT() { return _STORAGE_DEVICE_TIERING_DESCRIPTOR$NumberOfTiersReturned$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_TIERING_DESCRIPTOR$NumberOfTiersReturned$VH_ = _STORAGE_DEVICE_TIERING_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfTiersReturned"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_TIERING_DESCRIPTOR$NumberOfTiersReturned$VH() { return _STORAGE_DEVICE_TIERING_DESCRIPTOR$NumberOfTiersReturned$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("NumberOfFaultDomains"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("_GUID")).withName("FaultDomainIds")
    ).withName("_STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$struct$LAYOUT() { return _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$Version$LAYOUT() { return _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$Version$VH_ = _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$Version$VH() { return _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$Size$LAYOUT() { return _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$Size$VH_ = _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$Size$VH() { return _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$NumberOfFaultDomains$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$NumberOfFaultDomains$LAYOUT() { return _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$NumberOfFaultDomains$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$NumberOfFaultDomains$VH_ = _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfFaultDomains"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$NumberOfFaultDomains$VH() { return _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR$NumberOfFaultDomains$VH_; }

    static final int ProtocolTypeUnknown() { return (int)0L; }

    static final int ProtocolTypeScsi() { return (int)1L; }

    static final int ProtocolTypeAta() { return (int)2L; }

    static final int ProtocolTypeNvme() { return (int)3L; }

    static final int ProtocolTypeSd() { return (int)4L; }

    static final int ProtocolTypeUfs() { return (int)5L; }

    static final int ProtocolTypeProprietary() { return (int)126L; }

    static final int ProtocolTypeMaxReserved() { return (int)127L; }

    static final int NVMeDataTypeUnknown() { return (int)0L; }

    static final int NVMeDataTypeIdentify() { return (int)1L; }

    static final int NVMeDataTypeLogPage() { return (int)2L; }

    static final int NVMeDataTypeFeature() { return (int)3L; }

    static final int AtaDataTypeUnknown() { return (int)0L; }

    static final int AtaDataTypeIdentify() { return (int)1L; }

    static final int AtaDataTypeLogPage() { return (int)2L; }

    static final int UfsDataTypeUnknown() { return (int)0L; }

    static final int UfsDataTypeQueryDescriptor() { return (int)1L; }

    static final int UfsDataTypeMax() { return (int)2L; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("ProtocolType"),
        C_LONG.withName("DataType"),
        C_LONG.withName("ProtocolDataRequestValue"),
        C_LONG.withName("ProtocolDataRequestSubValue"),
        C_LONG.withName("ProtocolDataOffset"),
        C_LONG.withName("ProtocolDataLength"),
        C_LONG.withName("FixedProtocolReturnData"),
        C_LONG.withName("ProtocolDataRequestSubValue2"),
        C_LONG.withName("ProtocolDataRequestSubValue3"),
        C_LONG.withName("Reserved")
    ).withName("_STORAGE_PROTOCOL_SPECIFIC_DATA");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$struct$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolType$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolType$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolType$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolType"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolType$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolType$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$DataType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$DataType$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$DataType$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA$DataType$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DataType"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA$DataType$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$DataType$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestValue$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestValue$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestValue$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestValue$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolDataRequestValue"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestValue$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestValue$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestSubValue$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestSubValue$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestSubValue$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestSubValue$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolDataRequestSubValue"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestSubValue$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestSubValue$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataOffset$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataOffset$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataOffset$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolDataOffset"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataOffset$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataOffset$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataLength$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataLength$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataLength$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolDataLength"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataLength$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataLength$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$FixedProtocolReturnData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$FixedProtocolReturnData$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$FixedProtocolReturnData$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA$FixedProtocolReturnData$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FixedProtocolReturnData"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA$FixedProtocolReturnData$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$FixedProtocolReturnData$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestSubValue2$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestSubValue2$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestSubValue2$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestSubValue2$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolDataRequestSubValue2"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestSubValue2$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestSubValue2$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestSubValue3$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestSubValue3$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestSubValue3$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestSubValue3$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolDataRequestSubValue3"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestSubValue3$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$ProtocolDataRequestSubValue3$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA$Reserved$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$Reserved$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA$Reserved$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA$Reserved$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA$Reserved$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("ProtocolType"),
        C_LONG.withName("DataType"),
        C_LONG.withName("ProtocolDataValue"),
        C_LONG.withName("ProtocolDataSubValue"),
        C_LONG.withName("ProtocolDataOffset"),
        C_LONG.withName("ProtocolDataLength"),
        C_LONG.withName("FixedProtocolReturnData"),
        C_LONG.withName("ProtocolDataSubValue2"),
        C_LONG.withName("ProtocolDataSubValue3"),
        C_LONG.withName("ProtocolDataSubValue4"),
        C_LONG.withName("ProtocolDataSubValue5"),
        MemoryLayout.ofSequence(5, C_LONG).withName("Reserved")
    ).withName("_STORAGE_PROTOCOL_SPECIFIC_DATA_EXT");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$struct$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolType$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolType$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolType$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolType"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolType$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolType$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$DataType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$DataType$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$DataType$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$DataType$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DataType"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$DataType$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$DataType$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataValue$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataValue$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataValue$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataValue$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolDataValue"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataValue$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataValue$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolDataSubValue"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataOffset$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataOffset$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataOffset$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolDataOffset"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataOffset$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataOffset$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataLength$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataLength$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataLength$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolDataLength"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataLength$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataLength$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$FixedProtocolReturnData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$FixedProtocolReturnData$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$FixedProtocolReturnData$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$FixedProtocolReturnData$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FixedProtocolReturnData"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$FixedProtocolReturnData$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$FixedProtocolReturnData$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue2$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue2$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue2$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue2$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolDataSubValue2"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue2$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue2$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue3$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue3$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue3$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue3$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolDataSubValue3"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue3$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue3$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue4$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue4$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue4$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue4$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolDataSubValue4"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue4$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue4$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue5$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue5$LAYOUT() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue5$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue5$VH_ = _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolDataSubValue5"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue5$VH() { return _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT$ProtocolDataSubValue5$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_DATA_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        MemoryLayout.ofStruct(
            C_INT.withName("ProtocolType"),
            C_LONG.withName("DataType"),
            C_LONG.withName("ProtocolDataRequestValue"),
            C_LONG.withName("ProtocolDataRequestSubValue"),
            C_LONG.withName("ProtocolDataOffset"),
            C_LONG.withName("ProtocolDataLength"),
            C_LONG.withName("FixedProtocolReturnData"),
            C_LONG.withName("ProtocolDataRequestSubValue2"),
            C_LONG.withName("ProtocolDataRequestSubValue3"),
            C_LONG.withName("Reserved")
        ).withName("ProtocolSpecificData")
    ).withName("_STORAGE_PROTOCOL_DATA_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_DATA_DESCRIPTOR$struct$LAYOUT() { return _STORAGE_PROTOCOL_DATA_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_PROTOCOL_DATA_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_DATA_DESCRIPTOR$Version$LAYOUT() { return _STORAGE_PROTOCOL_DATA_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_DATA_DESCRIPTOR$Version$VH_ = _STORAGE_PROTOCOL_DATA_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_DATA_DESCRIPTOR$Version$VH() { return _STORAGE_PROTOCOL_DATA_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_DATA_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_DATA_DESCRIPTOR$Size$LAYOUT() { return _STORAGE_PROTOCOL_DATA_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_DATA_DESCRIPTOR$Size$VH_ = _STORAGE_PROTOCOL_DATA_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_DATA_DESCRIPTOR$Size$VH() { return _STORAGE_PROTOCOL_DATA_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        MemoryLayout.ofStruct(
            C_INT.withName("ProtocolType"),
            C_LONG.withName("DataType"),
            C_LONG.withName("ProtocolDataValue"),
            C_LONG.withName("ProtocolDataSubValue"),
            C_LONG.withName("ProtocolDataOffset"),
            C_LONG.withName("ProtocolDataLength"),
            C_LONG.withName("FixedProtocolReturnData"),
            C_LONG.withName("ProtocolDataSubValue2"),
            C_LONG.withName("ProtocolDataSubValue3"),
            C_LONG.withName("ProtocolDataSubValue4"),
            C_LONG.withName("ProtocolDataSubValue5"),
            MemoryLayout.ofSequence(5, C_LONG).withName("Reserved")
        ).withName("ProtocolSpecificData")
    ).withName("_STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT$struct$LAYOUT() { return _STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT$Version$LAYOUT() { return _STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT$Version$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT$Version$VH_ = _STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT$Version$VH() { return _STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT$Version$VH_; }

    static final MemoryLayout _STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT$Size$LAYOUT() { return _STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT$Size$LAYOUT_; }

    static final VarHandle _STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT$Size$VH_ = _STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT$Size$VH() { return _STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT$Size$VH_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("Index"),
        C_SHORT.withName("Temperature"),
        C_SHORT.withName("OverThreshold"),
        C_SHORT.withName("UnderThreshold"),
        C_CHAR.withName("OverThresholdChangable"),
        C_CHAR.withName("UnderThresholdChangable"),
        C_CHAR.withName("EventGenerated"),
        C_CHAR.withName("Reserved0"),
        C_LONG.withName("Reserved1")
    ).withName("_STORAGE_TEMPERATURE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_INFO$struct$LAYOUT() { return _STORAGE_TEMPERATURE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_INFO$Index$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_INFO$Index$LAYOUT() { return _STORAGE_TEMPERATURE_INFO$Index$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_INFO$Index$VH_ = _STORAGE_TEMPERATURE_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Index"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_INFO$Index$VH() { return _STORAGE_TEMPERATURE_INFO$Index$VH_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_INFO$Temperature$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_INFO$Temperature$LAYOUT() { return _STORAGE_TEMPERATURE_INFO$Temperature$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_INFO$Temperature$VH_ = _STORAGE_TEMPERATURE_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Temperature"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_INFO$Temperature$VH() { return _STORAGE_TEMPERATURE_INFO$Temperature$VH_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_INFO$OverThreshold$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_INFO$OverThreshold$LAYOUT() { return _STORAGE_TEMPERATURE_INFO$OverThreshold$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_INFO$OverThreshold$VH_ = _STORAGE_TEMPERATURE_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("OverThreshold"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_INFO$OverThreshold$VH() { return _STORAGE_TEMPERATURE_INFO$OverThreshold$VH_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_INFO$UnderThreshold$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_INFO$UnderThreshold$LAYOUT() { return _STORAGE_TEMPERATURE_INFO$UnderThreshold$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_INFO$UnderThreshold$VH_ = _STORAGE_TEMPERATURE_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("UnderThreshold"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_INFO$UnderThreshold$VH() { return _STORAGE_TEMPERATURE_INFO$UnderThreshold$VH_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_INFO$OverThresholdChangable$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_INFO$OverThresholdChangable$LAYOUT() { return _STORAGE_TEMPERATURE_INFO$OverThresholdChangable$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_INFO$OverThresholdChangable$VH_ = _STORAGE_TEMPERATURE_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("OverThresholdChangable"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_INFO$OverThresholdChangable$VH() { return _STORAGE_TEMPERATURE_INFO$OverThresholdChangable$VH_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_INFO$UnderThresholdChangable$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_INFO$UnderThresholdChangable$LAYOUT() { return _STORAGE_TEMPERATURE_INFO$UnderThresholdChangable$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_INFO$UnderThresholdChangable$VH_ = _STORAGE_TEMPERATURE_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("UnderThresholdChangable"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_INFO$UnderThresholdChangable$VH() { return _STORAGE_TEMPERATURE_INFO$UnderThresholdChangable$VH_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_INFO$EventGenerated$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_INFO$EventGenerated$LAYOUT() { return _STORAGE_TEMPERATURE_INFO$EventGenerated$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_INFO$EventGenerated$VH_ = _STORAGE_TEMPERATURE_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("EventGenerated"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_INFO$EventGenerated$VH() { return _STORAGE_TEMPERATURE_INFO$EventGenerated$VH_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_INFO$Reserved0$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_INFO$Reserved0$LAYOUT() { return _STORAGE_TEMPERATURE_INFO$Reserved0$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_INFO$Reserved0$VH_ = _STORAGE_TEMPERATURE_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Reserved0"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_INFO$Reserved0$VH() { return _STORAGE_TEMPERATURE_INFO$Reserved0$VH_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_INFO$Reserved1$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_INFO$Reserved1$LAYOUT() { return _STORAGE_TEMPERATURE_INFO$Reserved1$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_INFO$Reserved1$VH_ = _STORAGE_TEMPERATURE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved1"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_INFO$Reserved1$VH() { return _STORAGE_TEMPERATURE_INFO$Reserved1$VH_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_SHORT.withName("CriticalTemperature"),
        C_SHORT.withName("WarningTemperature"),
        C_SHORT.withName("InfoCount"),
        MemoryLayout.ofSequence(2, C_CHAR).withName("Reserved0"),
        MemoryLayout.ofSequence(2, C_LONG).withName("Reserved1"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_SHORT.withName("Index"),
            C_SHORT.withName("Temperature"),
            C_SHORT.withName("OverThreshold"),
            C_SHORT.withName("UnderThreshold"),
            C_CHAR.withName("OverThresholdChangable"),
            C_CHAR.withName("UnderThresholdChangable"),
            C_CHAR.withName("EventGenerated"),
            C_CHAR.withName("Reserved0"),
            C_LONG.withName("Reserved1")
        ).withName("_STORAGE_TEMPERATURE_INFO")).withName("TemperatureInfo")
    ).withName("_STORAGE_TEMPERATURE_DATA_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$struct$LAYOUT() { return _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$Version$LAYOUT() { return _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$Version$VH_ = _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$Version$VH() { return _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$Version$VH_; }

}

