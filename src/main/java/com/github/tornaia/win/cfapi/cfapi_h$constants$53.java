// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$53 extends cfapi_h$constants$52 {

    /* package-private */ cfapi_h$constants$53() {}
    static final MemoryLayout _CERT_STRONG_SIGN_PARA$pSerializedInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_STRONG_SIGN_PARA$pSerializedInfo$LAYOUT() { return _CERT_STRONG_SIGN_PARA$pSerializedInfo$LAYOUT_; }

    static final VarHandle _CERT_STRONG_SIGN_PARA$pSerializedInfo$VH_ = MemoryHandles.asAddressVarHandle(_CERT_STRONG_SIGN_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pSerializedInfo")));
    static final java.lang.invoke.VarHandle _CERT_STRONG_SIGN_PARA$pSerializedInfo$VH() { return _CERT_STRONG_SIGN_PARA$pSerializedInfo$VH_; }

    static final MemoryLayout _CERT_STRONG_SIGN_PARA$pszOID$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_STRONG_SIGN_PARA$pszOID$LAYOUT() { return _CERT_STRONG_SIGN_PARA$pszOID$LAYOUT_; }

    static final VarHandle _CERT_STRONG_SIGN_PARA$pszOID$VH_ = MemoryHandles.asAddressVarHandle(_CERT_STRONG_SIGN_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszOID")));
    static final java.lang.invoke.VarHandle _CERT_STRONG_SIGN_PARA$pszOID$VH() { return _CERT_STRONG_SIGN_PARA$pszOID$VH_; }

    static final MemoryLayout _CERT_ISSUER_SERIAL_NUMBER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("Issuer"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("SerialNumber")
    ).withName("_CERT_ISSUER_SERIAL_NUMBER");
    static final jdk.incubator.foreign.MemoryLayout _CERT_ISSUER_SERIAL_NUMBER$struct$LAYOUT() { return _CERT_ISSUER_SERIAL_NUMBER$struct$LAYOUT_; }

    static final MemoryLayout _CERT_ID$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwIdChoice"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Issuer"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("SerialNumber")
        ).withName("IssuerSerialNumber"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("KeyId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("HashId")
    ).withName("_CERT_ID");
    static final jdk.incubator.foreign.MemoryLayout _CERT_ID$struct$LAYOUT() { return _CERT_ID$struct$LAYOUT_; }

    static final MemoryLayout _CERT_ID$dwIdChoice$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_ID$dwIdChoice$LAYOUT() { return _CERT_ID$dwIdChoice$LAYOUT_; }

    static final VarHandle _CERT_ID$dwIdChoice$VH_ = _CERT_ID$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwIdChoice"));
    static final java.lang.invoke.VarHandle _CERT_ID$dwIdChoice$VH() { return _CERT_ID$dwIdChoice$VH_; }

    static final MemoryLayout _CMSG_SIGNER_ENCODE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pCertInfo"),
        C_LONGLONG.withName("hCryptProv"),
        C_LONGLONG.withName("hNCryptKey"),
        C_LONG.withName("dwKeySpec"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("HashAlgorithm"),
        C_POINTER.withName("pvHashAuxInfo"),
        C_LONG.withName("cAuthAttr"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgAuthAttr"),
        C_LONG.withName("cUnauthAttr"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgUnauthAttr")
    ).withName("_CMSG_SIGNER_ENCODE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNER_ENCODE_INFO$struct$LAYOUT() { return _CMSG_SIGNER_ENCODE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_SIGNER_ENCODE_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNER_ENCODE_INFO$cbSize$LAYOUT() { return _CMSG_SIGNER_ENCODE_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_SIGNER_ENCODE_INFO$cbSize$VH_ = _CMSG_SIGNER_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_SIGNER_ENCODE_INFO$cbSize$VH() { return _CMSG_SIGNER_ENCODE_INFO$cbSize$VH_; }

    static final MemoryLayout _CMSG_SIGNER_ENCODE_INFO$pCertInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNER_ENCODE_INFO$pCertInfo$LAYOUT() { return _CMSG_SIGNER_ENCODE_INFO$pCertInfo$LAYOUT_; }

    static final VarHandle _CMSG_SIGNER_ENCODE_INFO$pCertInfo$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_SIGNER_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pCertInfo")));
    static final java.lang.invoke.VarHandle _CMSG_SIGNER_ENCODE_INFO$pCertInfo$VH() { return _CMSG_SIGNER_ENCODE_INFO$pCertInfo$VH_; }

    static final MemoryLayout _CMSG_SIGNER_ENCODE_INFO$hCryptProv$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNER_ENCODE_INFO$hCryptProv$LAYOUT() { return _CMSG_SIGNER_ENCODE_INFO$hCryptProv$LAYOUT_; }

    static final VarHandle _CMSG_SIGNER_ENCODE_INFO$hCryptProv$VH_ = _CMSG_SIGNER_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCryptProv"));
    static final java.lang.invoke.VarHandle _CMSG_SIGNER_ENCODE_INFO$hCryptProv$VH() { return _CMSG_SIGNER_ENCODE_INFO$hCryptProv$VH_; }

    static final MemoryLayout _CMSG_SIGNER_ENCODE_INFO$hNCryptKey$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNER_ENCODE_INFO$hNCryptKey$LAYOUT() { return _CMSG_SIGNER_ENCODE_INFO$hNCryptKey$LAYOUT_; }

    static final VarHandle _CMSG_SIGNER_ENCODE_INFO$hNCryptKey$VH_ = _CMSG_SIGNER_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hNCryptKey"));
    static final java.lang.invoke.VarHandle _CMSG_SIGNER_ENCODE_INFO$hNCryptKey$VH() { return _CMSG_SIGNER_ENCODE_INFO$hNCryptKey$VH_; }

    static final MemoryLayout _CMSG_SIGNER_ENCODE_INFO$dwKeySpec$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNER_ENCODE_INFO$dwKeySpec$LAYOUT() { return _CMSG_SIGNER_ENCODE_INFO$dwKeySpec$LAYOUT_; }

    static final VarHandle _CMSG_SIGNER_ENCODE_INFO$dwKeySpec$VH_ = _CMSG_SIGNER_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwKeySpec"));
    static final java.lang.invoke.VarHandle _CMSG_SIGNER_ENCODE_INFO$dwKeySpec$VH() { return _CMSG_SIGNER_ENCODE_INFO$dwKeySpec$VH_; }

    static final MemoryLayout _CMSG_SIGNER_ENCODE_INFO$pvHashAuxInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNER_ENCODE_INFO$pvHashAuxInfo$LAYOUT() { return _CMSG_SIGNER_ENCODE_INFO$pvHashAuxInfo$LAYOUT_; }

    static final VarHandle _CMSG_SIGNER_ENCODE_INFO$pvHashAuxInfo$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_SIGNER_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvHashAuxInfo")));
    static final java.lang.invoke.VarHandle _CMSG_SIGNER_ENCODE_INFO$pvHashAuxInfo$VH() { return _CMSG_SIGNER_ENCODE_INFO$pvHashAuxInfo$VH_; }

    static final MemoryLayout _CMSG_SIGNER_ENCODE_INFO$cAuthAttr$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNER_ENCODE_INFO$cAuthAttr$LAYOUT() { return _CMSG_SIGNER_ENCODE_INFO$cAuthAttr$LAYOUT_; }

    static final VarHandle _CMSG_SIGNER_ENCODE_INFO$cAuthAttr$VH_ = _CMSG_SIGNER_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cAuthAttr"));
    static final java.lang.invoke.VarHandle _CMSG_SIGNER_ENCODE_INFO$cAuthAttr$VH() { return _CMSG_SIGNER_ENCODE_INFO$cAuthAttr$VH_; }

    static final MemoryLayout _CMSG_SIGNER_ENCODE_INFO$rgAuthAttr$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNER_ENCODE_INFO$rgAuthAttr$LAYOUT() { return _CMSG_SIGNER_ENCODE_INFO$rgAuthAttr$LAYOUT_; }

    static final VarHandle _CMSG_SIGNER_ENCODE_INFO$rgAuthAttr$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_SIGNER_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgAuthAttr")));
    static final java.lang.invoke.VarHandle _CMSG_SIGNER_ENCODE_INFO$rgAuthAttr$VH() { return _CMSG_SIGNER_ENCODE_INFO$rgAuthAttr$VH_; }

    static final MemoryLayout _CMSG_SIGNER_ENCODE_INFO$cUnauthAttr$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNER_ENCODE_INFO$cUnauthAttr$LAYOUT() { return _CMSG_SIGNER_ENCODE_INFO$cUnauthAttr$LAYOUT_; }

    static final VarHandle _CMSG_SIGNER_ENCODE_INFO$cUnauthAttr$VH_ = _CMSG_SIGNER_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cUnauthAttr"));
    static final java.lang.invoke.VarHandle _CMSG_SIGNER_ENCODE_INFO$cUnauthAttr$VH() { return _CMSG_SIGNER_ENCODE_INFO$cUnauthAttr$VH_; }

    static final MemoryLayout _CMSG_SIGNER_ENCODE_INFO$rgUnauthAttr$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNER_ENCODE_INFO$rgUnauthAttr$LAYOUT() { return _CMSG_SIGNER_ENCODE_INFO$rgUnauthAttr$LAYOUT_; }

    static final VarHandle _CMSG_SIGNER_ENCODE_INFO$rgUnauthAttr$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_SIGNER_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgUnauthAttr")));
    static final java.lang.invoke.VarHandle _CMSG_SIGNER_ENCODE_INFO$rgUnauthAttr$VH() { return _CMSG_SIGNER_ENCODE_INFO$rgUnauthAttr$VH_; }

    static final MemoryLayout _CMSG_SIGNED_ENCODE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("cSigners"),
        C_POINTER.withName("rgSigners"),
        C_LONG.withName("cCertEncoded"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgCertEncoded"),
        C_LONG.withName("cCrlEncoded"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgCrlEncoded")
    ).withName("_CMSG_SIGNED_ENCODE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNED_ENCODE_INFO$struct$LAYOUT() { return _CMSG_SIGNED_ENCODE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_SIGNED_ENCODE_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNED_ENCODE_INFO$cbSize$LAYOUT() { return _CMSG_SIGNED_ENCODE_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_SIGNED_ENCODE_INFO$cbSize$VH_ = _CMSG_SIGNED_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_SIGNED_ENCODE_INFO$cbSize$VH() { return _CMSG_SIGNED_ENCODE_INFO$cbSize$VH_; }

    static final MemoryLayout _CMSG_SIGNED_ENCODE_INFO$cSigners$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNED_ENCODE_INFO$cSigners$LAYOUT() { return _CMSG_SIGNED_ENCODE_INFO$cSigners$LAYOUT_; }

    static final VarHandle _CMSG_SIGNED_ENCODE_INFO$cSigners$VH_ = _CMSG_SIGNED_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cSigners"));
    static final java.lang.invoke.VarHandle _CMSG_SIGNED_ENCODE_INFO$cSigners$VH() { return _CMSG_SIGNED_ENCODE_INFO$cSigners$VH_; }

    static final MemoryLayout _CMSG_SIGNED_ENCODE_INFO$rgSigners$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNED_ENCODE_INFO$rgSigners$LAYOUT() { return _CMSG_SIGNED_ENCODE_INFO$rgSigners$LAYOUT_; }

    static final VarHandle _CMSG_SIGNED_ENCODE_INFO$rgSigners$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_SIGNED_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgSigners")));
    static final java.lang.invoke.VarHandle _CMSG_SIGNED_ENCODE_INFO$rgSigners$VH() { return _CMSG_SIGNED_ENCODE_INFO$rgSigners$VH_; }

    static final MemoryLayout _CMSG_SIGNED_ENCODE_INFO$cCertEncoded$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNED_ENCODE_INFO$cCertEncoded$LAYOUT() { return _CMSG_SIGNED_ENCODE_INFO$cCertEncoded$LAYOUT_; }

    static final VarHandle _CMSG_SIGNED_ENCODE_INFO$cCertEncoded$VH_ = _CMSG_SIGNED_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cCertEncoded"));
    static final java.lang.invoke.VarHandle _CMSG_SIGNED_ENCODE_INFO$cCertEncoded$VH() { return _CMSG_SIGNED_ENCODE_INFO$cCertEncoded$VH_; }

    static final MemoryLayout _CMSG_SIGNED_ENCODE_INFO$rgCertEncoded$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNED_ENCODE_INFO$rgCertEncoded$LAYOUT() { return _CMSG_SIGNED_ENCODE_INFO$rgCertEncoded$LAYOUT_; }

    static final VarHandle _CMSG_SIGNED_ENCODE_INFO$rgCertEncoded$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_SIGNED_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgCertEncoded")));
    static final java.lang.invoke.VarHandle _CMSG_SIGNED_ENCODE_INFO$rgCertEncoded$VH() { return _CMSG_SIGNED_ENCODE_INFO$rgCertEncoded$VH_; }

    static final MemoryLayout _CMSG_SIGNED_ENCODE_INFO$cCrlEncoded$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNED_ENCODE_INFO$cCrlEncoded$LAYOUT() { return _CMSG_SIGNED_ENCODE_INFO$cCrlEncoded$LAYOUT_; }

    static final VarHandle _CMSG_SIGNED_ENCODE_INFO$cCrlEncoded$VH_ = _CMSG_SIGNED_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cCrlEncoded"));
    static final java.lang.invoke.VarHandle _CMSG_SIGNED_ENCODE_INFO$cCrlEncoded$VH() { return _CMSG_SIGNED_ENCODE_INFO$cCrlEncoded$VH_; }

    static final MemoryLayout _CMSG_SIGNED_ENCODE_INFO$rgCrlEncoded$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNED_ENCODE_INFO$rgCrlEncoded$LAYOUT() { return _CMSG_SIGNED_ENCODE_INFO$rgCrlEncoded$LAYOUT_; }

    static final VarHandle _CMSG_SIGNED_ENCODE_INFO$rgCrlEncoded$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_SIGNED_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgCrlEncoded")));
    static final java.lang.invoke.VarHandle _CMSG_SIGNED_ENCODE_INFO$rgCrlEncoded$VH() { return _CMSG_SIGNED_ENCODE_INFO$rgCrlEncoded$VH_; }

    static final MemoryLayout _CMSG_ENVELOPED_ENCODE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("hCryptProv"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("ContentEncryptionAlgorithm"),
        C_POINTER.withName("pvEncryptionAuxInfo"),
        C_LONG.withName("cRecipients"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgpRecipients")
    ).withName("_CMSG_ENVELOPED_ENCODE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_ENVELOPED_ENCODE_INFO$struct$LAYOUT() { return _CMSG_ENVELOPED_ENCODE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_ENVELOPED_ENCODE_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_ENVELOPED_ENCODE_INFO$cbSize$LAYOUT() { return _CMSG_ENVELOPED_ENCODE_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_ENVELOPED_ENCODE_INFO$cbSize$VH_ = _CMSG_ENVELOPED_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_ENVELOPED_ENCODE_INFO$cbSize$VH() { return _CMSG_ENVELOPED_ENCODE_INFO$cbSize$VH_; }

    static final MemoryLayout _CMSG_ENVELOPED_ENCODE_INFO$hCryptProv$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_ENVELOPED_ENCODE_INFO$hCryptProv$LAYOUT() { return _CMSG_ENVELOPED_ENCODE_INFO$hCryptProv$LAYOUT_; }

    static final VarHandle _CMSG_ENVELOPED_ENCODE_INFO$hCryptProv$VH_ = _CMSG_ENVELOPED_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCryptProv"));
    static final java.lang.invoke.VarHandle _CMSG_ENVELOPED_ENCODE_INFO$hCryptProv$VH() { return _CMSG_ENVELOPED_ENCODE_INFO$hCryptProv$VH_; }

    static final MemoryLayout _CMSG_ENVELOPED_ENCODE_INFO$pvEncryptionAuxInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_ENVELOPED_ENCODE_INFO$pvEncryptionAuxInfo$LAYOUT() { return _CMSG_ENVELOPED_ENCODE_INFO$pvEncryptionAuxInfo$LAYOUT_; }

    static final VarHandle _CMSG_ENVELOPED_ENCODE_INFO$pvEncryptionAuxInfo$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_ENVELOPED_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvEncryptionAuxInfo")));
    static final java.lang.invoke.VarHandle _CMSG_ENVELOPED_ENCODE_INFO$pvEncryptionAuxInfo$VH() { return _CMSG_ENVELOPED_ENCODE_INFO$pvEncryptionAuxInfo$VH_; }

    static final MemoryLayout _CMSG_ENVELOPED_ENCODE_INFO$cRecipients$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_ENVELOPED_ENCODE_INFO$cRecipients$LAYOUT() { return _CMSG_ENVELOPED_ENCODE_INFO$cRecipients$LAYOUT_; }

    static final VarHandle _CMSG_ENVELOPED_ENCODE_INFO$cRecipients$VH_ = _CMSG_ENVELOPED_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cRecipients"));
    static final java.lang.invoke.VarHandle _CMSG_ENVELOPED_ENCODE_INFO$cRecipients$VH() { return _CMSG_ENVELOPED_ENCODE_INFO$cRecipients$VH_; }

    static final MemoryLayout _CMSG_ENVELOPED_ENCODE_INFO$rgpRecipients$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_ENVELOPED_ENCODE_INFO$rgpRecipients$LAYOUT() { return _CMSG_ENVELOPED_ENCODE_INFO$rgpRecipients$LAYOUT_; }

    static final VarHandle _CMSG_ENVELOPED_ENCODE_INFO$rgpRecipients$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_ENVELOPED_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgpRecipients")));
    static final java.lang.invoke.VarHandle _CMSG_ENVELOPED_ENCODE_INFO$rgpRecipients$VH() { return _CMSG_ENVELOPED_ENCODE_INFO$rgpRecipients$VH_; }

    static final MemoryLayout _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("KeyEncryptionAlgorithm"),
        C_POINTER.withName("pvKeyEncryptionAuxInfo"),
        C_LONGLONG.withName("hCryptProv"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData"),
            C_LONG.withName("cUnusedBits"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("RecipientPublicKey"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwIdChoice"),
            MemoryLayout.ofPaddingBits(32),
            MemoryLayout.ofStruct(
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("Issuer"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("SerialNumber")
            ).withName("IssuerSerialNumber"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("KeyId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("HashId")
        ).withName("RecipientId")
    ).withName("_CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$struct$LAYOUT() { return _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$cbSize$LAYOUT() { return _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$cbSize$VH_ = _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$cbSize$VH() { return _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$cbSize$VH_; }

    static final MemoryLayout _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$pvKeyEncryptionAuxInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$pvKeyEncryptionAuxInfo$LAYOUT() { return _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$pvKeyEncryptionAuxInfo$LAYOUT_; }

    static final VarHandle _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$pvKeyEncryptionAuxInfo$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvKeyEncryptionAuxInfo")));
    static final java.lang.invoke.VarHandle _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$pvKeyEncryptionAuxInfo$VH() { return _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$pvKeyEncryptionAuxInfo$VH_; }

    static final MemoryLayout _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$hCryptProv$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$hCryptProv$LAYOUT() { return _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$hCryptProv$LAYOUT_; }

    static final VarHandle _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$hCryptProv$VH_ = _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCryptProv"));
    static final java.lang.invoke.VarHandle _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$hCryptProv$VH() { return _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO$hCryptProv$VH_; }

    static final MemoryLayout _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData"),
            C_LONG.withName("cUnusedBits"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("RecipientPublicKey"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwIdChoice"),
            MemoryLayout.ofPaddingBits(32),
            MemoryLayout.ofStruct(
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("Issuer"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("SerialNumber")
            ).withName("IssuerSerialNumber"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("KeyId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("HashId")
        ).withName("RecipientId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("Date"),
        C_POINTER.withName("pOtherAttr")
    ).withName("_CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO$struct$LAYOUT() { return _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO$cbSize$LAYOUT() { return _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO$cbSize$VH_ = _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO$cbSize$VH() { return _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO$cbSize$VH_; }

    static final MemoryLayout _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO$pOtherAttr$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO$pOtherAttr$LAYOUT() { return _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO$pOtherAttr$LAYOUT_; }

    static final VarHandle _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO$pOtherAttr$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pOtherAttr")));
    static final java.lang.invoke.VarHandle _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO$pOtherAttr$VH() { return _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO$pOtherAttr$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("KeyEncryptionAlgorithm"),
        C_POINTER.withName("pvKeyEncryptionAuxInfo"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("KeyWrapAlgorithm"),
        C_POINTER.withName("pvKeyWrapAuxInfo"),
        C_LONGLONG.withName("hCryptProv"),
        C_LONG.withName("dwKeySpec"),
        C_LONG.withName("dwKeyChoice"),
        C_POINTER.withName("pEphemeralAlgorithm"),
        C_POINTER.withName("pSenderId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("UserKeyingMaterial"),
        C_LONG.withName("cRecipientEncryptedKeys"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgpRecipientEncryptedKeys")
    ).withName("_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$struct$LAYOUT() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$cbSize$LAYOUT() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$cbSize$VH_ = _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$cbSize$VH() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$cbSize$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pvKeyEncryptionAuxInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pvKeyEncryptionAuxInfo$LAYOUT() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pvKeyEncryptionAuxInfo$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pvKeyEncryptionAuxInfo$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvKeyEncryptionAuxInfo")));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pvKeyEncryptionAuxInfo$VH() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pvKeyEncryptionAuxInfo$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pvKeyWrapAuxInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pvKeyWrapAuxInfo$LAYOUT() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pvKeyWrapAuxInfo$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pvKeyWrapAuxInfo$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvKeyWrapAuxInfo")));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pvKeyWrapAuxInfo$VH() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pvKeyWrapAuxInfo$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$hCryptProv$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$hCryptProv$LAYOUT() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$hCryptProv$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$hCryptProv$VH_ = _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCryptProv"));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$hCryptProv$VH() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$hCryptProv$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$dwKeySpec$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$dwKeySpec$LAYOUT() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$dwKeySpec$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$dwKeySpec$VH_ = _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwKeySpec"));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$dwKeySpec$VH() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$dwKeySpec$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$dwKeyChoice$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$dwKeyChoice$LAYOUT() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$dwKeyChoice$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$dwKeyChoice$VH_ = _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwKeyChoice"));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$dwKeyChoice$VH() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$dwKeyChoice$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pEphemeralAlgorithm$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pEphemeralAlgorithm$LAYOUT() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pEphemeralAlgorithm$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pEphemeralAlgorithm$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pEphemeralAlgorithm")));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pEphemeralAlgorithm$VH() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pEphemeralAlgorithm$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pSenderId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pSenderId$LAYOUT() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pSenderId$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pSenderId$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pSenderId")));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pSenderId$VH() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$pSenderId$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$cRecipientEncryptedKeys$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$cRecipientEncryptedKeys$LAYOUT() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$cRecipientEncryptedKeys$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$cRecipientEncryptedKeys$VH_ = _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cRecipientEncryptedKeys"));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$cRecipientEncryptedKeys$VH() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$cRecipientEncryptedKeys$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$rgpRecipientEncryptedKeys$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$rgpRecipientEncryptedKeys$LAYOUT() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$rgpRecipientEncryptedKeys$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$rgpRecipientEncryptedKeys$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgpRecipientEncryptedKeys")));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$rgpRecipientEncryptedKeys$VH() { return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO$rgpRecipientEncryptedKeys$VH_; }

    static final MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("KeyEncryptionAlgorithm"),
        C_POINTER.withName("pvKeyEncryptionAuxInfo"),
        C_LONGLONG.withName("hCryptProv"),
        C_LONG.withName("dwKeyChoice"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("hKeyEncryptionKey"),
        C_POINTER.withName("pvKeyEncryptionKey"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("KeyId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("Date"),
        C_POINTER.withName("pOtherAttr")
    ).withName("_CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$struct$LAYOUT() { return _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$cbSize$LAYOUT() { return _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$cbSize$VH_ = _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$cbSize$VH() { return _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$cbSize$VH_; }

    static final MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$pvKeyEncryptionAuxInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$pvKeyEncryptionAuxInfo$LAYOUT() { return _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$pvKeyEncryptionAuxInfo$LAYOUT_; }

    static final VarHandle _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$pvKeyEncryptionAuxInfo$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvKeyEncryptionAuxInfo")));
    static final java.lang.invoke.VarHandle _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$pvKeyEncryptionAuxInfo$VH() { return _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$pvKeyEncryptionAuxInfo$VH_; }

    static final MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$hCryptProv$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$hCryptProv$LAYOUT() { return _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$hCryptProv$LAYOUT_; }

    static final VarHandle _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$hCryptProv$VH_ = _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCryptProv"));
    static final java.lang.invoke.VarHandle _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$hCryptProv$VH() { return _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$hCryptProv$VH_; }

    static final MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$dwKeyChoice$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$dwKeyChoice$LAYOUT() { return _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$dwKeyChoice$LAYOUT_; }

    static final VarHandle _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$dwKeyChoice$VH_ = _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwKeyChoice"));
    static final java.lang.invoke.VarHandle _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$dwKeyChoice$VH() { return _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$dwKeyChoice$VH_; }

    static final MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$hKeyEncryptionKey$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$hKeyEncryptionKey$LAYOUT() { return _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$hKeyEncryptionKey$LAYOUT_; }

    static final VarHandle _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$hKeyEncryptionKey$VH_ = _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hKeyEncryptionKey"));
    static final java.lang.invoke.VarHandle _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$hKeyEncryptionKey$VH() { return _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$hKeyEncryptionKey$VH_; }

    static final MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$pvKeyEncryptionKey$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$pvKeyEncryptionKey$LAYOUT() { return _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$pvKeyEncryptionKey$LAYOUT_; }

    static final VarHandle _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$pvKeyEncryptionKey$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvKeyEncryptionKey")));
    static final java.lang.invoke.VarHandle _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$pvKeyEncryptionKey$VH() { return _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$pvKeyEncryptionKey$VH_; }

    static final MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$pOtherAttr$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$pOtherAttr$LAYOUT() { return _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$pOtherAttr$LAYOUT_; }

    static final VarHandle _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$pOtherAttr$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pOtherAttr")));
    static final java.lang.invoke.VarHandle _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$pOtherAttr$VH() { return _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO$pOtherAttr$VH_; }

    static final MemoryLayout _CMSG_RECIPIENT_ENCODE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwRecipientChoice"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pKeyTrans"),
        C_POINTER.withName("pKeyAgree"),
        C_POINTER.withName("pMailList")
    ).withName("_CMSG_RECIPIENT_ENCODE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_RECIPIENT_ENCODE_INFO$struct$LAYOUT() { return _CMSG_RECIPIENT_ENCODE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_RECIPIENT_ENCODE_INFO$dwRecipientChoice$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_RECIPIENT_ENCODE_INFO$dwRecipientChoice$LAYOUT() { return _CMSG_RECIPIENT_ENCODE_INFO$dwRecipientChoice$LAYOUT_; }

    static final VarHandle _CMSG_RECIPIENT_ENCODE_INFO$dwRecipientChoice$VH_ = _CMSG_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRecipientChoice"));
    static final java.lang.invoke.VarHandle _CMSG_RECIPIENT_ENCODE_INFO$dwRecipientChoice$VH() { return _CMSG_RECIPIENT_ENCODE_INFO$dwRecipientChoice$VH_; }

    static final MemoryLayout _CMSG_RECIPIENT_ENCODE_INFO$pKeyTrans$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_RECIPIENT_ENCODE_INFO$pKeyTrans$LAYOUT() { return _CMSG_RECIPIENT_ENCODE_INFO$pKeyTrans$LAYOUT_; }

    static final VarHandle _CMSG_RECIPIENT_ENCODE_INFO$pKeyTrans$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pKeyTrans")));
    static final java.lang.invoke.VarHandle _CMSG_RECIPIENT_ENCODE_INFO$pKeyTrans$VH() { return _CMSG_RECIPIENT_ENCODE_INFO$pKeyTrans$VH_; }

    static final MemoryLayout _CMSG_RECIPIENT_ENCODE_INFO$pKeyAgree$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_RECIPIENT_ENCODE_INFO$pKeyAgree$LAYOUT() { return _CMSG_RECIPIENT_ENCODE_INFO$pKeyAgree$LAYOUT_; }

    static final VarHandle _CMSG_RECIPIENT_ENCODE_INFO$pKeyAgree$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pKeyAgree")));
    static final java.lang.invoke.VarHandle _CMSG_RECIPIENT_ENCODE_INFO$pKeyAgree$VH() { return _CMSG_RECIPIENT_ENCODE_INFO$pKeyAgree$VH_; }

    static final MemoryLayout _CMSG_RECIPIENT_ENCODE_INFO$pMailList$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_RECIPIENT_ENCODE_INFO$pMailList$LAYOUT() { return _CMSG_RECIPIENT_ENCODE_INFO$pMailList$LAYOUT_; }

    static final VarHandle _CMSG_RECIPIENT_ENCODE_INFO$pMailList$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_RECIPIENT_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pMailList")));
    static final java.lang.invoke.VarHandle _CMSG_RECIPIENT_ENCODE_INFO$pMailList$VH() { return _CMSG_RECIPIENT_ENCODE_INFO$pMailList$VH_; }

    static final MemoryLayout _CMSG_RC2_AUX_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwBitLen")
    ).withName("_CMSG_RC2_AUX_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_RC2_AUX_INFO$struct$LAYOUT() { return _CMSG_RC2_AUX_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_RC2_AUX_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_RC2_AUX_INFO$cbSize$LAYOUT() { return _CMSG_RC2_AUX_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_RC2_AUX_INFO$cbSize$VH_ = _CMSG_RC2_AUX_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_RC2_AUX_INFO$cbSize$VH() { return _CMSG_RC2_AUX_INFO$cbSize$VH_; }

    static final MemoryLayout _CMSG_RC2_AUX_INFO$dwBitLen$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_RC2_AUX_INFO$dwBitLen$LAYOUT() { return _CMSG_RC2_AUX_INFO$dwBitLen$LAYOUT_; }

    static final VarHandle _CMSG_RC2_AUX_INFO$dwBitLen$VH_ = _CMSG_RC2_AUX_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwBitLen"));
    static final java.lang.invoke.VarHandle _CMSG_RC2_AUX_INFO$dwBitLen$VH() { return _CMSG_RC2_AUX_INFO$dwBitLen$VH_; }

    static final MemoryLayout _CMSG_SP3_COMPATIBLE_AUX_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwFlags")
    ).withName("_CMSG_SP3_COMPATIBLE_AUX_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SP3_COMPATIBLE_AUX_INFO$struct$LAYOUT() { return _CMSG_SP3_COMPATIBLE_AUX_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_SP3_COMPATIBLE_AUX_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SP3_COMPATIBLE_AUX_INFO$cbSize$LAYOUT() { return _CMSG_SP3_COMPATIBLE_AUX_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_SP3_COMPATIBLE_AUX_INFO$cbSize$VH_ = _CMSG_SP3_COMPATIBLE_AUX_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_SP3_COMPATIBLE_AUX_INFO$cbSize$VH() { return _CMSG_SP3_COMPATIBLE_AUX_INFO$cbSize$VH_; }

    static final MemoryLayout _CMSG_SP3_COMPATIBLE_AUX_INFO$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SP3_COMPATIBLE_AUX_INFO$dwFlags$LAYOUT() { return _CMSG_SP3_COMPATIBLE_AUX_INFO$dwFlags$LAYOUT_; }

    static final VarHandle _CMSG_SP3_COMPATIBLE_AUX_INFO$dwFlags$VH_ = _CMSG_SP3_COMPATIBLE_AUX_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _CMSG_SP3_COMPATIBLE_AUX_INFO$dwFlags$VH() { return _CMSG_SP3_COMPATIBLE_AUX_INFO$dwFlags$VH_; }

    static final MemoryLayout _CMSG_RC4_AUX_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwBitLen")
    ).withName("_CMSG_RC4_AUX_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_RC4_AUX_INFO$struct$LAYOUT() { return _CMSG_RC4_AUX_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_RC4_AUX_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_RC4_AUX_INFO$cbSize$LAYOUT() { return _CMSG_RC4_AUX_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_RC4_AUX_INFO$cbSize$VH_ = _CMSG_RC4_AUX_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_RC4_AUX_INFO$cbSize$VH() { return _CMSG_RC4_AUX_INFO$cbSize$VH_; }

    static final MemoryLayout _CMSG_RC4_AUX_INFO$dwBitLen$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_RC4_AUX_INFO$dwBitLen$LAYOUT() { return _CMSG_RC4_AUX_INFO$dwBitLen$LAYOUT_; }

    static final VarHandle _CMSG_RC4_AUX_INFO$dwBitLen$VH_ = _CMSG_RC4_AUX_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwBitLen"));
    static final java.lang.invoke.VarHandle _CMSG_RC4_AUX_INFO$dwBitLen$VH() { return _CMSG_RC4_AUX_INFO$dwBitLen$VH_; }

    static final MemoryLayout _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbSize"),
            C_LONG.withName("cSigners"),
            C_POINTER.withName("rgSigners"),
            C_LONG.withName("cCertEncoded"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("rgCertEncoded"),
            C_LONG.withName("cCrlEncoded"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("rgCrlEncoded")
        ).withName("SignedInfo"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbSize"),
            MemoryLayout.ofPaddingBits(32),
            C_LONGLONG.withName("hCryptProv"),
            MemoryLayout.ofStruct(
                C_POINTER.withName("pszObjId"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("Parameters")
            ).withName("ContentEncryptionAlgorithm"),
            C_POINTER.withName("pvEncryptionAuxInfo"),
            C_LONG.withName("cRecipients"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("rgpRecipients")
        ).withName("EnvelopedInfo")
    ).withName("_CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO$struct$LAYOUT() { return _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO$cbSize$LAYOUT() { return _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO$cbSize$VH_ = _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO$cbSize$VH() { return _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO$cbSize$VH_; }

    static final MemoryLayout _CMSG_HASHED_ENCODE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("hCryptProv"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("HashAlgorithm"),
        C_POINTER.withName("pvHashAuxInfo")
    ).withName("_CMSG_HASHED_ENCODE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_HASHED_ENCODE_INFO$struct$LAYOUT() { return _CMSG_HASHED_ENCODE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_HASHED_ENCODE_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_HASHED_ENCODE_INFO$cbSize$LAYOUT() { return _CMSG_HASHED_ENCODE_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_HASHED_ENCODE_INFO$cbSize$VH_ = _CMSG_HASHED_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_HASHED_ENCODE_INFO$cbSize$VH() { return _CMSG_HASHED_ENCODE_INFO$cbSize$VH_; }

    static final MemoryLayout _CMSG_HASHED_ENCODE_INFO$hCryptProv$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_HASHED_ENCODE_INFO$hCryptProv$LAYOUT() { return _CMSG_HASHED_ENCODE_INFO$hCryptProv$LAYOUT_; }

    static final VarHandle _CMSG_HASHED_ENCODE_INFO$hCryptProv$VH_ = _CMSG_HASHED_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCryptProv"));
    static final java.lang.invoke.VarHandle _CMSG_HASHED_ENCODE_INFO$hCryptProv$VH() { return _CMSG_HASHED_ENCODE_INFO$hCryptProv$VH_; }

    static final MemoryLayout _CMSG_HASHED_ENCODE_INFO$pvHashAuxInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_HASHED_ENCODE_INFO$pvHashAuxInfo$LAYOUT() { return _CMSG_HASHED_ENCODE_INFO$pvHashAuxInfo$LAYOUT_; }

    static final VarHandle _CMSG_HASHED_ENCODE_INFO$pvHashAuxInfo$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_HASHED_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvHashAuxInfo")));
    static final java.lang.invoke.VarHandle _CMSG_HASHED_ENCODE_INFO$pvHashAuxInfo$VH() { return _CMSG_HASHED_ENCODE_INFO$pvHashAuxInfo$VH_; }

    static final MemoryLayout _CMSG_ENCRYPTED_ENCODE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("ContentEncryptionAlgorithm"),
        C_POINTER.withName("pvEncryptionAuxInfo")
    ).withName("_CMSG_ENCRYPTED_ENCODE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_ENCRYPTED_ENCODE_INFO$struct$LAYOUT() { return _CMSG_ENCRYPTED_ENCODE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_ENCRYPTED_ENCODE_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_ENCRYPTED_ENCODE_INFO$cbSize$LAYOUT() { return _CMSG_ENCRYPTED_ENCODE_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_ENCRYPTED_ENCODE_INFO$cbSize$VH_ = _CMSG_ENCRYPTED_ENCODE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_ENCRYPTED_ENCODE_INFO$cbSize$VH() { return _CMSG_ENCRYPTED_ENCODE_INFO$cbSize$VH_; }

    static final MemoryLayout _CMSG_ENCRYPTED_ENCODE_INFO$pvEncryptionAuxInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_ENCRYPTED_ENCODE_INFO$pvEncryptionAuxInfo$LAYOUT() { return _CMSG_ENCRYPTED_ENCODE_INFO$pvEncryptionAuxInfo$LAYOUT_; }

    static final VarHandle _CMSG_ENCRYPTED_ENCODE_INFO$pvEncryptionAuxInfo$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_ENCRYPTED_ENCODE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvEncryptionAuxInfo")));
    static final java.lang.invoke.VarHandle _CMSG_ENCRYPTED_ENCODE_INFO$pvEncryptionAuxInfo$VH() { return _CMSG_ENCRYPTED_ENCODE_INFO$pvEncryptionAuxInfo$VH_; }

    static final MemoryLayout _CMSG_STREAM_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbContent"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pfnStreamOutput"),
        C_POINTER.withName("pvArg")
    ).withName("_CMSG_STREAM_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_STREAM_INFO$struct$LAYOUT() { return _CMSG_STREAM_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_STREAM_INFO$cbContent$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_STREAM_INFO$cbContent$LAYOUT() { return _CMSG_STREAM_INFO$cbContent$LAYOUT_; }

    static final VarHandle _CMSG_STREAM_INFO$cbContent$VH_ = _CMSG_STREAM_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbContent"));
    static final java.lang.invoke.VarHandle _CMSG_STREAM_INFO$cbContent$VH() { return _CMSG_STREAM_INFO$cbContent$VH_; }

    static final MemoryLayout _CMSG_STREAM_INFO$pfnStreamOutput$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_STREAM_INFO$pfnStreamOutput$LAYOUT() { return _CMSG_STREAM_INFO$pfnStreamOutput$LAYOUT_; }

    static final VarHandle _CMSG_STREAM_INFO$pfnStreamOutput$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_STREAM_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pfnStreamOutput")));
    static final java.lang.invoke.VarHandle _CMSG_STREAM_INFO$pfnStreamOutput$VH() { return _CMSG_STREAM_INFO$pfnStreamOutput$VH_; }

    static final MemoryLayout _CMSG_STREAM_INFO$pvArg$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_STREAM_INFO$pvArg$LAYOUT() { return _CMSG_STREAM_INFO$pvArg$LAYOUT_; }

    static final VarHandle _CMSG_STREAM_INFO$pvArg$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_STREAM_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvArg")));
    static final java.lang.invoke.VarHandle _CMSG_STREAM_INFO$pvArg$VH() { return _CMSG_STREAM_INFO$pvArg$VH_; }

    static final FunctionDescriptor CryptMsgOpenToEncode$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptMsgOpenToEncode$FUNC() { return CryptMsgOpenToEncode$FUNC_; }

    static final MethodHandle CryptMsgOpenToEncode$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptMsgOpenToEncode",
        "(IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CryptMsgOpenToEncode$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptMsgOpenToEncode$MH() { return CryptMsgOpenToEncode$MH_; }

    static final FunctionDescriptor CryptMsgCalculateEncodedLength$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptMsgCalculateEncodedLength$FUNC() { return CryptMsgCalculateEncodedLength$FUNC_; }

    static final MethodHandle CryptMsgCalculateEncodedLength$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptMsgCalculateEncodedLength",
        "(IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        CryptMsgCalculateEncodedLength$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptMsgCalculateEncodedLength$MH() { return CryptMsgCalculateEncodedLength$MH_; }

    static final FunctionDescriptor CryptMsgOpenToDecode$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptMsgOpenToDecode$FUNC() { return CryptMsgOpenToDecode$FUNC_; }

    static final MethodHandle CryptMsgOpenToDecode$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptMsgOpenToDecode",
        "(IIIJLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CryptMsgOpenToDecode$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptMsgOpenToDecode$MH() { return CryptMsgOpenToDecode$MH_; }

    static final FunctionDescriptor CryptMsgDuplicate$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptMsgDuplicate$FUNC() { return CryptMsgDuplicate$FUNC_; }

    static final MethodHandle CryptMsgDuplicate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptMsgDuplicate",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CryptMsgDuplicate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptMsgDuplicate$MH() { return CryptMsgDuplicate$MH_; }

    static final FunctionDescriptor CryptMsgClose$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptMsgClose$FUNC() { return CryptMsgClose$FUNC_; }

    static final MethodHandle CryptMsgClose$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptMsgClose",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptMsgClose$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptMsgClose$MH() { return CryptMsgClose$MH_; }

    static final FunctionDescriptor CryptMsgUpdate$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptMsgUpdate$FUNC() { return CryptMsgUpdate$FUNC_; }

    static final MethodHandle CryptMsgUpdate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptMsgUpdate",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        CryptMsgUpdate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptMsgUpdate$MH() { return CryptMsgUpdate$MH_; }

    static final FunctionDescriptor CryptMsgGetParam$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptMsgGetParam$FUNC() { return CryptMsgGetParam$FUNC_; }

    static final MethodHandle CryptMsgGetParam$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptMsgGetParam",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptMsgGetParam$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptMsgGetParam$MH() { return CryptMsgGetParam$MH_; }

    static final MemoryLayout _CMSG_SIGNER_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwVersion"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("Issuer"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("SerialNumber"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("HashAlgorithm"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("HashEncryptionAlgorithm"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("EncryptedHash"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cAttr"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("rgAttr")
        ).withName("AuthAttrs"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cAttr"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("rgAttr")
        ).withName("UnauthAttrs")
    ).withName("_CMSG_SIGNER_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNER_INFO$struct$LAYOUT() { return _CMSG_SIGNER_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_SIGNER_INFO$dwVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_SIGNER_INFO$dwVersion$LAYOUT() { return _CMSG_SIGNER_INFO$dwVersion$LAYOUT_; }

    static final VarHandle _CMSG_SIGNER_INFO$dwVersion$VH_ = _CMSG_SIGNER_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersion"));
    static final java.lang.invoke.VarHandle _CMSG_SIGNER_INFO$dwVersion$VH() { return _CMSG_SIGNER_INFO$dwVersion$VH_; }

    static final MemoryLayout _CMSG_CMS_SIGNER_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwVersion"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwIdChoice"),
            MemoryLayout.ofPaddingBits(32),
            MemoryLayout.ofStruct(
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("Issuer"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("SerialNumber")
            ).withName("IssuerSerialNumber"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("KeyId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("HashId")
        ).withName("SignerId"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("HashAlgorithm"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("HashEncryptionAlgorithm"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("EncryptedHash"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cAttr"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("rgAttr")
        ).withName("AuthAttrs"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cAttr"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("rgAttr")
        ).withName("UnauthAttrs")
    ).withName("_CMSG_CMS_SIGNER_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CMS_SIGNER_INFO$struct$LAYOUT() { return _CMSG_CMS_SIGNER_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_CMS_SIGNER_INFO$dwVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CMS_SIGNER_INFO$dwVersion$LAYOUT() { return _CMSG_CMS_SIGNER_INFO$dwVersion$LAYOUT_; }

    static final VarHandle _CMSG_CMS_SIGNER_INFO$dwVersion$VH_ = _CMSG_CMS_SIGNER_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersion"));
    static final java.lang.invoke.VarHandle _CMSG_CMS_SIGNER_INFO$dwVersion$VH() { return _CMSG_CMS_SIGNER_INFO$dwVersion$VH_; }

    static final MemoryLayout _CMSG_KEY_TRANS_RECIPIENT_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwVersion"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwIdChoice"),
            MemoryLayout.ofPaddingBits(32),
            MemoryLayout.ofStruct(
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("Issuer"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("SerialNumber")
            ).withName("IssuerSerialNumber"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("KeyId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("HashId")
        ).withName("RecipientId"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("KeyEncryptionAlgorithm"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("EncryptedKey")
    ).withName("_CMSG_KEY_TRANS_RECIPIENT_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_TRANS_RECIPIENT_INFO$struct$LAYOUT() { return _CMSG_KEY_TRANS_RECIPIENT_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_KEY_TRANS_RECIPIENT_INFO$dwVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_TRANS_RECIPIENT_INFO$dwVersion$LAYOUT() { return _CMSG_KEY_TRANS_RECIPIENT_INFO$dwVersion$LAYOUT_; }

    static final VarHandle _CMSG_KEY_TRANS_RECIPIENT_INFO$dwVersion$VH_ = _CMSG_KEY_TRANS_RECIPIENT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersion"));
    static final java.lang.invoke.VarHandle _CMSG_KEY_TRANS_RECIPIENT_INFO$dwVersion$VH() { return _CMSG_KEY_TRANS_RECIPIENT_INFO$dwVersion$VH_; }

    static final MemoryLayout _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("dwIdChoice"),
            MemoryLayout.ofPaddingBits(32),
            MemoryLayout.ofStruct(
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("Issuer"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("SerialNumber")
            ).withName("IssuerSerialNumber"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("KeyId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("HashId")
        ).withName("RecipientId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("EncryptedKey"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("Date"),
        C_POINTER.withName("pOtherAttr")
    ).withName("_CMSG_RECIPIENT_ENCRYPTED_KEY_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO$struct$LAYOUT() { return _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO$pOtherAttr$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO$pOtherAttr$LAYOUT() { return _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO$pOtherAttr$LAYOUT_; }

    static final VarHandle _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO$pOtherAttr$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_RECIPIENT_ENCRYPTED_KEY_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pOtherAttr")));
    static final java.lang.invoke.VarHandle _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO$pOtherAttr$VH() { return _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO$pOtherAttr$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwVersion"),
        C_LONG.withName("dwOriginatorChoice"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwIdChoice"),
            MemoryLayout.ofPaddingBits(32),
            MemoryLayout.ofStruct(
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("Issuer"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("SerialNumber")
            ).withName("IssuerSerialNumber"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("KeyId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("HashId")
        ).withName("OriginatorCertId"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_POINTER.withName("pszObjId"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("Parameters")
            ).withName("Algorithm"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData"),
                C_LONG.withName("cUnusedBits"),
                MemoryLayout.ofPaddingBits(32)
            ).withName("PublicKey")
        ).withName("OriginatorPublicKeyInfo"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("UserKeyingMaterial"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("KeyEncryptionAlgorithm"),
        C_LONG.withName("cRecipientEncryptedKeys"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgpRecipientEncryptedKeys")
    ).withName("_CMSG_KEY_AGREE_RECIPIENT_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_INFO$struct$LAYOUT() { return _CMSG_KEY_AGREE_RECIPIENT_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_INFO$dwVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_INFO$dwVersion$LAYOUT() { return _CMSG_KEY_AGREE_RECIPIENT_INFO$dwVersion$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_RECIPIENT_INFO$dwVersion$VH_ = _CMSG_KEY_AGREE_RECIPIENT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersion"));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_RECIPIENT_INFO$dwVersion$VH() { return _CMSG_KEY_AGREE_RECIPIENT_INFO$dwVersion$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_INFO$dwOriginatorChoice$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_INFO$dwOriginatorChoice$LAYOUT() { return _CMSG_KEY_AGREE_RECIPIENT_INFO$dwOriginatorChoice$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_RECIPIENT_INFO$dwOriginatorChoice$VH_ = _CMSG_KEY_AGREE_RECIPIENT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwOriginatorChoice"));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_RECIPIENT_INFO$dwOriginatorChoice$VH() { return _CMSG_KEY_AGREE_RECIPIENT_INFO$dwOriginatorChoice$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_INFO$cRecipientEncryptedKeys$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_INFO$cRecipientEncryptedKeys$LAYOUT() { return _CMSG_KEY_AGREE_RECIPIENT_INFO$cRecipientEncryptedKeys$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_RECIPIENT_INFO$cRecipientEncryptedKeys$VH_ = _CMSG_KEY_AGREE_RECIPIENT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cRecipientEncryptedKeys"));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_RECIPIENT_INFO$cRecipientEncryptedKeys$VH() { return _CMSG_KEY_AGREE_RECIPIENT_INFO$cRecipientEncryptedKeys$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_INFO$rgpRecipientEncryptedKeys$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_RECIPIENT_INFO$rgpRecipientEncryptedKeys$LAYOUT() { return _CMSG_KEY_AGREE_RECIPIENT_INFO$rgpRecipientEncryptedKeys$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_RECIPIENT_INFO$rgpRecipientEncryptedKeys$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_KEY_AGREE_RECIPIENT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgpRecipientEncryptedKeys")));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_RECIPIENT_INFO$rgpRecipientEncryptedKeys$VH() { return _CMSG_KEY_AGREE_RECIPIENT_INFO$rgpRecipientEncryptedKeys$VH_; }

    static final MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwVersion"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("KeyId"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("KeyEncryptionAlgorithm"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("EncryptedKey"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("Date"),
        C_POINTER.withName("pOtherAttr")
    ).withName("_CMSG_MAIL_LIST_RECIPIENT_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_INFO$struct$LAYOUT() { return _CMSG_MAIL_LIST_RECIPIENT_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_INFO$dwVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_INFO$dwVersion$LAYOUT() { return _CMSG_MAIL_LIST_RECIPIENT_INFO$dwVersion$LAYOUT_; }

    static final VarHandle _CMSG_MAIL_LIST_RECIPIENT_INFO$dwVersion$VH_ = _CMSG_MAIL_LIST_RECIPIENT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersion"));
    static final java.lang.invoke.VarHandle _CMSG_MAIL_LIST_RECIPIENT_INFO$dwVersion$VH() { return _CMSG_MAIL_LIST_RECIPIENT_INFO$dwVersion$VH_; }

    static final MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_INFO$pOtherAttr$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_MAIL_LIST_RECIPIENT_INFO$pOtherAttr$LAYOUT() { return _CMSG_MAIL_LIST_RECIPIENT_INFO$pOtherAttr$LAYOUT_; }

    static final VarHandle _CMSG_MAIL_LIST_RECIPIENT_INFO$pOtherAttr$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_MAIL_LIST_RECIPIENT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pOtherAttr")));
    static final java.lang.invoke.VarHandle _CMSG_MAIL_LIST_RECIPIENT_INFO$pOtherAttr$VH() { return _CMSG_MAIL_LIST_RECIPIENT_INFO$pOtherAttr$VH_; }

    static final MemoryLayout _CMSG_CMS_RECIPIENT_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwRecipientChoice"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pKeyTrans"),
        C_POINTER.withName("pKeyAgree"),
        C_POINTER.withName("pMailList")
    ).withName("_CMSG_CMS_RECIPIENT_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CMS_RECIPIENT_INFO$struct$LAYOUT() { return _CMSG_CMS_RECIPIENT_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_CMS_RECIPIENT_INFO$dwRecipientChoice$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CMS_RECIPIENT_INFO$dwRecipientChoice$LAYOUT() { return _CMSG_CMS_RECIPIENT_INFO$dwRecipientChoice$LAYOUT_; }

    static final VarHandle _CMSG_CMS_RECIPIENT_INFO$dwRecipientChoice$VH_ = _CMSG_CMS_RECIPIENT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRecipientChoice"));
    static final java.lang.invoke.VarHandle _CMSG_CMS_RECIPIENT_INFO$dwRecipientChoice$VH() { return _CMSG_CMS_RECIPIENT_INFO$dwRecipientChoice$VH_; }

    static final MemoryLayout _CMSG_CMS_RECIPIENT_INFO$pKeyTrans$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CMS_RECIPIENT_INFO$pKeyTrans$LAYOUT() { return _CMSG_CMS_RECIPIENT_INFO$pKeyTrans$LAYOUT_; }

    static final VarHandle _CMSG_CMS_RECIPIENT_INFO$pKeyTrans$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_CMS_RECIPIENT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pKeyTrans")));
    static final java.lang.invoke.VarHandle _CMSG_CMS_RECIPIENT_INFO$pKeyTrans$VH() { return _CMSG_CMS_RECIPIENT_INFO$pKeyTrans$VH_; }

    static final MemoryLayout _CMSG_CMS_RECIPIENT_INFO$pKeyAgree$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CMS_RECIPIENT_INFO$pKeyAgree$LAYOUT() { return _CMSG_CMS_RECIPIENT_INFO$pKeyAgree$LAYOUT_; }

    static final VarHandle _CMSG_CMS_RECIPIENT_INFO$pKeyAgree$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_CMS_RECIPIENT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pKeyAgree")));
    static final java.lang.invoke.VarHandle _CMSG_CMS_RECIPIENT_INFO$pKeyAgree$VH() { return _CMSG_CMS_RECIPIENT_INFO$pKeyAgree$VH_; }

    static final MemoryLayout _CMSG_CMS_RECIPIENT_INFO$pMailList$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CMS_RECIPIENT_INFO$pMailList$LAYOUT() { return _CMSG_CMS_RECIPIENT_INFO$pMailList$LAYOUT_; }

    static final VarHandle _CMSG_CMS_RECIPIENT_INFO$pMailList$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_CMS_RECIPIENT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pMailList")));
    static final java.lang.invoke.VarHandle _CMSG_CMS_RECIPIENT_INFO$pMailList$VH() { return _CMSG_CMS_RECIPIENT_INFO$pMailList$VH_; }

    static final FunctionDescriptor CryptMsgControl$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptMsgControl$FUNC() { return CryptMsgControl$FUNC_; }

    static final MethodHandle CryptMsgControl$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptMsgControl",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        CryptMsgControl$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptMsgControl$MH() { return CryptMsgControl$MH_; }

    static final MemoryLayout _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("hCryptProv"),
        C_LONG.withName("dwSignerIndex"),
        C_LONG.withName("dwSignerType"),
        C_POINTER.withName("pvSigner")
    ).withName("_CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$struct$LAYOUT() { return _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$cbSize$LAYOUT() { return _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$cbSize$VH_ = _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$cbSize$VH() { return _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$cbSize$VH_; }

    static final MemoryLayout _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$hCryptProv$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$hCryptProv$LAYOUT() { return _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$hCryptProv$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$hCryptProv$VH_ = _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCryptProv"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$hCryptProv$VH() { return _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$hCryptProv$VH_; }

    static final MemoryLayout _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$dwSignerIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$dwSignerIndex$LAYOUT() { return _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$dwSignerIndex$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$dwSignerIndex$VH_ = _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSignerIndex"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$dwSignerIndex$VH() { return _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$dwSignerIndex$VH_; }

    static final MemoryLayout _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$dwSignerType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$dwSignerType$LAYOUT() { return _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$dwSignerType$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$dwSignerType$VH_ = _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSignerType"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$dwSignerType$VH() { return _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$dwSignerType$VH_; }

    static final MemoryLayout _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$pvSigner$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$pvSigner$LAYOUT() { return _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$pvSigner$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$pvSigner$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvSigner")));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$pvSigner$VH() { return _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA$pvSigner$VH_; }

    static final MemoryLayout _CMSG_CTRL_DECRYPT_PARA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("hCryptProv"),
        C_LONGLONG.withName("hNCryptKey"),
        C_LONG.withName("dwKeySpec"),
        C_LONG.withName("dwRecipientIndex")
    ).withName("_CMSG_CTRL_DECRYPT_PARA");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_DECRYPT_PARA$struct$LAYOUT() { return _CMSG_CTRL_DECRYPT_PARA$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_CTRL_DECRYPT_PARA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_DECRYPT_PARA$cbSize$LAYOUT() { return _CMSG_CTRL_DECRYPT_PARA$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_DECRYPT_PARA$cbSize$VH_ = _CMSG_CTRL_DECRYPT_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_DECRYPT_PARA$cbSize$VH() { return _CMSG_CTRL_DECRYPT_PARA$cbSize$VH_; }

    static final MemoryLayout _CMSG_CTRL_DECRYPT_PARA$hCryptProv$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_DECRYPT_PARA$hCryptProv$LAYOUT() { return _CMSG_CTRL_DECRYPT_PARA$hCryptProv$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_DECRYPT_PARA$hCryptProv$VH_ = _CMSG_CTRL_DECRYPT_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCryptProv"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_DECRYPT_PARA$hCryptProv$VH() { return _CMSG_CTRL_DECRYPT_PARA$hCryptProv$VH_; }

    static final MemoryLayout _CMSG_CTRL_DECRYPT_PARA$hNCryptKey$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_DECRYPT_PARA$hNCryptKey$LAYOUT() { return _CMSG_CTRL_DECRYPT_PARA$hNCryptKey$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_DECRYPT_PARA$hNCryptKey$VH_ = _CMSG_CTRL_DECRYPT_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hNCryptKey"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_DECRYPT_PARA$hNCryptKey$VH() { return _CMSG_CTRL_DECRYPT_PARA$hNCryptKey$VH_; }

    static final MemoryLayout _CMSG_CTRL_DECRYPT_PARA$dwKeySpec$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_DECRYPT_PARA$dwKeySpec$LAYOUT() { return _CMSG_CTRL_DECRYPT_PARA$dwKeySpec$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_DECRYPT_PARA$dwKeySpec$VH_ = _CMSG_CTRL_DECRYPT_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwKeySpec"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_DECRYPT_PARA$dwKeySpec$VH() { return _CMSG_CTRL_DECRYPT_PARA$dwKeySpec$VH_; }

    static final MemoryLayout _CMSG_CTRL_DECRYPT_PARA$dwRecipientIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_DECRYPT_PARA$dwRecipientIndex$LAYOUT() { return _CMSG_CTRL_DECRYPT_PARA$dwRecipientIndex$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_DECRYPT_PARA$dwRecipientIndex$VH_ = _CMSG_CTRL_DECRYPT_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRecipientIndex"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_DECRYPT_PARA$dwRecipientIndex$VH() { return _CMSG_CTRL_DECRYPT_PARA$dwRecipientIndex$VH_; }

    static final MemoryLayout _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("hCryptProv"),
        C_LONGLONG.withName("hNCryptKey"),
        C_LONG.withName("dwKeySpec"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pKeyTrans"),
        C_LONG.withName("dwRecipientIndex"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CMSG_CTRL_KEY_TRANS_DECRYPT_PARA");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$struct$LAYOUT() { return _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$cbSize$LAYOUT() { return _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$cbSize$VH_ = _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$cbSize$VH() { return _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$cbSize$VH_; }

    static final MemoryLayout _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$hCryptProv$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$hCryptProv$LAYOUT() { return _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$hCryptProv$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$hCryptProv$VH_ = _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCryptProv"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$hCryptProv$VH() { return _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$hCryptProv$VH_; }

    static final MemoryLayout _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$hNCryptKey$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$hNCryptKey$LAYOUT() { return _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$hNCryptKey$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$hNCryptKey$VH_ = _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hNCryptKey"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$hNCryptKey$VH() { return _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$hNCryptKey$VH_; }

    static final MemoryLayout _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$dwKeySpec$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$dwKeySpec$LAYOUT() { return _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$dwKeySpec$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$dwKeySpec$VH_ = _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwKeySpec"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$dwKeySpec$VH() { return _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$dwKeySpec$VH_; }

    static final MemoryLayout _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$pKeyTrans$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$pKeyTrans$LAYOUT() { return _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$pKeyTrans$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$pKeyTrans$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pKeyTrans")));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$pKeyTrans$VH() { return _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$pKeyTrans$VH_; }

    static final MemoryLayout _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$dwRecipientIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$dwRecipientIndex$LAYOUT() { return _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$dwRecipientIndex$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$dwRecipientIndex$VH_ = _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRecipientIndex"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$dwRecipientIndex$VH() { return _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA$dwRecipientIndex$VH_; }

    static final MemoryLayout _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("hCryptProv"),
        C_LONGLONG.withName("hNCryptKey"),
        C_LONG.withName("dwKeySpec"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pKeyAgree"),
        C_LONG.withName("dwRecipientIndex"),
        C_LONG.withName("dwRecipientEncryptedKeyIndex"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData"),
            C_LONG.withName("cUnusedBits"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("OriginatorPublicKey")
    ).withName("_CMSG_CTRL_KEY_AGREE_DECRYPT_PARA");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$struct$LAYOUT() { return _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$cbSize$LAYOUT() { return _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$cbSize$VH_ = _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$cbSize$VH() { return _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$cbSize$VH_; }

    static final MemoryLayout _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$hCryptProv$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$hCryptProv$LAYOUT() { return _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$hCryptProv$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$hCryptProv$VH_ = _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCryptProv"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$hCryptProv$VH() { return _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$hCryptProv$VH_; }

    static final MemoryLayout _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$hNCryptKey$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$hNCryptKey$LAYOUT() { return _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$hNCryptKey$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$hNCryptKey$VH_ = _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hNCryptKey"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$hNCryptKey$VH() { return _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$hNCryptKey$VH_; }

    static final MemoryLayout _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$dwKeySpec$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$dwKeySpec$LAYOUT() { return _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$dwKeySpec$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$dwKeySpec$VH_ = _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwKeySpec"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$dwKeySpec$VH() { return _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$dwKeySpec$VH_; }

    static final MemoryLayout _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$pKeyAgree$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$pKeyAgree$LAYOUT() { return _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$pKeyAgree$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$pKeyAgree$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pKeyAgree")));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$pKeyAgree$VH() { return _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$pKeyAgree$VH_; }

    static final MemoryLayout _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$dwRecipientIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$dwRecipientIndex$LAYOUT() { return _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$dwRecipientIndex$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$dwRecipientIndex$VH_ = _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRecipientIndex"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$dwRecipientIndex$VH() { return _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$dwRecipientIndex$VH_; }

    static final MemoryLayout _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$dwRecipientEncryptedKeyIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$dwRecipientEncryptedKeyIndex$LAYOUT() { return _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$dwRecipientEncryptedKeyIndex$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$dwRecipientEncryptedKeyIndex$VH_ = _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRecipientEncryptedKeyIndex"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$dwRecipientEncryptedKeyIndex$VH() { return _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA$dwRecipientEncryptedKeyIndex$VH_; }

    static final MemoryLayout _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("hCryptProv"),
        C_POINTER.withName("pMailList"),
        C_LONG.withName("dwRecipientIndex"),
        C_LONG.withName("dwKeyChoice"),
        C_LONGLONG.withName("hKeyEncryptionKey"),
        C_POINTER.withName("pvKeyEncryptionKey")
    ).withName("_CMSG_CTRL_MAIL_LIST_DECRYPT_PARA");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$struct$LAYOUT() { return _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$cbSize$LAYOUT() { return _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$cbSize$VH_ = _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$cbSize$VH() { return _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$cbSize$VH_; }

    static final MemoryLayout _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$hCryptProv$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$hCryptProv$LAYOUT() { return _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$hCryptProv$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$hCryptProv$VH_ = _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCryptProv"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$hCryptProv$VH() { return _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$hCryptProv$VH_; }

    static final MemoryLayout _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$pMailList$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$pMailList$LAYOUT() { return _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$pMailList$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$pMailList$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pMailList")));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$pMailList$VH() { return _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$pMailList$VH_; }

    static final MemoryLayout _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$dwRecipientIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$dwRecipientIndex$LAYOUT() { return _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$dwRecipientIndex$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$dwRecipientIndex$VH_ = _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRecipientIndex"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$dwRecipientIndex$VH() { return _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$dwRecipientIndex$VH_; }

    static final MemoryLayout _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$dwKeyChoice$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$dwKeyChoice$LAYOUT() { return _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$dwKeyChoice$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$dwKeyChoice$VH_ = _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwKeyChoice"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$dwKeyChoice$VH() { return _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$dwKeyChoice$VH_; }

    static final MemoryLayout _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$hKeyEncryptionKey$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$hKeyEncryptionKey$LAYOUT() { return _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$hKeyEncryptionKey$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$hKeyEncryptionKey$VH_ = _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hKeyEncryptionKey"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$hKeyEncryptionKey$VH() { return _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$hKeyEncryptionKey$VH_; }

    static final MemoryLayout _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$pvKeyEncryptionKey$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$pvKeyEncryptionKey$LAYOUT() { return _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$pvKeyEncryptionKey$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$pvKeyEncryptionKey$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvKeyEncryptionKey")));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$pvKeyEncryptionKey$VH() { return _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA$pvKeyEncryptionKey$VH_; }

    static final MemoryLayout _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwSignerIndex"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("blob")
    ).withName("_CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA$struct$LAYOUT() { return _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA$cbSize$LAYOUT() { return _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA$cbSize$VH_ = _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA$cbSize$VH() { return _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA$cbSize$VH_; }

    static final MemoryLayout _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA$dwSignerIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA$dwSignerIndex$LAYOUT() { return _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA$dwSignerIndex$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA$dwSignerIndex$VH_ = _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSignerIndex"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA$dwSignerIndex$VH() { return _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA$dwSignerIndex$VH_; }

    static final MemoryLayout _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwSignerIndex"),
        C_LONG.withName("dwUnauthAttrIndex")
    ).withName("_CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$struct$LAYOUT() { return _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$cbSize$LAYOUT() { return _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$cbSize$VH_ = _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$cbSize$VH() { return _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$cbSize$VH_; }

    static final MemoryLayout _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$dwSignerIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$dwSignerIndex$LAYOUT() { return _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$dwSignerIndex$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$dwSignerIndex$VH_ = _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSignerIndex"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$dwSignerIndex$VH() { return _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$dwSignerIndex$VH_; }

    static final MemoryLayout _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$dwUnauthAttrIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$dwUnauthAttrIndex$LAYOUT() { return _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$dwUnauthAttrIndex$LAYOUT_; }

    static final VarHandle _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$dwUnauthAttrIndex$VH_ = _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwUnauthAttrIndex"));
    static final java.lang.invoke.VarHandle _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$dwUnauthAttrIndex$VH() { return _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA$dwUnauthAttrIndex$VH_; }

    static final FunctionDescriptor CryptMsgVerifyCountersignatureEncoded$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptMsgVerifyCountersignatureEncoded$FUNC() { return CryptMsgVerifyCountersignatureEncoded$FUNC_; }

    static final MethodHandle CryptMsgVerifyCountersignatureEncoded$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptMsgVerifyCountersignatureEncoded",
        "(JILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        CryptMsgVerifyCountersignatureEncoded$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptMsgVerifyCountersignatureEncoded$MH() { return CryptMsgVerifyCountersignatureEncoded$MH_; }

    static final FunctionDescriptor CryptMsgVerifyCountersignatureEncodedEx$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptMsgVerifyCountersignatureEncodedEx$FUNC() { return CryptMsgVerifyCountersignatureEncodedEx$FUNC_; }

    static final MethodHandle CryptMsgVerifyCountersignatureEncodedEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptMsgVerifyCountersignatureEncodedEx",
        "(JILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        CryptMsgVerifyCountersignatureEncodedEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptMsgVerifyCountersignatureEncodedEx$MH() { return CryptMsgVerifyCountersignatureEncodedEx$MH_; }

    static final FunctionDescriptor CryptMsgCountersign$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptMsgCountersign$FUNC() { return CryptMsgCountersign$FUNC_; }

    static final MethodHandle CryptMsgCountersign$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptMsgCountersign",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        CryptMsgCountersign$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptMsgCountersign$MH() { return CryptMsgCountersign$MH_; }

    static final FunctionDescriptor CryptMsgCountersignEncoded$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptMsgCountersignEncoded$FUNC() { return CryptMsgCountersignEncoded$FUNC_; }

    static final MethodHandle CryptMsgCountersignEncoded$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptMsgCountersignEncoded",
        "(ILjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptMsgCountersignEncoded$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptMsgCountersignEncoded$MH() { return CryptMsgCountersignEncoded$MH_; }

    static final MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("hCryptProv"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("ContentEncryptionAlgorithm"),
        C_POINTER.withName("pvEncryptionAuxInfo"),
        C_LONG.withName("cRecipients"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgCmsRecipients"),
        C_POINTER.withName("pfnAlloc"),
        C_POINTER.withName("pfnFree"),
        C_LONG.withName("dwEncryptFlags"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("hContentEncryptKey"),
        C_POINTER.withName("hCNGContentEncryptKey"),
        C_LONG.withName("dwFlags"),
        C_INT.withName("fCNG"),
        C_POINTER.withName("pbCNGContentEncryptKeyObject"),
        C_POINTER.withName("pbContentEncryptKey"),
        C_LONG.withName("cbContentEncryptKey"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CMSG_CONTENT_ENCRYPT_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$struct$LAYOUT() { return _CMSG_CONTENT_ENCRYPT_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$cbSize$LAYOUT() { return _CMSG_CONTENT_ENCRYPT_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_CONTENT_ENCRYPT_INFO$cbSize$VH_ = _CMSG_CONTENT_ENCRYPT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_CONTENT_ENCRYPT_INFO$cbSize$VH() { return _CMSG_CONTENT_ENCRYPT_INFO$cbSize$VH_; }

    static final MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$hCryptProv$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$hCryptProv$LAYOUT() { return _CMSG_CONTENT_ENCRYPT_INFO$hCryptProv$LAYOUT_; }

    static final VarHandle _CMSG_CONTENT_ENCRYPT_INFO$hCryptProv$VH_ = _CMSG_CONTENT_ENCRYPT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCryptProv"));
    static final java.lang.invoke.VarHandle _CMSG_CONTENT_ENCRYPT_INFO$hCryptProv$VH() { return _CMSG_CONTENT_ENCRYPT_INFO$hCryptProv$VH_; }

    static final MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$pvEncryptionAuxInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$pvEncryptionAuxInfo$LAYOUT() { return _CMSG_CONTENT_ENCRYPT_INFO$pvEncryptionAuxInfo$LAYOUT_; }

    static final VarHandle _CMSG_CONTENT_ENCRYPT_INFO$pvEncryptionAuxInfo$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_CONTENT_ENCRYPT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvEncryptionAuxInfo")));
    static final java.lang.invoke.VarHandle _CMSG_CONTENT_ENCRYPT_INFO$pvEncryptionAuxInfo$VH() { return _CMSG_CONTENT_ENCRYPT_INFO$pvEncryptionAuxInfo$VH_; }

    static final MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$cRecipients$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$cRecipients$LAYOUT() { return _CMSG_CONTENT_ENCRYPT_INFO$cRecipients$LAYOUT_; }

    static final VarHandle _CMSG_CONTENT_ENCRYPT_INFO$cRecipients$VH_ = _CMSG_CONTENT_ENCRYPT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cRecipients"));
    static final java.lang.invoke.VarHandle _CMSG_CONTENT_ENCRYPT_INFO$cRecipients$VH() { return _CMSG_CONTENT_ENCRYPT_INFO$cRecipients$VH_; }

    static final MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$rgCmsRecipients$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$rgCmsRecipients$LAYOUT() { return _CMSG_CONTENT_ENCRYPT_INFO$rgCmsRecipients$LAYOUT_; }

    static final VarHandle _CMSG_CONTENT_ENCRYPT_INFO$rgCmsRecipients$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_CONTENT_ENCRYPT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgCmsRecipients")));
    static final java.lang.invoke.VarHandle _CMSG_CONTENT_ENCRYPT_INFO$rgCmsRecipients$VH() { return _CMSG_CONTENT_ENCRYPT_INFO$rgCmsRecipients$VH_; }

    static final MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$pfnAlloc$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$pfnAlloc$LAYOUT() { return _CMSG_CONTENT_ENCRYPT_INFO$pfnAlloc$LAYOUT_; }

    static final VarHandle _CMSG_CONTENT_ENCRYPT_INFO$pfnAlloc$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_CONTENT_ENCRYPT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pfnAlloc")));
    static final java.lang.invoke.VarHandle _CMSG_CONTENT_ENCRYPT_INFO$pfnAlloc$VH() { return _CMSG_CONTENT_ENCRYPT_INFO$pfnAlloc$VH_; }

    static final MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$pfnFree$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$pfnFree$LAYOUT() { return _CMSG_CONTENT_ENCRYPT_INFO$pfnFree$LAYOUT_; }

    static final VarHandle _CMSG_CONTENT_ENCRYPT_INFO$pfnFree$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_CONTENT_ENCRYPT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pfnFree")));
    static final java.lang.invoke.VarHandle _CMSG_CONTENT_ENCRYPT_INFO$pfnFree$VH() { return _CMSG_CONTENT_ENCRYPT_INFO$pfnFree$VH_; }

    static final MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$dwEncryptFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$dwEncryptFlags$LAYOUT() { return _CMSG_CONTENT_ENCRYPT_INFO$dwEncryptFlags$LAYOUT_; }

    static final VarHandle _CMSG_CONTENT_ENCRYPT_INFO$dwEncryptFlags$VH_ = _CMSG_CONTENT_ENCRYPT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwEncryptFlags"));
    static final java.lang.invoke.VarHandle _CMSG_CONTENT_ENCRYPT_INFO$dwEncryptFlags$VH() { return _CMSG_CONTENT_ENCRYPT_INFO$dwEncryptFlags$VH_; }

    static final MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$hContentEncryptKey$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$hContentEncryptKey$LAYOUT() { return _CMSG_CONTENT_ENCRYPT_INFO$hContentEncryptKey$LAYOUT_; }

    static final VarHandle _CMSG_CONTENT_ENCRYPT_INFO$hContentEncryptKey$VH_ = _CMSG_CONTENT_ENCRYPT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hContentEncryptKey"));
    static final java.lang.invoke.VarHandle _CMSG_CONTENT_ENCRYPT_INFO$hContentEncryptKey$VH() { return _CMSG_CONTENT_ENCRYPT_INFO$hContentEncryptKey$VH_; }

    static final MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$hCNGContentEncryptKey$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$hCNGContentEncryptKey$LAYOUT() { return _CMSG_CONTENT_ENCRYPT_INFO$hCNGContentEncryptKey$LAYOUT_; }

    static final VarHandle _CMSG_CONTENT_ENCRYPT_INFO$hCNGContentEncryptKey$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_CONTENT_ENCRYPT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCNGContentEncryptKey")));
    static final java.lang.invoke.VarHandle _CMSG_CONTENT_ENCRYPT_INFO$hCNGContentEncryptKey$VH() { return _CMSG_CONTENT_ENCRYPT_INFO$hCNGContentEncryptKey$VH_; }

    static final MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$dwFlags$LAYOUT() { return _CMSG_CONTENT_ENCRYPT_INFO$dwFlags$LAYOUT_; }

    static final VarHandle _CMSG_CONTENT_ENCRYPT_INFO$dwFlags$VH_ = _CMSG_CONTENT_ENCRYPT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _CMSG_CONTENT_ENCRYPT_INFO$dwFlags$VH() { return _CMSG_CONTENT_ENCRYPT_INFO$dwFlags$VH_; }

    static final MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$fCNG$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$fCNG$LAYOUT() { return _CMSG_CONTENT_ENCRYPT_INFO$fCNG$LAYOUT_; }

    static final VarHandle _CMSG_CONTENT_ENCRYPT_INFO$fCNG$VH_ = _CMSG_CONTENT_ENCRYPT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fCNG"));
    static final java.lang.invoke.VarHandle _CMSG_CONTENT_ENCRYPT_INFO$fCNG$VH() { return _CMSG_CONTENT_ENCRYPT_INFO$fCNG$VH_; }

    static final MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$pbCNGContentEncryptKeyObject$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$pbCNGContentEncryptKeyObject$LAYOUT() { return _CMSG_CONTENT_ENCRYPT_INFO$pbCNGContentEncryptKeyObject$LAYOUT_; }

    static final VarHandle _CMSG_CONTENT_ENCRYPT_INFO$pbCNGContentEncryptKeyObject$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_CONTENT_ENCRYPT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pbCNGContentEncryptKeyObject")));
    static final java.lang.invoke.VarHandle _CMSG_CONTENT_ENCRYPT_INFO$pbCNGContentEncryptKeyObject$VH() { return _CMSG_CONTENT_ENCRYPT_INFO$pbCNGContentEncryptKeyObject$VH_; }

    static final MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$pbContentEncryptKey$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$pbContentEncryptKey$LAYOUT() { return _CMSG_CONTENT_ENCRYPT_INFO$pbContentEncryptKey$LAYOUT_; }

    static final VarHandle _CMSG_CONTENT_ENCRYPT_INFO$pbContentEncryptKey$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_CONTENT_ENCRYPT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pbContentEncryptKey")));
    static final java.lang.invoke.VarHandle _CMSG_CONTENT_ENCRYPT_INFO$pbContentEncryptKey$VH() { return _CMSG_CONTENT_ENCRYPT_INFO$pbContentEncryptKey$VH_; }

    static final MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$cbContentEncryptKey$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CONTENT_ENCRYPT_INFO$cbContentEncryptKey$LAYOUT() { return _CMSG_CONTENT_ENCRYPT_INFO$cbContentEncryptKey$LAYOUT_; }

    static final VarHandle _CMSG_CONTENT_ENCRYPT_INFO$cbContentEncryptKey$VH_ = _CMSG_CONTENT_ENCRYPT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbContentEncryptKey"));
    static final java.lang.invoke.VarHandle _CMSG_CONTENT_ENCRYPT_INFO$cbContentEncryptKey$VH() { return _CMSG_CONTENT_ENCRYPT_INFO$cbContentEncryptKey$VH_; }

    static final MemoryLayout _CMSG_KEY_TRANS_ENCRYPT_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwRecipientIndex"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("KeyEncryptionAlgorithm"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("EncryptedKey"),
        C_LONG.withName("dwFlags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CMSG_KEY_TRANS_ENCRYPT_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_TRANS_ENCRYPT_INFO$struct$LAYOUT() { return _CMSG_KEY_TRANS_ENCRYPT_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_KEY_TRANS_ENCRYPT_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_TRANS_ENCRYPT_INFO$cbSize$LAYOUT() { return _CMSG_KEY_TRANS_ENCRYPT_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_KEY_TRANS_ENCRYPT_INFO$cbSize$VH_ = _CMSG_KEY_TRANS_ENCRYPT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_KEY_TRANS_ENCRYPT_INFO$cbSize$VH() { return _CMSG_KEY_TRANS_ENCRYPT_INFO$cbSize$VH_; }

    static final MemoryLayout _CMSG_KEY_TRANS_ENCRYPT_INFO$dwRecipientIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_TRANS_ENCRYPT_INFO$dwRecipientIndex$LAYOUT() { return _CMSG_KEY_TRANS_ENCRYPT_INFO$dwRecipientIndex$LAYOUT_; }

    static final VarHandle _CMSG_KEY_TRANS_ENCRYPT_INFO$dwRecipientIndex$VH_ = _CMSG_KEY_TRANS_ENCRYPT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRecipientIndex"));
    static final java.lang.invoke.VarHandle _CMSG_KEY_TRANS_ENCRYPT_INFO$dwRecipientIndex$VH() { return _CMSG_KEY_TRANS_ENCRYPT_INFO$dwRecipientIndex$VH_; }

    static final MemoryLayout _CMSG_KEY_TRANS_ENCRYPT_INFO$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_TRANS_ENCRYPT_INFO$dwFlags$LAYOUT() { return _CMSG_KEY_TRANS_ENCRYPT_INFO$dwFlags$LAYOUT_; }

    static final VarHandle _CMSG_KEY_TRANS_ENCRYPT_INFO$dwFlags$VH_ = _CMSG_KEY_TRANS_ENCRYPT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _CMSG_KEY_TRANS_ENCRYPT_INFO$dwFlags$VH() { return _CMSG_KEY_TRANS_ENCRYPT_INFO$dwFlags$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("EncryptedKey")
    ).withName("_CMSG_KEY_AGREE_KEY_ENCRYPT_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO$struct$LAYOUT() { return _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO$cbSize$LAYOUT() { return _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO$cbSize$VH_ = _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO$cbSize$VH() { return _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO$cbSize$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_ENCRYPT_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwRecipientIndex"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("KeyEncryptionAlgorithm"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("UserKeyingMaterial"),
        C_LONG.withName("dwOriginatorChoice"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwIdChoice"),
            MemoryLayout.ofPaddingBits(32),
            MemoryLayout.ofStruct(
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("Issuer"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("SerialNumber")
            ).withName("IssuerSerialNumber"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("KeyId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("HashId")
        ).withName("OriginatorCertId"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_POINTER.withName("pszObjId"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("Parameters")
            ).withName("Algorithm"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData"),
                C_LONG.withName("cUnusedBits"),
                MemoryLayout.ofPaddingBits(32)
            ).withName("PublicKey")
        ).withName("OriginatorPublicKeyInfo"),
        C_LONG.withName("cKeyAgreeKeyEncryptInfo"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgpKeyAgreeKeyEncryptInfo"),
        C_LONG.withName("dwFlags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CMSG_KEY_AGREE_ENCRYPT_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_ENCRYPT_INFO$struct$LAYOUT() { return _CMSG_KEY_AGREE_ENCRYPT_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_KEY_AGREE_ENCRYPT_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_ENCRYPT_INFO$cbSize$LAYOUT() { return _CMSG_KEY_AGREE_ENCRYPT_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_ENCRYPT_INFO$cbSize$VH_ = _CMSG_KEY_AGREE_ENCRYPT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_ENCRYPT_INFO$cbSize$VH() { return _CMSG_KEY_AGREE_ENCRYPT_INFO$cbSize$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_ENCRYPT_INFO$dwRecipientIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_ENCRYPT_INFO$dwRecipientIndex$LAYOUT() { return _CMSG_KEY_AGREE_ENCRYPT_INFO$dwRecipientIndex$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_ENCRYPT_INFO$dwRecipientIndex$VH_ = _CMSG_KEY_AGREE_ENCRYPT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRecipientIndex"));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_ENCRYPT_INFO$dwRecipientIndex$VH() { return _CMSG_KEY_AGREE_ENCRYPT_INFO$dwRecipientIndex$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_ENCRYPT_INFO$dwOriginatorChoice$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_ENCRYPT_INFO$dwOriginatorChoice$LAYOUT() { return _CMSG_KEY_AGREE_ENCRYPT_INFO$dwOriginatorChoice$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_ENCRYPT_INFO$dwOriginatorChoice$VH_ = _CMSG_KEY_AGREE_ENCRYPT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwOriginatorChoice"));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_ENCRYPT_INFO$dwOriginatorChoice$VH() { return _CMSG_KEY_AGREE_ENCRYPT_INFO$dwOriginatorChoice$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_ENCRYPT_INFO$cKeyAgreeKeyEncryptInfo$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_ENCRYPT_INFO$cKeyAgreeKeyEncryptInfo$LAYOUT() { return _CMSG_KEY_AGREE_ENCRYPT_INFO$cKeyAgreeKeyEncryptInfo$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_ENCRYPT_INFO$cKeyAgreeKeyEncryptInfo$VH_ = _CMSG_KEY_AGREE_ENCRYPT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cKeyAgreeKeyEncryptInfo"));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_ENCRYPT_INFO$cKeyAgreeKeyEncryptInfo$VH() { return _CMSG_KEY_AGREE_ENCRYPT_INFO$cKeyAgreeKeyEncryptInfo$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_ENCRYPT_INFO$rgpKeyAgreeKeyEncryptInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_ENCRYPT_INFO$rgpKeyAgreeKeyEncryptInfo$LAYOUT() { return _CMSG_KEY_AGREE_ENCRYPT_INFO$rgpKeyAgreeKeyEncryptInfo$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_ENCRYPT_INFO$rgpKeyAgreeKeyEncryptInfo$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_KEY_AGREE_ENCRYPT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgpKeyAgreeKeyEncryptInfo")));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_ENCRYPT_INFO$rgpKeyAgreeKeyEncryptInfo$VH() { return _CMSG_KEY_AGREE_ENCRYPT_INFO$rgpKeyAgreeKeyEncryptInfo$VH_; }

    static final MemoryLayout _CMSG_KEY_AGREE_ENCRYPT_INFO$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_KEY_AGREE_ENCRYPT_INFO$dwFlags$LAYOUT() { return _CMSG_KEY_AGREE_ENCRYPT_INFO$dwFlags$LAYOUT_; }

    static final VarHandle _CMSG_KEY_AGREE_ENCRYPT_INFO$dwFlags$VH_ = _CMSG_KEY_AGREE_ENCRYPT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _CMSG_KEY_AGREE_ENCRYPT_INFO$dwFlags$VH() { return _CMSG_KEY_AGREE_ENCRYPT_INFO$dwFlags$VH_; }

    static final MemoryLayout _CMSG_MAIL_LIST_ENCRYPT_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwRecipientIndex"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("KeyEncryptionAlgorithm"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("EncryptedKey"),
        C_LONG.withName("dwFlags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CMSG_MAIL_LIST_ENCRYPT_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_MAIL_LIST_ENCRYPT_INFO$struct$LAYOUT() { return _CMSG_MAIL_LIST_ENCRYPT_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_MAIL_LIST_ENCRYPT_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_MAIL_LIST_ENCRYPT_INFO$cbSize$LAYOUT() { return _CMSG_MAIL_LIST_ENCRYPT_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_MAIL_LIST_ENCRYPT_INFO$cbSize$VH_ = _CMSG_MAIL_LIST_ENCRYPT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_MAIL_LIST_ENCRYPT_INFO$cbSize$VH() { return _CMSG_MAIL_LIST_ENCRYPT_INFO$cbSize$VH_; }

    static final MemoryLayout _CMSG_MAIL_LIST_ENCRYPT_INFO$dwRecipientIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_MAIL_LIST_ENCRYPT_INFO$dwRecipientIndex$LAYOUT() { return _CMSG_MAIL_LIST_ENCRYPT_INFO$dwRecipientIndex$LAYOUT_; }

    static final VarHandle _CMSG_MAIL_LIST_ENCRYPT_INFO$dwRecipientIndex$VH_ = _CMSG_MAIL_LIST_ENCRYPT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRecipientIndex"));
    static final java.lang.invoke.VarHandle _CMSG_MAIL_LIST_ENCRYPT_INFO$dwRecipientIndex$VH() { return _CMSG_MAIL_LIST_ENCRYPT_INFO$dwRecipientIndex$VH_; }

    static final MemoryLayout _CMSG_MAIL_LIST_ENCRYPT_INFO$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_MAIL_LIST_ENCRYPT_INFO$dwFlags$LAYOUT() { return _CMSG_MAIL_LIST_ENCRYPT_INFO$dwFlags$LAYOUT_; }

    static final VarHandle _CMSG_MAIL_LIST_ENCRYPT_INFO$dwFlags$VH_ = _CMSG_MAIL_LIST_ENCRYPT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _CMSG_MAIL_LIST_ENCRYPT_INFO$dwFlags$VH() { return _CMSG_MAIL_LIST_ENCRYPT_INFO$dwFlags$VH_; }

    static final MemoryLayout _CMSG_CNG_CONTENT_DECRYPT_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("ContentEncryptionAlgorithm"),
        C_POINTER.withName("pfnAlloc"),
        C_POINTER.withName("pfnFree"),
        C_LONGLONG.withName("hNCryptKey"),
        C_POINTER.withName("pbContentEncryptKey"),
        C_LONG.withName("cbContentEncryptKey"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hCNGContentEncryptKey"),
        C_POINTER.withName("pbCNGContentEncryptKeyObject")
    ).withName("_CMSG_CNG_CONTENT_DECRYPT_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CNG_CONTENT_DECRYPT_INFO$struct$LAYOUT() { return _CMSG_CNG_CONTENT_DECRYPT_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMSG_CNG_CONTENT_DECRYPT_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CNG_CONTENT_DECRYPT_INFO$cbSize$LAYOUT() { return _CMSG_CNG_CONTENT_DECRYPT_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CMSG_CNG_CONTENT_DECRYPT_INFO$cbSize$VH_ = _CMSG_CNG_CONTENT_DECRYPT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CMSG_CNG_CONTENT_DECRYPT_INFO$cbSize$VH() { return _CMSG_CNG_CONTENT_DECRYPT_INFO$cbSize$VH_; }

    static final MemoryLayout _CMSG_CNG_CONTENT_DECRYPT_INFO$pfnAlloc$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CNG_CONTENT_DECRYPT_INFO$pfnAlloc$LAYOUT() { return _CMSG_CNG_CONTENT_DECRYPT_INFO$pfnAlloc$LAYOUT_; }

    static final VarHandle _CMSG_CNG_CONTENT_DECRYPT_INFO$pfnAlloc$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_CNG_CONTENT_DECRYPT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pfnAlloc")));
    static final java.lang.invoke.VarHandle _CMSG_CNG_CONTENT_DECRYPT_INFO$pfnAlloc$VH() { return _CMSG_CNG_CONTENT_DECRYPT_INFO$pfnAlloc$VH_; }

    static final MemoryLayout _CMSG_CNG_CONTENT_DECRYPT_INFO$pfnFree$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CNG_CONTENT_DECRYPT_INFO$pfnFree$LAYOUT() { return _CMSG_CNG_CONTENT_DECRYPT_INFO$pfnFree$LAYOUT_; }

    static final VarHandle _CMSG_CNG_CONTENT_DECRYPT_INFO$pfnFree$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_CNG_CONTENT_DECRYPT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pfnFree")));
    static final java.lang.invoke.VarHandle _CMSG_CNG_CONTENT_DECRYPT_INFO$pfnFree$VH() { return _CMSG_CNG_CONTENT_DECRYPT_INFO$pfnFree$VH_; }

    static final MemoryLayout _CMSG_CNG_CONTENT_DECRYPT_INFO$hNCryptKey$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CNG_CONTENT_DECRYPT_INFO$hNCryptKey$LAYOUT() { return _CMSG_CNG_CONTENT_DECRYPT_INFO$hNCryptKey$LAYOUT_; }

    static final VarHandle _CMSG_CNG_CONTENT_DECRYPT_INFO$hNCryptKey$VH_ = _CMSG_CNG_CONTENT_DECRYPT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hNCryptKey"));
    static final java.lang.invoke.VarHandle _CMSG_CNG_CONTENT_DECRYPT_INFO$hNCryptKey$VH() { return _CMSG_CNG_CONTENT_DECRYPT_INFO$hNCryptKey$VH_; }

    static final MemoryLayout _CMSG_CNG_CONTENT_DECRYPT_INFO$pbContentEncryptKey$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CNG_CONTENT_DECRYPT_INFO$pbContentEncryptKey$LAYOUT() { return _CMSG_CNG_CONTENT_DECRYPT_INFO$pbContentEncryptKey$LAYOUT_; }

    static final VarHandle _CMSG_CNG_CONTENT_DECRYPT_INFO$pbContentEncryptKey$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_CNG_CONTENT_DECRYPT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pbContentEncryptKey")));
    static final java.lang.invoke.VarHandle _CMSG_CNG_CONTENT_DECRYPT_INFO$pbContentEncryptKey$VH() { return _CMSG_CNG_CONTENT_DECRYPT_INFO$pbContentEncryptKey$VH_; }

    static final MemoryLayout _CMSG_CNG_CONTENT_DECRYPT_INFO$cbContentEncryptKey$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CNG_CONTENT_DECRYPT_INFO$cbContentEncryptKey$LAYOUT() { return _CMSG_CNG_CONTENT_DECRYPT_INFO$cbContentEncryptKey$LAYOUT_; }

    static final VarHandle _CMSG_CNG_CONTENT_DECRYPT_INFO$cbContentEncryptKey$VH_ = _CMSG_CNG_CONTENT_DECRYPT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbContentEncryptKey"));
    static final java.lang.invoke.VarHandle _CMSG_CNG_CONTENT_DECRYPT_INFO$cbContentEncryptKey$VH() { return _CMSG_CNG_CONTENT_DECRYPT_INFO$cbContentEncryptKey$VH_; }

    static final MemoryLayout _CMSG_CNG_CONTENT_DECRYPT_INFO$hCNGContentEncryptKey$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CNG_CONTENT_DECRYPT_INFO$hCNGContentEncryptKey$LAYOUT() { return _CMSG_CNG_CONTENT_DECRYPT_INFO$hCNGContentEncryptKey$LAYOUT_; }

    static final VarHandle _CMSG_CNG_CONTENT_DECRYPT_INFO$hCNGContentEncryptKey$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_CNG_CONTENT_DECRYPT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCNGContentEncryptKey")));
    static final java.lang.invoke.VarHandle _CMSG_CNG_CONTENT_DECRYPT_INFO$hCNGContentEncryptKey$VH() { return _CMSG_CNG_CONTENT_DECRYPT_INFO$hCNGContentEncryptKey$VH_; }

    static final MemoryLayout _CMSG_CNG_CONTENT_DECRYPT_INFO$pbCNGContentEncryptKeyObject$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMSG_CNG_CONTENT_DECRYPT_INFO$pbCNGContentEncryptKeyObject$LAYOUT() { return _CMSG_CNG_CONTENT_DECRYPT_INFO$pbCNGContentEncryptKeyObject$LAYOUT_; }

    static final VarHandle _CMSG_CNG_CONTENT_DECRYPT_INFO$pbCNGContentEncryptKeyObject$VH_ = MemoryHandles.asAddressVarHandle(_CMSG_CNG_CONTENT_DECRYPT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pbCNGContentEncryptKeyObject")));
    static final java.lang.invoke.VarHandle _CMSG_CNG_CONTENT_DECRYPT_INFO$pbCNGContentEncryptKeyObject$VH() { return _CMSG_CNG_CONTENT_DECRYPT_INFO$pbCNGContentEncryptKeyObject$VH_; }

    static final MemoryLayout _CERT_CONTEXT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwCertEncodingType"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pbCertEncoded"),
        C_LONG.withName("cbCertEncoded"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pCertInfo"),
        C_POINTER.withName("hCertStore")
    ).withName("_CERT_CONTEXT");
    static final jdk.incubator.foreign.MemoryLayout _CERT_CONTEXT$struct$LAYOUT() { return _CERT_CONTEXT$struct$LAYOUT_; }

    static final MemoryLayout _CERT_CONTEXT$dwCertEncodingType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CONTEXT$dwCertEncodingType$LAYOUT() { return _CERT_CONTEXT$dwCertEncodingType$LAYOUT_; }

    static final VarHandle _CERT_CONTEXT$dwCertEncodingType$VH_ = _CERT_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCertEncodingType"));
    static final java.lang.invoke.VarHandle _CERT_CONTEXT$dwCertEncodingType$VH() { return _CERT_CONTEXT$dwCertEncodingType$VH_; }

    static final MemoryLayout _CERT_CONTEXT$pbCertEncoded$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CONTEXT$pbCertEncoded$LAYOUT() { return _CERT_CONTEXT$pbCertEncoded$LAYOUT_; }

    static final VarHandle _CERT_CONTEXT$pbCertEncoded$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pbCertEncoded")));
    static final java.lang.invoke.VarHandle _CERT_CONTEXT$pbCertEncoded$VH() { return _CERT_CONTEXT$pbCertEncoded$VH_; }

    static final MemoryLayout _CERT_CONTEXT$cbCertEncoded$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CONTEXT$cbCertEncoded$LAYOUT() { return _CERT_CONTEXT$cbCertEncoded$LAYOUT_; }

    static final VarHandle _CERT_CONTEXT$cbCertEncoded$VH_ = _CERT_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbCertEncoded"));
    static final java.lang.invoke.VarHandle _CERT_CONTEXT$cbCertEncoded$VH() { return _CERT_CONTEXT$cbCertEncoded$VH_; }

    static final MemoryLayout _CERT_CONTEXT$pCertInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CONTEXT$pCertInfo$LAYOUT() { return _CERT_CONTEXT$pCertInfo$LAYOUT_; }

    static final VarHandle _CERT_CONTEXT$pCertInfo$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pCertInfo")));
    static final java.lang.invoke.VarHandle _CERT_CONTEXT$pCertInfo$VH() { return _CERT_CONTEXT$pCertInfo$VH_; }

    static final MemoryLayout _CERT_CONTEXT$hCertStore$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CONTEXT$hCertStore$LAYOUT() { return _CERT_CONTEXT$hCertStore$LAYOUT_; }

    static final VarHandle _CERT_CONTEXT$hCertStore$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCertStore")));
    static final java.lang.invoke.VarHandle _CERT_CONTEXT$hCertStore$VH() { return _CERT_CONTEXT$hCertStore$VH_; }

    static final MemoryLayout _CRL_CONTEXT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwCertEncodingType"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pbCrlEncoded"),
        C_LONG.withName("cbCrlEncoded"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pCrlInfo"),
        C_POINTER.withName("hCertStore")
    ).withName("_CRL_CONTEXT");
    static final jdk.incubator.foreign.MemoryLayout _CRL_CONTEXT$struct$LAYOUT() { return _CRL_CONTEXT$struct$LAYOUT_; }

    static final MemoryLayout _CRL_CONTEXT$dwCertEncodingType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRL_CONTEXT$dwCertEncodingType$LAYOUT() { return _CRL_CONTEXT$dwCertEncodingType$LAYOUT_; }

    static final VarHandle _CRL_CONTEXT$dwCertEncodingType$VH_ = _CRL_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCertEncodingType"));
    static final java.lang.invoke.VarHandle _CRL_CONTEXT$dwCertEncodingType$VH() { return _CRL_CONTEXT$dwCertEncodingType$VH_; }

    static final MemoryLayout _CRL_CONTEXT$pbCrlEncoded$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRL_CONTEXT$pbCrlEncoded$LAYOUT() { return _CRL_CONTEXT$pbCrlEncoded$LAYOUT_; }

    static final VarHandle _CRL_CONTEXT$pbCrlEncoded$VH_ = MemoryHandles.asAddressVarHandle(_CRL_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pbCrlEncoded")));
    static final java.lang.invoke.VarHandle _CRL_CONTEXT$pbCrlEncoded$VH() { return _CRL_CONTEXT$pbCrlEncoded$VH_; }

    static final MemoryLayout _CRL_CONTEXT$cbCrlEncoded$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRL_CONTEXT$cbCrlEncoded$LAYOUT() { return _CRL_CONTEXT$cbCrlEncoded$LAYOUT_; }

    static final VarHandle _CRL_CONTEXT$cbCrlEncoded$VH_ = _CRL_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbCrlEncoded"));
    static final java.lang.invoke.VarHandle _CRL_CONTEXT$cbCrlEncoded$VH() { return _CRL_CONTEXT$cbCrlEncoded$VH_; }

    static final MemoryLayout _CRL_CONTEXT$pCrlInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRL_CONTEXT$pCrlInfo$LAYOUT() { return _CRL_CONTEXT$pCrlInfo$LAYOUT_; }

    static final VarHandle _CRL_CONTEXT$pCrlInfo$VH_ = MemoryHandles.asAddressVarHandle(_CRL_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pCrlInfo")));
    static final java.lang.invoke.VarHandle _CRL_CONTEXT$pCrlInfo$VH() { return _CRL_CONTEXT$pCrlInfo$VH_; }

    static final MemoryLayout _CRL_CONTEXT$hCertStore$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRL_CONTEXT$hCertStore$LAYOUT() { return _CRL_CONTEXT$hCertStore$LAYOUT_; }

    static final VarHandle _CRL_CONTEXT$hCertStore$VH_ = MemoryHandles.asAddressVarHandle(_CRL_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCertStore")));
    static final java.lang.invoke.VarHandle _CRL_CONTEXT$hCertStore$VH() { return _CRL_CONTEXT$hCertStore$VH_; }

    static final MemoryLayout _CTL_CONTEXT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwMsgAndCertEncodingType"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pbCtlEncoded"),
        C_LONG.withName("cbCtlEncoded"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pCtlInfo"),
        C_POINTER.withName("hCertStore"),
        C_POINTER.withName("hCryptMsg"),
        C_POINTER.withName("pbCtlContent"),
        C_LONG.withName("cbCtlContent"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CTL_CONTEXT");
    static final jdk.incubator.foreign.MemoryLayout _CTL_CONTEXT$struct$LAYOUT() { return _CTL_CONTEXT$struct$LAYOUT_; }

    static final MemoryLayout _CTL_CONTEXT$dwMsgAndCertEncodingType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CTL_CONTEXT$dwMsgAndCertEncodingType$LAYOUT() { return _CTL_CONTEXT$dwMsgAndCertEncodingType$LAYOUT_; }

    static final VarHandle _CTL_CONTEXT$dwMsgAndCertEncodingType$VH_ = _CTL_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwMsgAndCertEncodingType"));
    static final java.lang.invoke.VarHandle _CTL_CONTEXT$dwMsgAndCertEncodingType$VH() { return _CTL_CONTEXT$dwMsgAndCertEncodingType$VH_; }

    static final MemoryLayout _CTL_CONTEXT$pbCtlEncoded$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CTL_CONTEXT$pbCtlEncoded$LAYOUT() { return _CTL_CONTEXT$pbCtlEncoded$LAYOUT_; }

    static final VarHandle _CTL_CONTEXT$pbCtlEncoded$VH_ = MemoryHandles.asAddressVarHandle(_CTL_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pbCtlEncoded")));
    static final java.lang.invoke.VarHandle _CTL_CONTEXT$pbCtlEncoded$VH() { return _CTL_CONTEXT$pbCtlEncoded$VH_; }

    static final MemoryLayout _CTL_CONTEXT$cbCtlEncoded$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CTL_CONTEXT$cbCtlEncoded$LAYOUT() { return _CTL_CONTEXT$cbCtlEncoded$LAYOUT_; }

    static final VarHandle _CTL_CONTEXT$cbCtlEncoded$VH_ = _CTL_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbCtlEncoded"));
    static final java.lang.invoke.VarHandle _CTL_CONTEXT$cbCtlEncoded$VH() { return _CTL_CONTEXT$cbCtlEncoded$VH_; }

    static final MemoryLayout _CTL_CONTEXT$pCtlInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CTL_CONTEXT$pCtlInfo$LAYOUT() { return _CTL_CONTEXT$pCtlInfo$LAYOUT_; }

    static final VarHandle _CTL_CONTEXT$pCtlInfo$VH_ = MemoryHandles.asAddressVarHandle(_CTL_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pCtlInfo")));
    static final java.lang.invoke.VarHandle _CTL_CONTEXT$pCtlInfo$VH() { return _CTL_CONTEXT$pCtlInfo$VH_; }

    static final MemoryLayout _CTL_CONTEXT$hCertStore$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CTL_CONTEXT$hCertStore$LAYOUT() { return _CTL_CONTEXT$hCertStore$LAYOUT_; }

    static final VarHandle _CTL_CONTEXT$hCertStore$VH_ = MemoryHandles.asAddressVarHandle(_CTL_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCertStore")));
    static final java.lang.invoke.VarHandle _CTL_CONTEXT$hCertStore$VH() { return _CTL_CONTEXT$hCertStore$VH_; }

    static final MemoryLayout _CTL_CONTEXT$hCryptMsg$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CTL_CONTEXT$hCryptMsg$LAYOUT() { return _CTL_CONTEXT$hCryptMsg$LAYOUT_; }

    static final VarHandle _CTL_CONTEXT$hCryptMsg$VH_ = MemoryHandles.asAddressVarHandle(_CTL_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCryptMsg")));
    static final java.lang.invoke.VarHandle _CTL_CONTEXT$hCryptMsg$VH() { return _CTL_CONTEXT$hCryptMsg$VH_; }

    static final MemoryLayout _CTL_CONTEXT$pbCtlContent$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CTL_CONTEXT$pbCtlContent$LAYOUT() { return _CTL_CONTEXT$pbCtlContent$LAYOUT_; }

    static final VarHandle _CTL_CONTEXT$pbCtlContent$VH_ = MemoryHandles.asAddressVarHandle(_CTL_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pbCtlContent")));
    static final java.lang.invoke.VarHandle _CTL_CONTEXT$pbCtlContent$VH() { return _CTL_CONTEXT$pbCtlContent$VH_; }

    static final MemoryLayout _CTL_CONTEXT$cbCtlContent$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CTL_CONTEXT$cbCtlContent$LAYOUT() { return _CTL_CONTEXT$cbCtlContent$LAYOUT_; }

    static final VarHandle _CTL_CONTEXT$cbCtlContent$VH_ = _CTL_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbCtlContent"));
    static final java.lang.invoke.VarHandle _CTL_CONTEXT$cbCtlContent$VH() { return _CTL_CONTEXT$cbCtlContent$VH_; }

    static final int KeyTypeOther() { return (int)0L; }

    static final int KeyTypeVirtualSmartCard() { return (int)1L; }

    static final int KeyTypePhysicalSmartCard() { return (int)2L; }

    static final int KeyTypePassport() { return (int)3L; }

    static final int KeyTypePassportRemote() { return (int)4L; }

    static final int KeyTypePassportSmartCard() { return (int)5L; }

    static final int KeyTypeHardware() { return (int)6L; }

    static final int KeyTypeSoftware() { return (int)7L; }

    static final int KeyTypeSelfSigned() { return (int)8L; }

    static final MemoryLayout _CRYPT_KEY_PROV_PARAM$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwParam"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pbData"),
        C_LONG.withName("cbData"),
        C_LONG.withName("dwFlags")
    ).withName("_CRYPT_KEY_PROV_PARAM");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_KEY_PROV_PARAM$struct$LAYOUT() { return _CRYPT_KEY_PROV_PARAM$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_KEY_PROV_PARAM$dwParam$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_KEY_PROV_PARAM$dwParam$LAYOUT() { return _CRYPT_KEY_PROV_PARAM$dwParam$LAYOUT_; }

    static final VarHandle _CRYPT_KEY_PROV_PARAM$dwParam$VH_ = _CRYPT_KEY_PROV_PARAM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwParam"));
    static final java.lang.invoke.VarHandle _CRYPT_KEY_PROV_PARAM$dwParam$VH() { return _CRYPT_KEY_PROV_PARAM$dwParam$VH_; }

    static final MemoryLayout _CRYPT_KEY_PROV_PARAM$pbData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_KEY_PROV_PARAM$pbData$LAYOUT() { return _CRYPT_KEY_PROV_PARAM$pbData$LAYOUT_; }

    static final VarHandle _CRYPT_KEY_PROV_PARAM$pbData$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_KEY_PROV_PARAM$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pbData")));
    static final java.lang.invoke.VarHandle _CRYPT_KEY_PROV_PARAM$pbData$VH() { return _CRYPT_KEY_PROV_PARAM$pbData$VH_; }

    static final MemoryLayout _CRYPT_KEY_PROV_PARAM$cbData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_KEY_PROV_PARAM$cbData$LAYOUT() { return _CRYPT_KEY_PROV_PARAM$cbData$LAYOUT_; }

    static final VarHandle _CRYPT_KEY_PROV_PARAM$cbData$VH_ = _CRYPT_KEY_PROV_PARAM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    static final java.lang.invoke.VarHandle _CRYPT_KEY_PROV_PARAM$cbData$VH() { return _CRYPT_KEY_PROV_PARAM$cbData$VH_; }

    static final MemoryLayout _CRYPT_KEY_PROV_PARAM$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_KEY_PROV_PARAM$dwFlags$LAYOUT() { return _CRYPT_KEY_PROV_PARAM$dwFlags$LAYOUT_; }

    static final VarHandle _CRYPT_KEY_PROV_PARAM$dwFlags$VH_ = _CRYPT_KEY_PROV_PARAM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _CRYPT_KEY_PROV_PARAM$dwFlags$VH() { return _CRYPT_KEY_PROV_PARAM$dwFlags$VH_; }

    static final MemoryLayout _CRYPT_KEY_PROV_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pwszContainerName"),
        C_POINTER.withName("pwszProvName"),
        C_LONG.withName("dwProvType"),
        C_LONG.withName("dwFlags"),
        C_LONG.withName("cProvParam"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgProvParam"),
        C_LONG.withName("dwKeySpec"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CRYPT_KEY_PROV_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_KEY_PROV_INFO$struct$LAYOUT() { return _CRYPT_KEY_PROV_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_KEY_PROV_INFO$pwszContainerName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_KEY_PROV_INFO$pwszContainerName$LAYOUT() { return _CRYPT_KEY_PROV_INFO$pwszContainerName$LAYOUT_; }

    static final VarHandle _CRYPT_KEY_PROV_INFO$pwszContainerName$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_KEY_PROV_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszContainerName")));
    static final java.lang.invoke.VarHandle _CRYPT_KEY_PROV_INFO$pwszContainerName$VH() { return _CRYPT_KEY_PROV_INFO$pwszContainerName$VH_; }

    static final MemoryLayout _CRYPT_KEY_PROV_INFO$pwszProvName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_KEY_PROV_INFO$pwszProvName$LAYOUT() { return _CRYPT_KEY_PROV_INFO$pwszProvName$LAYOUT_; }

    static final VarHandle _CRYPT_KEY_PROV_INFO$pwszProvName$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_KEY_PROV_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszProvName")));
    static final java.lang.invoke.VarHandle _CRYPT_KEY_PROV_INFO$pwszProvName$VH() { return _CRYPT_KEY_PROV_INFO$pwszProvName$VH_; }

    static final MemoryLayout _CRYPT_KEY_PROV_INFO$dwProvType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_KEY_PROV_INFO$dwProvType$LAYOUT() { return _CRYPT_KEY_PROV_INFO$dwProvType$LAYOUT_; }

    static final VarHandle _CRYPT_KEY_PROV_INFO$dwProvType$VH_ = _CRYPT_KEY_PROV_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwProvType"));
    static final java.lang.invoke.VarHandle _CRYPT_KEY_PROV_INFO$dwProvType$VH() { return _CRYPT_KEY_PROV_INFO$dwProvType$VH_; }

    static final MemoryLayout _CRYPT_KEY_PROV_INFO$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_KEY_PROV_INFO$dwFlags$LAYOUT() { return _CRYPT_KEY_PROV_INFO$dwFlags$LAYOUT_; }

    static final VarHandle _CRYPT_KEY_PROV_INFO$dwFlags$VH_ = _CRYPT_KEY_PROV_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _CRYPT_KEY_PROV_INFO$dwFlags$VH() { return _CRYPT_KEY_PROV_INFO$dwFlags$VH_; }

    static final MemoryLayout _CRYPT_KEY_PROV_INFO$cProvParam$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_KEY_PROV_INFO$cProvParam$LAYOUT() { return _CRYPT_KEY_PROV_INFO$cProvParam$LAYOUT_; }

    static final VarHandle _CRYPT_KEY_PROV_INFO$cProvParam$VH_ = _CRYPT_KEY_PROV_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cProvParam"));
    static final java.lang.invoke.VarHandle _CRYPT_KEY_PROV_INFO$cProvParam$VH() { return _CRYPT_KEY_PROV_INFO$cProvParam$VH_; }

    static final MemoryLayout _CRYPT_KEY_PROV_INFO$rgProvParam$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_KEY_PROV_INFO$rgProvParam$LAYOUT() { return _CRYPT_KEY_PROV_INFO$rgProvParam$LAYOUT_; }

    static final VarHandle _CRYPT_KEY_PROV_INFO$rgProvParam$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_KEY_PROV_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgProvParam")));
    static final java.lang.invoke.VarHandle _CRYPT_KEY_PROV_INFO$rgProvParam$VH() { return _CRYPT_KEY_PROV_INFO$rgProvParam$VH_; }

    static final MemoryLayout _CRYPT_KEY_PROV_INFO$dwKeySpec$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_KEY_PROV_INFO$dwKeySpec$LAYOUT() { return _CRYPT_KEY_PROV_INFO$dwKeySpec$LAYOUT_; }

    static final VarHandle _CRYPT_KEY_PROV_INFO$dwKeySpec$VH_ = _CRYPT_KEY_PROV_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwKeySpec"));
    static final java.lang.invoke.VarHandle _CRYPT_KEY_PROV_INFO$dwKeySpec$VH() { return _CRYPT_KEY_PROV_INFO$dwKeySpec$VH_; }

    static final MemoryLayout _CERT_KEY_CONTEXT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("hCryptProv"),
        C_LONGLONG.withName("hNCryptKey"),
        C_LONG.withName("dwKeySpec"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CERT_KEY_CONTEXT");
    static final jdk.incubator.foreign.MemoryLayout _CERT_KEY_CONTEXT$struct$LAYOUT() { return _CERT_KEY_CONTEXT$struct$LAYOUT_; }

    static final MemoryLayout _CERT_KEY_CONTEXT$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_KEY_CONTEXT$cbSize$LAYOUT() { return _CERT_KEY_CONTEXT$cbSize$LAYOUT_; }

    static final VarHandle _CERT_KEY_CONTEXT$cbSize$VH_ = _CERT_KEY_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CERT_KEY_CONTEXT$cbSize$VH() { return _CERT_KEY_CONTEXT$cbSize$VH_; }

    static final MemoryLayout _CERT_KEY_CONTEXT$hCryptProv$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_KEY_CONTEXT$hCryptProv$LAYOUT() { return _CERT_KEY_CONTEXT$hCryptProv$LAYOUT_; }

    static final VarHandle _CERT_KEY_CONTEXT$hCryptProv$VH_ = _CERT_KEY_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hCryptProv"));
    static final java.lang.invoke.VarHandle _CERT_KEY_CONTEXT$hCryptProv$VH() { return _CERT_KEY_CONTEXT$hCryptProv$VH_; }

    static final MemoryLayout _CERT_KEY_CONTEXT$hNCryptKey$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_KEY_CONTEXT$hNCryptKey$LAYOUT() { return _CERT_KEY_CONTEXT$hNCryptKey$LAYOUT_; }

    static final VarHandle _CERT_KEY_CONTEXT$hNCryptKey$VH_ = _CERT_KEY_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hNCryptKey"));
    static final java.lang.invoke.VarHandle _CERT_KEY_CONTEXT$hNCryptKey$VH() { return _CERT_KEY_CONTEXT$hNCryptKey$VH_; }

    static final MemoryLayout _CERT_KEY_CONTEXT$dwKeySpec$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_KEY_CONTEXT$dwKeySpec$LAYOUT() { return _CERT_KEY_CONTEXT$dwKeySpec$LAYOUT_; }

    static final VarHandle _CERT_KEY_CONTEXT$dwKeySpec$VH_ = _CERT_KEY_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwKeySpec"));
    static final java.lang.invoke.VarHandle _CERT_KEY_CONTEXT$dwKeySpec$VH() { return _CERT_KEY_CONTEXT$dwKeySpec$VH_; }

    static final MemoryLayout _ROOT_INFO_LUID$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("LowPart"),
        C_LONG.withName("HighPart")
    ).withName("_ROOT_INFO_LUID");
    static final jdk.incubator.foreign.MemoryLayout _ROOT_INFO_LUID$struct$LAYOUT() { return _ROOT_INFO_LUID$struct$LAYOUT_; }

}

