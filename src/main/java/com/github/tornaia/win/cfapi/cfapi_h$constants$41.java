// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$41 extends cfapi_h$constants$40 {

    /* package-private */ cfapi_h$constants$41() {}
    static final MemoryLayout _CONNECTDLGSTRUCTW$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CONNECTDLGSTRUCTW$dwFlags$LAYOUT() { return _CONNECTDLGSTRUCTW$dwFlags$LAYOUT_; }

    static final VarHandle _CONNECTDLGSTRUCTW$dwFlags$VH_ = _CONNECTDLGSTRUCTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _CONNECTDLGSTRUCTW$dwFlags$VH() { return _CONNECTDLGSTRUCTW$dwFlags$VH_; }

    static final MemoryLayout _CONNECTDLGSTRUCTW$dwDevNum$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CONNECTDLGSTRUCTW$dwDevNum$LAYOUT() { return _CONNECTDLGSTRUCTW$dwDevNum$LAYOUT_; }

    static final VarHandle _CONNECTDLGSTRUCTW$dwDevNum$VH_ = _CONNECTDLGSTRUCTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwDevNum"));
    static final java.lang.invoke.VarHandle _CONNECTDLGSTRUCTW$dwDevNum$VH() { return _CONNECTDLGSTRUCTW$dwDevNum$VH_; }

    static final FunctionDescriptor WNetConnectionDialog1A$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetConnectionDialog1A$FUNC() { return WNetConnectionDialog1A$FUNC_; }

    static final MethodHandle WNetConnectionDialog1A$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetConnectionDialog1A",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetConnectionDialog1A$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetConnectionDialog1A$MH() { return WNetConnectionDialog1A$MH_; }

    static final FunctionDescriptor WNetConnectionDialog1W$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetConnectionDialog1W$FUNC() { return WNetConnectionDialog1W$FUNC_; }

    static final MethodHandle WNetConnectionDialog1W$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetConnectionDialog1W",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetConnectionDialog1W$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetConnectionDialog1W$MH() { return WNetConnectionDialog1W$MH_; }

    static final MemoryLayout _DISCDLGSTRUCTA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbStructure"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hwndOwner"),
        C_POINTER.withName("lpLocalName"),
        C_POINTER.withName("lpRemoteName"),
        C_LONG.withName("dwFlags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_DISCDLGSTRUCTA");
    static final jdk.incubator.foreign.MemoryLayout _DISCDLGSTRUCTA$struct$LAYOUT() { return _DISCDLGSTRUCTA$struct$LAYOUT_; }

    static final MemoryLayout _DISCDLGSTRUCTA$cbStructure$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DISCDLGSTRUCTA$cbStructure$LAYOUT() { return _DISCDLGSTRUCTA$cbStructure$LAYOUT_; }

    static final VarHandle _DISCDLGSTRUCTA$cbStructure$VH_ = _DISCDLGSTRUCTA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbStructure"));
    static final java.lang.invoke.VarHandle _DISCDLGSTRUCTA$cbStructure$VH() { return _DISCDLGSTRUCTA$cbStructure$VH_; }

    static final MemoryLayout _DISCDLGSTRUCTA$hwndOwner$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DISCDLGSTRUCTA$hwndOwner$LAYOUT() { return _DISCDLGSTRUCTA$hwndOwner$LAYOUT_; }

    static final VarHandle _DISCDLGSTRUCTA$hwndOwner$VH_ = MemoryHandles.asAddressVarHandle(_DISCDLGSTRUCTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndOwner")));
    static final java.lang.invoke.VarHandle _DISCDLGSTRUCTA$hwndOwner$VH() { return _DISCDLGSTRUCTA$hwndOwner$VH_; }

    static final MemoryLayout _DISCDLGSTRUCTA$lpLocalName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DISCDLGSTRUCTA$lpLocalName$LAYOUT() { return _DISCDLGSTRUCTA$lpLocalName$LAYOUT_; }

    static final VarHandle _DISCDLGSTRUCTA$lpLocalName$VH_ = MemoryHandles.asAddressVarHandle(_DISCDLGSTRUCTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpLocalName")));
    static final java.lang.invoke.VarHandle _DISCDLGSTRUCTA$lpLocalName$VH() { return _DISCDLGSTRUCTA$lpLocalName$VH_; }

    static final MemoryLayout _DISCDLGSTRUCTA$lpRemoteName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DISCDLGSTRUCTA$lpRemoteName$LAYOUT() { return _DISCDLGSTRUCTA$lpRemoteName$LAYOUT_; }

    static final VarHandle _DISCDLGSTRUCTA$lpRemoteName$VH_ = MemoryHandles.asAddressVarHandle(_DISCDLGSTRUCTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpRemoteName")));
    static final java.lang.invoke.VarHandle _DISCDLGSTRUCTA$lpRemoteName$VH() { return _DISCDLGSTRUCTA$lpRemoteName$VH_; }

    static final MemoryLayout _DISCDLGSTRUCTA$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DISCDLGSTRUCTA$dwFlags$LAYOUT() { return _DISCDLGSTRUCTA$dwFlags$LAYOUT_; }

    static final VarHandle _DISCDLGSTRUCTA$dwFlags$VH_ = _DISCDLGSTRUCTA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _DISCDLGSTRUCTA$dwFlags$VH() { return _DISCDLGSTRUCTA$dwFlags$VH_; }

    static final MemoryLayout _DISCDLGSTRUCTW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbStructure"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hwndOwner"),
        C_POINTER.withName("lpLocalName"),
        C_POINTER.withName("lpRemoteName"),
        C_LONG.withName("dwFlags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_DISCDLGSTRUCTW");
    static final jdk.incubator.foreign.MemoryLayout _DISCDLGSTRUCTW$struct$LAYOUT() { return _DISCDLGSTRUCTW$struct$LAYOUT_; }

    static final MemoryLayout _DISCDLGSTRUCTW$cbStructure$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DISCDLGSTRUCTW$cbStructure$LAYOUT() { return _DISCDLGSTRUCTW$cbStructure$LAYOUT_; }

    static final VarHandle _DISCDLGSTRUCTW$cbStructure$VH_ = _DISCDLGSTRUCTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbStructure"));
    static final java.lang.invoke.VarHandle _DISCDLGSTRUCTW$cbStructure$VH() { return _DISCDLGSTRUCTW$cbStructure$VH_; }

    static final MemoryLayout _DISCDLGSTRUCTW$hwndOwner$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DISCDLGSTRUCTW$hwndOwner$LAYOUT() { return _DISCDLGSTRUCTW$hwndOwner$LAYOUT_; }

    static final VarHandle _DISCDLGSTRUCTW$hwndOwner$VH_ = MemoryHandles.asAddressVarHandle(_DISCDLGSTRUCTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndOwner")));
    static final java.lang.invoke.VarHandle _DISCDLGSTRUCTW$hwndOwner$VH() { return _DISCDLGSTRUCTW$hwndOwner$VH_; }

    static final MemoryLayout _DISCDLGSTRUCTW$lpLocalName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DISCDLGSTRUCTW$lpLocalName$LAYOUT() { return _DISCDLGSTRUCTW$lpLocalName$LAYOUT_; }

    static final VarHandle _DISCDLGSTRUCTW$lpLocalName$VH_ = MemoryHandles.asAddressVarHandle(_DISCDLGSTRUCTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpLocalName")));
    static final java.lang.invoke.VarHandle _DISCDLGSTRUCTW$lpLocalName$VH() { return _DISCDLGSTRUCTW$lpLocalName$VH_; }

    static final MemoryLayout _DISCDLGSTRUCTW$lpRemoteName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DISCDLGSTRUCTW$lpRemoteName$LAYOUT() { return _DISCDLGSTRUCTW$lpRemoteName$LAYOUT_; }

    static final VarHandle _DISCDLGSTRUCTW$lpRemoteName$VH_ = MemoryHandles.asAddressVarHandle(_DISCDLGSTRUCTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpRemoteName")));
    static final java.lang.invoke.VarHandle _DISCDLGSTRUCTW$lpRemoteName$VH() { return _DISCDLGSTRUCTW$lpRemoteName$VH_; }

    static final MemoryLayout _DISCDLGSTRUCTW$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DISCDLGSTRUCTW$dwFlags$LAYOUT() { return _DISCDLGSTRUCTW$dwFlags$LAYOUT_; }

    static final VarHandle _DISCDLGSTRUCTW$dwFlags$VH_ = _DISCDLGSTRUCTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _DISCDLGSTRUCTW$dwFlags$VH() { return _DISCDLGSTRUCTW$dwFlags$VH_; }

    static final FunctionDescriptor WNetDisconnectDialog1A$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetDisconnectDialog1A$FUNC() { return WNetDisconnectDialog1A$FUNC_; }

    static final MethodHandle WNetDisconnectDialog1A$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetDisconnectDialog1A",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetDisconnectDialog1A$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetDisconnectDialog1A$MH() { return WNetDisconnectDialog1A$MH_; }

    static final FunctionDescriptor WNetDisconnectDialog1W$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetDisconnectDialog1W$FUNC() { return WNetDisconnectDialog1W$FUNC_; }

    static final MethodHandle WNetDisconnectDialog1W$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetDisconnectDialog1W",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetDisconnectDialog1W$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetDisconnectDialog1W$MH() { return WNetDisconnectDialog1W$MH_; }

    static final FunctionDescriptor WNetOpenEnumA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetOpenEnumA$FUNC() { return WNetOpenEnumA$FUNC_; }

    static final MethodHandle WNetOpenEnumA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetOpenEnumA",
        "(IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetOpenEnumA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetOpenEnumA$MH() { return WNetOpenEnumA$MH_; }

    static final FunctionDescriptor WNetOpenEnumW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetOpenEnumW$FUNC() { return WNetOpenEnumW$FUNC_; }

    static final MethodHandle WNetOpenEnumW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetOpenEnumW",
        "(IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetOpenEnumW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetOpenEnumW$MH() { return WNetOpenEnumW$MH_; }

    static final FunctionDescriptor WNetEnumResourceA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetEnumResourceA$FUNC() { return WNetEnumResourceA$FUNC_; }

    static final MethodHandle WNetEnumResourceA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetEnumResourceA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetEnumResourceA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetEnumResourceA$MH() { return WNetEnumResourceA$MH_; }

    static final FunctionDescriptor WNetEnumResourceW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetEnumResourceW$FUNC() { return WNetEnumResourceW$FUNC_; }

    static final MethodHandle WNetEnumResourceW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetEnumResourceW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetEnumResourceW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetEnumResourceW$MH() { return WNetEnumResourceW$MH_; }

    static final FunctionDescriptor WNetCloseEnum$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetCloseEnum$FUNC() { return WNetCloseEnum$FUNC_; }

    static final MethodHandle WNetCloseEnum$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetCloseEnum",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetCloseEnum$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetCloseEnum$MH() { return WNetCloseEnum$MH_; }

    static final FunctionDescriptor WNetGetResourceParentA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetGetResourceParentA$FUNC() { return WNetGetResourceParentA$FUNC_; }

    static final MethodHandle WNetGetResourceParentA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetGetResourceParentA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetGetResourceParentA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetGetResourceParentA$MH() { return WNetGetResourceParentA$MH_; }

    static final FunctionDescriptor WNetGetResourceParentW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetGetResourceParentW$FUNC() { return WNetGetResourceParentW$FUNC_; }

    static final MethodHandle WNetGetResourceParentW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetGetResourceParentW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetGetResourceParentW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetGetResourceParentW$MH() { return WNetGetResourceParentW$MH_; }

    static final FunctionDescriptor WNetGetResourceInformationA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetGetResourceInformationA$FUNC() { return WNetGetResourceInformationA$FUNC_; }

    static final MethodHandle WNetGetResourceInformationA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetGetResourceInformationA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetGetResourceInformationA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetGetResourceInformationA$MH() { return WNetGetResourceInformationA$MH_; }

    static final FunctionDescriptor WNetGetResourceInformationW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetGetResourceInformationW$FUNC() { return WNetGetResourceInformationW$FUNC_; }

    static final MethodHandle WNetGetResourceInformationW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetGetResourceInformationW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetGetResourceInformationW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetGetResourceInformationW$MH() { return WNetGetResourceInformationW$MH_; }

    static final MemoryLayout _UNIVERSAL_NAME_INFOA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpUniversalName")
    ).withName("_UNIVERSAL_NAME_INFOA");
    static final jdk.incubator.foreign.MemoryLayout _UNIVERSAL_NAME_INFOA$struct$LAYOUT() { return _UNIVERSAL_NAME_INFOA$struct$LAYOUT_; }

    static final MemoryLayout _UNIVERSAL_NAME_INFOA$lpUniversalName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _UNIVERSAL_NAME_INFOA$lpUniversalName$LAYOUT() { return _UNIVERSAL_NAME_INFOA$lpUniversalName$LAYOUT_; }

    static final VarHandle _UNIVERSAL_NAME_INFOA$lpUniversalName$VH_ = MemoryHandles.asAddressVarHandle(_UNIVERSAL_NAME_INFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpUniversalName")));
    static final java.lang.invoke.VarHandle _UNIVERSAL_NAME_INFOA$lpUniversalName$VH() { return _UNIVERSAL_NAME_INFOA$lpUniversalName$VH_; }

    static final MemoryLayout _UNIVERSAL_NAME_INFOW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpUniversalName")
    ).withName("_UNIVERSAL_NAME_INFOW");
    static final jdk.incubator.foreign.MemoryLayout _UNIVERSAL_NAME_INFOW$struct$LAYOUT() { return _UNIVERSAL_NAME_INFOW$struct$LAYOUT_; }

    static final MemoryLayout _UNIVERSAL_NAME_INFOW$lpUniversalName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _UNIVERSAL_NAME_INFOW$lpUniversalName$LAYOUT() { return _UNIVERSAL_NAME_INFOW$lpUniversalName$LAYOUT_; }

    static final VarHandle _UNIVERSAL_NAME_INFOW$lpUniversalName$VH_ = MemoryHandles.asAddressVarHandle(_UNIVERSAL_NAME_INFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpUniversalName")));
    static final java.lang.invoke.VarHandle _UNIVERSAL_NAME_INFOW$lpUniversalName$VH() { return _UNIVERSAL_NAME_INFOW$lpUniversalName$VH_; }

    static final MemoryLayout _REMOTE_NAME_INFOA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpUniversalName"),
        C_POINTER.withName("lpConnectionName"),
        C_POINTER.withName("lpRemainingPath")
    ).withName("_REMOTE_NAME_INFOA");
    static final jdk.incubator.foreign.MemoryLayout _REMOTE_NAME_INFOA$struct$LAYOUT() { return _REMOTE_NAME_INFOA$struct$LAYOUT_; }

    static final MemoryLayout _REMOTE_NAME_INFOA$lpUniversalName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _REMOTE_NAME_INFOA$lpUniversalName$LAYOUT() { return _REMOTE_NAME_INFOA$lpUniversalName$LAYOUT_; }

    static final VarHandle _REMOTE_NAME_INFOA$lpUniversalName$VH_ = MemoryHandles.asAddressVarHandle(_REMOTE_NAME_INFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpUniversalName")));
    static final java.lang.invoke.VarHandle _REMOTE_NAME_INFOA$lpUniversalName$VH() { return _REMOTE_NAME_INFOA$lpUniversalName$VH_; }

    static final MemoryLayout _REMOTE_NAME_INFOA$lpConnectionName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _REMOTE_NAME_INFOA$lpConnectionName$LAYOUT() { return _REMOTE_NAME_INFOA$lpConnectionName$LAYOUT_; }

    static final VarHandle _REMOTE_NAME_INFOA$lpConnectionName$VH_ = MemoryHandles.asAddressVarHandle(_REMOTE_NAME_INFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpConnectionName")));
    static final java.lang.invoke.VarHandle _REMOTE_NAME_INFOA$lpConnectionName$VH() { return _REMOTE_NAME_INFOA$lpConnectionName$VH_; }

    static final MemoryLayout _REMOTE_NAME_INFOA$lpRemainingPath$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _REMOTE_NAME_INFOA$lpRemainingPath$LAYOUT() { return _REMOTE_NAME_INFOA$lpRemainingPath$LAYOUT_; }

    static final VarHandle _REMOTE_NAME_INFOA$lpRemainingPath$VH_ = MemoryHandles.asAddressVarHandle(_REMOTE_NAME_INFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpRemainingPath")));
    static final java.lang.invoke.VarHandle _REMOTE_NAME_INFOA$lpRemainingPath$VH() { return _REMOTE_NAME_INFOA$lpRemainingPath$VH_; }

    static final MemoryLayout _REMOTE_NAME_INFOW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpUniversalName"),
        C_POINTER.withName("lpConnectionName"),
        C_POINTER.withName("lpRemainingPath")
    ).withName("_REMOTE_NAME_INFOW");
    static final jdk.incubator.foreign.MemoryLayout _REMOTE_NAME_INFOW$struct$LAYOUT() { return _REMOTE_NAME_INFOW$struct$LAYOUT_; }

    static final MemoryLayout _REMOTE_NAME_INFOW$lpUniversalName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _REMOTE_NAME_INFOW$lpUniversalName$LAYOUT() { return _REMOTE_NAME_INFOW$lpUniversalName$LAYOUT_; }

    static final VarHandle _REMOTE_NAME_INFOW$lpUniversalName$VH_ = MemoryHandles.asAddressVarHandle(_REMOTE_NAME_INFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpUniversalName")));
    static final java.lang.invoke.VarHandle _REMOTE_NAME_INFOW$lpUniversalName$VH() { return _REMOTE_NAME_INFOW$lpUniversalName$VH_; }

    static final MemoryLayout _REMOTE_NAME_INFOW$lpConnectionName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _REMOTE_NAME_INFOW$lpConnectionName$LAYOUT() { return _REMOTE_NAME_INFOW$lpConnectionName$LAYOUT_; }

    static final VarHandle _REMOTE_NAME_INFOW$lpConnectionName$VH_ = MemoryHandles.asAddressVarHandle(_REMOTE_NAME_INFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpConnectionName")));
    static final java.lang.invoke.VarHandle _REMOTE_NAME_INFOW$lpConnectionName$VH() { return _REMOTE_NAME_INFOW$lpConnectionName$VH_; }

    static final MemoryLayout _REMOTE_NAME_INFOW$lpRemainingPath$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _REMOTE_NAME_INFOW$lpRemainingPath$LAYOUT() { return _REMOTE_NAME_INFOW$lpRemainingPath$LAYOUT_; }

    static final VarHandle _REMOTE_NAME_INFOW$lpRemainingPath$VH_ = MemoryHandles.asAddressVarHandle(_REMOTE_NAME_INFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpRemainingPath")));
    static final java.lang.invoke.VarHandle _REMOTE_NAME_INFOW$lpRemainingPath$VH() { return _REMOTE_NAME_INFOW$lpRemainingPath$VH_; }

    static final FunctionDescriptor WNetGetUniversalNameA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetGetUniversalNameA$FUNC() { return WNetGetUniversalNameA$FUNC_; }

    static final MethodHandle WNetGetUniversalNameA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetGetUniversalNameA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetGetUniversalNameA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetGetUniversalNameA$MH() { return WNetGetUniversalNameA$MH_; }

    static final FunctionDescriptor WNetGetUniversalNameW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetGetUniversalNameW$FUNC() { return WNetGetUniversalNameW$FUNC_; }

    static final MethodHandle WNetGetUniversalNameW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetGetUniversalNameW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetGetUniversalNameW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetGetUniversalNameW$MH() { return WNetGetUniversalNameW$MH_; }

    static final FunctionDescriptor WNetGetUserA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetGetUserA$FUNC() { return WNetGetUserA$FUNC_; }

    static final MethodHandle WNetGetUserA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetGetUserA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetGetUserA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetGetUserA$MH() { return WNetGetUserA$MH_; }

    static final FunctionDescriptor WNetGetUserW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetGetUserW$FUNC() { return WNetGetUserW$FUNC_; }

    static final MethodHandle WNetGetUserW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetGetUserW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetGetUserW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetGetUserW$MH() { return WNetGetUserW$MH_; }

    static final FunctionDescriptor WNetGetProviderNameA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetGetProviderNameA$FUNC() { return WNetGetProviderNameA$FUNC_; }

    static final MethodHandle WNetGetProviderNameA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetGetProviderNameA",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetGetProviderNameA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetGetProviderNameA$MH() { return WNetGetProviderNameA$MH_; }

    static final FunctionDescriptor WNetGetProviderNameW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetGetProviderNameW$FUNC() { return WNetGetProviderNameW$FUNC_; }

    static final MethodHandle WNetGetProviderNameW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetGetProviderNameW",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetGetProviderNameW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetGetProviderNameW$MH() { return WNetGetProviderNameW$MH_; }

    static final MemoryLayout _NETINFOSTRUCT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbStructure"),
        C_LONG.withName("dwProviderVersion"),
        C_LONG.withName("dwStatus"),
        C_LONG.withName("dwCharacteristics"),
        C_LONGLONG.withName("dwHandle"),
        C_SHORT.withName("wNetType"),
        MemoryLayout.ofPaddingBits(16),
        C_LONG.withName("dwPrinters"),
        C_LONG.withName("dwDrives"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_NETINFOSTRUCT");
    static final jdk.incubator.foreign.MemoryLayout _NETINFOSTRUCT$struct$LAYOUT() { return _NETINFOSTRUCT$struct$LAYOUT_; }

    static final MemoryLayout _NETINFOSTRUCT$cbStructure$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NETINFOSTRUCT$cbStructure$LAYOUT() { return _NETINFOSTRUCT$cbStructure$LAYOUT_; }

    static final VarHandle _NETINFOSTRUCT$cbStructure$VH_ = _NETINFOSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbStructure"));
    static final java.lang.invoke.VarHandle _NETINFOSTRUCT$cbStructure$VH() { return _NETINFOSTRUCT$cbStructure$VH_; }

    static final MemoryLayout _NETINFOSTRUCT$dwProviderVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NETINFOSTRUCT$dwProviderVersion$LAYOUT() { return _NETINFOSTRUCT$dwProviderVersion$LAYOUT_; }

    static final VarHandle _NETINFOSTRUCT$dwProviderVersion$VH_ = _NETINFOSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwProviderVersion"));
    static final java.lang.invoke.VarHandle _NETINFOSTRUCT$dwProviderVersion$VH() { return _NETINFOSTRUCT$dwProviderVersion$VH_; }

    static final MemoryLayout _NETINFOSTRUCT$dwStatus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NETINFOSTRUCT$dwStatus$LAYOUT() { return _NETINFOSTRUCT$dwStatus$LAYOUT_; }

    static final VarHandle _NETINFOSTRUCT$dwStatus$VH_ = _NETINFOSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStatus"));
    static final java.lang.invoke.VarHandle _NETINFOSTRUCT$dwStatus$VH() { return _NETINFOSTRUCT$dwStatus$VH_; }

    static final MemoryLayout _NETINFOSTRUCT$dwCharacteristics$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NETINFOSTRUCT$dwCharacteristics$LAYOUT() { return _NETINFOSTRUCT$dwCharacteristics$LAYOUT_; }

    static final VarHandle _NETINFOSTRUCT$dwCharacteristics$VH_ = _NETINFOSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCharacteristics"));
    static final java.lang.invoke.VarHandle _NETINFOSTRUCT$dwCharacteristics$VH() { return _NETINFOSTRUCT$dwCharacteristics$VH_; }

    static final MemoryLayout _NETINFOSTRUCT$dwHandle$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _NETINFOSTRUCT$dwHandle$LAYOUT() { return _NETINFOSTRUCT$dwHandle$LAYOUT_; }

    static final VarHandle _NETINFOSTRUCT$dwHandle$VH_ = _NETINFOSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwHandle"));
    static final java.lang.invoke.VarHandle _NETINFOSTRUCT$dwHandle$VH() { return _NETINFOSTRUCT$dwHandle$VH_; }

    static final MemoryLayout _NETINFOSTRUCT$wNetType$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _NETINFOSTRUCT$wNetType$LAYOUT() { return _NETINFOSTRUCT$wNetType$LAYOUT_; }

    static final VarHandle _NETINFOSTRUCT$wNetType$VH_ = _NETINFOSTRUCT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wNetType"));
    static final java.lang.invoke.VarHandle _NETINFOSTRUCT$wNetType$VH() { return _NETINFOSTRUCT$wNetType$VH_; }

    static final MemoryLayout _NETINFOSTRUCT$dwPrinters$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NETINFOSTRUCT$dwPrinters$LAYOUT() { return _NETINFOSTRUCT$dwPrinters$LAYOUT_; }

    static final VarHandle _NETINFOSTRUCT$dwPrinters$VH_ = _NETINFOSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwPrinters"));
    static final java.lang.invoke.VarHandle _NETINFOSTRUCT$dwPrinters$VH() { return _NETINFOSTRUCT$dwPrinters$VH_; }

    static final MemoryLayout _NETINFOSTRUCT$dwDrives$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NETINFOSTRUCT$dwDrives$LAYOUT() { return _NETINFOSTRUCT$dwDrives$LAYOUT_; }

    static final VarHandle _NETINFOSTRUCT$dwDrives$VH_ = _NETINFOSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwDrives"));
    static final java.lang.invoke.VarHandle _NETINFOSTRUCT$dwDrives$VH() { return _NETINFOSTRUCT$dwDrives$VH_; }

    static final FunctionDescriptor WNetGetNetworkInformationA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetGetNetworkInformationA$FUNC() { return WNetGetNetworkInformationA$FUNC_; }

    static final MethodHandle WNetGetNetworkInformationA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetGetNetworkInformationA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetGetNetworkInformationA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetGetNetworkInformationA$MH() { return WNetGetNetworkInformationA$MH_; }

    static final FunctionDescriptor WNetGetNetworkInformationW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetGetNetworkInformationW$FUNC() { return WNetGetNetworkInformationW$FUNC_; }

    static final MethodHandle WNetGetNetworkInformationW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetGetNetworkInformationW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        WNetGetNetworkInformationW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetGetNetworkInformationW$MH() { return WNetGetNetworkInformationW$MH_; }

    static final FunctionDescriptor WNetGetLastErrorA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetGetLastErrorA$FUNC() { return WNetGetLastErrorA$FUNC_; }

    static final MethodHandle WNetGetLastErrorA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetGetLastErrorA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        WNetGetLastErrorA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetGetLastErrorA$MH() { return WNetGetLastErrorA$MH_; }

    static final FunctionDescriptor WNetGetLastErrorW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor WNetGetLastErrorW$FUNC() { return WNetGetLastErrorW$FUNC_; }

    static final MethodHandle WNetGetLastErrorW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WNetGetLastErrorW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        WNetGetLastErrorW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WNetGetLastErrorW$MH() { return WNetGetLastErrorW$MH_; }

    static final MemoryLayout _NETCONNECTINFOSTRUCT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbStructure"),
        C_LONG.withName("dwFlags"),
        C_LONG.withName("dwSpeed"),
        C_LONG.withName("dwDelay"),
        C_LONG.withName("dwOptDataSize")
    ).withName("_NETCONNECTINFOSTRUCT");
    static final jdk.incubator.foreign.MemoryLayout _NETCONNECTINFOSTRUCT$struct$LAYOUT() { return _NETCONNECTINFOSTRUCT$struct$LAYOUT_; }

    static final MemoryLayout _NETCONNECTINFOSTRUCT$cbStructure$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NETCONNECTINFOSTRUCT$cbStructure$LAYOUT() { return _NETCONNECTINFOSTRUCT$cbStructure$LAYOUT_; }

    static final VarHandle _NETCONNECTINFOSTRUCT$cbStructure$VH_ = _NETCONNECTINFOSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbStructure"));
    static final java.lang.invoke.VarHandle _NETCONNECTINFOSTRUCT$cbStructure$VH() { return _NETCONNECTINFOSTRUCT$cbStructure$VH_; }

    static final MemoryLayout _NETCONNECTINFOSTRUCT$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NETCONNECTINFOSTRUCT$dwFlags$LAYOUT() { return _NETCONNECTINFOSTRUCT$dwFlags$LAYOUT_; }

    static final VarHandle _NETCONNECTINFOSTRUCT$dwFlags$VH_ = _NETCONNECTINFOSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _NETCONNECTINFOSTRUCT$dwFlags$VH() { return _NETCONNECTINFOSTRUCT$dwFlags$VH_; }

    static final MemoryLayout _NETCONNECTINFOSTRUCT$dwSpeed$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NETCONNECTINFOSTRUCT$dwSpeed$LAYOUT() { return _NETCONNECTINFOSTRUCT$dwSpeed$LAYOUT_; }

    static final VarHandle _NETCONNECTINFOSTRUCT$dwSpeed$VH_ = _NETCONNECTINFOSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSpeed"));
    static final java.lang.invoke.VarHandle _NETCONNECTINFOSTRUCT$dwSpeed$VH() { return _NETCONNECTINFOSTRUCT$dwSpeed$VH_; }

    static final MemoryLayout _NETCONNECTINFOSTRUCT$dwDelay$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NETCONNECTINFOSTRUCT$dwDelay$LAYOUT() { return _NETCONNECTINFOSTRUCT$dwDelay$LAYOUT_; }

    static final VarHandle _NETCONNECTINFOSTRUCT$dwDelay$VH_ = _NETCONNECTINFOSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwDelay"));
    static final java.lang.invoke.VarHandle _NETCONNECTINFOSTRUCT$dwDelay$VH() { return _NETCONNECTINFOSTRUCT$dwDelay$VH_; }

    static final MemoryLayout _NETCONNECTINFOSTRUCT$dwOptDataSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NETCONNECTINFOSTRUCT$dwOptDataSize$LAYOUT() { return _NETCONNECTINFOSTRUCT$dwOptDataSize$LAYOUT_; }

    static final VarHandle _NETCONNECTINFOSTRUCT$dwOptDataSize$VH_ = _NETCONNECTINFOSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwOptDataSize"));
    static final java.lang.invoke.VarHandle _NETCONNECTINFOSTRUCT$dwOptDataSize$VH() { return _NETCONNECTINFOSTRUCT$dwOptDataSize$VH_; }

    static final FunctionDescriptor MultinetGetConnectionPerformanceA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor MultinetGetConnectionPerformanceA$FUNC() { return MultinetGetConnectionPerformanceA$FUNC_; }

    static final MethodHandle MultinetGetConnectionPerformanceA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "MultinetGetConnectionPerformanceA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        MultinetGetConnectionPerformanceA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle MultinetGetConnectionPerformanceA$MH() { return MultinetGetConnectionPerformanceA$MH_; }

    static final FunctionDescriptor MultinetGetConnectionPerformanceW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor MultinetGetConnectionPerformanceW$FUNC() { return MultinetGetConnectionPerformanceW$FUNC_; }

    static final MethodHandle MultinetGetConnectionPerformanceW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "MultinetGetConnectionPerformanceW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        MultinetGetConnectionPerformanceW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle MultinetGetConnectionPerformanceW$MH() { return MultinetGetConnectionPerformanceW$MH_; }

    static final MemoryLayout DDEACK$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT
    );
    static final jdk.incubator.foreign.MemoryLayout DDEACK$struct$LAYOUT() { return DDEACK$struct$LAYOUT_; }

    static final MemoryLayout DDEADVISE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT,
        C_SHORT.withName("cfFormat")
    );
    static final jdk.incubator.foreign.MemoryLayout DDEADVISE$struct$LAYOUT() { return DDEADVISE$struct$LAYOUT_; }

    static final MemoryLayout DDEADVISE$cfFormat$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout DDEADVISE$cfFormat$LAYOUT() { return DDEADVISE$cfFormat$LAYOUT_; }

    static final VarHandle DDEADVISE$cfFormat$VH_ = DDEADVISE$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cfFormat"));
    static final java.lang.invoke.VarHandle DDEADVISE$cfFormat$VH() { return DDEADVISE$cfFormat$VH_; }

    static final MemoryLayout DDEDATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT,
        C_SHORT.withName("cfFormat"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("Value"),
        MemoryLayout.ofPaddingBits(8)
    );
    static final jdk.incubator.foreign.MemoryLayout DDEDATA$struct$LAYOUT() { return DDEDATA$struct$LAYOUT_; }

    static final MemoryLayout DDEDATA$cfFormat$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout DDEDATA$cfFormat$LAYOUT() { return DDEDATA$cfFormat$LAYOUT_; }

    static final VarHandle DDEDATA$cfFormat$VH_ = DDEDATA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cfFormat"));
    static final java.lang.invoke.VarHandle DDEDATA$cfFormat$VH() { return DDEDATA$cfFormat$VH_; }

    static final MemoryLayout DDEPOKE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT,
        C_SHORT.withName("cfFormat"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("Value"),
        MemoryLayout.ofPaddingBits(8)
    );
    static final jdk.incubator.foreign.MemoryLayout DDEPOKE$struct$LAYOUT() { return DDEPOKE$struct$LAYOUT_; }

    static final MemoryLayout DDEPOKE$cfFormat$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout DDEPOKE$cfFormat$LAYOUT() { return DDEPOKE$cfFormat$LAYOUT_; }

    static final VarHandle DDEPOKE$cfFormat$VH_ = DDEPOKE$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cfFormat"));
    static final java.lang.invoke.VarHandle DDEPOKE$cfFormat$VH() { return DDEPOKE$cfFormat$VH_; }

    static final MemoryLayout DDELN$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT,
        C_SHORT.withName("cfFormat")
    );
    static final jdk.incubator.foreign.MemoryLayout DDELN$struct$LAYOUT() { return DDELN$struct$LAYOUT_; }

    static final MemoryLayout DDELN$cfFormat$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout DDELN$cfFormat$LAYOUT() { return DDELN$cfFormat$LAYOUT_; }

    static final VarHandle DDELN$cfFormat$VH_ = DDELN$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cfFormat"));
    static final java.lang.invoke.VarHandle DDELN$cfFormat$VH() { return DDELN$cfFormat$VH_; }

    static final MemoryLayout DDEUP$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT,
        C_SHORT.withName("cfFormat"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("rgb"),
        MemoryLayout.ofPaddingBits(8)
    );
    static final jdk.incubator.foreign.MemoryLayout DDEUP$struct$LAYOUT() { return DDEUP$struct$LAYOUT_; }

    static final MemoryLayout DDEUP$cfFormat$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout DDEUP$cfFormat$LAYOUT() { return DDEUP$cfFormat$LAYOUT_; }

    static final VarHandle DDEUP$cfFormat$VH_ = DDEUP$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cfFormat"));
    static final java.lang.invoke.VarHandle DDEUP$cfFormat$VH() { return DDEUP$cfFormat$VH_; }

    static final FunctionDescriptor DdeSetQualityOfService$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeSetQualityOfService$FUNC() { return DdeSetQualityOfService$FUNC_; }

    static final MethodHandle DdeSetQualityOfService$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeSetQualityOfService",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DdeSetQualityOfService$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeSetQualityOfService$MH() { return DdeSetQualityOfService$MH_; }

    static final FunctionDescriptor ImpersonateDdeClientWindow$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ImpersonateDdeClientWindow$FUNC() { return ImpersonateDdeClientWindow$FUNC_; }

    static final MethodHandle ImpersonateDdeClientWindow$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ImpersonateDdeClientWindow",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ImpersonateDdeClientWindow$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ImpersonateDdeClientWindow$MH() { return ImpersonateDdeClientWindow$MH_; }

    static final FunctionDescriptor PackDDElParam$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_INT,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor PackDDElParam$FUNC() { return PackDDElParam$FUNC_; }

    static final MethodHandle PackDDElParam$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "PackDDElParam",
        "(IJJ)J",
        PackDDElParam$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle PackDDElParam$MH() { return PackDDElParam$MH_; }

    static final FunctionDescriptor UnpackDDElParam$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor UnpackDDElParam$FUNC() { return UnpackDDElParam$FUNC_; }

    static final MethodHandle UnpackDDElParam$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "UnpackDDElParam",
        "(IJLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        UnpackDDElParam$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle UnpackDDElParam$MH() { return UnpackDDElParam$MH_; }

    static final FunctionDescriptor FreeDDElParam$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor FreeDDElParam$FUNC() { return FreeDDElParam$FUNC_; }

    static final MethodHandle FreeDDElParam$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FreeDDElParam",
        "(IJ)I",
        FreeDDElParam$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FreeDDElParam$MH() { return FreeDDElParam$MH_; }

    static final FunctionDescriptor ReuseDDElParam$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_LONGLONG,
        C_INT,
        C_INT,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReuseDDElParam$FUNC() { return ReuseDDElParam$FUNC_; }

    static final MethodHandle ReuseDDElParam$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReuseDDElParam",
        "(JIIJJ)J",
        ReuseDDElParam$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReuseDDElParam$MH() { return ReuseDDElParam$MH_; }

    static final MemoryLayout HCONVLIST__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HCONVLIST__");
    static final jdk.incubator.foreign.MemoryLayout HCONVLIST__$struct$LAYOUT() { return HCONVLIST__$struct$LAYOUT_; }

    static final MemoryLayout HCONVLIST__$unused$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout HCONVLIST__$unused$LAYOUT() { return HCONVLIST__$unused$LAYOUT_; }

    static final VarHandle HCONVLIST__$unused$VH_ = HCONVLIST__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    static final java.lang.invoke.VarHandle HCONVLIST__$unused$VH() { return HCONVLIST__$unused$VH_; }

    static final MemoryLayout HCONV__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HCONV__");
    static final jdk.incubator.foreign.MemoryLayout HCONV__$struct$LAYOUT() { return HCONV__$struct$LAYOUT_; }

    static final MemoryLayout HCONV__$unused$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout HCONV__$unused$LAYOUT() { return HCONV__$unused$LAYOUT_; }

    static final VarHandle HCONV__$unused$VH_ = HCONV__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    static final java.lang.invoke.VarHandle HCONV__$unused$VH() { return HCONV__$unused$VH_; }

    static final MemoryLayout HSZ__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HSZ__");
    static final jdk.incubator.foreign.MemoryLayout HSZ__$struct$LAYOUT() { return HSZ__$struct$LAYOUT_; }

    static final MemoryLayout HSZ__$unused$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout HSZ__$unused$LAYOUT() { return HSZ__$unused$LAYOUT_; }

    static final VarHandle HSZ__$unused$VH_ = HSZ__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    static final java.lang.invoke.VarHandle HSZ__$unused$VH() { return HSZ__$unused$VH_; }

    static final MemoryLayout HDDEDATA__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HDDEDATA__");
    static final jdk.incubator.foreign.MemoryLayout HDDEDATA__$struct$LAYOUT() { return HDDEDATA__$struct$LAYOUT_; }

    static final MemoryLayout HDDEDATA__$unused$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout HDDEDATA__$unused$LAYOUT() { return HDDEDATA__$unused$LAYOUT_; }

    static final VarHandle HDDEDATA__$unused$VH_ = HDDEDATA__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    static final java.lang.invoke.VarHandle HDDEDATA__$unused$VH() { return HDDEDATA__$unused$VH_; }

    static final MemoryLayout tagHSZPAIR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("hszSvc"),
        C_POINTER.withName("hszTopic")
    ).withName("tagHSZPAIR");
    static final jdk.incubator.foreign.MemoryLayout tagHSZPAIR$struct$LAYOUT() { return tagHSZPAIR$struct$LAYOUT_; }

    static final MemoryLayout tagHSZPAIR$hszSvc$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagHSZPAIR$hszSvc$LAYOUT() { return tagHSZPAIR$hszSvc$LAYOUT_; }

    static final VarHandle tagHSZPAIR$hszSvc$VH_ = MemoryHandles.asAddressVarHandle(tagHSZPAIR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hszSvc")));
    static final java.lang.invoke.VarHandle tagHSZPAIR$hszSvc$VH() { return tagHSZPAIR$hszSvc$VH_; }

    static final MemoryLayout tagHSZPAIR$hszTopic$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagHSZPAIR$hszTopic$LAYOUT() { return tagHSZPAIR$hszTopic$LAYOUT_; }

    static final VarHandle tagHSZPAIR$hszTopic$VH_ = MemoryHandles.asAddressVarHandle(tagHSZPAIR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hszTopic")));
    static final java.lang.invoke.VarHandle tagHSZPAIR$hszTopic$VH() { return tagHSZPAIR$hszTopic$VH_; }

    static final MemoryLayout tagCONVCONTEXT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("cb"),
        C_INT.withName("wFlags"),
        C_INT.withName("wCountryID"),
        C_INT.withName("iCodePage"),
        C_LONG.withName("dwLangID"),
        C_LONG.withName("dwSecurity"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Length"),
            C_INT.withName("ImpersonationLevel"),
            C_CHAR.withName("ContextTrackingMode"),
            C_CHAR.withName("EffectiveOnly"),
            MemoryLayout.ofPaddingBits(16)
        ).withName("qos")
    ).withName("tagCONVCONTEXT");
    static final jdk.incubator.foreign.MemoryLayout tagCONVCONTEXT$struct$LAYOUT() { return tagCONVCONTEXT$struct$LAYOUT_; }

    static final MemoryLayout tagCONVCONTEXT$cb$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagCONVCONTEXT$cb$LAYOUT() { return tagCONVCONTEXT$cb$LAYOUT_; }

    static final VarHandle tagCONVCONTEXT$cb$VH_ = tagCONVCONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cb"));
    static final java.lang.invoke.VarHandle tagCONVCONTEXT$cb$VH() { return tagCONVCONTEXT$cb$VH_; }

    static final MemoryLayout tagCONVCONTEXT$wFlags$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagCONVCONTEXT$wFlags$LAYOUT() { return tagCONVCONTEXT$wFlags$LAYOUT_; }

    static final VarHandle tagCONVCONTEXT$wFlags$VH_ = tagCONVCONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wFlags"));
    static final java.lang.invoke.VarHandle tagCONVCONTEXT$wFlags$VH() { return tagCONVCONTEXT$wFlags$VH_; }

    static final MemoryLayout tagCONVCONTEXT$wCountryID$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagCONVCONTEXT$wCountryID$LAYOUT() { return tagCONVCONTEXT$wCountryID$LAYOUT_; }

    static final VarHandle tagCONVCONTEXT$wCountryID$VH_ = tagCONVCONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wCountryID"));
    static final java.lang.invoke.VarHandle tagCONVCONTEXT$wCountryID$VH() { return tagCONVCONTEXT$wCountryID$VH_; }

    static final MemoryLayout tagCONVCONTEXT$iCodePage$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagCONVCONTEXT$iCodePage$LAYOUT() { return tagCONVCONTEXT$iCodePage$LAYOUT_; }

    static final VarHandle tagCONVCONTEXT$iCodePage$VH_ = tagCONVCONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iCodePage"));
    static final java.lang.invoke.VarHandle tagCONVCONTEXT$iCodePage$VH() { return tagCONVCONTEXT$iCodePage$VH_; }

    static final MemoryLayout tagCONVCONTEXT$dwLangID$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCONVCONTEXT$dwLangID$LAYOUT() { return tagCONVCONTEXT$dwLangID$LAYOUT_; }

    static final VarHandle tagCONVCONTEXT$dwLangID$VH_ = tagCONVCONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwLangID"));
    static final java.lang.invoke.VarHandle tagCONVCONTEXT$dwLangID$VH() { return tagCONVCONTEXT$dwLangID$VH_; }

    static final MemoryLayout tagCONVCONTEXT$dwSecurity$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCONVCONTEXT$dwSecurity$LAYOUT() { return tagCONVCONTEXT$dwSecurity$LAYOUT_; }

    static final VarHandle tagCONVCONTEXT$dwSecurity$VH_ = tagCONVCONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSecurity"));
    static final java.lang.invoke.VarHandle tagCONVCONTEXT$dwSecurity$VH() { return tagCONVCONTEXT$dwSecurity$VH_; }

    static final MemoryLayout tagCONVINFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cb"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("hUser"),
        C_POINTER.withName("hConvPartner"),
        C_POINTER.withName("hszSvcPartner"),
        C_POINTER.withName("hszServiceReq"),
        C_POINTER.withName("hszTopic"),
        C_POINTER.withName("hszItem"),
        C_INT.withName("wFmt"),
        C_INT.withName("wType"),
        C_INT.withName("wStatus"),
        C_INT.withName("wConvst"),
        C_INT.withName("wLastError"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hConvList"),
        MemoryLayout.ofStruct(
            C_INT.withName("cb"),
            C_INT.withName("wFlags"),
            C_INT.withName("wCountryID"),
            C_INT.withName("iCodePage"),
            C_LONG.withName("dwLangID"),
            C_LONG.withName("dwSecurity"),
            MemoryLayout.ofStruct(
                C_LONG.withName("Length"),
                C_INT.withName("ImpersonationLevel"),
                C_CHAR.withName("ContextTrackingMode"),
                C_CHAR.withName("EffectiveOnly"),
                MemoryLayout.ofPaddingBits(16)
            ).withName("qos")
        ).withName("ConvCtxt"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hwnd"),
        C_POINTER.withName("hwndPartner")
    ).withName("tagCONVINFO");
    static final jdk.incubator.foreign.MemoryLayout tagCONVINFO$struct$LAYOUT() { return tagCONVINFO$struct$LAYOUT_; }

    static final MemoryLayout tagCONVINFO$cb$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCONVINFO$cb$LAYOUT() { return tagCONVINFO$cb$LAYOUT_; }

    static final VarHandle tagCONVINFO$cb$VH_ = tagCONVINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cb"));
    static final java.lang.invoke.VarHandle tagCONVINFO$cb$VH() { return tagCONVINFO$cb$VH_; }

    static final MemoryLayout tagCONVINFO$hUser$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagCONVINFO$hUser$LAYOUT() { return tagCONVINFO$hUser$LAYOUT_; }

    static final VarHandle tagCONVINFO$hUser$VH_ = tagCONVINFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hUser"));
    static final java.lang.invoke.VarHandle tagCONVINFO$hUser$VH() { return tagCONVINFO$hUser$VH_; }

    static final MemoryLayout tagCONVINFO$hConvPartner$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCONVINFO$hConvPartner$LAYOUT() { return tagCONVINFO$hConvPartner$LAYOUT_; }

    static final VarHandle tagCONVINFO$hConvPartner$VH_ = MemoryHandles.asAddressVarHandle(tagCONVINFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hConvPartner")));
    static final java.lang.invoke.VarHandle tagCONVINFO$hConvPartner$VH() { return tagCONVINFO$hConvPartner$VH_; }

    static final MemoryLayout tagCONVINFO$hszSvcPartner$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCONVINFO$hszSvcPartner$LAYOUT() { return tagCONVINFO$hszSvcPartner$LAYOUT_; }

    static final VarHandle tagCONVINFO$hszSvcPartner$VH_ = MemoryHandles.asAddressVarHandle(tagCONVINFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hszSvcPartner")));
    static final java.lang.invoke.VarHandle tagCONVINFO$hszSvcPartner$VH() { return tagCONVINFO$hszSvcPartner$VH_; }

    static final MemoryLayout tagCONVINFO$hszServiceReq$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCONVINFO$hszServiceReq$LAYOUT() { return tagCONVINFO$hszServiceReq$LAYOUT_; }

    static final VarHandle tagCONVINFO$hszServiceReq$VH_ = MemoryHandles.asAddressVarHandle(tagCONVINFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hszServiceReq")));
    static final java.lang.invoke.VarHandle tagCONVINFO$hszServiceReq$VH() { return tagCONVINFO$hszServiceReq$VH_; }

    static final MemoryLayout tagCONVINFO$hszTopic$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCONVINFO$hszTopic$LAYOUT() { return tagCONVINFO$hszTopic$LAYOUT_; }

    static final VarHandle tagCONVINFO$hszTopic$VH_ = MemoryHandles.asAddressVarHandle(tagCONVINFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hszTopic")));
    static final java.lang.invoke.VarHandle tagCONVINFO$hszTopic$VH() { return tagCONVINFO$hszTopic$VH_; }

    static final MemoryLayout tagCONVINFO$hszItem$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCONVINFO$hszItem$LAYOUT() { return tagCONVINFO$hszItem$LAYOUT_; }

    static final VarHandle tagCONVINFO$hszItem$VH_ = MemoryHandles.asAddressVarHandle(tagCONVINFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hszItem")));
    static final java.lang.invoke.VarHandle tagCONVINFO$hszItem$VH() { return tagCONVINFO$hszItem$VH_; }

    static final MemoryLayout tagCONVINFO$wFmt$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagCONVINFO$wFmt$LAYOUT() { return tagCONVINFO$wFmt$LAYOUT_; }

    static final VarHandle tagCONVINFO$wFmt$VH_ = tagCONVINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wFmt"));
    static final java.lang.invoke.VarHandle tagCONVINFO$wFmt$VH() { return tagCONVINFO$wFmt$VH_; }

    static final MemoryLayout tagCONVINFO$wType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagCONVINFO$wType$LAYOUT() { return tagCONVINFO$wType$LAYOUT_; }

    static final VarHandle tagCONVINFO$wType$VH_ = tagCONVINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wType"));
    static final java.lang.invoke.VarHandle tagCONVINFO$wType$VH() { return tagCONVINFO$wType$VH_; }

    static final MemoryLayout tagCONVINFO$wStatus$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagCONVINFO$wStatus$LAYOUT() { return tagCONVINFO$wStatus$LAYOUT_; }

    static final VarHandle tagCONVINFO$wStatus$VH_ = tagCONVINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wStatus"));
    static final java.lang.invoke.VarHandle tagCONVINFO$wStatus$VH() { return tagCONVINFO$wStatus$VH_; }

    static final MemoryLayout tagCONVINFO$wConvst$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagCONVINFO$wConvst$LAYOUT() { return tagCONVINFO$wConvst$LAYOUT_; }

    static final VarHandle tagCONVINFO$wConvst$VH_ = tagCONVINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wConvst"));
    static final java.lang.invoke.VarHandle tagCONVINFO$wConvst$VH() { return tagCONVINFO$wConvst$VH_; }

    static final MemoryLayout tagCONVINFO$wLastError$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagCONVINFO$wLastError$LAYOUT() { return tagCONVINFO$wLastError$LAYOUT_; }

    static final VarHandle tagCONVINFO$wLastError$VH_ = tagCONVINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wLastError"));
    static final java.lang.invoke.VarHandle tagCONVINFO$wLastError$VH() { return tagCONVINFO$wLastError$VH_; }

    static final MemoryLayout tagCONVINFO$hConvList$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCONVINFO$hConvList$LAYOUT() { return tagCONVINFO$hConvList$LAYOUT_; }

    static final VarHandle tagCONVINFO$hConvList$VH_ = MemoryHandles.asAddressVarHandle(tagCONVINFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hConvList")));
    static final java.lang.invoke.VarHandle tagCONVINFO$hConvList$VH() { return tagCONVINFO$hConvList$VH_; }

    static final MemoryLayout tagCONVINFO$hwnd$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCONVINFO$hwnd$LAYOUT() { return tagCONVINFO$hwnd$LAYOUT_; }

    static final VarHandle tagCONVINFO$hwnd$VH_ = MemoryHandles.asAddressVarHandle(tagCONVINFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwnd")));
    static final java.lang.invoke.VarHandle tagCONVINFO$hwnd$VH() { return tagCONVINFO$hwnd$VH_; }

    static final MemoryLayout tagCONVINFO$hwndPartner$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCONVINFO$hwndPartner$LAYOUT() { return tagCONVINFO$hwndPartner$LAYOUT_; }

    static final VarHandle tagCONVINFO$hwndPartner$VH_ = MemoryHandles.asAddressVarHandle(tagCONVINFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndPartner")));
    static final java.lang.invoke.VarHandle tagCONVINFO$hwndPartner$VH() { return tagCONVINFO$hwndPartner$VH_; }

    static final FunctionDescriptor DdeInitializeA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeInitializeA$FUNC() { return DdeInitializeA$FUNC_; }

    static final MethodHandle DdeInitializeA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeInitializeA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        DdeInitializeA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeInitializeA$MH() { return DdeInitializeA$MH_; }

    static final FunctionDescriptor DdeInitializeA$pfnCallback$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeInitializeA$pfnCallback$FUNC() { return DdeInitializeA$pfnCallback$FUNC_; }

    static final FunctionDescriptor DdeInitializeW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeInitializeW$FUNC() { return DdeInitializeW$FUNC_; }

    static final MethodHandle DdeInitializeW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeInitializeW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        DdeInitializeW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeInitializeW$MH() { return DdeInitializeW$MH_; }

    static final FunctionDescriptor DdeInitializeW$pfnCallback$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeInitializeW$pfnCallback$FUNC() { return DdeInitializeW$pfnCallback$FUNC_; }

    static final FunctionDescriptor DdeUninitialize$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeUninitialize$FUNC() { return DdeUninitialize$FUNC_; }

    static final MethodHandle DdeUninitialize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeUninitialize",
        "(I)I",
        DdeUninitialize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeUninitialize$MH() { return DdeUninitialize$MH_; }

    static final FunctionDescriptor DdeConnectList$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeConnectList$FUNC() { return DdeConnectList$FUNC_; }

    static final MethodHandle DdeConnectList$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeConnectList",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        DdeConnectList$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeConnectList$MH() { return DdeConnectList$MH_; }

    static final FunctionDescriptor DdeQueryNextServer$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeQueryNextServer$FUNC() { return DdeQueryNextServer$FUNC_; }

    static final MethodHandle DdeQueryNextServer$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeQueryNextServer",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        DdeQueryNextServer$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeQueryNextServer$MH() { return DdeQueryNextServer$MH_; }

    static final FunctionDescriptor DdeDisconnectList$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeDisconnectList$FUNC() { return DdeDisconnectList$FUNC_; }

    static final MethodHandle DdeDisconnectList$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeDisconnectList",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        DdeDisconnectList$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeDisconnectList$MH() { return DdeDisconnectList$MH_; }

    static final FunctionDescriptor DdeConnect$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeConnect$FUNC() { return DdeConnect$FUNC_; }

    static final MethodHandle DdeConnect$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeConnect",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        DdeConnect$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeConnect$MH() { return DdeConnect$MH_; }

    static final FunctionDescriptor DdeDisconnect$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeDisconnect$FUNC() { return DdeDisconnect$FUNC_; }

    static final MethodHandle DdeDisconnect$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeDisconnect",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        DdeDisconnect$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeDisconnect$MH() { return DdeDisconnect$MH_; }

    static final FunctionDescriptor DdeReconnect$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeReconnect$FUNC() { return DdeReconnect$FUNC_; }

    static final MethodHandle DdeReconnect$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeReconnect",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        DdeReconnect$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeReconnect$MH() { return DdeReconnect$MH_; }

    static final FunctionDescriptor DdeQueryConvInfo$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeQueryConvInfo$FUNC() { return DdeQueryConvInfo$FUNC_; }

    static final MethodHandle DdeQueryConvInfo$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeQueryConvInfo",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        DdeQueryConvInfo$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeQueryConvInfo$MH() { return DdeQueryConvInfo$MH_; }

    static final FunctionDescriptor DdeSetUserHandle$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeSetUserHandle$FUNC() { return DdeSetUserHandle$FUNC_; }

    static final MethodHandle DdeSetUserHandle$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeSetUserHandle",
        "(Ljdk/incubator/foreign/MemoryAddress;IJ)I",
        DdeSetUserHandle$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeSetUserHandle$MH() { return DdeSetUserHandle$MH_; }

    static final FunctionDescriptor DdeAbandonTransaction$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeAbandonTransaction$FUNC() { return DdeAbandonTransaction$FUNC_; }

    static final MethodHandle DdeAbandonTransaction$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeAbandonTransaction",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        DdeAbandonTransaction$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeAbandonTransaction$MH() { return DdeAbandonTransaction$MH_; }

    static final FunctionDescriptor DdePostAdvise$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdePostAdvise$FUNC() { return DdePostAdvise$FUNC_; }

    static final MethodHandle DdePostAdvise$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdePostAdvise",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DdePostAdvise$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdePostAdvise$MH() { return DdePostAdvise$MH_; }

    static final FunctionDescriptor DdeEnableCallback$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeEnableCallback$FUNC() { return DdeEnableCallback$FUNC_; }

    static final MethodHandle DdeEnableCallback$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeEnableCallback",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        DdeEnableCallback$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeEnableCallback$MH() { return DdeEnableCallback$MH_; }

    static final FunctionDescriptor DdeImpersonateClient$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeImpersonateClient$FUNC() { return DdeImpersonateClient$FUNC_; }

    static final MethodHandle DdeImpersonateClient$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeImpersonateClient",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        DdeImpersonateClient$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeImpersonateClient$MH() { return DdeImpersonateClient$MH_; }

    static final FunctionDescriptor DdeNameService$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeNameService$FUNC() { return DdeNameService$FUNC_; }

    static final MethodHandle DdeNameService$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeNameService",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        DdeNameService$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeNameService$MH() { return DdeNameService$MH_; }

    static final FunctionDescriptor DdeClientTransaction$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeClientTransaction$FUNC() { return DdeClientTransaction$FUNC_; }

    static final MethodHandle DdeClientTransaction$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeClientTransaction",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        DdeClientTransaction$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeClientTransaction$MH() { return DdeClientTransaction$MH_; }

    static final FunctionDescriptor DdeCreateDataHandle$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeCreateDataHandle$FUNC() { return DdeCreateDataHandle$FUNC_; }

    static final MethodHandle DdeCreateDataHandle$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeCreateDataHandle",
        "(ILjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;II)Ljdk/incubator/foreign/MemoryAddress;",
        DdeCreateDataHandle$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeCreateDataHandle$MH() { return DdeCreateDataHandle$MH_; }

    static final FunctionDescriptor DdeAddData$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeAddData$FUNC() { return DdeAddData$FUNC_; }

    static final MethodHandle DdeAddData$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeAddData",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)Ljdk/incubator/foreign/MemoryAddress;",
        DdeAddData$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeAddData$MH() { return DdeAddData$MH_; }

    static final FunctionDescriptor DdeGetData$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeGetData$FUNC() { return DdeGetData$FUNC_; }

    static final MethodHandle DdeGetData$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeGetData",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        DdeGetData$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeGetData$MH() { return DdeGetData$MH_; }

    static final FunctionDescriptor DdeAccessData$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeAccessData$FUNC() { return DdeAccessData$FUNC_; }

    static final MethodHandle DdeAccessData$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeAccessData",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        DdeAccessData$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeAccessData$MH() { return DdeAccessData$MH_; }

    static final FunctionDescriptor DdeUnaccessData$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeUnaccessData$FUNC() { return DdeUnaccessData$FUNC_; }

    static final MethodHandle DdeUnaccessData$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeUnaccessData",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        DdeUnaccessData$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeUnaccessData$MH() { return DdeUnaccessData$MH_; }

    static final FunctionDescriptor DdeFreeDataHandle$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeFreeDataHandle$FUNC() { return DdeFreeDataHandle$FUNC_; }

    static final MethodHandle DdeFreeDataHandle$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeFreeDataHandle",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        DdeFreeDataHandle$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeFreeDataHandle$MH() { return DdeFreeDataHandle$MH_; }

    static final FunctionDescriptor DdeGetLastError$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeGetLastError$FUNC() { return DdeGetLastError$FUNC_; }

    static final MethodHandle DdeGetLastError$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeGetLastError",
        "(I)I",
        DdeGetLastError$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeGetLastError$MH() { return DdeGetLastError$MH_; }

    static final FunctionDescriptor DdeCreateStringHandleA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeCreateStringHandleA$FUNC() { return DdeCreateStringHandleA$FUNC_; }

    static final MethodHandle DdeCreateStringHandleA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeCreateStringHandleA",
        "(ILjdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        DdeCreateStringHandleA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeCreateStringHandleA$MH() { return DdeCreateStringHandleA$MH_; }

    static final FunctionDescriptor DdeCreateStringHandleW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeCreateStringHandleW$FUNC() { return DdeCreateStringHandleW$FUNC_; }

    static final MethodHandle DdeCreateStringHandleW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeCreateStringHandleW",
        "(ILjdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        DdeCreateStringHandleW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeCreateStringHandleW$MH() { return DdeCreateStringHandleW$MH_; }

    static final FunctionDescriptor DdeQueryStringA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeQueryStringA$FUNC() { return DdeQueryStringA$FUNC_; }

    static final MethodHandle DdeQueryStringA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeQueryStringA",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        DdeQueryStringA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeQueryStringA$MH() { return DdeQueryStringA$MH_; }

    static final FunctionDescriptor DdeQueryStringW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeQueryStringW$FUNC() { return DdeQueryStringW$FUNC_; }

    static final MethodHandle DdeQueryStringW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeQueryStringW",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        DdeQueryStringW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeQueryStringW$MH() { return DdeQueryStringW$MH_; }

    static final FunctionDescriptor DdeFreeStringHandle$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeFreeStringHandle$FUNC() { return DdeFreeStringHandle$FUNC_; }

    static final MethodHandle DdeFreeStringHandle$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeFreeStringHandle",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        DdeFreeStringHandle$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeFreeStringHandle$MH() { return DdeFreeStringHandle$MH_; }

    static final FunctionDescriptor DdeKeepStringHandle$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeKeepStringHandle$FUNC() { return DdeKeepStringHandle$FUNC_; }

    static final MethodHandle DdeKeepStringHandle$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeKeepStringHandle",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        DdeKeepStringHandle$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeKeepStringHandle$MH() { return DdeKeepStringHandle$MH_; }

    static final FunctionDescriptor DdeCmpStringHandles$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DdeCmpStringHandles$FUNC() { return DdeCmpStringHandles$FUNC_; }

    static final MethodHandle DdeCmpStringHandles$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DdeCmpStringHandles",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DdeCmpStringHandles$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DdeCmpStringHandles$MH() { return DdeCmpStringHandles$MH_; }

    static final MemoryLayout tagDDEML_MSG_HOOK_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("uiLo"),
        C_LONGLONG.withName("uiHi"),
        C_LONG.withName("cbData"),
        MemoryLayout.ofSequence(8, C_LONG).withName("Data"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagDDEML_MSG_HOOK_DATA");
    static final jdk.incubator.foreign.MemoryLayout tagDDEML_MSG_HOOK_DATA$struct$LAYOUT() { return tagDDEML_MSG_HOOK_DATA$struct$LAYOUT_; }

    static final MemoryLayout tagDDEML_MSG_HOOK_DATA$uiLo$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagDDEML_MSG_HOOK_DATA$uiLo$LAYOUT() { return tagDDEML_MSG_HOOK_DATA$uiLo$LAYOUT_; }

    static final VarHandle tagDDEML_MSG_HOOK_DATA$uiLo$VH_ = tagDDEML_MSG_HOOK_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("uiLo"));
    static final java.lang.invoke.VarHandle tagDDEML_MSG_HOOK_DATA$uiLo$VH() { return tagDDEML_MSG_HOOK_DATA$uiLo$VH_; }

    static final MemoryLayout tagDDEML_MSG_HOOK_DATA$uiHi$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagDDEML_MSG_HOOK_DATA$uiHi$LAYOUT() { return tagDDEML_MSG_HOOK_DATA$uiHi$LAYOUT_; }

    static final VarHandle tagDDEML_MSG_HOOK_DATA$uiHi$VH_ = tagDDEML_MSG_HOOK_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("uiHi"));
    static final java.lang.invoke.VarHandle tagDDEML_MSG_HOOK_DATA$uiHi$VH() { return tagDDEML_MSG_HOOK_DATA$uiHi$VH_; }

    static final MemoryLayout tagDDEML_MSG_HOOK_DATA$cbData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagDDEML_MSG_HOOK_DATA$cbData$LAYOUT() { return tagDDEML_MSG_HOOK_DATA$cbData$LAYOUT_; }

    static final VarHandle tagDDEML_MSG_HOOK_DATA$cbData$VH_ = tagDDEML_MSG_HOOK_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    static final java.lang.invoke.VarHandle tagDDEML_MSG_HOOK_DATA$cbData$VH() { return tagDDEML_MSG_HOOK_DATA$cbData$VH_; }

    static final MemoryLayout tagMONMSGSTRUCT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("cb"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hwndTo"),
        C_LONG.withName("dwTime"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hTask"),
        C_INT.withName("wMsg"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("wParam"),
        C_LONGLONG.withName("lParam"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("uiLo"),
            C_LONGLONG.withName("uiHi"),
            C_LONG.withName("cbData"),
            MemoryLayout.ofSequence(8, C_LONG).withName("Data"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("dmhd")
    ).withName("tagMONMSGSTRUCT");
    static final jdk.incubator.foreign.MemoryLayout tagMONMSGSTRUCT$struct$LAYOUT() { return tagMONMSGSTRUCT$struct$LAYOUT_; }

    static final MemoryLayout tagMONMSGSTRUCT$cb$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMONMSGSTRUCT$cb$LAYOUT() { return tagMONMSGSTRUCT$cb$LAYOUT_; }

    static final VarHandle tagMONMSGSTRUCT$cb$VH_ = tagMONMSGSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cb"));
    static final java.lang.invoke.VarHandle tagMONMSGSTRUCT$cb$VH() { return tagMONMSGSTRUCT$cb$VH_; }

    static final MemoryLayout tagMONMSGSTRUCT$hwndTo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONMSGSTRUCT$hwndTo$LAYOUT() { return tagMONMSGSTRUCT$hwndTo$LAYOUT_; }

    static final VarHandle tagMONMSGSTRUCT$hwndTo$VH_ = MemoryHandles.asAddressVarHandle(tagMONMSGSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndTo")));
    static final java.lang.invoke.VarHandle tagMONMSGSTRUCT$hwndTo$VH() { return tagMONMSGSTRUCT$hwndTo$VH_; }

    static final MemoryLayout tagMONMSGSTRUCT$dwTime$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMONMSGSTRUCT$dwTime$LAYOUT() { return tagMONMSGSTRUCT$dwTime$LAYOUT_; }

    static final VarHandle tagMONMSGSTRUCT$dwTime$VH_ = tagMONMSGSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwTime"));
    static final java.lang.invoke.VarHandle tagMONMSGSTRUCT$dwTime$VH() { return tagMONMSGSTRUCT$dwTime$VH_; }

    static final MemoryLayout tagMONMSGSTRUCT$hTask$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONMSGSTRUCT$hTask$LAYOUT() { return tagMONMSGSTRUCT$hTask$LAYOUT_; }

    static final VarHandle tagMONMSGSTRUCT$hTask$VH_ = MemoryHandles.asAddressVarHandle(tagMONMSGSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hTask")));
    static final java.lang.invoke.VarHandle tagMONMSGSTRUCT$hTask$VH() { return tagMONMSGSTRUCT$hTask$VH_; }

    static final MemoryLayout tagMONMSGSTRUCT$wMsg$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMONMSGSTRUCT$wMsg$LAYOUT() { return tagMONMSGSTRUCT$wMsg$LAYOUT_; }

    static final VarHandle tagMONMSGSTRUCT$wMsg$VH_ = tagMONMSGSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wMsg"));
    static final java.lang.invoke.VarHandle tagMONMSGSTRUCT$wMsg$VH() { return tagMONMSGSTRUCT$wMsg$VH_; }

    static final MemoryLayout tagMONMSGSTRUCT$wParam$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagMONMSGSTRUCT$wParam$LAYOUT() { return tagMONMSGSTRUCT$wParam$LAYOUT_; }

    static final VarHandle tagMONMSGSTRUCT$wParam$VH_ = tagMONMSGSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("wParam"));
    static final java.lang.invoke.VarHandle tagMONMSGSTRUCT$wParam$VH() { return tagMONMSGSTRUCT$wParam$VH_; }

    static final MemoryLayout tagMONMSGSTRUCT$lParam$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagMONMSGSTRUCT$lParam$LAYOUT() { return tagMONMSGSTRUCT$lParam$LAYOUT_; }

    static final VarHandle tagMONMSGSTRUCT$lParam$VH_ = tagMONMSGSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lParam"));
    static final java.lang.invoke.VarHandle tagMONMSGSTRUCT$lParam$VH() { return tagMONMSGSTRUCT$lParam$VH_; }

    static final MemoryLayout tagMONCBSTRUCT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("cb"),
        C_LONG.withName("dwTime"),
        C_POINTER.withName("hTask"),
        C_LONG.withName("dwRet"),
        C_INT.withName("wType"),
        C_INT.withName("wFmt"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hConv"),
        C_POINTER.withName("hsz1"),
        C_POINTER.withName("hsz2"),
        C_POINTER.withName("hData"),
        C_LONGLONG.withName("dwData1"),
        C_LONGLONG.withName("dwData2"),
        MemoryLayout.ofStruct(
            C_INT.withName("cb"),
            C_INT.withName("wFlags"),
            C_INT.withName("wCountryID"),
            C_INT.withName("iCodePage"),
            C_LONG.withName("dwLangID"),
            C_LONG.withName("dwSecurity"),
            MemoryLayout.ofStruct(
                C_LONG.withName("Length"),
                C_INT.withName("ImpersonationLevel"),
                C_CHAR.withName("ContextTrackingMode"),
                C_CHAR.withName("EffectiveOnly"),
                MemoryLayout.ofPaddingBits(16)
            ).withName("qos")
        ).withName("cc"),
        C_LONG.withName("cbData"),
        MemoryLayout.ofSequence(8, C_LONG).withName("Data")
    ).withName("tagMONCBSTRUCT");
    static final jdk.incubator.foreign.MemoryLayout tagMONCBSTRUCT$struct$LAYOUT() { return tagMONCBSTRUCT$struct$LAYOUT_; }

    static final MemoryLayout tagMONCBSTRUCT$cb$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMONCBSTRUCT$cb$LAYOUT() { return tagMONCBSTRUCT$cb$LAYOUT_; }

    static final VarHandle tagMONCBSTRUCT$cb$VH_ = tagMONCBSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cb"));
    static final java.lang.invoke.VarHandle tagMONCBSTRUCT$cb$VH() { return tagMONCBSTRUCT$cb$VH_; }

    static final MemoryLayout tagMONCBSTRUCT$dwTime$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMONCBSTRUCT$dwTime$LAYOUT() { return tagMONCBSTRUCT$dwTime$LAYOUT_; }

    static final VarHandle tagMONCBSTRUCT$dwTime$VH_ = tagMONCBSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwTime"));
    static final java.lang.invoke.VarHandle tagMONCBSTRUCT$dwTime$VH() { return tagMONCBSTRUCT$dwTime$VH_; }

    static final MemoryLayout tagMONCBSTRUCT$hTask$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONCBSTRUCT$hTask$LAYOUT() { return tagMONCBSTRUCT$hTask$LAYOUT_; }

    static final VarHandle tagMONCBSTRUCT$hTask$VH_ = MemoryHandles.asAddressVarHandle(tagMONCBSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hTask")));
    static final java.lang.invoke.VarHandle tagMONCBSTRUCT$hTask$VH() { return tagMONCBSTRUCT$hTask$VH_; }

    static final MemoryLayout tagMONCBSTRUCT$dwRet$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMONCBSTRUCT$dwRet$LAYOUT() { return tagMONCBSTRUCT$dwRet$LAYOUT_; }

    static final VarHandle tagMONCBSTRUCT$dwRet$VH_ = tagMONCBSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRet"));
    static final java.lang.invoke.VarHandle tagMONCBSTRUCT$dwRet$VH() { return tagMONCBSTRUCT$dwRet$VH_; }

    static final MemoryLayout tagMONCBSTRUCT$wType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMONCBSTRUCT$wType$LAYOUT() { return tagMONCBSTRUCT$wType$LAYOUT_; }

    static final VarHandle tagMONCBSTRUCT$wType$VH_ = tagMONCBSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wType"));
    static final java.lang.invoke.VarHandle tagMONCBSTRUCT$wType$VH() { return tagMONCBSTRUCT$wType$VH_; }

    static final MemoryLayout tagMONCBSTRUCT$wFmt$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMONCBSTRUCT$wFmt$LAYOUT() { return tagMONCBSTRUCT$wFmt$LAYOUT_; }

    static final VarHandle tagMONCBSTRUCT$wFmt$VH_ = tagMONCBSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wFmt"));
    static final java.lang.invoke.VarHandle tagMONCBSTRUCT$wFmt$VH() { return tagMONCBSTRUCT$wFmt$VH_; }

    static final MemoryLayout tagMONCBSTRUCT$hConv$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONCBSTRUCT$hConv$LAYOUT() { return tagMONCBSTRUCT$hConv$LAYOUT_; }

    static final VarHandle tagMONCBSTRUCT$hConv$VH_ = MemoryHandles.asAddressVarHandle(tagMONCBSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hConv")));
    static final java.lang.invoke.VarHandle tagMONCBSTRUCT$hConv$VH() { return tagMONCBSTRUCT$hConv$VH_; }

    static final MemoryLayout tagMONCBSTRUCT$hsz1$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONCBSTRUCT$hsz1$LAYOUT() { return tagMONCBSTRUCT$hsz1$LAYOUT_; }

    static final VarHandle tagMONCBSTRUCT$hsz1$VH_ = MemoryHandles.asAddressVarHandle(tagMONCBSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hsz1")));
    static final java.lang.invoke.VarHandle tagMONCBSTRUCT$hsz1$VH() { return tagMONCBSTRUCT$hsz1$VH_; }

    static final MemoryLayout tagMONCBSTRUCT$hsz2$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONCBSTRUCT$hsz2$LAYOUT() { return tagMONCBSTRUCT$hsz2$LAYOUT_; }

    static final VarHandle tagMONCBSTRUCT$hsz2$VH_ = MemoryHandles.asAddressVarHandle(tagMONCBSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hsz2")));
    static final java.lang.invoke.VarHandle tagMONCBSTRUCT$hsz2$VH() { return tagMONCBSTRUCT$hsz2$VH_; }

    static final MemoryLayout tagMONCBSTRUCT$hData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONCBSTRUCT$hData$LAYOUT() { return tagMONCBSTRUCT$hData$LAYOUT_; }

    static final VarHandle tagMONCBSTRUCT$hData$VH_ = MemoryHandles.asAddressVarHandle(tagMONCBSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hData")));
    static final java.lang.invoke.VarHandle tagMONCBSTRUCT$hData$VH() { return tagMONCBSTRUCT$hData$VH_; }

    static final MemoryLayout tagMONCBSTRUCT$dwData1$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagMONCBSTRUCT$dwData1$LAYOUT() { return tagMONCBSTRUCT$dwData1$LAYOUT_; }

    static final VarHandle tagMONCBSTRUCT$dwData1$VH_ = tagMONCBSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwData1"));
    static final java.lang.invoke.VarHandle tagMONCBSTRUCT$dwData1$VH() { return tagMONCBSTRUCT$dwData1$VH_; }

    static final MemoryLayout tagMONCBSTRUCT$dwData2$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagMONCBSTRUCT$dwData2$LAYOUT() { return tagMONCBSTRUCT$dwData2$LAYOUT_; }

    static final VarHandle tagMONCBSTRUCT$dwData2$VH_ = tagMONCBSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwData2"));
    static final java.lang.invoke.VarHandle tagMONCBSTRUCT$dwData2$VH() { return tagMONCBSTRUCT$dwData2$VH_; }

    static final MemoryLayout tagMONCBSTRUCT$cbData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMONCBSTRUCT$cbData$LAYOUT() { return tagMONCBSTRUCT$cbData$LAYOUT_; }

    static final VarHandle tagMONCBSTRUCT$cbData$VH_ = tagMONCBSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    static final java.lang.invoke.VarHandle tagMONCBSTRUCT$cbData$VH() { return tagMONCBSTRUCT$cbData$VH_; }

    static final MemoryLayout tagMONHSZSTRUCTA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("cb"),
        C_INT.withName("fsAction"),
        C_LONG.withName("dwTime"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hsz"),
        C_POINTER.withName("hTask"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("str"),
        MemoryLayout.ofPaddingBits(56)
    ).withName("tagMONHSZSTRUCTA");
    static final jdk.incubator.foreign.MemoryLayout tagMONHSZSTRUCTA$struct$LAYOUT() { return tagMONHSZSTRUCTA$struct$LAYOUT_; }

    static final MemoryLayout tagMONHSZSTRUCTA$cb$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMONHSZSTRUCTA$cb$LAYOUT() { return tagMONHSZSTRUCTA$cb$LAYOUT_; }

    static final VarHandle tagMONHSZSTRUCTA$cb$VH_ = tagMONHSZSTRUCTA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cb"));
    static final java.lang.invoke.VarHandle tagMONHSZSTRUCTA$cb$VH() { return tagMONHSZSTRUCTA$cb$VH_; }

    static final MemoryLayout tagMONHSZSTRUCTA$fsAction$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMONHSZSTRUCTA$fsAction$LAYOUT() { return tagMONHSZSTRUCTA$fsAction$LAYOUT_; }

    static final VarHandle tagMONHSZSTRUCTA$fsAction$VH_ = tagMONHSZSTRUCTA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fsAction"));
    static final java.lang.invoke.VarHandle tagMONHSZSTRUCTA$fsAction$VH() { return tagMONHSZSTRUCTA$fsAction$VH_; }

    static final MemoryLayout tagMONHSZSTRUCTA$dwTime$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMONHSZSTRUCTA$dwTime$LAYOUT() { return tagMONHSZSTRUCTA$dwTime$LAYOUT_; }

    static final VarHandle tagMONHSZSTRUCTA$dwTime$VH_ = tagMONHSZSTRUCTA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwTime"));
    static final java.lang.invoke.VarHandle tagMONHSZSTRUCTA$dwTime$VH() { return tagMONHSZSTRUCTA$dwTime$VH_; }

    static final MemoryLayout tagMONHSZSTRUCTA$hsz$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONHSZSTRUCTA$hsz$LAYOUT() { return tagMONHSZSTRUCTA$hsz$LAYOUT_; }

    static final VarHandle tagMONHSZSTRUCTA$hsz$VH_ = MemoryHandles.asAddressVarHandle(tagMONHSZSTRUCTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hsz")));
    static final java.lang.invoke.VarHandle tagMONHSZSTRUCTA$hsz$VH() { return tagMONHSZSTRUCTA$hsz$VH_; }

    static final MemoryLayout tagMONHSZSTRUCTA$hTask$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONHSZSTRUCTA$hTask$LAYOUT() { return tagMONHSZSTRUCTA$hTask$LAYOUT_; }

    static final VarHandle tagMONHSZSTRUCTA$hTask$VH_ = MemoryHandles.asAddressVarHandle(tagMONHSZSTRUCTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hTask")));
    static final java.lang.invoke.VarHandle tagMONHSZSTRUCTA$hTask$VH() { return tagMONHSZSTRUCTA$hTask$VH_; }

    static final MemoryLayout tagMONHSZSTRUCTW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("cb"),
        C_INT.withName("fsAction"),
        C_LONG.withName("dwTime"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hsz"),
        C_POINTER.withName("hTask"),
        MemoryLayout.ofSequence(1, C_SHORT).withName("str"),
        MemoryLayout.ofPaddingBits(48)
    ).withName("tagMONHSZSTRUCTW");
    static final jdk.incubator.foreign.MemoryLayout tagMONHSZSTRUCTW$struct$LAYOUT() { return tagMONHSZSTRUCTW$struct$LAYOUT_; }

    static final MemoryLayout tagMONHSZSTRUCTW$cb$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMONHSZSTRUCTW$cb$LAYOUT() { return tagMONHSZSTRUCTW$cb$LAYOUT_; }

    static final VarHandle tagMONHSZSTRUCTW$cb$VH_ = tagMONHSZSTRUCTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cb"));
    static final java.lang.invoke.VarHandle tagMONHSZSTRUCTW$cb$VH() { return tagMONHSZSTRUCTW$cb$VH_; }

    static final MemoryLayout tagMONHSZSTRUCTW$fsAction$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMONHSZSTRUCTW$fsAction$LAYOUT() { return tagMONHSZSTRUCTW$fsAction$LAYOUT_; }

    static final VarHandle tagMONHSZSTRUCTW$fsAction$VH_ = tagMONHSZSTRUCTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fsAction"));
    static final java.lang.invoke.VarHandle tagMONHSZSTRUCTW$fsAction$VH() { return tagMONHSZSTRUCTW$fsAction$VH_; }

    static final MemoryLayout tagMONHSZSTRUCTW$dwTime$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMONHSZSTRUCTW$dwTime$LAYOUT() { return tagMONHSZSTRUCTW$dwTime$LAYOUT_; }

    static final VarHandle tagMONHSZSTRUCTW$dwTime$VH_ = tagMONHSZSTRUCTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwTime"));
    static final java.lang.invoke.VarHandle tagMONHSZSTRUCTW$dwTime$VH() { return tagMONHSZSTRUCTW$dwTime$VH_; }

    static final MemoryLayout tagMONHSZSTRUCTW$hsz$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONHSZSTRUCTW$hsz$LAYOUT() { return tagMONHSZSTRUCTW$hsz$LAYOUT_; }

    static final VarHandle tagMONHSZSTRUCTW$hsz$VH_ = MemoryHandles.asAddressVarHandle(tagMONHSZSTRUCTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hsz")));
    static final java.lang.invoke.VarHandle tagMONHSZSTRUCTW$hsz$VH() { return tagMONHSZSTRUCTW$hsz$VH_; }

    static final MemoryLayout tagMONHSZSTRUCTW$hTask$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONHSZSTRUCTW$hTask$LAYOUT() { return tagMONHSZSTRUCTW$hTask$LAYOUT_; }

    static final VarHandle tagMONHSZSTRUCTW$hTask$VH_ = MemoryHandles.asAddressVarHandle(tagMONHSZSTRUCTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hTask")));
    static final java.lang.invoke.VarHandle tagMONHSZSTRUCTW$hTask$VH() { return tagMONHSZSTRUCTW$hTask$VH_; }

    static final MemoryLayout tagMONERRSTRUCT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("cb"),
        C_INT.withName("wLastError"),
        C_LONG.withName("dwTime"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hTask")
    ).withName("tagMONERRSTRUCT");
    static final jdk.incubator.foreign.MemoryLayout tagMONERRSTRUCT$struct$LAYOUT() { return tagMONERRSTRUCT$struct$LAYOUT_; }

    static final MemoryLayout tagMONERRSTRUCT$cb$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMONERRSTRUCT$cb$LAYOUT() { return tagMONERRSTRUCT$cb$LAYOUT_; }

    static final VarHandle tagMONERRSTRUCT$cb$VH_ = tagMONERRSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cb"));
    static final java.lang.invoke.VarHandle tagMONERRSTRUCT$cb$VH() { return tagMONERRSTRUCT$cb$VH_; }

    static final MemoryLayout tagMONERRSTRUCT$wLastError$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMONERRSTRUCT$wLastError$LAYOUT() { return tagMONERRSTRUCT$wLastError$LAYOUT_; }

    static final VarHandle tagMONERRSTRUCT$wLastError$VH_ = tagMONERRSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wLastError"));
    static final java.lang.invoke.VarHandle tagMONERRSTRUCT$wLastError$VH() { return tagMONERRSTRUCT$wLastError$VH_; }

    static final MemoryLayout tagMONERRSTRUCT$dwTime$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMONERRSTRUCT$dwTime$LAYOUT() { return tagMONERRSTRUCT$dwTime$LAYOUT_; }

    static final VarHandle tagMONERRSTRUCT$dwTime$VH_ = tagMONERRSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwTime"));
    static final java.lang.invoke.VarHandle tagMONERRSTRUCT$dwTime$VH() { return tagMONERRSTRUCT$dwTime$VH_; }

    static final MemoryLayout tagMONERRSTRUCT$hTask$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONERRSTRUCT$hTask$LAYOUT() { return tagMONERRSTRUCT$hTask$LAYOUT_; }

    static final VarHandle tagMONERRSTRUCT$hTask$VH_ = MemoryHandles.asAddressVarHandle(tagMONERRSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hTask")));
    static final java.lang.invoke.VarHandle tagMONERRSTRUCT$hTask$VH() { return tagMONERRSTRUCT$hTask$VH_; }

    static final MemoryLayout tagMONLINKSTRUCT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("cb"),
        C_LONG.withName("dwTime"),
        C_POINTER.withName("hTask"),
        C_INT.withName("fEstablished"),
        C_INT.withName("fNoData"),
        C_POINTER.withName("hszSvc"),
        C_POINTER.withName("hszTopic"),
        C_POINTER.withName("hszItem"),
        C_INT.withName("wFmt"),
        C_INT.withName("fServer"),
        C_POINTER.withName("hConvServer"),
        C_POINTER.withName("hConvClient")
    ).withName("tagMONLINKSTRUCT");
    static final jdk.incubator.foreign.MemoryLayout tagMONLINKSTRUCT$struct$LAYOUT() { return tagMONLINKSTRUCT$struct$LAYOUT_; }

    static final MemoryLayout tagMONLINKSTRUCT$cb$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMONLINKSTRUCT$cb$LAYOUT() { return tagMONLINKSTRUCT$cb$LAYOUT_; }

    static final VarHandle tagMONLINKSTRUCT$cb$VH_ = tagMONLINKSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cb"));
    static final java.lang.invoke.VarHandle tagMONLINKSTRUCT$cb$VH() { return tagMONLINKSTRUCT$cb$VH_; }

    static final MemoryLayout tagMONLINKSTRUCT$dwTime$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMONLINKSTRUCT$dwTime$LAYOUT() { return tagMONLINKSTRUCT$dwTime$LAYOUT_; }

    static final VarHandle tagMONLINKSTRUCT$dwTime$VH_ = tagMONLINKSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwTime"));
    static final java.lang.invoke.VarHandle tagMONLINKSTRUCT$dwTime$VH() { return tagMONLINKSTRUCT$dwTime$VH_; }

    static final MemoryLayout tagMONLINKSTRUCT$hTask$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONLINKSTRUCT$hTask$LAYOUT() { return tagMONLINKSTRUCT$hTask$LAYOUT_; }

    static final VarHandle tagMONLINKSTRUCT$hTask$VH_ = MemoryHandles.asAddressVarHandle(tagMONLINKSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hTask")));
    static final java.lang.invoke.VarHandle tagMONLINKSTRUCT$hTask$VH() { return tagMONLINKSTRUCT$hTask$VH_; }

    static final MemoryLayout tagMONLINKSTRUCT$fEstablished$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMONLINKSTRUCT$fEstablished$LAYOUT() { return tagMONLINKSTRUCT$fEstablished$LAYOUT_; }

    static final VarHandle tagMONLINKSTRUCT$fEstablished$VH_ = tagMONLINKSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fEstablished"));
    static final java.lang.invoke.VarHandle tagMONLINKSTRUCT$fEstablished$VH() { return tagMONLINKSTRUCT$fEstablished$VH_; }

    static final MemoryLayout tagMONLINKSTRUCT$fNoData$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMONLINKSTRUCT$fNoData$LAYOUT() { return tagMONLINKSTRUCT$fNoData$LAYOUT_; }

    static final VarHandle tagMONLINKSTRUCT$fNoData$VH_ = tagMONLINKSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fNoData"));
    static final java.lang.invoke.VarHandle tagMONLINKSTRUCT$fNoData$VH() { return tagMONLINKSTRUCT$fNoData$VH_; }

    static final MemoryLayout tagMONLINKSTRUCT$hszSvc$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONLINKSTRUCT$hszSvc$LAYOUT() { return tagMONLINKSTRUCT$hszSvc$LAYOUT_; }

    static final VarHandle tagMONLINKSTRUCT$hszSvc$VH_ = MemoryHandles.asAddressVarHandle(tagMONLINKSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hszSvc")));
    static final java.lang.invoke.VarHandle tagMONLINKSTRUCT$hszSvc$VH() { return tagMONLINKSTRUCT$hszSvc$VH_; }

    static final MemoryLayout tagMONLINKSTRUCT$hszTopic$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONLINKSTRUCT$hszTopic$LAYOUT() { return tagMONLINKSTRUCT$hszTopic$LAYOUT_; }

    static final VarHandle tagMONLINKSTRUCT$hszTopic$VH_ = MemoryHandles.asAddressVarHandle(tagMONLINKSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hszTopic")));
    static final java.lang.invoke.VarHandle tagMONLINKSTRUCT$hszTopic$VH() { return tagMONLINKSTRUCT$hszTopic$VH_; }

    static final MemoryLayout tagMONLINKSTRUCT$hszItem$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONLINKSTRUCT$hszItem$LAYOUT() { return tagMONLINKSTRUCT$hszItem$LAYOUT_; }

    static final VarHandle tagMONLINKSTRUCT$hszItem$VH_ = MemoryHandles.asAddressVarHandle(tagMONLINKSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hszItem")));
    static final java.lang.invoke.VarHandle tagMONLINKSTRUCT$hszItem$VH() { return tagMONLINKSTRUCT$hszItem$VH_; }

    static final MemoryLayout tagMONLINKSTRUCT$wFmt$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMONLINKSTRUCT$wFmt$LAYOUT() { return tagMONLINKSTRUCT$wFmt$LAYOUT_; }

    static final VarHandle tagMONLINKSTRUCT$wFmt$VH_ = tagMONLINKSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wFmt"));
    static final java.lang.invoke.VarHandle tagMONLINKSTRUCT$wFmt$VH() { return tagMONLINKSTRUCT$wFmt$VH_; }

    static final MemoryLayout tagMONLINKSTRUCT$fServer$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMONLINKSTRUCT$fServer$LAYOUT() { return tagMONLINKSTRUCT$fServer$LAYOUT_; }

    static final VarHandle tagMONLINKSTRUCT$fServer$VH_ = tagMONLINKSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fServer"));
    static final java.lang.invoke.VarHandle tagMONLINKSTRUCT$fServer$VH() { return tagMONLINKSTRUCT$fServer$VH_; }

    static final MemoryLayout tagMONLINKSTRUCT$hConvServer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONLINKSTRUCT$hConvServer$LAYOUT() { return tagMONLINKSTRUCT$hConvServer$LAYOUT_; }

    static final VarHandle tagMONLINKSTRUCT$hConvServer$VH_ = MemoryHandles.asAddressVarHandle(tagMONLINKSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hConvServer")));
    static final java.lang.invoke.VarHandle tagMONLINKSTRUCT$hConvServer$VH() { return tagMONLINKSTRUCT$hConvServer$VH_; }

    static final MemoryLayout tagMONLINKSTRUCT$hConvClient$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONLINKSTRUCT$hConvClient$LAYOUT() { return tagMONLINKSTRUCT$hConvClient$LAYOUT_; }

    static final VarHandle tagMONLINKSTRUCT$hConvClient$VH_ = MemoryHandles.asAddressVarHandle(tagMONLINKSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hConvClient")));
    static final java.lang.invoke.VarHandle tagMONLINKSTRUCT$hConvClient$VH() { return tagMONLINKSTRUCT$hConvClient$VH_; }

    static final MemoryLayout tagMONCONVSTRUCT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("cb"),
        C_INT.withName("fConnect"),
        C_LONG.withName("dwTime"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hTask"),
        C_POINTER.withName("hszSvc"),
        C_POINTER.withName("hszTopic"),
        C_POINTER.withName("hConvClient"),
        C_POINTER.withName("hConvServer")
    ).withName("tagMONCONVSTRUCT");
    static final jdk.incubator.foreign.MemoryLayout tagMONCONVSTRUCT$struct$LAYOUT() { return tagMONCONVSTRUCT$struct$LAYOUT_; }

    static final MemoryLayout tagMONCONVSTRUCT$cb$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMONCONVSTRUCT$cb$LAYOUT() { return tagMONCONVSTRUCT$cb$LAYOUT_; }

    static final VarHandle tagMONCONVSTRUCT$cb$VH_ = tagMONCONVSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cb"));
    static final java.lang.invoke.VarHandle tagMONCONVSTRUCT$cb$VH() { return tagMONCONVSTRUCT$cb$VH_; }

    static final MemoryLayout tagMONCONVSTRUCT$fConnect$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMONCONVSTRUCT$fConnect$LAYOUT() { return tagMONCONVSTRUCT$fConnect$LAYOUT_; }

    static final VarHandle tagMONCONVSTRUCT$fConnect$VH_ = tagMONCONVSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fConnect"));
    static final java.lang.invoke.VarHandle tagMONCONVSTRUCT$fConnect$VH() { return tagMONCONVSTRUCT$fConnect$VH_; }

    static final MemoryLayout tagMONCONVSTRUCT$dwTime$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMONCONVSTRUCT$dwTime$LAYOUT() { return tagMONCONVSTRUCT$dwTime$LAYOUT_; }

    static final VarHandle tagMONCONVSTRUCT$dwTime$VH_ = tagMONCONVSTRUCT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwTime"));
    static final java.lang.invoke.VarHandle tagMONCONVSTRUCT$dwTime$VH() { return tagMONCONVSTRUCT$dwTime$VH_; }

    static final MemoryLayout tagMONCONVSTRUCT$hTask$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONCONVSTRUCT$hTask$LAYOUT() { return tagMONCONVSTRUCT$hTask$LAYOUT_; }

    static final VarHandle tagMONCONVSTRUCT$hTask$VH_ = MemoryHandles.asAddressVarHandle(tagMONCONVSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hTask")));
    static final java.lang.invoke.VarHandle tagMONCONVSTRUCT$hTask$VH() { return tagMONCONVSTRUCT$hTask$VH_; }

    static final MemoryLayout tagMONCONVSTRUCT$hszSvc$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONCONVSTRUCT$hszSvc$LAYOUT() { return tagMONCONVSTRUCT$hszSvc$LAYOUT_; }

    static final VarHandle tagMONCONVSTRUCT$hszSvc$VH_ = MemoryHandles.asAddressVarHandle(tagMONCONVSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hszSvc")));
    static final java.lang.invoke.VarHandle tagMONCONVSTRUCT$hszSvc$VH() { return tagMONCONVSTRUCT$hszSvc$VH_; }

    static final MemoryLayout tagMONCONVSTRUCT$hszTopic$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONCONVSTRUCT$hszTopic$LAYOUT() { return tagMONCONVSTRUCT$hszTopic$LAYOUT_; }

    static final VarHandle tagMONCONVSTRUCT$hszTopic$VH_ = MemoryHandles.asAddressVarHandle(tagMONCONVSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hszTopic")));
    static final java.lang.invoke.VarHandle tagMONCONVSTRUCT$hszTopic$VH() { return tagMONCONVSTRUCT$hszTopic$VH_; }

    static final MemoryLayout tagMONCONVSTRUCT$hConvClient$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONCONVSTRUCT$hConvClient$LAYOUT() { return tagMONCONVSTRUCT$hConvClient$LAYOUT_; }

    static final VarHandle tagMONCONVSTRUCT$hConvClient$VH_ = MemoryHandles.asAddressVarHandle(tagMONCONVSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hConvClient")));
    static final java.lang.invoke.VarHandle tagMONCONVSTRUCT$hConvClient$VH() { return tagMONCONVSTRUCT$hConvClient$VH_; }

    static final MemoryLayout tagMONCONVSTRUCT$hConvServer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMONCONVSTRUCT$hConvServer$LAYOUT() { return tagMONCONVSTRUCT$hConvServer$LAYOUT_; }

    static final VarHandle tagMONCONVSTRUCT$hConvServer$VH_ = MemoryHandles.asAddressVarHandle(tagMONCONVSTRUCT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hConvServer")));
    static final java.lang.invoke.VarHandle tagMONCONVSTRUCT$hConvServer$VH() { return tagMONCONVSTRUCT$hConvServer$VH_; }

    static final MemoryLayout tagCRGB$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("bRed"),
        C_CHAR.withName("bGreen"),
        C_CHAR.withName("bBlue"),
        C_CHAR.withName("bExtra")
    ).withName("tagCRGB");
    static final jdk.incubator.foreign.MemoryLayout tagCRGB$struct$LAYOUT() { return tagCRGB$struct$LAYOUT_; }

    static final MemoryLayout tagCRGB$bRed$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout tagCRGB$bRed$LAYOUT() { return tagCRGB$bRed$LAYOUT_; }

    static final VarHandle tagCRGB$bRed$VH_ = tagCRGB$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("bRed"));
    static final java.lang.invoke.VarHandle tagCRGB$bRed$VH() { return tagCRGB$bRed$VH_; }

    static final MemoryLayout tagCRGB$bGreen$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout tagCRGB$bGreen$LAYOUT() { return tagCRGB$bGreen$LAYOUT_; }

    static final VarHandle tagCRGB$bGreen$VH_ = tagCRGB$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("bGreen"));
    static final java.lang.invoke.VarHandle tagCRGB$bGreen$VH() { return tagCRGB$bGreen$VH_; }

    static final MemoryLayout tagCRGB$bBlue$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout tagCRGB$bBlue$LAYOUT() { return tagCRGB$bBlue$LAYOUT_; }

    static final VarHandle tagCRGB$bBlue$VH_ = tagCRGB$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("bBlue"));
    static final java.lang.invoke.VarHandle tagCRGB$bBlue$VH() { return tagCRGB$bBlue$VH_; }

    static final MemoryLayout tagCRGB$bExtra$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout tagCRGB$bExtra$LAYOUT() { return tagCRGB$bExtra$LAYOUT_; }

    static final VarHandle tagCRGB$bExtra$VH_ = tagCRGB$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("bExtra"));
    static final java.lang.invoke.VarHandle tagCRGB$bExtra$VH() { return tagCRGB$bExtra$VH_; }

    static final FunctionDescriptor LZStart$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor LZStart$FUNC() { return LZStart$FUNC_; }

    static final MethodHandle LZStart$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "LZStart",
        "()I",
        LZStart$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle LZStart$MH() { return LZStart$MH_; }

    static final FunctionDescriptor LZDone$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor LZDone$FUNC() { return LZDone$FUNC_; }

    static final MethodHandle LZDone$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "LZDone",
        "()V",
        LZDone$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle LZDone$MH() { return LZDone$MH_; }

    static final FunctionDescriptor CopyLZFile$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor CopyLZFile$FUNC() { return CopyLZFile$FUNC_; }

    static final MethodHandle CopyLZFile$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CopyLZFile",
        "(II)I",
        CopyLZFile$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CopyLZFile$MH() { return CopyLZFile$MH_; }

    static final FunctionDescriptor LZCopy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor LZCopy$FUNC() { return LZCopy$FUNC_; }

    static final MethodHandle LZCopy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "LZCopy",
        "(II)I",
        LZCopy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle LZCopy$MH() { return LZCopy$MH_; }

    static final FunctionDescriptor LZInit$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor LZInit$FUNC() { return LZInit$FUNC_; }

    static final MethodHandle LZInit$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "LZInit",
        "(I)I",
        LZInit$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle LZInit$MH() { return LZInit$MH_; }

    static final FunctionDescriptor GetExpandedNameA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetExpandedNameA$FUNC() { return GetExpandedNameA$FUNC_; }

    static final MethodHandle GetExpandedNameA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetExpandedNameA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        GetExpandedNameA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetExpandedNameA$MH() { return GetExpandedNameA$MH_; }

    static final FunctionDescriptor GetExpandedNameW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetExpandedNameW$FUNC() { return GetExpandedNameW$FUNC_; }

    static final MethodHandle GetExpandedNameW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetExpandedNameW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        GetExpandedNameW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetExpandedNameW$MH() { return GetExpandedNameW$MH_; }

    static final FunctionDescriptor LZOpenFileA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor LZOpenFileA$FUNC() { return LZOpenFileA$FUNC_; }

    static final MethodHandle LZOpenFileA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "LZOpenFileA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;S)I",
        LZOpenFileA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle LZOpenFileA$MH() { return LZOpenFileA$MH_; }

    static final FunctionDescriptor LZOpenFileW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor LZOpenFileW$FUNC() { return LZOpenFileW$FUNC_; }

    static final MethodHandle LZOpenFileW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "LZOpenFileW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;S)I",
        LZOpenFileW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle LZOpenFileW$MH() { return LZOpenFileW$MH_; }

    static final FunctionDescriptor LZSeek$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_LONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor LZSeek$FUNC() { return LZSeek$FUNC_; }

    static final MethodHandle LZSeek$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "LZSeek",
        "(III)I",
        LZSeek$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle LZSeek$MH() { return LZSeek$MH_; }

    static final FunctionDescriptor LZRead$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor LZRead$FUNC() { return LZRead$FUNC_; }

    static final MethodHandle LZRead$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "LZRead",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        LZRead$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle LZRead$MH() { return LZRead$MH_; }

    static final FunctionDescriptor LZClose$FUNC_ = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor LZClose$FUNC() { return LZClose$FUNC_; }

    static final MethodHandle LZClose$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "LZClose",
        "(I)V",
        LZClose$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle LZClose$MH() { return LZClose$MH_; }

    static final MemoryLayout mmtime_tag$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("wType"),
        MemoryLayout.ofUnion(
            C_LONG.withName("ms"),
            C_LONG.withName("sample"),
            C_LONG.withName("cb"),
            C_LONG.withName("ticks"),
            MemoryLayout.ofStruct(
                C_CHAR.withName("hour"),
                C_CHAR.withName("min"),
                C_CHAR.withName("sec"),
                C_CHAR.withName("frame"),
                C_CHAR.withName("fps"),
                C_CHAR.withName("dummy"),
                MemoryLayout.ofSequence(2, C_CHAR).withName("pad")
            ).withName("smpte"),
            MemoryLayout.ofStruct(
                C_LONG.withName("songptrpos")
            ).withName("midi")
        ).withName("u")
    ).withName("mmtime_tag");
    static final jdk.incubator.foreign.MemoryLayout mmtime_tag$struct$LAYOUT() { return mmtime_tag$struct$LAYOUT_; }

    static final MemoryLayout mmtime_tag$wType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout mmtime_tag$wType$LAYOUT() { return mmtime_tag$wType$LAYOUT_; }

    static final VarHandle mmtime_tag$wType$VH_ = mmtime_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wType"));
    static final java.lang.invoke.VarHandle mmtime_tag$wType$VH() { return mmtime_tag$wType$VH_; }

    static final MemoryLayout mmtime_tag$u$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_LONG.withName("ms"),
        C_LONG.withName("sample"),
        C_LONG.withName("cb"),
        C_LONG.withName("ticks"),
        MemoryLayout.ofStruct(
            C_CHAR.withName("hour"),
            C_CHAR.withName("min"),
            C_CHAR.withName("sec"),
            C_CHAR.withName("frame"),
            C_CHAR.withName("fps"),
            C_CHAR.withName("dummy"),
            MemoryLayout.ofSequence(2, C_CHAR).withName("pad")
        ).withName("smpte"),
        MemoryLayout.ofStruct(
            C_LONG.withName("songptrpos")
        ).withName("midi")
    );
    static final jdk.incubator.foreign.MemoryLayout mmtime_tag$u$union$LAYOUT() { return mmtime_tag$u$union$LAYOUT_; }

    static final MemoryLayout mmtime_tag$u$ms$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout mmtime_tag$u$ms$LAYOUT() { return mmtime_tag$u$ms$LAYOUT_; }

    static final VarHandle mmtime_tag$u$ms$VH_ = mmtime_tag$u$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ms"));
    static final java.lang.invoke.VarHandle mmtime_tag$u$ms$VH() { return mmtime_tag$u$ms$VH_; }

    static final MemoryLayout mmtime_tag$u$sample$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout mmtime_tag$u$sample$LAYOUT() { return mmtime_tag$u$sample$LAYOUT_; }

    static final VarHandle mmtime_tag$u$sample$VH_ = mmtime_tag$u$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("sample"));
    static final java.lang.invoke.VarHandle mmtime_tag$u$sample$VH() { return mmtime_tag$u$sample$VH_; }

    static final MemoryLayout mmtime_tag$u$cb$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout mmtime_tag$u$cb$LAYOUT() { return mmtime_tag$u$cb$LAYOUT_; }

    static final VarHandle mmtime_tag$u$cb$VH_ = mmtime_tag$u$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cb"));
    static final java.lang.invoke.VarHandle mmtime_tag$u$cb$VH() { return mmtime_tag$u$cb$VH_; }

    static final MemoryLayout mmtime_tag$u$ticks$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout mmtime_tag$u$ticks$LAYOUT() { return mmtime_tag$u$ticks$LAYOUT_; }

    static final VarHandle mmtime_tag$u$ticks$VH_ = mmtime_tag$u$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ticks"));
    static final java.lang.invoke.VarHandle mmtime_tag$u$ticks$VH() { return mmtime_tag$u$ticks$VH_; }

    static final MemoryLayout mmtime_tag$u$smpte$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("hour"),
        C_CHAR.withName("min"),
        C_CHAR.withName("sec"),
        C_CHAR.withName("frame"),
        C_CHAR.withName("fps"),
        C_CHAR.withName("dummy"),
        MemoryLayout.ofSequence(2, C_CHAR).withName("pad")
    );
    static final jdk.incubator.foreign.MemoryLayout mmtime_tag$u$smpte$struct$LAYOUT() { return mmtime_tag$u$smpte$struct$LAYOUT_; }

    static final MemoryLayout mmtime_tag$u$smpte$hour$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout mmtime_tag$u$smpte$hour$LAYOUT() { return mmtime_tag$u$smpte$hour$LAYOUT_; }

    static final VarHandle mmtime_tag$u$smpte$hour$VH_ = mmtime_tag$u$smpte$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("hour"));
    static final java.lang.invoke.VarHandle mmtime_tag$u$smpte$hour$VH() { return mmtime_tag$u$smpte$hour$VH_; }

    static final MemoryLayout mmtime_tag$u$smpte$min$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout mmtime_tag$u$smpte$min$LAYOUT() { return mmtime_tag$u$smpte$min$LAYOUT_; }

    static final VarHandle mmtime_tag$u$smpte$min$VH_ = mmtime_tag$u$smpte$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("min"));
    static final java.lang.invoke.VarHandle mmtime_tag$u$smpte$min$VH() { return mmtime_tag$u$smpte$min$VH_; }

    static final MemoryLayout mmtime_tag$u$smpte$sec$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout mmtime_tag$u$smpte$sec$LAYOUT() { return mmtime_tag$u$smpte$sec$LAYOUT_; }

    static final VarHandle mmtime_tag$u$smpte$sec$VH_ = mmtime_tag$u$smpte$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("sec"));
    static final java.lang.invoke.VarHandle mmtime_tag$u$smpte$sec$VH() { return mmtime_tag$u$smpte$sec$VH_; }

    static final MemoryLayout mmtime_tag$u$smpte$frame$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout mmtime_tag$u$smpte$frame$LAYOUT() { return mmtime_tag$u$smpte$frame$LAYOUT_; }

    static final VarHandle mmtime_tag$u$smpte$frame$VH_ = mmtime_tag$u$smpte$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("frame"));
    static final java.lang.invoke.VarHandle mmtime_tag$u$smpte$frame$VH() { return mmtime_tag$u$smpte$frame$VH_; }

    static final MemoryLayout mmtime_tag$u$smpte$fps$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout mmtime_tag$u$smpte$fps$LAYOUT() { return mmtime_tag$u$smpte$fps$LAYOUT_; }

    static final VarHandle mmtime_tag$u$smpte$fps$VH_ = mmtime_tag$u$smpte$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("fps"));
    static final java.lang.invoke.VarHandle mmtime_tag$u$smpte$fps$VH() { return mmtime_tag$u$smpte$fps$VH_; }

    static final MemoryLayout mmtime_tag$u$smpte$dummy$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout mmtime_tag$u$smpte$dummy$LAYOUT() { return mmtime_tag$u$smpte$dummy$LAYOUT_; }

    static final VarHandle mmtime_tag$u$smpte$dummy$VH_ = mmtime_tag$u$smpte$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("dummy"));
    static final java.lang.invoke.VarHandle mmtime_tag$u$smpte$dummy$VH() { return mmtime_tag$u$smpte$dummy$VH_; }

    static final MemoryLayout mmtime_tag$u$midi$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("songptrpos")
    );
    static final jdk.incubator.foreign.MemoryLayout mmtime_tag$u$midi$struct$LAYOUT() { return mmtime_tag$u$midi$struct$LAYOUT_; }

    static final MemoryLayout mmtime_tag$u$midi$songptrpos$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout mmtime_tag$u$midi$songptrpos$LAYOUT() { return mmtime_tag$u$midi$songptrpos$LAYOUT_; }

    static final VarHandle mmtime_tag$u$midi$songptrpos$VH_ = mmtime_tag$u$midi$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("songptrpos"));
    static final java.lang.invoke.VarHandle mmtime_tag$u$midi$songptrpos$VH() { return mmtime_tag$u$midi$songptrpos$VH_; }

    static final MemoryLayout HDRVR__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HDRVR__");
    static final jdk.incubator.foreign.MemoryLayout HDRVR__$struct$LAYOUT() { return HDRVR__$struct$LAYOUT_; }

    static final MemoryLayout HDRVR__$unused$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout HDRVR__$unused$LAYOUT() { return HDRVR__$unused$LAYOUT_; }

    static final VarHandle HDRVR__$unused$VH_ = HDRVR__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    static final java.lang.invoke.VarHandle HDRVR__$unused$VH() { return HDRVR__$unused$VH_; }

    static final FunctionDescriptor mciSendCommandA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_INT,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor mciSendCommandA$FUNC() { return mciSendCommandA$FUNC_; }

    static final MethodHandle mciSendCommandA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "mciSendCommandA",
        "(IIJJ)I",
        mciSendCommandA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle mciSendCommandA$MH() { return mciSendCommandA$MH_; }

    static final FunctionDescriptor mciSendCommandW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_INT,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor mciSendCommandW$FUNC() { return mciSendCommandW$FUNC_; }

    static final MethodHandle mciSendCommandW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "mciSendCommandW",
        "(IIJJ)I",
        mciSendCommandW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle mciSendCommandW$MH() { return mciSendCommandW$MH_; }

    static final FunctionDescriptor mciSendStringA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor mciSendStringA$FUNC() { return mciSendStringA$FUNC_; }

    static final MethodHandle mciSendStringA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "mciSendStringA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        mciSendStringA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle mciSendStringA$MH() { return mciSendStringA$MH_; }

    static final FunctionDescriptor mciSendStringW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor mciSendStringW$FUNC() { return mciSendStringW$FUNC_; }

    static final MethodHandle mciSendStringW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "mciSendStringW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        mciSendStringW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle mciSendStringW$MH() { return mciSendStringW$MH_; }

    static final FunctionDescriptor mciGetDeviceIDA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor mciGetDeviceIDA$FUNC() { return mciGetDeviceIDA$FUNC_; }

    static final MethodHandle mciGetDeviceIDA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "mciGetDeviceIDA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        mciGetDeviceIDA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle mciGetDeviceIDA$MH() { return mciGetDeviceIDA$MH_; }

    static final FunctionDescriptor mciGetDeviceIDW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor mciGetDeviceIDW$FUNC() { return mciGetDeviceIDW$FUNC_; }

    static final MethodHandle mciGetDeviceIDW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "mciGetDeviceIDW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        mciGetDeviceIDW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle mciGetDeviceIDW$MH() { return mciGetDeviceIDW$MH_; }

    static final FunctionDescriptor mciGetDeviceIDFromElementIDA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor mciGetDeviceIDFromElementIDA$FUNC() { return mciGetDeviceIDFromElementIDA$FUNC_; }

    static final MethodHandle mciGetDeviceIDFromElementIDA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "mciGetDeviceIDFromElementIDA",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        mciGetDeviceIDFromElementIDA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle mciGetDeviceIDFromElementIDA$MH() { return mciGetDeviceIDFromElementIDA$MH_; }

    static final FunctionDescriptor mciGetDeviceIDFromElementIDW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor mciGetDeviceIDFromElementIDW$FUNC() { return mciGetDeviceIDFromElementIDW$FUNC_; }

    static final MethodHandle mciGetDeviceIDFromElementIDW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "mciGetDeviceIDFromElementIDW",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        mciGetDeviceIDFromElementIDW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle mciGetDeviceIDFromElementIDW$MH() { return mciGetDeviceIDFromElementIDW$MH_; }

    static final FunctionDescriptor mciGetErrorStringA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor mciGetErrorStringA$FUNC() { return mciGetErrorStringA$FUNC_; }

    static final MethodHandle mciGetErrorStringA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "mciGetErrorStringA",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        mciGetErrorStringA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle mciGetErrorStringA$MH() { return mciGetErrorStringA$MH_; }

    static final FunctionDescriptor mciGetErrorStringW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor mciGetErrorStringW$FUNC() { return mciGetErrorStringW$FUNC_; }

    static final MethodHandle mciGetErrorStringW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "mciGetErrorStringW",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        mciGetErrorStringW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle mciGetErrorStringW$MH() { return mciGetErrorStringW$MH_; }

    static final FunctionDescriptor mciSetYieldProc$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor mciSetYieldProc$FUNC() { return mciSetYieldProc$FUNC_; }

    static final MethodHandle mciSetYieldProc$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "mciSetYieldProc",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        mciSetYieldProc$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle mciSetYieldProc$MH() { return mciSetYieldProc$MH_; }

    static final FunctionDescriptor mciSetYieldProc$fpYieldProc$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor mciSetYieldProc$fpYieldProc$FUNC() { return mciSetYieldProc$fpYieldProc$FUNC_; }

    static final FunctionDescriptor mciGetCreatorTask$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor mciGetCreatorTask$FUNC() { return mciGetCreatorTask$FUNC_; }

    static final MethodHandle mciGetCreatorTask$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "mciGetCreatorTask",
        "(I)Ljdk/incubator/foreign/MemoryAddress;",
        mciGetCreatorTask$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle mciGetCreatorTask$MH() { return mciGetCreatorTask$MH_; }

    static final FunctionDescriptor mciGetYieldProc$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor mciGetYieldProc$FUNC() { return mciGetYieldProc$FUNC_; }

    static final MethodHandle mciGetYieldProc$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "mciGetYieldProc",
        "(ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        mciGetYieldProc$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle mciGetYieldProc$MH() { return mciGetYieldProc$MH_; }

    static final MemoryLayout tagMCI_GENERIC_PARMS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("dwCallback")
    ).withName("tagMCI_GENERIC_PARMS");
    static final jdk.incubator.foreign.MemoryLayout tagMCI_GENERIC_PARMS$struct$LAYOUT() { return tagMCI_GENERIC_PARMS$struct$LAYOUT_; }

    static final MemoryLayout tagMCI_GENERIC_PARMS$dwCallback$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagMCI_GENERIC_PARMS$dwCallback$LAYOUT() { return tagMCI_GENERIC_PARMS$dwCallback$LAYOUT_; }

    static final VarHandle tagMCI_GENERIC_PARMS$dwCallback$VH_ = tagMCI_GENERIC_PARMS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwCallback"));
    static final java.lang.invoke.VarHandle tagMCI_GENERIC_PARMS$dwCallback$VH() { return tagMCI_GENERIC_PARMS$dwCallback$VH_; }

    static final MemoryLayout tagMCI_OPEN_PARMSA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("dwCallback"),
        C_INT.withName("wDeviceID"),
        C_POINTER.withName("lpstrDeviceType"),
        C_POINTER.withName("lpstrElementName"),
        C_POINTER.withName("lpstrAlias")
    ).withName("tagMCI_OPEN_PARMSA");
    static final jdk.incubator.foreign.MemoryLayout tagMCI_OPEN_PARMSA$struct$LAYOUT() { return tagMCI_OPEN_PARMSA$struct$LAYOUT_; }

    static final MemoryLayout tagMCI_OPEN_PARMSA$dwCallback$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagMCI_OPEN_PARMSA$dwCallback$LAYOUT() { return tagMCI_OPEN_PARMSA$dwCallback$LAYOUT_; }

    static final VarHandle tagMCI_OPEN_PARMSA$dwCallback$VH_ = tagMCI_OPEN_PARMSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwCallback"));
    static final java.lang.invoke.VarHandle tagMCI_OPEN_PARMSA$dwCallback$VH() { return tagMCI_OPEN_PARMSA$dwCallback$VH_; }

    static final MemoryLayout tagMCI_OPEN_PARMSA$wDeviceID$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMCI_OPEN_PARMSA$wDeviceID$LAYOUT() { return tagMCI_OPEN_PARMSA$wDeviceID$LAYOUT_; }

    static final VarHandle tagMCI_OPEN_PARMSA$wDeviceID$VH_ = tagMCI_OPEN_PARMSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wDeviceID"));
    static final java.lang.invoke.VarHandle tagMCI_OPEN_PARMSA$wDeviceID$VH() { return tagMCI_OPEN_PARMSA$wDeviceID$VH_; }

    static final MemoryLayout tagMCI_OPEN_PARMSA$lpstrDeviceType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMCI_OPEN_PARMSA$lpstrDeviceType$LAYOUT() { return tagMCI_OPEN_PARMSA$lpstrDeviceType$LAYOUT_; }

    static final VarHandle tagMCI_OPEN_PARMSA$lpstrDeviceType$VH_ = MemoryHandles.asAddressVarHandle(tagMCI_OPEN_PARMSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrDeviceType")));
    static final java.lang.invoke.VarHandle tagMCI_OPEN_PARMSA$lpstrDeviceType$VH() { return tagMCI_OPEN_PARMSA$lpstrDeviceType$VH_; }

    static final MemoryLayout tagMCI_OPEN_PARMSA$lpstrElementName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMCI_OPEN_PARMSA$lpstrElementName$LAYOUT() { return tagMCI_OPEN_PARMSA$lpstrElementName$LAYOUT_; }

    static final VarHandle tagMCI_OPEN_PARMSA$lpstrElementName$VH_ = MemoryHandles.asAddressVarHandle(tagMCI_OPEN_PARMSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrElementName")));
    static final java.lang.invoke.VarHandle tagMCI_OPEN_PARMSA$lpstrElementName$VH() { return tagMCI_OPEN_PARMSA$lpstrElementName$VH_; }

    static final MemoryLayout tagMCI_OPEN_PARMSA$lpstrAlias$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMCI_OPEN_PARMSA$lpstrAlias$LAYOUT() { return tagMCI_OPEN_PARMSA$lpstrAlias$LAYOUT_; }

    static final VarHandle tagMCI_OPEN_PARMSA$lpstrAlias$VH_ = MemoryHandles.asAddressVarHandle(tagMCI_OPEN_PARMSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrAlias")));
    static final java.lang.invoke.VarHandle tagMCI_OPEN_PARMSA$lpstrAlias$VH() { return tagMCI_OPEN_PARMSA$lpstrAlias$VH_; }

    static final MemoryLayout tagMCI_OPEN_PARMSW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("dwCallback"),
        C_INT.withName("wDeviceID"),
        C_POINTER.withName("lpstrDeviceType"),
        C_POINTER.withName("lpstrElementName"),
        C_POINTER.withName("lpstrAlias")
    ).withName("tagMCI_OPEN_PARMSW");
    static final jdk.incubator.foreign.MemoryLayout tagMCI_OPEN_PARMSW$struct$LAYOUT() { return tagMCI_OPEN_PARMSW$struct$LAYOUT_; }

    static final MemoryLayout tagMCI_OPEN_PARMSW$dwCallback$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagMCI_OPEN_PARMSW$dwCallback$LAYOUT() { return tagMCI_OPEN_PARMSW$dwCallback$LAYOUT_; }

    static final VarHandle tagMCI_OPEN_PARMSW$dwCallback$VH_ = tagMCI_OPEN_PARMSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwCallback"));
    static final java.lang.invoke.VarHandle tagMCI_OPEN_PARMSW$dwCallback$VH() { return tagMCI_OPEN_PARMSW$dwCallback$VH_; }

    static final MemoryLayout tagMCI_OPEN_PARMSW$wDeviceID$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagMCI_OPEN_PARMSW$wDeviceID$LAYOUT() { return tagMCI_OPEN_PARMSW$wDeviceID$LAYOUT_; }

    static final VarHandle tagMCI_OPEN_PARMSW$wDeviceID$VH_ = tagMCI_OPEN_PARMSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wDeviceID"));
    static final java.lang.invoke.VarHandle tagMCI_OPEN_PARMSW$wDeviceID$VH() { return tagMCI_OPEN_PARMSW$wDeviceID$VH_; }

    static final MemoryLayout tagMCI_OPEN_PARMSW$lpstrDeviceType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMCI_OPEN_PARMSW$lpstrDeviceType$LAYOUT() { return tagMCI_OPEN_PARMSW$lpstrDeviceType$LAYOUT_; }

    static final VarHandle tagMCI_OPEN_PARMSW$lpstrDeviceType$VH_ = MemoryHandles.asAddressVarHandle(tagMCI_OPEN_PARMSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrDeviceType")));
    static final java.lang.invoke.VarHandle tagMCI_OPEN_PARMSW$lpstrDeviceType$VH() { return tagMCI_OPEN_PARMSW$lpstrDeviceType$VH_; }

    static final MemoryLayout tagMCI_OPEN_PARMSW$lpstrElementName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMCI_OPEN_PARMSW$lpstrElementName$LAYOUT() { return tagMCI_OPEN_PARMSW$lpstrElementName$LAYOUT_; }

    static final VarHandle tagMCI_OPEN_PARMSW$lpstrElementName$VH_ = MemoryHandles.asAddressVarHandle(tagMCI_OPEN_PARMSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrElementName")));
    static final java.lang.invoke.VarHandle tagMCI_OPEN_PARMSW$lpstrElementName$VH() { return tagMCI_OPEN_PARMSW$lpstrElementName$VH_; }

    static final MemoryLayout tagMCI_OPEN_PARMSW$lpstrAlias$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMCI_OPEN_PARMSW$lpstrAlias$LAYOUT() { return tagMCI_OPEN_PARMSW$lpstrAlias$LAYOUT_; }

    static final VarHandle tagMCI_OPEN_PARMSW$lpstrAlias$VH_ = MemoryHandles.asAddressVarHandle(tagMCI_OPEN_PARMSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrAlias")));
    static final java.lang.invoke.VarHandle tagMCI_OPEN_PARMSW$lpstrAlias$VH() { return tagMCI_OPEN_PARMSW$lpstrAlias$VH_; }

    static final MemoryLayout tagMCI_PLAY_PARMS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("dwCallback"),
        C_LONG.withName("dwFrom"),
        C_LONG.withName("dwTo")
    ).withName("tagMCI_PLAY_PARMS");
    static final jdk.incubator.foreign.MemoryLayout tagMCI_PLAY_PARMS$struct$LAYOUT() { return tagMCI_PLAY_PARMS$struct$LAYOUT_; }

    static final MemoryLayout tagMCI_PLAY_PARMS$dwCallback$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagMCI_PLAY_PARMS$dwCallback$LAYOUT() { return tagMCI_PLAY_PARMS$dwCallback$LAYOUT_; }

    static final VarHandle tagMCI_PLAY_PARMS$dwCallback$VH_ = tagMCI_PLAY_PARMS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwCallback"));
    static final java.lang.invoke.VarHandle tagMCI_PLAY_PARMS$dwCallback$VH() { return tagMCI_PLAY_PARMS$dwCallback$VH_; }

    static final MemoryLayout tagMCI_PLAY_PARMS$dwFrom$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMCI_PLAY_PARMS$dwFrom$LAYOUT() { return tagMCI_PLAY_PARMS$dwFrom$LAYOUT_; }

    static final VarHandle tagMCI_PLAY_PARMS$dwFrom$VH_ = tagMCI_PLAY_PARMS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFrom"));
    static final java.lang.invoke.VarHandle tagMCI_PLAY_PARMS$dwFrom$VH() { return tagMCI_PLAY_PARMS$dwFrom$VH_; }

    static final MemoryLayout tagMCI_PLAY_PARMS$dwTo$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMCI_PLAY_PARMS$dwTo$LAYOUT() { return tagMCI_PLAY_PARMS$dwTo$LAYOUT_; }

    static final VarHandle tagMCI_PLAY_PARMS$dwTo$VH_ = tagMCI_PLAY_PARMS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwTo"));
    static final java.lang.invoke.VarHandle tagMCI_PLAY_PARMS$dwTo$VH() { return tagMCI_PLAY_PARMS$dwTo$VH_; }

    static final MemoryLayout tagMCI_SEEK_PARMS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("dwCallback"),
        C_LONG.withName("dwTo")
    ).withName("tagMCI_SEEK_PARMS");
    static final jdk.incubator.foreign.MemoryLayout tagMCI_SEEK_PARMS$struct$LAYOUT() { return tagMCI_SEEK_PARMS$struct$LAYOUT_; }

    static final MemoryLayout tagMCI_SEEK_PARMS$dwCallback$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagMCI_SEEK_PARMS$dwCallback$LAYOUT() { return tagMCI_SEEK_PARMS$dwCallback$LAYOUT_; }

    static final VarHandle tagMCI_SEEK_PARMS$dwCallback$VH_ = tagMCI_SEEK_PARMS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwCallback"));
    static final java.lang.invoke.VarHandle tagMCI_SEEK_PARMS$dwCallback$VH() { return tagMCI_SEEK_PARMS$dwCallback$VH_; }

    static final MemoryLayout tagMCI_SEEK_PARMS$dwTo$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMCI_SEEK_PARMS$dwTo$LAYOUT() { return tagMCI_SEEK_PARMS$dwTo$LAYOUT_; }

    static final VarHandle tagMCI_SEEK_PARMS$dwTo$VH_ = tagMCI_SEEK_PARMS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwTo"));
    static final java.lang.invoke.VarHandle tagMCI_SEEK_PARMS$dwTo$VH() { return tagMCI_SEEK_PARMS$dwTo$VH_; }

    static final MemoryLayout tagMCI_STATUS_PARMS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("dwCallback"),
        C_LONGLONG.withName("dwReturn"),
        C_LONG.withName("dwItem"),
        C_LONG.withName("dwTrack")
    ).withName("tagMCI_STATUS_PARMS");
    static final jdk.incubator.foreign.MemoryLayout tagMCI_STATUS_PARMS$struct$LAYOUT() { return tagMCI_STATUS_PARMS$struct$LAYOUT_; }

    static final MemoryLayout tagMCI_STATUS_PARMS$dwCallback$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagMCI_STATUS_PARMS$dwCallback$LAYOUT() { return tagMCI_STATUS_PARMS$dwCallback$LAYOUT_; }

    static final VarHandle tagMCI_STATUS_PARMS$dwCallback$VH_ = tagMCI_STATUS_PARMS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwCallback"));
    static final java.lang.invoke.VarHandle tagMCI_STATUS_PARMS$dwCallback$VH() { return tagMCI_STATUS_PARMS$dwCallback$VH_; }

    static final MemoryLayout tagMCI_STATUS_PARMS$dwReturn$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagMCI_STATUS_PARMS$dwReturn$LAYOUT() { return tagMCI_STATUS_PARMS$dwReturn$LAYOUT_; }

    static final VarHandle tagMCI_STATUS_PARMS$dwReturn$VH_ = tagMCI_STATUS_PARMS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwReturn"));
    static final java.lang.invoke.VarHandle tagMCI_STATUS_PARMS$dwReturn$VH() { return tagMCI_STATUS_PARMS$dwReturn$VH_; }

}

