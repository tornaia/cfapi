// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$48 extends cfapi_h$constants$47 {

    /* package-private */ cfapi_h$constants$48() {}
    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$ServerPrincipalNameBufferLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$ServerPrincipalNameBufferLength$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_W$ServerPrincipalNameBufferLength$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$ServerPrincipalNameBufferLength$VH_ = tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ServerPrincipalNameBufferLength"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$ServerPrincipalNameBufferLength$VH() { return tagRPC_CALL_ATTRIBUTES_V3_W$ServerPrincipalNameBufferLength$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$ServerPrincipalName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$ServerPrincipalName$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_W$ServerPrincipalName$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$ServerPrincipalName$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ServerPrincipalName")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$ServerPrincipalName$VH() { return tagRPC_CALL_ATTRIBUTES_V3_W$ServerPrincipalName$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$ClientPrincipalNameBufferLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$ClientPrincipalNameBufferLength$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_W$ClientPrincipalNameBufferLength$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$ClientPrincipalNameBufferLength$VH_ = tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ClientPrincipalNameBufferLength"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$ClientPrincipalNameBufferLength$VH() { return tagRPC_CALL_ATTRIBUTES_V3_W$ClientPrincipalNameBufferLength$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$ClientPrincipalName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$ClientPrincipalName$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_W$ClientPrincipalName$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$ClientPrincipalName$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ClientPrincipalName")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$ClientPrincipalName$VH() { return tagRPC_CALL_ATTRIBUTES_V3_W$ClientPrincipalName$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$AuthenticationLevel$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$AuthenticationLevel$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_W$AuthenticationLevel$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$AuthenticationLevel$VH_ = tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthenticationLevel"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$AuthenticationLevel$VH() { return tagRPC_CALL_ATTRIBUTES_V3_W$AuthenticationLevel$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$AuthenticationService$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$AuthenticationService$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_W$AuthenticationService$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$AuthenticationService$VH_ = tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthenticationService"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$AuthenticationService$VH() { return tagRPC_CALL_ATTRIBUTES_V3_W$AuthenticationService$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$NullSession$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$NullSession$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_W$NullSession$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$NullSession$VH_ = tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NullSession"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$NullSession$VH() { return tagRPC_CALL_ATTRIBUTES_V3_W$NullSession$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$KernelModeCaller$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$KernelModeCaller$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_W$KernelModeCaller$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$KernelModeCaller$VH_ = tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("KernelModeCaller"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$KernelModeCaller$VH() { return tagRPC_CALL_ATTRIBUTES_V3_W$KernelModeCaller$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$ProtocolSequence$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$ProtocolSequence$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_W$ProtocolSequence$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$ProtocolSequence$VH_ = tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolSequence"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$ProtocolSequence$VH() { return tagRPC_CALL_ATTRIBUTES_V3_W$ProtocolSequence$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$IsClientLocal$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$IsClientLocal$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_W$IsClientLocal$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$IsClientLocal$VH_ = tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IsClientLocal"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$IsClientLocal$VH() { return tagRPC_CALL_ATTRIBUTES_V3_W$IsClientLocal$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$ClientPID$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$ClientPID$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_W$ClientPID$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$ClientPID$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ClientPID")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$ClientPID$VH() { return tagRPC_CALL_ATTRIBUTES_V3_W$ClientPID$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$CallStatus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$CallStatus$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_W$CallStatus$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$CallStatus$VH_ = tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CallStatus"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$CallStatus$VH() { return tagRPC_CALL_ATTRIBUTES_V3_W$CallStatus$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$CallType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$CallType$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_W$CallType$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$CallType$VH_ = tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CallType"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$CallType$VH() { return tagRPC_CALL_ATTRIBUTES_V3_W$CallType$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$CallLocalAddress$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$CallLocalAddress$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_W$CallLocalAddress$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$CallLocalAddress$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CallLocalAddress")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$CallLocalAddress$VH() { return tagRPC_CALL_ATTRIBUTES_V3_W$CallLocalAddress$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$OpNum$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$OpNum$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_W$OpNum$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$OpNum$VH_ = tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("OpNum"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$OpNum$VH() { return tagRPC_CALL_ATTRIBUTES_V3_W$OpNum$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$ClientIdentifierBufferLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$ClientIdentifierBufferLength$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_W$ClientIdentifierBufferLength$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$ClientIdentifierBufferLength$VH_ = tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ClientIdentifierBufferLength"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$ClientIdentifierBufferLength$VH() { return tagRPC_CALL_ATTRIBUTES_V3_W$ClientIdentifierBufferLength$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$ClientIdentifier$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_W$ClientIdentifier$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_W$ClientIdentifier$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$ClientIdentifier$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V3_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ClientIdentifier")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_W$ClientIdentifier$VH() { return tagRPC_CALL_ATTRIBUTES_V3_W$ClientIdentifier$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Version"),
        C_LONG.withName("Flags"),
        C_LONG.withName("ServerPrincipalNameBufferLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ServerPrincipalName"),
        C_LONG.withName("ClientPrincipalNameBufferLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ClientPrincipalName"),
        C_LONG.withName("AuthenticationLevel"),
        C_LONG.withName("AuthenticationService"),
        C_INT.withName("NullSession"),
        C_INT.withName("KernelModeCaller"),
        C_LONG.withName("ProtocolSequence"),
        C_LONG.withName("IsClientLocal"),
        C_POINTER.withName("ClientPID"),
        C_LONG.withName("CallStatus"),
        C_INT.withName("CallType"),
        C_POINTER.withName("CallLocalAddress"),
        C_SHORT.withName("OpNum"),
        MemoryLayout.ofPaddingBits(16),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("InterfaceUuid"),
        C_LONG.withName("ClientIdentifierBufferLength"),
        C_POINTER.withName("ClientIdentifier")
    ).withName("tagRPC_CALL_ATTRIBUTES_V3_A");
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$Version$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$Version$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_A$Version$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$Version$VH_ = tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$Version$VH() { return tagRPC_CALL_ATTRIBUTES_V3_A$Version$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$Flags$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_A$Flags$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$Flags$VH_ = tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$Flags$VH() { return tagRPC_CALL_ATTRIBUTES_V3_A$Flags$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$ServerPrincipalNameBufferLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$ServerPrincipalNameBufferLength$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_A$ServerPrincipalNameBufferLength$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$ServerPrincipalNameBufferLength$VH_ = tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ServerPrincipalNameBufferLength"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$ServerPrincipalNameBufferLength$VH() { return tagRPC_CALL_ATTRIBUTES_V3_A$ServerPrincipalNameBufferLength$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$ServerPrincipalName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$ServerPrincipalName$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_A$ServerPrincipalName$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$ServerPrincipalName$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ServerPrincipalName")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$ServerPrincipalName$VH() { return tagRPC_CALL_ATTRIBUTES_V3_A$ServerPrincipalName$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$ClientPrincipalNameBufferLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$ClientPrincipalNameBufferLength$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_A$ClientPrincipalNameBufferLength$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$ClientPrincipalNameBufferLength$VH_ = tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ClientPrincipalNameBufferLength"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$ClientPrincipalNameBufferLength$VH() { return tagRPC_CALL_ATTRIBUTES_V3_A$ClientPrincipalNameBufferLength$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$ClientPrincipalName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$ClientPrincipalName$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_A$ClientPrincipalName$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$ClientPrincipalName$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ClientPrincipalName")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$ClientPrincipalName$VH() { return tagRPC_CALL_ATTRIBUTES_V3_A$ClientPrincipalName$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$AuthenticationLevel$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$AuthenticationLevel$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_A$AuthenticationLevel$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$AuthenticationLevel$VH_ = tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthenticationLevel"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$AuthenticationLevel$VH() { return tagRPC_CALL_ATTRIBUTES_V3_A$AuthenticationLevel$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$AuthenticationService$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$AuthenticationService$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_A$AuthenticationService$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$AuthenticationService$VH_ = tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthenticationService"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$AuthenticationService$VH() { return tagRPC_CALL_ATTRIBUTES_V3_A$AuthenticationService$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$NullSession$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$NullSession$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_A$NullSession$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$NullSession$VH_ = tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NullSession"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$NullSession$VH() { return tagRPC_CALL_ATTRIBUTES_V3_A$NullSession$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$KernelModeCaller$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$KernelModeCaller$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_A$KernelModeCaller$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$KernelModeCaller$VH_ = tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("KernelModeCaller"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$KernelModeCaller$VH() { return tagRPC_CALL_ATTRIBUTES_V3_A$KernelModeCaller$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$ProtocolSequence$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$ProtocolSequence$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_A$ProtocolSequence$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$ProtocolSequence$VH_ = tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolSequence"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$ProtocolSequence$VH() { return tagRPC_CALL_ATTRIBUTES_V3_A$ProtocolSequence$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$IsClientLocal$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$IsClientLocal$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_A$IsClientLocal$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$IsClientLocal$VH_ = tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IsClientLocal"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$IsClientLocal$VH() { return tagRPC_CALL_ATTRIBUTES_V3_A$IsClientLocal$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$ClientPID$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$ClientPID$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_A$ClientPID$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$ClientPID$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ClientPID")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$ClientPID$VH() { return tagRPC_CALL_ATTRIBUTES_V3_A$ClientPID$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$CallStatus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$CallStatus$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_A$CallStatus$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$CallStatus$VH_ = tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CallStatus"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$CallStatus$VH() { return tagRPC_CALL_ATTRIBUTES_V3_A$CallStatus$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$CallType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$CallType$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_A$CallType$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$CallType$VH_ = tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CallType"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$CallType$VH() { return tagRPC_CALL_ATTRIBUTES_V3_A$CallType$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$CallLocalAddress$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$CallLocalAddress$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_A$CallLocalAddress$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$CallLocalAddress$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CallLocalAddress")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$CallLocalAddress$VH() { return tagRPC_CALL_ATTRIBUTES_V3_A$CallLocalAddress$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$OpNum$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$OpNum$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_A$OpNum$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$OpNum$VH_ = tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("OpNum"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$OpNum$VH() { return tagRPC_CALL_ATTRIBUTES_V3_A$OpNum$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$ClientIdentifierBufferLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$ClientIdentifierBufferLength$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_A$ClientIdentifierBufferLength$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$ClientIdentifierBufferLength$VH_ = tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ClientIdentifierBufferLength"));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$ClientIdentifierBufferLength$VH() { return tagRPC_CALL_ATTRIBUTES_V3_A$ClientIdentifierBufferLength$VH_; }

    static final MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$ClientIdentifier$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPC_CALL_ATTRIBUTES_V3_A$ClientIdentifier$LAYOUT() { return tagRPC_CALL_ATTRIBUTES_V3_A$ClientIdentifier$LAYOUT_; }

    static final VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$ClientIdentifier$VH_ = MemoryHandles.asAddressVarHandle(tagRPC_CALL_ATTRIBUTES_V3_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ClientIdentifier")));
    static final java.lang.invoke.VarHandle tagRPC_CALL_ATTRIBUTES_V3_A$ClientIdentifier$VH() { return tagRPC_CALL_ATTRIBUTES_V3_A$ClientIdentifier$VH_; }

    static final FunctionDescriptor RpcServerInqCallAttributesW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerInqCallAttributesW$FUNC() { return RpcServerInqCallAttributesW$FUNC_; }

    static final MethodHandle RpcServerInqCallAttributesW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerInqCallAttributesW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerInqCallAttributesW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerInqCallAttributesW$MH() { return RpcServerInqCallAttributesW$MH_; }

    static final FunctionDescriptor RpcServerInqCallAttributesA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerInqCallAttributesA$FUNC() { return RpcServerInqCallAttributesA$FUNC_; }

    static final MethodHandle RpcServerInqCallAttributesA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerInqCallAttributesA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerInqCallAttributesA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerInqCallAttributesA$MH() { return RpcServerInqCallAttributesA$MH_; }

    static final int RpcNotificationCallNone() { return (int)0L; }

    static final int RpcNotificationClientDisconnect() { return (int)1L; }

    static final int RpcNotificationCallCancel() { return (int)2L; }

    static final FunctionDescriptor RpcServerSubscribeForNotification$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerSubscribeForNotification$FUNC() { return RpcServerSubscribeForNotification$FUNC_; }

    static final MethodHandle RpcServerSubscribeForNotification$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerSubscribeForNotification",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        RpcServerSubscribeForNotification$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerSubscribeForNotification$MH() { return RpcServerSubscribeForNotification$MH_; }

    static final FunctionDescriptor RpcServerUnsubscribeForNotification$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerUnsubscribeForNotification$FUNC() { return RpcServerUnsubscribeForNotification$FUNC_; }

    static final MethodHandle RpcServerUnsubscribeForNotification$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerUnsubscribeForNotification",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcServerUnsubscribeForNotification$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerUnsubscribeForNotification$MH() { return RpcServerUnsubscribeForNotification$MH_; }

    static final FunctionDescriptor RpcBindingBind$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingBind$FUNC() { return RpcBindingBind$FUNC_; }

    static final MethodHandle RpcBindingBind$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingBind",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingBind$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingBind$MH() { return RpcBindingBind$MH_; }

    static final FunctionDescriptor RpcBindingUnbind$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingUnbind$FUNC() { return RpcBindingUnbind$FUNC_; }

    static final MethodHandle RpcBindingUnbind$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingUnbind",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingUnbind$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingUnbind$MH() { return RpcBindingUnbind$MH_; }

    static final FunctionDescriptor I_RpcAsyncSetHandle$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcAsyncSetHandle$FUNC() { return I_RpcAsyncSetHandle$FUNC_; }

    static final MethodHandle I_RpcAsyncSetHandle$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcAsyncSetHandle",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcAsyncSetHandle$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcAsyncSetHandle$MH() { return I_RpcAsyncSetHandle$MH_; }

    static final FunctionDescriptor I_RpcAsyncAbortCall$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcAsyncAbortCall$FUNC() { return I_RpcAsyncAbortCall$FUNC_; }

    static final MethodHandle I_RpcAsyncAbortCall$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcAsyncAbortCall",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        I_RpcAsyncAbortCall$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcAsyncAbortCall$MH() { return I_RpcAsyncAbortCall$MH_; }

    static final FunctionDescriptor I_RpcExceptionFilter$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcExceptionFilter$FUNC() { return I_RpcExceptionFilter$FUNC_; }

    static final MethodHandle I_RpcExceptionFilter$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcExceptionFilter",
        "(I)I",
        I_RpcExceptionFilter$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcExceptionFilter$MH() { return I_RpcExceptionFilter$MH_; }

    static final FunctionDescriptor I_RpcBindingInqClientTokenAttributes$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcBindingInqClientTokenAttributes$FUNC() { return I_RpcBindingInqClientTokenAttributes$FUNC_; }

    static final MethodHandle I_RpcBindingInqClientTokenAttributes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcBindingInqClientTokenAttributes",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcBindingInqClientTokenAttributes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcBindingInqClientTokenAttributes$MH() { return I_RpcBindingInqClientTokenAttributes$MH_; }

    static final FunctionDescriptor CommandLineToArgvW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CommandLineToArgvW$FUNC() { return CommandLineToArgvW$FUNC_; }

    static final MethodHandle CommandLineToArgvW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CommandLineToArgvW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CommandLineToArgvW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CommandLineToArgvW$MH() { return CommandLineToArgvW$MH_; }

    static final MemoryLayout HDROP__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HDROP__");
    static final jdk.incubator.foreign.MemoryLayout HDROP__$struct$LAYOUT() { return HDROP__$struct$LAYOUT_; }

    static final MemoryLayout HDROP__$unused$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout HDROP__$unused$LAYOUT() { return HDROP__$unused$LAYOUT_; }

    static final VarHandle HDROP__$unused$VH_ = HDROP__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    static final java.lang.invoke.VarHandle HDROP__$unused$VH() { return HDROP__$unused$VH_; }

    static final FunctionDescriptor DragQueryFileA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor DragQueryFileA$FUNC() { return DragQueryFileA$FUNC_; }

    static final MethodHandle DragQueryFileA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DragQueryFileA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        DragQueryFileA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DragQueryFileA$MH() { return DragQueryFileA$MH_; }

    static final FunctionDescriptor DragQueryFileW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor DragQueryFileW$FUNC() { return DragQueryFileW$FUNC_; }

    static final MethodHandle DragQueryFileW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DragQueryFileW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        DragQueryFileW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DragQueryFileW$MH() { return DragQueryFileW$MH_; }

    static final FunctionDescriptor DragQueryPoint$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DragQueryPoint$FUNC() { return DragQueryPoint$FUNC_; }

    static final MethodHandle DragQueryPoint$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DragQueryPoint",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DragQueryPoint$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DragQueryPoint$MH() { return DragQueryPoint$MH_; }

    static final FunctionDescriptor DragFinish$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DragFinish$FUNC() { return DragFinish$FUNC_; }

    static final MethodHandle DragFinish$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DragFinish",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        DragFinish$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DragFinish$MH() { return DragFinish$MH_; }

    static final FunctionDescriptor DragAcceptFiles$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor DragAcceptFiles$FUNC() { return DragAcceptFiles$FUNC_; }

    static final MethodHandle DragAcceptFiles$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DragAcceptFiles",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        DragAcceptFiles$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DragAcceptFiles$MH() { return DragAcceptFiles$MH_; }

    static final FunctionDescriptor ShellExecuteA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor ShellExecuteA$FUNC() { return ShellExecuteA$FUNC_; }

    static final MethodHandle ShellExecuteA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ShellExecuteA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        ShellExecuteA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ShellExecuteA$MH() { return ShellExecuteA$MH_; }

    static final FunctionDescriptor ShellExecuteW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor ShellExecuteW$FUNC() { return ShellExecuteW$FUNC_; }

    static final MethodHandle ShellExecuteW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ShellExecuteW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        ShellExecuteW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ShellExecuteW$MH() { return ShellExecuteW$MH_; }

    static final FunctionDescriptor FindExecutableA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FindExecutableA$FUNC() { return FindExecutableA$FUNC_; }

    static final MethodHandle FindExecutableA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FindExecutableA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        FindExecutableA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FindExecutableA$MH() { return FindExecutableA$MH_; }

    static final FunctionDescriptor FindExecutableW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FindExecutableW$FUNC() { return FindExecutableW$FUNC_; }

    static final MethodHandle FindExecutableW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FindExecutableW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        FindExecutableW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FindExecutableW$MH() { return FindExecutableW$MH_; }

    static final FunctionDescriptor ShellAboutA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ShellAboutA$FUNC() { return ShellAboutA$FUNC_; }

    static final MethodHandle ShellAboutA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ShellAboutA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ShellAboutA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ShellAboutA$MH() { return ShellAboutA$MH_; }

    static final FunctionDescriptor ShellAboutW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ShellAboutW$FUNC() { return ShellAboutW$FUNC_; }

    static final MethodHandle ShellAboutW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ShellAboutW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ShellAboutW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ShellAboutW$MH() { return ShellAboutW$MH_; }

    static final FunctionDescriptor DuplicateIcon$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DuplicateIcon$FUNC() { return DuplicateIcon$FUNC_; }

    static final MethodHandle DuplicateIcon$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DuplicateIcon",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        DuplicateIcon$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DuplicateIcon$MH() { return DuplicateIcon$MH_; }

    static final FunctionDescriptor ExtractAssociatedIconA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ExtractAssociatedIconA$FUNC() { return ExtractAssociatedIconA$FUNC_; }

    static final MethodHandle ExtractAssociatedIconA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ExtractAssociatedIconA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        ExtractAssociatedIconA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ExtractAssociatedIconA$MH() { return ExtractAssociatedIconA$MH_; }

    static final FunctionDescriptor ExtractAssociatedIconW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ExtractAssociatedIconW$FUNC() { return ExtractAssociatedIconW$FUNC_; }

    static final MethodHandle ExtractAssociatedIconW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ExtractAssociatedIconW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        ExtractAssociatedIconW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ExtractAssociatedIconW$MH() { return ExtractAssociatedIconW$MH_; }

    static final FunctionDescriptor ExtractAssociatedIconExA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ExtractAssociatedIconExA$FUNC() { return ExtractAssociatedIconExA$FUNC_; }

    static final MethodHandle ExtractAssociatedIconExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ExtractAssociatedIconExA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        ExtractAssociatedIconExA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ExtractAssociatedIconExA$MH() { return ExtractAssociatedIconExA$MH_; }

    static final FunctionDescriptor ExtractAssociatedIconExW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ExtractAssociatedIconExW$FUNC() { return ExtractAssociatedIconExW$FUNC_; }

    static final MethodHandle ExtractAssociatedIconExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ExtractAssociatedIconExW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        ExtractAssociatedIconExW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ExtractAssociatedIconExW$MH() { return ExtractAssociatedIconExW$MH_; }

    static final FunctionDescriptor ExtractIconA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor ExtractIconA$FUNC() { return ExtractIconA$FUNC_; }

    static final MethodHandle ExtractIconA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ExtractIconA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        ExtractIconA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ExtractIconA$MH() { return ExtractIconA$MH_; }

    static final FunctionDescriptor ExtractIconW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor ExtractIconW$FUNC() { return ExtractIconW$FUNC_; }

    static final MethodHandle ExtractIconW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ExtractIconW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        ExtractIconW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ExtractIconW$MH() { return ExtractIconW$MH_; }

    static final MemoryLayout _DRAGINFOA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("uSize"),
        MemoryLayout.ofStruct(
            C_LONG.withName("x"),
            C_LONG.withName("y")
        ).withName("pt"),
        C_INT.withName("fNC"),
        C_POINTER.withName("lpFileList"),
        C_LONG.withName("grfKeyState"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_DRAGINFOA");
    static final jdk.incubator.foreign.MemoryLayout _DRAGINFOA$struct$LAYOUT() { return _DRAGINFOA$struct$LAYOUT_; }

    static final MemoryLayout _DRAGINFOA$uSize$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _DRAGINFOA$uSize$LAYOUT() { return _DRAGINFOA$uSize$LAYOUT_; }

    static final VarHandle _DRAGINFOA$uSize$VH_ = _DRAGINFOA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uSize"));
    static final java.lang.invoke.VarHandle _DRAGINFOA$uSize$VH() { return _DRAGINFOA$uSize$VH_; }

    static final MemoryLayout _DRAGINFOA$fNC$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _DRAGINFOA$fNC$LAYOUT() { return _DRAGINFOA$fNC$LAYOUT_; }

    static final VarHandle _DRAGINFOA$fNC$VH_ = _DRAGINFOA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fNC"));
    static final java.lang.invoke.VarHandle _DRAGINFOA$fNC$VH() { return _DRAGINFOA$fNC$VH_; }

    static final MemoryLayout _DRAGINFOA$lpFileList$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DRAGINFOA$lpFileList$LAYOUT() { return _DRAGINFOA$lpFileList$LAYOUT_; }

    static final VarHandle _DRAGINFOA$lpFileList$VH_ = MemoryHandles.asAddressVarHandle(_DRAGINFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpFileList")));
    static final java.lang.invoke.VarHandle _DRAGINFOA$lpFileList$VH() { return _DRAGINFOA$lpFileList$VH_; }

    static final MemoryLayout _DRAGINFOA$grfKeyState$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DRAGINFOA$grfKeyState$LAYOUT() { return _DRAGINFOA$grfKeyState$LAYOUT_; }

    static final VarHandle _DRAGINFOA$grfKeyState$VH_ = _DRAGINFOA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("grfKeyState"));
    static final java.lang.invoke.VarHandle _DRAGINFOA$grfKeyState$VH() { return _DRAGINFOA$grfKeyState$VH_; }

    static final MemoryLayout _DRAGINFOW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("uSize"),
        MemoryLayout.ofStruct(
            C_LONG.withName("x"),
            C_LONG.withName("y")
        ).withName("pt"),
        C_INT.withName("fNC"),
        C_POINTER.withName("lpFileList"),
        C_LONG.withName("grfKeyState"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_DRAGINFOW");
    static final jdk.incubator.foreign.MemoryLayout _DRAGINFOW$struct$LAYOUT() { return _DRAGINFOW$struct$LAYOUT_; }

    static final MemoryLayout _DRAGINFOW$uSize$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _DRAGINFOW$uSize$LAYOUT() { return _DRAGINFOW$uSize$LAYOUT_; }

    static final VarHandle _DRAGINFOW$uSize$VH_ = _DRAGINFOW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uSize"));
    static final java.lang.invoke.VarHandle _DRAGINFOW$uSize$VH() { return _DRAGINFOW$uSize$VH_; }

    static final MemoryLayout _DRAGINFOW$fNC$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _DRAGINFOW$fNC$LAYOUT() { return _DRAGINFOW$fNC$LAYOUT_; }

    static final VarHandle _DRAGINFOW$fNC$VH_ = _DRAGINFOW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fNC"));
    static final java.lang.invoke.VarHandle _DRAGINFOW$fNC$VH() { return _DRAGINFOW$fNC$VH_; }

    static final MemoryLayout _DRAGINFOW$lpFileList$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _DRAGINFOW$lpFileList$LAYOUT() { return _DRAGINFOW$lpFileList$LAYOUT_; }

    static final VarHandle _DRAGINFOW$lpFileList$VH_ = MemoryHandles.asAddressVarHandle(_DRAGINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpFileList")));
    static final java.lang.invoke.VarHandle _DRAGINFOW$lpFileList$VH() { return _DRAGINFOW$lpFileList$VH_; }

    static final MemoryLayout _DRAGINFOW$grfKeyState$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DRAGINFOW$grfKeyState$LAYOUT() { return _DRAGINFOW$grfKeyState$LAYOUT_; }

    static final VarHandle _DRAGINFOW$grfKeyState$VH_ = _DRAGINFOW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("grfKeyState"));
    static final java.lang.invoke.VarHandle _DRAGINFOW$grfKeyState$VH() { return _DRAGINFOW$grfKeyState$VH_; }

    static final MemoryLayout _AppBarData$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hWnd"),
        C_INT.withName("uCallbackMessage"),
        C_INT.withName("uEdge"),
        MemoryLayout.ofStruct(
            C_LONG.withName("left"),
            C_LONG.withName("top"),
            C_LONG.withName("right"),
            C_LONG.withName("bottom")
        ).withName("rc"),
        C_LONGLONG.withName("lParam")
    ).withName("_AppBarData");
    static final jdk.incubator.foreign.MemoryLayout _AppBarData$struct$LAYOUT() { return _AppBarData$struct$LAYOUT_; }

    static final MemoryLayout _AppBarData$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _AppBarData$cbSize$LAYOUT() { return _AppBarData$cbSize$LAYOUT_; }

    static final VarHandle _AppBarData$cbSize$VH_ = _AppBarData$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _AppBarData$cbSize$VH() { return _AppBarData$cbSize$VH_; }

    static final MemoryLayout _AppBarData$hWnd$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _AppBarData$hWnd$LAYOUT() { return _AppBarData$hWnd$LAYOUT_; }

    static final VarHandle _AppBarData$hWnd$VH_ = MemoryHandles.asAddressVarHandle(_AppBarData$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hWnd")));
    static final java.lang.invoke.VarHandle _AppBarData$hWnd$VH() { return _AppBarData$hWnd$VH_; }

    static final MemoryLayout _AppBarData$uCallbackMessage$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _AppBarData$uCallbackMessage$LAYOUT() { return _AppBarData$uCallbackMessage$LAYOUT_; }

    static final VarHandle _AppBarData$uCallbackMessage$VH_ = _AppBarData$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uCallbackMessage"));
    static final java.lang.invoke.VarHandle _AppBarData$uCallbackMessage$VH() { return _AppBarData$uCallbackMessage$VH_; }

    static final MemoryLayout _AppBarData$uEdge$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _AppBarData$uEdge$LAYOUT() { return _AppBarData$uEdge$LAYOUT_; }

    static final VarHandle _AppBarData$uEdge$VH_ = _AppBarData$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uEdge"));
    static final java.lang.invoke.VarHandle _AppBarData$uEdge$VH() { return _AppBarData$uEdge$VH_; }

    static final MemoryLayout _AppBarData$lParam$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _AppBarData$lParam$LAYOUT() { return _AppBarData$lParam$LAYOUT_; }

    static final VarHandle _AppBarData$lParam$VH_ = _AppBarData$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lParam"));
    static final java.lang.invoke.VarHandle _AppBarData$lParam$VH() { return _AppBarData$lParam$VH_; }

    static final FunctionDescriptor SHAppBarMessage$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHAppBarMessage$FUNC() { return SHAppBarMessage$FUNC_; }

    static final MethodHandle SHAppBarMessage$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHAppBarMessage",
        "(ILjdk/incubator/foreign/MemoryAddress;)J",
        SHAppBarMessage$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHAppBarMessage$MH() { return SHAppBarMessage$MH_; }

    static final FunctionDescriptor DoEnvironmentSubstA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor DoEnvironmentSubstA$FUNC() { return DoEnvironmentSubstA$FUNC_; }

    static final MethodHandle DoEnvironmentSubstA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DoEnvironmentSubstA",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        DoEnvironmentSubstA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DoEnvironmentSubstA$MH() { return DoEnvironmentSubstA$MH_; }

    static final FunctionDescriptor DoEnvironmentSubstW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor DoEnvironmentSubstW$FUNC() { return DoEnvironmentSubstW$FUNC_; }

    static final MethodHandle DoEnvironmentSubstW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DoEnvironmentSubstW",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        DoEnvironmentSubstW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DoEnvironmentSubstW$MH() { return DoEnvironmentSubstW$MH_; }

    static final FunctionDescriptor ExtractIconExA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor ExtractIconExA$FUNC() { return ExtractIconExA$FUNC_; }

    static final MethodHandle ExtractIconExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ExtractIconExA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        ExtractIconExA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ExtractIconExA$MH() { return ExtractIconExA$MH_; }

    static final FunctionDescriptor ExtractIconExW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor ExtractIconExW$FUNC() { return ExtractIconExW$FUNC_; }

    static final MethodHandle ExtractIconExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ExtractIconExW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        ExtractIconExW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ExtractIconExW$MH() { return ExtractIconExW$MH_; }

    static final MemoryLayout _SHFILEOPSTRUCTA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("hwnd"),
        C_INT.withName("wFunc"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pFrom"),
        C_POINTER.withName("pTo"),
        C_SHORT.withName("fFlags"),
        MemoryLayout.ofPaddingBits(16),
        C_INT.withName("fAnyOperationsAborted"),
        C_POINTER.withName("hNameMappings"),
        C_POINTER.withName("lpszProgressTitle")
    ).withName("_SHFILEOPSTRUCTA");
    static final jdk.incubator.foreign.MemoryLayout _SHFILEOPSTRUCTA$struct$LAYOUT() { return _SHFILEOPSTRUCTA$struct$LAYOUT_; }

    static final MemoryLayout _SHFILEOPSTRUCTA$hwnd$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEOPSTRUCTA$hwnd$LAYOUT() { return _SHFILEOPSTRUCTA$hwnd$LAYOUT_; }

    static final VarHandle _SHFILEOPSTRUCTA$hwnd$VH_ = MemoryHandles.asAddressVarHandle(_SHFILEOPSTRUCTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwnd")));
    static final java.lang.invoke.VarHandle _SHFILEOPSTRUCTA$hwnd$VH() { return _SHFILEOPSTRUCTA$hwnd$VH_; }

    static final MemoryLayout _SHFILEOPSTRUCTA$wFunc$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEOPSTRUCTA$wFunc$LAYOUT() { return _SHFILEOPSTRUCTA$wFunc$LAYOUT_; }

    static final VarHandle _SHFILEOPSTRUCTA$wFunc$VH_ = _SHFILEOPSTRUCTA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wFunc"));
    static final java.lang.invoke.VarHandle _SHFILEOPSTRUCTA$wFunc$VH() { return _SHFILEOPSTRUCTA$wFunc$VH_; }

    static final MemoryLayout _SHFILEOPSTRUCTA$pFrom$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEOPSTRUCTA$pFrom$LAYOUT() { return _SHFILEOPSTRUCTA$pFrom$LAYOUT_; }

    static final VarHandle _SHFILEOPSTRUCTA$pFrom$VH_ = MemoryHandles.asAddressVarHandle(_SHFILEOPSTRUCTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pFrom")));
    static final java.lang.invoke.VarHandle _SHFILEOPSTRUCTA$pFrom$VH() { return _SHFILEOPSTRUCTA$pFrom$VH_; }

    static final MemoryLayout _SHFILEOPSTRUCTA$pTo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEOPSTRUCTA$pTo$LAYOUT() { return _SHFILEOPSTRUCTA$pTo$LAYOUT_; }

    static final VarHandle _SHFILEOPSTRUCTA$pTo$VH_ = MemoryHandles.asAddressVarHandle(_SHFILEOPSTRUCTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pTo")));
    static final java.lang.invoke.VarHandle _SHFILEOPSTRUCTA$pTo$VH() { return _SHFILEOPSTRUCTA$pTo$VH_; }

    static final MemoryLayout _SHFILEOPSTRUCTA$fFlags$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEOPSTRUCTA$fFlags$LAYOUT() { return _SHFILEOPSTRUCTA$fFlags$LAYOUT_; }

    static final VarHandle _SHFILEOPSTRUCTA$fFlags$VH_ = _SHFILEOPSTRUCTA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("fFlags"));
    static final java.lang.invoke.VarHandle _SHFILEOPSTRUCTA$fFlags$VH() { return _SHFILEOPSTRUCTA$fFlags$VH_; }

    static final MemoryLayout _SHFILEOPSTRUCTA$fAnyOperationsAborted$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEOPSTRUCTA$fAnyOperationsAborted$LAYOUT() { return _SHFILEOPSTRUCTA$fAnyOperationsAborted$LAYOUT_; }

    static final VarHandle _SHFILEOPSTRUCTA$fAnyOperationsAborted$VH_ = _SHFILEOPSTRUCTA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fAnyOperationsAborted"));
    static final java.lang.invoke.VarHandle _SHFILEOPSTRUCTA$fAnyOperationsAborted$VH() { return _SHFILEOPSTRUCTA$fAnyOperationsAborted$VH_; }

    static final MemoryLayout _SHFILEOPSTRUCTA$hNameMappings$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEOPSTRUCTA$hNameMappings$LAYOUT() { return _SHFILEOPSTRUCTA$hNameMappings$LAYOUT_; }

    static final VarHandle _SHFILEOPSTRUCTA$hNameMappings$VH_ = MemoryHandles.asAddressVarHandle(_SHFILEOPSTRUCTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hNameMappings")));
    static final java.lang.invoke.VarHandle _SHFILEOPSTRUCTA$hNameMappings$VH() { return _SHFILEOPSTRUCTA$hNameMappings$VH_; }

    static final MemoryLayout _SHFILEOPSTRUCTA$lpszProgressTitle$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEOPSTRUCTA$lpszProgressTitle$LAYOUT() { return _SHFILEOPSTRUCTA$lpszProgressTitle$LAYOUT_; }

    static final VarHandle _SHFILEOPSTRUCTA$lpszProgressTitle$VH_ = MemoryHandles.asAddressVarHandle(_SHFILEOPSTRUCTA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszProgressTitle")));
    static final java.lang.invoke.VarHandle _SHFILEOPSTRUCTA$lpszProgressTitle$VH() { return _SHFILEOPSTRUCTA$lpszProgressTitle$VH_; }

    static final MemoryLayout _SHFILEOPSTRUCTW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("hwnd"),
        C_INT.withName("wFunc"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pFrom"),
        C_POINTER.withName("pTo"),
        C_SHORT.withName("fFlags"),
        MemoryLayout.ofPaddingBits(16),
        C_INT.withName("fAnyOperationsAborted"),
        C_POINTER.withName("hNameMappings"),
        C_POINTER.withName("lpszProgressTitle")
    ).withName("_SHFILEOPSTRUCTW");
    static final jdk.incubator.foreign.MemoryLayout _SHFILEOPSTRUCTW$struct$LAYOUT() { return _SHFILEOPSTRUCTW$struct$LAYOUT_; }

    static final MemoryLayout _SHFILEOPSTRUCTW$hwnd$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEOPSTRUCTW$hwnd$LAYOUT() { return _SHFILEOPSTRUCTW$hwnd$LAYOUT_; }

    static final VarHandle _SHFILEOPSTRUCTW$hwnd$VH_ = MemoryHandles.asAddressVarHandle(_SHFILEOPSTRUCTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwnd")));
    static final java.lang.invoke.VarHandle _SHFILEOPSTRUCTW$hwnd$VH() { return _SHFILEOPSTRUCTW$hwnd$VH_; }

    static final MemoryLayout _SHFILEOPSTRUCTW$wFunc$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEOPSTRUCTW$wFunc$LAYOUT() { return _SHFILEOPSTRUCTW$wFunc$LAYOUT_; }

    static final VarHandle _SHFILEOPSTRUCTW$wFunc$VH_ = _SHFILEOPSTRUCTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wFunc"));
    static final java.lang.invoke.VarHandle _SHFILEOPSTRUCTW$wFunc$VH() { return _SHFILEOPSTRUCTW$wFunc$VH_; }

    static final MemoryLayout _SHFILEOPSTRUCTW$pFrom$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEOPSTRUCTW$pFrom$LAYOUT() { return _SHFILEOPSTRUCTW$pFrom$LAYOUT_; }

    static final VarHandle _SHFILEOPSTRUCTW$pFrom$VH_ = MemoryHandles.asAddressVarHandle(_SHFILEOPSTRUCTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pFrom")));
    static final java.lang.invoke.VarHandle _SHFILEOPSTRUCTW$pFrom$VH() { return _SHFILEOPSTRUCTW$pFrom$VH_; }

    static final MemoryLayout _SHFILEOPSTRUCTW$pTo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEOPSTRUCTW$pTo$LAYOUT() { return _SHFILEOPSTRUCTW$pTo$LAYOUT_; }

    static final VarHandle _SHFILEOPSTRUCTW$pTo$VH_ = MemoryHandles.asAddressVarHandle(_SHFILEOPSTRUCTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pTo")));
    static final java.lang.invoke.VarHandle _SHFILEOPSTRUCTW$pTo$VH() { return _SHFILEOPSTRUCTW$pTo$VH_; }

    static final MemoryLayout _SHFILEOPSTRUCTW$fFlags$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEOPSTRUCTW$fFlags$LAYOUT() { return _SHFILEOPSTRUCTW$fFlags$LAYOUT_; }

    static final VarHandle _SHFILEOPSTRUCTW$fFlags$VH_ = _SHFILEOPSTRUCTW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("fFlags"));
    static final java.lang.invoke.VarHandle _SHFILEOPSTRUCTW$fFlags$VH() { return _SHFILEOPSTRUCTW$fFlags$VH_; }

    static final MemoryLayout _SHFILEOPSTRUCTW$fAnyOperationsAborted$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEOPSTRUCTW$fAnyOperationsAborted$LAYOUT() { return _SHFILEOPSTRUCTW$fAnyOperationsAborted$LAYOUT_; }

    static final VarHandle _SHFILEOPSTRUCTW$fAnyOperationsAborted$VH_ = _SHFILEOPSTRUCTW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fAnyOperationsAborted"));
    static final java.lang.invoke.VarHandle _SHFILEOPSTRUCTW$fAnyOperationsAborted$VH() { return _SHFILEOPSTRUCTW$fAnyOperationsAborted$VH_; }

    static final MemoryLayout _SHFILEOPSTRUCTW$hNameMappings$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEOPSTRUCTW$hNameMappings$LAYOUT() { return _SHFILEOPSTRUCTW$hNameMappings$LAYOUT_; }

    static final VarHandle _SHFILEOPSTRUCTW$hNameMappings$VH_ = MemoryHandles.asAddressVarHandle(_SHFILEOPSTRUCTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hNameMappings")));
    static final java.lang.invoke.VarHandle _SHFILEOPSTRUCTW$hNameMappings$VH() { return _SHFILEOPSTRUCTW$hNameMappings$VH_; }

    static final MemoryLayout _SHFILEOPSTRUCTW$lpszProgressTitle$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEOPSTRUCTW$lpszProgressTitle$LAYOUT() { return _SHFILEOPSTRUCTW$lpszProgressTitle$LAYOUT_; }

    static final VarHandle _SHFILEOPSTRUCTW$lpszProgressTitle$VH_ = MemoryHandles.asAddressVarHandle(_SHFILEOPSTRUCTW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszProgressTitle")));
    static final java.lang.invoke.VarHandle _SHFILEOPSTRUCTW$lpszProgressTitle$VH() { return _SHFILEOPSTRUCTW$lpszProgressTitle$VH_; }

    static final FunctionDescriptor SHFileOperationA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHFileOperationA$FUNC() { return SHFileOperationA$FUNC_; }

    static final MethodHandle SHFileOperationA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHFileOperationA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SHFileOperationA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHFileOperationA$MH() { return SHFileOperationA$MH_; }

    static final FunctionDescriptor SHFileOperationW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHFileOperationW$FUNC() { return SHFileOperationW$FUNC_; }

    static final MethodHandle SHFileOperationW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHFileOperationW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SHFileOperationW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHFileOperationW$MH() { return SHFileOperationW$MH_; }

    static final FunctionDescriptor SHFreeNameMappings$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHFreeNameMappings$FUNC() { return SHFreeNameMappings$FUNC_; }

    static final MethodHandle SHFreeNameMappings$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHFreeNameMappings",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        SHFreeNameMappings$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHFreeNameMappings$MH() { return SHFreeNameMappings$MH_; }

    static final MemoryLayout _SHNAMEMAPPINGA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pszOldPath"),
        C_POINTER.withName("pszNewPath"),
        C_INT.withName("cchOldPath"),
        C_INT.withName("cchNewPath")
    ).withName("_SHNAMEMAPPINGA");
    static final jdk.incubator.foreign.MemoryLayout _SHNAMEMAPPINGA$struct$LAYOUT() { return _SHNAMEMAPPINGA$struct$LAYOUT_; }

    static final MemoryLayout _SHNAMEMAPPINGA$pszOldPath$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHNAMEMAPPINGA$pszOldPath$LAYOUT() { return _SHNAMEMAPPINGA$pszOldPath$LAYOUT_; }

    static final VarHandle _SHNAMEMAPPINGA$pszOldPath$VH_ = MemoryHandles.asAddressVarHandle(_SHNAMEMAPPINGA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszOldPath")));
    static final java.lang.invoke.VarHandle _SHNAMEMAPPINGA$pszOldPath$VH() { return _SHNAMEMAPPINGA$pszOldPath$VH_; }

    static final MemoryLayout _SHNAMEMAPPINGA$pszNewPath$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHNAMEMAPPINGA$pszNewPath$LAYOUT() { return _SHNAMEMAPPINGA$pszNewPath$LAYOUT_; }

    static final VarHandle _SHNAMEMAPPINGA$pszNewPath$VH_ = MemoryHandles.asAddressVarHandle(_SHNAMEMAPPINGA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszNewPath")));
    static final java.lang.invoke.VarHandle _SHNAMEMAPPINGA$pszNewPath$VH() { return _SHNAMEMAPPINGA$pszNewPath$VH_; }

    static final MemoryLayout _SHNAMEMAPPINGA$cchOldPath$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SHNAMEMAPPINGA$cchOldPath$LAYOUT() { return _SHNAMEMAPPINGA$cchOldPath$LAYOUT_; }

    static final VarHandle _SHNAMEMAPPINGA$cchOldPath$VH_ = _SHNAMEMAPPINGA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cchOldPath"));
    static final java.lang.invoke.VarHandle _SHNAMEMAPPINGA$cchOldPath$VH() { return _SHNAMEMAPPINGA$cchOldPath$VH_; }

    static final MemoryLayout _SHNAMEMAPPINGA$cchNewPath$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SHNAMEMAPPINGA$cchNewPath$LAYOUT() { return _SHNAMEMAPPINGA$cchNewPath$LAYOUT_; }

    static final VarHandle _SHNAMEMAPPINGA$cchNewPath$VH_ = _SHNAMEMAPPINGA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cchNewPath"));
    static final java.lang.invoke.VarHandle _SHNAMEMAPPINGA$cchNewPath$VH() { return _SHNAMEMAPPINGA$cchNewPath$VH_; }

    static final MemoryLayout _SHNAMEMAPPINGW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pszOldPath"),
        C_POINTER.withName("pszNewPath"),
        C_INT.withName("cchOldPath"),
        C_INT.withName("cchNewPath")
    ).withName("_SHNAMEMAPPINGW");
    static final jdk.incubator.foreign.MemoryLayout _SHNAMEMAPPINGW$struct$LAYOUT() { return _SHNAMEMAPPINGW$struct$LAYOUT_; }

    static final MemoryLayout _SHNAMEMAPPINGW$pszOldPath$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHNAMEMAPPINGW$pszOldPath$LAYOUT() { return _SHNAMEMAPPINGW$pszOldPath$LAYOUT_; }

    static final VarHandle _SHNAMEMAPPINGW$pszOldPath$VH_ = MemoryHandles.asAddressVarHandle(_SHNAMEMAPPINGW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszOldPath")));
    static final java.lang.invoke.VarHandle _SHNAMEMAPPINGW$pszOldPath$VH() { return _SHNAMEMAPPINGW$pszOldPath$VH_; }

    static final MemoryLayout _SHNAMEMAPPINGW$pszNewPath$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHNAMEMAPPINGW$pszNewPath$LAYOUT() { return _SHNAMEMAPPINGW$pszNewPath$LAYOUT_; }

    static final VarHandle _SHNAMEMAPPINGW$pszNewPath$VH_ = MemoryHandles.asAddressVarHandle(_SHNAMEMAPPINGW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszNewPath")));
    static final java.lang.invoke.VarHandle _SHNAMEMAPPINGW$pszNewPath$VH() { return _SHNAMEMAPPINGW$pszNewPath$VH_; }

    static final MemoryLayout _SHNAMEMAPPINGW$cchOldPath$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SHNAMEMAPPINGW$cchOldPath$LAYOUT() { return _SHNAMEMAPPINGW$cchOldPath$LAYOUT_; }

    static final VarHandle _SHNAMEMAPPINGW$cchOldPath$VH_ = _SHNAMEMAPPINGW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cchOldPath"));
    static final java.lang.invoke.VarHandle _SHNAMEMAPPINGW$cchOldPath$VH() { return _SHNAMEMAPPINGW$cchOldPath$VH_; }

    static final MemoryLayout _SHNAMEMAPPINGW$cchNewPath$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SHNAMEMAPPINGW$cchNewPath$LAYOUT() { return _SHNAMEMAPPINGW$cchNewPath$LAYOUT_; }

    static final VarHandle _SHNAMEMAPPINGW$cchNewPath$VH_ = _SHNAMEMAPPINGW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cchNewPath"));
    static final java.lang.invoke.VarHandle _SHNAMEMAPPINGW$cchNewPath$VH() { return _SHNAMEMAPPINGW$cchNewPath$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("fMask"),
        C_POINTER.withName("hwnd"),
        C_POINTER.withName("lpVerb"),
        C_POINTER.withName("lpFile"),
        C_POINTER.withName("lpParameters"),
        C_POINTER.withName("lpDirectory"),
        C_INT.withName("nShow"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hInstApp"),
        C_POINTER.withName("lpIDList"),
        C_POINTER.withName("lpClass"),
        C_POINTER.withName("hkeyClass"),
        C_LONG.withName("dwHotKey"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hIcon"),
        C_POINTER.withName("hMonitor"),
        C_POINTER.withName("hProcess")
    ).withName("_SHELLEXECUTEINFOA");
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOA$struct$LAYOUT() { return _SHELLEXECUTEINFOA$struct$LAYOUT_; }

    static final MemoryLayout _SHELLEXECUTEINFOA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOA$cbSize$LAYOUT() { return _SHELLEXECUTEINFOA$cbSize$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOA$cbSize$VH_ = _SHELLEXECUTEINFOA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOA$cbSize$VH() { return _SHELLEXECUTEINFOA$cbSize$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOA$fMask$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOA$fMask$LAYOUT() { return _SHELLEXECUTEINFOA$fMask$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOA$fMask$VH_ = _SHELLEXECUTEINFOA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fMask"));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOA$fMask$VH() { return _SHELLEXECUTEINFOA$fMask$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOA$hwnd$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOA$hwnd$LAYOUT() { return _SHELLEXECUTEINFOA$hwnd$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOA$hwnd$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwnd")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOA$hwnd$VH() { return _SHELLEXECUTEINFOA$hwnd$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOA$lpVerb$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOA$lpVerb$LAYOUT() { return _SHELLEXECUTEINFOA$lpVerb$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOA$lpVerb$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVerb")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOA$lpVerb$VH() { return _SHELLEXECUTEINFOA$lpVerb$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOA$lpFile$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOA$lpFile$LAYOUT() { return _SHELLEXECUTEINFOA$lpFile$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOA$lpFile$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpFile")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOA$lpFile$VH() { return _SHELLEXECUTEINFOA$lpFile$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOA$lpParameters$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOA$lpParameters$LAYOUT() { return _SHELLEXECUTEINFOA$lpParameters$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOA$lpParameters$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpParameters")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOA$lpParameters$VH() { return _SHELLEXECUTEINFOA$lpParameters$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOA$lpDirectory$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOA$lpDirectory$LAYOUT() { return _SHELLEXECUTEINFOA$lpDirectory$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOA$lpDirectory$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpDirectory")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOA$lpDirectory$VH() { return _SHELLEXECUTEINFOA$lpDirectory$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOA$nShow$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOA$nShow$LAYOUT() { return _SHELLEXECUTEINFOA$nShow$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOA$nShow$VH_ = _SHELLEXECUTEINFOA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nShow"));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOA$nShow$VH() { return _SHELLEXECUTEINFOA$nShow$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOA$hInstApp$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOA$hInstApp$LAYOUT() { return _SHELLEXECUTEINFOA$hInstApp$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOA$hInstApp$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInstApp")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOA$hInstApp$VH() { return _SHELLEXECUTEINFOA$hInstApp$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOA$lpIDList$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOA$lpIDList$LAYOUT() { return _SHELLEXECUTEINFOA$lpIDList$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOA$lpIDList$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpIDList")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOA$lpIDList$VH() { return _SHELLEXECUTEINFOA$lpIDList$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOA$lpClass$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOA$lpClass$LAYOUT() { return _SHELLEXECUTEINFOA$lpClass$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOA$lpClass$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpClass")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOA$lpClass$VH() { return _SHELLEXECUTEINFOA$lpClass$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOA$hkeyClass$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOA$hkeyClass$LAYOUT() { return _SHELLEXECUTEINFOA$hkeyClass$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOA$hkeyClass$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hkeyClass")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOA$hkeyClass$VH() { return _SHELLEXECUTEINFOA$hkeyClass$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOA$dwHotKey$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOA$dwHotKey$LAYOUT() { return _SHELLEXECUTEINFOA$dwHotKey$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOA$dwHotKey$VH_ = _SHELLEXECUTEINFOA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwHotKey"));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOA$dwHotKey$VH() { return _SHELLEXECUTEINFOA$dwHotKey$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOA$hIcon$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOA$hIcon$LAYOUT() { return _SHELLEXECUTEINFOA$hIcon$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOA$hIcon$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hIcon")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOA$hIcon$VH() { return _SHELLEXECUTEINFOA$hIcon$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOA$hMonitor$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOA$hMonitor$LAYOUT() { return _SHELLEXECUTEINFOA$hMonitor$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOA$hMonitor$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hMonitor")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOA$hMonitor$VH() { return _SHELLEXECUTEINFOA$hMonitor$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOA$hProcess$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOA$hProcess$LAYOUT() { return _SHELLEXECUTEINFOA$hProcess$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOA$hProcess$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hProcess")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOA$hProcess$VH() { return _SHELLEXECUTEINFOA$hProcess$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("fMask"),
        C_POINTER.withName("hwnd"),
        C_POINTER.withName("lpVerb"),
        C_POINTER.withName("lpFile"),
        C_POINTER.withName("lpParameters"),
        C_POINTER.withName("lpDirectory"),
        C_INT.withName("nShow"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hInstApp"),
        C_POINTER.withName("lpIDList"),
        C_POINTER.withName("lpClass"),
        C_POINTER.withName("hkeyClass"),
        C_LONG.withName("dwHotKey"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hIcon"),
        C_POINTER.withName("hMonitor"),
        C_POINTER.withName("hProcess")
    ).withName("_SHELLEXECUTEINFOW");
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOW$struct$LAYOUT() { return _SHELLEXECUTEINFOW$struct$LAYOUT_; }

    static final MemoryLayout _SHELLEXECUTEINFOW$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOW$cbSize$LAYOUT() { return _SHELLEXECUTEINFOW$cbSize$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOW$cbSize$VH_ = _SHELLEXECUTEINFOW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOW$cbSize$VH() { return _SHELLEXECUTEINFOW$cbSize$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOW$fMask$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOW$fMask$LAYOUT() { return _SHELLEXECUTEINFOW$fMask$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOW$fMask$VH_ = _SHELLEXECUTEINFOW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fMask"));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOW$fMask$VH() { return _SHELLEXECUTEINFOW$fMask$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOW$hwnd$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOW$hwnd$LAYOUT() { return _SHELLEXECUTEINFOW$hwnd$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOW$hwnd$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwnd")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOW$hwnd$VH() { return _SHELLEXECUTEINFOW$hwnd$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOW$lpVerb$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOW$lpVerb$LAYOUT() { return _SHELLEXECUTEINFOW$lpVerb$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOW$lpVerb$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVerb")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOW$lpVerb$VH() { return _SHELLEXECUTEINFOW$lpVerb$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOW$lpFile$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOW$lpFile$LAYOUT() { return _SHELLEXECUTEINFOW$lpFile$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOW$lpFile$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpFile")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOW$lpFile$VH() { return _SHELLEXECUTEINFOW$lpFile$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOW$lpParameters$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOW$lpParameters$LAYOUT() { return _SHELLEXECUTEINFOW$lpParameters$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOW$lpParameters$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpParameters")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOW$lpParameters$VH() { return _SHELLEXECUTEINFOW$lpParameters$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOW$lpDirectory$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOW$lpDirectory$LAYOUT() { return _SHELLEXECUTEINFOW$lpDirectory$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOW$lpDirectory$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpDirectory")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOW$lpDirectory$VH() { return _SHELLEXECUTEINFOW$lpDirectory$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOW$nShow$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOW$nShow$LAYOUT() { return _SHELLEXECUTEINFOW$nShow$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOW$nShow$VH_ = _SHELLEXECUTEINFOW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nShow"));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOW$nShow$VH() { return _SHELLEXECUTEINFOW$nShow$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOW$hInstApp$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOW$hInstApp$LAYOUT() { return _SHELLEXECUTEINFOW$hInstApp$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOW$hInstApp$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInstApp")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOW$hInstApp$VH() { return _SHELLEXECUTEINFOW$hInstApp$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOW$lpIDList$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOW$lpIDList$LAYOUT() { return _SHELLEXECUTEINFOW$lpIDList$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOW$lpIDList$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpIDList")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOW$lpIDList$VH() { return _SHELLEXECUTEINFOW$lpIDList$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOW$lpClass$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOW$lpClass$LAYOUT() { return _SHELLEXECUTEINFOW$lpClass$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOW$lpClass$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpClass")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOW$lpClass$VH() { return _SHELLEXECUTEINFOW$lpClass$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOW$hkeyClass$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOW$hkeyClass$LAYOUT() { return _SHELLEXECUTEINFOW$hkeyClass$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOW$hkeyClass$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hkeyClass")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOW$hkeyClass$VH() { return _SHELLEXECUTEINFOW$hkeyClass$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOW$dwHotKey$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOW$dwHotKey$LAYOUT() { return _SHELLEXECUTEINFOW$dwHotKey$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOW$dwHotKey$VH_ = _SHELLEXECUTEINFOW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwHotKey"));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOW$dwHotKey$VH() { return _SHELLEXECUTEINFOW$dwHotKey$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOW$hIcon$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOW$hIcon$LAYOUT() { return _SHELLEXECUTEINFOW$hIcon$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOW$hIcon$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hIcon")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOW$hIcon$VH() { return _SHELLEXECUTEINFOW$hIcon$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOW$hMonitor$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOW$hMonitor$LAYOUT() { return _SHELLEXECUTEINFOW$hMonitor$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOW$hMonitor$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hMonitor")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOW$hMonitor$VH() { return _SHELLEXECUTEINFOW$hMonitor$VH_; }

    static final MemoryLayout _SHELLEXECUTEINFOW$hProcess$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHELLEXECUTEINFOW$hProcess$LAYOUT() { return _SHELLEXECUTEINFOW$hProcess$LAYOUT_; }

    static final VarHandle _SHELLEXECUTEINFOW$hProcess$VH_ = MemoryHandles.asAddressVarHandle(_SHELLEXECUTEINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hProcess")));
    static final java.lang.invoke.VarHandle _SHELLEXECUTEINFOW$hProcess$VH() { return _SHELLEXECUTEINFOW$hProcess$VH_; }

    static final FunctionDescriptor ShellExecuteExA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ShellExecuteExA$FUNC() { return ShellExecuteExA$FUNC_; }

    static final MethodHandle ShellExecuteExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ShellExecuteExA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ShellExecuteExA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ShellExecuteExA$MH() { return ShellExecuteExA$MH_; }

    static final FunctionDescriptor ShellExecuteExW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ShellExecuteExW$FUNC() { return ShellExecuteExW$FUNC_; }

    static final MethodHandle ShellExecuteExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ShellExecuteExW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ShellExecuteExW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ShellExecuteExW$MH() { return ShellExecuteExW$MH_; }

    static final MemoryLayout _SHCREATEPROCESSINFOW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("fMask"),
        C_POINTER.withName("hwnd"),
        C_POINTER.withName("pszFile"),
        C_POINTER.withName("pszParameters"),
        C_POINTER.withName("pszCurrentDirectory"),
        C_POINTER.withName("hUserToken"),
        C_POINTER.withName("lpProcessAttributes"),
        C_POINTER.withName("lpThreadAttributes"),
        C_INT.withName("bInheritHandles"),
        C_LONG.withName("dwCreationFlags"),
        C_POINTER.withName("lpStartupInfo"),
        C_POINTER.withName("lpProcessInformation")
    ).withName("_SHCREATEPROCESSINFOW");
    static final jdk.incubator.foreign.MemoryLayout _SHCREATEPROCESSINFOW$struct$LAYOUT() { return _SHCREATEPROCESSINFOW$struct$LAYOUT_; }

    static final MemoryLayout _SHCREATEPROCESSINFOW$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SHCREATEPROCESSINFOW$cbSize$LAYOUT() { return _SHCREATEPROCESSINFOW$cbSize$LAYOUT_; }

    static final VarHandle _SHCREATEPROCESSINFOW$cbSize$VH_ = _SHCREATEPROCESSINFOW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _SHCREATEPROCESSINFOW$cbSize$VH() { return _SHCREATEPROCESSINFOW$cbSize$VH_; }

    static final MemoryLayout _SHCREATEPROCESSINFOW$fMask$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SHCREATEPROCESSINFOW$fMask$LAYOUT() { return _SHCREATEPROCESSINFOW$fMask$LAYOUT_; }

    static final VarHandle _SHCREATEPROCESSINFOW$fMask$VH_ = _SHCREATEPROCESSINFOW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fMask"));
    static final java.lang.invoke.VarHandle _SHCREATEPROCESSINFOW$fMask$VH() { return _SHCREATEPROCESSINFOW$fMask$VH_; }

    static final MemoryLayout _SHCREATEPROCESSINFOW$hwnd$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHCREATEPROCESSINFOW$hwnd$LAYOUT() { return _SHCREATEPROCESSINFOW$hwnd$LAYOUT_; }

    static final VarHandle _SHCREATEPROCESSINFOW$hwnd$VH_ = MemoryHandles.asAddressVarHandle(_SHCREATEPROCESSINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwnd")));
    static final java.lang.invoke.VarHandle _SHCREATEPROCESSINFOW$hwnd$VH() { return _SHCREATEPROCESSINFOW$hwnd$VH_; }

    static final MemoryLayout _SHCREATEPROCESSINFOW$pszFile$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHCREATEPROCESSINFOW$pszFile$LAYOUT() { return _SHCREATEPROCESSINFOW$pszFile$LAYOUT_; }

    static final VarHandle _SHCREATEPROCESSINFOW$pszFile$VH_ = MemoryHandles.asAddressVarHandle(_SHCREATEPROCESSINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszFile")));
    static final java.lang.invoke.VarHandle _SHCREATEPROCESSINFOW$pszFile$VH() { return _SHCREATEPROCESSINFOW$pszFile$VH_; }

    static final MemoryLayout _SHCREATEPROCESSINFOW$pszParameters$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHCREATEPROCESSINFOW$pszParameters$LAYOUT() { return _SHCREATEPROCESSINFOW$pszParameters$LAYOUT_; }

    static final VarHandle _SHCREATEPROCESSINFOW$pszParameters$VH_ = MemoryHandles.asAddressVarHandle(_SHCREATEPROCESSINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszParameters")));
    static final java.lang.invoke.VarHandle _SHCREATEPROCESSINFOW$pszParameters$VH() { return _SHCREATEPROCESSINFOW$pszParameters$VH_; }

    static final MemoryLayout _SHCREATEPROCESSINFOW$pszCurrentDirectory$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHCREATEPROCESSINFOW$pszCurrentDirectory$LAYOUT() { return _SHCREATEPROCESSINFOW$pszCurrentDirectory$LAYOUT_; }

    static final VarHandle _SHCREATEPROCESSINFOW$pszCurrentDirectory$VH_ = MemoryHandles.asAddressVarHandle(_SHCREATEPROCESSINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszCurrentDirectory")));
    static final java.lang.invoke.VarHandle _SHCREATEPROCESSINFOW$pszCurrentDirectory$VH() { return _SHCREATEPROCESSINFOW$pszCurrentDirectory$VH_; }

    static final MemoryLayout _SHCREATEPROCESSINFOW$hUserToken$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHCREATEPROCESSINFOW$hUserToken$LAYOUT() { return _SHCREATEPROCESSINFOW$hUserToken$LAYOUT_; }

    static final VarHandle _SHCREATEPROCESSINFOW$hUserToken$VH_ = MemoryHandles.asAddressVarHandle(_SHCREATEPROCESSINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hUserToken")));
    static final java.lang.invoke.VarHandle _SHCREATEPROCESSINFOW$hUserToken$VH() { return _SHCREATEPROCESSINFOW$hUserToken$VH_; }

    static final MemoryLayout _SHCREATEPROCESSINFOW$lpProcessAttributes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHCREATEPROCESSINFOW$lpProcessAttributes$LAYOUT() { return _SHCREATEPROCESSINFOW$lpProcessAttributes$LAYOUT_; }

    static final VarHandle _SHCREATEPROCESSINFOW$lpProcessAttributes$VH_ = MemoryHandles.asAddressVarHandle(_SHCREATEPROCESSINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpProcessAttributes")));
    static final java.lang.invoke.VarHandle _SHCREATEPROCESSINFOW$lpProcessAttributes$VH() { return _SHCREATEPROCESSINFOW$lpProcessAttributes$VH_; }

    static final MemoryLayout _SHCREATEPROCESSINFOW$lpThreadAttributes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHCREATEPROCESSINFOW$lpThreadAttributes$LAYOUT() { return _SHCREATEPROCESSINFOW$lpThreadAttributes$LAYOUT_; }

    static final VarHandle _SHCREATEPROCESSINFOW$lpThreadAttributes$VH_ = MemoryHandles.asAddressVarHandle(_SHCREATEPROCESSINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpThreadAttributes")));
    static final java.lang.invoke.VarHandle _SHCREATEPROCESSINFOW$lpThreadAttributes$VH() { return _SHCREATEPROCESSINFOW$lpThreadAttributes$VH_; }

    static final MemoryLayout _SHCREATEPROCESSINFOW$bInheritHandles$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SHCREATEPROCESSINFOW$bInheritHandles$LAYOUT() { return _SHCREATEPROCESSINFOW$bInheritHandles$LAYOUT_; }

    static final VarHandle _SHCREATEPROCESSINFOW$bInheritHandles$VH_ = _SHCREATEPROCESSINFOW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bInheritHandles"));
    static final java.lang.invoke.VarHandle _SHCREATEPROCESSINFOW$bInheritHandles$VH() { return _SHCREATEPROCESSINFOW$bInheritHandles$VH_; }

    static final MemoryLayout _SHCREATEPROCESSINFOW$dwCreationFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SHCREATEPROCESSINFOW$dwCreationFlags$LAYOUT() { return _SHCREATEPROCESSINFOW$dwCreationFlags$LAYOUT_; }

    static final VarHandle _SHCREATEPROCESSINFOW$dwCreationFlags$VH_ = _SHCREATEPROCESSINFOW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCreationFlags"));
    static final java.lang.invoke.VarHandle _SHCREATEPROCESSINFOW$dwCreationFlags$VH() { return _SHCREATEPROCESSINFOW$dwCreationFlags$VH_; }

    static final MemoryLayout _SHCREATEPROCESSINFOW$lpStartupInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHCREATEPROCESSINFOW$lpStartupInfo$LAYOUT() { return _SHCREATEPROCESSINFOW$lpStartupInfo$LAYOUT_; }

    static final VarHandle _SHCREATEPROCESSINFOW$lpStartupInfo$VH_ = MemoryHandles.asAddressVarHandle(_SHCREATEPROCESSINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpStartupInfo")));
    static final java.lang.invoke.VarHandle _SHCREATEPROCESSINFOW$lpStartupInfo$VH() { return _SHCREATEPROCESSINFOW$lpStartupInfo$VH_; }

    static final MemoryLayout _SHCREATEPROCESSINFOW$lpProcessInformation$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHCREATEPROCESSINFOW$lpProcessInformation$LAYOUT() { return _SHCREATEPROCESSINFOW$lpProcessInformation$LAYOUT_; }

    static final VarHandle _SHCREATEPROCESSINFOW$lpProcessInformation$VH_ = MemoryHandles.asAddressVarHandle(_SHCREATEPROCESSINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpProcessInformation")));
    static final java.lang.invoke.VarHandle _SHCREATEPROCESSINFOW$lpProcessInformation$VH() { return _SHCREATEPROCESSINFOW$lpProcessInformation$VH_; }

    static final FunctionDescriptor SHCreateProcessAsUserW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHCreateProcessAsUserW$FUNC() { return SHCreateProcessAsUserW$FUNC_; }

    static final MethodHandle SHCreateProcessAsUserW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHCreateProcessAsUserW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SHCreateProcessAsUserW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHCreateProcessAsUserW$MH() { return SHCreateProcessAsUserW$MH_; }

    static final FunctionDescriptor SHEvaluateSystemCommandTemplate$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHEvaluateSystemCommandTemplate$FUNC() { return SHEvaluateSystemCommandTemplate$FUNC_; }

    static final MethodHandle SHEvaluateSystemCommandTemplate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHEvaluateSystemCommandTemplate",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SHEvaluateSystemCommandTemplate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHEvaluateSystemCommandTemplate$MH() { return SHEvaluateSystemCommandTemplate$MH_; }

    static final int ASSOCCLASS_SHELL_KEY() { return (int)0L; }

    static final int ASSOCCLASS_PROGID_KEY() { return (int)1L; }

    static final int ASSOCCLASS_PROGID_STR() { return (int)2L; }

    static final int ASSOCCLASS_CLSID_KEY() { return (int)3L; }

    static final int ASSOCCLASS_CLSID_STR() { return (int)4L; }

    static final int ASSOCCLASS_APP_KEY() { return (int)5L; }

    static final int ASSOCCLASS_APP_STR() { return (int)6L; }

    static final int ASSOCCLASS_SYSTEM_STR() { return (int)7L; }

    static final int ASSOCCLASS_FOLDER() { return (int)8L; }

    static final int ASSOCCLASS_STAR() { return (int)9L; }

    static final int ASSOCCLASS_FIXED_PROGID_STR() { return (int)10L; }

    static final int ASSOCCLASS_PROTOCOL_STR() { return (int)11L; }

    static final MemoryLayout ASSOCIATIONELEMENT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("ac"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hkClass"),
        C_POINTER.withName("pszClass")
    ).withName("ASSOCIATIONELEMENT");
    static final jdk.incubator.foreign.MemoryLayout ASSOCIATIONELEMENT$struct$LAYOUT() { return ASSOCIATIONELEMENT$struct$LAYOUT_; }

    static final MemoryLayout ASSOCIATIONELEMENT$ac$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout ASSOCIATIONELEMENT$ac$LAYOUT() { return ASSOCIATIONELEMENT$ac$LAYOUT_; }

    static final VarHandle ASSOCIATIONELEMENT$ac$VH_ = ASSOCIATIONELEMENT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ac"));
    static final java.lang.invoke.VarHandle ASSOCIATIONELEMENT$ac$VH() { return ASSOCIATIONELEMENT$ac$VH_; }

    static final MemoryLayout ASSOCIATIONELEMENT$hkClass$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ASSOCIATIONELEMENT$hkClass$LAYOUT() { return ASSOCIATIONELEMENT$hkClass$LAYOUT_; }

    static final VarHandle ASSOCIATIONELEMENT$hkClass$VH_ = MemoryHandles.asAddressVarHandle(ASSOCIATIONELEMENT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hkClass")));
    static final java.lang.invoke.VarHandle ASSOCIATIONELEMENT$hkClass$VH() { return ASSOCIATIONELEMENT$hkClass$VH_; }

    static final MemoryLayout ASSOCIATIONELEMENT$pszClass$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ASSOCIATIONELEMENT$pszClass$LAYOUT() { return ASSOCIATIONELEMENT$pszClass$LAYOUT_; }

    static final VarHandle ASSOCIATIONELEMENT$pszClass$VH_ = MemoryHandles.asAddressVarHandle(ASSOCIATIONELEMENT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszClass")));
    static final java.lang.invoke.VarHandle ASSOCIATIONELEMENT$pszClass$VH() { return ASSOCIATIONELEMENT$pszClass$VH_; }

    static final FunctionDescriptor AssocCreateForClasses$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AssocCreateForClasses$FUNC() { return AssocCreateForClasses$FUNC_; }

    static final MethodHandle AssocCreateForClasses$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AssocCreateForClasses",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        AssocCreateForClasses$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AssocCreateForClasses$MH() { return AssocCreateForClasses$MH_; }

    static final MemoryLayout _SHQUERYRBINFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("i64Size"),
        C_LONGLONG.withName("i64NumItems")
    ).withName("_SHQUERYRBINFO");
    static final jdk.incubator.foreign.MemoryLayout _SHQUERYRBINFO$struct$LAYOUT() { return _SHQUERYRBINFO$struct$LAYOUT_; }

    static final MemoryLayout _SHQUERYRBINFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SHQUERYRBINFO$cbSize$LAYOUT() { return _SHQUERYRBINFO$cbSize$LAYOUT_; }

    static final VarHandle _SHQUERYRBINFO$cbSize$VH_ = _SHQUERYRBINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _SHQUERYRBINFO$cbSize$VH() { return _SHQUERYRBINFO$cbSize$VH_; }

    static final MemoryLayout _SHQUERYRBINFO$i64Size$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _SHQUERYRBINFO$i64Size$LAYOUT() { return _SHQUERYRBINFO$i64Size$LAYOUT_; }

    static final VarHandle _SHQUERYRBINFO$i64Size$VH_ = _SHQUERYRBINFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("i64Size"));
    static final java.lang.invoke.VarHandle _SHQUERYRBINFO$i64Size$VH() { return _SHQUERYRBINFO$i64Size$VH_; }

    static final MemoryLayout _SHQUERYRBINFO$i64NumItems$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _SHQUERYRBINFO$i64NumItems$LAYOUT() { return _SHQUERYRBINFO$i64NumItems$LAYOUT_; }

    static final VarHandle _SHQUERYRBINFO$i64NumItems$VH_ = _SHQUERYRBINFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("i64NumItems"));
    static final java.lang.invoke.VarHandle _SHQUERYRBINFO$i64NumItems$VH() { return _SHQUERYRBINFO$i64NumItems$VH_; }

    static final FunctionDescriptor SHQueryRecycleBinA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHQueryRecycleBinA$FUNC() { return SHQueryRecycleBinA$FUNC_; }

    static final MethodHandle SHQueryRecycleBinA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHQueryRecycleBinA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SHQueryRecycleBinA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHQueryRecycleBinA$MH() { return SHQueryRecycleBinA$MH_; }

    static final FunctionDescriptor SHQueryRecycleBinW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHQueryRecycleBinW$FUNC() { return SHQueryRecycleBinW$FUNC_; }

    static final MethodHandle SHQueryRecycleBinW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHQueryRecycleBinW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SHQueryRecycleBinW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHQueryRecycleBinW$MH() { return SHQueryRecycleBinW$MH_; }

    static final FunctionDescriptor SHEmptyRecycleBinA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHEmptyRecycleBinA$FUNC() { return SHEmptyRecycleBinA$FUNC_; }

    static final MethodHandle SHEmptyRecycleBinA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHEmptyRecycleBinA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        SHEmptyRecycleBinA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHEmptyRecycleBinA$MH() { return SHEmptyRecycleBinA$MH_; }

    static final FunctionDescriptor SHEmptyRecycleBinW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHEmptyRecycleBinW$FUNC() { return SHEmptyRecycleBinW$FUNC_; }

    static final MethodHandle SHEmptyRecycleBinW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHEmptyRecycleBinW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        SHEmptyRecycleBinW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHEmptyRecycleBinW$MH() { return SHEmptyRecycleBinW$MH_; }

    static final int QUNS_NOT_PRESENT() { return (int)1L; }

    static final int QUNS_BUSY() { return (int)2L; }

    static final int QUNS_RUNNING_D3D_FULL_SCREEN() { return (int)3L; }

    static final int QUNS_PRESENTATION_MODE() { return (int)4L; }

    static final int QUNS_ACCEPTS_NOTIFICATIONS() { return (int)5L; }

    static final int QUNS_QUIET_TIME() { return (int)6L; }

    static final int QUNS_APP() { return (int)7L; }

    static final FunctionDescriptor SHQueryUserNotificationState$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHQueryUserNotificationState$FUNC() { return SHQueryUserNotificationState$FUNC_; }

    static final MethodHandle SHQueryUserNotificationState$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHQueryUserNotificationState",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SHQueryUserNotificationState$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHQueryUserNotificationState$MH() { return SHQueryUserNotificationState$MH_; }

    static final FunctionDescriptor SHGetPropertyStoreForWindow$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHGetPropertyStoreForWindow$FUNC() { return SHGetPropertyStoreForWindow$FUNC_; }

    static final MethodHandle SHGetPropertyStoreForWindow$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHGetPropertyStoreForWindow",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SHGetPropertyStoreForWindow$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHGetPropertyStoreForWindow$MH() { return SHGetPropertyStoreForWindow$MH_; }

    static final MemoryLayout _NOTIFYICONDATAA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hWnd"),
        C_INT.withName("uID"),
        C_INT.withName("uFlags"),
        C_INT.withName("uCallbackMessage"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hIcon"),
        MemoryLayout.ofSequence(128, C_CHAR).withName("szTip"),
        C_LONG.withName("dwState"),
        C_LONG.withName("dwStateMask"),
        MemoryLayout.ofSequence(256, C_CHAR).withName("szInfo"),
        C_INT.withName("uTimeout"),
        C_INT.withName("uVersion"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("szInfoTitle"),
        C_LONG.withName("dwInfoFlags"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("guidItem"),
        C_POINTER.withName("hBalloonIcon")
    ).withName("_NOTIFYICONDATAA");
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAA$struct$LAYOUT() { return _NOTIFYICONDATAA$struct$LAYOUT_; }

    static final MemoryLayout _NOTIFYICONDATAA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAA$cbSize$LAYOUT() { return _NOTIFYICONDATAA$cbSize$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAA$cbSize$VH_ = _NOTIFYICONDATAA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAA$cbSize$VH() { return _NOTIFYICONDATAA$cbSize$VH_; }

    static final MemoryLayout _NOTIFYICONDATAA$hWnd$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAA$hWnd$LAYOUT() { return _NOTIFYICONDATAA$hWnd$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAA$hWnd$VH_ = MemoryHandles.asAddressVarHandle(_NOTIFYICONDATAA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hWnd")));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAA$hWnd$VH() { return _NOTIFYICONDATAA$hWnd$VH_; }

    static final MemoryLayout _NOTIFYICONDATAA$uID$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAA$uID$LAYOUT() { return _NOTIFYICONDATAA$uID$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAA$uID$VH_ = _NOTIFYICONDATAA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uID"));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAA$uID$VH() { return _NOTIFYICONDATAA$uID$VH_; }

    static final MemoryLayout _NOTIFYICONDATAA$uFlags$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAA$uFlags$LAYOUT() { return _NOTIFYICONDATAA$uFlags$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAA$uFlags$VH_ = _NOTIFYICONDATAA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uFlags"));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAA$uFlags$VH() { return _NOTIFYICONDATAA$uFlags$VH_; }

    static final MemoryLayout _NOTIFYICONDATAA$uCallbackMessage$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAA$uCallbackMessage$LAYOUT() { return _NOTIFYICONDATAA$uCallbackMessage$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAA$uCallbackMessage$VH_ = _NOTIFYICONDATAA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uCallbackMessage"));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAA$uCallbackMessage$VH() { return _NOTIFYICONDATAA$uCallbackMessage$VH_; }

    static final MemoryLayout _NOTIFYICONDATAA$hIcon$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAA$hIcon$LAYOUT() { return _NOTIFYICONDATAA$hIcon$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAA$hIcon$VH_ = MemoryHandles.asAddressVarHandle(_NOTIFYICONDATAA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hIcon")));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAA$hIcon$VH() { return _NOTIFYICONDATAA$hIcon$VH_; }

    static final MemoryLayout _NOTIFYICONDATAA$dwState$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAA$dwState$LAYOUT() { return _NOTIFYICONDATAA$dwState$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAA$dwState$VH_ = _NOTIFYICONDATAA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwState"));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAA$dwState$VH() { return _NOTIFYICONDATAA$dwState$VH_; }

    static final MemoryLayout _NOTIFYICONDATAA$dwStateMask$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAA$dwStateMask$LAYOUT() { return _NOTIFYICONDATAA$dwStateMask$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAA$dwStateMask$VH_ = _NOTIFYICONDATAA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStateMask"));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAA$dwStateMask$VH() { return _NOTIFYICONDATAA$dwStateMask$VH_; }

    static final MemoryLayout _NOTIFYICONDATAA$uTimeout$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAA$uTimeout$LAYOUT() { return _NOTIFYICONDATAA$uTimeout$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAA$uTimeout$VH_ = _NOTIFYICONDATAA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uTimeout"));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAA$uTimeout$VH() { return _NOTIFYICONDATAA$uTimeout$VH_; }

    static final MemoryLayout _NOTIFYICONDATAA$uVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAA$uVersion$LAYOUT() { return _NOTIFYICONDATAA$uVersion$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAA$uVersion$VH_ = _NOTIFYICONDATAA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uVersion"));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAA$uVersion$VH() { return _NOTIFYICONDATAA$uVersion$VH_; }

    static final MemoryLayout _NOTIFYICONDATAA$dwInfoFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAA$dwInfoFlags$LAYOUT() { return _NOTIFYICONDATAA$dwInfoFlags$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAA$dwInfoFlags$VH_ = _NOTIFYICONDATAA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwInfoFlags"));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAA$dwInfoFlags$VH() { return _NOTIFYICONDATAA$dwInfoFlags$VH_; }

    static final MemoryLayout _NOTIFYICONDATAA$hBalloonIcon$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAA$hBalloonIcon$LAYOUT() { return _NOTIFYICONDATAA$hBalloonIcon$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAA$hBalloonIcon$VH_ = MemoryHandles.asAddressVarHandle(_NOTIFYICONDATAA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hBalloonIcon")));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAA$hBalloonIcon$VH() { return _NOTIFYICONDATAA$hBalloonIcon$VH_; }

    static final MemoryLayout _NOTIFYICONDATAW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hWnd"),
        C_INT.withName("uID"),
        C_INT.withName("uFlags"),
        C_INT.withName("uCallbackMessage"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hIcon"),
        MemoryLayout.ofSequence(128, C_SHORT).withName("szTip"),
        C_LONG.withName("dwState"),
        C_LONG.withName("dwStateMask"),
        MemoryLayout.ofSequence(256, C_SHORT).withName("szInfo"),
        C_INT.withName("uTimeout"),
        C_INT.withName("uVersion"),
        MemoryLayout.ofSequence(64, C_SHORT).withName("szInfoTitle"),
        C_LONG.withName("dwInfoFlags"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("guidItem"),
        C_POINTER.withName("hBalloonIcon")
    ).withName("_NOTIFYICONDATAW");
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAW$struct$LAYOUT() { return _NOTIFYICONDATAW$struct$LAYOUT_; }

    static final MemoryLayout _NOTIFYICONDATAW$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAW$cbSize$LAYOUT() { return _NOTIFYICONDATAW$cbSize$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAW$cbSize$VH_ = _NOTIFYICONDATAW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAW$cbSize$VH() { return _NOTIFYICONDATAW$cbSize$VH_; }

    static final MemoryLayout _NOTIFYICONDATAW$hWnd$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAW$hWnd$LAYOUT() { return _NOTIFYICONDATAW$hWnd$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAW$hWnd$VH_ = MemoryHandles.asAddressVarHandle(_NOTIFYICONDATAW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hWnd")));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAW$hWnd$VH() { return _NOTIFYICONDATAW$hWnd$VH_; }

    static final MemoryLayout _NOTIFYICONDATAW$uID$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAW$uID$LAYOUT() { return _NOTIFYICONDATAW$uID$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAW$uID$VH_ = _NOTIFYICONDATAW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uID"));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAW$uID$VH() { return _NOTIFYICONDATAW$uID$VH_; }

    static final MemoryLayout _NOTIFYICONDATAW$uFlags$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAW$uFlags$LAYOUT() { return _NOTIFYICONDATAW$uFlags$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAW$uFlags$VH_ = _NOTIFYICONDATAW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uFlags"));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAW$uFlags$VH() { return _NOTIFYICONDATAW$uFlags$VH_; }

    static final MemoryLayout _NOTIFYICONDATAW$uCallbackMessage$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAW$uCallbackMessage$LAYOUT() { return _NOTIFYICONDATAW$uCallbackMessage$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAW$uCallbackMessage$VH_ = _NOTIFYICONDATAW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uCallbackMessage"));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAW$uCallbackMessage$VH() { return _NOTIFYICONDATAW$uCallbackMessage$VH_; }

    static final MemoryLayout _NOTIFYICONDATAW$hIcon$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAW$hIcon$LAYOUT() { return _NOTIFYICONDATAW$hIcon$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAW$hIcon$VH_ = MemoryHandles.asAddressVarHandle(_NOTIFYICONDATAW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hIcon")));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAW$hIcon$VH() { return _NOTIFYICONDATAW$hIcon$VH_; }

    static final MemoryLayout _NOTIFYICONDATAW$dwState$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAW$dwState$LAYOUT() { return _NOTIFYICONDATAW$dwState$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAW$dwState$VH_ = _NOTIFYICONDATAW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwState"));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAW$dwState$VH() { return _NOTIFYICONDATAW$dwState$VH_; }

    static final MemoryLayout _NOTIFYICONDATAW$dwStateMask$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAW$dwStateMask$LAYOUT() { return _NOTIFYICONDATAW$dwStateMask$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAW$dwStateMask$VH_ = _NOTIFYICONDATAW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStateMask"));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAW$dwStateMask$VH() { return _NOTIFYICONDATAW$dwStateMask$VH_; }

    static final MemoryLayout _NOTIFYICONDATAW$uTimeout$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAW$uTimeout$LAYOUT() { return _NOTIFYICONDATAW$uTimeout$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAW$uTimeout$VH_ = _NOTIFYICONDATAW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uTimeout"));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAW$uTimeout$VH() { return _NOTIFYICONDATAW$uTimeout$VH_; }

    static final MemoryLayout _NOTIFYICONDATAW$uVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAW$uVersion$LAYOUT() { return _NOTIFYICONDATAW$uVersion$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAW$uVersion$VH_ = _NOTIFYICONDATAW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uVersion"));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAW$uVersion$VH() { return _NOTIFYICONDATAW$uVersion$VH_; }

    static final MemoryLayout _NOTIFYICONDATAW$dwInfoFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAW$dwInfoFlags$LAYOUT() { return _NOTIFYICONDATAW$dwInfoFlags$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAW$dwInfoFlags$VH_ = _NOTIFYICONDATAW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwInfoFlags"));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAW$dwInfoFlags$VH() { return _NOTIFYICONDATAW$dwInfoFlags$VH_; }

    static final MemoryLayout _NOTIFYICONDATAW$hBalloonIcon$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONDATAW$hBalloonIcon$LAYOUT() { return _NOTIFYICONDATAW$hBalloonIcon$LAYOUT_; }

    static final VarHandle _NOTIFYICONDATAW$hBalloonIcon$VH_ = MemoryHandles.asAddressVarHandle(_NOTIFYICONDATAW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hBalloonIcon")));
    static final java.lang.invoke.VarHandle _NOTIFYICONDATAW$hBalloonIcon$VH() { return _NOTIFYICONDATAW$hBalloonIcon$VH_; }

    static final MemoryLayout _NOTIFYICONIDENTIFIER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hWnd"),
        C_INT.withName("uID"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("guidItem"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_NOTIFYICONIDENTIFIER");
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONIDENTIFIER$struct$LAYOUT() { return _NOTIFYICONIDENTIFIER$struct$LAYOUT_; }

    static final MemoryLayout _NOTIFYICONIDENTIFIER$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONIDENTIFIER$cbSize$LAYOUT() { return _NOTIFYICONIDENTIFIER$cbSize$LAYOUT_; }

    static final VarHandle _NOTIFYICONIDENTIFIER$cbSize$VH_ = _NOTIFYICONIDENTIFIER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _NOTIFYICONIDENTIFIER$cbSize$VH() { return _NOTIFYICONIDENTIFIER$cbSize$VH_; }

    static final MemoryLayout _NOTIFYICONIDENTIFIER$hWnd$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONIDENTIFIER$hWnd$LAYOUT() { return _NOTIFYICONIDENTIFIER$hWnd$LAYOUT_; }

    static final VarHandle _NOTIFYICONIDENTIFIER$hWnd$VH_ = MemoryHandles.asAddressVarHandle(_NOTIFYICONIDENTIFIER$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hWnd")));
    static final java.lang.invoke.VarHandle _NOTIFYICONIDENTIFIER$hWnd$VH() { return _NOTIFYICONIDENTIFIER$hWnd$VH_; }

    static final MemoryLayout _NOTIFYICONIDENTIFIER$uID$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _NOTIFYICONIDENTIFIER$uID$LAYOUT() { return _NOTIFYICONIDENTIFIER$uID$LAYOUT_; }

    static final VarHandle _NOTIFYICONIDENTIFIER$uID$VH_ = _NOTIFYICONIDENTIFIER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uID"));
    static final java.lang.invoke.VarHandle _NOTIFYICONIDENTIFIER$uID$VH() { return _NOTIFYICONIDENTIFIER$uID$VH_; }

    static final FunctionDescriptor Shell_NotifyIconA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor Shell_NotifyIconA$FUNC() { return Shell_NotifyIconA$FUNC_; }

    static final MethodHandle Shell_NotifyIconA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "Shell_NotifyIconA",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        Shell_NotifyIconA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle Shell_NotifyIconA$MH() { return Shell_NotifyIconA$MH_; }

    static final FunctionDescriptor Shell_NotifyIconW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor Shell_NotifyIconW$FUNC() { return Shell_NotifyIconW$FUNC_; }

    static final MethodHandle Shell_NotifyIconW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "Shell_NotifyIconW",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        Shell_NotifyIconW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle Shell_NotifyIconW$MH() { return Shell_NotifyIconW$MH_; }

    static final FunctionDescriptor Shell_NotifyIconGetRect$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor Shell_NotifyIconGetRect$FUNC() { return Shell_NotifyIconGetRect$FUNC_; }

    static final MethodHandle Shell_NotifyIconGetRect$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "Shell_NotifyIconGetRect",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        Shell_NotifyIconGetRect$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle Shell_NotifyIconGetRect$MH() { return Shell_NotifyIconGetRect$MH_; }

    static final MemoryLayout _SHFILEINFOA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("hIcon"),
        C_INT.withName("iIcon"),
        C_LONG.withName("dwAttributes"),
        MemoryLayout.ofSequence(260, C_CHAR).withName("szDisplayName"),
        MemoryLayout.ofSequence(80, C_CHAR).withName("szTypeName"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_SHFILEINFOA");
    static final jdk.incubator.foreign.MemoryLayout _SHFILEINFOA$struct$LAYOUT() { return _SHFILEINFOA$struct$LAYOUT_; }

    static final MemoryLayout _SHFILEINFOA$hIcon$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEINFOA$hIcon$LAYOUT() { return _SHFILEINFOA$hIcon$LAYOUT_; }

    static final VarHandle _SHFILEINFOA$hIcon$VH_ = MemoryHandles.asAddressVarHandle(_SHFILEINFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hIcon")));
    static final java.lang.invoke.VarHandle _SHFILEINFOA$hIcon$VH() { return _SHFILEINFOA$hIcon$VH_; }

    static final MemoryLayout _SHFILEINFOA$iIcon$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEINFOA$iIcon$LAYOUT() { return _SHFILEINFOA$iIcon$LAYOUT_; }

    static final VarHandle _SHFILEINFOA$iIcon$VH_ = _SHFILEINFOA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iIcon"));
    static final java.lang.invoke.VarHandle _SHFILEINFOA$iIcon$VH() { return _SHFILEINFOA$iIcon$VH_; }

    static final MemoryLayout _SHFILEINFOA$dwAttributes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEINFOA$dwAttributes$LAYOUT() { return _SHFILEINFOA$dwAttributes$LAYOUT_; }

    static final VarHandle _SHFILEINFOA$dwAttributes$VH_ = _SHFILEINFOA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwAttributes"));
    static final java.lang.invoke.VarHandle _SHFILEINFOA$dwAttributes$VH() { return _SHFILEINFOA$dwAttributes$VH_; }

    static final MemoryLayout _SHFILEINFOW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("hIcon"),
        C_INT.withName("iIcon"),
        C_LONG.withName("dwAttributes"),
        MemoryLayout.ofSequence(260, C_SHORT).withName("szDisplayName"),
        MemoryLayout.ofSequence(80, C_SHORT).withName("szTypeName")
    ).withName("_SHFILEINFOW");
    static final jdk.incubator.foreign.MemoryLayout _SHFILEINFOW$struct$LAYOUT() { return _SHFILEINFOW$struct$LAYOUT_; }

    static final MemoryLayout _SHFILEINFOW$hIcon$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEINFOW$hIcon$LAYOUT() { return _SHFILEINFOW$hIcon$LAYOUT_; }

    static final VarHandle _SHFILEINFOW$hIcon$VH_ = MemoryHandles.asAddressVarHandle(_SHFILEINFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hIcon")));
    static final java.lang.invoke.VarHandle _SHFILEINFOW$hIcon$VH() { return _SHFILEINFOW$hIcon$VH_; }

    static final MemoryLayout _SHFILEINFOW$iIcon$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEINFOW$iIcon$LAYOUT() { return _SHFILEINFOW$iIcon$LAYOUT_; }

    static final VarHandle _SHFILEINFOW$iIcon$VH_ = _SHFILEINFOW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iIcon"));
    static final java.lang.invoke.VarHandle _SHFILEINFOW$iIcon$VH() { return _SHFILEINFOW$iIcon$VH_; }

    static final MemoryLayout _SHFILEINFOW$dwAttributes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SHFILEINFOW$dwAttributes$LAYOUT() { return _SHFILEINFOW$dwAttributes$LAYOUT_; }

    static final VarHandle _SHFILEINFOW$dwAttributes$VH_ = _SHFILEINFOW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwAttributes"));
    static final java.lang.invoke.VarHandle _SHFILEINFOW$dwAttributes$VH() { return _SHFILEINFOW$dwAttributes$VH_; }

    static final FunctionDescriptor SHGetFileInfoA$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHGetFileInfoA$FUNC() { return SHGetFileInfoA$FUNC_; }

    static final MethodHandle SHGetFileInfoA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHGetFileInfoA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;II)J",
        SHGetFileInfoA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHGetFileInfoA$MH() { return SHGetFileInfoA$MH_; }

    static final FunctionDescriptor SHGetFileInfoW$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor SHGetFileInfoW$FUNC() { return SHGetFileInfoW$FUNC_; }

    static final MethodHandle SHGetFileInfoW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SHGetFileInfoW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;II)J",
        SHGetFileInfoW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SHGetFileInfoW$MH() { return SHGetFileInfoW$MH_; }

    static final MemoryLayout _SHSTOCKICONINFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hIcon"),
        C_INT.withName("iSysImageIndex"),
        C_INT.withName("iIcon"),
        MemoryLayout.ofSequence(260, C_SHORT).withName("szPath")
    ).withName("_SHSTOCKICONINFO");
    static final jdk.incubator.foreign.MemoryLayout _SHSTOCKICONINFO$struct$LAYOUT() { return _SHSTOCKICONINFO$struct$LAYOUT_; }

    static final MemoryLayout _SHSTOCKICONINFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SHSTOCKICONINFO$cbSize$LAYOUT() { return _SHSTOCKICONINFO$cbSize$LAYOUT_; }

    static final VarHandle _SHSTOCKICONINFO$cbSize$VH_ = _SHSTOCKICONINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _SHSTOCKICONINFO$cbSize$VH() { return _SHSTOCKICONINFO$cbSize$VH_; }

    static final MemoryLayout _SHSTOCKICONINFO$hIcon$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SHSTOCKICONINFO$hIcon$LAYOUT() { return _SHSTOCKICONINFO$hIcon$LAYOUT_; }

    static final VarHandle _SHSTOCKICONINFO$hIcon$VH_ = MemoryHandles.asAddressVarHandle(_SHSTOCKICONINFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hIcon")));
    static final java.lang.invoke.VarHandle _SHSTOCKICONINFO$hIcon$VH() { return _SHSTOCKICONINFO$hIcon$VH_; }

    static final MemoryLayout _SHSTOCKICONINFO$iSysImageIndex$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SHSTOCKICONINFO$iSysImageIndex$LAYOUT() { return _SHSTOCKICONINFO$iSysImageIndex$LAYOUT_; }

    static final VarHandle _SHSTOCKICONINFO$iSysImageIndex$VH_ = _SHSTOCKICONINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iSysImageIndex"));
    static final java.lang.invoke.VarHandle _SHSTOCKICONINFO$iSysImageIndex$VH() { return _SHSTOCKICONINFO$iSysImageIndex$VH_; }

    static final MemoryLayout _SHSTOCKICONINFO$iIcon$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SHSTOCKICONINFO$iIcon$LAYOUT() { return _SHSTOCKICONINFO$iIcon$LAYOUT_; }

    static final VarHandle _SHSTOCKICONINFO$iIcon$VH_ = _SHSTOCKICONINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iIcon"));
    static final java.lang.invoke.VarHandle _SHSTOCKICONINFO$iIcon$VH() { return _SHSTOCKICONINFO$iIcon$VH_; }

    static final int SIID_DOCNOASSOC() { return (int)0L; }

    static final int SIID_DOCASSOC() { return (int)1L; }

    static final int SIID_APPLICATION() { return (int)2L; }

    static final int SIID_FOLDER() { return (int)3L; }

    static final int SIID_FOLDEROPEN() { return (int)4L; }

    static final int SIID_DRIVE525() { return (int)5L; }

    static final int SIID_DRIVE35() { return (int)6L; }

    static final int SIID_DRIVEREMOVE() { return (int)7L; }

    static final int SIID_DRIVEFIXED() { return (int)8L; }

    static final int SIID_DRIVENET() { return (int)9L; }

    static final int SIID_DRIVENETDISABLED() { return (int)10L; }

    static final int SIID_DRIVECD() { return (int)11L; }

    static final int SIID_DRIVERAM() { return (int)12L; }

    static final int SIID_WORLD() { return (int)13L; }

    static final int SIID_SERVER() { return (int)15L; }

    static final int SIID_PRINTER() { return (int)16L; }

    static final int SIID_MYNETWORK() { return (int)17L; }

    static final int SIID_FIND() { return (int)22L; }

    static final int SIID_HELP() { return (int)23L; }

    static final int SIID_SHARE() { return (int)28L; }

    static final int SIID_LINK() { return (int)29L; }

    static final int SIID_SLOWFILE() { return (int)30L; }

    static final int SIID_RECYCLER() { return (int)31L; }

    static final int SIID_RECYCLERFULL() { return (int)32L; }

    static final int SIID_MEDIACDAUDIO() { return (int)40L; }

    static final int SIID_LOCK() { return (int)47L; }

    static final int SIID_AUTOLIST() { return (int)49L; }

    static final int SIID_PRINTERNET() { return (int)50L; }

    static final int SIID_SERVERSHARE() { return (int)51L; }

    static final int SIID_PRINTERFAX() { return (int)52L; }

    static final int SIID_PRINTERFAXNET() { return (int)53L; }

    static final int SIID_PRINTERFILE() { return (int)54L; }

    static final int SIID_STACK() { return (int)55L; }

    static final int SIID_MEDIASVCD() { return (int)56L; }

    static final int SIID_STUFFEDFOLDER() { return (int)57L; }

    static final int SIID_DRIVEUNKNOWN() { return (int)58L; }

    static final int SIID_DRIVEDVD() { return (int)59L; }

    static final int SIID_MEDIADVD() { return (int)60L; }

    static final int SIID_MEDIADVDRAM() { return (int)61L; }

    static final int SIID_MEDIADVDRW() { return (int)62L; }

    static final int SIID_MEDIADVDR() { return (int)63L; }

}

