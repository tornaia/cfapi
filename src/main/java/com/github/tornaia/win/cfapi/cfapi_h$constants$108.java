// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$108 extends cfapi_h$constants$107 {

    /* package-private */ cfapi_h$constants$108() {}
    static final int ERROR_SVHDX_RESERVATION_CONFLICT() { return (int)-1067647225L; }

    static final int ERROR_SVHDX_WRONG_FILE_TYPE() { return (int)-1067647224L; }

    static final int ERROR_SVHDX_VERSION_MISMATCH() { return (int)-1067647223L; }

    static final int ERROR_VHD_SHARED() { return (int)-1067647222L; }

    static final int ERROR_SVHDX_NO_INITIATOR() { return (int)-1067647221L; }

    static final int ERROR_VHDSET_BACKING_STORAGE_NOT_FOUND() { return (int)-1067647220L; }

    static final int ERROR_SMB_NO_PREAUTH_INTEGRITY_HASH_OVERLAP() { return (int)-1067646976L; }

    static final int ERROR_SMB_BAD_CLUSTER_DIALECT() { return (int)-1067646975L; }

    static final int WININET_E_OUT_OF_HANDLES() { return (int)-2147012895L; }

    static final int WININET_E_TIMEOUT() { return (int)-2147012894L; }

    static final int WININET_E_EXTENDED_ERROR() { return (int)-2147012893L; }

    static final int WININET_E_INTERNAL_ERROR() { return (int)-2147012892L; }

    static final int WININET_E_INVALID_URL() { return (int)-2147012891L; }

    static final int WININET_E_UNRECOGNIZED_SCHEME() { return (int)-2147012890L; }

    static final int WININET_E_NAME_NOT_RESOLVED() { return (int)-2147012889L; }

    static final int WININET_E_PROTOCOL_NOT_FOUND() { return (int)-2147012888L; }

    static final int WININET_E_INVALID_OPTION() { return (int)-2147012887L; }

    static final int WININET_E_BAD_OPTION_LENGTH() { return (int)-2147012886L; }

    static final int WININET_E_OPTION_NOT_SETTABLE() { return (int)-2147012885L; }

    static final int WININET_E_SHUTDOWN() { return (int)-2147012884L; }

    static final int WININET_E_INCORRECT_USER_NAME() { return (int)-2147012883L; }

    static final int WININET_E_INCORRECT_PASSWORD() { return (int)-2147012882L; }

    static final int WININET_E_LOGIN_FAILURE() { return (int)-2147012881L; }

    static final int WININET_E_INVALID_OPERATION() { return (int)-2147012880L; }

    static final int WININET_E_OPERATION_CANCELLED() { return (int)-2147012879L; }

    static final int WININET_E_INCORRECT_HANDLE_TYPE() { return (int)-2147012878L; }

    static final int WININET_E_INCORRECT_HANDLE_STATE() { return (int)-2147012877L; }

    static final int WININET_E_NOT_PROXY_REQUEST() { return (int)-2147012876L; }

    static final int WININET_E_REGISTRY_VALUE_NOT_FOUND() { return (int)-2147012875L; }

    static final int WININET_E_BAD_REGISTRY_PARAMETER() { return (int)-2147012874L; }

    static final int WININET_E_NO_DIRECT_ACCESS() { return (int)-2147012873L; }

    static final int WININET_E_NO_CONTEXT() { return (int)-2147012872L; }

    static final int WININET_E_NO_CALLBACK() { return (int)-2147012871L; }

    static final int WININET_E_REQUEST_PENDING() { return (int)-2147012870L; }

    static final int WININET_E_INCORRECT_FORMAT() { return (int)-2147012869L; }

    static final int WININET_E_ITEM_NOT_FOUND() { return (int)-2147012868L; }

    static final int WININET_E_CANNOT_CONNECT() { return (int)-2147012867L; }

    static final int WININET_E_CONNECTION_ABORTED() { return (int)-2147012866L; }

    static final int WININET_E_CONNECTION_RESET() { return (int)-2147012865L; }

    static final int WININET_E_FORCE_RETRY() { return (int)-2147012864L; }

    static final int WININET_E_INVALID_PROXY_REQUEST() { return (int)-2147012863L; }

    static final int WININET_E_NEED_UI() { return (int)-2147012862L; }

    static final int WININET_E_HANDLE_EXISTS() { return (int)-2147012860L; }

    static final int WININET_E_SEC_CERT_DATE_INVALID() { return (int)-2147012859L; }

    static final int WININET_E_SEC_CERT_CN_INVALID() { return (int)-2147012858L; }

    static final int WININET_E_HTTP_TO_HTTPS_ON_REDIR() { return (int)-2147012857L; }

    static final int WININET_E_HTTPS_TO_HTTP_ON_REDIR() { return (int)-2147012856L; }

    static final int WININET_E_MIXED_SECURITY() { return (int)-2147012855L; }

    static final int WININET_E_CHG_POST_IS_NON_SECURE() { return (int)-2147012854L; }

    static final int WININET_E_POST_IS_NON_SECURE() { return (int)-2147012853L; }

    static final int WININET_E_CLIENT_AUTH_CERT_NEEDED() { return (int)-2147012852L; }

    static final int WININET_E_INVALID_CA() { return (int)-2147012851L; }

    static final int WININET_E_CLIENT_AUTH_NOT_SETUP() { return (int)-2147012850L; }

    static final int WININET_E_ASYNC_THREAD_FAILED() { return (int)-2147012849L; }

    static final int WININET_E_REDIRECT_SCHEME_CHANGE() { return (int)-2147012848L; }

    static final int WININET_E_DIALOG_PENDING() { return (int)-2147012847L; }

    static final int WININET_E_RETRY_DIALOG() { return (int)-2147012846L; }

    static final int WININET_E_NO_NEW_CONTAINERS() { return (int)-2147012845L; }

    static final int WININET_E_HTTPS_HTTP_SUBMIT_REDIR() { return (int)-2147012844L; }

    static final int WININET_E_SEC_CERT_ERRORS() { return (int)-2147012841L; }

    static final int WININET_E_SEC_CERT_REV_FAILED() { return (int)-2147012839L; }

    static final int WININET_E_HEADER_NOT_FOUND() { return (int)-2147012746L; }

    static final int WININET_E_DOWNLEVEL_SERVER() { return (int)-2147012745L; }

    static final int WININET_E_INVALID_SERVER_RESPONSE() { return (int)-2147012744L; }

    static final int WININET_E_INVALID_HEADER() { return (int)-2147012743L; }

    static final int WININET_E_INVALID_QUERY_REQUEST() { return (int)-2147012742L; }

    static final int WININET_E_HEADER_ALREADY_EXISTS() { return (int)-2147012741L; }

    static final int WININET_E_REDIRECT_FAILED() { return (int)-2147012740L; }

    static final int WININET_E_SECURITY_CHANNEL_ERROR() { return (int)-2147012739L; }

    static final int WININET_E_UNABLE_TO_CACHE_FILE() { return (int)-2147012738L; }

    static final int WININET_E_TCPIP_NOT_INSTALLED() { return (int)-2147012737L; }

    static final int WININET_E_DISCONNECTED() { return (int)-2147012733L; }

    static final int WININET_E_SERVER_UNREACHABLE() { return (int)-2147012732L; }

    static final int WININET_E_PROXY_SERVER_UNREACHABLE() { return (int)-2147012731L; }

    static final int WININET_E_BAD_AUTO_PROXY_SCRIPT() { return (int)-2147012730L; }

    static final int WININET_E_UNABLE_TO_DOWNLOAD_SCRIPT() { return (int)-2147012729L; }

    static final int WININET_E_SEC_INVALID_CERT() { return (int)-2147012727L; }

    static final int WININET_E_SEC_CERT_REVOKED() { return (int)-2147012726L; }

    static final int WININET_E_FAILED_DUETOSECURITYCHECK() { return (int)-2147012725L; }

    static final int WININET_E_NOT_INITIALIZED() { return (int)-2147012724L; }

    static final int WININET_E_LOGIN_FAILURE_DISPLAY_ENTITY_BODY() { return (int)-2147012722L; }

    static final int WININET_E_DECODING_FAILED() { return (int)-2147012721L; }

    static final int WININET_E_NOT_REDIRECTED() { return (int)-2147012736L; }

    static final int WININET_E_COOKIE_NEEDS_CONFIRMATION() { return (int)-2147012735L; }

    static final int WININET_E_COOKIE_DECLINED() { return (int)-2147012734L; }

    static final int WININET_E_REDIRECT_NEEDS_CONFIRMATION() { return (int)-2147012728L; }

    static final int SQLITE_E_ERROR() { return (int)-2018574335L; }

    static final int SQLITE_E_INTERNAL() { return (int)-2018574334L; }

    static final int SQLITE_E_PERM() { return (int)-2018574333L; }

    static final int SQLITE_E_ABORT() { return (int)-2018574332L; }

    static final int SQLITE_E_BUSY() { return (int)-2018574331L; }

    static final int SQLITE_E_LOCKED() { return (int)-2018574330L; }

    static final int SQLITE_E_NOMEM() { return (int)-2018574329L; }

    static final int SQLITE_E_READONLY() { return (int)-2018574328L; }

    static final int SQLITE_E_INTERRUPT() { return (int)-2018574327L; }

    static final int SQLITE_E_IOERR() { return (int)-2018574326L; }

    static final int SQLITE_E_CORRUPT() { return (int)-2018574325L; }

    static final int SQLITE_E_NOTFOUND() { return (int)-2018574324L; }

    static final int SQLITE_E_FULL() { return (int)-2018574323L; }

    static final int SQLITE_E_CANTOPEN() { return (int)-2018574322L; }

    static final int SQLITE_E_PROTOCOL() { return (int)-2018574321L; }

    static final int SQLITE_E_EMPTY() { return (int)-2018574320L; }

    static final int SQLITE_E_SCHEMA() { return (int)-2018574319L; }

    static final int SQLITE_E_TOOBIG() { return (int)-2018574318L; }

    static final int SQLITE_E_CONSTRAINT() { return (int)-2018574317L; }

    static final int SQLITE_E_MISMATCH() { return (int)-2018574316L; }

    static final int SQLITE_E_MISUSE() { return (int)-2018574315L; }

    static final int SQLITE_E_NOLFS() { return (int)-2018574314L; }

    static final int SQLITE_E_AUTH() { return (int)-2018574313L; }

    static final int SQLITE_E_FORMAT() { return (int)-2018574312L; }

    static final int SQLITE_E_RANGE() { return (int)-2018574311L; }

    static final int SQLITE_E_NOTADB() { return (int)-2018574310L; }

    static final int SQLITE_E_NOTICE() { return (int)-2018574309L; }

    static final int SQLITE_E_WARNING() { return (int)-2018574308L; }

    static final int SQLITE_E_ROW() { return (int)-2018574236L; }

    static final int SQLITE_E_DONE() { return (int)-2018574235L; }

    static final int SQLITE_E_IOERR_READ() { return (int)-2018574070L; }

    static final int SQLITE_E_IOERR_SHORT_READ() { return (int)-2018573814L; }

    static final int SQLITE_E_IOERR_WRITE() { return (int)-2018573558L; }

    static final int SQLITE_E_IOERR_FSYNC() { return (int)-2018573302L; }

    static final int SQLITE_E_IOERR_DIR_FSYNC() { return (int)-2018573046L; }

    static final int SQLITE_E_IOERR_TRUNCATE() { return (int)-2018572790L; }

    static final int SQLITE_E_IOERR_FSTAT() { return (int)-2018572534L; }

    static final int SQLITE_E_IOERR_UNLOCK() { return (int)-2018572278L; }

    static final int SQLITE_E_IOERR_RDLOCK() { return (int)-2018572022L; }

    static final int SQLITE_E_IOERR_DELETE() { return (int)-2018571766L; }

    static final int SQLITE_E_IOERR_BLOCKED() { return (int)-2018571510L; }

    static final int SQLITE_E_IOERR_NOMEM() { return (int)-2018571254L; }

    static final int SQLITE_E_IOERR_ACCESS() { return (int)-2018570998L; }

    static final int SQLITE_E_IOERR_CHECKRESERVEDLOCK() { return (int)-2018570742L; }

    static final int SQLITE_E_IOERR_LOCK() { return (int)-2018570486L; }

    static final int SQLITE_E_IOERR_CLOSE() { return (int)-2018570230L; }

    static final int SQLITE_E_IOERR_DIR_CLOSE() { return (int)-2018569974L; }

    static final int SQLITE_E_IOERR_SHMOPEN() { return (int)-2018569718L; }

    static final int SQLITE_E_IOERR_SHMSIZE() { return (int)-2018569462L; }

    static final int SQLITE_E_IOERR_SHMLOCK() { return (int)-2018569206L; }

    static final int SQLITE_E_IOERR_SHMMAP() { return (int)-2018568950L; }

    static final int SQLITE_E_IOERR_SEEK() { return (int)-2018568694L; }

    static final int SQLITE_E_IOERR_DELETE_NOENT() { return (int)-2018568438L; }

    static final int SQLITE_E_IOERR_MMAP() { return (int)-2018568182L; }

    static final int SQLITE_E_IOERR_GETTEMPPATH() { return (int)-2018567926L; }

    static final int SQLITE_E_IOERR_CONVPATH() { return (int)-2018567670L; }

    static final int SQLITE_E_IOERR_VNODE() { return (int)-2018567678L; }

    static final int SQLITE_E_IOERR_AUTH() { return (int)-2018567677L; }

    static final int SQLITE_E_LOCKED_SHAREDCACHE() { return (int)-2018574074L; }

    static final int SQLITE_E_BUSY_RECOVERY() { return (int)-2018574075L; }

    static final int SQLITE_E_BUSY_SNAPSHOT() { return (int)-2018573819L; }

    static final int SQLITE_E_CANTOPEN_NOTEMPDIR() { return (int)-2018574066L; }

    static final int SQLITE_E_CANTOPEN_ISDIR() { return (int)-2018573810L; }

    static final int SQLITE_E_CANTOPEN_FULLPATH() { return (int)-2018573554L; }

    static final int SQLITE_E_CANTOPEN_CONVPATH() { return (int)-2018573298L; }

    static final int SQLITE_E_CORRUPT_VTAB() { return (int)-2018574069L; }

    static final int SQLITE_E_READONLY_RECOVERY() { return (int)-2018574072L; }

    static final int SQLITE_E_READONLY_CANTLOCK() { return (int)-2018573816L; }

    static final int SQLITE_E_READONLY_ROLLBACK() { return (int)-2018573560L; }

    static final int SQLITE_E_READONLY_DBMOVED() { return (int)-2018573304L; }

    static final int SQLITE_E_ABORT_ROLLBACK() { return (int)-2018573820L; }

    static final int SQLITE_E_CONSTRAINT_CHECK() { return (int)-2018574061L; }

    static final int SQLITE_E_CONSTRAINT_COMMITHOOK() { return (int)-2018573805L; }

    static final int SQLITE_E_CONSTRAINT_FOREIGNKEY() { return (int)-2018573549L; }

    static final int SQLITE_E_CONSTRAINT_FUNCTION() { return (int)-2018573293L; }

    static final int SQLITE_E_CONSTRAINT_NOTNULL() { return (int)-2018573037L; }

    static final int SQLITE_E_CONSTRAINT_PRIMARYKEY() { return (int)-2018572781L; }

    static final int SQLITE_E_CONSTRAINT_TRIGGER() { return (int)-2018572525L; }

    static final int SQLITE_E_CONSTRAINT_UNIQUE() { return (int)-2018572269L; }

    static final int SQLITE_E_CONSTRAINT_VTAB() { return (int)-2018572013L; }

    static final int SQLITE_E_CONSTRAINT_ROWID() { return (int)-2018571757L; }

    static final int SQLITE_E_NOTICE_RECOVER_WAL() { return (int)-2018574053L; }

    static final int SQLITE_E_NOTICE_RECOVER_ROLLBACK() { return (int)-2018573797L; }

    static final int SQLITE_E_WARNING_AUTOINDEX() { return (int)-2018574052L; }

    static final int UTC_E_TOGGLE_TRACE_STARTED() { return (int)-2017128447L; }

    static final int UTC_E_ALTERNATIVE_TRACE_CANNOT_PREEMPT() { return (int)-2017128446L; }

    static final int UTC_E_AOT_NOT_RUNNING() { return (int)-2017128445L; }

    static final int UTC_E_SCRIPT_TYPE_INVALID() { return (int)-2017128444L; }

    static final int UTC_E_SCENARIODEF_NOT_FOUND() { return (int)-2017128443L; }

    static final int UTC_E_TRACEPROFILE_NOT_FOUND() { return (int)-2017128442L; }

    static final int UTC_E_FORWARDER_ALREADY_ENABLED() { return (int)-2017128441L; }

    static final int UTC_E_FORWARDER_ALREADY_DISABLED() { return (int)-2017128440L; }

    static final int UTC_E_EVENTLOG_ENTRY_MALFORMED() { return (int)-2017128439L; }

    static final int UTC_E_DIAGRULES_SCHEMAVERSION_MISMATCH() { return (int)-2017128438L; }

    static final int UTC_E_SCRIPT_TERMINATED() { return (int)-2017128437L; }

    static final int UTC_E_INVALID_CUSTOM_FILTER() { return (int)-2017128436L; }

    static final int UTC_E_TRACE_NOT_RUNNING() { return (int)-2017128435L; }

    static final int UTC_E_REESCALATED_TOO_QUICKLY() { return (int)-2017128434L; }

    static final int UTC_E_ESCALATION_ALREADY_RUNNING() { return (int)-2017128433L; }

    static final int UTC_E_PERFTRACK_ALREADY_TRACING() { return (int)-2017128432L; }

    static final int UTC_E_REACHED_MAX_ESCALATIONS() { return (int)-2017128431L; }

    static final int UTC_E_FORWARDER_PRODUCER_MISMATCH() { return (int)-2017128430L; }

    static final int UTC_E_INTENTIONAL_SCRIPT_FAILURE() { return (int)-2017128429L; }

    static final int UTC_E_SQM_INIT_FAILED() { return (int)-2017128428L; }

    static final int UTC_E_NO_WER_LOGGER_SUPPORTED() { return (int)-2017128427L; }

    static final int UTC_E_TRACERS_DONT_EXIST() { return (int)-2017128426L; }

    static final int UTC_E_WINRT_INIT_FAILED() { return (int)-2017128425L; }

    static final int UTC_E_SCENARIODEF_SCHEMAVERSION_MISMATCH() { return (int)-2017128424L; }

    static final int UTC_E_INVALID_FILTER() { return (int)-2017128423L; }

    static final int UTC_E_EXE_TERMINATED() { return (int)-2017128422L; }

    static final int UTC_E_ESCALATION_NOT_AUTHORIZED() { return (int)-2017128421L; }

    static final int UTC_E_SETUP_NOT_AUTHORIZED() { return (int)-2017128420L; }

    static final int UTC_E_CHILD_PROCESS_FAILED() { return (int)-2017128419L; }

    static final int UTC_E_COMMAND_LINE_NOT_AUTHORIZED() { return (int)-2017128418L; }

    static final int UTC_E_CANNOT_LOAD_SCENARIO_EDITOR_XML() { return (int)-2017128417L; }

    static final int UTC_E_ESCALATION_TIMED_OUT() { return (int)-2017128416L; }

    static final int UTC_E_SETUP_TIMED_OUT() { return (int)-2017128415L; }

    static final int UTC_E_TRIGGER_MISMATCH() { return (int)-2017128414L; }

    static final int UTC_E_TRIGGER_NOT_FOUND() { return (int)-2017128413L; }

    static final int UTC_E_SIF_NOT_SUPPORTED() { return (int)-2017128412L; }

    static final int UTC_E_DELAY_TERMINATED() { return (int)-2017128411L; }

    static final int UTC_E_DEVICE_TICKET_ERROR() { return (int)-2017128410L; }

    static final int UTC_E_TRACE_BUFFER_LIMIT_EXCEEDED() { return (int)-2017128409L; }

    static final int UTC_E_API_RESULT_UNAVAILABLE() { return (int)-2017128408L; }

    static final int UTC_E_RPC_TIMEOUT() { return (int)-2017128407L; }

    static final int UTC_E_RPC_WAIT_FAILED() { return (int)-2017128406L; }

    static final int UTC_E_API_BUSY() { return (int)-2017128405L; }

    static final int UTC_E_TRACE_MIN_DURATION_REQUIREMENT_NOT_MET() { return (int)-2017128404L; }

    static final int UTC_E_EXCLUSIVITY_NOT_AVAILABLE() { return (int)-2017128403L; }

    static final int UTC_E_GETFILE_FILE_PATH_NOT_APPROVED() { return (int)-2017128402L; }

    static final int UTC_E_ESCALATION_DIRECTORY_ALREADY_EXISTS() { return (int)-2017128401L; }

    static final int UTC_E_TIME_TRIGGER_ON_START_INVALID() { return (int)-2017128400L; }

    static final int UTC_E_TIME_TRIGGER_ONLY_VALID_ON_SINGLE_TRANSITION() { return (int)-2017128399L; }

    static final int UTC_E_TIME_TRIGGER_INVALID_TIME_RANGE() { return (int)-2017128398L; }

    static final int UTC_E_MULTIPLE_TIME_TRIGGER_ON_SINGLE_STATE() { return (int)-2017128397L; }

    static final int UTC_E_BINARY_MISSING() { return (int)-2017128396L; }

    static final int UTC_E_FAILED_TO_RESOLVE_CONTAINER_ID() { return (int)-2017128394L; }

    static final int UTC_E_UNABLE_TO_RESOLVE_SESSION() { return (int)-2017128393L; }

    static final int UTC_E_THROTTLED() { return (int)-2017128392L; }

    static final int UTC_E_UNAPPROVED_SCRIPT() { return (int)-2017128391L; }

    static final int UTC_E_SCRIPT_MISSING() { return (int)-2017128390L; }

    static final int UTC_E_SCENARIO_THROTTLED() { return (int)-2017128389L; }

    static final int UTC_E_API_NOT_SUPPORTED() { return (int)-2017128388L; }

    static final int UTC_E_GETFILE_EXTERNAL_PATH_NOT_APPROVED() { return (int)-2017128387L; }

    static final int UTC_E_TRY_GET_SCENARIO_TIMEOUT_EXCEEDED() { return (int)-2017128386L; }

    static final int UTC_E_CERT_REV_FAILED() { return (int)-2017128385L; }

    static final int UTC_E_FAILED_TO_START_NDISCAP() { return (int)-2017128384L; }

    static final int UTC_E_KERNELDUMP_LIMIT_REACHED() { return (int)-2017128383L; }

    static final int UTC_E_MISSING_AGGREGATE_EVENT_TAG() { return (int)-2017128382L; }

    static final int UTC_E_INVALID_AGGREGATION_STRUCT() { return (int)-2017128381L; }

    static final int UTC_E_ACTION_NOT_SUPPORTED_IN_DESTINATION() { return (int)-2017128380L; }

    static final int UTC_E_FILTER_MISSING_ATTRIBUTE() { return (int)-2017128379L; }

    static final int UTC_E_FILTER_INVALID_TYPE() { return (int)-2017128378L; }

    static final int UTC_E_FILTER_VARIABLE_NOT_FOUND() { return (int)-2017128377L; }

    static final int UTC_E_FILTER_FUNCTION_RESTRICTED() { return (int)-2017128376L; }

    static final int UTC_E_FILTER_VERSION_MISMATCH() { return (int)-2017128375L; }

    static final int UTC_E_FILTER_INVALID_FUNCTION() { return (int)-2017128368L; }

    static final int UTC_E_FILTER_INVALID_FUNCTION_PARAMS() { return (int)-2017128367L; }

    static final int UTC_E_FILTER_INVALID_COMMAND() { return (int)-2017128366L; }

    static final int UTC_E_FILTER_ILLEGAL_EVAL() { return (int)-2017128365L; }

    static final int UTC_E_TTTRACER_RETURNED_ERROR() { return (int)-2017128364L; }

    static final int UTC_E_AGENT_DIAGNOSTICS_TOO_LARGE() { return (int)-2017128363L; }

    static final int UTC_E_FAILED_TO_RECEIVE_AGENT_DIAGNOSTICS() { return (int)-2017128362L; }

    static final int UTC_E_SCENARIO_HAS_NO_ACTIONS() { return (int)-2017128361L; }

    static final int UTC_E_TTTRACER_STORAGE_FULL() { return (int)-2017128360L; }

    static final int UTC_E_INSUFFICIENT_SPACE_TO_START_TRACE() { return (int)-2017128359L; }

    static final int UTC_E_ESCALATION_CANCELLED_AT_SHUTDOWN() { return (int)-2017128358L; }

    static final int UTC_E_GETFILEINFOACTION_FILE_NOT_APPROVED() { return (int)-2017128357L; }

    static final int UTC_E_SETREGKEYACTION_TYPE_NOT_APPROVED() { return (int)-2017128356L; }

    static final int WINML_ERR_INVALID_DEVICE() { return (int)-2003828735L; }

    static final int WINML_ERR_INVALID_BINDING() { return (int)-2003828734L; }

    static final int WINML_ERR_VALUE_NOTFOUND() { return (int)-2003828733L; }

    static final int WINML_ERR_SIZE_MISMATCH() { return (int)-2003828732L; }

    static final int ERROR_QUIC_HANDSHAKE_FAILURE() { return (int)-2143223808L; }

    static final int ERROR_QUIC_VER_NEG_FAILURE() { return (int)-2143223807L; }

    static final int TIME_ZONE_ID_INVALID() { return (int)4294967295L; }

    static final int BATTERY_LIFE_UNKNOWN() { return (int)4294967295L; }

    static final int ACTCTX_FLAG_PROCESSOR_ARCHITECTURE_VALID() { return (int)1L; }

    static final int ACTCTX_FLAG_LANGID_VALID() { return (int)2L; }

    static final int ACTCTX_FLAG_ASSEMBLY_DIRECTORY_VALID() { return (int)4L; }

    static final int ACTCTX_FLAG_RESOURCE_NAME_VALID() { return (int)8L; }

    static final int ACTCTX_FLAG_SET_PROCESS_DEFAULT() { return (int)16L; }

    static final int ACTCTX_FLAG_APPLICATION_NAME_VALID() { return (int)32L; }

    static final int ACTCTX_FLAG_SOURCE_IS_ASSEMBLYREF() { return (int)64L; }

    static final int ACTCTX_FLAG_HMODULE_VALID() { return (int)128L; }

    static final int DEACTIVATE_ACTCTX_FLAG_FORCE_EARLY_DEACTIVATION() { return (int)1L; }

    static final int FIND_ACTCTX_SECTION_KEY_RETURN_HACTCTX() { return (int)1L; }

    static final int FIND_ACTCTX_SECTION_KEY_RETURN_FLAGS() { return (int)2L; }

    static final int FIND_ACTCTX_SECTION_KEY_RETURN_ASSEMBLY_METADATA() { return (int)4L; }

    static final int QUERY_ACTCTX_FLAG_USE_ACTIVE_ACTCTX() { return (int)4L; }

    static final int QUERY_ACTCTX_FLAG_ACTCTX_IS_HMODULE() { return (int)8L; }

    static final int QUERY_ACTCTX_FLAG_ACTCTX_IS_ADDRESS() { return (int)16L; }

    static final int QUERY_ACTCTX_FLAG_NO_ADDREF() { return (int)2147483648L; }

    static final int RECOVERY_MAX_PING_INTERVAL() { return (int)300000L; }

    static final int STORAGE_INFO_OFFSET_UNKNOWN() { return (int)4294967295L; }

    static final int SYMBOLIC_LINK_FLAG_DIRECTORY() { return (int)1L; }

    static final int SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE() { return (int)2L; }

    static final int MICROSOFT_WINDOWS_WINBASE_H_DEFINE_INTERLOCKED_CPLUSPLUS_OVERLOADS() { return (int)1L; }

    static final int SRCCOPY() { return (int)13369376L; }

    static final int SRCPAINT() { return (int)15597702L; }

    static final int SRCAND() { return (int)8913094L; }

    static final int SRCINVERT() { return (int)6684742L; }

    static final int SRCERASE() { return (int)4457256L; }

    static final int NOTSRCCOPY() { return (int)3342344L; }

    static final int NOTSRCERASE() { return (int)1114278L; }

    static final int MERGECOPY() { return (int)12583114L; }

    static final int MERGEPAINT() { return (int)12255782L; }

    static final int PATCOPY() { return (int)15728673L; }

    static final int PATPAINT() { return (int)16452105L; }

    static final int PATINVERT() { return (int)5898313L; }

    static final int DSTINVERT() { return (int)5570569L; }

    static final int BLACKNESS() { return (int)66L; }

    static final int WHITENESS() { return (int)16711778L; }

    static final int NOMIRRORBITMAP() { return (int)2147483648L; }

    static final int CAPTUREBLT() { return (int)1073741824L; }

    static final int GDI_ERROR() { return (int)4294967295L; }

    static final int RGN_ERROR() { return (int)0L; }

    static final int RGN_MIN() { return (int)1L; }

    static final int RGN_MAX() { return (int)5L; }

    static final int STRETCH_ANDSCANS() { return (int)1L; }

    static final int STRETCH_ORSCANS() { return (int)2L; }

    static final int STRETCH_DELETESCANS() { return (int)3L; }

    static final int STRETCH_HALFTONE() { return (int)4L; }

    static final int LAYOUT_ORIENTATIONMASK() { return (int)7L; }

    static final int TA_MASK() { return (int)287L; }

    static final int VTA_BASELINE() { return (int)24L; }

    static final int VTA_LEFT() { return (int)8L; }

    static final int VTA_RIGHT() { return (int)0L; }

    static final int VTA_CENTER() { return (int)6L; }

    static final int VTA_BOTTOM() { return (int)2L; }

    static final int VTA_TOP() { return (int)0L; }

    static final int DCB_DIRTY() { return (int)2L; }

    static final int DCB_SET() { return (int)3L; }

    static final int PSINJECT_DLFONT() { return (int)3722304989L; }

    static final int SP_ERROR() { return (int)-1L; }

    static final int SP_APPABORT() { return (int)-2L; }

    static final int SP_USERABORT() { return (int)-3L; }

    static final int SP_OUTOFDISK() { return (int)-4L; }

    static final int SP_OUTOFMEMORY() { return (int)-5L; }

    static final int GDI_OBJ_LAST() { return (int)14L; }

    static final int MWT_MIN() { return (int)1L; }

    static final int MWT_MAX() { return (int)3L; }

    static final int CS_ENABLE() { return (int)1L; }

    static final int CS_DISABLE() { return (int)2L; }

    static final int CS_DELETE_TRANSFORM() { return (int)3L; }

    static final int LCS_SIGNATURE() { return (int)1347637059L; }

    static final int LCS_sRGB() { return (int)1934772034L; }

    static final int LCS_WINDOWS_COLOR_SPACE() { return (int)1466527264L; }

    static final int LCS_CALIBRATED_RGB() { return (int)0L; }

    static final int LCS_GM_BUSINESS() { return (int)1L; }

    static final int LCS_GM_GRAPHICS() { return (int)2L; }

    static final int LCS_GM_IMAGES() { return (int)4L; }

    static final int LCS_GM_ABS_COLORIMETRIC() { return (int)8L; }

    static final int PROFILE_LINKED() { return (int)1279872587L; }

    static final int PROFILE_EMBEDDED() { return (int)1296188740L; }

    static final int BI_RGB() { return (int)0L; }

    static final int BI_RLE8() { return (int)1L; }

    static final int BI_RLE4() { return (int)2L; }

    static final int BI_BITFIELDS() { return (int)3L; }

    static final int BI_JPEG() { return (int)4L; }

    static final int BI_PNG() { return (int)5L; }

    static final int NTM_REGULAR() { return (int)64L; }

    static final int NTM_BOLD() { return (int)32L; }

    static final int NTM_ITALIC() { return (int)1L; }

    static final int CLIP_LH_ANGLES() { return (int)16L; }

    static final int CLIP_TT_ALWAYS() { return (int)32L; }

    static final int CLIP_DFA_DISABLE() { return (int)64L; }

    static final int CLIP_EMBEDDED() { return (int)128L; }

    static final int FS_LATIN1() { return (int)1L; }

    static final int FS_LATIN2() { return (int)2L; }

    static final int FS_CYRILLIC() { return (int)4L; }

    static final int FS_GREEK() { return (int)8L; }

    static final int FS_TURKISH() { return (int)16L; }

    static final int FS_HEBREW() { return (int)32L; }

    static final int FS_ARABIC() { return (int)64L; }

    static final int FS_BALTIC() { return (int)128L; }

    static final int FS_VIETNAMESE() { return (int)256L; }

    static final int FS_THAI() { return (int)65536L; }

    static final int FS_JISJAPAN() { return (int)131072L; }

    static final int FS_CHINESESIMP() { return (int)262144L; }

    static final int FS_WANSUNG() { return (int)524288L; }

    static final int FS_CHINESETRAD() { return (int)1048576L; }

    static final int FS_JOHAB() { return (int)2097152L; }

    static final int FS_SYMBOL() { return (int)2147483648L; }

    static final int FF_DONTCARE() { return (int)0L; }

    static final int FF_ROMAN() { return (int)16L; }

    static final int FF_SWISS() { return (int)32L; }

    static final int FF_MODERN() { return (int)48L; }

    static final int FF_SCRIPT() { return (int)64L; }

    static final int FF_DECORATIVE() { return (int)80L; }

    static final int FW_ULTRALIGHT() { return (int)200L; }

    static final int FW_REGULAR() { return (int)400L; }

    static final int FW_DEMIBOLD() { return (int)600L; }

    static final int FW_ULTRABOLD() { return (int)800L; }

    static final int FW_BLACK() { return (int)900L; }

    static final int MM_MIN() { return (int)1L; }

    static final int MM_MAX() { return (int)8L; }

    static final int MM_MAX_FIXEDSCALE() { return (int)6L; }

    static final int HOLLOW_BRUSH() { return (int)5L; }

    static final int CLR_INVALID() { return (int)4294967295L; }

    static final int BS_HOLLOW() { return (int)1L; }

    static final int CBM_INIT() { return (int)4L; }

    static final int DM_ORIENTATION() { return (int)1L; }

    static final int DM_PAPERSIZE() { return (int)2L; }

    static final int DM_PAPERLENGTH() { return (int)4L; }

    static final int DM_PAPERWIDTH() { return (int)8L; }

    static final int DM_SCALE() { return (int)16L; }

    static final int DM_POSITION() { return (int)32L; }

    static final int DM_NUP() { return (int)64L; }

    static final int DM_DISPLAYORIENTATION() { return (int)128L; }

    static final int DM_COPIES() { return (int)256L; }

    static final int DM_DEFAULTSOURCE() { return (int)512L; }

    static final int DM_PRINTQUALITY() { return (int)1024L; }

    static final int DM_COLOR() { return (int)2048L; }

    static final int DM_DUPLEX() { return (int)4096L; }

    static final int DM_YRESOLUTION() { return (int)8192L; }

    static final int DM_TTOPTION() { return (int)16384L; }

    static final int DM_COLLATE() { return (int)32768L; }

    static final int DM_FORMNAME() { return (int)65536L; }

    static final int DM_LOGPIXELS() { return (int)131072L; }

    static final int DM_BITSPERPEL() { return (int)262144L; }

    static final int DM_PELSWIDTH() { return (int)524288L; }

    static final int DM_PELSHEIGHT() { return (int)1048576L; }

    static final int DM_DISPLAYFLAGS() { return (int)2097152L; }

    static final int DM_DISPLAYFREQUENCY() { return (int)4194304L; }

    static final int DM_ICMMETHOD() { return (int)8388608L; }

    static final int DM_ICMINTENT() { return (int)16777216L; }

    static final int DM_MEDIATYPE() { return (int)33554432L; }

    static final int DM_DITHERTYPE() { return (int)67108864L; }

    static final int DM_PANNINGWIDTH() { return (int)134217728L; }

    static final int DM_PANNINGHEIGHT() { return (int)268435456L; }

    static final int DM_DISPLAYFIXEDOUTPUT() { return (int)536870912L; }

    static final int DMPAPER_FIRST() { return (int)1L; }

    static final int DMPAPER_LAST() { return (int)118L; }

    static final int DMBIN_FIRST() { return (int)1L; }

    static final int DMBIN_LAST() { return (int)15L; }

    static final int DMRES_DRAFT() { return (int)-1L; }

    static final int DMRES_LOW() { return (int)-2L; }

    static final int DMRES_MEDIUM() { return (int)-3L; }

    static final int DMRES_HIGH() { return (int)-4L; }

    static final int DISPLAYCONFIG_PATH_MODE_IDX_INVALID() { return (int)4294967295L; }

    static final int SDC_USE_DATABASE_CURRENT() { return (int)15L; }

    static final int GCP_JUSTIFY() { return (int)65536L; }

    static final int FLI_GLYPHS() { return (int)262144L; }

    static final int GCP_CLASSIN() { return (int)524288L; }

    static final int GCP_MAXEXTENT() { return (int)1048576L; }

    static final int GCP_JUSTIFYIN() { return (int)2097152L; }

    static final int GCP_DISPLAYZWG() { return (int)4194304L; }

    static final int GCP_SYMSWAPOFF() { return (int)8388608L; }

    static final int GCP_NUMERICOVERRIDE() { return (int)16777216L; }

    static final int GCP_NEUTRALOVERRIDE() { return (int)33554432L; }

    static final int GCP_NUMERICSLATIN() { return (int)67108864L; }

    static final int GCP_NUMERICSLOCAL() { return (int)134217728L; }

    static final int PFD_UNDERLAY_PLANE() { return (int)-1L; }

    static final int PFD_STEREO_DONTCARE() { return (int)2147483648L; }

    static final int DCTT_BITMAP() { return (int)1L; }

    static final int DCTT_DOWNLOAD() { return (int)2L; }

    static final int DCTT_SUBDEV() { return (int)4L; }

    static final int DCTT_DOWNLOAD_OUTLINE() { return (int)8L; }

    static final int STAMP_DESIGNVECTOR() { return (int)134248036L; }

    static final int STAMP_AXESLIST() { return (int)134245473L; }

    static final int STAMP_TRUETYPE_VARIATION() { return (int)134248052L; }

    static final int STAMP_CFF2() { return (int)134248035L; }

    static final int ILLUMINANT_MAX_INDEX() { return (int)8L; }

    static final int ILLUMINANT_TUNGSTEN() { return (int)1L; }

    static final int ILLUMINANT_DAYLIGHT() { return (int)3L; }

    static final int ILLUMINANT_FLUORESCENT() { return (int)8L; }

    static final int ILLUMINANT_NTSC() { return (int)3L; }

    static final short RGB_GAMMA_MIN() { return (short)1344L; }

    static final short RGB_GAMMA_MAX() { return (short)65000L; }

    static final short REFERENCE_WHITE_MIN() { return (short)6000L; }

    static final short REFERENCE_WHITE_MAX() { return (short)10000L; }

    static final short REFERENCE_BLACK_MIN() { return (short)0L; }

    static final short REFERENCE_BLACK_MAX() { return (short)4000L; }

    static final short COLOR_ADJ_MIN() { return (short)-100L; }

    static final short COLOR_ADJ_MAX() { return (short)100L; }

    static final int ENHMETA_STOCK_OBJECT() { return (int)2147483648L; }

    static final int GDICOMMENT_WINDOWS_METAFILE() { return (int)2147483649L; }

    static final MemoryAddress RT_CURSOR$ADDR_CONSTANT_ = MemoryAddress.ofLong(1L);
    static final jdk.incubator.foreign.MemoryAddress RT_CURSOR() { return RT_CURSOR$ADDR_CONSTANT_; }

    static final MemoryAddress RT_BITMAP$ADDR_CONSTANT_ = MemoryAddress.ofLong(2L);
    static final jdk.incubator.foreign.MemoryAddress RT_BITMAP() { return RT_BITMAP$ADDR_CONSTANT_; }

    static final MemoryAddress RT_ICON$ADDR_CONSTANT_ = MemoryAddress.ofLong(3L);
    static final jdk.incubator.foreign.MemoryAddress RT_ICON() { return RT_ICON$ADDR_CONSTANT_; }

    static final MemoryAddress RT_MENU$ADDR_CONSTANT_ = MemoryAddress.ofLong(4L);
    static final jdk.incubator.foreign.MemoryAddress RT_MENU() { return RT_MENU$ADDR_CONSTANT_; }

    static final MemoryAddress RT_DIALOG$ADDR_CONSTANT_ = MemoryAddress.ofLong(5L);
    static final jdk.incubator.foreign.MemoryAddress RT_DIALOG() { return RT_DIALOG$ADDR_CONSTANT_; }

    static final MemoryAddress RT_STRING$ADDR_CONSTANT_ = MemoryAddress.ofLong(6L);
    static final jdk.incubator.foreign.MemoryAddress RT_STRING() { return RT_STRING$ADDR_CONSTANT_; }

    static final MemoryAddress RT_FONTDIR$ADDR_CONSTANT_ = MemoryAddress.ofLong(7L);
    static final jdk.incubator.foreign.MemoryAddress RT_FONTDIR() { return RT_FONTDIR$ADDR_CONSTANT_; }

    static final MemoryAddress RT_FONT$ADDR_CONSTANT_ = MemoryAddress.ofLong(8L);
    static final jdk.incubator.foreign.MemoryAddress RT_FONT() { return RT_FONT$ADDR_CONSTANT_; }

    static final MemoryAddress RT_ACCELERATOR$ADDR_CONSTANT_ = MemoryAddress.ofLong(9L);
    static final jdk.incubator.foreign.MemoryAddress RT_ACCELERATOR() { return RT_ACCELERATOR$ADDR_CONSTANT_; }

    static final MemoryAddress RT_RCDATA$ADDR_CONSTANT_ = MemoryAddress.ofLong(10L);
    static final jdk.incubator.foreign.MemoryAddress RT_RCDATA() { return RT_RCDATA$ADDR_CONSTANT_; }

    static final MemoryAddress RT_MESSAGETABLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(11L);
    static final jdk.incubator.foreign.MemoryAddress RT_MESSAGETABLE() { return RT_MESSAGETABLE$ADDR_CONSTANT_; }

    static final MemoryAddress RT_GROUP_CURSOR$ADDR_CONSTANT_ = MemoryAddress.ofLong(12L);
    static final jdk.incubator.foreign.MemoryAddress RT_GROUP_CURSOR() { return RT_GROUP_CURSOR$ADDR_CONSTANT_; }

    static final MemoryAddress RT_GROUP_ICON$ADDR_CONSTANT_ = MemoryAddress.ofLong(14L);
    static final jdk.incubator.foreign.MemoryAddress RT_GROUP_ICON() { return RT_GROUP_ICON$ADDR_CONSTANT_; }

    static final MemoryAddress RT_VERSION$ADDR_CONSTANT_ = MemoryAddress.ofLong(16L);
    static final jdk.incubator.foreign.MemoryAddress RT_VERSION() { return RT_VERSION$ADDR_CONSTANT_; }

    static final MemoryAddress RT_DLGINCLUDE$ADDR_CONSTANT_ = MemoryAddress.ofLong(17L);
    static final jdk.incubator.foreign.MemoryAddress RT_DLGINCLUDE() { return RT_DLGINCLUDE$ADDR_CONSTANT_; }

    static final MemoryAddress RT_PLUGPLAY$ADDR_CONSTANT_ = MemoryAddress.ofLong(19L);
    static final jdk.incubator.foreign.MemoryAddress RT_PLUGPLAY() { return RT_PLUGPLAY$ADDR_CONSTANT_; }

    static final MemoryAddress RT_VXD$ADDR_CONSTANT_ = MemoryAddress.ofLong(20L);
    static final jdk.incubator.foreign.MemoryAddress RT_VXD() { return RT_VXD$ADDR_CONSTANT_; }

    static final MemoryAddress RT_ANICURSOR$ADDR_CONSTANT_ = MemoryAddress.ofLong(21L);
    static final jdk.incubator.foreign.MemoryAddress RT_ANICURSOR() { return RT_ANICURSOR$ADDR_CONSTANT_; }

    static final MemoryAddress RT_ANIICON$ADDR_CONSTANT_ = MemoryAddress.ofLong(22L);
    static final jdk.incubator.foreign.MemoryAddress RT_ANIICON() { return RT_ANIICON$ADDR_CONSTANT_; }

    static final MemoryAddress RT_HTML$ADDR_CONSTANT_ = MemoryAddress.ofLong(23L);
    static final jdk.incubator.foreign.MemoryAddress RT_HTML() { return RT_HTML$ADDR_CONSTANT_; }

    static final MemoryAddress RT_MANIFEST$ADDR_CONSTANT_ = MemoryAddress.ofLong(24L);
    static final jdk.incubator.foreign.MemoryAddress RT_MANIFEST() { return RT_MANIFEST$ADDR_CONSTANT_; }

    static final MemoryAddress CREATEPROCESS_MANIFEST_RESOURCE_ID$ADDR_CONSTANT_ = MemoryAddress.ofLong(1L);
    static final jdk.incubator.foreign.MemoryAddress CREATEPROCESS_MANIFEST_RESOURCE_ID() { return CREATEPROCESS_MANIFEST_RESOURCE_ID$ADDR_CONSTANT_; }

    static final MemoryAddress ISOLATIONAWARE_MANIFEST_RESOURCE_ID$ADDR_CONSTANT_ = MemoryAddress.ofLong(2L);
    static final jdk.incubator.foreign.MemoryAddress ISOLATIONAWARE_MANIFEST_RESOURCE_ID() { return ISOLATIONAWARE_MANIFEST_RESOURCE_ID$ADDR_CONSTANT_; }

    static final MemoryAddress ISOLATIONAWARE_NOSTATICIMPORT_MANIFEST_RESOURCE_ID$ADDR_CONSTANT_ = MemoryAddress.ofLong(3L);
    static final jdk.incubator.foreign.MemoryAddress ISOLATIONAWARE_NOSTATICIMPORT_MANIFEST_RESOURCE_ID() { return ISOLATIONAWARE_NOSTATICIMPORT_MANIFEST_RESOURCE_ID$ADDR_CONSTANT_; }

    static final MemoryAddress ISOLATIONPOLICY_MANIFEST_RESOURCE_ID$ADDR_CONSTANT_ = MemoryAddress.ofLong(4L);
    static final jdk.incubator.foreign.MemoryAddress ISOLATIONPOLICY_MANIFEST_RESOURCE_ID() { return ISOLATIONPOLICY_MANIFEST_RESOURCE_ID$ADDR_CONSTANT_; }

    static final MemoryAddress ISOLATIONPOLICY_BROWSER_MANIFEST_RESOURCE_ID$ADDR_CONSTANT_ = MemoryAddress.ofLong(5L);
    static final jdk.incubator.foreign.MemoryAddress ISOLATIONPOLICY_BROWSER_MANIFEST_RESOURCE_ID() { return ISOLATIONPOLICY_BROWSER_MANIFEST_RESOURCE_ID$ADDR_CONSTANT_; }

    static final MemoryAddress MINIMUM_RESERVED_MANIFEST_RESOURCE_ID$ADDR_CONSTANT_ = MemoryAddress.ofLong(1L);
    static final jdk.incubator.foreign.MemoryAddress MINIMUM_RESERVED_MANIFEST_RESOURCE_ID() { return MINIMUM_RESERVED_MANIFEST_RESOURCE_ID$ADDR_CONSTANT_; }

    static final MemoryAddress MAXIMUM_RESERVED_MANIFEST_RESOURCE_ID$ADDR_CONSTANT_ = MemoryAddress.ofLong(16L);
    static final jdk.incubator.foreign.MemoryAddress MAXIMUM_RESERVED_MANIFEST_RESOURCE_ID() { return MAXIMUM_RESERVED_MANIFEST_RESOURCE_ID$ADDR_CONSTANT_; }

    static final MemoryAddress SETWALLPAPER_DEFAULT$ADDR_CONSTANT_ = MemoryAddress.ofLong(-1L);
    static final jdk.incubator.foreign.MemoryAddress SETWALLPAPER_DEFAULT() { return SETWALLPAPER_DEFAULT$ADDR_CONSTANT_; }

    static final int WH_MIN() { return (int)-1L; }

    static final int WH_MSGFILTER() { return (int)-1L; }

    static final int WH_MINHOOK() { return (int)-1L; }

    static final int WH_MAXHOOK() { return (int)14L; }

    static final int HC_NOREM() { return (int)3L; }

    static final int HSHELL_FLASH() { return (int)32774L; }

    static final int HSHELL_RUDEAPPACTIVATED() { return (int)32772L; }

    static final int LLKHF_EXTENDED() { return (int)1L; }

    static final int LLKHF_ALTDOWN() { return (int)32L; }

    static final int LLKHF_UP() { return (int)128L; }

    static final int DESKTOP_READOBJECTS() { return (int)1L; }

    static final int DESKTOP_CREATEWINDOW() { return (int)2L; }

    static final int DESKTOP_CREATEMENU() { return (int)4L; }

    static final int DESKTOP_HOOKCONTROL() { return (int)8L; }

    static final int DESKTOP_JOURNALRECORD() { return (int)16L; }

    static final int DESKTOP_JOURNALPLAYBACK() { return (int)32L; }

    static final int DESKTOP_ENUMERATE() { return (int)64L; }

    static final int DESKTOP_WRITEOBJECTS() { return (int)128L; }

    static final int DESKTOP_SWITCHDESKTOP() { return (int)256L; }

    static final int DF_ALLOWOTHERACCOUNTHOOK() { return (int)1L; }

    static final int WINSTA_ENUMDESKTOPS() { return (int)1L; }

    static final int WINSTA_READATTRIBUTES() { return (int)2L; }

    static final int WINSTA_ACCESSCLIPBOARD() { return (int)4L; }

    static final int WINSTA_CREATEDESKTOP() { return (int)8L; }

    static final int WINSTA_WRITEATTRIBUTES() { return (int)16L; }

    static final int WINSTA_ACCESSGLOBALATOMS() { return (int)32L; }

    static final int WINSTA_EXITWINDOWS() { return (int)64L; }

    static final int WINSTA_ENUMERATE() { return (int)256L; }

    static final int WINSTA_READSCREEN() { return (int)512L; }

    static final int WINSTA_ALL_ACCESS() { return (int)895L; }

    static final int WSF_VISIBLE() { return (int)1L; }

    static final int GWL_STYLE() { return (int)-16L; }

    static final int GWL_EXSTYLE() { return (int)-20L; }

    static final int GWL_ID() { return (int)-12L; }

    static final int GWLP_WNDPROC() { return (int)-4L; }

    static final int GWLP_HINSTANCE() { return (int)-6L; }

    static final int GWLP_HWNDPARENT() { return (int)-8L; }

    static final int GWLP_USERDATA() { return (int)-21L; }

    static final int GWLP_ID() { return (int)-12L; }

    static final int GCL_CBWNDEXTRA() { return (int)-18L; }

    static final int GCL_CBCLSEXTRA() { return (int)-20L; }

    static final int GCL_STYLE() { return (int)-26L; }

    static final int GCW_ATOM() { return (int)-32L; }

    static final int GCLP_MENUNAME() { return (int)-8L; }

    static final int GCLP_HBRBACKGROUND() { return (int)-10L; }

    static final int GCLP_HCURSOR() { return (int)-12L; }

    static final int GCLP_HICON() { return (int)-14L; }

    static final int GCLP_HMODULE() { return (int)-16L; }

    static final int GCLP_WNDPROC() { return (int)-24L; }

    static final int GCLP_HICONSM() { return (int)-34L; }

    static final int WM_SETTINGCHANGE() { return (int)26L; }

    static final int PWR_FAIL() { return (int)-1L; }

    static final int WHEEL_PAGESCROLL() { return (int)4294967295L; }

    static final int HTERROR() { return (int)-2L; }

    static final int HTTRANSPARENT() { return (int)-1L; }

    static final int HTSIZE() { return (int)4L; }

    static final int HTREDUCE() { return (int)8L; }

    static final int HTZOOM() { return (int)9L; }

    static final int HTSIZEFIRST() { return (int)10L; }

    static final int HTSIZELAST() { return (int)17L; }

    static final int SIZENORMAL() { return (int)0L; }

    static final int SIZEICONIC() { return (int)1L; }

    static final int SIZEFULLSCREEN() { return (int)2L; }

    static final int SIZEZOOMSHOW() { return (int)3L; }

    static final int SIZEZOOMHIDE() { return (int)4L; }

    static final int WVR_REDRAW() { return (int)768L; }

    static final int TME_CANCEL() { return (int)2147483648L; }

    static final int HOVER_DEFAULT() { return (int)4294967295L; }

    static final int WS_OVERLAPPED() { return (int)0L; }

    static final int WS_POPUP() { return (int)2147483648L; }

    static final int WS_CHILD() { return (int)1073741824L; }

    static final int WS_MINIMIZE() { return (int)536870912L; }

    static final int WS_VISIBLE() { return (int)268435456L; }

    static final int WS_DISABLED() { return (int)134217728L; }

    static final int WS_CLIPSIBLINGS() { return (int)67108864L; }

    static final int WS_CLIPCHILDREN() { return (int)33554432L; }

    static final int WS_MAXIMIZE() { return (int)16777216L; }

    static final int WS_CAPTION() { return (int)12582912L; }

    static final int WS_BORDER() { return (int)8388608L; }

    static final int WS_DLGFRAME() { return (int)4194304L; }

    static final int WS_VSCROLL() { return (int)2097152L; }

    static final int WS_HSCROLL() { return (int)1048576L; }

    static final int WS_SYSMENU() { return (int)524288L; }

    static final int WS_THICKFRAME() { return (int)262144L; }

    static final int WS_GROUP() { return (int)131072L; }

    static final int WS_TABSTOP() { return (int)65536L; }

    static final int WS_MINIMIZEBOX() { return (int)131072L; }

    static final int WS_MAXIMIZEBOX() { return (int)65536L; }

    static final int WS_TILED() { return (int)0L; }

    static final int WS_ICONIC() { return (int)536870912L; }

    static final int WS_SIZEBOX() { return (int)262144L; }

    static final int WS_TILEDWINDOW() { return (int)13565952L; }

    static final int WS_OVERLAPPEDWINDOW() { return (int)13565952L; }

    static final int WS_POPUPWINDOW() { return (int)2156396544L; }

    static final int WS_CHILDWINDOW() { return (int)1073741824L; }

    static final int WS_EX_DLGMODALFRAME() { return (int)1L; }

    static final int WS_EX_NOPARENTNOTIFY() { return (int)4L; }

    static final int WS_EX_TOPMOST() { return (int)8L; }

    static final int WS_EX_ACCEPTFILES() { return (int)16L; }

    static final int WS_EX_TRANSPARENT() { return (int)32L; }

    static final int WS_EX_MDICHILD() { return (int)64L; }

    static final int WS_EX_TOOLWINDOW() { return (int)128L; }

    static final int WS_EX_WINDOWEDGE() { return (int)256L; }

    static final int WS_EX_CLIENTEDGE() { return (int)512L; }

    static final int WS_EX_CONTEXTHELP() { return (int)1024L; }

    static final int WS_EX_RIGHT() { return (int)4096L; }

    static final int WS_EX_LEFT() { return (int)0L; }

    static final int WS_EX_RTLREADING() { return (int)8192L; }

    static final int WS_EX_LTRREADING() { return (int)0L; }

    static final int WS_EX_LEFTSCROLLBAR() { return (int)16384L; }

    static final int WS_EX_RIGHTSCROLLBAR() { return (int)0L; }

    static final int WS_EX_CONTROLPARENT() { return (int)65536L; }

    static final int WS_EX_STATICEDGE() { return (int)131072L; }

    static final int WS_EX_APPWINDOW() { return (int)262144L; }

    static final int WS_EX_OVERLAPPEDWINDOW() { return (int)768L; }

    static final int WS_EX_PALETTEWINDOW() { return (int)392L; }

    static final int WS_EX_NOINHERITLAYOUT() { return (int)1048576L; }

    static final int WS_EX_NOREDIRECTIONBITMAP() { return (int)2097152L; }

    static final int WS_EX_LAYOUTRTL() { return (int)4194304L; }

    static final int WS_EX_COMPOSITED() { return (int)33554432L; }

    static final int WS_EX_NOACTIVATE() { return (int)134217728L; }

    static final int PRF_CHECKVISIBLE() { return (int)1L; }

    static final int PRF_NONCLIENT() { return (int)2L; }

    static final int PRF_CLIENT() { return (int)4L; }

    static final int PRF_ERASEBKGND() { return (int)8L; }

    static final int PRF_CHILDREN() { return (int)16L; }

    static final int PRF_OWNED() { return (int)32L; }

    static final int BDR_OUTER() { return (int)3L; }

    static final int BDR_INNER() { return (int)12L; }

    static final int BDR_RAISED() { return (int)5L; }

    static final int BDR_SUNKEN() { return (int)10L; }

    static final int EDGE_RAISED() { return (int)5L; }

    static final int EDGE_SUNKEN() { return (int)10L; }

    static final int EDGE_ETCHED() { return (int)6L; }

    static final int EDGE_BUMP() { return (int)9L; }

    static final int BF_TOPLEFT() { return (int)3L; }

    static final int BF_TOPRIGHT() { return (int)6L; }

    static final int BF_BOTTOMLEFT() { return (int)9L; }

    static final int BF_BOTTOMRIGHT() { return (int)12L; }

    static final int BF_RECT() { return (int)15L; }

    static final int BF_DIAGONAL_ENDTOPRIGHT() { return (int)22L; }

    static final int BF_DIAGONAL_ENDTOPLEFT() { return (int)19L; }

    static final int BF_DIAGONAL_ENDBOTTOMLEFT() { return (int)25L; }

    static final int BF_DIAGONAL_ENDBOTTOMRIGHT() { return (int)28L; }

    static final int FVIRTKEY() { return (int)1L; }

    static final int PM_QS_INPUT() { return (int)470220800L; }

    static final int PM_QS_POSTMESSAGE() { return (int)9961472L; }

    static final int PM_QS_PAINT() { return (int)2097152L; }

    static final int PM_QS_SENDMESSAGE() { return (int)4194304L; }

    static final int IDHOT_SNAPWINDOW() { return (int)-1L; }

    static final int IDHOT_SNAPDESKTOP() { return (int)-2L; }

    static final int ENDSESSION_LOGOFF() { return (int)2147483648L; }

    static final MemoryAddress HWND_BROADCAST$ADDR_CONSTANT_ = MemoryAddress.ofLong(65535L);
    static final jdk.incubator.foreign.MemoryAddress HWND_BROADCAST() { return HWND_BROADCAST$ADDR_CONSTANT_; }

    static final MemoryAddress HWND_MESSAGE$ADDR_CONSTANT_ = MemoryAddress.ofLong(-3L);
    static final jdk.incubator.foreign.MemoryAddress HWND_MESSAGE() { return HWND_MESSAGE$ADDR_CONSTANT_; }

    static final int CW_USEDEFAULT() { return (int)-2147483648L; }

    static final MemoryAddress HWND_DESKTOP$ADDR_CONSTANT_ = MemoryAddress.ofLong(0L);
    static final jdk.incubator.foreign.MemoryAddress HWND_DESKTOP() { return HWND_DESKTOP$ADDR_CONSTANT_; }

    static final int FLASHW_ALL() { return (int)3L; }

    static final int SWP_DRAWFRAME() { return (int)32L; }

    static final int SWP_NOREPOSITION() { return (int)512L; }

    static final MemoryAddress HWND_TOP$ADDR_CONSTANT_ = MemoryAddress.ofLong(0L);
    static final jdk.incubator.foreign.MemoryAddress HWND_TOP() { return HWND_TOP$ADDR_CONSTANT_; }

    static final MemoryAddress HWND_BOTTOM$ADDR_CONSTANT_ = MemoryAddress.ofLong(1L);
    static final jdk.incubator.foreign.MemoryAddress HWND_BOTTOM() { return HWND_BOTTOM$ADDR_CONSTANT_; }

    static final MemoryAddress HWND_TOPMOST$ADDR_CONSTANT_ = MemoryAddress.ofLong(-1L);
    static final jdk.incubator.foreign.MemoryAddress HWND_TOPMOST() { return HWND_TOPMOST$ADDR_CONSTANT_; }

    static final MemoryAddress HWND_NOTOPMOST$ADDR_CONSTANT_ = MemoryAddress.ofLong(-2L);
    static final jdk.incubator.foreign.MemoryAddress HWND_NOTOPMOST() { return HWND_NOTOPMOST$ADDR_CONSTANT_; }

    static final int TWF_FINETOUCH() { return (int)1L; }

    static final int TWF_WANTPALM() { return (int)2L; }

    static final int POINTER_MOD_SHIFT() { return (int)4L; }

    static final int POINTER_MOD_CTRL() { return (int)8L; }

    static final int PA_ACTIVATE() { return (int)1L; }

    static final int PA_NOACTIVATE() { return (int)3L; }

    static final int MAPVK_VK_TO_VSC() { return (int)0L; }

    static final int MAPVK_VSC_TO_VK() { return (int)1L; }

    static final int MAPVK_VK_TO_CHAR() { return (int)2L; }

    static final int MAPVK_VSC_TO_VK_EX() { return (int)3L; }

    static final int MAPVK_VK_TO_VSC_EX() { return (int)4L; }

    static final int QS_MOUSE() { return (int)6L; }

    static final int QS_INPUT() { return (int)7175L; }

    static final int QS_ALLEVENTS() { return (int)7359L; }

    static final int QS_ALLINPUT() { return (int)7423L; }

    static final int TIMERV_DEFAULT_COALESCING() { return (int)0L; }

    static final int TIMERV_NO_COALESCING() { return (int)4294967295L; }

    static final int TIMERV_COALESCING_MIN() { return (int)1L; }

    static final int TIMERV_COALESCING_MAX() { return (int)2147483637L; }

    static final int SM_CXFIXEDFRAME() { return (int)7L; }

    static final int SM_CYFIXEDFRAME() { return (int)8L; }

    static final int SM_CXSIZEFRAME() { return (int)32L; }

    static final int SM_CYSIZEFRAME() { return (int)33L; }

    static final int MNS_NOCHECK() { return (int)2147483648L; }

    static final int MIM_APPLYTOSUBMENUS() { return (int)2147483648L; }

    static final MemoryAddress HBMMENU_CALLBACK$ADDR_CONSTANT_ = MemoryAddress.ofLong(-1L);
    static final jdk.incubator.foreign.MemoryAddress HBMMENU_CALLBACK() { return HBMMENU_CALLBACK$ADDR_CONSTANT_; }

    static final MemoryAddress HBMMENU_SYSTEM$ADDR_CONSTANT_ = MemoryAddress.ofLong(1L);
    static final jdk.incubator.foreign.MemoryAddress HBMMENU_SYSTEM() { return HBMMENU_SYSTEM$ADDR_CONSTANT_; }

    static final MemoryAddress HBMMENU_MBAR_RESTORE$ADDR_CONSTANT_ = MemoryAddress.ofLong(2L);
    static final jdk.incubator.foreign.MemoryAddress HBMMENU_MBAR_RESTORE() { return HBMMENU_MBAR_RESTORE$ADDR_CONSTANT_; }

    static final MemoryAddress HBMMENU_MBAR_MINIMIZE$ADDR_CONSTANT_ = MemoryAddress.ofLong(3L);
    static final jdk.incubator.foreign.MemoryAddress HBMMENU_MBAR_MINIMIZE() { return HBMMENU_MBAR_MINIMIZE$ADDR_CONSTANT_; }

    static final MemoryAddress HBMMENU_MBAR_CLOSE$ADDR_CONSTANT_ = MemoryAddress.ofLong(5L);
    static final jdk.incubator.foreign.MemoryAddress HBMMENU_MBAR_CLOSE() { return HBMMENU_MBAR_CLOSE$ADDR_CONSTANT_; }

    static final MemoryAddress HBMMENU_MBAR_CLOSE_D$ADDR_CONSTANT_ = MemoryAddress.ofLong(6L);
    static final jdk.incubator.foreign.MemoryAddress HBMMENU_MBAR_CLOSE_D() { return HBMMENU_MBAR_CLOSE_D$ADDR_CONSTANT_; }

    static final MemoryAddress HBMMENU_MBAR_MINIMIZE_D$ADDR_CONSTANT_ = MemoryAddress.ofLong(7L);
    static final jdk.incubator.foreign.MemoryAddress HBMMENU_MBAR_MINIMIZE_D() { return HBMMENU_MBAR_MINIMIZE_D$ADDR_CONSTANT_; }

    static final MemoryAddress HBMMENU_POPUP_CLOSE$ADDR_CONSTANT_ = MemoryAddress.ofLong(8L);
    static final jdk.incubator.foreign.MemoryAddress HBMMENU_POPUP_CLOSE() { return HBMMENU_POPUP_CLOSE$ADDR_CONSTANT_; }

    static final MemoryAddress HBMMENU_POPUP_RESTORE$ADDR_CONSTANT_ = MemoryAddress.ofLong(9L);
    static final jdk.incubator.foreign.MemoryAddress HBMMENU_POPUP_RESTORE() { return HBMMENU_POPUP_RESTORE$ADDR_CONSTANT_; }

    static final MemoryAddress HBMMENU_POPUP_MAXIMIZE$ADDR_CONSTANT_ = MemoryAddress.ofLong(10L);
    static final jdk.incubator.foreign.MemoryAddress HBMMENU_POPUP_MAXIMIZE() { return HBMMENU_POPUP_MAXIMIZE$ADDR_CONSTANT_; }

    static final MemoryAddress HBMMENU_POPUP_MINIMIZE$ADDR_CONSTANT_ = MemoryAddress.ofLong(11L);
    static final jdk.incubator.foreign.MemoryAddress HBMMENU_POPUP_MINIMIZE() { return HBMMENU_POPUP_MINIMIZE$ADDR_CONSTANT_; }

    static final int GMDI_USEDISABLED() { return (int)1L; }

    static final int GMDI_GOINTOPOPUPS() { return (int)2L; }

    static final int TPM_LEFTBUTTON() { return (int)0L; }

    static final int TPM_RIGHTBUTTON() { return (int)2L; }

    static final int TPM_LEFTALIGN() { return (int)0L; }

    static final int TPM_CENTERALIGN() { return (int)4L; }

    static final int TPM_RIGHTALIGN() { return (int)8L; }

    static final int TPM_TOPALIGN() { return (int)0L; }

    static final int TPM_VCENTERALIGN() { return (int)16L; }

    static final int TPM_BOTTOMALIGN() { return (int)32L; }

    static final int TPM_HORIZONTAL() { return (int)0L; }

    static final int TPM_VERTICAL() { return (int)64L; }

    static final int TPM_NONOTIFY() { return (int)128L; }

    static final int TPM_RETURNCMD() { return (int)256L; }

    static final int TPM_RECURSE() { return (int)1L; }

    static final int TPM_HORPOSANIMATION() { return (int)1024L; }

    static final int TPM_HORNEGANIMATION() { return (int)2048L; }

    static final int TPM_VERPOSANIMATION() { return (int)4096L; }

    static final int TPM_VERNEGANIMATION() { return (int)8192L; }

    static final int TPM_NOANIMATION() { return (int)16384L; }

    static final int TPM_LAYOUTRTL() { return (int)32768L; }

    static final int TPM_WORKAREA() { return (int)65536L; }

    static final int DO_DROPFILE() { return (int)1162627398L; }

    static final int DO_PRINTFILE() { return (int)1414419024L; }

    static final int ASFW_ANY() { return (int)4294967295L; }

    static final int DCX_WINDOW() { return (int)1L; }

    static final int DCX_CACHE() { return (int)2L; }

    static final int DCX_NORESETATTRS() { return (int)4L; }

    static final int DCX_CLIPCHILDREN() { return (int)8L; }

    static final int DCX_CLIPSIBLINGS() { return (int)16L; }

    static final int DCX_PARENTCLIP() { return (int)32L; }

    static final int DCX_EXCLUDERGN() { return (int)64L; }

    static final int DCX_INTERSECTRGN() { return (int)128L; }

    static final int DCX_EXCLUDEUPDATE() { return (int)256L; }

    static final int DCX_INTERSECTUPDATE() { return (int)512L; }

    static final int DCX_LOCKWINDOWUPDATE() { return (int)1024L; }

    static final int DCX_VALIDATE() { return (int)2097152L; }

    static final int ESB_DISABLE_LTUP() { return (int)1L; }

    static final int ESB_DISABLE_RTDN() { return (int)2L; }

    static final int MB_OK() { return (int)0L; }

    static final int MB_OKCANCEL() { return (int)1L; }

    static final int MB_ABORTRETRYIGNORE() { return (int)2L; }

    static final int MB_YESNOCANCEL() { return (int)3L; }

    static final int MB_YESNO() { return (int)4L; }

    static final int MB_RETRYCANCEL() { return (int)5L; }

    static final int MB_CANCELTRYCONTINUE() { return (int)6L; }

    static final int MB_ICONHAND() { return (int)16L; }

    static final int MB_ICONQUESTION() { return (int)32L; }

    static final int MB_ICONEXCLAMATION() { return (int)48L; }

    static final int MB_ICONASTERISK() { return (int)64L; }

    static final int MB_USERICON() { return (int)128L; }

    static final int MB_ICONWARNING() { return (int)48L; }

    static final int MB_ICONERROR() { return (int)16L; }

    static final int MB_ICONINFORMATION() { return (int)64L; }

    static final int MB_ICONSTOP() { return (int)16L; }

    static final int MB_DEFBUTTON1() { return (int)0L; }

    static final int MB_DEFBUTTON2() { return (int)256L; }

    static final int MB_DEFBUTTON3() { return (int)512L; }

    static final int MB_DEFBUTTON4() { return (int)768L; }

    static final int MB_APPLMODAL() { return (int)0L; }

    static final int MB_SYSTEMMODAL() { return (int)4096L; }

    static final int MB_TASKMODAL() { return (int)8192L; }

    static final int MB_HELP() { return (int)16384L; }

    static final int MB_NOFOCUS() { return (int)32768L; }

    static final int MB_SETFOREGROUND() { return (int)65536L; }

    static final int MB_DEFAULT_DESKTOP_ONLY() { return (int)131072L; }

    static final int MB_TOPMOST() { return (int)262144L; }

    static final int MB_RIGHT() { return (int)524288L; }

    static final int MB_RTLREADING() { return (int)1048576L; }

    static final int MB_SERVICE_NOTIFICATION() { return (int)2097152L; }

    static final int MB_SERVICE_NOTIFICATION_NT3X() { return (int)262144L; }

    static final int MB_TYPEMASK() { return (int)15L; }

    static final int MB_ICONMASK() { return (int)240L; }

    static final int MB_DEFMASK() { return (int)3840L; }

    static final int MB_MODEMASK() { return (int)12288L; }

    static final int MB_MISCMASK() { return (int)49152L; }

    static final int COLOR_DESKTOP() { return (int)1L; }

    static final int COLOR_3DFACE() { return (int)15L; }

    static final int COLOR_3DSHADOW() { return (int)16L; }

    static final int COLOR_3DHIGHLIGHT() { return (int)20L; }

    static final int COLOR_3DHILIGHT() { return (int)20L; }

    static final int COLOR_BTNHILIGHT() { return (int)20L; }

    static final int MF_INSERT() { return (int)0L; }

    static final int MF_CHANGE() { return (int)128L; }

    static final int MF_APPEND() { return (int)256L; }

    static final int MF_DELETE() { return (int)512L; }

    static final int MF_REMOVE() { return (int)4096L; }

    static final int MF_BYCOMMAND() { return (int)0L; }

    static final int MF_BYPOSITION() { return (int)1024L; }

    static final int MF_SEPARATOR() { return (int)2048L; }

    static final int MF_ENABLED() { return (int)0L; }

    static final int MF_GRAYED() { return (int)1L; }

    static final int MF_DISABLED() { return (int)2L; }

    static final int MF_UNCHECKED() { return (int)0L; }

    static final int MF_CHECKED() { return (int)8L; }

    static final int MF_USECHECKBITMAPS() { return (int)512L; }

    static final int MF_STRING() { return (int)0L; }

    static final int MF_BITMAP() { return (int)4L; }

    static final int MF_OWNERDRAW() { return (int)256L; }

    static final int MF_POPUP() { return (int)16L; }

    static final int MF_MENUBARBREAK() { return (int)32L; }

    static final int MF_MENUBREAK() { return (int)64L; }

    static final int MF_UNHILITE() { return (int)0L; }

    static final int MF_HILITE() { return (int)128L; }

    static final int MF_DEFAULT() { return (int)4096L; }

    static final int MF_SYSMENU() { return (int)8192L; }

    static final int MF_HELP() { return (int)16384L; }

    static final int MF_RIGHTJUSTIFY() { return (int)16384L; }

    static final int MF_MOUSESELECT() { return (int)32768L; }

    static final int MF_END() { return (int)128L; }

    static final int MFT_STRING() { return (int)0L; }

    static final int MFT_BITMAP() { return (int)4L; }

    static final int MFT_MENUBARBREAK() { return (int)32L; }

    static final int MFT_MENUBREAK() { return (int)64L; }

    static final int MFT_OWNERDRAW() { return (int)256L; }

    static final int MFT_RADIOCHECK() { return (int)512L; }

    static final int MFT_SEPARATOR() { return (int)2048L; }

    static final int MFT_RIGHTORDER() { return (int)8192L; }

    static final int MFT_RIGHTJUSTIFY() { return (int)16384L; }

    static final int MFS_GRAYED() { return (int)3L; }

    static final int MFS_DISABLED() { return (int)3L; }

    static final int MFS_CHECKED() { return (int)8L; }

    static final int MFS_HILITE() { return (int)128L; }

    static final int MFS_ENABLED() { return (int)0L; }

    static final int MFS_UNCHECKED() { return (int)0L; }

    static final int MFS_UNHILITE() { return (int)0L; }

    static final int MFS_DEFAULT() { return (int)4096L; }

    static final int SC_ICON() { return (int)61472L; }

    static final int SC_ZOOM() { return (int)61488L; }

    static final MemoryAddress IDC_ARROW$ADDR_CONSTANT_ = MemoryAddress.ofLong(32512L);
    static final jdk.incubator.foreign.MemoryAddress IDC_ARROW() { return IDC_ARROW$ADDR_CONSTANT_; }

    static final MemoryAddress IDC_IBEAM$ADDR_CONSTANT_ = MemoryAddress.ofLong(32513L);
    static final jdk.incubator.foreign.MemoryAddress IDC_IBEAM() { return IDC_IBEAM$ADDR_CONSTANT_; }

    static final MemoryAddress IDC_WAIT$ADDR_CONSTANT_ = MemoryAddress.ofLong(32514L);
    static final jdk.incubator.foreign.MemoryAddress IDC_WAIT() { return IDC_WAIT$ADDR_CONSTANT_; }

    static final MemoryAddress IDC_CROSS$ADDR_CONSTANT_ = MemoryAddress.ofLong(32515L);
    static final jdk.incubator.foreign.MemoryAddress IDC_CROSS() { return IDC_CROSS$ADDR_CONSTANT_; }

    static final MemoryAddress IDC_UPARROW$ADDR_CONSTANT_ = MemoryAddress.ofLong(32516L);
    static final jdk.incubator.foreign.MemoryAddress IDC_UPARROW() { return IDC_UPARROW$ADDR_CONSTANT_; }

    static final MemoryAddress IDC_SIZE$ADDR_CONSTANT_ = MemoryAddress.ofLong(32640L);
    static final jdk.incubator.foreign.MemoryAddress IDC_SIZE() { return IDC_SIZE$ADDR_CONSTANT_; }

    static final MemoryAddress IDC_ICON$ADDR_CONSTANT_ = MemoryAddress.ofLong(32641L);
    static final jdk.incubator.foreign.MemoryAddress IDC_ICON() { return IDC_ICON$ADDR_CONSTANT_; }

    static final MemoryAddress IDC_SIZENWSE$ADDR_CONSTANT_ = MemoryAddress.ofLong(32642L);
    static final jdk.incubator.foreign.MemoryAddress IDC_SIZENWSE() { return IDC_SIZENWSE$ADDR_CONSTANT_; }

    static final MemoryAddress IDC_SIZENESW$ADDR_CONSTANT_ = MemoryAddress.ofLong(32643L);
    static final jdk.incubator.foreign.MemoryAddress IDC_SIZENESW() { return IDC_SIZENESW$ADDR_CONSTANT_; }

    static final MemoryAddress IDC_SIZEWE$ADDR_CONSTANT_ = MemoryAddress.ofLong(32644L);
    static final jdk.incubator.foreign.MemoryAddress IDC_SIZEWE() { return IDC_SIZEWE$ADDR_CONSTANT_; }

    static final MemoryAddress IDC_SIZENS$ADDR_CONSTANT_ = MemoryAddress.ofLong(32645L);
    static final jdk.incubator.foreign.MemoryAddress IDC_SIZENS() { return IDC_SIZENS$ADDR_CONSTANT_; }

    static final MemoryAddress IDC_SIZEALL$ADDR_CONSTANT_ = MemoryAddress.ofLong(32646L);
    static final jdk.incubator.foreign.MemoryAddress IDC_SIZEALL() { return IDC_SIZEALL$ADDR_CONSTANT_; }

    static final MemoryAddress IDC_NO$ADDR_CONSTANT_ = MemoryAddress.ofLong(32648L);
    static final jdk.incubator.foreign.MemoryAddress IDC_NO() { return IDC_NO$ADDR_CONSTANT_; }

    static final MemoryAddress IDC_HAND$ADDR_CONSTANT_ = MemoryAddress.ofLong(32649L);
    static final jdk.incubator.foreign.MemoryAddress IDC_HAND() { return IDC_HAND$ADDR_CONSTANT_; }

    static final MemoryAddress IDC_APPSTARTING$ADDR_CONSTANT_ = MemoryAddress.ofLong(32650L);
    static final jdk.incubator.foreign.MemoryAddress IDC_APPSTARTING() { return IDC_APPSTARTING$ADDR_CONSTANT_; }

    static final MemoryAddress IDC_HELP$ADDR_CONSTANT_ = MemoryAddress.ofLong(32651L);
    static final jdk.incubator.foreign.MemoryAddress IDC_HELP() { return IDC_HELP$ADDR_CONSTANT_; }

    static final MemoryAddress IDC_PIN$ADDR_CONSTANT_ = MemoryAddress.ofLong(32671L);
    static final jdk.incubator.foreign.MemoryAddress IDC_PIN() { return IDC_PIN$ADDR_CONSTANT_; }

    static final MemoryAddress IDC_PERSON$ADDR_CONSTANT_ = MemoryAddress.ofLong(32672L);
    static final jdk.incubator.foreign.MemoryAddress IDC_PERSON() { return IDC_PERSON$ADDR_CONSTANT_; }

    static final MemoryAddress IDI_APPLICATION$ADDR_CONSTANT_ = MemoryAddress.ofLong(32512L);
    static final jdk.incubator.foreign.MemoryAddress IDI_APPLICATION() { return IDI_APPLICATION$ADDR_CONSTANT_; }

    static final MemoryAddress IDI_HAND$ADDR_CONSTANT_ = MemoryAddress.ofLong(32513L);
    static final jdk.incubator.foreign.MemoryAddress IDI_HAND() { return IDI_HAND$ADDR_CONSTANT_; }

    static final MemoryAddress IDI_QUESTION$ADDR_CONSTANT_ = MemoryAddress.ofLong(32514L);
    static final jdk.incubator.foreign.MemoryAddress IDI_QUESTION() { return IDI_QUESTION$ADDR_CONSTANT_; }

    static final MemoryAddress IDI_EXCLAMATION$ADDR_CONSTANT_ = MemoryAddress.ofLong(32515L);
    static final jdk.incubator.foreign.MemoryAddress IDI_EXCLAMATION() { return IDI_EXCLAMATION$ADDR_CONSTANT_; }

    static final MemoryAddress IDI_ASTERISK$ADDR_CONSTANT_ = MemoryAddress.ofLong(32516L);
    static final jdk.incubator.foreign.MemoryAddress IDI_ASTERISK() { return IDI_ASTERISK$ADDR_CONSTANT_; }

    static final MemoryAddress IDI_WINLOGO$ADDR_CONSTANT_ = MemoryAddress.ofLong(32517L);
    static final jdk.incubator.foreign.MemoryAddress IDI_WINLOGO() { return IDI_WINLOGO$ADDR_CONSTANT_; }

    static final MemoryAddress IDI_SHIELD$ADDR_CONSTANT_ = MemoryAddress.ofLong(32518L);
    static final jdk.incubator.foreign.MemoryAddress IDI_SHIELD() { return IDI_SHIELD$ADDR_CONSTANT_; }

    static final MemoryAddress IDI_WARNING$ADDR_CONSTANT_ = MemoryAddress.ofLong(32515L);
    static final jdk.incubator.foreign.MemoryAddress IDI_WARNING() { return IDI_WARNING$ADDR_CONSTANT_; }

    static final MemoryAddress IDI_ERROR$ADDR_CONSTANT_ = MemoryAddress.ofLong(32513L);
    static final jdk.incubator.foreign.MemoryAddress IDI_ERROR() { return IDI_ERROR$ADDR_CONSTANT_; }

    static final MemoryAddress IDI_INFORMATION$ADDR_CONSTANT_ = MemoryAddress.ofLong(32516L);
    static final jdk.incubator.foreign.MemoryAddress IDI_INFORMATION() { return IDI_INFORMATION$ADDR_CONSTANT_; }

    static final int ES_LEFT() { return (int)0L; }

    static final int ES_CENTER() { return (int)1L; }

    static final int ES_RIGHT() { return (int)2L; }

    static final int ES_MULTILINE() { return (int)4L; }

    static final int ES_UPPERCASE() { return (int)8L; }

    static final int ES_LOWERCASE() { return (int)16L; }

    static final int ES_PASSWORD() { return (int)32L; }

    static final int ES_AUTOVSCROLL() { return (int)64L; }

    static final int ES_AUTOHSCROLL() { return (int)128L; }

    static final int ES_NOHIDESEL() { return (int)256L; }

    static final int ES_OEMCONVERT() { return (int)1024L; }

    static final int ES_READONLY() { return (int)2048L; }

    static final int ES_WANTRETURN() { return (int)4096L; }

    static final int ES_NUMBER() { return (int)8192L; }

    static final int EM_SETLIMITTEXT() { return (int)197L; }

    static final int BS_PUSHBUTTON() { return (int)0L; }

    static final int BS_DEFPUSHBUTTON() { return (int)1L; }

    static final int BS_CHECKBOX() { return (int)2L; }

    static final int BS_AUTOCHECKBOX() { return (int)3L; }

    static final int BS_RADIOBUTTON() { return (int)4L; }

    static final int BS_3STATE() { return (int)5L; }

    static final int BS_AUTO3STATE() { return (int)6L; }

    static final int BS_GROUPBOX() { return (int)7L; }

    static final int BS_USERBUTTON() { return (int)8L; }

    static final int BS_AUTORADIOBUTTON() { return (int)9L; }

    static final int BS_PUSHBOX() { return (int)10L; }

    static final int BS_OWNERDRAW() { return (int)11L; }

    static final int BS_TYPEMASK() { return (int)15L; }

    static final int BS_LEFTTEXT() { return (int)32L; }

    static final int BS_TEXT() { return (int)0L; }

    static final int BS_ICON() { return (int)64L; }

    static final int BS_BITMAP() { return (int)128L; }

    static final int BS_LEFT() { return (int)256L; }

    static final int BS_RIGHT() { return (int)512L; }

    static final int BS_CENTER() { return (int)768L; }

    static final int BS_TOP() { return (int)1024L; }

    static final int BS_BOTTOM() { return (int)2048L; }

    static final int BS_VCENTER() { return (int)3072L; }

    static final int BS_PUSHLIKE() { return (int)4096L; }

    static final int BS_MULTILINE() { return (int)8192L; }

    static final int BS_NOTIFY() { return (int)16384L; }

    static final int BS_FLAT() { return (int)32768L; }

    static final int BS_RIGHTBUTTON() { return (int)32L; }

    static final int BN_PUSHED() { return (int)2L; }

    static final int BN_UNPUSHED() { return (int)3L; }

    static final int BN_DBLCLK() { return (int)5L; }

    static final int SS_LEFT() { return (int)0L; }

    static final int SS_CENTER() { return (int)1L; }

    static final int SS_RIGHT() { return (int)2L; }

    static final int SS_ICON() { return (int)3L; }

    static final int SS_BLACKRECT() { return (int)4L; }

    static final int SS_GRAYRECT() { return (int)5L; }

    static final int SS_WHITERECT() { return (int)6L; }

    static final int SS_BLACKFRAME() { return (int)7L; }

    static final int SS_GRAYFRAME() { return (int)8L; }

    static final int SS_WHITEFRAME() { return (int)9L; }

    static final int SS_USERITEM() { return (int)10L; }

    static final int SS_SIMPLE() { return (int)11L; }

    static final int SS_LEFTNOWORDWRAP() { return (int)12L; }

    static final int SS_OWNERDRAW() { return (int)13L; }

    static final int SS_BITMAP() { return (int)14L; }

    static final int SS_ENHMETAFILE() { return (int)15L; }

    static final int SS_ETCHEDHORZ() { return (int)16L; }

    static final int SS_ETCHEDVERT() { return (int)17L; }

    static final int SS_ETCHEDFRAME() { return (int)18L; }

    static final int SS_TYPEMASK() { return (int)31L; }

    static final int SS_REALSIZECONTROL() { return (int)64L; }

    static final int SS_NOPREFIX() { return (int)128L; }

    static final int SS_NOTIFY() { return (int)256L; }

    static final int SS_CENTERIMAGE() { return (int)512L; }

    static final int SS_RIGHTJUST() { return (int)1024L; }

    static final int SS_REALSIZEIMAGE() { return (int)2048L; }

    static final int SS_SUNKEN() { return (int)4096L; }

    static final int SS_EDITCONTROL() { return (int)8192L; }

    static final int SS_ENDELLIPSIS() { return (int)16384L; }

    static final int SS_PATHELLIPSIS() { return (int)32768L; }

    static final int SS_WORDELLIPSIS() { return (int)49152L; }

    static final int SS_ELLIPSISMASK() { return (int)49152L; }

    static final MemoryAddress WC_DIALOG$ADDR_CONSTANT_ = MemoryAddress.ofLong(32770L);
    static final jdk.incubator.foreign.MemoryAddress WC_DIALOG() { return WC_DIALOG$ADDR_CONSTANT_; }

    static final long DWLP_DLGPROC() { return 8L; }

    static final long DWLP_USER() { return 16L; }

    static final int DS_ABSALIGN() { return (int)1L; }

    static final int DS_SYSMODAL() { return (int)2L; }

    static final int DS_LOCALEDIT() { return (int)32L; }

    static final int DS_SETFONT() { return (int)64L; }

    static final int DS_MODALFRAME() { return (int)128L; }

    static final int DS_NOIDLEMSG() { return (int)256L; }

    static final int DS_SETFOREGROUND() { return (int)512L; }

    static final int DS_3DLOOK() { return (int)4L; }

    static final int DS_FIXEDSYS() { return (int)8L; }

    static final int DS_NOFAILCREATE() { return (int)16L; }

    static final int DS_CONTROL() { return (int)1024L; }

    static final int DS_CENTER() { return (int)2048L; }

    static final int DS_CENTERMOUSE() { return (int)4096L; }

    static final int DS_CONTEXTHELP() { return (int)8192L; }

    static final int DS_SHELLFONT() { return (int)72L; }

    static final int DM_GETDEFID() { return (int)1024L; }

    static final int DM_SETDEFID() { return (int)1025L; }

    static final int DM_REPOSITION() { return (int)1026L; }

    static final int LB_CTLCODE() { return (int)0L; }

    static final int LB_ERR() { return (int)-1L; }

    static final int LB_ERRSPACE() { return (int)-2L; }

    static final int LBN_ERRSPACE() { return (int)-2L; }

    static final int LBS_NOTIFY() { return (int)1L; }

    static final int LBS_SORT() { return (int)2L; }

    static final int LBS_NOREDRAW() { return (int)4L; }

    static final int LBS_MULTIPLESEL() { return (int)8L; }

    static final int LBS_OWNERDRAWFIXED() { return (int)16L; }

    static final int LBS_OWNERDRAWVARIABLE() { return (int)32L; }

    static final int LBS_HASSTRINGS() { return (int)64L; }

    static final int LBS_USETABSTOPS() { return (int)128L; }

    static final int LBS_NOINTEGRALHEIGHT() { return (int)256L; }

    static final int LBS_MULTICOLUMN() { return (int)512L; }

    static final int LBS_WANTKEYBOARDINPUT() { return (int)1024L; }

    static final int LBS_EXTENDEDSEL() { return (int)2048L; }

    static final int LBS_DISABLENOSCROLL() { return (int)4096L; }

    static final int LBS_NODATA() { return (int)8192L; }

    static final int LBS_NOSEL() { return (int)16384L; }

    static final int LBS_COMBOBOX() { return (int)32768L; }

    static final int LBS_STANDARD() { return (int)10485763L; }

    static final int CB_ERR() { return (int)-1L; }

    static final int CB_ERRSPACE() { return (int)-2L; }

    static final int CBN_ERRSPACE() { return (int)-1L; }

    static final int CBS_SIMPLE() { return (int)1L; }

    static final int CBS_DROPDOWN() { return (int)2L; }

    static final int CBS_DROPDOWNLIST() { return (int)3L; }

    static final int CBS_OWNERDRAWFIXED() { return (int)16L; }

    static final int CBS_OWNERDRAWVARIABLE() { return (int)32L; }

    static final int CBS_AUTOHSCROLL() { return (int)64L; }

    static final int CBS_OEMCONVERT() { return (int)128L; }

    static final int CBS_SORT() { return (int)256L; }

    static final int CBS_HASSTRINGS() { return (int)512L; }

    static final int CBS_NOINTEGRALHEIGHT() { return (int)1024L; }

    static final int CBS_DISABLENOSCROLL() { return (int)2048L; }

    static final int CBS_UPPERCASE() { return (int)8192L; }

    static final int CBS_LOWERCASE() { return (int)16384L; }

    static final int SBS_HORZ() { return (int)0L; }

    static final int SBS_VERT() { return (int)1L; }

    static final int SBS_TOPALIGN() { return (int)2L; }

    static final int SBS_LEFTALIGN() { return (int)2L; }

    static final int SBS_BOTTOMALIGN() { return (int)4L; }

    static final int SBS_RIGHTALIGN() { return (int)4L; }

    static final int SBS_SIZEBOXTOPLEFTALIGN() { return (int)2L; }

    static final int SBS_SIZEBOXBOTTOMRIGHTALIGN() { return (int)4L; }

    static final int SBS_SIZEBOX() { return (int)8L; }

    static final int SBS_SIZEGRIP() { return (int)16L; }

    static final int SIF_ALL() { return (int)23L; }

    static final int HELP_CONTEXT() { return (int)1L; }

    static final int HELP_QUIT() { return (int)2L; }

    static final int HELP_INDEX() { return (int)3L; }

    static final int HELP_CONTENTS() { return (int)3L; }

    static final int HELP_HELPONHELP() { return (int)4L; }

}

