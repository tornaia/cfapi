// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$52 extends cfapi_h$constants$51 {

    /* package-private */ cfapi_h$constants$52() {}
    static final MemoryLayout _CPS_URLS$pDigest$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CPS_URLS$pDigest$LAYOUT() { return _CPS_URLS$pDigest$LAYOUT_; }

    static final VarHandle _CPS_URLS$pDigest$VH_ = MemoryHandles.asAddressVarHandle(_CPS_URLS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDigest")));
    static final java.lang.invoke.VarHandle _CPS_URLS$pDigest$VH() { return _CPS_URLS$pDigest$VH_; }

    static final MemoryLayout _CERT_POLICY95_QUALIFIER1$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pszPracticesReference"),
        C_POINTER.withName("pszNoticeIdentifier"),
        C_POINTER.withName("pszNSINoticeIdentifier"),
        C_LONG.withName("cCPSURLs"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgCPSURLs")
    ).withName("_CERT_POLICY95_QUALIFIER1");
    static final jdk.incubator.foreign.MemoryLayout _CERT_POLICY95_QUALIFIER1$struct$LAYOUT() { return _CERT_POLICY95_QUALIFIER1$struct$LAYOUT_; }

    static final MemoryLayout _CERT_POLICY95_QUALIFIER1$pszPracticesReference$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_POLICY95_QUALIFIER1$pszPracticesReference$LAYOUT() { return _CERT_POLICY95_QUALIFIER1$pszPracticesReference$LAYOUT_; }

    static final VarHandle _CERT_POLICY95_QUALIFIER1$pszPracticesReference$VH_ = MemoryHandles.asAddressVarHandle(_CERT_POLICY95_QUALIFIER1$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszPracticesReference")));
    static final java.lang.invoke.VarHandle _CERT_POLICY95_QUALIFIER1$pszPracticesReference$VH() { return _CERT_POLICY95_QUALIFIER1$pszPracticesReference$VH_; }

    static final MemoryLayout _CERT_POLICY95_QUALIFIER1$pszNoticeIdentifier$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_POLICY95_QUALIFIER1$pszNoticeIdentifier$LAYOUT() { return _CERT_POLICY95_QUALIFIER1$pszNoticeIdentifier$LAYOUT_; }

    static final VarHandle _CERT_POLICY95_QUALIFIER1$pszNoticeIdentifier$VH_ = MemoryHandles.asAddressVarHandle(_CERT_POLICY95_QUALIFIER1$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszNoticeIdentifier")));
    static final java.lang.invoke.VarHandle _CERT_POLICY95_QUALIFIER1$pszNoticeIdentifier$VH() { return _CERT_POLICY95_QUALIFIER1$pszNoticeIdentifier$VH_; }

    static final MemoryLayout _CERT_POLICY95_QUALIFIER1$pszNSINoticeIdentifier$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_POLICY95_QUALIFIER1$pszNSINoticeIdentifier$LAYOUT() { return _CERT_POLICY95_QUALIFIER1$pszNSINoticeIdentifier$LAYOUT_; }

    static final VarHandle _CERT_POLICY95_QUALIFIER1$pszNSINoticeIdentifier$VH_ = MemoryHandles.asAddressVarHandle(_CERT_POLICY95_QUALIFIER1$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszNSINoticeIdentifier")));
    static final java.lang.invoke.VarHandle _CERT_POLICY95_QUALIFIER1$pszNSINoticeIdentifier$VH() { return _CERT_POLICY95_QUALIFIER1$pszNSINoticeIdentifier$VH_; }

    static final MemoryLayout _CERT_POLICY95_QUALIFIER1$cCPSURLs$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_POLICY95_QUALIFIER1$cCPSURLs$LAYOUT() { return _CERT_POLICY95_QUALIFIER1$cCPSURLs$LAYOUT_; }

    static final VarHandle _CERT_POLICY95_QUALIFIER1$cCPSURLs$VH_ = _CERT_POLICY95_QUALIFIER1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cCPSURLs"));
    static final java.lang.invoke.VarHandle _CERT_POLICY95_QUALIFIER1$cCPSURLs$VH() { return _CERT_POLICY95_QUALIFIER1$cCPSURLs$VH_; }

    static final MemoryLayout _CERT_POLICY95_QUALIFIER1$rgCPSURLs$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_POLICY95_QUALIFIER1$rgCPSURLs$LAYOUT() { return _CERT_POLICY95_QUALIFIER1$rgCPSURLs$LAYOUT_; }

    static final VarHandle _CERT_POLICY95_QUALIFIER1$rgCPSURLs$VH_ = MemoryHandles.asAddressVarHandle(_CERT_POLICY95_QUALIFIER1$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgCPSURLs")));
    static final java.lang.invoke.VarHandle _CERT_POLICY95_QUALIFIER1$rgCPSURLs$VH() { return _CERT_POLICY95_QUALIFIER1$rgCPSURLs$VH_; }

    static final MemoryLayout _CERT_POLICY_MAPPING$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pszIssuerDomainPolicy"),
        C_POINTER.withName("pszSubjectDomainPolicy")
    ).withName("_CERT_POLICY_MAPPING");
    static final jdk.incubator.foreign.MemoryLayout _CERT_POLICY_MAPPING$struct$LAYOUT() { return _CERT_POLICY_MAPPING$struct$LAYOUT_; }

    static final MemoryLayout _CERT_POLICY_MAPPING$pszIssuerDomainPolicy$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_POLICY_MAPPING$pszIssuerDomainPolicy$LAYOUT() { return _CERT_POLICY_MAPPING$pszIssuerDomainPolicy$LAYOUT_; }

    static final VarHandle _CERT_POLICY_MAPPING$pszIssuerDomainPolicy$VH_ = MemoryHandles.asAddressVarHandle(_CERT_POLICY_MAPPING$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszIssuerDomainPolicy")));
    static final java.lang.invoke.VarHandle _CERT_POLICY_MAPPING$pszIssuerDomainPolicy$VH() { return _CERT_POLICY_MAPPING$pszIssuerDomainPolicy$VH_; }

    static final MemoryLayout _CERT_POLICY_MAPPING$pszSubjectDomainPolicy$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_POLICY_MAPPING$pszSubjectDomainPolicy$LAYOUT() { return _CERT_POLICY_MAPPING$pszSubjectDomainPolicy$LAYOUT_; }

    static final VarHandle _CERT_POLICY_MAPPING$pszSubjectDomainPolicy$VH_ = MemoryHandles.asAddressVarHandle(_CERT_POLICY_MAPPING$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszSubjectDomainPolicy")));
    static final java.lang.invoke.VarHandle _CERT_POLICY_MAPPING$pszSubjectDomainPolicy$VH() { return _CERT_POLICY_MAPPING$pszSubjectDomainPolicy$VH_; }

    static final MemoryLayout _CERT_POLICY_MAPPINGS_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cPolicyMapping"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgPolicyMapping")
    ).withName("_CERT_POLICY_MAPPINGS_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CERT_POLICY_MAPPINGS_INFO$struct$LAYOUT() { return _CERT_POLICY_MAPPINGS_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CERT_POLICY_MAPPINGS_INFO$cPolicyMapping$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_POLICY_MAPPINGS_INFO$cPolicyMapping$LAYOUT() { return _CERT_POLICY_MAPPINGS_INFO$cPolicyMapping$LAYOUT_; }

    static final VarHandle _CERT_POLICY_MAPPINGS_INFO$cPolicyMapping$VH_ = _CERT_POLICY_MAPPINGS_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cPolicyMapping"));
    static final java.lang.invoke.VarHandle _CERT_POLICY_MAPPINGS_INFO$cPolicyMapping$VH() { return _CERT_POLICY_MAPPINGS_INFO$cPolicyMapping$VH_; }

    static final MemoryLayout _CERT_POLICY_MAPPINGS_INFO$rgPolicyMapping$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_POLICY_MAPPINGS_INFO$rgPolicyMapping$LAYOUT() { return _CERT_POLICY_MAPPINGS_INFO$rgPolicyMapping$LAYOUT_; }

    static final VarHandle _CERT_POLICY_MAPPINGS_INFO$rgPolicyMapping$VH_ = MemoryHandles.asAddressVarHandle(_CERT_POLICY_MAPPINGS_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgPolicyMapping")));
    static final java.lang.invoke.VarHandle _CERT_POLICY_MAPPINGS_INFO$rgPolicyMapping$VH() { return _CERT_POLICY_MAPPINGS_INFO$rgPolicyMapping$VH_; }

    static final MemoryLayout _CERT_POLICY_CONSTRAINTS_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("fRequireExplicitPolicy"),
        C_LONG.withName("dwRequireExplicitPolicySkipCerts"),
        C_INT.withName("fInhibitPolicyMapping"),
        C_LONG.withName("dwInhibitPolicyMappingSkipCerts")
    ).withName("_CERT_POLICY_CONSTRAINTS_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CERT_POLICY_CONSTRAINTS_INFO$struct$LAYOUT() { return _CERT_POLICY_CONSTRAINTS_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CERT_POLICY_CONSTRAINTS_INFO$fRequireExplicitPolicy$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _CERT_POLICY_CONSTRAINTS_INFO$fRequireExplicitPolicy$LAYOUT() { return _CERT_POLICY_CONSTRAINTS_INFO$fRequireExplicitPolicy$LAYOUT_; }

    static final VarHandle _CERT_POLICY_CONSTRAINTS_INFO$fRequireExplicitPolicy$VH_ = _CERT_POLICY_CONSTRAINTS_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fRequireExplicitPolicy"));
    static final java.lang.invoke.VarHandle _CERT_POLICY_CONSTRAINTS_INFO$fRequireExplicitPolicy$VH() { return _CERT_POLICY_CONSTRAINTS_INFO$fRequireExplicitPolicy$VH_; }

    static final MemoryLayout _CERT_POLICY_CONSTRAINTS_INFO$dwRequireExplicitPolicySkipCerts$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_POLICY_CONSTRAINTS_INFO$dwRequireExplicitPolicySkipCerts$LAYOUT() { return _CERT_POLICY_CONSTRAINTS_INFO$dwRequireExplicitPolicySkipCerts$LAYOUT_; }

    static final VarHandle _CERT_POLICY_CONSTRAINTS_INFO$dwRequireExplicitPolicySkipCerts$VH_ = _CERT_POLICY_CONSTRAINTS_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRequireExplicitPolicySkipCerts"));
    static final java.lang.invoke.VarHandle _CERT_POLICY_CONSTRAINTS_INFO$dwRequireExplicitPolicySkipCerts$VH() { return _CERT_POLICY_CONSTRAINTS_INFO$dwRequireExplicitPolicySkipCerts$VH_; }

    static final MemoryLayout _CERT_POLICY_CONSTRAINTS_INFO$fInhibitPolicyMapping$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _CERT_POLICY_CONSTRAINTS_INFO$fInhibitPolicyMapping$LAYOUT() { return _CERT_POLICY_CONSTRAINTS_INFO$fInhibitPolicyMapping$LAYOUT_; }

    static final VarHandle _CERT_POLICY_CONSTRAINTS_INFO$fInhibitPolicyMapping$VH_ = _CERT_POLICY_CONSTRAINTS_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fInhibitPolicyMapping"));
    static final java.lang.invoke.VarHandle _CERT_POLICY_CONSTRAINTS_INFO$fInhibitPolicyMapping$VH() { return _CERT_POLICY_CONSTRAINTS_INFO$fInhibitPolicyMapping$VH_; }

    static final MemoryLayout _CERT_POLICY_CONSTRAINTS_INFO$dwInhibitPolicyMappingSkipCerts$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_POLICY_CONSTRAINTS_INFO$dwInhibitPolicyMappingSkipCerts$LAYOUT() { return _CERT_POLICY_CONSTRAINTS_INFO$dwInhibitPolicyMappingSkipCerts$LAYOUT_; }

    static final VarHandle _CERT_POLICY_CONSTRAINTS_INFO$dwInhibitPolicyMappingSkipCerts$VH_ = _CERT_POLICY_CONSTRAINTS_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwInhibitPolicyMappingSkipCerts"));
    static final java.lang.invoke.VarHandle _CERT_POLICY_CONSTRAINTS_INFO$dwInhibitPolicyMappingSkipCerts$VH() { return _CERT_POLICY_CONSTRAINTS_INFO$dwInhibitPolicyMappingSkipCerts$VH_; }

    static final MemoryLayout _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pszObjId"),
        C_LONG.withName("cValue"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgValue")
    ).withName("_CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$struct$LAYOUT() { return _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$pszObjId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$pszObjId$LAYOUT() { return _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$pszObjId$LAYOUT_; }

    static final VarHandle _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$pszObjId$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszObjId")));
    static final java.lang.invoke.VarHandle _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$pszObjId$VH() { return _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$pszObjId$VH_; }

    static final MemoryLayout _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$cValue$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$cValue$LAYOUT() { return _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$cValue$LAYOUT_; }

    static final VarHandle _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$cValue$VH_ = _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cValue"));
    static final java.lang.invoke.VarHandle _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$cValue$VH() { return _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$cValue$VH_; }

    static final MemoryLayout _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$rgValue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$rgValue$LAYOUT() { return _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$rgValue$LAYOUT_; }

    static final VarHandle _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$rgValue$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgValue")));
    static final java.lang.invoke.VarHandle _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$rgValue$VH() { return _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY$rgValue$VH_; }

    static final MemoryLayout _CRYPT_CONTENT_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pszObjId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("Content")
    ).withName("_CRYPT_CONTENT_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_CONTENT_INFO$struct$LAYOUT() { return _CRYPT_CONTENT_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_CONTENT_INFO$pszObjId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_CONTENT_INFO$pszObjId$LAYOUT() { return _CRYPT_CONTENT_INFO$pszObjId$LAYOUT_; }

    static final VarHandle _CRYPT_CONTENT_INFO$pszObjId$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_CONTENT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszObjId")));
    static final java.lang.invoke.VarHandle _CRYPT_CONTENT_INFO$pszObjId$VH() { return _CRYPT_CONTENT_INFO$pszObjId$VH_; }

    static final MemoryLayout _CRYPT_SEQUENCE_OF_ANY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cValue"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgValue")
    ).withName("_CRYPT_SEQUENCE_OF_ANY");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_SEQUENCE_OF_ANY$struct$LAYOUT() { return _CRYPT_SEQUENCE_OF_ANY$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_SEQUENCE_OF_ANY$cValue$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_SEQUENCE_OF_ANY$cValue$LAYOUT() { return _CRYPT_SEQUENCE_OF_ANY$cValue$LAYOUT_; }

    static final VarHandle _CRYPT_SEQUENCE_OF_ANY$cValue$VH_ = _CRYPT_SEQUENCE_OF_ANY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cValue"));
    static final java.lang.invoke.VarHandle _CRYPT_SEQUENCE_OF_ANY$cValue$VH() { return _CRYPT_SEQUENCE_OF_ANY$cValue$VH_; }

    static final MemoryLayout _CRYPT_SEQUENCE_OF_ANY$rgValue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_SEQUENCE_OF_ANY$rgValue$LAYOUT() { return _CRYPT_SEQUENCE_OF_ANY$rgValue$LAYOUT_; }

    static final VarHandle _CRYPT_SEQUENCE_OF_ANY$rgValue$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_SEQUENCE_OF_ANY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgValue")));
    static final java.lang.invoke.VarHandle _CRYPT_SEQUENCE_OF_ANY$rgValue$VH() { return _CRYPT_SEQUENCE_OF_ANY$rgValue$VH_; }

    static final MemoryLayout _CERT_AUTHORITY_KEY_ID2_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("KeyId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cAltEntry"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("rgAltEntry")
        ).withName("AuthorityCertIssuer"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("AuthorityCertSerialNumber")
    ).withName("_CERT_AUTHORITY_KEY_ID2_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CERT_AUTHORITY_KEY_ID2_INFO$struct$LAYOUT() { return _CERT_AUTHORITY_KEY_ID2_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CERT_ACCESS_DESCRIPTION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pszAccessMethod"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwAltNameChoice"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pOtherName"),
            C_POINTER.withName("pwszRfc822Name"),
            C_POINTER.withName("pwszDNSName"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("DirectoryName"),
            C_POINTER.withName("pwszURL"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("IPAddress"),
            C_POINTER.withName("pszRegisteredID")
        ).withName("AccessLocation")
    ).withName("_CERT_ACCESS_DESCRIPTION");
    static final jdk.incubator.foreign.MemoryLayout _CERT_ACCESS_DESCRIPTION$struct$LAYOUT() { return _CERT_ACCESS_DESCRIPTION$struct$LAYOUT_; }

    static final MemoryLayout _CERT_ACCESS_DESCRIPTION$pszAccessMethod$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_ACCESS_DESCRIPTION$pszAccessMethod$LAYOUT() { return _CERT_ACCESS_DESCRIPTION$pszAccessMethod$LAYOUT_; }

    static final VarHandle _CERT_ACCESS_DESCRIPTION$pszAccessMethod$VH_ = MemoryHandles.asAddressVarHandle(_CERT_ACCESS_DESCRIPTION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszAccessMethod")));
    static final java.lang.invoke.VarHandle _CERT_ACCESS_DESCRIPTION$pszAccessMethod$VH() { return _CERT_ACCESS_DESCRIPTION$pszAccessMethod$VH_; }

    static final MemoryLayout _CERT_AUTHORITY_INFO_ACCESS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cAccDescr"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgAccDescr")
    ).withName("_CERT_AUTHORITY_INFO_ACCESS");
    static final jdk.incubator.foreign.MemoryLayout _CERT_AUTHORITY_INFO_ACCESS$struct$LAYOUT() { return _CERT_AUTHORITY_INFO_ACCESS$struct$LAYOUT_; }

    static final MemoryLayout _CERT_AUTHORITY_INFO_ACCESS$cAccDescr$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_AUTHORITY_INFO_ACCESS$cAccDescr$LAYOUT() { return _CERT_AUTHORITY_INFO_ACCESS$cAccDescr$LAYOUT_; }

    static final VarHandle _CERT_AUTHORITY_INFO_ACCESS$cAccDescr$VH_ = _CERT_AUTHORITY_INFO_ACCESS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cAccDescr"));
    static final java.lang.invoke.VarHandle _CERT_AUTHORITY_INFO_ACCESS$cAccDescr$VH() { return _CERT_AUTHORITY_INFO_ACCESS$cAccDescr$VH_; }

    static final MemoryLayout _CERT_AUTHORITY_INFO_ACCESS$rgAccDescr$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_AUTHORITY_INFO_ACCESS$rgAccDescr$LAYOUT() { return _CERT_AUTHORITY_INFO_ACCESS$rgAccDescr$LAYOUT_; }

    static final VarHandle _CERT_AUTHORITY_INFO_ACCESS$rgAccDescr$VH_ = MemoryHandles.asAddressVarHandle(_CERT_AUTHORITY_INFO_ACCESS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgAccDescr")));
    static final java.lang.invoke.VarHandle _CERT_AUTHORITY_INFO_ACCESS$rgAccDescr$VH() { return _CERT_AUTHORITY_INFO_ACCESS$rgAccDescr$VH_; }

    static final MemoryLayout _CRL_DIST_POINT_NAME$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwDistPointNameChoice"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_LONG.withName("cAltEntry"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("rgAltEntry")
        ).withName("FullName")
    ).withName("_CRL_DIST_POINT_NAME");
    static final jdk.incubator.foreign.MemoryLayout _CRL_DIST_POINT_NAME$struct$LAYOUT() { return _CRL_DIST_POINT_NAME$struct$LAYOUT_; }

    static final MemoryLayout _CRL_DIST_POINT_NAME$dwDistPointNameChoice$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRL_DIST_POINT_NAME$dwDistPointNameChoice$LAYOUT() { return _CRL_DIST_POINT_NAME$dwDistPointNameChoice$LAYOUT_; }

    static final VarHandle _CRL_DIST_POINT_NAME$dwDistPointNameChoice$VH_ = _CRL_DIST_POINT_NAME$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwDistPointNameChoice"));
    static final java.lang.invoke.VarHandle _CRL_DIST_POINT_NAME$dwDistPointNameChoice$VH() { return _CRL_DIST_POINT_NAME$dwDistPointNameChoice$VH_; }

    static final MemoryLayout _CRL_DIST_POINT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("dwDistPointNameChoice"),
            MemoryLayout.ofPaddingBits(32),
            MemoryLayout.ofStruct(
                C_LONG.withName("cAltEntry"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("rgAltEntry")
            ).withName("FullName")
        ).withName("DistPointName"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData"),
            C_LONG.withName("cUnusedBits"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("ReasonFlags"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cAltEntry"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("rgAltEntry")
        ).withName("CRLIssuer")
    ).withName("_CRL_DIST_POINT");
    static final jdk.incubator.foreign.MemoryLayout _CRL_DIST_POINT$struct$LAYOUT() { return _CRL_DIST_POINT$struct$LAYOUT_; }

    static final MemoryLayout _CRL_DIST_POINTS_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cDistPoint"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgDistPoint")
    ).withName("_CRL_DIST_POINTS_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CRL_DIST_POINTS_INFO$struct$LAYOUT() { return _CRL_DIST_POINTS_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CRL_DIST_POINTS_INFO$cDistPoint$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRL_DIST_POINTS_INFO$cDistPoint$LAYOUT() { return _CRL_DIST_POINTS_INFO$cDistPoint$LAYOUT_; }

    static final VarHandle _CRL_DIST_POINTS_INFO$cDistPoint$VH_ = _CRL_DIST_POINTS_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cDistPoint"));
    static final java.lang.invoke.VarHandle _CRL_DIST_POINTS_INFO$cDistPoint$VH() { return _CRL_DIST_POINTS_INFO$cDistPoint$VH_; }

    static final MemoryLayout _CRL_DIST_POINTS_INFO$rgDistPoint$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRL_DIST_POINTS_INFO$rgDistPoint$LAYOUT() { return _CRL_DIST_POINTS_INFO$rgDistPoint$LAYOUT_; }

    static final VarHandle _CRL_DIST_POINTS_INFO$rgDistPoint$VH_ = MemoryHandles.asAddressVarHandle(_CRL_DIST_POINTS_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgDistPoint")));
    static final java.lang.invoke.VarHandle _CRL_DIST_POINTS_INFO$rgDistPoint$VH() { return _CRL_DIST_POINTS_INFO$rgDistPoint$VH_; }

    static final MemoryLayout _CROSS_CERT_DIST_POINTS_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwSyncDeltaTime"),
        C_LONG.withName("cDistPoint"),
        C_POINTER.withName("rgDistPoint")
    ).withName("_CROSS_CERT_DIST_POINTS_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CROSS_CERT_DIST_POINTS_INFO$struct$LAYOUT() { return _CROSS_CERT_DIST_POINTS_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CROSS_CERT_DIST_POINTS_INFO$dwSyncDeltaTime$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CROSS_CERT_DIST_POINTS_INFO$dwSyncDeltaTime$LAYOUT() { return _CROSS_CERT_DIST_POINTS_INFO$dwSyncDeltaTime$LAYOUT_; }

    static final VarHandle _CROSS_CERT_DIST_POINTS_INFO$dwSyncDeltaTime$VH_ = _CROSS_CERT_DIST_POINTS_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSyncDeltaTime"));
    static final java.lang.invoke.VarHandle _CROSS_CERT_DIST_POINTS_INFO$dwSyncDeltaTime$VH() { return _CROSS_CERT_DIST_POINTS_INFO$dwSyncDeltaTime$VH_; }

    static final MemoryLayout _CROSS_CERT_DIST_POINTS_INFO$cDistPoint$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CROSS_CERT_DIST_POINTS_INFO$cDistPoint$LAYOUT() { return _CROSS_CERT_DIST_POINTS_INFO$cDistPoint$LAYOUT_; }

    static final VarHandle _CROSS_CERT_DIST_POINTS_INFO$cDistPoint$VH_ = _CROSS_CERT_DIST_POINTS_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cDistPoint"));
    static final java.lang.invoke.VarHandle _CROSS_CERT_DIST_POINTS_INFO$cDistPoint$VH() { return _CROSS_CERT_DIST_POINTS_INFO$cDistPoint$VH_; }

    static final MemoryLayout _CROSS_CERT_DIST_POINTS_INFO$rgDistPoint$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CROSS_CERT_DIST_POINTS_INFO$rgDistPoint$LAYOUT() { return _CROSS_CERT_DIST_POINTS_INFO$rgDistPoint$LAYOUT_; }

    static final VarHandle _CROSS_CERT_DIST_POINTS_INFO$rgDistPoint$VH_ = MemoryHandles.asAddressVarHandle(_CROSS_CERT_DIST_POINTS_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgDistPoint")));
    static final java.lang.invoke.VarHandle _CROSS_CERT_DIST_POINTS_INFO$rgDistPoint$VH() { return _CROSS_CERT_DIST_POINTS_INFO$rgDistPoint$VH_; }

    static final MemoryLayout _CERT_PAIR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("Forward"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("Reverse")
    ).withName("_CERT_PAIR");
    static final jdk.incubator.foreign.MemoryLayout _CERT_PAIR$struct$LAYOUT() { return _CERT_PAIR$struct$LAYOUT_; }

    static final MemoryLayout _CRL_ISSUING_DIST_POINT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("dwDistPointNameChoice"),
            MemoryLayout.ofPaddingBits(32),
            MemoryLayout.ofStruct(
                C_LONG.withName("cAltEntry"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("rgAltEntry")
            ).withName("FullName")
        ).withName("DistPointName"),
        C_INT.withName("fOnlyContainsUserCerts"),
        C_INT.withName("fOnlyContainsCACerts"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData"),
            C_LONG.withName("cUnusedBits"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("OnlySomeReasonFlags"),
        C_INT.withName("fIndirectCRL"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CRL_ISSUING_DIST_POINT");
    static final jdk.incubator.foreign.MemoryLayout _CRL_ISSUING_DIST_POINT$struct$LAYOUT() { return _CRL_ISSUING_DIST_POINT$struct$LAYOUT_; }

    static final MemoryLayout _CRL_ISSUING_DIST_POINT$fOnlyContainsUserCerts$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _CRL_ISSUING_DIST_POINT$fOnlyContainsUserCerts$LAYOUT() { return _CRL_ISSUING_DIST_POINT$fOnlyContainsUserCerts$LAYOUT_; }

    static final VarHandle _CRL_ISSUING_DIST_POINT$fOnlyContainsUserCerts$VH_ = _CRL_ISSUING_DIST_POINT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fOnlyContainsUserCerts"));
    static final java.lang.invoke.VarHandle _CRL_ISSUING_DIST_POINT$fOnlyContainsUserCerts$VH() { return _CRL_ISSUING_DIST_POINT$fOnlyContainsUserCerts$VH_; }

    static final MemoryLayout _CRL_ISSUING_DIST_POINT$fOnlyContainsCACerts$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _CRL_ISSUING_DIST_POINT$fOnlyContainsCACerts$LAYOUT() { return _CRL_ISSUING_DIST_POINT$fOnlyContainsCACerts$LAYOUT_; }

    static final VarHandle _CRL_ISSUING_DIST_POINT$fOnlyContainsCACerts$VH_ = _CRL_ISSUING_DIST_POINT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fOnlyContainsCACerts"));
    static final java.lang.invoke.VarHandle _CRL_ISSUING_DIST_POINT$fOnlyContainsCACerts$VH() { return _CRL_ISSUING_DIST_POINT$fOnlyContainsCACerts$VH_; }

    static final MemoryLayout _CRL_ISSUING_DIST_POINT$fIndirectCRL$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _CRL_ISSUING_DIST_POINT$fIndirectCRL$LAYOUT() { return _CRL_ISSUING_DIST_POINT$fIndirectCRL$LAYOUT_; }

    static final VarHandle _CRL_ISSUING_DIST_POINT$fIndirectCRL$VH_ = _CRL_ISSUING_DIST_POINT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fIndirectCRL"));
    static final java.lang.invoke.VarHandle _CRL_ISSUING_DIST_POINT$fIndirectCRL$VH() { return _CRL_ISSUING_DIST_POINT$fIndirectCRL$VH_; }

    static final MemoryLayout _CERT_GENERAL_SUBTREE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("dwAltNameChoice"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pOtherName"),
            C_POINTER.withName("pwszRfc822Name"),
            C_POINTER.withName("pwszDNSName"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("DirectoryName"),
            C_POINTER.withName("pwszURL"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("IPAddress"),
            C_POINTER.withName("pszRegisteredID")
        ).withName("Base"),
        C_LONG.withName("dwMinimum"),
        C_INT.withName("fMaximum"),
        C_LONG.withName("dwMaximum"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CERT_GENERAL_SUBTREE");
    static final jdk.incubator.foreign.MemoryLayout _CERT_GENERAL_SUBTREE$struct$LAYOUT() { return _CERT_GENERAL_SUBTREE$struct$LAYOUT_; }

    static final MemoryLayout _CERT_GENERAL_SUBTREE$dwMinimum$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_GENERAL_SUBTREE$dwMinimum$LAYOUT() { return _CERT_GENERAL_SUBTREE$dwMinimum$LAYOUT_; }

    static final VarHandle _CERT_GENERAL_SUBTREE$dwMinimum$VH_ = _CERT_GENERAL_SUBTREE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwMinimum"));
    static final java.lang.invoke.VarHandle _CERT_GENERAL_SUBTREE$dwMinimum$VH() { return _CERT_GENERAL_SUBTREE$dwMinimum$VH_; }

    static final MemoryLayout _CERT_GENERAL_SUBTREE$fMaximum$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _CERT_GENERAL_SUBTREE$fMaximum$LAYOUT() { return _CERT_GENERAL_SUBTREE$fMaximum$LAYOUT_; }

    static final VarHandle _CERT_GENERAL_SUBTREE$fMaximum$VH_ = _CERT_GENERAL_SUBTREE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fMaximum"));
    static final java.lang.invoke.VarHandle _CERT_GENERAL_SUBTREE$fMaximum$VH() { return _CERT_GENERAL_SUBTREE$fMaximum$VH_; }

    static final MemoryLayout _CERT_GENERAL_SUBTREE$dwMaximum$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_GENERAL_SUBTREE$dwMaximum$LAYOUT() { return _CERT_GENERAL_SUBTREE$dwMaximum$LAYOUT_; }

    static final VarHandle _CERT_GENERAL_SUBTREE$dwMaximum$VH_ = _CERT_GENERAL_SUBTREE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwMaximum"));
    static final java.lang.invoke.VarHandle _CERT_GENERAL_SUBTREE$dwMaximum$VH() { return _CERT_GENERAL_SUBTREE$dwMaximum$VH_; }

    static final MemoryLayout _CERT_NAME_CONSTRAINTS_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cPermittedSubtree"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgPermittedSubtree"),
        C_LONG.withName("cExcludedSubtree"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgExcludedSubtree")
    ).withName("_CERT_NAME_CONSTRAINTS_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CERT_NAME_CONSTRAINTS_INFO$struct$LAYOUT() { return _CERT_NAME_CONSTRAINTS_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CERT_NAME_CONSTRAINTS_INFO$cPermittedSubtree$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_NAME_CONSTRAINTS_INFO$cPermittedSubtree$LAYOUT() { return _CERT_NAME_CONSTRAINTS_INFO$cPermittedSubtree$LAYOUT_; }

    static final VarHandle _CERT_NAME_CONSTRAINTS_INFO$cPermittedSubtree$VH_ = _CERT_NAME_CONSTRAINTS_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cPermittedSubtree"));
    static final java.lang.invoke.VarHandle _CERT_NAME_CONSTRAINTS_INFO$cPermittedSubtree$VH() { return _CERT_NAME_CONSTRAINTS_INFO$cPermittedSubtree$VH_; }

    static final MemoryLayout _CERT_NAME_CONSTRAINTS_INFO$rgPermittedSubtree$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_NAME_CONSTRAINTS_INFO$rgPermittedSubtree$LAYOUT() { return _CERT_NAME_CONSTRAINTS_INFO$rgPermittedSubtree$LAYOUT_; }

    static final VarHandle _CERT_NAME_CONSTRAINTS_INFO$rgPermittedSubtree$VH_ = MemoryHandles.asAddressVarHandle(_CERT_NAME_CONSTRAINTS_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgPermittedSubtree")));
    static final java.lang.invoke.VarHandle _CERT_NAME_CONSTRAINTS_INFO$rgPermittedSubtree$VH() { return _CERT_NAME_CONSTRAINTS_INFO$rgPermittedSubtree$VH_; }

    static final MemoryLayout _CERT_NAME_CONSTRAINTS_INFO$cExcludedSubtree$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_NAME_CONSTRAINTS_INFO$cExcludedSubtree$LAYOUT() { return _CERT_NAME_CONSTRAINTS_INFO$cExcludedSubtree$LAYOUT_; }

    static final VarHandle _CERT_NAME_CONSTRAINTS_INFO$cExcludedSubtree$VH_ = _CERT_NAME_CONSTRAINTS_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cExcludedSubtree"));
    static final java.lang.invoke.VarHandle _CERT_NAME_CONSTRAINTS_INFO$cExcludedSubtree$VH() { return _CERT_NAME_CONSTRAINTS_INFO$cExcludedSubtree$VH_; }

    static final MemoryLayout _CERT_NAME_CONSTRAINTS_INFO$rgExcludedSubtree$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_NAME_CONSTRAINTS_INFO$rgExcludedSubtree$LAYOUT() { return _CERT_NAME_CONSTRAINTS_INFO$rgExcludedSubtree$LAYOUT_; }

    static final VarHandle _CERT_NAME_CONSTRAINTS_INFO$rgExcludedSubtree$VH_ = MemoryHandles.asAddressVarHandle(_CERT_NAME_CONSTRAINTS_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgExcludedSubtree")));
    static final java.lang.invoke.VarHandle _CERT_NAME_CONSTRAINTS_INFO$rgExcludedSubtree$VH() { return _CERT_NAME_CONSTRAINTS_INFO$rgExcludedSubtree$VH_; }

    static final MemoryLayout _CERT_DSS_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("p"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("q"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("g")
    ).withName("_CERT_DSS_PARAMETERS");
    static final jdk.incubator.foreign.MemoryLayout _CERT_DSS_PARAMETERS$struct$LAYOUT() { return _CERT_DSS_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _CERT_DH_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("p"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("g")
    ).withName("_CERT_DH_PARAMETERS");
    static final jdk.incubator.foreign.MemoryLayout _CERT_DH_PARAMETERS$struct$LAYOUT() { return _CERT_DH_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _CERT_ECC_SIGNATURE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("r"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("s")
    ).withName("_CERT_ECC_SIGNATURE");
    static final jdk.incubator.foreign.MemoryLayout _CERT_ECC_SIGNATURE$struct$LAYOUT() { return _CERT_ECC_SIGNATURE$struct$LAYOUT_; }

    static final MemoryLayout _CERT_X942_DH_VALIDATION_PARAMS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData"),
            C_LONG.withName("cUnusedBits"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("seed"),
        C_LONG.withName("pgenCounter"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CERT_X942_DH_VALIDATION_PARAMS");
    static final jdk.incubator.foreign.MemoryLayout _CERT_X942_DH_VALIDATION_PARAMS$struct$LAYOUT() { return _CERT_X942_DH_VALIDATION_PARAMS$struct$LAYOUT_; }

    static final MemoryLayout _CERT_X942_DH_VALIDATION_PARAMS$pgenCounter$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_X942_DH_VALIDATION_PARAMS$pgenCounter$LAYOUT() { return _CERT_X942_DH_VALIDATION_PARAMS$pgenCounter$LAYOUT_; }

    static final VarHandle _CERT_X942_DH_VALIDATION_PARAMS$pgenCounter$VH_ = _CERT_X942_DH_VALIDATION_PARAMS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("pgenCounter"));
    static final java.lang.invoke.VarHandle _CERT_X942_DH_VALIDATION_PARAMS$pgenCounter$VH() { return _CERT_X942_DH_VALIDATION_PARAMS$pgenCounter$VH_; }

    static final MemoryLayout _CERT_X942_DH_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("p"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("g"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("q"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("j"),
        C_POINTER.withName("pValidationParams")
    ).withName("_CERT_X942_DH_PARAMETERS");
    static final jdk.incubator.foreign.MemoryLayout _CERT_X942_DH_PARAMETERS$struct$LAYOUT() { return _CERT_X942_DH_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _CERT_X942_DH_PARAMETERS$pValidationParams$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_X942_DH_PARAMETERS$pValidationParams$LAYOUT() { return _CERT_X942_DH_PARAMETERS$pValidationParams$LAYOUT_; }

    static final VarHandle _CERT_X942_DH_PARAMETERS$pValidationParams$VH_ = MemoryHandles.asAddressVarHandle(_CERT_X942_DH_PARAMETERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pValidationParams")));
    static final java.lang.invoke.VarHandle _CERT_X942_DH_PARAMETERS$pValidationParams$VH() { return _CERT_X942_DH_PARAMETERS$pValidationParams$VH_; }

    static final MemoryLayout _CRYPT_X942_OTHER_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pszContentEncryptionObjId"),
        MemoryLayout.ofSequence(4, C_CHAR).withName("rgbCounter"),
        MemoryLayout.ofSequence(4, C_CHAR).withName("rgbKeyLength"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("PubInfo")
    ).withName("_CRYPT_X942_OTHER_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_X942_OTHER_INFO$struct$LAYOUT() { return _CRYPT_X942_OTHER_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_X942_OTHER_INFO$pszContentEncryptionObjId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_X942_OTHER_INFO$pszContentEncryptionObjId$LAYOUT() { return _CRYPT_X942_OTHER_INFO$pszContentEncryptionObjId$LAYOUT_; }

    static final VarHandle _CRYPT_X942_OTHER_INFO$pszContentEncryptionObjId$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_X942_OTHER_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszContentEncryptionObjId")));
    static final java.lang.invoke.VarHandle _CRYPT_X942_OTHER_INFO$pszContentEncryptionObjId$VH() { return _CRYPT_X942_OTHER_INFO$pszContentEncryptionObjId$VH_; }

    static final MemoryLayout _CRYPT_ECC_CMS_SHARED_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("Algorithm"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("EntityUInfo"),
        MemoryLayout.ofSequence(4, C_CHAR).withName("rgbSuppPubInfo"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CRYPT_ECC_CMS_SHARED_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_ECC_CMS_SHARED_INFO$struct$LAYOUT() { return _CRYPT_ECC_CMS_SHARED_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_RC2_CBC_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwVersion"),
        C_INT.withName("fIV"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("rgbIV")
    ).withName("_CRYPT_RC2_CBC_PARAMETERS");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RC2_CBC_PARAMETERS$struct$LAYOUT() { return _CRYPT_RC2_CBC_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_RC2_CBC_PARAMETERS$dwVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RC2_CBC_PARAMETERS$dwVersion$LAYOUT() { return _CRYPT_RC2_CBC_PARAMETERS$dwVersion$LAYOUT_; }

    static final VarHandle _CRYPT_RC2_CBC_PARAMETERS$dwVersion$VH_ = _CRYPT_RC2_CBC_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersion"));
    static final java.lang.invoke.VarHandle _CRYPT_RC2_CBC_PARAMETERS$dwVersion$VH() { return _CRYPT_RC2_CBC_PARAMETERS$dwVersion$VH_; }

    static final MemoryLayout _CRYPT_RC2_CBC_PARAMETERS$fIV$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RC2_CBC_PARAMETERS$fIV$LAYOUT() { return _CRYPT_RC2_CBC_PARAMETERS$fIV$LAYOUT_; }

    static final VarHandle _CRYPT_RC2_CBC_PARAMETERS$fIV$VH_ = _CRYPT_RC2_CBC_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fIV"));
    static final java.lang.invoke.VarHandle _CRYPT_RC2_CBC_PARAMETERS$fIV$VH() { return _CRYPT_RC2_CBC_PARAMETERS$fIV$VH_; }

    static final MemoryLayout _CRYPT_SMIME_CAPABILITY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pszObjId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("Parameters")
    ).withName("_CRYPT_SMIME_CAPABILITY");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_SMIME_CAPABILITY$struct$LAYOUT() { return _CRYPT_SMIME_CAPABILITY$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_SMIME_CAPABILITY$pszObjId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_SMIME_CAPABILITY$pszObjId$LAYOUT() { return _CRYPT_SMIME_CAPABILITY$pszObjId$LAYOUT_; }

    static final VarHandle _CRYPT_SMIME_CAPABILITY$pszObjId$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_SMIME_CAPABILITY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszObjId")));
    static final java.lang.invoke.VarHandle _CRYPT_SMIME_CAPABILITY$pszObjId$VH() { return _CRYPT_SMIME_CAPABILITY$pszObjId$VH_; }

    static final MemoryLayout _CRYPT_SMIME_CAPABILITIES$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cCapability"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgCapability")
    ).withName("_CRYPT_SMIME_CAPABILITIES");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_SMIME_CAPABILITIES$struct$LAYOUT() { return _CRYPT_SMIME_CAPABILITIES$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_SMIME_CAPABILITIES$cCapability$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_SMIME_CAPABILITIES$cCapability$LAYOUT() { return _CRYPT_SMIME_CAPABILITIES$cCapability$LAYOUT_; }

    static final VarHandle _CRYPT_SMIME_CAPABILITIES$cCapability$VH_ = _CRYPT_SMIME_CAPABILITIES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cCapability"));
    static final java.lang.invoke.VarHandle _CRYPT_SMIME_CAPABILITIES$cCapability$VH() { return _CRYPT_SMIME_CAPABILITIES$cCapability$VH_; }

    static final MemoryLayout _CRYPT_SMIME_CAPABILITIES$rgCapability$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_SMIME_CAPABILITIES$rgCapability$LAYOUT() { return _CRYPT_SMIME_CAPABILITIES$rgCapability$LAYOUT_; }

    static final VarHandle _CRYPT_SMIME_CAPABILITIES$rgCapability$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_SMIME_CAPABILITIES$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgCapability")));
    static final java.lang.invoke.VarHandle _CRYPT_SMIME_CAPABILITIES$rgCapability$VH() { return _CRYPT_SMIME_CAPABILITIES$rgCapability$VH_; }

    static final MemoryLayout _CERT_QC_STATEMENT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pszStatementId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("StatementInfo")
    ).withName("_CERT_QC_STATEMENT");
    static final jdk.incubator.foreign.MemoryLayout _CERT_QC_STATEMENT$struct$LAYOUT() { return _CERT_QC_STATEMENT$struct$LAYOUT_; }

    static final MemoryLayout _CERT_QC_STATEMENT$pszStatementId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_QC_STATEMENT$pszStatementId$LAYOUT() { return _CERT_QC_STATEMENT$pszStatementId$LAYOUT_; }

    static final VarHandle _CERT_QC_STATEMENT$pszStatementId$VH_ = MemoryHandles.asAddressVarHandle(_CERT_QC_STATEMENT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszStatementId")));
    static final java.lang.invoke.VarHandle _CERT_QC_STATEMENT$pszStatementId$VH() { return _CERT_QC_STATEMENT$pszStatementId$VH_; }

    static final MemoryLayout _CERT_QC_STATEMENTS_EXT_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cStatement"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgStatement")
    ).withName("_CERT_QC_STATEMENTS_EXT_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CERT_QC_STATEMENTS_EXT_INFO$struct$LAYOUT() { return _CERT_QC_STATEMENTS_EXT_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CERT_QC_STATEMENTS_EXT_INFO$cStatement$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_QC_STATEMENTS_EXT_INFO$cStatement$LAYOUT() { return _CERT_QC_STATEMENTS_EXT_INFO$cStatement$LAYOUT_; }

    static final VarHandle _CERT_QC_STATEMENTS_EXT_INFO$cStatement$VH_ = _CERT_QC_STATEMENTS_EXT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cStatement"));
    static final java.lang.invoke.VarHandle _CERT_QC_STATEMENTS_EXT_INFO$cStatement$VH() { return _CERT_QC_STATEMENTS_EXT_INFO$cStatement$VH_; }

    static final MemoryLayout _CERT_QC_STATEMENTS_EXT_INFO$rgStatement$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_QC_STATEMENTS_EXT_INFO$rgStatement$LAYOUT() { return _CERT_QC_STATEMENTS_EXT_INFO$rgStatement$LAYOUT_; }

    static final VarHandle _CERT_QC_STATEMENTS_EXT_INFO$rgStatement$VH_ = MemoryHandles.asAddressVarHandle(_CERT_QC_STATEMENTS_EXT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgStatement")));
    static final java.lang.invoke.VarHandle _CERT_QC_STATEMENTS_EXT_INFO$rgStatement$VH() { return _CERT_QC_STATEMENTS_EXT_INFO$rgStatement$VH_; }

    static final MemoryLayout _CRYPT_MASK_GEN_ALGORITHM$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pszObjId"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("HashAlgorithm")
    ).withName("_CRYPT_MASK_GEN_ALGORITHM");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_MASK_GEN_ALGORITHM$struct$LAYOUT() { return _CRYPT_MASK_GEN_ALGORITHM$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_MASK_GEN_ALGORITHM$pszObjId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_MASK_GEN_ALGORITHM$pszObjId$LAYOUT() { return _CRYPT_MASK_GEN_ALGORITHM$pszObjId$LAYOUT_; }

    static final VarHandle _CRYPT_MASK_GEN_ALGORITHM$pszObjId$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_MASK_GEN_ALGORITHM$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszObjId")));
    static final java.lang.invoke.VarHandle _CRYPT_MASK_GEN_ALGORITHM$pszObjId$VH() { return _CRYPT_MASK_GEN_ALGORITHM$pszObjId$VH_; }

    static final MemoryLayout _CRYPT_RSA_SSA_PSS_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("HashAlgorithm"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_POINTER.withName("pszObjId"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("Parameters")
            ).withName("HashAlgorithm")
        ).withName("MaskGenAlgorithm"),
        C_LONG.withName("dwSaltLength"),
        C_LONG.withName("dwTrailerField")
    ).withName("_CRYPT_RSA_SSA_PSS_PARAMETERS");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RSA_SSA_PSS_PARAMETERS$struct$LAYOUT() { return _CRYPT_RSA_SSA_PSS_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_RSA_SSA_PSS_PARAMETERS$dwSaltLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RSA_SSA_PSS_PARAMETERS$dwSaltLength$LAYOUT() { return _CRYPT_RSA_SSA_PSS_PARAMETERS$dwSaltLength$LAYOUT_; }

    static final VarHandle _CRYPT_RSA_SSA_PSS_PARAMETERS$dwSaltLength$VH_ = _CRYPT_RSA_SSA_PSS_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSaltLength"));
    static final java.lang.invoke.VarHandle _CRYPT_RSA_SSA_PSS_PARAMETERS$dwSaltLength$VH() { return _CRYPT_RSA_SSA_PSS_PARAMETERS$dwSaltLength$VH_; }

    static final MemoryLayout _CRYPT_RSA_SSA_PSS_PARAMETERS$dwTrailerField$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RSA_SSA_PSS_PARAMETERS$dwTrailerField$LAYOUT() { return _CRYPT_RSA_SSA_PSS_PARAMETERS$dwTrailerField$LAYOUT_; }

    static final VarHandle _CRYPT_RSA_SSA_PSS_PARAMETERS$dwTrailerField$VH_ = _CRYPT_RSA_SSA_PSS_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwTrailerField"));
    static final java.lang.invoke.VarHandle _CRYPT_RSA_SSA_PSS_PARAMETERS$dwTrailerField$VH() { return _CRYPT_RSA_SSA_PSS_PARAMETERS$dwTrailerField$VH_; }

    static final MemoryLayout _CRYPT_PSOURCE_ALGORITHM$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pszObjId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("EncodingParameters")
    ).withName("_CRYPT_PSOURCE_ALGORITHM");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_PSOURCE_ALGORITHM$struct$LAYOUT() { return _CRYPT_PSOURCE_ALGORITHM$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_PSOURCE_ALGORITHM$pszObjId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_PSOURCE_ALGORITHM$pszObjId$LAYOUT() { return _CRYPT_PSOURCE_ALGORITHM$pszObjId$LAYOUT_; }

    static final VarHandle _CRYPT_PSOURCE_ALGORITHM$pszObjId$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_PSOURCE_ALGORITHM$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszObjId")));
    static final java.lang.invoke.VarHandle _CRYPT_PSOURCE_ALGORITHM$pszObjId$VH() { return _CRYPT_PSOURCE_ALGORITHM$pszObjId$VH_; }

    static final MemoryLayout _CRYPT_RSAES_OAEP_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("HashAlgorithm"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_POINTER.withName("pszObjId"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("Parameters")
            ).withName("HashAlgorithm")
        ).withName("MaskGenAlgorithm"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("EncodingParameters")
        ).withName("PSourceAlgorithm")
    ).withName("_CRYPT_RSAES_OAEP_PARAMETERS");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RSAES_OAEP_PARAMETERS$struct$LAYOUT() { return _CRYPT_RSAES_OAEP_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _CMC_TAGGED_ATTRIBUTE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwBodyPartID"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            C_LONG.withName("cValue"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("rgValue")
        ).withName("Attribute")
    ).withName("_CMC_TAGGED_ATTRIBUTE");
    static final jdk.incubator.foreign.MemoryLayout _CMC_TAGGED_ATTRIBUTE$struct$LAYOUT() { return _CMC_TAGGED_ATTRIBUTE$struct$LAYOUT_; }

    static final MemoryLayout _CMC_TAGGED_ATTRIBUTE$dwBodyPartID$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_TAGGED_ATTRIBUTE$dwBodyPartID$LAYOUT() { return _CMC_TAGGED_ATTRIBUTE$dwBodyPartID$LAYOUT_; }

    static final VarHandle _CMC_TAGGED_ATTRIBUTE$dwBodyPartID$VH_ = _CMC_TAGGED_ATTRIBUTE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwBodyPartID"));
    static final java.lang.invoke.VarHandle _CMC_TAGGED_ATTRIBUTE$dwBodyPartID$VH() { return _CMC_TAGGED_ATTRIBUTE$dwBodyPartID$VH_; }

    static final MemoryLayout _CMC_TAGGED_CERT_REQUEST$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwBodyPartID"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("SignedCertRequest")
    ).withName("_CMC_TAGGED_CERT_REQUEST");
    static final jdk.incubator.foreign.MemoryLayout _CMC_TAGGED_CERT_REQUEST$struct$LAYOUT() { return _CMC_TAGGED_CERT_REQUEST$struct$LAYOUT_; }

    static final MemoryLayout _CMC_TAGGED_CERT_REQUEST$dwBodyPartID$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_TAGGED_CERT_REQUEST$dwBodyPartID$LAYOUT() { return _CMC_TAGGED_CERT_REQUEST$dwBodyPartID$LAYOUT_; }

    static final VarHandle _CMC_TAGGED_CERT_REQUEST$dwBodyPartID$VH_ = _CMC_TAGGED_CERT_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwBodyPartID"));
    static final java.lang.invoke.VarHandle _CMC_TAGGED_CERT_REQUEST$dwBodyPartID$VH() { return _CMC_TAGGED_CERT_REQUEST$dwBodyPartID$VH_; }

    static final MemoryLayout _CMC_TAGGED_REQUEST$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwTaggedRequestChoice"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pTaggedCertRequest")
    ).withName("_CMC_TAGGED_REQUEST");
    static final jdk.incubator.foreign.MemoryLayout _CMC_TAGGED_REQUEST$struct$LAYOUT() { return _CMC_TAGGED_REQUEST$struct$LAYOUT_; }

    static final MemoryLayout _CMC_TAGGED_REQUEST$dwTaggedRequestChoice$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_TAGGED_REQUEST$dwTaggedRequestChoice$LAYOUT() { return _CMC_TAGGED_REQUEST$dwTaggedRequestChoice$LAYOUT_; }

    static final VarHandle _CMC_TAGGED_REQUEST$dwTaggedRequestChoice$VH_ = _CMC_TAGGED_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwTaggedRequestChoice"));
    static final java.lang.invoke.VarHandle _CMC_TAGGED_REQUEST$dwTaggedRequestChoice$VH() { return _CMC_TAGGED_REQUEST$dwTaggedRequestChoice$VH_; }

    static final MemoryLayout _CMC_TAGGED_REQUEST$pTaggedCertRequest$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMC_TAGGED_REQUEST$pTaggedCertRequest$LAYOUT() { return _CMC_TAGGED_REQUEST$pTaggedCertRequest$LAYOUT_; }

    static final VarHandle _CMC_TAGGED_REQUEST$pTaggedCertRequest$VH_ = MemoryHandles.asAddressVarHandle(_CMC_TAGGED_REQUEST$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pTaggedCertRequest")));
    static final java.lang.invoke.VarHandle _CMC_TAGGED_REQUEST$pTaggedCertRequest$VH() { return _CMC_TAGGED_REQUEST$pTaggedCertRequest$VH_; }

    static final MemoryLayout _CMC_TAGGED_CONTENT_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwBodyPartID"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("EncodedContentInfo")
    ).withName("_CMC_TAGGED_CONTENT_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMC_TAGGED_CONTENT_INFO$struct$LAYOUT() { return _CMC_TAGGED_CONTENT_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMC_TAGGED_CONTENT_INFO$dwBodyPartID$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_TAGGED_CONTENT_INFO$dwBodyPartID$LAYOUT() { return _CMC_TAGGED_CONTENT_INFO$dwBodyPartID$LAYOUT_; }

    static final VarHandle _CMC_TAGGED_CONTENT_INFO$dwBodyPartID$VH_ = _CMC_TAGGED_CONTENT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwBodyPartID"));
    static final java.lang.invoke.VarHandle _CMC_TAGGED_CONTENT_INFO$dwBodyPartID$VH() { return _CMC_TAGGED_CONTENT_INFO$dwBodyPartID$VH_; }

    static final MemoryLayout _CMC_TAGGED_OTHER_MSG$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwBodyPartID"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pszObjId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("Value")
    ).withName("_CMC_TAGGED_OTHER_MSG");
    static final jdk.incubator.foreign.MemoryLayout _CMC_TAGGED_OTHER_MSG$struct$LAYOUT() { return _CMC_TAGGED_OTHER_MSG$struct$LAYOUT_; }

    static final MemoryLayout _CMC_TAGGED_OTHER_MSG$dwBodyPartID$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_TAGGED_OTHER_MSG$dwBodyPartID$LAYOUT() { return _CMC_TAGGED_OTHER_MSG$dwBodyPartID$LAYOUT_; }

    static final VarHandle _CMC_TAGGED_OTHER_MSG$dwBodyPartID$VH_ = _CMC_TAGGED_OTHER_MSG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwBodyPartID"));
    static final java.lang.invoke.VarHandle _CMC_TAGGED_OTHER_MSG$dwBodyPartID$VH() { return _CMC_TAGGED_OTHER_MSG$dwBodyPartID$VH_; }

    static final MemoryLayout _CMC_TAGGED_OTHER_MSG$pszObjId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMC_TAGGED_OTHER_MSG$pszObjId$LAYOUT() { return _CMC_TAGGED_OTHER_MSG$pszObjId$LAYOUT_; }

    static final VarHandle _CMC_TAGGED_OTHER_MSG$pszObjId$VH_ = MemoryHandles.asAddressVarHandle(_CMC_TAGGED_OTHER_MSG$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszObjId")));
    static final java.lang.invoke.VarHandle _CMC_TAGGED_OTHER_MSG$pszObjId$VH() { return _CMC_TAGGED_OTHER_MSG$pszObjId$VH_; }

    static final MemoryLayout _CMC_DATA_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cTaggedAttribute"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgTaggedAttribute"),
        C_LONG.withName("cTaggedRequest"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgTaggedRequest"),
        C_LONG.withName("cTaggedContentInfo"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgTaggedContentInfo"),
        C_LONG.withName("cTaggedOtherMsg"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgTaggedOtherMsg")
    ).withName("_CMC_DATA_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMC_DATA_INFO$struct$LAYOUT() { return _CMC_DATA_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMC_DATA_INFO$cTaggedAttribute$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_DATA_INFO$cTaggedAttribute$LAYOUT() { return _CMC_DATA_INFO$cTaggedAttribute$LAYOUT_; }

    static final VarHandle _CMC_DATA_INFO$cTaggedAttribute$VH_ = _CMC_DATA_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cTaggedAttribute"));
    static final java.lang.invoke.VarHandle _CMC_DATA_INFO$cTaggedAttribute$VH() { return _CMC_DATA_INFO$cTaggedAttribute$VH_; }

    static final MemoryLayout _CMC_DATA_INFO$rgTaggedAttribute$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMC_DATA_INFO$rgTaggedAttribute$LAYOUT() { return _CMC_DATA_INFO$rgTaggedAttribute$LAYOUT_; }

    static final VarHandle _CMC_DATA_INFO$rgTaggedAttribute$VH_ = MemoryHandles.asAddressVarHandle(_CMC_DATA_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgTaggedAttribute")));
    static final java.lang.invoke.VarHandle _CMC_DATA_INFO$rgTaggedAttribute$VH() { return _CMC_DATA_INFO$rgTaggedAttribute$VH_; }

    static final MemoryLayout _CMC_DATA_INFO$cTaggedRequest$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_DATA_INFO$cTaggedRequest$LAYOUT() { return _CMC_DATA_INFO$cTaggedRequest$LAYOUT_; }

    static final VarHandle _CMC_DATA_INFO$cTaggedRequest$VH_ = _CMC_DATA_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cTaggedRequest"));
    static final java.lang.invoke.VarHandle _CMC_DATA_INFO$cTaggedRequest$VH() { return _CMC_DATA_INFO$cTaggedRequest$VH_; }

    static final MemoryLayout _CMC_DATA_INFO$rgTaggedRequest$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMC_DATA_INFO$rgTaggedRequest$LAYOUT() { return _CMC_DATA_INFO$rgTaggedRequest$LAYOUT_; }

    static final VarHandle _CMC_DATA_INFO$rgTaggedRequest$VH_ = MemoryHandles.asAddressVarHandle(_CMC_DATA_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgTaggedRequest")));
    static final java.lang.invoke.VarHandle _CMC_DATA_INFO$rgTaggedRequest$VH() { return _CMC_DATA_INFO$rgTaggedRequest$VH_; }

    static final MemoryLayout _CMC_DATA_INFO$cTaggedContentInfo$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_DATA_INFO$cTaggedContentInfo$LAYOUT() { return _CMC_DATA_INFO$cTaggedContentInfo$LAYOUT_; }

    static final VarHandle _CMC_DATA_INFO$cTaggedContentInfo$VH_ = _CMC_DATA_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cTaggedContentInfo"));
    static final java.lang.invoke.VarHandle _CMC_DATA_INFO$cTaggedContentInfo$VH() { return _CMC_DATA_INFO$cTaggedContentInfo$VH_; }

    static final MemoryLayout _CMC_DATA_INFO$rgTaggedContentInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMC_DATA_INFO$rgTaggedContentInfo$LAYOUT() { return _CMC_DATA_INFO$rgTaggedContentInfo$LAYOUT_; }

    static final VarHandle _CMC_DATA_INFO$rgTaggedContentInfo$VH_ = MemoryHandles.asAddressVarHandle(_CMC_DATA_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgTaggedContentInfo")));
    static final java.lang.invoke.VarHandle _CMC_DATA_INFO$rgTaggedContentInfo$VH() { return _CMC_DATA_INFO$rgTaggedContentInfo$VH_; }

    static final MemoryLayout _CMC_DATA_INFO$cTaggedOtherMsg$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_DATA_INFO$cTaggedOtherMsg$LAYOUT() { return _CMC_DATA_INFO$cTaggedOtherMsg$LAYOUT_; }

    static final VarHandle _CMC_DATA_INFO$cTaggedOtherMsg$VH_ = _CMC_DATA_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cTaggedOtherMsg"));
    static final java.lang.invoke.VarHandle _CMC_DATA_INFO$cTaggedOtherMsg$VH() { return _CMC_DATA_INFO$cTaggedOtherMsg$VH_; }

    static final MemoryLayout _CMC_DATA_INFO$rgTaggedOtherMsg$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMC_DATA_INFO$rgTaggedOtherMsg$LAYOUT() { return _CMC_DATA_INFO$rgTaggedOtherMsg$LAYOUT_; }

    static final VarHandle _CMC_DATA_INFO$rgTaggedOtherMsg$VH_ = MemoryHandles.asAddressVarHandle(_CMC_DATA_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgTaggedOtherMsg")));
    static final java.lang.invoke.VarHandle _CMC_DATA_INFO$rgTaggedOtherMsg$VH() { return _CMC_DATA_INFO$rgTaggedOtherMsg$VH_; }

    static final MemoryLayout _CMC_RESPONSE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cTaggedAttribute"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgTaggedAttribute"),
        C_LONG.withName("cTaggedContentInfo"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgTaggedContentInfo"),
        C_LONG.withName("cTaggedOtherMsg"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgTaggedOtherMsg")
    ).withName("_CMC_RESPONSE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMC_RESPONSE_INFO$struct$LAYOUT() { return _CMC_RESPONSE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMC_RESPONSE_INFO$cTaggedAttribute$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_RESPONSE_INFO$cTaggedAttribute$LAYOUT() { return _CMC_RESPONSE_INFO$cTaggedAttribute$LAYOUT_; }

    static final VarHandle _CMC_RESPONSE_INFO$cTaggedAttribute$VH_ = _CMC_RESPONSE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cTaggedAttribute"));
    static final java.lang.invoke.VarHandle _CMC_RESPONSE_INFO$cTaggedAttribute$VH() { return _CMC_RESPONSE_INFO$cTaggedAttribute$VH_; }

    static final MemoryLayout _CMC_RESPONSE_INFO$rgTaggedAttribute$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMC_RESPONSE_INFO$rgTaggedAttribute$LAYOUT() { return _CMC_RESPONSE_INFO$rgTaggedAttribute$LAYOUT_; }

    static final VarHandle _CMC_RESPONSE_INFO$rgTaggedAttribute$VH_ = MemoryHandles.asAddressVarHandle(_CMC_RESPONSE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgTaggedAttribute")));
    static final java.lang.invoke.VarHandle _CMC_RESPONSE_INFO$rgTaggedAttribute$VH() { return _CMC_RESPONSE_INFO$rgTaggedAttribute$VH_; }

    static final MemoryLayout _CMC_RESPONSE_INFO$cTaggedContentInfo$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_RESPONSE_INFO$cTaggedContentInfo$LAYOUT() { return _CMC_RESPONSE_INFO$cTaggedContentInfo$LAYOUT_; }

    static final VarHandle _CMC_RESPONSE_INFO$cTaggedContentInfo$VH_ = _CMC_RESPONSE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cTaggedContentInfo"));
    static final java.lang.invoke.VarHandle _CMC_RESPONSE_INFO$cTaggedContentInfo$VH() { return _CMC_RESPONSE_INFO$cTaggedContentInfo$VH_; }

    static final MemoryLayout _CMC_RESPONSE_INFO$rgTaggedContentInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMC_RESPONSE_INFO$rgTaggedContentInfo$LAYOUT() { return _CMC_RESPONSE_INFO$rgTaggedContentInfo$LAYOUT_; }

    static final VarHandle _CMC_RESPONSE_INFO$rgTaggedContentInfo$VH_ = MemoryHandles.asAddressVarHandle(_CMC_RESPONSE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgTaggedContentInfo")));
    static final java.lang.invoke.VarHandle _CMC_RESPONSE_INFO$rgTaggedContentInfo$VH() { return _CMC_RESPONSE_INFO$rgTaggedContentInfo$VH_; }

    static final MemoryLayout _CMC_RESPONSE_INFO$cTaggedOtherMsg$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_RESPONSE_INFO$cTaggedOtherMsg$LAYOUT() { return _CMC_RESPONSE_INFO$cTaggedOtherMsg$LAYOUT_; }

    static final VarHandle _CMC_RESPONSE_INFO$cTaggedOtherMsg$VH_ = _CMC_RESPONSE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cTaggedOtherMsg"));
    static final java.lang.invoke.VarHandle _CMC_RESPONSE_INFO$cTaggedOtherMsg$VH() { return _CMC_RESPONSE_INFO$cTaggedOtherMsg$VH_; }

    static final MemoryLayout _CMC_RESPONSE_INFO$rgTaggedOtherMsg$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMC_RESPONSE_INFO$rgTaggedOtherMsg$LAYOUT() { return _CMC_RESPONSE_INFO$rgTaggedOtherMsg$LAYOUT_; }

    static final VarHandle _CMC_RESPONSE_INFO$rgTaggedOtherMsg$VH_ = MemoryHandles.asAddressVarHandle(_CMC_RESPONSE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgTaggedOtherMsg")));
    static final java.lang.invoke.VarHandle _CMC_RESPONSE_INFO$rgTaggedOtherMsg$VH() { return _CMC_RESPONSE_INFO$rgTaggedOtherMsg$VH_; }

    static final MemoryLayout _CMC_PEND_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("PendToken"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("PendTime")
    ).withName("_CMC_PEND_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMC_PEND_INFO$struct$LAYOUT() { return _CMC_PEND_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMC_STATUS_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwStatus"),
        C_LONG.withName("cBodyList"),
        C_POINTER.withName("rgdwBodyList"),
        C_POINTER.withName("pwszStatusString"),
        C_LONG.withName("dwOtherInfoChoice"),
        MemoryLayout.ofPaddingBits(32),
        C_LONG.withName("dwFailInfo"),
        C_POINTER.withName("pPendInfo")
    ).withName("_CMC_STATUS_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMC_STATUS_INFO$struct$LAYOUT() { return _CMC_STATUS_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMC_STATUS_INFO$dwStatus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_STATUS_INFO$dwStatus$LAYOUT() { return _CMC_STATUS_INFO$dwStatus$LAYOUT_; }

    static final VarHandle _CMC_STATUS_INFO$dwStatus$VH_ = _CMC_STATUS_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStatus"));
    static final java.lang.invoke.VarHandle _CMC_STATUS_INFO$dwStatus$VH() { return _CMC_STATUS_INFO$dwStatus$VH_; }

    static final MemoryLayout _CMC_STATUS_INFO$cBodyList$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_STATUS_INFO$cBodyList$LAYOUT() { return _CMC_STATUS_INFO$cBodyList$LAYOUT_; }

    static final VarHandle _CMC_STATUS_INFO$cBodyList$VH_ = _CMC_STATUS_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cBodyList"));
    static final java.lang.invoke.VarHandle _CMC_STATUS_INFO$cBodyList$VH() { return _CMC_STATUS_INFO$cBodyList$VH_; }

    static final MemoryLayout _CMC_STATUS_INFO$rgdwBodyList$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMC_STATUS_INFO$rgdwBodyList$LAYOUT() { return _CMC_STATUS_INFO$rgdwBodyList$LAYOUT_; }

    static final VarHandle _CMC_STATUS_INFO$rgdwBodyList$VH_ = MemoryHandles.asAddressVarHandle(_CMC_STATUS_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgdwBodyList")));
    static final java.lang.invoke.VarHandle _CMC_STATUS_INFO$rgdwBodyList$VH() { return _CMC_STATUS_INFO$rgdwBodyList$VH_; }

    static final MemoryLayout _CMC_STATUS_INFO$pwszStatusString$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMC_STATUS_INFO$pwszStatusString$LAYOUT() { return _CMC_STATUS_INFO$pwszStatusString$LAYOUT_; }

    static final VarHandle _CMC_STATUS_INFO$pwszStatusString$VH_ = MemoryHandles.asAddressVarHandle(_CMC_STATUS_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszStatusString")));
    static final java.lang.invoke.VarHandle _CMC_STATUS_INFO$pwszStatusString$VH() { return _CMC_STATUS_INFO$pwszStatusString$VH_; }

    static final MemoryLayout _CMC_STATUS_INFO$dwOtherInfoChoice$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_STATUS_INFO$dwOtherInfoChoice$LAYOUT() { return _CMC_STATUS_INFO$dwOtherInfoChoice$LAYOUT_; }

    static final VarHandle _CMC_STATUS_INFO$dwOtherInfoChoice$VH_ = _CMC_STATUS_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwOtherInfoChoice"));
    static final java.lang.invoke.VarHandle _CMC_STATUS_INFO$dwOtherInfoChoice$VH() { return _CMC_STATUS_INFO$dwOtherInfoChoice$VH_; }

    static final MemoryLayout _CMC_STATUS_INFO$dwFailInfo$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_STATUS_INFO$dwFailInfo$LAYOUT() { return _CMC_STATUS_INFO$dwFailInfo$LAYOUT_; }

    static final VarHandle _CMC_STATUS_INFO$dwFailInfo$VH_ = _CMC_STATUS_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFailInfo"));
    static final java.lang.invoke.VarHandle _CMC_STATUS_INFO$dwFailInfo$VH() { return _CMC_STATUS_INFO$dwFailInfo$VH_; }

    static final MemoryLayout _CMC_STATUS_INFO$pPendInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMC_STATUS_INFO$pPendInfo$LAYOUT() { return _CMC_STATUS_INFO$pPendInfo$LAYOUT_; }

    static final VarHandle _CMC_STATUS_INFO$pPendInfo$VH_ = MemoryHandles.asAddressVarHandle(_CMC_STATUS_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pPendInfo")));
    static final java.lang.invoke.VarHandle _CMC_STATUS_INFO$pPendInfo$VH() { return _CMC_STATUS_INFO$pPendInfo$VH_; }

    static final MemoryLayout _CMC_ADD_EXTENSIONS_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwCmcDataReference"),
        C_LONG.withName("cCertReference"),
        C_POINTER.withName("rgdwCertReference"),
        C_LONG.withName("cExtension"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgExtension")
    ).withName("_CMC_ADD_EXTENSIONS_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMC_ADD_EXTENSIONS_INFO$struct$LAYOUT() { return _CMC_ADD_EXTENSIONS_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMC_ADD_EXTENSIONS_INFO$dwCmcDataReference$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_ADD_EXTENSIONS_INFO$dwCmcDataReference$LAYOUT() { return _CMC_ADD_EXTENSIONS_INFO$dwCmcDataReference$LAYOUT_; }

    static final VarHandle _CMC_ADD_EXTENSIONS_INFO$dwCmcDataReference$VH_ = _CMC_ADD_EXTENSIONS_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCmcDataReference"));
    static final java.lang.invoke.VarHandle _CMC_ADD_EXTENSIONS_INFO$dwCmcDataReference$VH() { return _CMC_ADD_EXTENSIONS_INFO$dwCmcDataReference$VH_; }

    static final MemoryLayout _CMC_ADD_EXTENSIONS_INFO$cCertReference$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_ADD_EXTENSIONS_INFO$cCertReference$LAYOUT() { return _CMC_ADD_EXTENSIONS_INFO$cCertReference$LAYOUT_; }

    static final VarHandle _CMC_ADD_EXTENSIONS_INFO$cCertReference$VH_ = _CMC_ADD_EXTENSIONS_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cCertReference"));
    static final java.lang.invoke.VarHandle _CMC_ADD_EXTENSIONS_INFO$cCertReference$VH() { return _CMC_ADD_EXTENSIONS_INFO$cCertReference$VH_; }

    static final MemoryLayout _CMC_ADD_EXTENSIONS_INFO$rgdwCertReference$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMC_ADD_EXTENSIONS_INFO$rgdwCertReference$LAYOUT() { return _CMC_ADD_EXTENSIONS_INFO$rgdwCertReference$LAYOUT_; }

    static final VarHandle _CMC_ADD_EXTENSIONS_INFO$rgdwCertReference$VH_ = MemoryHandles.asAddressVarHandle(_CMC_ADD_EXTENSIONS_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgdwCertReference")));
    static final java.lang.invoke.VarHandle _CMC_ADD_EXTENSIONS_INFO$rgdwCertReference$VH() { return _CMC_ADD_EXTENSIONS_INFO$rgdwCertReference$VH_; }

    static final MemoryLayout _CMC_ADD_EXTENSIONS_INFO$cExtension$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_ADD_EXTENSIONS_INFO$cExtension$LAYOUT() { return _CMC_ADD_EXTENSIONS_INFO$cExtension$LAYOUT_; }

    static final VarHandle _CMC_ADD_EXTENSIONS_INFO$cExtension$VH_ = _CMC_ADD_EXTENSIONS_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cExtension"));
    static final java.lang.invoke.VarHandle _CMC_ADD_EXTENSIONS_INFO$cExtension$VH() { return _CMC_ADD_EXTENSIONS_INFO$cExtension$VH_; }

    static final MemoryLayout _CMC_ADD_EXTENSIONS_INFO$rgExtension$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMC_ADD_EXTENSIONS_INFO$rgExtension$LAYOUT() { return _CMC_ADD_EXTENSIONS_INFO$rgExtension$LAYOUT_; }

    static final VarHandle _CMC_ADD_EXTENSIONS_INFO$rgExtension$VH_ = MemoryHandles.asAddressVarHandle(_CMC_ADD_EXTENSIONS_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgExtension")));
    static final java.lang.invoke.VarHandle _CMC_ADD_EXTENSIONS_INFO$rgExtension$VH() { return _CMC_ADD_EXTENSIONS_INFO$rgExtension$VH_; }

    static final MemoryLayout _CMC_ADD_ATTRIBUTES_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwCmcDataReference"),
        C_LONG.withName("cCertReference"),
        C_POINTER.withName("rgdwCertReference"),
        C_LONG.withName("cAttribute"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgAttribute")
    ).withName("_CMC_ADD_ATTRIBUTES_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CMC_ADD_ATTRIBUTES_INFO$struct$LAYOUT() { return _CMC_ADD_ATTRIBUTES_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CMC_ADD_ATTRIBUTES_INFO$dwCmcDataReference$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_ADD_ATTRIBUTES_INFO$dwCmcDataReference$LAYOUT() { return _CMC_ADD_ATTRIBUTES_INFO$dwCmcDataReference$LAYOUT_; }

    static final VarHandle _CMC_ADD_ATTRIBUTES_INFO$dwCmcDataReference$VH_ = _CMC_ADD_ATTRIBUTES_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCmcDataReference"));
    static final java.lang.invoke.VarHandle _CMC_ADD_ATTRIBUTES_INFO$dwCmcDataReference$VH() { return _CMC_ADD_ATTRIBUTES_INFO$dwCmcDataReference$VH_; }

    static final MemoryLayout _CMC_ADD_ATTRIBUTES_INFO$cCertReference$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_ADD_ATTRIBUTES_INFO$cCertReference$LAYOUT() { return _CMC_ADD_ATTRIBUTES_INFO$cCertReference$LAYOUT_; }

    static final VarHandle _CMC_ADD_ATTRIBUTES_INFO$cCertReference$VH_ = _CMC_ADD_ATTRIBUTES_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cCertReference"));
    static final java.lang.invoke.VarHandle _CMC_ADD_ATTRIBUTES_INFO$cCertReference$VH() { return _CMC_ADD_ATTRIBUTES_INFO$cCertReference$VH_; }

    static final MemoryLayout _CMC_ADD_ATTRIBUTES_INFO$rgdwCertReference$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMC_ADD_ATTRIBUTES_INFO$rgdwCertReference$LAYOUT() { return _CMC_ADD_ATTRIBUTES_INFO$rgdwCertReference$LAYOUT_; }

    static final VarHandle _CMC_ADD_ATTRIBUTES_INFO$rgdwCertReference$VH_ = MemoryHandles.asAddressVarHandle(_CMC_ADD_ATTRIBUTES_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgdwCertReference")));
    static final java.lang.invoke.VarHandle _CMC_ADD_ATTRIBUTES_INFO$rgdwCertReference$VH() { return _CMC_ADD_ATTRIBUTES_INFO$rgdwCertReference$VH_; }

    static final MemoryLayout _CMC_ADD_ATTRIBUTES_INFO$cAttribute$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CMC_ADD_ATTRIBUTES_INFO$cAttribute$LAYOUT() { return _CMC_ADD_ATTRIBUTES_INFO$cAttribute$LAYOUT_; }

    static final VarHandle _CMC_ADD_ATTRIBUTES_INFO$cAttribute$VH_ = _CMC_ADD_ATTRIBUTES_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cAttribute"));
    static final java.lang.invoke.VarHandle _CMC_ADD_ATTRIBUTES_INFO$cAttribute$VH() { return _CMC_ADD_ATTRIBUTES_INFO$cAttribute$VH_; }

    static final MemoryLayout _CMC_ADD_ATTRIBUTES_INFO$rgAttribute$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CMC_ADD_ATTRIBUTES_INFO$rgAttribute$LAYOUT() { return _CMC_ADD_ATTRIBUTES_INFO$rgAttribute$LAYOUT_; }

    static final VarHandle _CMC_ADD_ATTRIBUTES_INFO$rgAttribute$VH_ = MemoryHandles.asAddressVarHandle(_CMC_ADD_ATTRIBUTES_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgAttribute")));
    static final java.lang.invoke.VarHandle _CMC_ADD_ATTRIBUTES_INFO$rgAttribute$VH() { return _CMC_ADD_ATTRIBUTES_INFO$rgAttribute$VH_; }

    static final MemoryLayout _CERT_TEMPLATE_EXT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pszObjId"),
        C_LONG.withName("dwMajorVersion"),
        C_INT.withName("fMinorVersion"),
        C_LONG.withName("dwMinorVersion"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CERT_TEMPLATE_EXT");
    static final jdk.incubator.foreign.MemoryLayout _CERT_TEMPLATE_EXT$struct$LAYOUT() { return _CERT_TEMPLATE_EXT$struct$LAYOUT_; }

    static final MemoryLayout _CERT_TEMPLATE_EXT$pszObjId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_TEMPLATE_EXT$pszObjId$LAYOUT() { return _CERT_TEMPLATE_EXT$pszObjId$LAYOUT_; }

    static final VarHandle _CERT_TEMPLATE_EXT$pszObjId$VH_ = MemoryHandles.asAddressVarHandle(_CERT_TEMPLATE_EXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszObjId")));
    static final java.lang.invoke.VarHandle _CERT_TEMPLATE_EXT$pszObjId$VH() { return _CERT_TEMPLATE_EXT$pszObjId$VH_; }

    static final MemoryLayout _CERT_TEMPLATE_EXT$dwMajorVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_TEMPLATE_EXT$dwMajorVersion$LAYOUT() { return _CERT_TEMPLATE_EXT$dwMajorVersion$LAYOUT_; }

    static final VarHandle _CERT_TEMPLATE_EXT$dwMajorVersion$VH_ = _CERT_TEMPLATE_EXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwMajorVersion"));
    static final java.lang.invoke.VarHandle _CERT_TEMPLATE_EXT$dwMajorVersion$VH() { return _CERT_TEMPLATE_EXT$dwMajorVersion$VH_; }

    static final MemoryLayout _CERT_TEMPLATE_EXT$fMinorVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _CERT_TEMPLATE_EXT$fMinorVersion$LAYOUT() { return _CERT_TEMPLATE_EXT$fMinorVersion$LAYOUT_; }

    static final VarHandle _CERT_TEMPLATE_EXT$fMinorVersion$VH_ = _CERT_TEMPLATE_EXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fMinorVersion"));
    static final java.lang.invoke.VarHandle _CERT_TEMPLATE_EXT$fMinorVersion$VH() { return _CERT_TEMPLATE_EXT$fMinorVersion$VH_; }

    static final MemoryLayout _CERT_TEMPLATE_EXT$dwMinorVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_TEMPLATE_EXT$dwMinorVersion$LAYOUT() { return _CERT_TEMPLATE_EXT$dwMinorVersion$LAYOUT_; }

    static final VarHandle _CERT_TEMPLATE_EXT$dwMinorVersion$VH_ = _CERT_TEMPLATE_EXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwMinorVersion"));
    static final java.lang.invoke.VarHandle _CERT_TEMPLATE_EXT$dwMinorVersion$VH() { return _CERT_TEMPLATE_EXT$dwMinorVersion$VH_; }

    static final MemoryLayout _CERT_HASHED_URL$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("HashAlgorithm"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("Hash"),
        C_POINTER.withName("pwszUrl")
    ).withName("_CERT_HASHED_URL");
    static final jdk.incubator.foreign.MemoryLayout _CERT_HASHED_URL$struct$LAYOUT() { return _CERT_HASHED_URL$struct$LAYOUT_; }

    static final MemoryLayout _CERT_HASHED_URL$pwszUrl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_HASHED_URL$pwszUrl$LAYOUT() { return _CERT_HASHED_URL$pwszUrl$LAYOUT_; }

    static final VarHandle _CERT_HASHED_URL$pwszUrl$VH_ = MemoryHandles.asAddressVarHandle(_CERT_HASHED_URL$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszUrl")));
    static final java.lang.invoke.VarHandle _CERT_HASHED_URL$pwszUrl$VH() { return _CERT_HASHED_URL$pwszUrl$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_DETAILS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pwszMimeType"),
        C_LONG.withName("cHashedUrl"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgHashedUrl")
    ).withName("_CERT_LOGOTYPE_DETAILS");
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_DETAILS$struct$LAYOUT() { return _CERT_LOGOTYPE_DETAILS$struct$LAYOUT_; }

    static final MemoryLayout _CERT_LOGOTYPE_DETAILS$pwszMimeType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_DETAILS$pwszMimeType$LAYOUT() { return _CERT_LOGOTYPE_DETAILS$pwszMimeType$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_DETAILS$pwszMimeType$VH_ = MemoryHandles.asAddressVarHandle(_CERT_LOGOTYPE_DETAILS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszMimeType")));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_DETAILS$pwszMimeType$VH() { return _CERT_LOGOTYPE_DETAILS$pwszMimeType$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_DETAILS$cHashedUrl$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_DETAILS$cHashedUrl$LAYOUT() { return _CERT_LOGOTYPE_DETAILS$cHashedUrl$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_DETAILS$cHashedUrl$VH_ = _CERT_LOGOTYPE_DETAILS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cHashedUrl"));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_DETAILS$cHashedUrl$VH() { return _CERT_LOGOTYPE_DETAILS$cHashedUrl$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_DETAILS$rgHashedUrl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_DETAILS$rgHashedUrl$LAYOUT() { return _CERT_LOGOTYPE_DETAILS$rgHashedUrl$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_DETAILS$rgHashedUrl$VH_ = MemoryHandles.asAddressVarHandle(_CERT_LOGOTYPE_DETAILS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgHashedUrl")));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_DETAILS$rgHashedUrl$VH() { return _CERT_LOGOTYPE_DETAILS$rgHashedUrl$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_REFERENCE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cHashedUrl"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgHashedUrl")
    ).withName("_CERT_LOGOTYPE_REFERENCE");
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_REFERENCE$struct$LAYOUT() { return _CERT_LOGOTYPE_REFERENCE$struct$LAYOUT_; }

    static final MemoryLayout _CERT_LOGOTYPE_REFERENCE$cHashedUrl$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_REFERENCE$cHashedUrl$LAYOUT() { return _CERT_LOGOTYPE_REFERENCE$cHashedUrl$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_REFERENCE$cHashedUrl$VH_ = _CERT_LOGOTYPE_REFERENCE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cHashedUrl"));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_REFERENCE$cHashedUrl$VH() { return _CERT_LOGOTYPE_REFERENCE$cHashedUrl$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_REFERENCE$rgHashedUrl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_REFERENCE$rgHashedUrl$LAYOUT() { return _CERT_LOGOTYPE_REFERENCE$rgHashedUrl$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_REFERENCE$rgHashedUrl$VH_ = MemoryHandles.asAddressVarHandle(_CERT_LOGOTYPE_REFERENCE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgHashedUrl")));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_REFERENCE$rgHashedUrl$VH() { return _CERT_LOGOTYPE_REFERENCE$rgHashedUrl$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_IMAGE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwLogotypeImageInfoChoice"),
        C_LONG.withName("dwFileSize"),
        C_LONG.withName("dwXSize"),
        C_LONG.withName("dwYSize"),
        C_LONG.withName("dwLogotypeImageResolutionChoice"),
        C_LONG.withName("dwNumBits"),
        C_LONG.withName("dwTableSize"),
        C_POINTER.withName("pwszLanguage")
    ).withName("_CERT_LOGOTYPE_IMAGE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_IMAGE_INFO$struct$LAYOUT() { return _CERT_LOGOTYPE_IMAGE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CERT_LOGOTYPE_IMAGE_INFO$dwLogotypeImageInfoChoice$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_IMAGE_INFO$dwLogotypeImageInfoChoice$LAYOUT() { return _CERT_LOGOTYPE_IMAGE_INFO$dwLogotypeImageInfoChoice$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_IMAGE_INFO$dwLogotypeImageInfoChoice$VH_ = _CERT_LOGOTYPE_IMAGE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwLogotypeImageInfoChoice"));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_IMAGE_INFO$dwLogotypeImageInfoChoice$VH() { return _CERT_LOGOTYPE_IMAGE_INFO$dwLogotypeImageInfoChoice$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_IMAGE_INFO$dwFileSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_IMAGE_INFO$dwFileSize$LAYOUT() { return _CERT_LOGOTYPE_IMAGE_INFO$dwFileSize$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_IMAGE_INFO$dwFileSize$VH_ = _CERT_LOGOTYPE_IMAGE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFileSize"));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_IMAGE_INFO$dwFileSize$VH() { return _CERT_LOGOTYPE_IMAGE_INFO$dwFileSize$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_IMAGE_INFO$dwXSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_IMAGE_INFO$dwXSize$LAYOUT() { return _CERT_LOGOTYPE_IMAGE_INFO$dwXSize$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_IMAGE_INFO$dwXSize$VH_ = _CERT_LOGOTYPE_IMAGE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwXSize"));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_IMAGE_INFO$dwXSize$VH() { return _CERT_LOGOTYPE_IMAGE_INFO$dwXSize$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_IMAGE_INFO$dwYSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_IMAGE_INFO$dwYSize$LAYOUT() { return _CERT_LOGOTYPE_IMAGE_INFO$dwYSize$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_IMAGE_INFO$dwYSize$VH_ = _CERT_LOGOTYPE_IMAGE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwYSize"));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_IMAGE_INFO$dwYSize$VH() { return _CERT_LOGOTYPE_IMAGE_INFO$dwYSize$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_IMAGE_INFO$dwLogotypeImageResolutionChoice$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_IMAGE_INFO$dwLogotypeImageResolutionChoice$LAYOUT() { return _CERT_LOGOTYPE_IMAGE_INFO$dwLogotypeImageResolutionChoice$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_IMAGE_INFO$dwLogotypeImageResolutionChoice$VH_ = _CERT_LOGOTYPE_IMAGE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwLogotypeImageResolutionChoice"));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_IMAGE_INFO$dwLogotypeImageResolutionChoice$VH() { return _CERT_LOGOTYPE_IMAGE_INFO$dwLogotypeImageResolutionChoice$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_IMAGE_INFO$dwNumBits$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_IMAGE_INFO$dwNumBits$LAYOUT() { return _CERT_LOGOTYPE_IMAGE_INFO$dwNumBits$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_IMAGE_INFO$dwNumBits$VH_ = _CERT_LOGOTYPE_IMAGE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwNumBits"));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_IMAGE_INFO$dwNumBits$VH() { return _CERT_LOGOTYPE_IMAGE_INFO$dwNumBits$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_IMAGE_INFO$dwTableSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_IMAGE_INFO$dwTableSize$LAYOUT() { return _CERT_LOGOTYPE_IMAGE_INFO$dwTableSize$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_IMAGE_INFO$dwTableSize$VH_ = _CERT_LOGOTYPE_IMAGE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwTableSize"));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_IMAGE_INFO$dwTableSize$VH() { return _CERT_LOGOTYPE_IMAGE_INFO$dwTableSize$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_IMAGE_INFO$pwszLanguage$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_IMAGE_INFO$pwszLanguage$LAYOUT() { return _CERT_LOGOTYPE_IMAGE_INFO$pwszLanguage$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_IMAGE_INFO$pwszLanguage$VH_ = MemoryHandles.asAddressVarHandle(_CERT_LOGOTYPE_IMAGE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszLanguage")));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_IMAGE_INFO$pwszLanguage$VH() { return _CERT_LOGOTYPE_IMAGE_INFO$pwszLanguage$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_IMAGE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_POINTER.withName("pwszMimeType"),
            C_LONG.withName("cHashedUrl"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("rgHashedUrl")
        ).withName("LogotypeDetails"),
        C_POINTER.withName("pLogotypeImageInfo")
    ).withName("_CERT_LOGOTYPE_IMAGE");
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_IMAGE$struct$LAYOUT() { return _CERT_LOGOTYPE_IMAGE$struct$LAYOUT_; }

    static final MemoryLayout _CERT_LOGOTYPE_IMAGE$pLogotypeImageInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_IMAGE$pLogotypeImageInfo$LAYOUT() { return _CERT_LOGOTYPE_IMAGE$pLogotypeImageInfo$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_IMAGE$pLogotypeImageInfo$VH_ = MemoryHandles.asAddressVarHandle(_CERT_LOGOTYPE_IMAGE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pLogotypeImageInfo")));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_IMAGE$pLogotypeImageInfo$VH() { return _CERT_LOGOTYPE_IMAGE$pLogotypeImageInfo$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_AUDIO_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwFileSize"),
        C_LONG.withName("dwPlayTime"),
        C_LONG.withName("dwChannels"),
        C_LONG.withName("dwSampleRate"),
        C_POINTER.withName("pwszLanguage")
    ).withName("_CERT_LOGOTYPE_AUDIO_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_AUDIO_INFO$struct$LAYOUT() { return _CERT_LOGOTYPE_AUDIO_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CERT_LOGOTYPE_AUDIO_INFO$dwFileSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_AUDIO_INFO$dwFileSize$LAYOUT() { return _CERT_LOGOTYPE_AUDIO_INFO$dwFileSize$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_AUDIO_INFO$dwFileSize$VH_ = _CERT_LOGOTYPE_AUDIO_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFileSize"));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_AUDIO_INFO$dwFileSize$VH() { return _CERT_LOGOTYPE_AUDIO_INFO$dwFileSize$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_AUDIO_INFO$dwPlayTime$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_AUDIO_INFO$dwPlayTime$LAYOUT() { return _CERT_LOGOTYPE_AUDIO_INFO$dwPlayTime$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_AUDIO_INFO$dwPlayTime$VH_ = _CERT_LOGOTYPE_AUDIO_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwPlayTime"));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_AUDIO_INFO$dwPlayTime$VH() { return _CERT_LOGOTYPE_AUDIO_INFO$dwPlayTime$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_AUDIO_INFO$dwChannels$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_AUDIO_INFO$dwChannels$LAYOUT() { return _CERT_LOGOTYPE_AUDIO_INFO$dwChannels$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_AUDIO_INFO$dwChannels$VH_ = _CERT_LOGOTYPE_AUDIO_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwChannels"));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_AUDIO_INFO$dwChannels$VH() { return _CERT_LOGOTYPE_AUDIO_INFO$dwChannels$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_AUDIO_INFO$dwSampleRate$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_AUDIO_INFO$dwSampleRate$LAYOUT() { return _CERT_LOGOTYPE_AUDIO_INFO$dwSampleRate$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_AUDIO_INFO$dwSampleRate$VH_ = _CERT_LOGOTYPE_AUDIO_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSampleRate"));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_AUDIO_INFO$dwSampleRate$VH() { return _CERT_LOGOTYPE_AUDIO_INFO$dwSampleRate$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_AUDIO_INFO$pwszLanguage$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_AUDIO_INFO$pwszLanguage$LAYOUT() { return _CERT_LOGOTYPE_AUDIO_INFO$pwszLanguage$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_AUDIO_INFO$pwszLanguage$VH_ = MemoryHandles.asAddressVarHandle(_CERT_LOGOTYPE_AUDIO_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszLanguage")));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_AUDIO_INFO$pwszLanguage$VH() { return _CERT_LOGOTYPE_AUDIO_INFO$pwszLanguage$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_AUDIO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_POINTER.withName("pwszMimeType"),
            C_LONG.withName("cHashedUrl"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("rgHashedUrl")
        ).withName("LogotypeDetails"),
        C_POINTER.withName("pLogotypeAudioInfo")
    ).withName("_CERT_LOGOTYPE_AUDIO");
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_AUDIO$struct$LAYOUT() { return _CERT_LOGOTYPE_AUDIO$struct$LAYOUT_; }

    static final MemoryLayout _CERT_LOGOTYPE_AUDIO$pLogotypeAudioInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_AUDIO$pLogotypeAudioInfo$LAYOUT() { return _CERT_LOGOTYPE_AUDIO$pLogotypeAudioInfo$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_AUDIO$pLogotypeAudioInfo$VH_ = MemoryHandles.asAddressVarHandle(_CERT_LOGOTYPE_AUDIO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pLogotypeAudioInfo")));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_AUDIO$pLogotypeAudioInfo$VH() { return _CERT_LOGOTYPE_AUDIO$pLogotypeAudioInfo$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cLogotypeImage"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgLogotypeImage"),
        C_LONG.withName("cLogotypeAudio"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgLogotypeAudio")
    ).withName("_CERT_LOGOTYPE_DATA");
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_DATA$struct$LAYOUT() { return _CERT_LOGOTYPE_DATA$struct$LAYOUT_; }

    static final MemoryLayout _CERT_LOGOTYPE_DATA$cLogotypeImage$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_DATA$cLogotypeImage$LAYOUT() { return _CERT_LOGOTYPE_DATA$cLogotypeImage$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_DATA$cLogotypeImage$VH_ = _CERT_LOGOTYPE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cLogotypeImage"));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_DATA$cLogotypeImage$VH() { return _CERT_LOGOTYPE_DATA$cLogotypeImage$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_DATA$rgLogotypeImage$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_DATA$rgLogotypeImage$LAYOUT() { return _CERT_LOGOTYPE_DATA$rgLogotypeImage$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_DATA$rgLogotypeImage$VH_ = MemoryHandles.asAddressVarHandle(_CERT_LOGOTYPE_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgLogotypeImage")));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_DATA$rgLogotypeImage$VH() { return _CERT_LOGOTYPE_DATA$rgLogotypeImage$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_DATA$cLogotypeAudio$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_DATA$cLogotypeAudio$LAYOUT() { return _CERT_LOGOTYPE_DATA$cLogotypeAudio$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_DATA$cLogotypeAudio$VH_ = _CERT_LOGOTYPE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cLogotypeAudio"));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_DATA$cLogotypeAudio$VH() { return _CERT_LOGOTYPE_DATA$cLogotypeAudio$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_DATA$rgLogotypeAudio$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_DATA$rgLogotypeAudio$LAYOUT() { return _CERT_LOGOTYPE_DATA$rgLogotypeAudio$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_DATA$rgLogotypeAudio$VH_ = MemoryHandles.asAddressVarHandle(_CERT_LOGOTYPE_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgLogotypeAudio")));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_DATA$rgLogotypeAudio$VH() { return _CERT_LOGOTYPE_DATA$rgLogotypeAudio$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwLogotypeInfoChoice"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pLogotypeDirectInfo"),
        C_POINTER.withName("pLogotypeIndirectInfo")
    ).withName("_CERT_LOGOTYPE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_INFO$struct$LAYOUT() { return _CERT_LOGOTYPE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CERT_LOGOTYPE_INFO$dwLogotypeInfoChoice$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_INFO$dwLogotypeInfoChoice$LAYOUT() { return _CERT_LOGOTYPE_INFO$dwLogotypeInfoChoice$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_INFO$dwLogotypeInfoChoice$VH_ = _CERT_LOGOTYPE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwLogotypeInfoChoice"));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_INFO$dwLogotypeInfoChoice$VH() { return _CERT_LOGOTYPE_INFO$dwLogotypeInfoChoice$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_INFO$pLogotypeDirectInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_INFO$pLogotypeDirectInfo$LAYOUT() { return _CERT_LOGOTYPE_INFO$pLogotypeDirectInfo$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_INFO$pLogotypeDirectInfo$VH_ = MemoryHandles.asAddressVarHandle(_CERT_LOGOTYPE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pLogotypeDirectInfo")));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_INFO$pLogotypeDirectInfo$VH() { return _CERT_LOGOTYPE_INFO$pLogotypeDirectInfo$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_INFO$pLogotypeIndirectInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_INFO$pLogotypeIndirectInfo$LAYOUT() { return _CERT_LOGOTYPE_INFO$pLogotypeIndirectInfo$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_INFO$pLogotypeIndirectInfo$VH_ = MemoryHandles.asAddressVarHandle(_CERT_LOGOTYPE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pLogotypeIndirectInfo")));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_INFO$pLogotypeIndirectInfo$VH() { return _CERT_LOGOTYPE_INFO$pLogotypeIndirectInfo$VH_; }

    static final MemoryLayout _CERT_OTHER_LOGOTYPE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pszObjId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLogotypeInfoChoice"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pLogotypeDirectInfo"),
            C_POINTER.withName("pLogotypeIndirectInfo")
        ).withName("LogotypeInfo")
    ).withName("_CERT_OTHER_LOGOTYPE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CERT_OTHER_LOGOTYPE_INFO$struct$LAYOUT() { return _CERT_OTHER_LOGOTYPE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CERT_OTHER_LOGOTYPE_INFO$pszObjId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_OTHER_LOGOTYPE_INFO$pszObjId$LAYOUT() { return _CERT_OTHER_LOGOTYPE_INFO$pszObjId$LAYOUT_; }

    static final VarHandle _CERT_OTHER_LOGOTYPE_INFO$pszObjId$VH_ = MemoryHandles.asAddressVarHandle(_CERT_OTHER_LOGOTYPE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszObjId")));
    static final java.lang.invoke.VarHandle _CERT_OTHER_LOGOTYPE_INFO$pszObjId$VH() { return _CERT_OTHER_LOGOTYPE_INFO$pszObjId$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_EXT_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cCommunityLogo"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgCommunityLogo"),
        C_POINTER.withName("pIssuerLogo"),
        C_POINTER.withName("pSubjectLogo"),
        C_LONG.withName("cOtherLogo"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgOtherLogo")
    ).withName("_CERT_LOGOTYPE_EXT_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_EXT_INFO$struct$LAYOUT() { return _CERT_LOGOTYPE_EXT_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CERT_LOGOTYPE_EXT_INFO$cCommunityLogo$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_EXT_INFO$cCommunityLogo$LAYOUT() { return _CERT_LOGOTYPE_EXT_INFO$cCommunityLogo$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_EXT_INFO$cCommunityLogo$VH_ = _CERT_LOGOTYPE_EXT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cCommunityLogo"));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_EXT_INFO$cCommunityLogo$VH() { return _CERT_LOGOTYPE_EXT_INFO$cCommunityLogo$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_EXT_INFO$rgCommunityLogo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_EXT_INFO$rgCommunityLogo$LAYOUT() { return _CERT_LOGOTYPE_EXT_INFO$rgCommunityLogo$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_EXT_INFO$rgCommunityLogo$VH_ = MemoryHandles.asAddressVarHandle(_CERT_LOGOTYPE_EXT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgCommunityLogo")));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_EXT_INFO$rgCommunityLogo$VH() { return _CERT_LOGOTYPE_EXT_INFO$rgCommunityLogo$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_EXT_INFO$pIssuerLogo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_EXT_INFO$pIssuerLogo$LAYOUT() { return _CERT_LOGOTYPE_EXT_INFO$pIssuerLogo$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_EXT_INFO$pIssuerLogo$VH_ = MemoryHandles.asAddressVarHandle(_CERT_LOGOTYPE_EXT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pIssuerLogo")));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_EXT_INFO$pIssuerLogo$VH() { return _CERT_LOGOTYPE_EXT_INFO$pIssuerLogo$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_EXT_INFO$pSubjectLogo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_EXT_INFO$pSubjectLogo$LAYOUT() { return _CERT_LOGOTYPE_EXT_INFO$pSubjectLogo$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_EXT_INFO$pSubjectLogo$VH_ = MemoryHandles.asAddressVarHandle(_CERT_LOGOTYPE_EXT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pSubjectLogo")));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_EXT_INFO$pSubjectLogo$VH() { return _CERT_LOGOTYPE_EXT_INFO$pSubjectLogo$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_EXT_INFO$cOtherLogo$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_EXT_INFO$cOtherLogo$LAYOUT() { return _CERT_LOGOTYPE_EXT_INFO$cOtherLogo$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_EXT_INFO$cOtherLogo$VH_ = _CERT_LOGOTYPE_EXT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cOtherLogo"));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_EXT_INFO$cOtherLogo$VH() { return _CERT_LOGOTYPE_EXT_INFO$cOtherLogo$VH_; }

    static final MemoryLayout _CERT_LOGOTYPE_EXT_INFO$rgOtherLogo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_LOGOTYPE_EXT_INFO$rgOtherLogo$LAYOUT() { return _CERT_LOGOTYPE_EXT_INFO$rgOtherLogo$LAYOUT_; }

    static final VarHandle _CERT_LOGOTYPE_EXT_INFO$rgOtherLogo$VH_ = MemoryHandles.asAddressVarHandle(_CERT_LOGOTYPE_EXT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgOtherLogo")));
    static final java.lang.invoke.VarHandle _CERT_LOGOTYPE_EXT_INFO$rgOtherLogo$VH() { return _CERT_LOGOTYPE_EXT_INFO$rgOtherLogo$VH_; }

    static final MemoryLayout _CERT_BIOMETRIC_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwTypeOfBiometricDataChoice"),
        MemoryLayout.ofPaddingBits(32),
        C_LONG.withName("dwPredefined"),
        C_POINTER.withName("pszObjId"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_POINTER.withName("pszObjId"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("Parameters")
            ).withName("HashAlgorithm"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Hash"),
            C_POINTER.withName("pwszUrl")
        ).withName("HashedUrl")
    ).withName("_CERT_BIOMETRIC_DATA");
    static final jdk.incubator.foreign.MemoryLayout _CERT_BIOMETRIC_DATA$struct$LAYOUT() { return _CERT_BIOMETRIC_DATA$struct$LAYOUT_; }

    static final MemoryLayout _CERT_BIOMETRIC_DATA$dwTypeOfBiometricDataChoice$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_BIOMETRIC_DATA$dwTypeOfBiometricDataChoice$LAYOUT() { return _CERT_BIOMETRIC_DATA$dwTypeOfBiometricDataChoice$LAYOUT_; }

    static final VarHandle _CERT_BIOMETRIC_DATA$dwTypeOfBiometricDataChoice$VH_ = _CERT_BIOMETRIC_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwTypeOfBiometricDataChoice"));
    static final java.lang.invoke.VarHandle _CERT_BIOMETRIC_DATA$dwTypeOfBiometricDataChoice$VH() { return _CERT_BIOMETRIC_DATA$dwTypeOfBiometricDataChoice$VH_; }

    static final MemoryLayout _CERT_BIOMETRIC_DATA$dwPredefined$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_BIOMETRIC_DATA$dwPredefined$LAYOUT() { return _CERT_BIOMETRIC_DATA$dwPredefined$LAYOUT_; }

    static final VarHandle _CERT_BIOMETRIC_DATA$dwPredefined$VH_ = _CERT_BIOMETRIC_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwPredefined"));
    static final java.lang.invoke.VarHandle _CERT_BIOMETRIC_DATA$dwPredefined$VH() { return _CERT_BIOMETRIC_DATA$dwPredefined$VH_; }

    static final MemoryLayout _CERT_BIOMETRIC_DATA$pszObjId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_BIOMETRIC_DATA$pszObjId$LAYOUT() { return _CERT_BIOMETRIC_DATA$pszObjId$LAYOUT_; }

    static final VarHandle _CERT_BIOMETRIC_DATA$pszObjId$VH_ = MemoryHandles.asAddressVarHandle(_CERT_BIOMETRIC_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszObjId")));
    static final java.lang.invoke.VarHandle _CERT_BIOMETRIC_DATA$pszObjId$VH() { return _CERT_BIOMETRIC_DATA$pszObjId$VH_; }

    static final MemoryLayout _CERT_BIOMETRIC_EXT_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cBiometricData"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgBiometricData")
    ).withName("_CERT_BIOMETRIC_EXT_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CERT_BIOMETRIC_EXT_INFO$struct$LAYOUT() { return _CERT_BIOMETRIC_EXT_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CERT_BIOMETRIC_EXT_INFO$cBiometricData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_BIOMETRIC_EXT_INFO$cBiometricData$LAYOUT() { return _CERT_BIOMETRIC_EXT_INFO$cBiometricData$LAYOUT_; }

    static final VarHandle _CERT_BIOMETRIC_EXT_INFO$cBiometricData$VH_ = _CERT_BIOMETRIC_EXT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cBiometricData"));
    static final java.lang.invoke.VarHandle _CERT_BIOMETRIC_EXT_INFO$cBiometricData$VH() { return _CERT_BIOMETRIC_EXT_INFO$cBiometricData$VH_; }

    static final MemoryLayout _CERT_BIOMETRIC_EXT_INFO$rgBiometricData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_BIOMETRIC_EXT_INFO$rgBiometricData$LAYOUT() { return _CERT_BIOMETRIC_EXT_INFO$rgBiometricData$LAYOUT_; }

    static final VarHandle _CERT_BIOMETRIC_EXT_INFO$rgBiometricData$VH_ = MemoryHandles.asAddressVarHandle(_CERT_BIOMETRIC_EXT_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgBiometricData")));
    static final java.lang.invoke.VarHandle _CERT_BIOMETRIC_EXT_INFO$rgBiometricData$VH() { return _CERT_BIOMETRIC_EXT_INFO$rgBiometricData$VH_; }

    static final MemoryLayout _OCSP_SIGNATURE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("SignatureAlgorithm"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData"),
            C_LONG.withName("cUnusedBits"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("Signature"),
        C_LONG.withName("cCertEncoded"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgCertEncoded")
    ).withName("_OCSP_SIGNATURE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _OCSP_SIGNATURE_INFO$struct$LAYOUT() { return _OCSP_SIGNATURE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _OCSP_SIGNATURE_INFO$cCertEncoded$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_SIGNATURE_INFO$cCertEncoded$LAYOUT() { return _OCSP_SIGNATURE_INFO$cCertEncoded$LAYOUT_; }

    static final VarHandle _OCSP_SIGNATURE_INFO$cCertEncoded$VH_ = _OCSP_SIGNATURE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cCertEncoded"));
    static final java.lang.invoke.VarHandle _OCSP_SIGNATURE_INFO$cCertEncoded$VH() { return _OCSP_SIGNATURE_INFO$cCertEncoded$VH_; }

    static final MemoryLayout _OCSP_SIGNATURE_INFO$rgCertEncoded$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_SIGNATURE_INFO$rgCertEncoded$LAYOUT() { return _OCSP_SIGNATURE_INFO$rgCertEncoded$LAYOUT_; }

    static final VarHandle _OCSP_SIGNATURE_INFO$rgCertEncoded$VH_ = MemoryHandles.asAddressVarHandle(_OCSP_SIGNATURE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgCertEncoded")));
    static final java.lang.invoke.VarHandle _OCSP_SIGNATURE_INFO$rgCertEncoded$VH() { return _OCSP_SIGNATURE_INFO$rgCertEncoded$VH_; }

    static final MemoryLayout _OCSP_SIGNED_REQUEST_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("ToBeSigned"),
        C_POINTER.withName("pOptionalSignatureInfo")
    ).withName("_OCSP_SIGNED_REQUEST_INFO");
    static final jdk.incubator.foreign.MemoryLayout _OCSP_SIGNED_REQUEST_INFO$struct$LAYOUT() { return _OCSP_SIGNED_REQUEST_INFO$struct$LAYOUT_; }

    static final MemoryLayout _OCSP_SIGNED_REQUEST_INFO$pOptionalSignatureInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_SIGNED_REQUEST_INFO$pOptionalSignatureInfo$LAYOUT() { return _OCSP_SIGNED_REQUEST_INFO$pOptionalSignatureInfo$LAYOUT_; }

    static final VarHandle _OCSP_SIGNED_REQUEST_INFO$pOptionalSignatureInfo$VH_ = MemoryHandles.asAddressVarHandle(_OCSP_SIGNED_REQUEST_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pOptionalSignatureInfo")));
    static final java.lang.invoke.VarHandle _OCSP_SIGNED_REQUEST_INFO$pOptionalSignatureInfo$VH() { return _OCSP_SIGNED_REQUEST_INFO$pOptionalSignatureInfo$VH_; }

    static final MemoryLayout _OCSP_CERT_ID$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("HashAlgorithm"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("IssuerNameHash"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("IssuerKeyHash"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("SerialNumber")
    ).withName("_OCSP_CERT_ID");
    static final jdk.incubator.foreign.MemoryLayout _OCSP_CERT_ID$struct$LAYOUT() { return _OCSP_CERT_ID$struct$LAYOUT_; }

    static final MemoryLayout _OCSP_REQUEST_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_POINTER.withName("pszObjId"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("Parameters")
            ).withName("HashAlgorithm"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("IssuerNameHash"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("IssuerKeyHash"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("SerialNumber")
        ).withName("CertId"),
        C_LONG.withName("cExtension"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgExtension")
    ).withName("_OCSP_REQUEST_ENTRY");
    static final jdk.incubator.foreign.MemoryLayout _OCSP_REQUEST_ENTRY$struct$LAYOUT() { return _OCSP_REQUEST_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _OCSP_REQUEST_ENTRY$cExtension$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_REQUEST_ENTRY$cExtension$LAYOUT() { return _OCSP_REQUEST_ENTRY$cExtension$LAYOUT_; }

    static final VarHandle _OCSP_REQUEST_ENTRY$cExtension$VH_ = _OCSP_REQUEST_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cExtension"));
    static final java.lang.invoke.VarHandle _OCSP_REQUEST_ENTRY$cExtension$VH() { return _OCSP_REQUEST_ENTRY$cExtension$VH_; }

    static final MemoryLayout _OCSP_REQUEST_ENTRY$rgExtension$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_REQUEST_ENTRY$rgExtension$LAYOUT() { return _OCSP_REQUEST_ENTRY$rgExtension$LAYOUT_; }

    static final VarHandle _OCSP_REQUEST_ENTRY$rgExtension$VH_ = MemoryHandles.asAddressVarHandle(_OCSP_REQUEST_ENTRY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgExtension")));
    static final java.lang.invoke.VarHandle _OCSP_REQUEST_ENTRY$rgExtension$VH() { return _OCSP_REQUEST_ENTRY$rgExtension$VH_; }

    static final MemoryLayout _OCSP_REQUEST_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwVersion"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pRequestorName"),
        C_LONG.withName("cRequestEntry"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgRequestEntry"),
        C_LONG.withName("cExtension"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgExtension")
    ).withName("_OCSP_REQUEST_INFO");
    static final jdk.incubator.foreign.MemoryLayout _OCSP_REQUEST_INFO$struct$LAYOUT() { return _OCSP_REQUEST_INFO$struct$LAYOUT_; }

    static final MemoryLayout _OCSP_REQUEST_INFO$dwVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_REQUEST_INFO$dwVersion$LAYOUT() { return _OCSP_REQUEST_INFO$dwVersion$LAYOUT_; }

    static final VarHandle _OCSP_REQUEST_INFO$dwVersion$VH_ = _OCSP_REQUEST_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersion"));
    static final java.lang.invoke.VarHandle _OCSP_REQUEST_INFO$dwVersion$VH() { return _OCSP_REQUEST_INFO$dwVersion$VH_; }

    static final MemoryLayout _OCSP_REQUEST_INFO$pRequestorName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_REQUEST_INFO$pRequestorName$LAYOUT() { return _OCSP_REQUEST_INFO$pRequestorName$LAYOUT_; }

    static final VarHandle _OCSP_REQUEST_INFO$pRequestorName$VH_ = MemoryHandles.asAddressVarHandle(_OCSP_REQUEST_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pRequestorName")));
    static final java.lang.invoke.VarHandle _OCSP_REQUEST_INFO$pRequestorName$VH() { return _OCSP_REQUEST_INFO$pRequestorName$VH_; }

    static final MemoryLayout _OCSP_REQUEST_INFO$cRequestEntry$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_REQUEST_INFO$cRequestEntry$LAYOUT() { return _OCSP_REQUEST_INFO$cRequestEntry$LAYOUT_; }

    static final VarHandle _OCSP_REQUEST_INFO$cRequestEntry$VH_ = _OCSP_REQUEST_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cRequestEntry"));
    static final java.lang.invoke.VarHandle _OCSP_REQUEST_INFO$cRequestEntry$VH() { return _OCSP_REQUEST_INFO$cRequestEntry$VH_; }

    static final MemoryLayout _OCSP_REQUEST_INFO$rgRequestEntry$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_REQUEST_INFO$rgRequestEntry$LAYOUT() { return _OCSP_REQUEST_INFO$rgRequestEntry$LAYOUT_; }

    static final VarHandle _OCSP_REQUEST_INFO$rgRequestEntry$VH_ = MemoryHandles.asAddressVarHandle(_OCSP_REQUEST_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgRequestEntry")));
    static final java.lang.invoke.VarHandle _OCSP_REQUEST_INFO$rgRequestEntry$VH() { return _OCSP_REQUEST_INFO$rgRequestEntry$VH_; }

    static final MemoryLayout _OCSP_REQUEST_INFO$cExtension$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_REQUEST_INFO$cExtension$LAYOUT() { return _OCSP_REQUEST_INFO$cExtension$LAYOUT_; }

    static final VarHandle _OCSP_REQUEST_INFO$cExtension$VH_ = _OCSP_REQUEST_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cExtension"));
    static final java.lang.invoke.VarHandle _OCSP_REQUEST_INFO$cExtension$VH() { return _OCSP_REQUEST_INFO$cExtension$VH_; }

    static final MemoryLayout _OCSP_REQUEST_INFO$rgExtension$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_REQUEST_INFO$rgExtension$LAYOUT() { return _OCSP_REQUEST_INFO$rgExtension$LAYOUT_; }

    static final VarHandle _OCSP_REQUEST_INFO$rgExtension$VH_ = MemoryHandles.asAddressVarHandle(_OCSP_REQUEST_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgExtension")));
    static final java.lang.invoke.VarHandle _OCSP_REQUEST_INFO$rgExtension$VH() { return _OCSP_REQUEST_INFO$rgExtension$VH_; }

    static final MemoryLayout _OCSP_RESPONSE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwStatus"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pszObjId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("Value")
    ).withName("_OCSP_RESPONSE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _OCSP_RESPONSE_INFO$struct$LAYOUT() { return _OCSP_RESPONSE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _OCSP_RESPONSE_INFO$dwStatus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_RESPONSE_INFO$dwStatus$LAYOUT() { return _OCSP_RESPONSE_INFO$dwStatus$LAYOUT_; }

    static final VarHandle _OCSP_RESPONSE_INFO$dwStatus$VH_ = _OCSP_RESPONSE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStatus"));
    static final java.lang.invoke.VarHandle _OCSP_RESPONSE_INFO$dwStatus$VH() { return _OCSP_RESPONSE_INFO$dwStatus$VH_; }

    static final MemoryLayout _OCSP_RESPONSE_INFO$pszObjId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_RESPONSE_INFO$pszObjId$LAYOUT() { return _OCSP_RESPONSE_INFO$pszObjId$LAYOUT_; }

    static final VarHandle _OCSP_RESPONSE_INFO$pszObjId$VH_ = MemoryHandles.asAddressVarHandle(_OCSP_RESPONSE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszObjId")));
    static final java.lang.invoke.VarHandle _OCSP_RESPONSE_INFO$pszObjId$VH() { return _OCSP_RESPONSE_INFO$pszObjId$VH_; }

    static final MemoryLayout _OCSP_BASIC_SIGNED_RESPONSE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("ToBeSigned"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_POINTER.withName("pszObjId"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("Parameters")
            ).withName("SignatureAlgorithm"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData"),
                C_LONG.withName("cUnusedBits"),
                MemoryLayout.ofPaddingBits(32)
            ).withName("Signature"),
            C_LONG.withName("cCertEncoded"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("rgCertEncoded")
        ).withName("SignatureInfo")
    ).withName("_OCSP_BASIC_SIGNED_RESPONSE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _OCSP_BASIC_SIGNED_RESPONSE_INFO$struct$LAYOUT() { return _OCSP_BASIC_SIGNED_RESPONSE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _OCSP_BASIC_REVOKED_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("RevocationDate"),
        C_LONG.withName("dwCrlReasonCode")
    ).withName("_OCSP_BASIC_REVOKED_INFO");
    static final jdk.incubator.foreign.MemoryLayout _OCSP_BASIC_REVOKED_INFO$struct$LAYOUT() { return _OCSP_BASIC_REVOKED_INFO$struct$LAYOUT_; }

    static final MemoryLayout _OCSP_BASIC_REVOKED_INFO$dwCrlReasonCode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_BASIC_REVOKED_INFO$dwCrlReasonCode$LAYOUT() { return _OCSP_BASIC_REVOKED_INFO$dwCrlReasonCode$LAYOUT_; }

    static final VarHandle _OCSP_BASIC_REVOKED_INFO$dwCrlReasonCode$VH_ = _OCSP_BASIC_REVOKED_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCrlReasonCode"));
    static final java.lang.invoke.VarHandle _OCSP_BASIC_REVOKED_INFO$dwCrlReasonCode$VH() { return _OCSP_BASIC_REVOKED_INFO$dwCrlReasonCode$VH_; }

    static final MemoryLayout _OCSP_BASIC_RESPONSE_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_POINTER.withName("pszObjId"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbData"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pbData")
                ).withName("Parameters")
            ).withName("HashAlgorithm"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("IssuerNameHash"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("IssuerKeyHash"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("SerialNumber")
        ).withName("CertId"),
        C_LONG.withName("dwCertStatus"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pRevokedInfo"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("ThisUpdate"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("NextUpdate"),
        C_LONG.withName("cExtension"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgExtension")
    ).withName("_OCSP_BASIC_RESPONSE_ENTRY");
    static final jdk.incubator.foreign.MemoryLayout _OCSP_BASIC_RESPONSE_ENTRY$struct$LAYOUT() { return _OCSP_BASIC_RESPONSE_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _OCSP_BASIC_RESPONSE_ENTRY$dwCertStatus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_BASIC_RESPONSE_ENTRY$dwCertStatus$LAYOUT() { return _OCSP_BASIC_RESPONSE_ENTRY$dwCertStatus$LAYOUT_; }

    static final VarHandle _OCSP_BASIC_RESPONSE_ENTRY$dwCertStatus$VH_ = _OCSP_BASIC_RESPONSE_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCertStatus"));
    static final java.lang.invoke.VarHandle _OCSP_BASIC_RESPONSE_ENTRY$dwCertStatus$VH() { return _OCSP_BASIC_RESPONSE_ENTRY$dwCertStatus$VH_; }

    static final MemoryLayout _OCSP_BASIC_RESPONSE_ENTRY$pRevokedInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_BASIC_RESPONSE_ENTRY$pRevokedInfo$LAYOUT() { return _OCSP_BASIC_RESPONSE_ENTRY$pRevokedInfo$LAYOUT_; }

    static final VarHandle _OCSP_BASIC_RESPONSE_ENTRY$pRevokedInfo$VH_ = MemoryHandles.asAddressVarHandle(_OCSP_BASIC_RESPONSE_ENTRY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pRevokedInfo")));
    static final java.lang.invoke.VarHandle _OCSP_BASIC_RESPONSE_ENTRY$pRevokedInfo$VH() { return _OCSP_BASIC_RESPONSE_ENTRY$pRevokedInfo$VH_; }

    static final MemoryLayout _OCSP_BASIC_RESPONSE_ENTRY$cExtension$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_BASIC_RESPONSE_ENTRY$cExtension$LAYOUT() { return _OCSP_BASIC_RESPONSE_ENTRY$cExtension$LAYOUT_; }

    static final VarHandle _OCSP_BASIC_RESPONSE_ENTRY$cExtension$VH_ = _OCSP_BASIC_RESPONSE_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cExtension"));
    static final java.lang.invoke.VarHandle _OCSP_BASIC_RESPONSE_ENTRY$cExtension$VH() { return _OCSP_BASIC_RESPONSE_ENTRY$cExtension$VH_; }

    static final MemoryLayout _OCSP_BASIC_RESPONSE_ENTRY$rgExtension$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_BASIC_RESPONSE_ENTRY$rgExtension$LAYOUT() { return _OCSP_BASIC_RESPONSE_ENTRY$rgExtension$LAYOUT_; }

    static final VarHandle _OCSP_BASIC_RESPONSE_ENTRY$rgExtension$VH_ = MemoryHandles.asAddressVarHandle(_OCSP_BASIC_RESPONSE_ENTRY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgExtension")));
    static final java.lang.invoke.VarHandle _OCSP_BASIC_RESPONSE_ENTRY$rgExtension$VH() { return _OCSP_BASIC_RESPONSE_ENTRY$rgExtension$VH_; }

    static final MemoryLayout _OCSP_BASIC_RESPONSE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwVersion"),
        C_LONG.withName("dwResponderIdChoice"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("ByNameResponderId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("ByKeyResponderId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("ProducedAt"),
        C_LONG.withName("cResponseEntry"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgResponseEntry"),
        C_LONG.withName("cExtension"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgExtension")
    ).withName("_OCSP_BASIC_RESPONSE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _OCSP_BASIC_RESPONSE_INFO$struct$LAYOUT() { return _OCSP_BASIC_RESPONSE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _OCSP_BASIC_RESPONSE_INFO$dwVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_BASIC_RESPONSE_INFO$dwVersion$LAYOUT() { return _OCSP_BASIC_RESPONSE_INFO$dwVersion$LAYOUT_; }

    static final VarHandle _OCSP_BASIC_RESPONSE_INFO$dwVersion$VH_ = _OCSP_BASIC_RESPONSE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersion"));
    static final java.lang.invoke.VarHandle _OCSP_BASIC_RESPONSE_INFO$dwVersion$VH() { return _OCSP_BASIC_RESPONSE_INFO$dwVersion$VH_; }

    static final MemoryLayout _OCSP_BASIC_RESPONSE_INFO$dwResponderIdChoice$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_BASIC_RESPONSE_INFO$dwResponderIdChoice$LAYOUT() { return _OCSP_BASIC_RESPONSE_INFO$dwResponderIdChoice$LAYOUT_; }

    static final VarHandle _OCSP_BASIC_RESPONSE_INFO$dwResponderIdChoice$VH_ = _OCSP_BASIC_RESPONSE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwResponderIdChoice"));
    static final java.lang.invoke.VarHandle _OCSP_BASIC_RESPONSE_INFO$dwResponderIdChoice$VH() { return _OCSP_BASIC_RESPONSE_INFO$dwResponderIdChoice$VH_; }

    static final MemoryLayout _OCSP_BASIC_RESPONSE_INFO$cResponseEntry$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_BASIC_RESPONSE_INFO$cResponseEntry$LAYOUT() { return _OCSP_BASIC_RESPONSE_INFO$cResponseEntry$LAYOUT_; }

    static final VarHandle _OCSP_BASIC_RESPONSE_INFO$cResponseEntry$VH_ = _OCSP_BASIC_RESPONSE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cResponseEntry"));
    static final java.lang.invoke.VarHandle _OCSP_BASIC_RESPONSE_INFO$cResponseEntry$VH() { return _OCSP_BASIC_RESPONSE_INFO$cResponseEntry$VH_; }

    static final MemoryLayout _OCSP_BASIC_RESPONSE_INFO$rgResponseEntry$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_BASIC_RESPONSE_INFO$rgResponseEntry$LAYOUT() { return _OCSP_BASIC_RESPONSE_INFO$rgResponseEntry$LAYOUT_; }

    static final VarHandle _OCSP_BASIC_RESPONSE_INFO$rgResponseEntry$VH_ = MemoryHandles.asAddressVarHandle(_OCSP_BASIC_RESPONSE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgResponseEntry")));
    static final java.lang.invoke.VarHandle _OCSP_BASIC_RESPONSE_INFO$rgResponseEntry$VH() { return _OCSP_BASIC_RESPONSE_INFO$rgResponseEntry$VH_; }

    static final MemoryLayout _OCSP_BASIC_RESPONSE_INFO$cExtension$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_BASIC_RESPONSE_INFO$cExtension$LAYOUT() { return _OCSP_BASIC_RESPONSE_INFO$cExtension$LAYOUT_; }

    static final VarHandle _OCSP_BASIC_RESPONSE_INFO$cExtension$VH_ = _OCSP_BASIC_RESPONSE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cExtension"));
    static final java.lang.invoke.VarHandle _OCSP_BASIC_RESPONSE_INFO$cExtension$VH() { return _OCSP_BASIC_RESPONSE_INFO$cExtension$VH_; }

    static final MemoryLayout _OCSP_BASIC_RESPONSE_INFO$rgExtension$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _OCSP_BASIC_RESPONSE_INFO$rgExtension$LAYOUT() { return _OCSP_BASIC_RESPONSE_INFO$rgExtension$LAYOUT_; }

    static final VarHandle _OCSP_BASIC_RESPONSE_INFO$rgExtension$VH_ = MemoryHandles.asAddressVarHandle(_OCSP_BASIC_RESPONSE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgExtension")));
    static final java.lang.invoke.VarHandle _OCSP_BASIC_RESPONSE_INFO$rgExtension$VH() { return _OCSP_BASIC_RESPONSE_INFO$rgExtension$VH_; }

    static final MemoryLayout _CERT_SUPPORTED_ALGORITHM_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("Algorithm"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData"),
            C_LONG.withName("cUnusedBits"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("IntendedKeyUsage"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cPolicyInfo"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("rgPolicyInfo")
        ).withName("IntendedCertPolicies")
    ).withName("_CERT_SUPPORTED_ALGORITHM_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CERT_SUPPORTED_ALGORITHM_INFO$struct$LAYOUT() { return _CERT_SUPPORTED_ALGORITHM_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CERT_TPM_SPECIFICATION_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pwszFamily"),
        C_LONG.withName("dwLevel"),
        C_LONG.withName("dwRevision")
    ).withName("_CERT_TPM_SPECIFICATION_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CERT_TPM_SPECIFICATION_INFO$struct$LAYOUT() { return _CERT_TPM_SPECIFICATION_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CERT_TPM_SPECIFICATION_INFO$pwszFamily$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_TPM_SPECIFICATION_INFO$pwszFamily$LAYOUT() { return _CERT_TPM_SPECIFICATION_INFO$pwszFamily$LAYOUT_; }

    static final VarHandle _CERT_TPM_SPECIFICATION_INFO$pwszFamily$VH_ = MemoryHandles.asAddressVarHandle(_CERT_TPM_SPECIFICATION_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszFamily")));
    static final java.lang.invoke.VarHandle _CERT_TPM_SPECIFICATION_INFO$pwszFamily$VH() { return _CERT_TPM_SPECIFICATION_INFO$pwszFamily$VH_; }

    static final MemoryLayout _CERT_TPM_SPECIFICATION_INFO$dwLevel$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_TPM_SPECIFICATION_INFO$dwLevel$LAYOUT() { return _CERT_TPM_SPECIFICATION_INFO$dwLevel$LAYOUT_; }

    static final VarHandle _CERT_TPM_SPECIFICATION_INFO$dwLevel$VH_ = _CERT_TPM_SPECIFICATION_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwLevel"));
    static final java.lang.invoke.VarHandle _CERT_TPM_SPECIFICATION_INFO$dwLevel$VH() { return _CERT_TPM_SPECIFICATION_INFO$dwLevel$VH_; }

    static final MemoryLayout _CERT_TPM_SPECIFICATION_INFO$dwRevision$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_TPM_SPECIFICATION_INFO$dwRevision$LAYOUT() { return _CERT_TPM_SPECIFICATION_INFO$dwRevision$LAYOUT_; }

    static final VarHandle _CERT_TPM_SPECIFICATION_INFO$dwRevision$VH_ = _CERT_TPM_SPECIFICATION_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRevision"));
    static final java.lang.invoke.VarHandle _CERT_TPM_SPECIFICATION_INFO$dwRevision$VH() { return _CERT_TPM_SPECIFICATION_INFO$dwRevision$VH_; }

    static final MemoryLayout _CRYPT_OID_FUNC_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pszOID"),
        C_POINTER.withName("pvFuncAddr")
    ).withName("_CRYPT_OID_FUNC_ENTRY");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_OID_FUNC_ENTRY$struct$LAYOUT() { return _CRYPT_OID_FUNC_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_OID_FUNC_ENTRY$pszOID$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_OID_FUNC_ENTRY$pszOID$LAYOUT() { return _CRYPT_OID_FUNC_ENTRY$pszOID$LAYOUT_; }

    static final VarHandle _CRYPT_OID_FUNC_ENTRY$pszOID$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_OID_FUNC_ENTRY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszOID")));
    static final java.lang.invoke.VarHandle _CRYPT_OID_FUNC_ENTRY$pszOID$VH() { return _CRYPT_OID_FUNC_ENTRY$pszOID$VH_; }

    static final MemoryLayout _CRYPT_OID_FUNC_ENTRY$pvFuncAddr$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_OID_FUNC_ENTRY$pvFuncAddr$LAYOUT() { return _CRYPT_OID_FUNC_ENTRY$pvFuncAddr$LAYOUT_; }

    static final VarHandle _CRYPT_OID_FUNC_ENTRY$pvFuncAddr$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_OID_FUNC_ENTRY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvFuncAddr")));
    static final java.lang.invoke.VarHandle _CRYPT_OID_FUNC_ENTRY$pvFuncAddr$VH() { return _CRYPT_OID_FUNC_ENTRY$pvFuncAddr$VH_; }

    static final FunctionDescriptor CryptInstallOIDFunctionAddress$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptInstallOIDFunctionAddress$FUNC() { return CryptInstallOIDFunctionAddress$FUNC_; }

    static final MethodHandle CryptInstallOIDFunctionAddress$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptInstallOIDFunctionAddress",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        CryptInstallOIDFunctionAddress$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptInstallOIDFunctionAddress$MH() { return CryptInstallOIDFunctionAddress$MH_; }

    static final FunctionDescriptor CryptInitOIDFunctionSet$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptInitOIDFunctionSet$FUNC() { return CryptInitOIDFunctionSet$FUNC_; }

    static final MethodHandle CryptInitOIDFunctionSet$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptInitOIDFunctionSet",
        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        CryptInitOIDFunctionSet$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptInitOIDFunctionSet$MH() { return CryptInitOIDFunctionSet$MH_; }

    static final FunctionDescriptor CryptGetOIDFunctionAddress$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptGetOIDFunctionAddress$FUNC() { return CryptGetOIDFunctionAddress$FUNC_; }

    static final MethodHandle CryptGetOIDFunctionAddress$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptGetOIDFunctionAddress",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptGetOIDFunctionAddress$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptGetOIDFunctionAddress$MH() { return CryptGetOIDFunctionAddress$MH_; }

    static final FunctionDescriptor CryptGetDefaultOIDDllList$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptGetDefaultOIDDllList$FUNC() { return CryptGetDefaultOIDDllList$FUNC_; }

    static final MethodHandle CryptGetDefaultOIDDllList$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptGetDefaultOIDDllList",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptGetDefaultOIDDllList$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptGetDefaultOIDDllList$MH() { return CryptGetDefaultOIDDllList$MH_; }

    static final FunctionDescriptor CryptGetDefaultOIDFunctionAddress$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptGetDefaultOIDFunctionAddress$FUNC() { return CryptGetDefaultOIDFunctionAddress$FUNC_; }

    static final MethodHandle CryptGetDefaultOIDFunctionAddress$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptGetDefaultOIDFunctionAddress",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptGetDefaultOIDFunctionAddress$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptGetDefaultOIDFunctionAddress$MH() { return CryptGetDefaultOIDFunctionAddress$MH_; }

    static final FunctionDescriptor CryptFreeOIDFunctionAddress$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptFreeOIDFunctionAddress$FUNC() { return CryptFreeOIDFunctionAddress$FUNC_; }

    static final MethodHandle CryptFreeOIDFunctionAddress$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptFreeOIDFunctionAddress",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        CryptFreeOIDFunctionAddress$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptFreeOIDFunctionAddress$MH() { return CryptFreeOIDFunctionAddress$MH_; }

    static final FunctionDescriptor CryptRegisterOIDFunction$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptRegisterOIDFunction$FUNC() { return CryptRegisterOIDFunction$FUNC_; }

    static final MethodHandle CryptRegisterOIDFunction$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptRegisterOIDFunction",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptRegisterOIDFunction$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptRegisterOIDFunction$MH() { return CryptRegisterOIDFunction$MH_; }

    static final FunctionDescriptor CryptUnregisterOIDFunction$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptUnregisterOIDFunction$FUNC() { return CryptUnregisterOIDFunction$FUNC_; }

    static final MethodHandle CryptUnregisterOIDFunction$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptUnregisterOIDFunction",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptUnregisterOIDFunction$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptUnregisterOIDFunction$MH() { return CryptUnregisterOIDFunction$MH_; }

    static final FunctionDescriptor CryptRegisterDefaultOIDFunction$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptRegisterDefaultOIDFunction$FUNC() { return CryptRegisterDefaultOIDFunction$FUNC_; }

    static final MethodHandle CryptRegisterDefaultOIDFunction$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptRegisterDefaultOIDFunction",
        "(ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        CryptRegisterDefaultOIDFunction$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptRegisterDefaultOIDFunction$MH() { return CryptRegisterDefaultOIDFunction$MH_; }

    static final FunctionDescriptor CryptUnregisterDefaultOIDFunction$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptUnregisterDefaultOIDFunction$FUNC() { return CryptUnregisterDefaultOIDFunction$FUNC_; }

    static final MethodHandle CryptUnregisterDefaultOIDFunction$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptUnregisterDefaultOIDFunction",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptUnregisterDefaultOIDFunction$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptUnregisterDefaultOIDFunction$MH() { return CryptUnregisterDefaultOIDFunction$MH_; }

    static final FunctionDescriptor CryptSetOIDFunctionValue$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptSetOIDFunctionValue$FUNC() { return CryptSetOIDFunctionValue$FUNC_; }

    static final MethodHandle CryptSetOIDFunctionValue$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptSetOIDFunctionValue",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        CryptSetOIDFunctionValue$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptSetOIDFunctionValue$MH() { return CryptSetOIDFunctionValue$MH_; }

    static final FunctionDescriptor CryptGetOIDFunctionValue$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptGetOIDFunctionValue$FUNC() { return CryptGetOIDFunctionValue$FUNC_; }

    static final MethodHandle CryptGetOIDFunctionValue$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptGetOIDFunctionValue",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptGetOIDFunctionValue$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptGetOIDFunctionValue$MH() { return CryptGetOIDFunctionValue$MH_; }

    static final FunctionDescriptor CryptEnumOIDFunction$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptEnumOIDFunction$FUNC() { return CryptEnumOIDFunction$FUNC_; }

    static final MethodHandle CryptEnumOIDFunction$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptEnumOIDFunction",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptEnumOIDFunction$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptEnumOIDFunction$MH() { return CryptEnumOIDFunction$MH_; }

    static final FunctionDescriptor CryptEnumOIDFunction$pfnEnumOIDFunc$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptEnumOIDFunction$pfnEnumOIDFunc$FUNC() { return CryptEnumOIDFunction$pfnEnumOIDFunc$FUNC_; }

    static final MemoryLayout _CRYPT_OID_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pszOID"),
        C_POINTER.withName("pwszName"),
        C_LONG.withName("dwGroupId"),
        C_LONG.withName("dwValue"),
        C_INT.withName("Algid"),
        C_LONG.withName("dwLength"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("ExtraInfo")
    ).withName("_CRYPT_OID_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_OID_INFO$struct$LAYOUT() { return _CRYPT_OID_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_OID_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_OID_INFO$cbSize$LAYOUT() { return _CRYPT_OID_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CRYPT_OID_INFO$cbSize$VH_ = _CRYPT_OID_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CRYPT_OID_INFO$cbSize$VH() { return _CRYPT_OID_INFO$cbSize$VH_; }

    static final MemoryLayout _CRYPT_OID_INFO$pszOID$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_OID_INFO$pszOID$LAYOUT() { return _CRYPT_OID_INFO$pszOID$LAYOUT_; }

    static final VarHandle _CRYPT_OID_INFO$pszOID$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_OID_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszOID")));
    static final java.lang.invoke.VarHandle _CRYPT_OID_INFO$pszOID$VH() { return _CRYPT_OID_INFO$pszOID$VH_; }

    static final MemoryLayout _CRYPT_OID_INFO$pwszName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_OID_INFO$pwszName$LAYOUT() { return _CRYPT_OID_INFO$pwszName$LAYOUT_; }

    static final VarHandle _CRYPT_OID_INFO$pwszName$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_OID_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszName")));
    static final java.lang.invoke.VarHandle _CRYPT_OID_INFO$pwszName$VH() { return _CRYPT_OID_INFO$pwszName$VH_; }

    static final MemoryLayout _CRYPT_OID_INFO$dwGroupId$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_OID_INFO$dwGroupId$LAYOUT() { return _CRYPT_OID_INFO$dwGroupId$LAYOUT_; }

    static final VarHandle _CRYPT_OID_INFO$dwGroupId$VH_ = _CRYPT_OID_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwGroupId"));
    static final java.lang.invoke.VarHandle _CRYPT_OID_INFO$dwGroupId$VH() { return _CRYPT_OID_INFO$dwGroupId$VH_; }

    static final MemoryLayout _CRYPT_OID_INFO$dwValue$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_OID_INFO$dwValue$LAYOUT() { return _CRYPT_OID_INFO$dwValue$LAYOUT_; }

    static final VarHandle _CRYPT_OID_INFO$dwValue$VH_ = _CRYPT_OID_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwValue"));
    static final java.lang.invoke.VarHandle _CRYPT_OID_INFO$dwValue$VH() { return _CRYPT_OID_INFO$dwValue$VH_; }

    static final MemoryLayout _CRYPT_OID_INFO$Algid$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_OID_INFO$Algid$LAYOUT() { return _CRYPT_OID_INFO$Algid$LAYOUT_; }

    static final VarHandle _CRYPT_OID_INFO$Algid$VH_ = _CRYPT_OID_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Algid"));
    static final java.lang.invoke.VarHandle _CRYPT_OID_INFO$Algid$VH() { return _CRYPT_OID_INFO$Algid$VH_; }

    static final MemoryLayout _CRYPT_OID_INFO$dwLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_OID_INFO$dwLength$LAYOUT() { return _CRYPT_OID_INFO$dwLength$LAYOUT_; }

    static final VarHandle _CRYPT_OID_INFO$dwLength$VH_ = _CRYPT_OID_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwLength"));
    static final java.lang.invoke.VarHandle _CRYPT_OID_INFO$dwLength$VH() { return _CRYPT_OID_INFO$dwLength$VH_; }

    static final FunctionDescriptor CryptFindOIDInfo$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptFindOIDInfo$FUNC() { return CryptFindOIDInfo$FUNC_; }

    static final MethodHandle CryptFindOIDInfo$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptFindOIDInfo",
        "(ILjdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        CryptFindOIDInfo$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptFindOIDInfo$MH() { return CryptFindOIDInfo$MH_; }

    static final FunctionDescriptor CryptRegisterOIDInfo$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptRegisterOIDInfo$FUNC() { return CryptRegisterOIDInfo$FUNC_; }

    static final MethodHandle CryptRegisterOIDInfo$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptRegisterOIDInfo",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        CryptRegisterOIDInfo$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptRegisterOIDInfo$MH() { return CryptRegisterOIDInfo$MH_; }

    static final FunctionDescriptor CryptUnregisterOIDInfo$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptUnregisterOIDInfo$FUNC() { return CryptUnregisterOIDInfo$FUNC_; }

    static final MethodHandle CryptUnregisterOIDInfo$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptUnregisterOIDInfo",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptUnregisterOIDInfo$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptUnregisterOIDInfo$MH() { return CryptUnregisterOIDInfo$MH_; }

    static final FunctionDescriptor CryptEnumOIDInfo$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptEnumOIDInfo$FUNC() { return CryptEnumOIDInfo$FUNC_; }

    static final MethodHandle CryptEnumOIDInfo$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptEnumOIDInfo",
        "(IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptEnumOIDInfo$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptEnumOIDInfo$MH() { return CryptEnumOIDInfo$MH_; }

    static final FunctionDescriptor CryptEnumOIDInfo$pfnEnumOIDInfo$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptEnumOIDInfo$pfnEnumOIDInfo$FUNC() { return CryptEnumOIDInfo$pfnEnumOIDInfo$FUNC_; }

    static final FunctionDescriptor CryptFindLocalizedName$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptFindLocalizedName$FUNC() { return CryptFindLocalizedName$FUNC_; }

    static final MethodHandle CryptFindLocalizedName$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptFindLocalizedName",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CryptFindLocalizedName$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptFindLocalizedName$MH() { return CryptFindLocalizedName$MH_; }

    static final MemoryLayout _CERT_STRONG_SIGN_SERIALIZED_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwFlags"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pwszCNGSignHashAlgids"),
        C_POINTER.withName("pwszCNGPubKeyMinBitLengths")
    ).withName("_CERT_STRONG_SIGN_SERIALIZED_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CERT_STRONG_SIGN_SERIALIZED_INFO$struct$LAYOUT() { return _CERT_STRONG_SIGN_SERIALIZED_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CERT_STRONG_SIGN_SERIALIZED_INFO$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_STRONG_SIGN_SERIALIZED_INFO$dwFlags$LAYOUT() { return _CERT_STRONG_SIGN_SERIALIZED_INFO$dwFlags$LAYOUT_; }

    static final VarHandle _CERT_STRONG_SIGN_SERIALIZED_INFO$dwFlags$VH_ = _CERT_STRONG_SIGN_SERIALIZED_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _CERT_STRONG_SIGN_SERIALIZED_INFO$dwFlags$VH() { return _CERT_STRONG_SIGN_SERIALIZED_INFO$dwFlags$VH_; }

    static final MemoryLayout _CERT_STRONG_SIGN_SERIALIZED_INFO$pwszCNGSignHashAlgids$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_STRONG_SIGN_SERIALIZED_INFO$pwszCNGSignHashAlgids$LAYOUT() { return _CERT_STRONG_SIGN_SERIALIZED_INFO$pwszCNGSignHashAlgids$LAYOUT_; }

    static final VarHandle _CERT_STRONG_SIGN_SERIALIZED_INFO$pwszCNGSignHashAlgids$VH_ = MemoryHandles.asAddressVarHandle(_CERT_STRONG_SIGN_SERIALIZED_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszCNGSignHashAlgids")));
    static final java.lang.invoke.VarHandle _CERT_STRONG_SIGN_SERIALIZED_INFO$pwszCNGSignHashAlgids$VH() { return _CERT_STRONG_SIGN_SERIALIZED_INFO$pwszCNGSignHashAlgids$VH_; }

    static final MemoryLayout _CERT_STRONG_SIGN_SERIALIZED_INFO$pwszCNGPubKeyMinBitLengths$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_STRONG_SIGN_SERIALIZED_INFO$pwszCNGPubKeyMinBitLengths$LAYOUT() { return _CERT_STRONG_SIGN_SERIALIZED_INFO$pwszCNGPubKeyMinBitLengths$LAYOUT_; }

    static final VarHandle _CERT_STRONG_SIGN_SERIALIZED_INFO$pwszCNGPubKeyMinBitLengths$VH_ = MemoryHandles.asAddressVarHandle(_CERT_STRONG_SIGN_SERIALIZED_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszCNGPubKeyMinBitLengths")));
    static final java.lang.invoke.VarHandle _CERT_STRONG_SIGN_SERIALIZED_INFO$pwszCNGPubKeyMinBitLengths$VH() { return _CERT_STRONG_SIGN_SERIALIZED_INFO$pwszCNGPubKeyMinBitLengths$VH_; }

    static final MemoryLayout _CERT_STRONG_SIGN_PARA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwInfoChoice"),
        C_POINTER.withName("pvInfo"),
        C_POINTER.withName("pSerializedInfo"),
        C_POINTER.withName("pszOID")
    ).withName("_CERT_STRONG_SIGN_PARA");
    static final jdk.incubator.foreign.MemoryLayout _CERT_STRONG_SIGN_PARA$struct$LAYOUT() { return _CERT_STRONG_SIGN_PARA$struct$LAYOUT_; }

    static final MemoryLayout _CERT_STRONG_SIGN_PARA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_STRONG_SIGN_PARA$cbSize$LAYOUT() { return _CERT_STRONG_SIGN_PARA$cbSize$LAYOUT_; }

    static final VarHandle _CERT_STRONG_SIGN_PARA$cbSize$VH_ = _CERT_STRONG_SIGN_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CERT_STRONG_SIGN_PARA$cbSize$VH() { return _CERT_STRONG_SIGN_PARA$cbSize$VH_; }

    static final MemoryLayout _CERT_STRONG_SIGN_PARA$dwInfoChoice$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_STRONG_SIGN_PARA$dwInfoChoice$LAYOUT() { return _CERT_STRONG_SIGN_PARA$dwInfoChoice$LAYOUT_; }

    static final VarHandle _CERT_STRONG_SIGN_PARA$dwInfoChoice$VH_ = _CERT_STRONG_SIGN_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwInfoChoice"));
    static final java.lang.invoke.VarHandle _CERT_STRONG_SIGN_PARA$dwInfoChoice$VH() { return _CERT_STRONG_SIGN_PARA$dwInfoChoice$VH_; }

    static final MemoryLayout _CERT_STRONG_SIGN_PARA$pvInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_STRONG_SIGN_PARA$pvInfo$LAYOUT() { return _CERT_STRONG_SIGN_PARA$pvInfo$LAYOUT_; }

    static final VarHandle _CERT_STRONG_SIGN_PARA$pvInfo$VH_ = MemoryHandles.asAddressVarHandle(_CERT_STRONG_SIGN_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvInfo")));
    static final java.lang.invoke.VarHandle _CERT_STRONG_SIGN_PARA$pvInfo$VH() { return _CERT_STRONG_SIGN_PARA$pvInfo$VH_; }

}

