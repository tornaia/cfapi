// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$17 extends cfapi_h$constants$16 {

    /* package-private */ cfapi_h$constants$17() {}
    static final MemoryLayout _MEM_ADDRESS_REQUIREMENTS$HighestEndingAddress$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _MEM_ADDRESS_REQUIREMENTS$HighestEndingAddress$LAYOUT() { return _MEM_ADDRESS_REQUIREMENTS$HighestEndingAddress$LAYOUT_; }

    static final VarHandle _MEM_ADDRESS_REQUIREMENTS$HighestEndingAddress$VH_ = MemoryHandles.asAddressVarHandle(_MEM_ADDRESS_REQUIREMENTS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("HighestEndingAddress")));
    static final java.lang.invoke.VarHandle _MEM_ADDRESS_REQUIREMENTS$HighestEndingAddress$VH() { return _MEM_ADDRESS_REQUIREMENTS$HighestEndingAddress$VH_; }

    static final MemoryLayout _MEM_ADDRESS_REQUIREMENTS$Alignment$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _MEM_ADDRESS_REQUIREMENTS$Alignment$LAYOUT() { return _MEM_ADDRESS_REQUIREMENTS$Alignment$LAYOUT_; }

    static final VarHandle _MEM_ADDRESS_REQUIREMENTS$Alignment$VH_ = _MEM_ADDRESS_REQUIREMENTS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Alignment"));
    static final java.lang.invoke.VarHandle _MEM_ADDRESS_REQUIREMENTS$Alignment$VH() { return _MEM_ADDRESS_REQUIREMENTS$Alignment$VH_; }

    static final int MemExtendedParameterInvalidType() { return (int)0L; }

    static final int MemExtendedParameterAddressRequirements() { return (int)1L; }

    static final int MemExtendedParameterNumaNode() { return (int)2L; }

    static final int MemExtendedParameterPartitionHandle() { return (int)3L; }

    static final int MemExtendedParameterUserPhysicalHandle() { return (int)4L; }

    static final int MemExtendedParameterAttributeFlags() { return (int)5L; }

    static final int MemExtendedParameterMax() { return (int)6L; }

    static final MemoryLayout MEM_EXTENDED_PARAMETER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG,
        C_LONGLONG.withName("ULong64"),
        C_POINTER.withName("Pointer"),
        C_LONGLONG.withName("Size"),
        C_POINTER.withName("Handle"),
        C_LONG.withName("ULong")
    ).withName("MEM_EXTENDED_PARAMETER");
    static final jdk.incubator.foreign.MemoryLayout MEM_EXTENDED_PARAMETER$struct$LAYOUT() { return MEM_EXTENDED_PARAMETER$struct$LAYOUT_; }

    static final MemoryLayout MEM_EXTENDED_PARAMETER$ULong64$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout MEM_EXTENDED_PARAMETER$ULong64$LAYOUT() { return MEM_EXTENDED_PARAMETER$ULong64$LAYOUT_; }

    static final VarHandle MEM_EXTENDED_PARAMETER$ULong64$VH_ = MEM_EXTENDED_PARAMETER$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ULong64"));
    static final java.lang.invoke.VarHandle MEM_EXTENDED_PARAMETER$ULong64$VH() { return MEM_EXTENDED_PARAMETER$ULong64$VH_; }

    static final MemoryLayout MEM_EXTENDED_PARAMETER$Pointer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout MEM_EXTENDED_PARAMETER$Pointer$LAYOUT() { return MEM_EXTENDED_PARAMETER$Pointer$LAYOUT_; }

    static final VarHandle MEM_EXTENDED_PARAMETER$Pointer$VH_ = MemoryHandles.asAddressVarHandle(MEM_EXTENDED_PARAMETER$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Pointer")));
    static final java.lang.invoke.VarHandle MEM_EXTENDED_PARAMETER$Pointer$VH() { return MEM_EXTENDED_PARAMETER$Pointer$VH_; }

    static final MemoryLayout MEM_EXTENDED_PARAMETER$Size$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout MEM_EXTENDED_PARAMETER$Size$LAYOUT() { return MEM_EXTENDED_PARAMETER$Size$LAYOUT_; }

    static final VarHandle MEM_EXTENDED_PARAMETER$Size$VH_ = MEM_EXTENDED_PARAMETER$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle MEM_EXTENDED_PARAMETER$Size$VH() { return MEM_EXTENDED_PARAMETER$Size$VH_; }

    static final MemoryLayout MEM_EXTENDED_PARAMETER$Handle$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout MEM_EXTENDED_PARAMETER$Handle$LAYOUT() { return MEM_EXTENDED_PARAMETER$Handle$LAYOUT_; }

    static final VarHandle MEM_EXTENDED_PARAMETER$Handle$VH_ = MemoryHandles.asAddressVarHandle(MEM_EXTENDED_PARAMETER$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Handle")));
    static final java.lang.invoke.VarHandle MEM_EXTENDED_PARAMETER$Handle$VH() { return MEM_EXTENDED_PARAMETER$Handle$VH_; }

    static final MemoryLayout MEM_EXTENDED_PARAMETER$ULong$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout MEM_EXTENDED_PARAMETER$ULong$LAYOUT() { return MEM_EXTENDED_PARAMETER$ULong$LAYOUT_; }

    static final VarHandle MEM_EXTENDED_PARAMETER$ULong$VH_ = MEM_EXTENDED_PARAMETER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ULong"));
    static final java.lang.invoke.VarHandle MEM_EXTENDED_PARAMETER$ULong$VH() { return MEM_EXTENDED_PARAMETER$ULong$VH_; }

    static final int MemSectionExtendedParameterInvalidType() { return (int)0L; }

    static final int MemSectionExtendedParameterUserPhysicalFlags() { return (int)1L; }

    static final int MemSectionExtendedParameterNumaNode() { return (int)2L; }

    static final int MemSectionExtendedParameterMax() { return (int)3L; }

    static final MemoryLayout _ENCLAVE_CREATE_INFO_SGX$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(4096, C_CHAR).withName("Secs")
    ).withName("_ENCLAVE_CREATE_INFO_SGX");
    static final jdk.incubator.foreign.MemoryLayout _ENCLAVE_CREATE_INFO_SGX$struct$LAYOUT() { return _ENCLAVE_CREATE_INFO_SGX$struct$LAYOUT_; }

    static final MemoryLayout _ENCLAVE_INIT_INFO_SGX$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(1808, C_CHAR).withName("SigStruct"),
        MemoryLayout.ofSequence(240, C_CHAR).withName("Reserved1"),
        MemoryLayout.ofSequence(304, C_CHAR).withName("EInitToken"),
        MemoryLayout.ofSequence(1744, C_CHAR).withName("Reserved2")
    ).withName("_ENCLAVE_INIT_INFO_SGX");
    static final jdk.incubator.foreign.MemoryLayout _ENCLAVE_INIT_INFO_SGX$struct$LAYOUT() { return _ENCLAVE_INIT_INFO_SGX$struct$LAYOUT_; }

    static final MemoryLayout _ENCLAVE_CREATE_INFO_VBS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        MemoryLayout.ofSequence(32, C_CHAR).withName("OwnerID")
    ).withName("_ENCLAVE_CREATE_INFO_VBS");
    static final jdk.incubator.foreign.MemoryLayout _ENCLAVE_CREATE_INFO_VBS$struct$LAYOUT() { return _ENCLAVE_CREATE_INFO_VBS$struct$LAYOUT_; }

    static final MemoryLayout _ENCLAVE_CREATE_INFO_VBS$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ENCLAVE_CREATE_INFO_VBS$Flags$LAYOUT() { return _ENCLAVE_CREATE_INFO_VBS$Flags$LAYOUT_; }

    static final VarHandle _ENCLAVE_CREATE_INFO_VBS$Flags$VH_ = _ENCLAVE_CREATE_INFO_VBS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _ENCLAVE_CREATE_INFO_VBS$Flags$VH() { return _ENCLAVE_CREATE_INFO_VBS$Flags$VH_; }

    static final MemoryLayout _ENCLAVE_CREATE_INFO_VBS_BASIC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        MemoryLayout.ofSequence(32, C_CHAR).withName("OwnerID")
    ).withName("_ENCLAVE_CREATE_INFO_VBS_BASIC");
    static final jdk.incubator.foreign.MemoryLayout _ENCLAVE_CREATE_INFO_VBS_BASIC$struct$LAYOUT() { return _ENCLAVE_CREATE_INFO_VBS_BASIC$struct$LAYOUT_; }

    static final MemoryLayout _ENCLAVE_CREATE_INFO_VBS_BASIC$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ENCLAVE_CREATE_INFO_VBS_BASIC$Flags$LAYOUT() { return _ENCLAVE_CREATE_INFO_VBS_BASIC$Flags$LAYOUT_; }

    static final VarHandle _ENCLAVE_CREATE_INFO_VBS_BASIC$Flags$VH_ = _ENCLAVE_CREATE_INFO_VBS_BASIC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _ENCLAVE_CREATE_INFO_VBS_BASIC$Flags$VH() { return _ENCLAVE_CREATE_INFO_VBS_BASIC$Flags$VH_; }

    static final MemoryLayout _ENCLAVE_LOAD_DATA_VBS_BASIC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("PageType")
    ).withName("_ENCLAVE_LOAD_DATA_VBS_BASIC");
    static final jdk.incubator.foreign.MemoryLayout _ENCLAVE_LOAD_DATA_VBS_BASIC$struct$LAYOUT() { return _ENCLAVE_LOAD_DATA_VBS_BASIC$struct$LAYOUT_; }

    static final MemoryLayout _ENCLAVE_LOAD_DATA_VBS_BASIC$PageType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ENCLAVE_LOAD_DATA_VBS_BASIC$PageType$LAYOUT() { return _ENCLAVE_LOAD_DATA_VBS_BASIC$PageType$LAYOUT_; }

    static final VarHandle _ENCLAVE_LOAD_DATA_VBS_BASIC$PageType$VH_ = _ENCLAVE_LOAD_DATA_VBS_BASIC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PageType"));
    static final java.lang.invoke.VarHandle _ENCLAVE_LOAD_DATA_VBS_BASIC$PageType$VH() { return _ENCLAVE_LOAD_DATA_VBS_BASIC$PageType$VH_; }

    static final MemoryLayout _ENCLAVE_INIT_INFO_VBS_BASIC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(16, C_CHAR).withName("FamilyId"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("ImageId"),
        C_LONGLONG.withName("EnclaveSize"),
        C_LONG.withName("EnclaveSvn"),
        C_LONG.withName("Reserved"),
        C_POINTER.withName("SignatureInfoHandle"),
        C_LONGLONG.withName("Unused")
    ).withName("_ENCLAVE_INIT_INFO_VBS_BASIC");
    static final jdk.incubator.foreign.MemoryLayout _ENCLAVE_INIT_INFO_VBS_BASIC$struct$LAYOUT() { return _ENCLAVE_INIT_INFO_VBS_BASIC$struct$LAYOUT_; }

    static final MemoryLayout _ENCLAVE_INIT_INFO_VBS_BASIC$EnclaveSize$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _ENCLAVE_INIT_INFO_VBS_BASIC$EnclaveSize$LAYOUT() { return _ENCLAVE_INIT_INFO_VBS_BASIC$EnclaveSize$LAYOUT_; }

    static final VarHandle _ENCLAVE_INIT_INFO_VBS_BASIC$EnclaveSize$VH_ = _ENCLAVE_INIT_INFO_VBS_BASIC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EnclaveSize"));
    static final java.lang.invoke.VarHandle _ENCLAVE_INIT_INFO_VBS_BASIC$EnclaveSize$VH() { return _ENCLAVE_INIT_INFO_VBS_BASIC$EnclaveSize$VH_; }

    static final MemoryLayout _ENCLAVE_INIT_INFO_VBS_BASIC$EnclaveSvn$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ENCLAVE_INIT_INFO_VBS_BASIC$EnclaveSvn$LAYOUT() { return _ENCLAVE_INIT_INFO_VBS_BASIC$EnclaveSvn$LAYOUT_; }

    static final VarHandle _ENCLAVE_INIT_INFO_VBS_BASIC$EnclaveSvn$VH_ = _ENCLAVE_INIT_INFO_VBS_BASIC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EnclaveSvn"));
    static final java.lang.invoke.VarHandle _ENCLAVE_INIT_INFO_VBS_BASIC$EnclaveSvn$VH() { return _ENCLAVE_INIT_INFO_VBS_BASIC$EnclaveSvn$VH_; }

    static final MemoryLayout _ENCLAVE_INIT_INFO_VBS_BASIC$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ENCLAVE_INIT_INFO_VBS_BASIC$Reserved$LAYOUT() { return _ENCLAVE_INIT_INFO_VBS_BASIC$Reserved$LAYOUT_; }

    static final VarHandle _ENCLAVE_INIT_INFO_VBS_BASIC$Reserved$VH_ = _ENCLAVE_INIT_INFO_VBS_BASIC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _ENCLAVE_INIT_INFO_VBS_BASIC$Reserved$VH() { return _ENCLAVE_INIT_INFO_VBS_BASIC$Reserved$VH_; }

    static final MemoryLayout _ENCLAVE_INIT_INFO_VBS_BASIC$SignatureInfoHandle$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _ENCLAVE_INIT_INFO_VBS_BASIC$SignatureInfoHandle$LAYOUT() { return _ENCLAVE_INIT_INFO_VBS_BASIC$SignatureInfoHandle$LAYOUT_; }

    static final VarHandle _ENCLAVE_INIT_INFO_VBS_BASIC$SignatureInfoHandle$VH_ = MemoryHandles.asAddressVarHandle(_ENCLAVE_INIT_INFO_VBS_BASIC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SignatureInfoHandle")));
    static final java.lang.invoke.VarHandle _ENCLAVE_INIT_INFO_VBS_BASIC$SignatureInfoHandle$VH() { return _ENCLAVE_INIT_INFO_VBS_BASIC$SignatureInfoHandle$VH_; }

    static final MemoryLayout _ENCLAVE_INIT_INFO_VBS_BASIC$Unused$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _ENCLAVE_INIT_INFO_VBS_BASIC$Unused$LAYOUT() { return _ENCLAVE_INIT_INFO_VBS_BASIC$Unused$LAYOUT_; }

    static final VarHandle _ENCLAVE_INIT_INFO_VBS_BASIC$Unused$VH_ = _ENCLAVE_INIT_INFO_VBS_BASIC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Unused"));
    static final java.lang.invoke.VarHandle _ENCLAVE_INIT_INFO_VBS_BASIC$Unused$VH() { return _ENCLAVE_INIT_INFO_VBS_BASIC$Unused$VH_; }

    static final MemoryLayout _ENCLAVE_INIT_INFO_VBS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Length"),
        C_LONG.withName("ThreadCount")
    ).withName("_ENCLAVE_INIT_INFO_VBS");
    static final jdk.incubator.foreign.MemoryLayout _ENCLAVE_INIT_INFO_VBS$struct$LAYOUT() { return _ENCLAVE_INIT_INFO_VBS$struct$LAYOUT_; }

    static final MemoryLayout _ENCLAVE_INIT_INFO_VBS$Length$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ENCLAVE_INIT_INFO_VBS$Length$LAYOUT() { return _ENCLAVE_INIT_INFO_VBS$Length$LAYOUT_; }

    static final VarHandle _ENCLAVE_INIT_INFO_VBS$Length$VH_ = _ENCLAVE_INIT_INFO_VBS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Length"));
    static final java.lang.invoke.VarHandle _ENCLAVE_INIT_INFO_VBS$Length$VH() { return _ENCLAVE_INIT_INFO_VBS$Length$VH_; }

    static final MemoryLayout _ENCLAVE_INIT_INFO_VBS$ThreadCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ENCLAVE_INIT_INFO_VBS$ThreadCount$LAYOUT() { return _ENCLAVE_INIT_INFO_VBS$ThreadCount$LAYOUT_; }

    static final VarHandle _ENCLAVE_INIT_INFO_VBS$ThreadCount$VH_ = _ENCLAVE_INIT_INFO_VBS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ThreadCount"));
    static final java.lang.invoke.VarHandle _ENCLAVE_INIT_INFO_VBS$ThreadCount$VH() { return _ENCLAVE_INIT_INFO_VBS$ThreadCount$VH_; }

    static final MemoryLayout _FILE_ID_128$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(16, C_CHAR).withName("Identifier")
    ).withName("_FILE_ID_128");
    static final jdk.incubator.foreign.MemoryLayout _FILE_ID_128$struct$LAYOUT() { return _FILE_ID_128$struct$LAYOUT_; }

    static final MemoryLayout _FILE_NOTIFY_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("NextEntryOffset"),
        C_LONG.withName("Action"),
        C_LONG.withName("FileNameLength"),
        MemoryLayout.ofSequence(1, C_SHORT).withName("FileName"),
        MemoryLayout.ofPaddingBits(16)
    ).withName("_FILE_NOTIFY_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _FILE_NOTIFY_INFORMATION$struct$LAYOUT() { return _FILE_NOTIFY_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _FILE_NOTIFY_INFORMATION$NextEntryOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_NOTIFY_INFORMATION$NextEntryOffset$LAYOUT() { return _FILE_NOTIFY_INFORMATION$NextEntryOffset$LAYOUT_; }

    static final VarHandle _FILE_NOTIFY_INFORMATION$NextEntryOffset$VH_ = _FILE_NOTIFY_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NextEntryOffset"));
    static final java.lang.invoke.VarHandle _FILE_NOTIFY_INFORMATION$NextEntryOffset$VH() { return _FILE_NOTIFY_INFORMATION$NextEntryOffset$VH_; }

    static final MemoryLayout _FILE_NOTIFY_INFORMATION$Action$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_NOTIFY_INFORMATION$Action$LAYOUT() { return _FILE_NOTIFY_INFORMATION$Action$LAYOUT_; }

    static final VarHandle _FILE_NOTIFY_INFORMATION$Action$VH_ = _FILE_NOTIFY_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Action"));
    static final java.lang.invoke.VarHandle _FILE_NOTIFY_INFORMATION$Action$VH() { return _FILE_NOTIFY_INFORMATION$Action$VH_; }

    static final MemoryLayout _FILE_NOTIFY_INFORMATION$FileNameLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_NOTIFY_INFORMATION$FileNameLength$LAYOUT() { return _FILE_NOTIFY_INFORMATION$FileNameLength$LAYOUT_; }

    static final VarHandle _FILE_NOTIFY_INFORMATION$FileNameLength$VH_ = _FILE_NOTIFY_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FileNameLength"));
    static final java.lang.invoke.VarHandle _FILE_NOTIFY_INFORMATION$FileNameLength$VH() { return _FILE_NOTIFY_INFORMATION$FileNameLength$VH_; }

    static final MemoryLayout _FILE_NOTIFY_EXTENDED_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("NextEntryOffset"),
        C_LONG.withName("Action"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("CreationTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("LastModificationTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("LastChangeTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("LastAccessTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("AllocatedLength"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("FileSize"),
        C_LONG.withName("FileAttributes"),
        C_LONG.withName("ReparsePointTag"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("FileId"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("ParentFileId"),
        C_LONG.withName("FileNameLength"),
        MemoryLayout.ofSequence(1, C_SHORT).withName("FileName"),
        MemoryLayout.ofPaddingBits(16)
    ).withName("_FILE_NOTIFY_EXTENDED_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _FILE_NOTIFY_EXTENDED_INFORMATION$struct$LAYOUT() { return _FILE_NOTIFY_EXTENDED_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _FILE_NOTIFY_EXTENDED_INFORMATION$NextEntryOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_NOTIFY_EXTENDED_INFORMATION$NextEntryOffset$LAYOUT() { return _FILE_NOTIFY_EXTENDED_INFORMATION$NextEntryOffset$LAYOUT_; }

    static final VarHandle _FILE_NOTIFY_EXTENDED_INFORMATION$NextEntryOffset$VH_ = _FILE_NOTIFY_EXTENDED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NextEntryOffset"));
    static final java.lang.invoke.VarHandle _FILE_NOTIFY_EXTENDED_INFORMATION$NextEntryOffset$VH() { return _FILE_NOTIFY_EXTENDED_INFORMATION$NextEntryOffset$VH_; }

    static final MemoryLayout _FILE_NOTIFY_EXTENDED_INFORMATION$Action$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_NOTIFY_EXTENDED_INFORMATION$Action$LAYOUT() { return _FILE_NOTIFY_EXTENDED_INFORMATION$Action$LAYOUT_; }

    static final VarHandle _FILE_NOTIFY_EXTENDED_INFORMATION$Action$VH_ = _FILE_NOTIFY_EXTENDED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Action"));
    static final java.lang.invoke.VarHandle _FILE_NOTIFY_EXTENDED_INFORMATION$Action$VH() { return _FILE_NOTIFY_EXTENDED_INFORMATION$Action$VH_; }

    static final MemoryLayout _FILE_NOTIFY_EXTENDED_INFORMATION$FileAttributes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_NOTIFY_EXTENDED_INFORMATION$FileAttributes$LAYOUT() { return _FILE_NOTIFY_EXTENDED_INFORMATION$FileAttributes$LAYOUT_; }

    static final VarHandle _FILE_NOTIFY_EXTENDED_INFORMATION$FileAttributes$VH_ = _FILE_NOTIFY_EXTENDED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FileAttributes"));
    static final java.lang.invoke.VarHandle _FILE_NOTIFY_EXTENDED_INFORMATION$FileAttributes$VH() { return _FILE_NOTIFY_EXTENDED_INFORMATION$FileAttributes$VH_; }

    static final MemoryLayout _FILE_NOTIFY_EXTENDED_INFORMATION$ReparsePointTag$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_NOTIFY_EXTENDED_INFORMATION$ReparsePointTag$LAYOUT() { return _FILE_NOTIFY_EXTENDED_INFORMATION$ReparsePointTag$LAYOUT_; }

    static final VarHandle _FILE_NOTIFY_EXTENDED_INFORMATION$ReparsePointTag$VH_ = _FILE_NOTIFY_EXTENDED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ReparsePointTag"));
    static final java.lang.invoke.VarHandle _FILE_NOTIFY_EXTENDED_INFORMATION$ReparsePointTag$VH() { return _FILE_NOTIFY_EXTENDED_INFORMATION$ReparsePointTag$VH_; }

    static final MemoryLayout _FILE_NOTIFY_EXTENDED_INFORMATION$FileNameLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_NOTIFY_EXTENDED_INFORMATION$FileNameLength$LAYOUT() { return _FILE_NOTIFY_EXTENDED_INFORMATION$FileNameLength$LAYOUT_; }

    static final VarHandle _FILE_NOTIFY_EXTENDED_INFORMATION$FileNameLength$VH_ = _FILE_NOTIFY_EXTENDED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FileNameLength"));
    static final java.lang.invoke.VarHandle _FILE_NOTIFY_EXTENDED_INFORMATION$FileNameLength$VH() { return _FILE_NOTIFY_EXTENDED_INFORMATION$FileNameLength$VH_; }

    static final MemoryLayout _FILE_SEGMENT_ELEMENT$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_POINTER.withName("Buffer"),
        C_LONGLONG.withName("Alignment")
    ).withName("_FILE_SEGMENT_ELEMENT");
    static final jdk.incubator.foreign.MemoryLayout _FILE_SEGMENT_ELEMENT$union$LAYOUT() { return _FILE_SEGMENT_ELEMENT$union$LAYOUT_; }

    static final MemoryLayout _FILE_SEGMENT_ELEMENT$Buffer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _FILE_SEGMENT_ELEMENT$Buffer$LAYOUT() { return _FILE_SEGMENT_ELEMENT$Buffer$LAYOUT_; }

    static final VarHandle _FILE_SEGMENT_ELEMENT$Buffer$VH_ = MemoryHandles.asAddressVarHandle(_FILE_SEGMENT_ELEMENT$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Buffer")));
    static final java.lang.invoke.VarHandle _FILE_SEGMENT_ELEMENT$Buffer$VH() { return _FILE_SEGMENT_ELEMENT$Buffer$VH_; }

    static final MemoryLayout _FILE_SEGMENT_ELEMENT$Alignment$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_SEGMENT_ELEMENT$Alignment$LAYOUT() { return _FILE_SEGMENT_ELEMENT$Alignment$LAYOUT_; }

    static final VarHandle _FILE_SEGMENT_ELEMENT$Alignment$VH_ = _FILE_SEGMENT_ELEMENT$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Alignment"));
    static final java.lang.invoke.VarHandle _FILE_SEGMENT_ELEMENT$Alignment$VH() { return _FILE_SEGMENT_ELEMENT$Alignment$VH_; }

    static final MemoryLayout _REPARSE_GUID_DATA_BUFFER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ReparseTag"),
        C_SHORT.withName("ReparseDataLength"),
        C_SHORT.withName("Reserved"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ReparseGuid"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(1, C_CHAR).withName("DataBuffer")
        ).withName("GenericReparseBuffer"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("_REPARSE_GUID_DATA_BUFFER");
    static final jdk.incubator.foreign.MemoryLayout _REPARSE_GUID_DATA_BUFFER$struct$LAYOUT() { return _REPARSE_GUID_DATA_BUFFER$struct$LAYOUT_; }

    static final MemoryLayout _REPARSE_GUID_DATA_BUFFER$ReparseTag$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _REPARSE_GUID_DATA_BUFFER$ReparseTag$LAYOUT() { return _REPARSE_GUID_DATA_BUFFER$ReparseTag$LAYOUT_; }

    static final VarHandle _REPARSE_GUID_DATA_BUFFER$ReparseTag$VH_ = _REPARSE_GUID_DATA_BUFFER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ReparseTag"));
    static final java.lang.invoke.VarHandle _REPARSE_GUID_DATA_BUFFER$ReparseTag$VH() { return _REPARSE_GUID_DATA_BUFFER$ReparseTag$VH_; }

    static final MemoryLayout _REPARSE_GUID_DATA_BUFFER$ReparseDataLength$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _REPARSE_GUID_DATA_BUFFER$ReparseDataLength$LAYOUT() { return _REPARSE_GUID_DATA_BUFFER$ReparseDataLength$LAYOUT_; }

    static final VarHandle _REPARSE_GUID_DATA_BUFFER$ReparseDataLength$VH_ = _REPARSE_GUID_DATA_BUFFER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ReparseDataLength"));
    static final java.lang.invoke.VarHandle _REPARSE_GUID_DATA_BUFFER$ReparseDataLength$VH() { return _REPARSE_GUID_DATA_BUFFER$ReparseDataLength$VH_; }

    static final MemoryLayout _REPARSE_GUID_DATA_BUFFER$Reserved$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _REPARSE_GUID_DATA_BUFFER$Reserved$LAYOUT() { return _REPARSE_GUID_DATA_BUFFER$Reserved$LAYOUT_; }

    static final VarHandle _REPARSE_GUID_DATA_BUFFER$Reserved$VH_ = _REPARSE_GUID_DATA_BUFFER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _REPARSE_GUID_DATA_BUFFER$Reserved$VH() { return _REPARSE_GUID_DATA_BUFFER$Reserved$VH_; }

    static final MemoryLayout _REPARSE_GUID_DATA_BUFFER$GenericReparseBuffer$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(1, C_CHAR).withName("DataBuffer")
    );
    static final jdk.incubator.foreign.MemoryLayout _REPARSE_GUID_DATA_BUFFER$GenericReparseBuffer$struct$LAYOUT() { return _REPARSE_GUID_DATA_BUFFER$GenericReparseBuffer$struct$LAYOUT_; }

    static final MemoryLayout _SCRUB_DATA_INPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        C_LONG.withName("Flags"),
        C_LONG.withName("MaximumIos"),
        MemoryLayout.ofSequence(4, C_LONG).withName("ObjectId"),
        MemoryLayout.ofSequence(25, C_LONG).withName("Reserved"),
        MemoryLayout.ofSequence(816, C_CHAR).withName("ResumeContext")
    ).withName("_SCRUB_DATA_INPUT");
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_DATA_INPUT$struct$LAYOUT() { return _SCRUB_DATA_INPUT$struct$LAYOUT_; }

    static final MemoryLayout _SCRUB_DATA_INPUT$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_DATA_INPUT$Size$LAYOUT() { return _SCRUB_DATA_INPUT$Size$LAYOUT_; }

    static final VarHandle _SCRUB_DATA_INPUT$Size$VH_ = _SCRUB_DATA_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _SCRUB_DATA_INPUT$Size$VH() { return _SCRUB_DATA_INPUT$Size$VH_; }

    static final MemoryLayout _SCRUB_DATA_INPUT$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_DATA_INPUT$Flags$LAYOUT() { return _SCRUB_DATA_INPUT$Flags$LAYOUT_; }

    static final VarHandle _SCRUB_DATA_INPUT$Flags$VH_ = _SCRUB_DATA_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _SCRUB_DATA_INPUT$Flags$VH() { return _SCRUB_DATA_INPUT$Flags$VH_; }

    static final MemoryLayout _SCRUB_DATA_INPUT$MaximumIos$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_DATA_INPUT$MaximumIos$LAYOUT() { return _SCRUB_DATA_INPUT$MaximumIos$LAYOUT_; }

    static final VarHandle _SCRUB_DATA_INPUT$MaximumIos$VH_ = _SCRUB_DATA_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaximumIos"));
    static final java.lang.invoke.VarHandle _SCRUB_DATA_INPUT$MaximumIos$VH() { return _SCRUB_DATA_INPUT$MaximumIos$VH_; }

    static final MemoryLayout _SCRUB_PARITY_EXTENT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("Offset"),
        C_LONGLONG.withName("Length")
    ).withName("_SCRUB_PARITY_EXTENT");
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_PARITY_EXTENT$struct$LAYOUT() { return _SCRUB_PARITY_EXTENT$struct$LAYOUT_; }

    static final MemoryLayout _SCRUB_PARITY_EXTENT$Offset$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_PARITY_EXTENT$Offset$LAYOUT() { return _SCRUB_PARITY_EXTENT$Offset$LAYOUT_; }

    static final VarHandle _SCRUB_PARITY_EXTENT$Offset$VH_ = _SCRUB_PARITY_EXTENT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Offset"));
    static final java.lang.invoke.VarHandle _SCRUB_PARITY_EXTENT$Offset$VH() { return _SCRUB_PARITY_EXTENT$Offset$VH_; }

    static final MemoryLayout _SCRUB_PARITY_EXTENT$Length$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_PARITY_EXTENT$Length$LAYOUT() { return _SCRUB_PARITY_EXTENT$Length$LAYOUT_; }

    static final VarHandle _SCRUB_PARITY_EXTENT$Length$VH_ = _SCRUB_PARITY_EXTENT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Length"));
    static final java.lang.invoke.VarHandle _SCRUB_PARITY_EXTENT$Length$VH() { return _SCRUB_PARITY_EXTENT$Length$VH_; }

    static final MemoryLayout _SCRUB_PARITY_EXTENT_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("Size"),
        C_SHORT.withName("Flags"),
        C_SHORT.withName("NumberOfParityExtents"),
        C_SHORT.withName("MaximumNumberOfParityExtents"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONGLONG.withName("Offset"),
            C_LONGLONG.withName("Length")
        ).withName("_SCRUB_PARITY_EXTENT")).withName("ParityExtents")
    ).withName("_SCRUB_PARITY_EXTENT_DATA");
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_PARITY_EXTENT_DATA$struct$LAYOUT() { return _SCRUB_PARITY_EXTENT_DATA$struct$LAYOUT_; }

    static final MemoryLayout _SCRUB_PARITY_EXTENT_DATA$Size$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_PARITY_EXTENT_DATA$Size$LAYOUT() { return _SCRUB_PARITY_EXTENT_DATA$Size$LAYOUT_; }

    static final VarHandle _SCRUB_PARITY_EXTENT_DATA$Size$VH_ = _SCRUB_PARITY_EXTENT_DATA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _SCRUB_PARITY_EXTENT_DATA$Size$VH() { return _SCRUB_PARITY_EXTENT_DATA$Size$VH_; }

    static final MemoryLayout _SCRUB_PARITY_EXTENT_DATA$Flags$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_PARITY_EXTENT_DATA$Flags$LAYOUT() { return _SCRUB_PARITY_EXTENT_DATA$Flags$LAYOUT_; }

    static final VarHandle _SCRUB_PARITY_EXTENT_DATA$Flags$VH_ = _SCRUB_PARITY_EXTENT_DATA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _SCRUB_PARITY_EXTENT_DATA$Flags$VH() { return _SCRUB_PARITY_EXTENT_DATA$Flags$VH_; }

    static final MemoryLayout _SCRUB_PARITY_EXTENT_DATA$NumberOfParityExtents$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_PARITY_EXTENT_DATA$NumberOfParityExtents$LAYOUT() { return _SCRUB_PARITY_EXTENT_DATA$NumberOfParityExtents$LAYOUT_; }

    static final VarHandle _SCRUB_PARITY_EXTENT_DATA$NumberOfParityExtents$VH_ = _SCRUB_PARITY_EXTENT_DATA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("NumberOfParityExtents"));
    static final java.lang.invoke.VarHandle _SCRUB_PARITY_EXTENT_DATA$NumberOfParityExtents$VH() { return _SCRUB_PARITY_EXTENT_DATA$NumberOfParityExtents$VH_; }

    static final MemoryLayout _SCRUB_PARITY_EXTENT_DATA$MaximumNumberOfParityExtents$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_PARITY_EXTENT_DATA$MaximumNumberOfParityExtents$LAYOUT() { return _SCRUB_PARITY_EXTENT_DATA$MaximumNumberOfParityExtents$LAYOUT_; }

    static final VarHandle _SCRUB_PARITY_EXTENT_DATA$MaximumNumberOfParityExtents$VH_ = _SCRUB_PARITY_EXTENT_DATA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MaximumNumberOfParityExtents"));
    static final java.lang.invoke.VarHandle _SCRUB_PARITY_EXTENT_DATA$MaximumNumberOfParityExtents$VH() { return _SCRUB_PARITY_EXTENT_DATA$MaximumNumberOfParityExtents$VH_; }

    static final MemoryLayout _SCRUB_DATA_OUTPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        C_LONG.withName("Flags"),
        C_LONG.withName("Status"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("ErrorFileOffset"),
        C_LONGLONG.withName("ErrorLength"),
        C_LONGLONG.withName("NumberOfBytesRepaired"),
        C_LONGLONG.withName("NumberOfBytesFailed"),
        C_LONGLONG.withName("InternalFileReference"),
        C_SHORT.withName("ResumeContextLength"),
        C_SHORT.withName("ParityExtentDataOffset"),
        MemoryLayout.ofSequence(9, C_LONG).withName("Reserved"),
        C_LONGLONG.withName("NumberOfMetadataBytesProcessed"),
        C_LONGLONG.withName("NumberOfDataBytesProcessed"),
        C_LONGLONG.withName("TotalNumberOfMetadataBytesInUse"),
        C_LONGLONG.withName("TotalNumberOfDataBytesInUse"),
        MemoryLayout.ofSequence(816, C_CHAR).withName("ResumeContext")
    ).withName("_SCRUB_DATA_OUTPUT");
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_DATA_OUTPUT$struct$LAYOUT() { return _SCRUB_DATA_OUTPUT$struct$LAYOUT_; }

    static final MemoryLayout _SCRUB_DATA_OUTPUT$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_DATA_OUTPUT$Size$LAYOUT() { return _SCRUB_DATA_OUTPUT$Size$LAYOUT_; }

    static final VarHandle _SCRUB_DATA_OUTPUT$Size$VH_ = _SCRUB_DATA_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _SCRUB_DATA_OUTPUT$Size$VH() { return _SCRUB_DATA_OUTPUT$Size$VH_; }

    static final MemoryLayout _SCRUB_DATA_OUTPUT$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_DATA_OUTPUT$Flags$LAYOUT() { return _SCRUB_DATA_OUTPUT$Flags$LAYOUT_; }

    static final VarHandle _SCRUB_DATA_OUTPUT$Flags$VH_ = _SCRUB_DATA_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _SCRUB_DATA_OUTPUT$Flags$VH() { return _SCRUB_DATA_OUTPUT$Flags$VH_; }

    static final MemoryLayout _SCRUB_DATA_OUTPUT$Status$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_DATA_OUTPUT$Status$LAYOUT() { return _SCRUB_DATA_OUTPUT$Status$LAYOUT_; }

    static final VarHandle _SCRUB_DATA_OUTPUT$Status$VH_ = _SCRUB_DATA_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Status"));
    static final java.lang.invoke.VarHandle _SCRUB_DATA_OUTPUT$Status$VH() { return _SCRUB_DATA_OUTPUT$Status$VH_; }

    static final MemoryLayout _SCRUB_DATA_OUTPUT$ErrorFileOffset$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_DATA_OUTPUT$ErrorFileOffset$LAYOUT() { return _SCRUB_DATA_OUTPUT$ErrorFileOffset$LAYOUT_; }

    static final VarHandle _SCRUB_DATA_OUTPUT$ErrorFileOffset$VH_ = _SCRUB_DATA_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ErrorFileOffset"));
    static final java.lang.invoke.VarHandle _SCRUB_DATA_OUTPUT$ErrorFileOffset$VH() { return _SCRUB_DATA_OUTPUT$ErrorFileOffset$VH_; }

    static final MemoryLayout _SCRUB_DATA_OUTPUT$ErrorLength$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_DATA_OUTPUT$ErrorLength$LAYOUT() { return _SCRUB_DATA_OUTPUT$ErrorLength$LAYOUT_; }

    static final VarHandle _SCRUB_DATA_OUTPUT$ErrorLength$VH_ = _SCRUB_DATA_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ErrorLength"));
    static final java.lang.invoke.VarHandle _SCRUB_DATA_OUTPUT$ErrorLength$VH() { return _SCRUB_DATA_OUTPUT$ErrorLength$VH_; }

    static final MemoryLayout _SCRUB_DATA_OUTPUT$NumberOfBytesRepaired$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_DATA_OUTPUT$NumberOfBytesRepaired$LAYOUT() { return _SCRUB_DATA_OUTPUT$NumberOfBytesRepaired$LAYOUT_; }

    static final VarHandle _SCRUB_DATA_OUTPUT$NumberOfBytesRepaired$VH_ = _SCRUB_DATA_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("NumberOfBytesRepaired"));
    static final java.lang.invoke.VarHandle _SCRUB_DATA_OUTPUT$NumberOfBytesRepaired$VH() { return _SCRUB_DATA_OUTPUT$NumberOfBytesRepaired$VH_; }

    static final MemoryLayout _SCRUB_DATA_OUTPUT$NumberOfBytesFailed$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_DATA_OUTPUT$NumberOfBytesFailed$LAYOUT() { return _SCRUB_DATA_OUTPUT$NumberOfBytesFailed$LAYOUT_; }

    static final VarHandle _SCRUB_DATA_OUTPUT$NumberOfBytesFailed$VH_ = _SCRUB_DATA_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("NumberOfBytesFailed"));
    static final java.lang.invoke.VarHandle _SCRUB_DATA_OUTPUT$NumberOfBytesFailed$VH() { return _SCRUB_DATA_OUTPUT$NumberOfBytesFailed$VH_; }

    static final MemoryLayout _SCRUB_DATA_OUTPUT$InternalFileReference$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_DATA_OUTPUT$InternalFileReference$LAYOUT() { return _SCRUB_DATA_OUTPUT$InternalFileReference$LAYOUT_; }

    static final VarHandle _SCRUB_DATA_OUTPUT$InternalFileReference$VH_ = _SCRUB_DATA_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("InternalFileReference"));
    static final java.lang.invoke.VarHandle _SCRUB_DATA_OUTPUT$InternalFileReference$VH() { return _SCRUB_DATA_OUTPUT$InternalFileReference$VH_; }

    static final MemoryLayout _SCRUB_DATA_OUTPUT$ResumeContextLength$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_DATA_OUTPUT$ResumeContextLength$LAYOUT() { return _SCRUB_DATA_OUTPUT$ResumeContextLength$LAYOUT_; }

    static final VarHandle _SCRUB_DATA_OUTPUT$ResumeContextLength$VH_ = _SCRUB_DATA_OUTPUT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ResumeContextLength"));
    static final java.lang.invoke.VarHandle _SCRUB_DATA_OUTPUT$ResumeContextLength$VH() { return _SCRUB_DATA_OUTPUT$ResumeContextLength$VH_; }

    static final MemoryLayout _SCRUB_DATA_OUTPUT$ParityExtentDataOffset$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_DATA_OUTPUT$ParityExtentDataOffset$LAYOUT() { return _SCRUB_DATA_OUTPUT$ParityExtentDataOffset$LAYOUT_; }

    static final VarHandle _SCRUB_DATA_OUTPUT$ParityExtentDataOffset$VH_ = _SCRUB_DATA_OUTPUT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ParityExtentDataOffset"));
    static final java.lang.invoke.VarHandle _SCRUB_DATA_OUTPUT$ParityExtentDataOffset$VH() { return _SCRUB_DATA_OUTPUT$ParityExtentDataOffset$VH_; }

    static final MemoryLayout _SCRUB_DATA_OUTPUT$NumberOfMetadataBytesProcessed$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_DATA_OUTPUT$NumberOfMetadataBytesProcessed$LAYOUT() { return _SCRUB_DATA_OUTPUT$NumberOfMetadataBytesProcessed$LAYOUT_; }

    static final VarHandle _SCRUB_DATA_OUTPUT$NumberOfMetadataBytesProcessed$VH_ = _SCRUB_DATA_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("NumberOfMetadataBytesProcessed"));
    static final java.lang.invoke.VarHandle _SCRUB_DATA_OUTPUT$NumberOfMetadataBytesProcessed$VH() { return _SCRUB_DATA_OUTPUT$NumberOfMetadataBytesProcessed$VH_; }

    static final MemoryLayout _SCRUB_DATA_OUTPUT$NumberOfDataBytesProcessed$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_DATA_OUTPUT$NumberOfDataBytesProcessed$LAYOUT() { return _SCRUB_DATA_OUTPUT$NumberOfDataBytesProcessed$LAYOUT_; }

    static final VarHandle _SCRUB_DATA_OUTPUT$NumberOfDataBytesProcessed$VH_ = _SCRUB_DATA_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("NumberOfDataBytesProcessed"));
    static final java.lang.invoke.VarHandle _SCRUB_DATA_OUTPUT$NumberOfDataBytesProcessed$VH() { return _SCRUB_DATA_OUTPUT$NumberOfDataBytesProcessed$VH_; }

    static final MemoryLayout _SCRUB_DATA_OUTPUT$TotalNumberOfMetadataBytesInUse$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_DATA_OUTPUT$TotalNumberOfMetadataBytesInUse$LAYOUT() { return _SCRUB_DATA_OUTPUT$TotalNumberOfMetadataBytesInUse$LAYOUT_; }

    static final VarHandle _SCRUB_DATA_OUTPUT$TotalNumberOfMetadataBytesInUse$VH_ = _SCRUB_DATA_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TotalNumberOfMetadataBytesInUse"));
    static final java.lang.invoke.VarHandle _SCRUB_DATA_OUTPUT$TotalNumberOfMetadataBytesInUse$VH() { return _SCRUB_DATA_OUTPUT$TotalNumberOfMetadataBytesInUse$VH_; }

    static final MemoryLayout _SCRUB_DATA_OUTPUT$TotalNumberOfDataBytesInUse$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _SCRUB_DATA_OUTPUT$TotalNumberOfDataBytesInUse$LAYOUT() { return _SCRUB_DATA_OUTPUT$TotalNumberOfDataBytesInUse$LAYOUT_; }

    static final VarHandle _SCRUB_DATA_OUTPUT$TotalNumberOfDataBytesInUse$VH_ = _SCRUB_DATA_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TotalNumberOfDataBytesInUse"));
    static final java.lang.invoke.VarHandle _SCRUB_DATA_OUTPUT$TotalNumberOfDataBytesInUse$VH() { return _SCRUB_DATA_OUTPUT$TotalNumberOfDataBytesInUse$VH_; }

    static final int SharedVirtualDisksUnsupported() { return (int)0L; }

    static final int SharedVirtualDisksSupported() { return (int)1L; }

    static final int SharedVirtualDiskSnapshotsSupported() { return (int)3L; }

    static final int SharedVirtualDiskCDPSnapshotsSupported() { return (int)7L; }

    static final int SharedVirtualDiskHandleStateNone() { return (int)0L; }

    static final int SharedVirtualDiskHandleStateFileShared() { return (int)1L; }

    static final int SharedVirtualDiskHandleStateHandleShared() { return (int)3L; }

    static final MemoryLayout _SHARED_VIRTUAL_DISK_SUPPORT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("SharedVirtualDiskSupport"),
        C_INT.withName("HandleState")
    ).withName("_SHARED_VIRTUAL_DISK_SUPPORT");
    static final jdk.incubator.foreign.MemoryLayout _SHARED_VIRTUAL_DISK_SUPPORT$struct$LAYOUT() { return _SHARED_VIRTUAL_DISK_SUPPORT$struct$LAYOUT_; }

    static final MemoryLayout _SHARED_VIRTUAL_DISK_SUPPORT$SharedVirtualDiskSupport$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SHARED_VIRTUAL_DISK_SUPPORT$SharedVirtualDiskSupport$LAYOUT() { return _SHARED_VIRTUAL_DISK_SUPPORT$SharedVirtualDiskSupport$LAYOUT_; }

    static final VarHandle _SHARED_VIRTUAL_DISK_SUPPORT$SharedVirtualDiskSupport$VH_ = _SHARED_VIRTUAL_DISK_SUPPORT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SharedVirtualDiskSupport"));
    static final java.lang.invoke.VarHandle _SHARED_VIRTUAL_DISK_SUPPORT$SharedVirtualDiskSupport$VH() { return _SHARED_VIRTUAL_DISK_SUPPORT$SharedVirtualDiskSupport$VH_; }

    static final MemoryLayout _SHARED_VIRTUAL_DISK_SUPPORT$HandleState$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SHARED_VIRTUAL_DISK_SUPPORT$HandleState$LAYOUT() { return _SHARED_VIRTUAL_DISK_SUPPORT$HandleState$LAYOUT_; }

    static final VarHandle _SHARED_VIRTUAL_DISK_SUPPORT$HandleState$VH_ = _SHARED_VIRTUAL_DISK_SUPPORT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("HandleState"));
    static final java.lang.invoke.VarHandle _SHARED_VIRTUAL_DISK_SUPPORT$HandleState$VH() { return _SHARED_VIRTUAL_DISK_SUPPORT$HandleState$VH_; }

    static final MemoryLayout _REARRANGE_FILE_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("SourceStartingOffset"),
        C_LONGLONG.withName("TargetOffset"),
        C_POINTER.withName("SourceFileHandle"),
        C_LONG.withName("Length"),
        C_LONG.withName("Flags")
    ).withName("_REARRANGE_FILE_DATA");
    static final jdk.incubator.foreign.MemoryLayout _REARRANGE_FILE_DATA$struct$LAYOUT() { return _REARRANGE_FILE_DATA$struct$LAYOUT_; }

    static final MemoryLayout _REARRANGE_FILE_DATA$SourceStartingOffset$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _REARRANGE_FILE_DATA$SourceStartingOffset$LAYOUT() { return _REARRANGE_FILE_DATA$SourceStartingOffset$LAYOUT_; }

    static final VarHandle _REARRANGE_FILE_DATA$SourceStartingOffset$VH_ = _REARRANGE_FILE_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SourceStartingOffset"));
    static final java.lang.invoke.VarHandle _REARRANGE_FILE_DATA$SourceStartingOffset$VH() { return _REARRANGE_FILE_DATA$SourceStartingOffset$VH_; }

    static final MemoryLayout _REARRANGE_FILE_DATA$TargetOffset$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _REARRANGE_FILE_DATA$TargetOffset$LAYOUT() { return _REARRANGE_FILE_DATA$TargetOffset$LAYOUT_; }

    static final VarHandle _REARRANGE_FILE_DATA$TargetOffset$VH_ = _REARRANGE_FILE_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TargetOffset"));
    static final java.lang.invoke.VarHandle _REARRANGE_FILE_DATA$TargetOffset$VH() { return _REARRANGE_FILE_DATA$TargetOffset$VH_; }

    static final MemoryLayout _REARRANGE_FILE_DATA$SourceFileHandle$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _REARRANGE_FILE_DATA$SourceFileHandle$LAYOUT() { return _REARRANGE_FILE_DATA$SourceFileHandle$LAYOUT_; }

    static final VarHandle _REARRANGE_FILE_DATA$SourceFileHandle$VH_ = MemoryHandles.asAddressVarHandle(_REARRANGE_FILE_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SourceFileHandle")));
    static final java.lang.invoke.VarHandle _REARRANGE_FILE_DATA$SourceFileHandle$VH() { return _REARRANGE_FILE_DATA$SourceFileHandle$VH_; }

    static final MemoryLayout _REARRANGE_FILE_DATA$Length$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _REARRANGE_FILE_DATA$Length$LAYOUT() { return _REARRANGE_FILE_DATA$Length$LAYOUT_; }

    static final VarHandle _REARRANGE_FILE_DATA$Length$VH_ = _REARRANGE_FILE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Length"));
    static final java.lang.invoke.VarHandle _REARRANGE_FILE_DATA$Length$VH() { return _REARRANGE_FILE_DATA$Length$VH_; }

    static final MemoryLayout _REARRANGE_FILE_DATA$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _REARRANGE_FILE_DATA$Flags$LAYOUT() { return _REARRANGE_FILE_DATA$Flags$LAYOUT_; }

    static final VarHandle _REARRANGE_FILE_DATA$Flags$VH_ = _REARRANGE_FILE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _REARRANGE_FILE_DATA$Flags$VH() { return _REARRANGE_FILE_DATA$Flags$VH_; }

    static final MemoryLayout _REARRANGE_FILE_DATA32$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("SourceStartingOffset"),
        C_LONGLONG.withName("TargetOffset"),
        C_INT.withName("SourceFileHandle"),
        C_LONG.withName("Length"),
        C_LONG.withName("Flags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_REARRANGE_FILE_DATA32");
    static final jdk.incubator.foreign.MemoryLayout _REARRANGE_FILE_DATA32$struct$LAYOUT() { return _REARRANGE_FILE_DATA32$struct$LAYOUT_; }

    static final MemoryLayout _REARRANGE_FILE_DATA32$SourceStartingOffset$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _REARRANGE_FILE_DATA32$SourceStartingOffset$LAYOUT() { return _REARRANGE_FILE_DATA32$SourceStartingOffset$LAYOUT_; }

    static final VarHandle _REARRANGE_FILE_DATA32$SourceStartingOffset$VH_ = _REARRANGE_FILE_DATA32$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SourceStartingOffset"));
    static final java.lang.invoke.VarHandle _REARRANGE_FILE_DATA32$SourceStartingOffset$VH() { return _REARRANGE_FILE_DATA32$SourceStartingOffset$VH_; }

    static final MemoryLayout _REARRANGE_FILE_DATA32$TargetOffset$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _REARRANGE_FILE_DATA32$TargetOffset$LAYOUT() { return _REARRANGE_FILE_DATA32$TargetOffset$LAYOUT_; }

    static final VarHandle _REARRANGE_FILE_DATA32$TargetOffset$VH_ = _REARRANGE_FILE_DATA32$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TargetOffset"));
    static final java.lang.invoke.VarHandle _REARRANGE_FILE_DATA32$TargetOffset$VH() { return _REARRANGE_FILE_DATA32$TargetOffset$VH_; }

    static final MemoryLayout _REARRANGE_FILE_DATA32$SourceFileHandle$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _REARRANGE_FILE_DATA32$SourceFileHandle$LAYOUT() { return _REARRANGE_FILE_DATA32$SourceFileHandle$LAYOUT_; }

    static final VarHandle _REARRANGE_FILE_DATA32$SourceFileHandle$VH_ = _REARRANGE_FILE_DATA32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SourceFileHandle"));
    static final java.lang.invoke.VarHandle _REARRANGE_FILE_DATA32$SourceFileHandle$VH() { return _REARRANGE_FILE_DATA32$SourceFileHandle$VH_; }

    static final MemoryLayout _REARRANGE_FILE_DATA32$Length$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _REARRANGE_FILE_DATA32$Length$LAYOUT() { return _REARRANGE_FILE_DATA32$Length$LAYOUT_; }

    static final VarHandle _REARRANGE_FILE_DATA32$Length$VH_ = _REARRANGE_FILE_DATA32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Length"));
    static final java.lang.invoke.VarHandle _REARRANGE_FILE_DATA32$Length$VH() { return _REARRANGE_FILE_DATA32$Length$VH_; }

    static final MemoryLayout _REARRANGE_FILE_DATA32$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _REARRANGE_FILE_DATA32$Flags$LAYOUT() { return _REARRANGE_FILE_DATA32$Flags$LAYOUT_; }

    static final VarHandle _REARRANGE_FILE_DATA32$Flags$VH_ = _REARRANGE_FILE_DATA32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _REARRANGE_FILE_DATA32$Flags$VH() { return _REARRANGE_FILE_DATA32$Flags$VH_; }

    static final MemoryLayout _SHUFFLE_FILE_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("StartingOffset"),
        C_LONGLONG.withName("Length"),
        C_LONG.withName("Flags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_SHUFFLE_FILE_DATA");
    static final jdk.incubator.foreign.MemoryLayout _SHUFFLE_FILE_DATA$struct$LAYOUT() { return _SHUFFLE_FILE_DATA$struct$LAYOUT_; }

    static final MemoryLayout _SHUFFLE_FILE_DATA$StartingOffset$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _SHUFFLE_FILE_DATA$StartingOffset$LAYOUT() { return _SHUFFLE_FILE_DATA$StartingOffset$LAYOUT_; }

    static final VarHandle _SHUFFLE_FILE_DATA$StartingOffset$VH_ = _SHUFFLE_FILE_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("StartingOffset"));
    static final java.lang.invoke.VarHandle _SHUFFLE_FILE_DATA$StartingOffset$VH() { return _SHUFFLE_FILE_DATA$StartingOffset$VH_; }

    static final MemoryLayout _SHUFFLE_FILE_DATA$Length$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _SHUFFLE_FILE_DATA$Length$LAYOUT() { return _SHUFFLE_FILE_DATA$Length$LAYOUT_; }

    static final VarHandle _SHUFFLE_FILE_DATA$Length$VH_ = _SHUFFLE_FILE_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Length"));
    static final java.lang.invoke.VarHandle _SHUFFLE_FILE_DATA$Length$VH() { return _SHUFFLE_FILE_DATA$Length$VH_; }

    static final MemoryLayout _SHUFFLE_FILE_DATA$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SHUFFLE_FILE_DATA$Flags$LAYOUT() { return _SHUFFLE_FILE_DATA$Flags$LAYOUT_; }

    static final VarHandle _SHUFFLE_FILE_DATA$Flags$VH_ = _SHUFFLE_FILE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _SHUFFLE_FILE_DATA$Flags$VH() { return _SHUFFLE_FILE_DATA$Flags$VH_; }

    static final MemoryLayout _NETWORK_APP_INSTANCE_EA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("AppInstanceID"),
        C_LONG.withName("CsvFlags")
    ).withName("_NETWORK_APP_INSTANCE_EA");
    static final jdk.incubator.foreign.MemoryLayout _NETWORK_APP_INSTANCE_EA$struct$LAYOUT() { return _NETWORK_APP_INSTANCE_EA$struct$LAYOUT_; }

    static final MemoryLayout _NETWORK_APP_INSTANCE_EA$CsvFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _NETWORK_APP_INSTANCE_EA$CsvFlags$LAYOUT() { return _NETWORK_APP_INSTANCE_EA$CsvFlags$LAYOUT_; }

    static final VarHandle _NETWORK_APP_INSTANCE_EA$CsvFlags$VH_ = _NETWORK_APP_INSTANCE_EA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CsvFlags"));
    static final java.lang.invoke.VarHandle _NETWORK_APP_INSTANCE_EA$CsvFlags$VH() { return _NETWORK_APP_INSTANCE_EA$CsvFlags$VH_; }

    static final MemoryLayout GUID_MAX_POWER_SAVINGS$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_MAX_POWER_SAVINGS$LAYOUT() { return GUID_MAX_POWER_SAVINGS$LAYOUT_; }

    static final MemorySegment GUID_MAX_POWER_SAVINGS$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_MAX_POWER_SAVINGS", GUID_MAX_POWER_SAVINGS$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_MAX_POWER_SAVINGS$SEGMENT() { return GUID_MAX_POWER_SAVINGS$SEGMENT_; }

    static final MemoryLayout GUID_MIN_POWER_SAVINGS$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_MIN_POWER_SAVINGS$LAYOUT() { return GUID_MIN_POWER_SAVINGS$LAYOUT_; }

    static final MemorySegment GUID_MIN_POWER_SAVINGS$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_MIN_POWER_SAVINGS", GUID_MIN_POWER_SAVINGS$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_MIN_POWER_SAVINGS$SEGMENT() { return GUID_MIN_POWER_SAVINGS$SEGMENT_; }

    static final MemoryLayout GUID_TYPICAL_POWER_SAVINGS$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_TYPICAL_POWER_SAVINGS$LAYOUT() { return GUID_TYPICAL_POWER_SAVINGS$LAYOUT_; }

    static final MemorySegment GUID_TYPICAL_POWER_SAVINGS$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_TYPICAL_POWER_SAVINGS", GUID_TYPICAL_POWER_SAVINGS$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_TYPICAL_POWER_SAVINGS$SEGMENT() { return GUID_TYPICAL_POWER_SAVINGS$SEGMENT_; }

    static final MemoryLayout NO_SUBGROUP_GUID$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout NO_SUBGROUP_GUID$LAYOUT() { return NO_SUBGROUP_GUID$LAYOUT_; }

    static final MemorySegment NO_SUBGROUP_GUID$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "NO_SUBGROUP_GUID", NO_SUBGROUP_GUID$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment NO_SUBGROUP_GUID$SEGMENT() { return NO_SUBGROUP_GUID$SEGMENT_; }

    static final MemoryLayout ALL_POWERSCHEMES_GUID$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout ALL_POWERSCHEMES_GUID$LAYOUT() { return ALL_POWERSCHEMES_GUID$LAYOUT_; }

    static final MemorySegment ALL_POWERSCHEMES_GUID$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "ALL_POWERSCHEMES_GUID", ALL_POWERSCHEMES_GUID$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment ALL_POWERSCHEMES_GUID$SEGMENT() { return ALL_POWERSCHEMES_GUID$SEGMENT_; }

    static final MemoryLayout GUID_POWERSCHEME_PERSONALITY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_POWERSCHEME_PERSONALITY$LAYOUT() { return GUID_POWERSCHEME_PERSONALITY$LAYOUT_; }

    static final MemorySegment GUID_POWERSCHEME_PERSONALITY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_POWERSCHEME_PERSONALITY", GUID_POWERSCHEME_PERSONALITY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_POWERSCHEME_PERSONALITY$SEGMENT() { return GUID_POWERSCHEME_PERSONALITY$SEGMENT_; }

    static final MemoryLayout GUID_ACTIVE_POWERSCHEME$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_ACTIVE_POWERSCHEME$LAYOUT() { return GUID_ACTIVE_POWERSCHEME$LAYOUT_; }

    static final MemorySegment GUID_ACTIVE_POWERSCHEME$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_ACTIVE_POWERSCHEME", GUID_ACTIVE_POWERSCHEME$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_ACTIVE_POWERSCHEME$SEGMENT() { return GUID_ACTIVE_POWERSCHEME$SEGMENT_; }

    static final MemoryLayout GUID_IDLE_RESILIENCY_SUBGROUP$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_IDLE_RESILIENCY_SUBGROUP$LAYOUT() { return GUID_IDLE_RESILIENCY_SUBGROUP$LAYOUT_; }

    static final MemorySegment GUID_IDLE_RESILIENCY_SUBGROUP$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_IDLE_RESILIENCY_SUBGROUP", GUID_IDLE_RESILIENCY_SUBGROUP$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_IDLE_RESILIENCY_SUBGROUP$SEGMENT() { return GUID_IDLE_RESILIENCY_SUBGROUP$SEGMENT_; }

    static final MemoryLayout GUID_IDLE_RESILIENCY_PERIOD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_IDLE_RESILIENCY_PERIOD$LAYOUT() { return GUID_IDLE_RESILIENCY_PERIOD$LAYOUT_; }

    static final MemorySegment GUID_IDLE_RESILIENCY_PERIOD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_IDLE_RESILIENCY_PERIOD", GUID_IDLE_RESILIENCY_PERIOD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_IDLE_RESILIENCY_PERIOD$SEGMENT() { return GUID_IDLE_RESILIENCY_PERIOD$SEGMENT_; }

    static final MemoryLayout GUID_DEEP_SLEEP_ENABLED$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEEP_SLEEP_ENABLED$LAYOUT() { return GUID_DEEP_SLEEP_ENABLED$LAYOUT_; }

    static final MemorySegment GUID_DEEP_SLEEP_ENABLED$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEEP_SLEEP_ENABLED", GUID_DEEP_SLEEP_ENABLED$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEEP_SLEEP_ENABLED$SEGMENT() { return GUID_DEEP_SLEEP_ENABLED$SEGMENT_; }

    static final MemoryLayout GUID_DEEP_SLEEP_PLATFORM_STATE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEEP_SLEEP_PLATFORM_STATE$LAYOUT() { return GUID_DEEP_SLEEP_PLATFORM_STATE$LAYOUT_; }

    static final MemorySegment GUID_DEEP_SLEEP_PLATFORM_STATE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEEP_SLEEP_PLATFORM_STATE", GUID_DEEP_SLEEP_PLATFORM_STATE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEEP_SLEEP_PLATFORM_STATE$SEGMENT() { return GUID_DEEP_SLEEP_PLATFORM_STATE$SEGMENT_; }

    static final MemoryLayout GUID_DISK_COALESCING_POWERDOWN_TIMEOUT$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DISK_COALESCING_POWERDOWN_TIMEOUT$LAYOUT() { return GUID_DISK_COALESCING_POWERDOWN_TIMEOUT$LAYOUT_; }

    static final MemorySegment GUID_DISK_COALESCING_POWERDOWN_TIMEOUT$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DISK_COALESCING_POWERDOWN_TIMEOUT", GUID_DISK_COALESCING_POWERDOWN_TIMEOUT$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DISK_COALESCING_POWERDOWN_TIMEOUT$SEGMENT() { return GUID_DISK_COALESCING_POWERDOWN_TIMEOUT$SEGMENT_; }

    static final MemoryLayout GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT$LAYOUT() { return GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT$LAYOUT_; }

    static final MemorySegment GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT", GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT$SEGMENT() { return GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT$SEGMENT_; }

    static final MemoryLayout GUID_VIDEO_SUBGROUP$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_VIDEO_SUBGROUP$LAYOUT() { return GUID_VIDEO_SUBGROUP$LAYOUT_; }

    static final MemorySegment GUID_VIDEO_SUBGROUP$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_VIDEO_SUBGROUP", GUID_VIDEO_SUBGROUP$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_VIDEO_SUBGROUP$SEGMENT() { return GUID_VIDEO_SUBGROUP$SEGMENT_; }

    static final MemoryLayout GUID_VIDEO_POWERDOWN_TIMEOUT$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_VIDEO_POWERDOWN_TIMEOUT$LAYOUT() { return GUID_VIDEO_POWERDOWN_TIMEOUT$LAYOUT_; }

    static final MemorySegment GUID_VIDEO_POWERDOWN_TIMEOUT$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_VIDEO_POWERDOWN_TIMEOUT", GUID_VIDEO_POWERDOWN_TIMEOUT$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_VIDEO_POWERDOWN_TIMEOUT$SEGMENT() { return GUID_VIDEO_POWERDOWN_TIMEOUT$SEGMENT_; }

    static final MemoryLayout GUID_VIDEO_ANNOYANCE_TIMEOUT$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_VIDEO_ANNOYANCE_TIMEOUT$LAYOUT() { return GUID_VIDEO_ANNOYANCE_TIMEOUT$LAYOUT_; }

    static final MemorySegment GUID_VIDEO_ANNOYANCE_TIMEOUT$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_VIDEO_ANNOYANCE_TIMEOUT", GUID_VIDEO_ANNOYANCE_TIMEOUT$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_VIDEO_ANNOYANCE_TIMEOUT$SEGMENT() { return GUID_VIDEO_ANNOYANCE_TIMEOUT$SEGMENT_; }

    static final MemoryLayout GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE$LAYOUT() { return GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE$LAYOUT_; }

    static final MemorySegment GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE", GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE$SEGMENT() { return GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE$SEGMENT_; }

    static final MemoryLayout GUID_VIDEO_DIM_TIMEOUT$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_VIDEO_DIM_TIMEOUT$LAYOUT() { return GUID_VIDEO_DIM_TIMEOUT$LAYOUT_; }

    static final MemorySegment GUID_VIDEO_DIM_TIMEOUT$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_VIDEO_DIM_TIMEOUT", GUID_VIDEO_DIM_TIMEOUT$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_VIDEO_DIM_TIMEOUT$SEGMENT() { return GUID_VIDEO_DIM_TIMEOUT$SEGMENT_; }

    static final MemoryLayout GUID_VIDEO_ADAPTIVE_POWERDOWN$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_VIDEO_ADAPTIVE_POWERDOWN$LAYOUT() { return GUID_VIDEO_ADAPTIVE_POWERDOWN$LAYOUT_; }

    static final MemorySegment GUID_VIDEO_ADAPTIVE_POWERDOWN$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_VIDEO_ADAPTIVE_POWERDOWN", GUID_VIDEO_ADAPTIVE_POWERDOWN$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_VIDEO_ADAPTIVE_POWERDOWN$SEGMENT() { return GUID_VIDEO_ADAPTIVE_POWERDOWN$SEGMENT_; }

    static final MemoryLayout GUID_MONITOR_POWER_ON$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_MONITOR_POWER_ON$LAYOUT() { return GUID_MONITOR_POWER_ON$LAYOUT_; }

    static final MemorySegment GUID_MONITOR_POWER_ON$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_MONITOR_POWER_ON", GUID_MONITOR_POWER_ON$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_MONITOR_POWER_ON$SEGMENT() { return GUID_MONITOR_POWER_ON$SEGMENT_; }

    static final MemoryLayout GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS$LAYOUT() { return GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS$LAYOUT_; }

    static final MemorySegment GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS", GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS$SEGMENT() { return GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS$SEGMENT_; }

    static final MemoryLayout GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS$LAYOUT() { return GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS$LAYOUT_; }

    static final MemorySegment GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS", GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS$SEGMENT() { return GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS$SEGMENT_; }

    static final MemoryLayout GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS$LAYOUT() { return GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS$LAYOUT_; }

    static final MemorySegment GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS", GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS$SEGMENT() { return GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS$SEGMENT_; }

    static final MemoryLayout GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS$LAYOUT() { return GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS$LAYOUT_; }

    static final MemorySegment GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS", GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS$SEGMENT() { return GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS$SEGMENT_; }

    static final MemoryLayout GUID_CONSOLE_DISPLAY_STATE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_CONSOLE_DISPLAY_STATE$LAYOUT() { return GUID_CONSOLE_DISPLAY_STATE$LAYOUT_; }

    static final MemorySegment GUID_CONSOLE_DISPLAY_STATE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_CONSOLE_DISPLAY_STATE", GUID_CONSOLE_DISPLAY_STATE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_CONSOLE_DISPLAY_STATE$SEGMENT() { return GUID_CONSOLE_DISPLAY_STATE$SEGMENT_; }

    static final MemoryLayout GUID_ALLOW_DISPLAY_REQUIRED$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_ALLOW_DISPLAY_REQUIRED$LAYOUT() { return GUID_ALLOW_DISPLAY_REQUIRED$LAYOUT_; }

    static final MemorySegment GUID_ALLOW_DISPLAY_REQUIRED$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_ALLOW_DISPLAY_REQUIRED", GUID_ALLOW_DISPLAY_REQUIRED$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_ALLOW_DISPLAY_REQUIRED$SEGMENT() { return GUID_ALLOW_DISPLAY_REQUIRED$SEGMENT_; }

    static final MemoryLayout GUID_VIDEO_CONSOLE_LOCK_TIMEOUT$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_VIDEO_CONSOLE_LOCK_TIMEOUT$LAYOUT() { return GUID_VIDEO_CONSOLE_LOCK_TIMEOUT$LAYOUT_; }

    static final MemorySegment GUID_VIDEO_CONSOLE_LOCK_TIMEOUT$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_VIDEO_CONSOLE_LOCK_TIMEOUT", GUID_VIDEO_CONSOLE_LOCK_TIMEOUT$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_VIDEO_CONSOLE_LOCK_TIMEOUT$SEGMENT() { return GUID_VIDEO_CONSOLE_LOCK_TIMEOUT$SEGMENT_; }

    static final MemoryLayout GUID_ADVANCED_COLOR_QUALITY_BIAS$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_ADVANCED_COLOR_QUALITY_BIAS$LAYOUT() { return GUID_ADVANCED_COLOR_QUALITY_BIAS$LAYOUT_; }

    static final MemorySegment GUID_ADVANCED_COLOR_QUALITY_BIAS$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_ADVANCED_COLOR_QUALITY_BIAS", GUID_ADVANCED_COLOR_QUALITY_BIAS$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_ADVANCED_COLOR_QUALITY_BIAS$SEGMENT() { return GUID_ADVANCED_COLOR_QUALITY_BIAS$SEGMENT_; }

    static final MemoryLayout GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP$LAYOUT() { return GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP$LAYOUT_; }

    static final MemorySegment GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP", GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP$SEGMENT() { return GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP$SEGMENT_; }

    static final MemoryLayout GUID_NON_ADAPTIVE_INPUT_TIMEOUT$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_NON_ADAPTIVE_INPUT_TIMEOUT$LAYOUT() { return GUID_NON_ADAPTIVE_INPUT_TIMEOUT$LAYOUT_; }

    static final MemorySegment GUID_NON_ADAPTIVE_INPUT_TIMEOUT$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_NON_ADAPTIVE_INPUT_TIMEOUT", GUID_NON_ADAPTIVE_INPUT_TIMEOUT$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_NON_ADAPTIVE_INPUT_TIMEOUT$SEGMENT() { return GUID_NON_ADAPTIVE_INPUT_TIMEOUT$SEGMENT_; }

    static final MemoryLayout GUID_ADAPTIVE_INPUT_CONTROLLER_STATE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_ADAPTIVE_INPUT_CONTROLLER_STATE$LAYOUT() { return GUID_ADAPTIVE_INPUT_CONTROLLER_STATE$LAYOUT_; }

    static final MemorySegment GUID_ADAPTIVE_INPUT_CONTROLLER_STATE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_ADAPTIVE_INPUT_CONTROLLER_STATE", GUID_ADAPTIVE_INPUT_CONTROLLER_STATE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_ADAPTIVE_INPUT_CONTROLLER_STATE$SEGMENT() { return GUID_ADAPTIVE_INPUT_CONTROLLER_STATE$SEGMENT_; }

    static final MemoryLayout GUID_DISK_SUBGROUP$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DISK_SUBGROUP$LAYOUT() { return GUID_DISK_SUBGROUP$LAYOUT_; }

    static final MemorySegment GUID_DISK_SUBGROUP$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DISK_SUBGROUP", GUID_DISK_SUBGROUP$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DISK_SUBGROUP$SEGMENT() { return GUID_DISK_SUBGROUP$SEGMENT_; }

    static final MemoryLayout GUID_DISK_MAX_POWER$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DISK_MAX_POWER$LAYOUT() { return GUID_DISK_MAX_POWER$LAYOUT_; }

    static final MemorySegment GUID_DISK_MAX_POWER$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DISK_MAX_POWER", GUID_DISK_MAX_POWER$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DISK_MAX_POWER$SEGMENT() { return GUID_DISK_MAX_POWER$SEGMENT_; }

    static final MemoryLayout GUID_DISK_POWERDOWN_TIMEOUT$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DISK_POWERDOWN_TIMEOUT$LAYOUT() { return GUID_DISK_POWERDOWN_TIMEOUT$LAYOUT_; }

    static final MemorySegment GUID_DISK_POWERDOWN_TIMEOUT$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DISK_POWERDOWN_TIMEOUT", GUID_DISK_POWERDOWN_TIMEOUT$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DISK_POWERDOWN_TIMEOUT$SEGMENT() { return GUID_DISK_POWERDOWN_TIMEOUT$SEGMENT_; }

    static final MemoryLayout GUID_DISK_IDLE_TIMEOUT$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DISK_IDLE_TIMEOUT$LAYOUT() { return GUID_DISK_IDLE_TIMEOUT$LAYOUT_; }

    static final MemorySegment GUID_DISK_IDLE_TIMEOUT$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DISK_IDLE_TIMEOUT", GUID_DISK_IDLE_TIMEOUT$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DISK_IDLE_TIMEOUT$SEGMENT() { return GUID_DISK_IDLE_TIMEOUT$SEGMENT_; }

    static final MemoryLayout GUID_DISK_BURST_IGNORE_THRESHOLD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DISK_BURST_IGNORE_THRESHOLD$LAYOUT() { return GUID_DISK_BURST_IGNORE_THRESHOLD$LAYOUT_; }

    static final MemorySegment GUID_DISK_BURST_IGNORE_THRESHOLD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DISK_BURST_IGNORE_THRESHOLD", GUID_DISK_BURST_IGNORE_THRESHOLD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DISK_BURST_IGNORE_THRESHOLD$SEGMENT() { return GUID_DISK_BURST_IGNORE_THRESHOLD$SEGMENT_; }

    static final MemoryLayout GUID_DISK_ADAPTIVE_POWERDOWN$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DISK_ADAPTIVE_POWERDOWN$LAYOUT() { return GUID_DISK_ADAPTIVE_POWERDOWN$LAYOUT_; }

    static final MemorySegment GUID_DISK_ADAPTIVE_POWERDOWN$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DISK_ADAPTIVE_POWERDOWN", GUID_DISK_ADAPTIVE_POWERDOWN$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DISK_ADAPTIVE_POWERDOWN$SEGMENT() { return GUID_DISK_ADAPTIVE_POWERDOWN$SEGMENT_; }

    static final MemoryLayout GUID_DISK_NVME_NOPPME$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DISK_NVME_NOPPME$LAYOUT() { return GUID_DISK_NVME_NOPPME$LAYOUT_; }

    static final MemorySegment GUID_DISK_NVME_NOPPME$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DISK_NVME_NOPPME", GUID_DISK_NVME_NOPPME$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DISK_NVME_NOPPME$SEGMENT() { return GUID_DISK_NVME_NOPPME$SEGMENT_; }

    static final MemoryLayout GUID_SLEEP_SUBGROUP$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_SLEEP_SUBGROUP$LAYOUT() { return GUID_SLEEP_SUBGROUP$LAYOUT_; }

    static final MemorySegment GUID_SLEEP_SUBGROUP$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_SLEEP_SUBGROUP", GUID_SLEEP_SUBGROUP$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_SLEEP_SUBGROUP$SEGMENT() { return GUID_SLEEP_SUBGROUP$SEGMENT_; }

    static final MemoryLayout GUID_SLEEP_IDLE_THRESHOLD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_SLEEP_IDLE_THRESHOLD$LAYOUT() { return GUID_SLEEP_IDLE_THRESHOLD$LAYOUT_; }

    static final MemorySegment GUID_SLEEP_IDLE_THRESHOLD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_SLEEP_IDLE_THRESHOLD", GUID_SLEEP_IDLE_THRESHOLD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_SLEEP_IDLE_THRESHOLD$SEGMENT() { return GUID_SLEEP_IDLE_THRESHOLD$SEGMENT_; }

    static final MemoryLayout GUID_STANDBY_TIMEOUT$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_STANDBY_TIMEOUT$LAYOUT() { return GUID_STANDBY_TIMEOUT$LAYOUT_; }

    static final MemorySegment GUID_STANDBY_TIMEOUT$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_STANDBY_TIMEOUT", GUID_STANDBY_TIMEOUT$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_STANDBY_TIMEOUT$SEGMENT() { return GUID_STANDBY_TIMEOUT$SEGMENT_; }

    static final MemoryLayout GUID_UNATTEND_SLEEP_TIMEOUT$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_UNATTEND_SLEEP_TIMEOUT$LAYOUT() { return GUID_UNATTEND_SLEEP_TIMEOUT$LAYOUT_; }

    static final MemorySegment GUID_UNATTEND_SLEEP_TIMEOUT$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_UNATTEND_SLEEP_TIMEOUT", GUID_UNATTEND_SLEEP_TIMEOUT$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_UNATTEND_SLEEP_TIMEOUT$SEGMENT() { return GUID_UNATTEND_SLEEP_TIMEOUT$SEGMENT_; }

    static final MemoryLayout GUID_HIBERNATE_TIMEOUT$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_HIBERNATE_TIMEOUT$LAYOUT() { return GUID_HIBERNATE_TIMEOUT$LAYOUT_; }

    static final MemorySegment GUID_HIBERNATE_TIMEOUT$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_HIBERNATE_TIMEOUT", GUID_HIBERNATE_TIMEOUT$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_HIBERNATE_TIMEOUT$SEGMENT() { return GUID_HIBERNATE_TIMEOUT$SEGMENT_; }

    static final MemoryLayout GUID_HIBERNATE_FASTS4_POLICY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_HIBERNATE_FASTS4_POLICY$LAYOUT() { return GUID_HIBERNATE_FASTS4_POLICY$LAYOUT_; }

    static final MemorySegment GUID_HIBERNATE_FASTS4_POLICY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_HIBERNATE_FASTS4_POLICY", GUID_HIBERNATE_FASTS4_POLICY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_HIBERNATE_FASTS4_POLICY$SEGMENT() { return GUID_HIBERNATE_FASTS4_POLICY$SEGMENT_; }

    static final MemoryLayout GUID_CRITICAL_POWER_TRANSITION$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_CRITICAL_POWER_TRANSITION$LAYOUT() { return GUID_CRITICAL_POWER_TRANSITION$LAYOUT_; }

    static final MemorySegment GUID_CRITICAL_POWER_TRANSITION$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_CRITICAL_POWER_TRANSITION", GUID_CRITICAL_POWER_TRANSITION$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_CRITICAL_POWER_TRANSITION$SEGMENT() { return GUID_CRITICAL_POWER_TRANSITION$SEGMENT_; }

    static final MemoryLayout GUID_SYSTEM_AWAYMODE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_SYSTEM_AWAYMODE$LAYOUT() { return GUID_SYSTEM_AWAYMODE$LAYOUT_; }

    static final MemorySegment GUID_SYSTEM_AWAYMODE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_SYSTEM_AWAYMODE", GUID_SYSTEM_AWAYMODE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_SYSTEM_AWAYMODE$SEGMENT() { return GUID_SYSTEM_AWAYMODE$SEGMENT_; }

    static final MemoryLayout GUID_ALLOW_AWAYMODE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_ALLOW_AWAYMODE$LAYOUT() { return GUID_ALLOW_AWAYMODE$LAYOUT_; }

    static final MemorySegment GUID_ALLOW_AWAYMODE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_ALLOW_AWAYMODE", GUID_ALLOW_AWAYMODE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_ALLOW_AWAYMODE$SEGMENT() { return GUID_ALLOW_AWAYMODE$SEGMENT_; }

    static final MemoryLayout GUID_USER_PRESENCE_PREDICTION$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_USER_PRESENCE_PREDICTION$LAYOUT() { return GUID_USER_PRESENCE_PREDICTION$LAYOUT_; }

    static final MemorySegment GUID_USER_PRESENCE_PREDICTION$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_USER_PRESENCE_PREDICTION", GUID_USER_PRESENCE_PREDICTION$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_USER_PRESENCE_PREDICTION$SEGMENT() { return GUID_USER_PRESENCE_PREDICTION$SEGMENT_; }

    static final MemoryLayout GUID_STANDBY_BUDGET_GRACE_PERIOD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_STANDBY_BUDGET_GRACE_PERIOD$LAYOUT() { return GUID_STANDBY_BUDGET_GRACE_PERIOD$LAYOUT_; }

    static final MemorySegment GUID_STANDBY_BUDGET_GRACE_PERIOD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_STANDBY_BUDGET_GRACE_PERIOD", GUID_STANDBY_BUDGET_GRACE_PERIOD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_STANDBY_BUDGET_GRACE_PERIOD$SEGMENT() { return GUID_STANDBY_BUDGET_GRACE_PERIOD$SEGMENT_; }

    static final MemoryLayout GUID_STANDBY_BUDGET_PERCENT$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_STANDBY_BUDGET_PERCENT$LAYOUT() { return GUID_STANDBY_BUDGET_PERCENT$LAYOUT_; }

    static final MemorySegment GUID_STANDBY_BUDGET_PERCENT$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_STANDBY_BUDGET_PERCENT", GUID_STANDBY_BUDGET_PERCENT$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_STANDBY_BUDGET_PERCENT$SEGMENT() { return GUID_STANDBY_BUDGET_PERCENT$SEGMENT_; }

    static final MemoryLayout GUID_STANDBY_RESERVE_GRACE_PERIOD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_STANDBY_RESERVE_GRACE_PERIOD$LAYOUT() { return GUID_STANDBY_RESERVE_GRACE_PERIOD$LAYOUT_; }

    static final MemorySegment GUID_STANDBY_RESERVE_GRACE_PERIOD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_STANDBY_RESERVE_GRACE_PERIOD", GUID_STANDBY_RESERVE_GRACE_PERIOD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_STANDBY_RESERVE_GRACE_PERIOD$SEGMENT() { return GUID_STANDBY_RESERVE_GRACE_PERIOD$SEGMENT_; }

    static final MemoryLayout GUID_STANDBY_RESERVE_TIME$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_STANDBY_RESERVE_TIME$LAYOUT() { return GUID_STANDBY_RESERVE_TIME$LAYOUT_; }

    static final MemorySegment GUID_STANDBY_RESERVE_TIME$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_STANDBY_RESERVE_TIME", GUID_STANDBY_RESERVE_TIME$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_STANDBY_RESERVE_TIME$SEGMENT() { return GUID_STANDBY_RESERVE_TIME$SEGMENT_; }

    static final MemoryLayout GUID_STANDBY_RESET_PERCENT$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_STANDBY_RESET_PERCENT$LAYOUT() { return GUID_STANDBY_RESET_PERCENT$LAYOUT_; }

    static final MemorySegment GUID_STANDBY_RESET_PERCENT$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_STANDBY_RESET_PERCENT", GUID_STANDBY_RESET_PERCENT$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_STANDBY_RESET_PERCENT$SEGMENT() { return GUID_STANDBY_RESET_PERCENT$SEGMENT_; }

    static final MemoryLayout GUID_ALLOW_STANDBY_STATES$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_ALLOW_STANDBY_STATES$LAYOUT() { return GUID_ALLOW_STANDBY_STATES$LAYOUT_; }

    static final MemorySegment GUID_ALLOW_STANDBY_STATES$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_ALLOW_STANDBY_STATES", GUID_ALLOW_STANDBY_STATES$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_ALLOW_STANDBY_STATES$SEGMENT() { return GUID_ALLOW_STANDBY_STATES$SEGMENT_; }

    static final MemoryLayout GUID_ALLOW_RTC_WAKE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_ALLOW_RTC_WAKE$LAYOUT() { return GUID_ALLOW_RTC_WAKE$LAYOUT_; }

    static final MemorySegment GUID_ALLOW_RTC_WAKE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_ALLOW_RTC_WAKE", GUID_ALLOW_RTC_WAKE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_ALLOW_RTC_WAKE$SEGMENT() { return GUID_ALLOW_RTC_WAKE$SEGMENT_; }

    static final MemoryLayout GUID_LEGACY_RTC_MITIGATION$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_LEGACY_RTC_MITIGATION$LAYOUT() { return GUID_LEGACY_RTC_MITIGATION$LAYOUT_; }

    static final MemorySegment GUID_LEGACY_RTC_MITIGATION$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_LEGACY_RTC_MITIGATION", GUID_LEGACY_RTC_MITIGATION$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_LEGACY_RTC_MITIGATION$SEGMENT() { return GUID_LEGACY_RTC_MITIGATION$SEGMENT_; }

    static final MemoryLayout GUID_ALLOW_SYSTEM_REQUIRED$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_ALLOW_SYSTEM_REQUIRED$LAYOUT() { return GUID_ALLOW_SYSTEM_REQUIRED$LAYOUT_; }

    static final MemorySegment GUID_ALLOW_SYSTEM_REQUIRED$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_ALLOW_SYSTEM_REQUIRED", GUID_ALLOW_SYSTEM_REQUIRED$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_ALLOW_SYSTEM_REQUIRED$SEGMENT() { return GUID_ALLOW_SYSTEM_REQUIRED$SEGMENT_; }

    static final MemoryLayout GUID_POWER_SAVING_STATUS$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_POWER_SAVING_STATUS$LAYOUT() { return GUID_POWER_SAVING_STATUS$LAYOUT_; }

    static final MemorySegment GUID_POWER_SAVING_STATUS$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_POWER_SAVING_STATUS", GUID_POWER_SAVING_STATUS$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_POWER_SAVING_STATUS$SEGMENT() { return GUID_POWER_SAVING_STATUS$SEGMENT_; }

    static final MemoryLayout GUID_ENERGY_SAVER_SUBGROUP$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_ENERGY_SAVER_SUBGROUP$LAYOUT() { return GUID_ENERGY_SAVER_SUBGROUP$LAYOUT_; }

    static final MemorySegment GUID_ENERGY_SAVER_SUBGROUP$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_ENERGY_SAVER_SUBGROUP", GUID_ENERGY_SAVER_SUBGROUP$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_ENERGY_SAVER_SUBGROUP$SEGMENT() { return GUID_ENERGY_SAVER_SUBGROUP$SEGMENT_; }

    static final MemoryLayout GUID_ENERGY_SAVER_BATTERY_THRESHOLD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_ENERGY_SAVER_BATTERY_THRESHOLD$LAYOUT() { return GUID_ENERGY_SAVER_BATTERY_THRESHOLD$LAYOUT_; }

    static final MemorySegment GUID_ENERGY_SAVER_BATTERY_THRESHOLD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_ENERGY_SAVER_BATTERY_THRESHOLD", GUID_ENERGY_SAVER_BATTERY_THRESHOLD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_ENERGY_SAVER_BATTERY_THRESHOLD$SEGMENT() { return GUID_ENERGY_SAVER_BATTERY_THRESHOLD$SEGMENT_; }

    static final MemoryLayout GUID_ENERGY_SAVER_BRIGHTNESS$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_ENERGY_SAVER_BRIGHTNESS$LAYOUT() { return GUID_ENERGY_SAVER_BRIGHTNESS$LAYOUT_; }

    static final MemorySegment GUID_ENERGY_SAVER_BRIGHTNESS$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_ENERGY_SAVER_BRIGHTNESS", GUID_ENERGY_SAVER_BRIGHTNESS$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_ENERGY_SAVER_BRIGHTNESS$SEGMENT() { return GUID_ENERGY_SAVER_BRIGHTNESS$SEGMENT_; }

    static final MemoryLayout GUID_ENERGY_SAVER_POLICY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_ENERGY_SAVER_POLICY$LAYOUT() { return GUID_ENERGY_SAVER_POLICY$LAYOUT_; }

    static final MemorySegment GUID_ENERGY_SAVER_POLICY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_ENERGY_SAVER_POLICY", GUID_ENERGY_SAVER_POLICY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_ENERGY_SAVER_POLICY$SEGMENT() { return GUID_ENERGY_SAVER_POLICY$SEGMENT_; }

    static final MemoryLayout GUID_SYSTEM_BUTTON_SUBGROUP$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_SYSTEM_BUTTON_SUBGROUP$LAYOUT() { return GUID_SYSTEM_BUTTON_SUBGROUP$LAYOUT_; }

    static final MemorySegment GUID_SYSTEM_BUTTON_SUBGROUP$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_SYSTEM_BUTTON_SUBGROUP", GUID_SYSTEM_BUTTON_SUBGROUP$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_SYSTEM_BUTTON_SUBGROUP$SEGMENT() { return GUID_SYSTEM_BUTTON_SUBGROUP$SEGMENT_; }

    static final MemoryLayout GUID_POWERBUTTON_ACTION$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_POWERBUTTON_ACTION$LAYOUT() { return GUID_POWERBUTTON_ACTION$LAYOUT_; }

    static final MemorySegment GUID_POWERBUTTON_ACTION$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_POWERBUTTON_ACTION", GUID_POWERBUTTON_ACTION$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_POWERBUTTON_ACTION$SEGMENT() { return GUID_POWERBUTTON_ACTION$SEGMENT_; }

    static final MemoryLayout GUID_SLEEPBUTTON_ACTION$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_SLEEPBUTTON_ACTION$LAYOUT() { return GUID_SLEEPBUTTON_ACTION$LAYOUT_; }

    static final MemorySegment GUID_SLEEPBUTTON_ACTION$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_SLEEPBUTTON_ACTION", GUID_SLEEPBUTTON_ACTION$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_SLEEPBUTTON_ACTION$SEGMENT() { return GUID_SLEEPBUTTON_ACTION$SEGMENT_; }

    static final MemoryLayout GUID_USERINTERFACEBUTTON_ACTION$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_USERINTERFACEBUTTON_ACTION$LAYOUT() { return GUID_USERINTERFACEBUTTON_ACTION$LAYOUT_; }

    static final MemorySegment GUID_USERINTERFACEBUTTON_ACTION$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_USERINTERFACEBUTTON_ACTION", GUID_USERINTERFACEBUTTON_ACTION$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_USERINTERFACEBUTTON_ACTION$SEGMENT() { return GUID_USERINTERFACEBUTTON_ACTION$SEGMENT_; }

    static final MemoryLayout GUID_LIDCLOSE_ACTION$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_LIDCLOSE_ACTION$LAYOUT() { return GUID_LIDCLOSE_ACTION$LAYOUT_; }

    static final MemorySegment GUID_LIDCLOSE_ACTION$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_LIDCLOSE_ACTION", GUID_LIDCLOSE_ACTION$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_LIDCLOSE_ACTION$SEGMENT() { return GUID_LIDCLOSE_ACTION$SEGMENT_; }

    static final MemoryLayout GUID_LIDOPEN_POWERSTATE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_LIDOPEN_POWERSTATE$LAYOUT() { return GUID_LIDOPEN_POWERSTATE$LAYOUT_; }

    static final MemorySegment GUID_LIDOPEN_POWERSTATE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_LIDOPEN_POWERSTATE", GUID_LIDOPEN_POWERSTATE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_LIDOPEN_POWERSTATE$SEGMENT() { return GUID_LIDOPEN_POWERSTATE$SEGMENT_; }

    static final MemoryLayout GUID_BATTERY_SUBGROUP$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_BATTERY_SUBGROUP$LAYOUT() { return GUID_BATTERY_SUBGROUP$LAYOUT_; }

    static final MemorySegment GUID_BATTERY_SUBGROUP$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_BATTERY_SUBGROUP", GUID_BATTERY_SUBGROUP$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_BATTERY_SUBGROUP$SEGMENT() { return GUID_BATTERY_SUBGROUP$SEGMENT_; }

    static final MemoryLayout GUID_BATTERY_DISCHARGE_ACTION_0$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_BATTERY_DISCHARGE_ACTION_0$LAYOUT() { return GUID_BATTERY_DISCHARGE_ACTION_0$LAYOUT_; }

    static final MemorySegment GUID_BATTERY_DISCHARGE_ACTION_0$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_BATTERY_DISCHARGE_ACTION_0", GUID_BATTERY_DISCHARGE_ACTION_0$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_BATTERY_DISCHARGE_ACTION_0$SEGMENT() { return GUID_BATTERY_DISCHARGE_ACTION_0$SEGMENT_; }

    static final MemoryLayout GUID_BATTERY_DISCHARGE_LEVEL_0$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_BATTERY_DISCHARGE_LEVEL_0$LAYOUT() { return GUID_BATTERY_DISCHARGE_LEVEL_0$LAYOUT_; }

    static final MemorySegment GUID_BATTERY_DISCHARGE_LEVEL_0$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_BATTERY_DISCHARGE_LEVEL_0", GUID_BATTERY_DISCHARGE_LEVEL_0$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_BATTERY_DISCHARGE_LEVEL_0$SEGMENT() { return GUID_BATTERY_DISCHARGE_LEVEL_0$SEGMENT_; }

    static final MemoryLayout GUID_BATTERY_DISCHARGE_FLAGS_0$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_BATTERY_DISCHARGE_FLAGS_0$LAYOUT() { return GUID_BATTERY_DISCHARGE_FLAGS_0$LAYOUT_; }

    static final MemorySegment GUID_BATTERY_DISCHARGE_FLAGS_0$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_BATTERY_DISCHARGE_FLAGS_0", GUID_BATTERY_DISCHARGE_FLAGS_0$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_BATTERY_DISCHARGE_FLAGS_0$SEGMENT() { return GUID_BATTERY_DISCHARGE_FLAGS_0$SEGMENT_; }

    static final MemoryLayout GUID_BATTERY_DISCHARGE_ACTION_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_BATTERY_DISCHARGE_ACTION_1$LAYOUT() { return GUID_BATTERY_DISCHARGE_ACTION_1$LAYOUT_; }

    static final MemorySegment GUID_BATTERY_DISCHARGE_ACTION_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_BATTERY_DISCHARGE_ACTION_1", GUID_BATTERY_DISCHARGE_ACTION_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_BATTERY_DISCHARGE_ACTION_1$SEGMENT() { return GUID_BATTERY_DISCHARGE_ACTION_1$SEGMENT_; }

    static final MemoryLayout GUID_BATTERY_DISCHARGE_LEVEL_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_BATTERY_DISCHARGE_LEVEL_1$LAYOUT() { return GUID_BATTERY_DISCHARGE_LEVEL_1$LAYOUT_; }

    static final MemorySegment GUID_BATTERY_DISCHARGE_LEVEL_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_BATTERY_DISCHARGE_LEVEL_1", GUID_BATTERY_DISCHARGE_LEVEL_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_BATTERY_DISCHARGE_LEVEL_1$SEGMENT() { return GUID_BATTERY_DISCHARGE_LEVEL_1$SEGMENT_; }

    static final MemoryLayout GUID_BATTERY_DISCHARGE_FLAGS_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_BATTERY_DISCHARGE_FLAGS_1$LAYOUT() { return GUID_BATTERY_DISCHARGE_FLAGS_1$LAYOUT_; }

    static final MemorySegment GUID_BATTERY_DISCHARGE_FLAGS_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_BATTERY_DISCHARGE_FLAGS_1", GUID_BATTERY_DISCHARGE_FLAGS_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_BATTERY_DISCHARGE_FLAGS_1$SEGMENT() { return GUID_BATTERY_DISCHARGE_FLAGS_1$SEGMENT_; }

    static final MemoryLayout GUID_BATTERY_DISCHARGE_ACTION_2$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_BATTERY_DISCHARGE_ACTION_2$LAYOUT() { return GUID_BATTERY_DISCHARGE_ACTION_2$LAYOUT_; }

    static final MemorySegment GUID_BATTERY_DISCHARGE_ACTION_2$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_BATTERY_DISCHARGE_ACTION_2", GUID_BATTERY_DISCHARGE_ACTION_2$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_BATTERY_DISCHARGE_ACTION_2$SEGMENT() { return GUID_BATTERY_DISCHARGE_ACTION_2$SEGMENT_; }

    static final MemoryLayout GUID_BATTERY_DISCHARGE_LEVEL_2$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_BATTERY_DISCHARGE_LEVEL_2$LAYOUT() { return GUID_BATTERY_DISCHARGE_LEVEL_2$LAYOUT_; }

    static final MemorySegment GUID_BATTERY_DISCHARGE_LEVEL_2$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_BATTERY_DISCHARGE_LEVEL_2", GUID_BATTERY_DISCHARGE_LEVEL_2$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_BATTERY_DISCHARGE_LEVEL_2$SEGMENT() { return GUID_BATTERY_DISCHARGE_LEVEL_2$SEGMENT_; }

    static final MemoryLayout GUID_BATTERY_DISCHARGE_FLAGS_2$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_BATTERY_DISCHARGE_FLAGS_2$LAYOUT() { return GUID_BATTERY_DISCHARGE_FLAGS_2$LAYOUT_; }

    static final MemorySegment GUID_BATTERY_DISCHARGE_FLAGS_2$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_BATTERY_DISCHARGE_FLAGS_2", GUID_BATTERY_DISCHARGE_FLAGS_2$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_BATTERY_DISCHARGE_FLAGS_2$SEGMENT() { return GUID_BATTERY_DISCHARGE_FLAGS_2$SEGMENT_; }

    static final MemoryLayout GUID_BATTERY_DISCHARGE_ACTION_3$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_BATTERY_DISCHARGE_ACTION_3$LAYOUT() { return GUID_BATTERY_DISCHARGE_ACTION_3$LAYOUT_; }

    static final MemorySegment GUID_BATTERY_DISCHARGE_ACTION_3$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_BATTERY_DISCHARGE_ACTION_3", GUID_BATTERY_DISCHARGE_ACTION_3$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_BATTERY_DISCHARGE_ACTION_3$SEGMENT() { return GUID_BATTERY_DISCHARGE_ACTION_3$SEGMENT_; }

    static final MemoryLayout GUID_BATTERY_DISCHARGE_LEVEL_3$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_BATTERY_DISCHARGE_LEVEL_3$LAYOUT() { return GUID_BATTERY_DISCHARGE_LEVEL_3$LAYOUT_; }

    static final MemorySegment GUID_BATTERY_DISCHARGE_LEVEL_3$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_BATTERY_DISCHARGE_LEVEL_3", GUID_BATTERY_DISCHARGE_LEVEL_3$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_BATTERY_DISCHARGE_LEVEL_3$SEGMENT() { return GUID_BATTERY_DISCHARGE_LEVEL_3$SEGMENT_; }

    static final MemoryLayout GUID_BATTERY_DISCHARGE_FLAGS_3$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_BATTERY_DISCHARGE_FLAGS_3$LAYOUT() { return GUID_BATTERY_DISCHARGE_FLAGS_3$LAYOUT_; }

    static final MemorySegment GUID_BATTERY_DISCHARGE_FLAGS_3$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_BATTERY_DISCHARGE_FLAGS_3", GUID_BATTERY_DISCHARGE_FLAGS_3$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_BATTERY_DISCHARGE_FLAGS_3$SEGMENT() { return GUID_BATTERY_DISCHARGE_FLAGS_3$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_SETTINGS_SUBGROUP$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_SETTINGS_SUBGROUP$LAYOUT() { return GUID_PROCESSOR_SETTINGS_SUBGROUP$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_SETTINGS_SUBGROUP$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_SETTINGS_SUBGROUP", GUID_PROCESSOR_SETTINGS_SUBGROUP$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_SETTINGS_SUBGROUP$SEGMENT() { return GUID_PROCESSOR_SETTINGS_SUBGROUP$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_THROTTLE_POLICY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_THROTTLE_POLICY$LAYOUT() { return GUID_PROCESSOR_THROTTLE_POLICY$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_THROTTLE_POLICY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_THROTTLE_POLICY", GUID_PROCESSOR_THROTTLE_POLICY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_THROTTLE_POLICY$SEGMENT() { return GUID_PROCESSOR_THROTTLE_POLICY$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_THROTTLE_MAXIMUM$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_THROTTLE_MAXIMUM$LAYOUT() { return GUID_PROCESSOR_THROTTLE_MAXIMUM$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_THROTTLE_MAXIMUM$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_THROTTLE_MAXIMUM", GUID_PROCESSOR_THROTTLE_MAXIMUM$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_THROTTLE_MAXIMUM$SEGMENT() { return GUID_PROCESSOR_THROTTLE_MAXIMUM$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_THROTTLE_MAXIMUM_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_THROTTLE_MAXIMUM_1$LAYOUT() { return GUID_PROCESSOR_THROTTLE_MAXIMUM_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_THROTTLE_MAXIMUM_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_THROTTLE_MAXIMUM_1", GUID_PROCESSOR_THROTTLE_MAXIMUM_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_THROTTLE_MAXIMUM_1$SEGMENT() { return GUID_PROCESSOR_THROTTLE_MAXIMUM_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_THROTTLE_MINIMUM$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_THROTTLE_MINIMUM$LAYOUT() { return GUID_PROCESSOR_THROTTLE_MINIMUM$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_THROTTLE_MINIMUM$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_THROTTLE_MINIMUM", GUID_PROCESSOR_THROTTLE_MINIMUM$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_THROTTLE_MINIMUM$SEGMENT() { return GUID_PROCESSOR_THROTTLE_MINIMUM$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_THROTTLE_MINIMUM_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_THROTTLE_MINIMUM_1$LAYOUT() { return GUID_PROCESSOR_THROTTLE_MINIMUM_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_THROTTLE_MINIMUM_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_THROTTLE_MINIMUM_1", GUID_PROCESSOR_THROTTLE_MINIMUM_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_THROTTLE_MINIMUM_1$SEGMENT() { return GUID_PROCESSOR_THROTTLE_MINIMUM_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_FREQUENCY_LIMIT$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_FREQUENCY_LIMIT$LAYOUT() { return GUID_PROCESSOR_FREQUENCY_LIMIT$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_FREQUENCY_LIMIT$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_FREQUENCY_LIMIT", GUID_PROCESSOR_FREQUENCY_LIMIT$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_FREQUENCY_LIMIT$SEGMENT() { return GUID_PROCESSOR_FREQUENCY_LIMIT$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_FREQUENCY_LIMIT_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_FREQUENCY_LIMIT_1$LAYOUT() { return GUID_PROCESSOR_FREQUENCY_LIMIT_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_FREQUENCY_LIMIT_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_FREQUENCY_LIMIT_1", GUID_PROCESSOR_FREQUENCY_LIMIT_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_FREQUENCY_LIMIT_1$SEGMENT() { return GUID_PROCESSOR_FREQUENCY_LIMIT_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_ALLOW_THROTTLING$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_ALLOW_THROTTLING$LAYOUT() { return GUID_PROCESSOR_ALLOW_THROTTLING$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_ALLOW_THROTTLING$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_ALLOW_THROTTLING", GUID_PROCESSOR_ALLOW_THROTTLING$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_ALLOW_THROTTLING$SEGMENT() { return GUID_PROCESSOR_ALLOW_THROTTLING$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_IDLESTATE_POLICY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_IDLESTATE_POLICY$LAYOUT() { return GUID_PROCESSOR_IDLESTATE_POLICY$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_IDLESTATE_POLICY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_IDLESTATE_POLICY", GUID_PROCESSOR_IDLESTATE_POLICY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_IDLESTATE_POLICY$SEGMENT() { return GUID_PROCESSOR_IDLESTATE_POLICY$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERFSTATE_POLICY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERFSTATE_POLICY$LAYOUT() { return GUID_PROCESSOR_PERFSTATE_POLICY$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERFSTATE_POLICY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERFSTATE_POLICY", GUID_PROCESSOR_PERFSTATE_POLICY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERFSTATE_POLICY$SEGMENT() { return GUID_PROCESSOR_PERFSTATE_POLICY$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_INCREASE_THRESHOLD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_INCREASE_THRESHOLD$LAYOUT() { return GUID_PROCESSOR_PERF_INCREASE_THRESHOLD$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_INCREASE_THRESHOLD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_INCREASE_THRESHOLD", GUID_PROCESSOR_PERF_INCREASE_THRESHOLD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_INCREASE_THRESHOLD$SEGMENT() { return GUID_PROCESSOR_PERF_INCREASE_THRESHOLD$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1$LAYOUT() { return GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1", GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1$SEGMENT() { return GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_DECREASE_THRESHOLD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_DECREASE_THRESHOLD$LAYOUT() { return GUID_PROCESSOR_PERF_DECREASE_THRESHOLD$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_DECREASE_THRESHOLD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_DECREASE_THRESHOLD", GUID_PROCESSOR_PERF_DECREASE_THRESHOLD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_DECREASE_THRESHOLD$SEGMENT() { return GUID_PROCESSOR_PERF_DECREASE_THRESHOLD$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1$LAYOUT() { return GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1", GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1$SEGMENT() { return GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_INCREASE_POLICY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_INCREASE_POLICY$LAYOUT() { return GUID_PROCESSOR_PERF_INCREASE_POLICY$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_INCREASE_POLICY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_INCREASE_POLICY", GUID_PROCESSOR_PERF_INCREASE_POLICY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_INCREASE_POLICY$SEGMENT() { return GUID_PROCESSOR_PERF_INCREASE_POLICY$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_INCREASE_POLICY_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_INCREASE_POLICY_1$LAYOUT() { return GUID_PROCESSOR_PERF_INCREASE_POLICY_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_INCREASE_POLICY_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_INCREASE_POLICY_1", GUID_PROCESSOR_PERF_INCREASE_POLICY_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_INCREASE_POLICY_1$SEGMENT() { return GUID_PROCESSOR_PERF_INCREASE_POLICY_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_DECREASE_POLICY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_DECREASE_POLICY$LAYOUT() { return GUID_PROCESSOR_PERF_DECREASE_POLICY$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_DECREASE_POLICY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_DECREASE_POLICY", GUID_PROCESSOR_PERF_DECREASE_POLICY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_DECREASE_POLICY$SEGMENT() { return GUID_PROCESSOR_PERF_DECREASE_POLICY$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_DECREASE_POLICY_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_DECREASE_POLICY_1$LAYOUT() { return GUID_PROCESSOR_PERF_DECREASE_POLICY_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_DECREASE_POLICY_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_DECREASE_POLICY_1", GUID_PROCESSOR_PERF_DECREASE_POLICY_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_DECREASE_POLICY_1$SEGMENT() { return GUID_PROCESSOR_PERF_DECREASE_POLICY_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_INCREASE_TIME$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_INCREASE_TIME$LAYOUT() { return GUID_PROCESSOR_PERF_INCREASE_TIME$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_INCREASE_TIME$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_INCREASE_TIME", GUID_PROCESSOR_PERF_INCREASE_TIME$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_INCREASE_TIME$SEGMENT() { return GUID_PROCESSOR_PERF_INCREASE_TIME$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_INCREASE_TIME_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_INCREASE_TIME_1$LAYOUT() { return GUID_PROCESSOR_PERF_INCREASE_TIME_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_INCREASE_TIME_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_INCREASE_TIME_1", GUID_PROCESSOR_PERF_INCREASE_TIME_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_INCREASE_TIME_1$SEGMENT() { return GUID_PROCESSOR_PERF_INCREASE_TIME_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_DECREASE_TIME$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_DECREASE_TIME$LAYOUT() { return GUID_PROCESSOR_PERF_DECREASE_TIME$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_DECREASE_TIME$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_DECREASE_TIME", GUID_PROCESSOR_PERF_DECREASE_TIME$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_DECREASE_TIME$SEGMENT() { return GUID_PROCESSOR_PERF_DECREASE_TIME$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_DECREASE_TIME_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_DECREASE_TIME_1$LAYOUT() { return GUID_PROCESSOR_PERF_DECREASE_TIME_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_DECREASE_TIME_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_DECREASE_TIME_1", GUID_PROCESSOR_PERF_DECREASE_TIME_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_DECREASE_TIME_1$SEGMENT() { return GUID_PROCESSOR_PERF_DECREASE_TIME_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_TIME_CHECK$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_TIME_CHECK$LAYOUT() { return GUID_PROCESSOR_PERF_TIME_CHECK$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_TIME_CHECK$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_TIME_CHECK", GUID_PROCESSOR_PERF_TIME_CHECK$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_TIME_CHECK$SEGMENT() { return GUID_PROCESSOR_PERF_TIME_CHECK$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_BOOST_POLICY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_BOOST_POLICY$LAYOUT() { return GUID_PROCESSOR_PERF_BOOST_POLICY$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_BOOST_POLICY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_BOOST_POLICY", GUID_PROCESSOR_PERF_BOOST_POLICY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_BOOST_POLICY$SEGMENT() { return GUID_PROCESSOR_PERF_BOOST_POLICY$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_BOOST_MODE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_BOOST_MODE$LAYOUT() { return GUID_PROCESSOR_PERF_BOOST_MODE$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_BOOST_MODE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_BOOST_MODE", GUID_PROCESSOR_PERF_BOOST_MODE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_BOOST_MODE$SEGMENT() { return GUID_PROCESSOR_PERF_BOOST_MODE$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_AUTONOMOUS_MODE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_AUTONOMOUS_MODE$LAYOUT() { return GUID_PROCESSOR_PERF_AUTONOMOUS_MODE$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_AUTONOMOUS_MODE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_AUTONOMOUS_MODE", GUID_PROCESSOR_PERF_AUTONOMOUS_MODE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_AUTONOMOUS_MODE$SEGMENT() { return GUID_PROCESSOR_PERF_AUTONOMOUS_MODE$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE$LAYOUT() { return GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE", GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE$SEGMENT() { return GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1$LAYOUT() { return GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1", GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1$SEGMENT() { return GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW$LAYOUT() { return GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW", GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW$SEGMENT() { return GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_DUTY_CYCLING$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_DUTY_CYCLING$LAYOUT() { return GUID_PROCESSOR_DUTY_CYCLING$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_DUTY_CYCLING$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_DUTY_CYCLING", GUID_PROCESSOR_DUTY_CYCLING$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_DUTY_CYCLING$SEGMENT() { return GUID_PROCESSOR_DUTY_CYCLING$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_IDLE_ALLOW_SCALING$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_IDLE_ALLOW_SCALING$LAYOUT() { return GUID_PROCESSOR_IDLE_ALLOW_SCALING$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_IDLE_ALLOW_SCALING$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_IDLE_ALLOW_SCALING", GUID_PROCESSOR_IDLE_ALLOW_SCALING$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_IDLE_ALLOW_SCALING$SEGMENT() { return GUID_PROCESSOR_IDLE_ALLOW_SCALING$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_IDLE_DISABLE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_IDLE_DISABLE$LAYOUT() { return GUID_PROCESSOR_IDLE_DISABLE$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_IDLE_DISABLE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_IDLE_DISABLE", GUID_PROCESSOR_IDLE_DISABLE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_IDLE_DISABLE$SEGMENT() { return GUID_PROCESSOR_IDLE_DISABLE$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_IDLE_STATE_MAXIMUM$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_IDLE_STATE_MAXIMUM$LAYOUT() { return GUID_PROCESSOR_IDLE_STATE_MAXIMUM$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_IDLE_STATE_MAXIMUM$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_IDLE_STATE_MAXIMUM", GUID_PROCESSOR_IDLE_STATE_MAXIMUM$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_IDLE_STATE_MAXIMUM$SEGMENT() { return GUID_PROCESSOR_IDLE_STATE_MAXIMUM$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_IDLE_TIME_CHECK$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_IDLE_TIME_CHECK$LAYOUT() { return GUID_PROCESSOR_IDLE_TIME_CHECK$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_IDLE_TIME_CHECK$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_IDLE_TIME_CHECK", GUID_PROCESSOR_IDLE_TIME_CHECK$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_IDLE_TIME_CHECK$SEGMENT() { return GUID_PROCESSOR_IDLE_TIME_CHECK$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD$LAYOUT() { return GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD", GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD$SEGMENT() { return GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD$LAYOUT() { return GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD", GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD$SEGMENT() { return GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD$LAYOUT() { return GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD", GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD$SEGMENT() { return GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD$LAYOUT() { return GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD", GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD$SEGMENT() { return GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY$LAYOUT() { return GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY", GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY$SEGMENT() { return GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY$LAYOUT() { return GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY", GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY$SEGMENT() { return GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_CORE_PARKING_MAX_CORES$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_CORE_PARKING_MAX_CORES$LAYOUT() { return GUID_PROCESSOR_CORE_PARKING_MAX_CORES$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_CORE_PARKING_MAX_CORES$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_CORE_PARKING_MAX_CORES", GUID_PROCESSOR_CORE_PARKING_MAX_CORES$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_CORE_PARKING_MAX_CORES$SEGMENT() { return GUID_PROCESSOR_CORE_PARKING_MAX_CORES$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1$LAYOUT() { return GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1", GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1$SEGMENT() { return GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_CORE_PARKING_MIN_CORES$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_CORE_PARKING_MIN_CORES$LAYOUT() { return GUID_PROCESSOR_CORE_PARKING_MIN_CORES$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_CORE_PARKING_MIN_CORES$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_CORE_PARKING_MIN_CORES", GUID_PROCESSOR_CORE_PARKING_MIN_CORES$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_CORE_PARKING_MIN_CORES$SEGMENT() { return GUID_PROCESSOR_CORE_PARKING_MIN_CORES$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1$LAYOUT() { return GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1", GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1$SEGMENT() { return GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME$LAYOUT() { return GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME", GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME$SEGMENT() { return GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME$LAYOUT() { return GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME", GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME$SEGMENT() { return GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR$LAYOUT() { return GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR", GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR$SEGMENT() { return GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD$LAYOUT() { return GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD", GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD$SEGMENT() { return GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING$LAYOUT() { return GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING", GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING$SEGMENT() { return GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR$LAYOUT() { return GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR", GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR$SEGMENT() { return GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD$LAYOUT() { return GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD", GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD$SEGMENT() { return GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING$LAYOUT() { return GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING", GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING$SEGMENT() { return GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD$LAYOUT() { return GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD", GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD$SEGMENT() { return GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PARKING_CORE_OVERRIDE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PARKING_CORE_OVERRIDE$LAYOUT() { return GUID_PROCESSOR_PARKING_CORE_OVERRIDE$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PARKING_CORE_OVERRIDE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PARKING_CORE_OVERRIDE", GUID_PROCESSOR_PARKING_CORE_OVERRIDE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PARKING_CORE_OVERRIDE$SEGMENT() { return GUID_PROCESSOR_PARKING_CORE_OVERRIDE$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PARKING_PERF_STATE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PARKING_PERF_STATE$LAYOUT() { return GUID_PROCESSOR_PARKING_PERF_STATE$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PARKING_PERF_STATE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PARKING_PERF_STATE", GUID_PROCESSOR_PARKING_PERF_STATE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PARKING_PERF_STATE$SEGMENT() { return GUID_PROCESSOR_PARKING_PERF_STATE$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PARKING_PERF_STATE_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PARKING_PERF_STATE_1$LAYOUT() { return GUID_PROCESSOR_PARKING_PERF_STATE_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PARKING_PERF_STATE_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PARKING_PERF_STATE_1", GUID_PROCESSOR_PARKING_PERF_STATE_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PARKING_PERF_STATE_1$SEGMENT() { return GUID_PROCESSOR_PARKING_PERF_STATE_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD$LAYOUT() { return GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD", GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD$SEGMENT() { return GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD$LAYOUT() { return GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD", GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD$SEGMENT() { return GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD$LAYOUT() { return GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD", GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD$SEGMENT() { return GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_SOFT_PARKING_LATENCY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_SOFT_PARKING_LATENCY$LAYOUT() { return GUID_PROCESSOR_SOFT_PARKING_LATENCY$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_SOFT_PARKING_LATENCY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_SOFT_PARKING_LATENCY", GUID_PROCESSOR_SOFT_PARKING_LATENCY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_SOFT_PARKING_LATENCY$SEGMENT() { return GUID_PROCESSOR_SOFT_PARKING_LATENCY$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_HISTORY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_HISTORY$LAYOUT() { return GUID_PROCESSOR_PERF_HISTORY$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_HISTORY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_HISTORY", GUID_PROCESSOR_PERF_HISTORY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_HISTORY$SEGMENT() { return GUID_PROCESSOR_PERF_HISTORY$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_HISTORY_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_HISTORY_1$LAYOUT() { return GUID_PROCESSOR_PERF_HISTORY_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_HISTORY_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_HISTORY_1", GUID_PROCESSOR_PERF_HISTORY_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_HISTORY_1$SEGMENT() { return GUID_PROCESSOR_PERF_HISTORY_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_INCREASE_HISTORY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_INCREASE_HISTORY$LAYOUT() { return GUID_PROCESSOR_PERF_INCREASE_HISTORY$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_INCREASE_HISTORY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_INCREASE_HISTORY", GUID_PROCESSOR_PERF_INCREASE_HISTORY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_INCREASE_HISTORY$SEGMENT() { return GUID_PROCESSOR_PERF_INCREASE_HISTORY$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_DECREASE_HISTORY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_DECREASE_HISTORY$LAYOUT() { return GUID_PROCESSOR_PERF_DECREASE_HISTORY$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_DECREASE_HISTORY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_DECREASE_HISTORY", GUID_PROCESSOR_PERF_DECREASE_HISTORY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_DECREASE_HISTORY$SEGMENT() { return GUID_PROCESSOR_PERF_DECREASE_HISTORY$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY$LAYOUT() { return GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY", GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY$SEGMENT() { return GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_LATENCY_HINT$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_LATENCY_HINT$LAYOUT() { return GUID_PROCESSOR_PERF_LATENCY_HINT$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_LATENCY_HINT$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_LATENCY_HINT", GUID_PROCESSOR_PERF_LATENCY_HINT$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_LATENCY_HINT$SEGMENT() { return GUID_PROCESSOR_PERF_LATENCY_HINT$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_LATENCY_HINT_PERF$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_LATENCY_HINT_PERF$LAYOUT() { return GUID_PROCESSOR_PERF_LATENCY_HINT_PERF$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_LATENCY_HINT_PERF$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_LATENCY_HINT_PERF", GUID_PROCESSOR_PERF_LATENCY_HINT_PERF$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_LATENCY_HINT_PERF$SEGMENT() { return GUID_PROCESSOR_PERF_LATENCY_HINT_PERF$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1$LAYOUT() { return GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1", GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1$SEGMENT() { return GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK$LAYOUT() { return GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK", GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK$SEGMENT() { return GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1$LAYOUT() { return GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1", GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1$SEGMENT() { return GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_DISTRIBUTE_UTILITY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_DISTRIBUTE_UTILITY$LAYOUT() { return GUID_PROCESSOR_DISTRIBUTE_UTILITY$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_DISTRIBUTE_UTILITY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_DISTRIBUTE_UTILITY", GUID_PROCESSOR_DISTRIBUTE_UTILITY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_DISTRIBUTE_UTILITY$SEGMENT() { return GUID_PROCESSOR_DISTRIBUTE_UTILITY$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_HETEROGENEOUS_POLICY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_HETEROGENEOUS_POLICY$LAYOUT() { return GUID_PROCESSOR_HETEROGENEOUS_POLICY$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_HETEROGENEOUS_POLICY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_HETEROGENEOUS_POLICY", GUID_PROCESSOR_HETEROGENEOUS_POLICY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_HETEROGENEOUS_POLICY$SEGMENT() { return GUID_PROCESSOR_HETEROGENEOUS_POLICY$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_HETERO_DECREASE_TIME$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_HETERO_DECREASE_TIME$LAYOUT() { return GUID_PROCESSOR_HETERO_DECREASE_TIME$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_HETERO_DECREASE_TIME$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_HETERO_DECREASE_TIME", GUID_PROCESSOR_HETERO_DECREASE_TIME$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_HETERO_DECREASE_TIME$SEGMENT() { return GUID_PROCESSOR_HETERO_DECREASE_TIME$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_HETERO_INCREASE_TIME$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_HETERO_INCREASE_TIME$LAYOUT() { return GUID_PROCESSOR_HETERO_INCREASE_TIME$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_HETERO_INCREASE_TIME$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_HETERO_INCREASE_TIME", GUID_PROCESSOR_HETERO_INCREASE_TIME$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_HETERO_INCREASE_TIME$SEGMENT() { return GUID_PROCESSOR_HETERO_INCREASE_TIME$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD$LAYOUT() { return GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD", GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD$SEGMENT() { return GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD$LAYOUT() { return GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD", GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD$SEGMENT() { return GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_CLASS0_FLOOR_PERF$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_CLASS0_FLOOR_PERF$LAYOUT() { return GUID_PROCESSOR_CLASS0_FLOOR_PERF$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_CLASS0_FLOOR_PERF$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_CLASS0_FLOOR_PERF", GUID_PROCESSOR_CLASS0_FLOOR_PERF$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_CLASS0_FLOOR_PERF$SEGMENT() { return GUID_PROCESSOR_CLASS0_FLOOR_PERF$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_CLASS1_INITIAL_PERF$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_CLASS1_INITIAL_PERF$LAYOUT() { return GUID_PROCESSOR_CLASS1_INITIAL_PERF$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_CLASS1_INITIAL_PERF$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_CLASS1_INITIAL_PERF", GUID_PROCESSOR_CLASS1_INITIAL_PERF$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_CLASS1_INITIAL_PERF$SEGMENT() { return GUID_PROCESSOR_CLASS1_INITIAL_PERF$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_THREAD_SCHEDULING_POLICY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_THREAD_SCHEDULING_POLICY$LAYOUT() { return GUID_PROCESSOR_THREAD_SCHEDULING_POLICY$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_THREAD_SCHEDULING_POLICY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_THREAD_SCHEDULING_POLICY", GUID_PROCESSOR_THREAD_SCHEDULING_POLICY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_THREAD_SCHEDULING_POLICY$SEGMENT() { return GUID_PROCESSOR_THREAD_SCHEDULING_POLICY$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY$LAYOUT() { return GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY", GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY$SEGMENT() { return GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY$SEGMENT_; }

    static final MemoryLayout GUID_SYSTEM_COOLING_POLICY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_SYSTEM_COOLING_POLICY$LAYOUT() { return GUID_SYSTEM_COOLING_POLICY$LAYOUT_; }

    static final MemorySegment GUID_SYSTEM_COOLING_POLICY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_SYSTEM_COOLING_POLICY", GUID_SYSTEM_COOLING_POLICY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_SYSTEM_COOLING_POLICY$SEGMENT() { return GUID_SYSTEM_COOLING_POLICY$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD$LAYOUT() { return GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD", GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD$SEGMENT() { return GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1$LAYOUT() { return GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1", GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1$SEGMENT() { return GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD$LAYOUT() { return GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD", GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD$SEGMENT() { return GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1$LAYOUT() { return GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1", GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1$SEGMENT() { return GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME$LAYOUT() { return GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME", GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME$SEGMENT() { return GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1$LAYOUT() { return GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1", GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1$SEGMENT() { return GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME$LAYOUT() { return GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME", GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME$SEGMENT() { return GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1$LAYOUT() { return GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1", GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1$SEGMENT() { return GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING$LAYOUT() { return GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING", GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING$SEGMENT() { return GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1$LAYOUT() { return GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1", GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1$SEGMENT() { return GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR$LAYOUT() { return GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR", GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR$SEGMENT() { return GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR$SEGMENT_; }

    static final MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1$LAYOUT() { return GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1$LAYOUT_; }

    static final MemorySegment GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1", GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1$SEGMENT() { return GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1$SEGMENT_; }

    static final MemoryLayout GUID_LOCK_CONSOLE_ON_WAKE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_LOCK_CONSOLE_ON_WAKE$LAYOUT() { return GUID_LOCK_CONSOLE_ON_WAKE$LAYOUT_; }

    static final MemorySegment GUID_LOCK_CONSOLE_ON_WAKE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_LOCK_CONSOLE_ON_WAKE", GUID_LOCK_CONSOLE_ON_WAKE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_LOCK_CONSOLE_ON_WAKE$SEGMENT() { return GUID_LOCK_CONSOLE_ON_WAKE$SEGMENT_; }

    static final MemoryLayout GUID_DEVICE_IDLE_POLICY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DEVICE_IDLE_POLICY$LAYOUT() { return GUID_DEVICE_IDLE_POLICY$LAYOUT_; }

    static final MemorySegment GUID_DEVICE_IDLE_POLICY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DEVICE_IDLE_POLICY", GUID_DEVICE_IDLE_POLICY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DEVICE_IDLE_POLICY$SEGMENT() { return GUID_DEVICE_IDLE_POLICY$SEGMENT_; }

    static final MemoryLayout GUID_CONNECTIVITY_IN_STANDBY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_CONNECTIVITY_IN_STANDBY$LAYOUT() { return GUID_CONNECTIVITY_IN_STANDBY$LAYOUT_; }

    static final MemorySegment GUID_CONNECTIVITY_IN_STANDBY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_CONNECTIVITY_IN_STANDBY", GUID_CONNECTIVITY_IN_STANDBY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_CONNECTIVITY_IN_STANDBY$SEGMENT() { return GUID_CONNECTIVITY_IN_STANDBY$SEGMENT_; }

    static final MemoryLayout GUID_DISCONNECTED_STANDBY_MODE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_DISCONNECTED_STANDBY_MODE$LAYOUT() { return GUID_DISCONNECTED_STANDBY_MODE$LAYOUT_; }

    static final MemorySegment GUID_DISCONNECTED_STANDBY_MODE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_DISCONNECTED_STANDBY_MODE", GUID_DISCONNECTED_STANDBY_MODE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_DISCONNECTED_STANDBY_MODE$SEGMENT() { return GUID_DISCONNECTED_STANDBY_MODE$SEGMENT_; }

    static final MemoryLayout GUID_ACDC_POWER_SOURCE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_ACDC_POWER_SOURCE$LAYOUT() { return GUID_ACDC_POWER_SOURCE$LAYOUT_; }

    static final MemorySegment GUID_ACDC_POWER_SOURCE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_ACDC_POWER_SOURCE", GUID_ACDC_POWER_SOURCE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_ACDC_POWER_SOURCE$SEGMENT() { return GUID_ACDC_POWER_SOURCE$SEGMENT_; }

    static final MemoryLayout GUID_LIDSWITCH_STATE_CHANGE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_LIDSWITCH_STATE_CHANGE$LAYOUT() { return GUID_LIDSWITCH_STATE_CHANGE$LAYOUT_; }

    static final MemorySegment GUID_LIDSWITCH_STATE_CHANGE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_LIDSWITCH_STATE_CHANGE", GUID_LIDSWITCH_STATE_CHANGE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_LIDSWITCH_STATE_CHANGE$SEGMENT() { return GUID_LIDSWITCH_STATE_CHANGE$SEGMENT_; }

    static final MemoryLayout GUID_BATTERY_PERCENTAGE_REMAINING$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_BATTERY_PERCENTAGE_REMAINING$LAYOUT() { return GUID_BATTERY_PERCENTAGE_REMAINING$LAYOUT_; }

    static final MemorySegment GUID_BATTERY_PERCENTAGE_REMAINING$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_BATTERY_PERCENTAGE_REMAINING", GUID_BATTERY_PERCENTAGE_REMAINING$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_BATTERY_PERCENTAGE_REMAINING$SEGMENT() { return GUID_BATTERY_PERCENTAGE_REMAINING$SEGMENT_; }

    static final MemoryLayout GUID_BATTERY_COUNT$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_BATTERY_COUNT$LAYOUT() { return GUID_BATTERY_COUNT$LAYOUT_; }

    static final MemorySegment GUID_BATTERY_COUNT$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_BATTERY_COUNT", GUID_BATTERY_COUNT$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_BATTERY_COUNT$SEGMENT() { return GUID_BATTERY_COUNT$SEGMENT_; }

    static final MemoryLayout GUID_GLOBAL_USER_PRESENCE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_GLOBAL_USER_PRESENCE$LAYOUT() { return GUID_GLOBAL_USER_PRESENCE$LAYOUT_; }

    static final MemorySegment GUID_GLOBAL_USER_PRESENCE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_GLOBAL_USER_PRESENCE", GUID_GLOBAL_USER_PRESENCE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_GLOBAL_USER_PRESENCE$SEGMENT() { return GUID_GLOBAL_USER_PRESENCE$SEGMENT_; }

    static final MemoryLayout GUID_SESSION_DISPLAY_STATUS$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_SESSION_DISPLAY_STATUS$LAYOUT() { return GUID_SESSION_DISPLAY_STATUS$LAYOUT_; }

    static final MemorySegment GUID_SESSION_DISPLAY_STATUS$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_SESSION_DISPLAY_STATUS", GUID_SESSION_DISPLAY_STATUS$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_SESSION_DISPLAY_STATUS$SEGMENT() { return GUID_SESSION_DISPLAY_STATUS$SEGMENT_; }

    static final MemoryLayout GUID_SESSION_USER_PRESENCE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_SESSION_USER_PRESENCE$LAYOUT() { return GUID_SESSION_USER_PRESENCE$LAYOUT_; }

    static final MemorySegment GUID_SESSION_USER_PRESENCE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_SESSION_USER_PRESENCE", GUID_SESSION_USER_PRESENCE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_SESSION_USER_PRESENCE$SEGMENT() { return GUID_SESSION_USER_PRESENCE$SEGMENT_; }

    static final MemoryLayout GUID_IDLE_BACKGROUND_TASK$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_IDLE_BACKGROUND_TASK$LAYOUT() { return GUID_IDLE_BACKGROUND_TASK$LAYOUT_; }

    static final MemorySegment GUID_IDLE_BACKGROUND_TASK$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_IDLE_BACKGROUND_TASK", GUID_IDLE_BACKGROUND_TASK$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_IDLE_BACKGROUND_TASK$SEGMENT() { return GUID_IDLE_BACKGROUND_TASK$SEGMENT_; }

    static final MemoryLayout GUID_BACKGROUND_TASK_NOTIFICATION$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_BACKGROUND_TASK_NOTIFICATION$LAYOUT() { return GUID_BACKGROUND_TASK_NOTIFICATION$LAYOUT_; }

    static final MemorySegment GUID_BACKGROUND_TASK_NOTIFICATION$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_BACKGROUND_TASK_NOTIFICATION", GUID_BACKGROUND_TASK_NOTIFICATION$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_BACKGROUND_TASK_NOTIFICATION$SEGMENT() { return GUID_BACKGROUND_TASK_NOTIFICATION$SEGMENT_; }

    static final MemoryLayout GUID_APPLAUNCH_BUTTON$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_APPLAUNCH_BUTTON$LAYOUT() { return GUID_APPLAUNCH_BUTTON$LAYOUT_; }

    static final MemorySegment GUID_APPLAUNCH_BUTTON$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_APPLAUNCH_BUTTON", GUID_APPLAUNCH_BUTTON$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_APPLAUNCH_BUTTON$SEGMENT() { return GUID_APPLAUNCH_BUTTON$SEGMENT_; }

    static final MemoryLayout GUID_PCIEXPRESS_SETTINGS_SUBGROUP$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PCIEXPRESS_SETTINGS_SUBGROUP$LAYOUT() { return GUID_PCIEXPRESS_SETTINGS_SUBGROUP$LAYOUT_; }

    static final MemorySegment GUID_PCIEXPRESS_SETTINGS_SUBGROUP$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PCIEXPRESS_SETTINGS_SUBGROUP", GUID_PCIEXPRESS_SETTINGS_SUBGROUP$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PCIEXPRESS_SETTINGS_SUBGROUP$SEGMENT() { return GUID_PCIEXPRESS_SETTINGS_SUBGROUP$SEGMENT_; }

    static final MemoryLayout GUID_PCIEXPRESS_ASPM_POLICY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_PCIEXPRESS_ASPM_POLICY$LAYOUT() { return GUID_PCIEXPRESS_ASPM_POLICY$LAYOUT_; }

    static final MemorySegment GUID_PCIEXPRESS_ASPM_POLICY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_PCIEXPRESS_ASPM_POLICY", GUID_PCIEXPRESS_ASPM_POLICY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_PCIEXPRESS_ASPM_POLICY$SEGMENT() { return GUID_PCIEXPRESS_ASPM_POLICY$SEGMENT_; }

    static final MemoryLayout GUID_ENABLE_SWITCH_FORCED_SHUTDOWN$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_ENABLE_SWITCH_FORCED_SHUTDOWN$LAYOUT() { return GUID_ENABLE_SWITCH_FORCED_SHUTDOWN$LAYOUT_; }

    static final MemorySegment GUID_ENABLE_SWITCH_FORCED_SHUTDOWN$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_ENABLE_SWITCH_FORCED_SHUTDOWN", GUID_ENABLE_SWITCH_FORCED_SHUTDOWN$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_ENABLE_SWITCH_FORCED_SHUTDOWN$SEGMENT() { return GUID_ENABLE_SWITCH_FORCED_SHUTDOWN$SEGMENT_; }

    static final MemoryLayout GUID_INTSTEER_SUBGROUP$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_INTSTEER_SUBGROUP$LAYOUT() { return GUID_INTSTEER_SUBGROUP$LAYOUT_; }

    static final MemorySegment GUID_INTSTEER_SUBGROUP$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_INTSTEER_SUBGROUP", GUID_INTSTEER_SUBGROUP$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_INTSTEER_SUBGROUP$SEGMENT() { return GUID_INTSTEER_SUBGROUP$SEGMENT_; }

    static final MemoryLayout GUID_INTSTEER_MODE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_INTSTEER_MODE$LAYOUT() { return GUID_INTSTEER_MODE$LAYOUT_; }

    static final MemorySegment GUID_INTSTEER_MODE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_INTSTEER_MODE", GUID_INTSTEER_MODE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_INTSTEER_MODE$SEGMENT() { return GUID_INTSTEER_MODE$SEGMENT_; }

    static final MemoryLayout GUID_INTSTEER_LOAD_PER_PROC_TRIGGER$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_INTSTEER_LOAD_PER_PROC_TRIGGER$LAYOUT() { return GUID_INTSTEER_LOAD_PER_PROC_TRIGGER$LAYOUT_; }

    static final MemorySegment GUID_INTSTEER_LOAD_PER_PROC_TRIGGER$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_INTSTEER_LOAD_PER_PROC_TRIGGER", GUID_INTSTEER_LOAD_PER_PROC_TRIGGER$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_INTSTEER_LOAD_PER_PROC_TRIGGER$SEGMENT() { return GUID_INTSTEER_LOAD_PER_PROC_TRIGGER$SEGMENT_; }

    static final MemoryLayout GUID_INTSTEER_TIME_UNPARK_TRIGGER$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_INTSTEER_TIME_UNPARK_TRIGGER$LAYOUT() { return GUID_INTSTEER_TIME_UNPARK_TRIGGER$LAYOUT_; }

    static final MemorySegment GUID_INTSTEER_TIME_UNPARK_TRIGGER$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_INTSTEER_TIME_UNPARK_TRIGGER", GUID_INTSTEER_TIME_UNPARK_TRIGGER$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_INTSTEER_TIME_UNPARK_TRIGGER$SEGMENT() { return GUID_INTSTEER_TIME_UNPARK_TRIGGER$SEGMENT_; }

    static final MemoryLayout GUID_GRAPHICS_SUBGROUP$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_GRAPHICS_SUBGROUP$LAYOUT() { return GUID_GRAPHICS_SUBGROUP$LAYOUT_; }

    static final MemorySegment GUID_GRAPHICS_SUBGROUP$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_GRAPHICS_SUBGROUP", GUID_GRAPHICS_SUBGROUP$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_GRAPHICS_SUBGROUP$SEGMENT() { return GUID_GRAPHICS_SUBGROUP$SEGMENT_; }

    static final MemoryLayout GUID_GPU_PREFERENCE_POLICY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_GPU_PREFERENCE_POLICY$LAYOUT() { return GUID_GPU_PREFERENCE_POLICY$LAYOUT_; }

    static final MemorySegment GUID_GPU_PREFERENCE_POLICY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_GPU_PREFERENCE_POLICY", GUID_GPU_PREFERENCE_POLICY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_GPU_PREFERENCE_POLICY$SEGMENT() { return GUID_GPU_PREFERENCE_POLICY$SEGMENT_; }

    static final MemoryLayout GUID_MIXED_REALITY_MODE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_MIXED_REALITY_MODE$LAYOUT() { return GUID_MIXED_REALITY_MODE$LAYOUT_; }

    static final MemorySegment GUID_MIXED_REALITY_MODE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_MIXED_REALITY_MODE", GUID_MIXED_REALITY_MODE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_MIXED_REALITY_MODE$SEGMENT() { return GUID_MIXED_REALITY_MODE$SEGMENT_; }

    static final MemoryLayout GUID_SPR_ACTIVE_SESSION_CHANGE$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_SPR_ACTIVE_SESSION_CHANGE$LAYOUT() { return GUID_SPR_ACTIVE_SESSION_CHANGE$LAYOUT_; }

    static final MemorySegment GUID_SPR_ACTIVE_SESSION_CHANGE$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_SPR_ACTIVE_SESSION_CHANGE", GUID_SPR_ACTIVE_SESSION_CHANGE$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_SPR_ACTIVE_SESSION_CHANGE$SEGMENT() { return GUID_SPR_ACTIVE_SESSION_CHANGE$SEGMENT_; }

    static final int PowerSystemUnspecified() { return (int)0L; }

    static final int PowerSystemWorking() { return (int)1L; }

    static final int PowerSystemSleeping1() { return (int)2L; }

    static final int PowerSystemSleeping2() { return (int)3L; }

    static final int PowerSystemSleeping3() { return (int)4L; }

    static final int PowerSystemHibernate() { return (int)5L; }

    static final int PowerSystemShutdown() { return (int)6L; }

    static final int PowerSystemMaximum() { return (int)7L; }

    static final int PowerActionNone() { return (int)0L; }

    static final int PowerActionReserved() { return (int)1L; }

    static final int PowerActionSleep() { return (int)2L; }

    static final int PowerActionHibernate() { return (int)3L; }

    static final int PowerActionShutdown() { return (int)4L; }

    static final int PowerActionShutdownReset() { return (int)5L; }

    static final int PowerActionShutdownOff() { return (int)6L; }

    static final int PowerActionWarmEject() { return (int)7L; }

    static final int PowerActionDisplayOff() { return (int)8L; }

    static final int PowerDeviceUnspecified() { return (int)0L; }

    static final int PowerDeviceD0() { return (int)1L; }

    static final int PowerDeviceD1() { return (int)2L; }

    static final int PowerDeviceD2() { return (int)3L; }

    static final int PowerDeviceD3() { return (int)4L; }

    static final int PowerDeviceMaximum() { return (int)5L; }

    static final int PowerMonitorOff() { return (int)0L; }

    static final int PowerMonitorOn() { return (int)1L; }

    static final int PowerMonitorDim() { return (int)2L; }

    static final int PowerUserPresent() { return (int)0L; }

    static final int PowerUserNotPresent() { return (int)1L; }

    static final int PowerUserInactive() { return (int)2L; }

    static final int PowerUserMaximum() { return (int)3L; }

    static final int PowerUserInvalid() { return (int)3L; }

    static final int LT_DONT_CARE() { return (int)0L; }

    static final int LT_LOWEST_LATENCY() { return (int)1L; }

    static final int PowerRequestDisplayRequired() { return (int)0L; }

    static final int PowerRequestSystemRequired() { return (int)1L; }

    static final int PowerRequestAwayModeRequired() { return (int)2L; }

    static final int PowerRequestExecutionRequired() { return (int)3L; }

    static final MemoryLayout CM_Power_Data_s$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("PD_Size"),
        C_INT.withName("PD_MostRecentPowerState"),
        C_LONG.withName("PD_Capabilities"),
        C_LONG.withName("PD_D1Latency"),
        C_LONG.withName("PD_D2Latency"),
        C_LONG.withName("PD_D3Latency"),
        MemoryLayout.ofSequence(7, C_INT).withName("PD_PowerStateMapping"),
        C_INT.withName("PD_DeepestSystemWake")
    ).withName("CM_Power_Data_s");
    static final jdk.incubator.foreign.MemoryLayout CM_Power_Data_s$struct$LAYOUT() { return CM_Power_Data_s$struct$LAYOUT_; }

    static final MemoryLayout CM_Power_Data_s$PD_Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout CM_Power_Data_s$PD_Size$LAYOUT() { return CM_Power_Data_s$PD_Size$LAYOUT_; }

    static final VarHandle CM_Power_Data_s$PD_Size$VH_ = CM_Power_Data_s$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PD_Size"));
    static final java.lang.invoke.VarHandle CM_Power_Data_s$PD_Size$VH() { return CM_Power_Data_s$PD_Size$VH_; }

    static final MemoryLayout CM_Power_Data_s$PD_MostRecentPowerState$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout CM_Power_Data_s$PD_MostRecentPowerState$LAYOUT() { return CM_Power_Data_s$PD_MostRecentPowerState$LAYOUT_; }

    static final VarHandle CM_Power_Data_s$PD_MostRecentPowerState$VH_ = CM_Power_Data_s$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PD_MostRecentPowerState"));
    static final java.lang.invoke.VarHandle CM_Power_Data_s$PD_MostRecentPowerState$VH() { return CM_Power_Data_s$PD_MostRecentPowerState$VH_; }

    static final MemoryLayout CM_Power_Data_s$PD_Capabilities$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout CM_Power_Data_s$PD_Capabilities$LAYOUT() { return CM_Power_Data_s$PD_Capabilities$LAYOUT_; }

    static final VarHandle CM_Power_Data_s$PD_Capabilities$VH_ = CM_Power_Data_s$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PD_Capabilities"));
    static final java.lang.invoke.VarHandle CM_Power_Data_s$PD_Capabilities$VH() { return CM_Power_Data_s$PD_Capabilities$VH_; }

    static final MemoryLayout CM_Power_Data_s$PD_D1Latency$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout CM_Power_Data_s$PD_D1Latency$LAYOUT() { return CM_Power_Data_s$PD_D1Latency$LAYOUT_; }

    static final VarHandle CM_Power_Data_s$PD_D1Latency$VH_ = CM_Power_Data_s$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PD_D1Latency"));
    static final java.lang.invoke.VarHandle CM_Power_Data_s$PD_D1Latency$VH() { return CM_Power_Data_s$PD_D1Latency$VH_; }

    static final MemoryLayout CM_Power_Data_s$PD_D2Latency$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout CM_Power_Data_s$PD_D2Latency$LAYOUT() { return CM_Power_Data_s$PD_D2Latency$LAYOUT_; }

    static final VarHandle CM_Power_Data_s$PD_D2Latency$VH_ = CM_Power_Data_s$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PD_D2Latency"));
    static final java.lang.invoke.VarHandle CM_Power_Data_s$PD_D2Latency$VH() { return CM_Power_Data_s$PD_D2Latency$VH_; }

    static final MemoryLayout CM_Power_Data_s$PD_D3Latency$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout CM_Power_Data_s$PD_D3Latency$LAYOUT() { return CM_Power_Data_s$PD_D3Latency$LAYOUT_; }

    static final VarHandle CM_Power_Data_s$PD_D3Latency$VH_ = CM_Power_Data_s$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PD_D3Latency"));
    static final java.lang.invoke.VarHandle CM_Power_Data_s$PD_D3Latency$VH() { return CM_Power_Data_s$PD_D3Latency$VH_; }

    static final MemoryLayout CM_Power_Data_s$PD_DeepestSystemWake$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout CM_Power_Data_s$PD_DeepestSystemWake$LAYOUT() { return CM_Power_Data_s$PD_DeepestSystemWake$LAYOUT_; }

    static final VarHandle CM_Power_Data_s$PD_DeepestSystemWake$VH_ = CM_Power_Data_s$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PD_DeepestSystemWake"));
    static final java.lang.invoke.VarHandle CM_Power_Data_s$PD_DeepestSystemWake$VH() { return CM_Power_Data_s$PD_DeepestSystemWake$VH_; }

    static final int SystemPowerPolicyAc() { return (int)0L; }

    static final int SystemPowerPolicyDc() { return (int)1L; }

    static final int VerifySystemPolicyAc() { return (int)2L; }

    static final int VerifySystemPolicyDc() { return (int)3L; }

    static final int SystemPowerCapabilities() { return (int)4L; }

    static final int SystemBatteryState() { return (int)5L; }

    static final int SystemPowerStateHandler() { return (int)6L; }

    static final int ProcessorStateHandler() { return (int)7L; }

    static final int SystemPowerPolicyCurrent() { return (int)8L; }

    static final int AdministratorPowerPolicy() { return (int)9L; }

    static final int SystemReserveHiberFile() { return (int)10L; }

    static final int ProcessorInformation() { return (int)11L; }

    static final int SystemPowerInformation() { return (int)12L; }

    static final int ProcessorStateHandler2() { return (int)13L; }

    static final int LastWakeTime() { return (int)14L; }

    static final int LastSleepTime() { return (int)15L; }

    static final int SystemExecutionState() { return (int)16L; }

    static final int SystemPowerStateNotifyHandler() { return (int)17L; }

    static final int ProcessorPowerPolicyAc() { return (int)18L; }

    static final int ProcessorPowerPolicyDc() { return (int)19L; }

    static final int VerifyProcessorPowerPolicyAc() { return (int)20L; }

    static final int VerifyProcessorPowerPolicyDc() { return (int)21L; }

    static final int ProcessorPowerPolicyCurrent() { return (int)22L; }

    static final int SystemPowerStateLogging() { return (int)23L; }

    static final int SystemPowerLoggingEntry() { return (int)24L; }

    static final int SetPowerSettingValue() { return (int)25L; }

    static final int NotifyUserPowerSetting() { return (int)26L; }

    static final int PowerInformationLevelUnused0() { return (int)27L; }

    static final int SystemMonitorHiberBootPowerOff() { return (int)28L; }

    static final int SystemVideoState() { return (int)29L; }

    static final int TraceApplicationPowerMessage() { return (int)30L; }

    static final int TraceApplicationPowerMessageEnd() { return (int)31L; }

    static final int ProcessorPerfStates() { return (int)32L; }

    static final int ProcessorIdleStates() { return (int)33L; }

    static final int ProcessorCap() { return (int)34L; }

    static final int SystemWakeSource() { return (int)35L; }

    static final int SystemHiberFileInformation() { return (int)36L; }

    static final int TraceServicePowerMessage() { return (int)37L; }

    static final int ProcessorLoad() { return (int)38L; }

    static final int PowerShutdownNotification() { return (int)39L; }

    static final int MonitorCapabilities() { return (int)40L; }

    static final int SessionPowerInit() { return (int)41L; }

    static final int SessionDisplayState() { return (int)42L; }

    static final int PowerRequestCreate() { return (int)43L; }

    static final int PowerRequestAction() { return (int)44L; }

    static final int GetPowerRequestList() { return (int)45L; }

    static final int ProcessorInformationEx() { return (int)46L; }

    static final int NotifyUserModeLegacyPowerEvent() { return (int)47L; }

    static final int GroupPark() { return (int)48L; }

    static final int ProcessorIdleDomains() { return (int)49L; }

    static final int WakeTimerList() { return (int)50L; }

    static final int SystemHiberFileSize() { return (int)51L; }

    static final int ProcessorIdleStatesHv() { return (int)52L; }

    static final int ProcessorPerfStatesHv() { return (int)53L; }

    static final int ProcessorPerfCapHv() { return (int)54L; }

    static final int ProcessorSetIdle() { return (int)55L; }

    static final int LogicalProcessorIdling() { return (int)56L; }

    static final int UserPresence() { return (int)57L; }

    static final int PowerSettingNotificationName() { return (int)58L; }

    static final int GetPowerSettingValue() { return (int)59L; }

    static final int IdleResiliency() { return (int)60L; }

    static final int SessionRITState() { return (int)61L; }

    static final int SessionConnectNotification() { return (int)62L; }

    static final int SessionPowerCleanup() { return (int)63L; }

    static final int SessionLockState() { return (int)64L; }

    static final int SystemHiberbootState() { return (int)65L; }

    static final int PlatformInformation() { return (int)66L; }

    static final int PdcInvocation() { return (int)67L; }

    static final int MonitorInvocation() { return (int)68L; }

    static final int FirmwareTableInformationRegistered() { return (int)69L; }

    static final int SetShutdownSelectedTime() { return (int)70L; }

    static final int SuspendResumeInvocation() { return (int)71L; }

    static final int PlmPowerRequestCreate() { return (int)72L; }

    static final int ScreenOff() { return (int)73L; }

    static final int CsDeviceNotification() { return (int)74L; }

    static final int PlatformRole() { return (int)75L; }

    static final int LastResumePerformance() { return (int)76L; }

    static final int DisplayBurst() { return (int)77L; }

    static final int ExitLatencySamplingPercentage() { return (int)78L; }

    static final int RegisterSpmPowerSettings() { return (int)79L; }

    static final int PlatformIdleStates() { return (int)80L; }

    static final int ProcessorIdleVeto() { return (int)81L; }

    static final int PlatformIdleVeto() { return (int)82L; }

    static final int SystemBatteryStatePrecise() { return (int)83L; }

    static final int ThermalEvent() { return (int)84L; }

    static final int PowerRequestActionInternal() { return (int)85L; }

    static final int BatteryDeviceState() { return (int)86L; }

    static final int PowerInformationInternal() { return (int)87L; }

    static final int ThermalStandby() { return (int)88L; }

    static final int SystemHiberFileType() { return (int)89L; }

    static final int PhysicalPowerButtonPress() { return (int)90L; }

    static final int QueryPotentialDripsConstraint() { return (int)91L; }

    static final int EnergyTrackerCreate() { return (int)92L; }

    static final int EnergyTrackerQuery() { return (int)93L; }

    static final int UpdateBlackBoxRecorder() { return (int)94L; }

    static final int SessionAllowExternalDmaDevices() { return (int)95L; }

    static final int PowerInformationLevelMaximum() { return (int)96L; }

    static final int UserNotPresent() { return (int)0L; }

    static final int UserPresent() { return (int)1L; }

    static final int UserUnknown() { return (int)255L; }

    static final MemoryLayout _POWER_USER_PRESENCE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("UserPresence")
    ).withName("_POWER_USER_PRESENCE");
    static final jdk.incubator.foreign.MemoryLayout _POWER_USER_PRESENCE$struct$LAYOUT() { return _POWER_USER_PRESENCE$struct$LAYOUT_; }

    static final MemoryLayout _POWER_USER_PRESENCE$UserPresence$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _POWER_USER_PRESENCE$UserPresence$LAYOUT() { return _POWER_USER_PRESENCE$UserPresence$LAYOUT_; }

    static final VarHandle _POWER_USER_PRESENCE$UserPresence$VH_ = _POWER_USER_PRESENCE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("UserPresence"));
    static final java.lang.invoke.VarHandle _POWER_USER_PRESENCE$UserPresence$VH() { return _POWER_USER_PRESENCE$UserPresence$VH_; }

    static final MemoryLayout _POWER_SESSION_CONNECT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("Connected"),
        C_CHAR.withName("Console")
    ).withName("_POWER_SESSION_CONNECT");
    static final jdk.incubator.foreign.MemoryLayout _POWER_SESSION_CONNECT$struct$LAYOUT() { return _POWER_SESSION_CONNECT$struct$LAYOUT_; }

    static final MemoryLayout _POWER_SESSION_CONNECT$Connected$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _POWER_SESSION_CONNECT$Connected$LAYOUT() { return _POWER_SESSION_CONNECT$Connected$LAYOUT_; }

    static final VarHandle _POWER_SESSION_CONNECT$Connected$VH_ = _POWER_SESSION_CONNECT$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Connected"));
    static final java.lang.invoke.VarHandle _POWER_SESSION_CONNECT$Connected$VH() { return _POWER_SESSION_CONNECT$Connected$VH_; }

    static final MemoryLayout _POWER_SESSION_CONNECT$Console$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _POWER_SESSION_CONNECT$Console$LAYOUT() { return _POWER_SESSION_CONNECT$Console$LAYOUT_; }

    static final VarHandle _POWER_SESSION_CONNECT$Console$VH_ = _POWER_SESSION_CONNECT$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Console"));
    static final java.lang.invoke.VarHandle _POWER_SESSION_CONNECT$Console$VH() { return _POWER_SESSION_CONNECT$Console$VH_; }

    static final MemoryLayout _POWER_SESSION_TIMEOUTS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("InputTimeout"),
        C_LONG.withName("DisplayTimeout")
    ).withName("_POWER_SESSION_TIMEOUTS");
    static final jdk.incubator.foreign.MemoryLayout _POWER_SESSION_TIMEOUTS$struct$LAYOUT() { return _POWER_SESSION_TIMEOUTS$struct$LAYOUT_; }

    static final MemoryLayout _POWER_SESSION_TIMEOUTS$InputTimeout$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _POWER_SESSION_TIMEOUTS$InputTimeout$LAYOUT() { return _POWER_SESSION_TIMEOUTS$InputTimeout$LAYOUT_; }

    static final VarHandle _POWER_SESSION_TIMEOUTS$InputTimeout$VH_ = _POWER_SESSION_TIMEOUTS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("InputTimeout"));
    static final java.lang.invoke.VarHandle _POWER_SESSION_TIMEOUTS$InputTimeout$VH() { return _POWER_SESSION_TIMEOUTS$InputTimeout$VH_; }

    static final MemoryLayout _POWER_SESSION_TIMEOUTS$DisplayTimeout$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _POWER_SESSION_TIMEOUTS$DisplayTimeout$LAYOUT() { return _POWER_SESSION_TIMEOUTS$DisplayTimeout$LAYOUT_; }

    static final VarHandle _POWER_SESSION_TIMEOUTS$DisplayTimeout$VH_ = _POWER_SESSION_TIMEOUTS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DisplayTimeout"));
    static final java.lang.invoke.VarHandle _POWER_SESSION_TIMEOUTS$DisplayTimeout$VH() { return _POWER_SESSION_TIMEOUTS$DisplayTimeout$VH_; }

    static final MemoryLayout _POWER_SESSION_RIT_STATE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("Active"),
        MemoryLayout.ofPaddingBits(24),
        C_LONG.withName("LastInputTime")
    ).withName("_POWER_SESSION_RIT_STATE");
    static final jdk.incubator.foreign.MemoryLayout _POWER_SESSION_RIT_STATE$struct$LAYOUT() { return _POWER_SESSION_RIT_STATE$struct$LAYOUT_; }

    static final MemoryLayout _POWER_SESSION_RIT_STATE$Active$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _POWER_SESSION_RIT_STATE$Active$LAYOUT() { return _POWER_SESSION_RIT_STATE$Active$LAYOUT_; }

    static final VarHandle _POWER_SESSION_RIT_STATE$Active$VH_ = _POWER_SESSION_RIT_STATE$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Active"));
    static final java.lang.invoke.VarHandle _POWER_SESSION_RIT_STATE$Active$VH() { return _POWER_SESSION_RIT_STATE$Active$VH_; }

    static final MemoryLayout _POWER_SESSION_RIT_STATE$LastInputTime$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _POWER_SESSION_RIT_STATE$LastInputTime$LAYOUT() { return _POWER_SESSION_RIT_STATE$LastInputTime$LAYOUT_; }

    static final VarHandle _POWER_SESSION_RIT_STATE$LastInputTime$VH_ = _POWER_SESSION_RIT_STATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LastInputTime"));
    static final java.lang.invoke.VarHandle _POWER_SESSION_RIT_STATE$LastInputTime$VH() { return _POWER_SESSION_RIT_STATE$LastInputTime$VH_; }

    static final MemoryLayout _POWER_SESSION_WINLOGON$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("SessionId"),
        C_CHAR.withName("Console"),
        C_CHAR.withName("Locked"),
        MemoryLayout.ofPaddingBits(16)
    ).withName("_POWER_SESSION_WINLOGON");
    static final jdk.incubator.foreign.MemoryLayout _POWER_SESSION_WINLOGON$struct$LAYOUT() { return _POWER_SESSION_WINLOGON$struct$LAYOUT_; }

    static final MemoryLayout _POWER_SESSION_WINLOGON$SessionId$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _POWER_SESSION_WINLOGON$SessionId$LAYOUT() { return _POWER_SESSION_WINLOGON$SessionId$LAYOUT_; }

    static final VarHandle _POWER_SESSION_WINLOGON$SessionId$VH_ = _POWER_SESSION_WINLOGON$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SessionId"));
    static final java.lang.invoke.VarHandle _POWER_SESSION_WINLOGON$SessionId$VH() { return _POWER_SESSION_WINLOGON$SessionId$VH_; }

    static final MemoryLayout _POWER_SESSION_WINLOGON$Console$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _POWER_SESSION_WINLOGON$Console$LAYOUT() { return _POWER_SESSION_WINLOGON$Console$LAYOUT_; }

    static final VarHandle _POWER_SESSION_WINLOGON$Console$VH_ = _POWER_SESSION_WINLOGON$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Console"));
    static final java.lang.invoke.VarHandle _POWER_SESSION_WINLOGON$Console$VH() { return _POWER_SESSION_WINLOGON$Console$VH_; }

    static final MemoryLayout _POWER_SESSION_WINLOGON$Locked$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _POWER_SESSION_WINLOGON$Locked$LAYOUT() { return _POWER_SESSION_WINLOGON$Locked$LAYOUT_; }

    static final VarHandle _POWER_SESSION_WINLOGON$Locked$VH_ = _POWER_SESSION_WINLOGON$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Locked"));
    static final java.lang.invoke.VarHandle _POWER_SESSION_WINLOGON$Locked$VH() { return _POWER_SESSION_WINLOGON$Locked$VH_; }

    static final MemoryLayout _POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("IsAllowed")
    ).withName("_POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES");
    static final jdk.incubator.foreign.MemoryLayout _POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES$struct$LAYOUT() { return _POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES$struct$LAYOUT_; }

    static final MemoryLayout _POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES$IsAllowed$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES$IsAllowed$LAYOUT() { return _POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES$IsAllowed$LAYOUT_; }

    static final VarHandle _POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES$IsAllowed$VH_ = _POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("IsAllowed"));
    static final java.lang.invoke.VarHandle _POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES$IsAllowed$VH() { return _POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES$IsAllowed$VH_; }

    static final MemoryLayout _POWER_IDLE_RESILIENCY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("CoalescingTimeout"),
        C_LONG.withName("IdleResiliencyPeriod")
    ).withName("_POWER_IDLE_RESILIENCY");
    static final jdk.incubator.foreign.MemoryLayout _POWER_IDLE_RESILIENCY$struct$LAYOUT() { return _POWER_IDLE_RESILIENCY$struct$LAYOUT_; }

    static final MemoryLayout _POWER_IDLE_RESILIENCY$CoalescingTimeout$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _POWER_IDLE_RESILIENCY$CoalescingTimeout$LAYOUT() { return _POWER_IDLE_RESILIENCY$CoalescingTimeout$LAYOUT_; }

    static final VarHandle _POWER_IDLE_RESILIENCY$CoalescingTimeout$VH_ = _POWER_IDLE_RESILIENCY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CoalescingTimeout"));
    static final java.lang.invoke.VarHandle _POWER_IDLE_RESILIENCY$CoalescingTimeout$VH() { return _POWER_IDLE_RESILIENCY$CoalescingTimeout$VH_; }

    static final MemoryLayout _POWER_IDLE_RESILIENCY$IdleResiliencyPeriod$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _POWER_IDLE_RESILIENCY$IdleResiliencyPeriod$LAYOUT() { return _POWER_IDLE_RESILIENCY$IdleResiliencyPeriod$LAYOUT_; }

    static final VarHandle _POWER_IDLE_RESILIENCY$IdleResiliencyPeriod$VH_ = _POWER_IDLE_RESILIENCY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IdleResiliencyPeriod"));
    static final java.lang.invoke.VarHandle _POWER_IDLE_RESILIENCY$IdleResiliencyPeriod$VH() { return _POWER_IDLE_RESILIENCY$IdleResiliencyPeriod$VH_; }

    static final int MonitorRequestReasonUnknown() { return (int)0L; }

    static final int MonitorRequestReasonPowerButton() { return (int)1L; }

    static final int MonitorRequestReasonRemoteConnection() { return (int)2L; }

    static final int MonitorRequestReasonScMonitorpower() { return (int)3L; }

    static final int MonitorRequestReasonUserInput() { return (int)4L; }

    static final int MonitorRequestReasonAcDcDisplayBurst() { return (int)5L; }

    static final int MonitorRequestReasonUserDisplayBurst() { return (int)6L; }

    static final int MonitorRequestReasonPoSetSystemState() { return (int)7L; }

    static final int MonitorRequestReasonSetThreadExecutionState() { return (int)8L; }

    static final int MonitorRequestReasonFullWake() { return (int)9L; }

    static final int MonitorRequestReasonSessionUnlock() { return (int)10L; }

    static final int MonitorRequestReasonScreenOffRequest() { return (int)11L; }

    static final int MonitorRequestReasonIdleTimeout() { return (int)12L; }

    static final int MonitorRequestReasonPolicyChange() { return (int)13L; }

    static final int MonitorRequestReasonSleepButton() { return (int)14L; }

    static final int MonitorRequestReasonLid() { return (int)15L; }

    static final int MonitorRequestReasonBatteryCountChange() { return (int)16L; }

    static final int MonitorRequestReasonGracePeriod() { return (int)17L; }

    static final int MonitorRequestReasonPnP() { return (int)18L; }

    static final int MonitorRequestReasonDP() { return (int)19L; }

    static final int MonitorRequestReasonSxTransition() { return (int)20L; }

    static final int MonitorRequestReasonSystemIdle() { return (int)21L; }

    static final int MonitorRequestReasonNearProximity() { return (int)22L; }

    static final int MonitorRequestReasonThermalStandby() { return (int)23L; }

    static final int MonitorRequestReasonResumePdc() { return (int)24L; }

    static final int MonitorRequestReasonResumeS4() { return (int)25L; }

    static final int MonitorRequestReasonTerminal() { return (int)26L; }

    static final int MonitorRequestReasonPdcSignal() { return (int)27L; }

    static final int MonitorRequestReasonAcDcDisplayBurstSuppressed() { return (int)28L; }

    static final int MonitorRequestReasonSystemStateEntered() { return (int)29L; }

    static final int MonitorRequestReasonWinrt() { return (int)30L; }

    static final int MonitorRequestReasonUserInputKeyboard() { return (int)31L; }

    static final int MonitorRequestReasonUserInputMouse() { return (int)32L; }

    static final int MonitorRequestReasonUserInputTouch() { return (int)33L; }

    static final int MonitorRequestReasonUserInputPen() { return (int)34L; }

    static final int MonitorRequestReasonUserInputAccelerometer() { return (int)35L; }

    static final int MonitorRequestReasonUserInputHid() { return (int)36L; }

    static final int MonitorRequestReasonUserInputPoUserPresent() { return (int)37L; }

    static final int MonitorRequestReasonUserInputSessionSwitch() { return (int)38L; }

    static final int MonitorRequestReasonUserInputInitialization() { return (int)39L; }

    static final int MonitorRequestReasonPdcSignalWindowsMobilePwrNotif() { return (int)40L; }

    static final int MonitorRequestReasonPdcSignalWindowsMobileShell() { return (int)41L; }

    static final int MonitorRequestReasonPdcSignalHeyCortana() { return (int)42L; }

    static final int MonitorRequestReasonPdcSignalHolographicShell() { return (int)43L; }

    static final int MonitorRequestReasonPdcSignalFingerprint() { return (int)44L; }

    static final int MonitorRequestReasonDirectedDrips() { return (int)45L; }

    static final int MonitorRequestReasonDim() { return (int)46L; }

    static final int MonitorRequestReasonBuiltinPanel() { return (int)47L; }

    static final int MonitorRequestReasonDisplayRequiredUnDim() { return (int)48L; }

    static final int MonitorRequestReasonBatteryCountChangeSuppressed() { return (int)49L; }

    static final int MonitorRequestReasonResumeModernStandby() { return (int)50L; }

    static final int MonitorRequestReasonMax() { return (int)51L; }

    static final int MonitorRequestTypeOff() { return (int)0L; }

    static final int MonitorRequestTypeOnAndPresent() { return (int)1L; }

    static final int MonitorRequestTypeToggleOn() { return (int)2L; }

    static final MemoryLayout _POWER_MONITOR_INVOCATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("Console"),
        MemoryLayout.ofPaddingBits(24),
        C_INT.withName("RequestReason")
    ).withName("_POWER_MONITOR_INVOCATION");
    static final jdk.incubator.foreign.MemoryLayout _POWER_MONITOR_INVOCATION$struct$LAYOUT() { return _POWER_MONITOR_INVOCATION$struct$LAYOUT_; }

    static final MemoryLayout _POWER_MONITOR_INVOCATION$Console$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _POWER_MONITOR_INVOCATION$Console$LAYOUT() { return _POWER_MONITOR_INVOCATION$Console$LAYOUT_; }

    static final VarHandle _POWER_MONITOR_INVOCATION$Console$VH_ = _POWER_MONITOR_INVOCATION$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Console"));
    static final java.lang.invoke.VarHandle _POWER_MONITOR_INVOCATION$Console$VH() { return _POWER_MONITOR_INVOCATION$Console$VH_; }

    static final MemoryLayout _POWER_MONITOR_INVOCATION$RequestReason$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _POWER_MONITOR_INVOCATION$RequestReason$LAYOUT() { return _POWER_MONITOR_INVOCATION$RequestReason$LAYOUT_; }

    static final VarHandle _POWER_MONITOR_INVOCATION$RequestReason$VH_ = _POWER_MONITOR_INVOCATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RequestReason"));
    static final java.lang.invoke.VarHandle _POWER_MONITOR_INVOCATION$RequestReason$VH() { return _POWER_MONITOR_INVOCATION$RequestReason$VH_; }

    static final MemoryLayout _RESUME_PERFORMANCE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("PostTimeMs"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("TotalResumeTimeMs"),
        C_LONGLONG.withName("ResumeCompleteTimestamp")
    ).withName("_RESUME_PERFORMANCE");
    static final jdk.incubator.foreign.MemoryLayout _RESUME_PERFORMANCE$struct$LAYOUT() { return _RESUME_PERFORMANCE$struct$LAYOUT_; }

    static final MemoryLayout _RESUME_PERFORMANCE$PostTimeMs$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RESUME_PERFORMANCE$PostTimeMs$LAYOUT() { return _RESUME_PERFORMANCE$PostTimeMs$LAYOUT_; }

    static final VarHandle _RESUME_PERFORMANCE$PostTimeMs$VH_ = _RESUME_PERFORMANCE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PostTimeMs"));
    static final java.lang.invoke.VarHandle _RESUME_PERFORMANCE$PostTimeMs$VH() { return _RESUME_PERFORMANCE$PostTimeMs$VH_; }

    static final MemoryLayout _RESUME_PERFORMANCE$TotalResumeTimeMs$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _RESUME_PERFORMANCE$TotalResumeTimeMs$LAYOUT() { return _RESUME_PERFORMANCE$TotalResumeTimeMs$LAYOUT_; }

    static final VarHandle _RESUME_PERFORMANCE$TotalResumeTimeMs$VH_ = _RESUME_PERFORMANCE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TotalResumeTimeMs"));
    static final java.lang.invoke.VarHandle _RESUME_PERFORMANCE$TotalResumeTimeMs$VH() { return _RESUME_PERFORMANCE$TotalResumeTimeMs$VH_; }

    static final MemoryLayout _RESUME_PERFORMANCE$ResumeCompleteTimestamp$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _RESUME_PERFORMANCE$ResumeCompleteTimestamp$LAYOUT() { return _RESUME_PERFORMANCE$ResumeCompleteTimestamp$LAYOUT_; }

    static final VarHandle _RESUME_PERFORMANCE$ResumeCompleteTimestamp$VH_ = _RESUME_PERFORMANCE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ResumeCompleteTimestamp"));
    static final java.lang.invoke.VarHandle _RESUME_PERFORMANCE$ResumeCompleteTimestamp$VH() { return _RESUME_PERFORMANCE$ResumeCompleteTimestamp$VH_; }

    static final int PoAc() { return (int)0L; }

    static final int PoDc() { return (int)1L; }

    static final int PoHot() { return (int)2L; }

    static final int PoConditionMaximum() { return (int)3L; }

    static final MemoryLayout SET_POWER_SETTING_VALUE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("Guid"),
        C_INT.withName("PowerCondition"),
        C_LONG.withName("DataLength"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("Data"),
        MemoryLayout.ofPaddingBits(24)
    );
    static final jdk.incubator.foreign.MemoryLayout SET_POWER_SETTING_VALUE$struct$LAYOUT() { return SET_POWER_SETTING_VALUE$struct$LAYOUT_; }

    static final MemoryLayout SET_POWER_SETTING_VALUE$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout SET_POWER_SETTING_VALUE$Version$LAYOUT() { return SET_POWER_SETTING_VALUE$Version$LAYOUT_; }

    static final VarHandle SET_POWER_SETTING_VALUE$Version$VH_ = SET_POWER_SETTING_VALUE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle SET_POWER_SETTING_VALUE$Version$VH() { return SET_POWER_SETTING_VALUE$Version$VH_; }

    static final MemoryLayout SET_POWER_SETTING_VALUE$PowerCondition$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout SET_POWER_SETTING_VALUE$PowerCondition$LAYOUT() { return SET_POWER_SETTING_VALUE$PowerCondition$LAYOUT_; }

    static final VarHandle SET_POWER_SETTING_VALUE$PowerCondition$VH_ = SET_POWER_SETTING_VALUE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PowerCondition"));
    static final java.lang.invoke.VarHandle SET_POWER_SETTING_VALUE$PowerCondition$VH() { return SET_POWER_SETTING_VALUE$PowerCondition$VH_; }

    static final MemoryLayout SET_POWER_SETTING_VALUE$DataLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout SET_POWER_SETTING_VALUE$DataLength$LAYOUT() { return SET_POWER_SETTING_VALUE$DataLength$LAYOUT_; }

    static final VarHandle SET_POWER_SETTING_VALUE$DataLength$VH_ = SET_POWER_SETTING_VALUE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DataLength"));
    static final java.lang.invoke.VarHandle SET_POWER_SETTING_VALUE$DataLength$VH() { return SET_POWER_SETTING_VALUE$DataLength$VH_; }

    static final MemoryLayout NOTIFY_USER_POWER_SETTING$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("Guid")
    );
    static final jdk.incubator.foreign.MemoryLayout NOTIFY_USER_POWER_SETTING$struct$LAYOUT() { return NOTIFY_USER_POWER_SETTING$struct$LAYOUT_; }

    static final MemoryLayout _APPLICATIONLAUNCH_SETTING_VALUE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("ActivationTime"),
        C_LONG.withName("Flags"),
        C_LONG.withName("ButtonInstanceID")
    ).withName("_APPLICATIONLAUNCH_SETTING_VALUE");
    static final jdk.incubator.foreign.MemoryLayout _APPLICATIONLAUNCH_SETTING_VALUE$struct$LAYOUT() { return _APPLICATIONLAUNCH_SETTING_VALUE$struct$LAYOUT_; }

    static final MemoryLayout _APPLICATIONLAUNCH_SETTING_VALUE$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _APPLICATIONLAUNCH_SETTING_VALUE$Flags$LAYOUT() { return _APPLICATIONLAUNCH_SETTING_VALUE$Flags$LAYOUT_; }

    static final VarHandle _APPLICATIONLAUNCH_SETTING_VALUE$Flags$VH_ = _APPLICATIONLAUNCH_SETTING_VALUE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _APPLICATIONLAUNCH_SETTING_VALUE$Flags$VH() { return _APPLICATIONLAUNCH_SETTING_VALUE$Flags$VH_; }

    static final MemoryLayout _APPLICATIONLAUNCH_SETTING_VALUE$ButtonInstanceID$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _APPLICATIONLAUNCH_SETTING_VALUE$ButtonInstanceID$LAYOUT() { return _APPLICATIONLAUNCH_SETTING_VALUE$ButtonInstanceID$LAYOUT_; }

    static final VarHandle _APPLICATIONLAUNCH_SETTING_VALUE$ButtonInstanceID$VH_ = _APPLICATIONLAUNCH_SETTING_VALUE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ButtonInstanceID"));
    static final java.lang.invoke.VarHandle _APPLICATIONLAUNCH_SETTING_VALUE$ButtonInstanceID$VH() { return _APPLICATIONLAUNCH_SETTING_VALUE$ButtonInstanceID$VH_; }

    static final int PlatformRoleUnspecified() { return (int)0L; }

    static final int PlatformRoleDesktop() { return (int)1L; }

    static final int PlatformRoleMobile() { return (int)2L; }

    static final int PlatformRoleWorkstation() { return (int)3L; }

    static final int PlatformRoleEnterpriseServer() { return (int)4L; }

    static final int PlatformRoleSOHOServer() { return (int)5L; }

    static final int PlatformRoleAppliancePC() { return (int)6L; }

    static final int PlatformRolePerformanceServer() { return (int)7L; }

    static final int PlatformRoleSlate() { return (int)8L; }

    static final int PlatformRoleMaximum() { return (int)9L; }

    static final MemoryLayout _POWER_PLATFORM_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("AoAc")
    ).withName("_POWER_PLATFORM_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _POWER_PLATFORM_INFORMATION$struct$LAYOUT() { return _POWER_PLATFORM_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _POWER_PLATFORM_INFORMATION$AoAc$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _POWER_PLATFORM_INFORMATION$AoAc$LAYOUT() { return _POWER_PLATFORM_INFORMATION$AoAc$LAYOUT_; }

    static final VarHandle _POWER_PLATFORM_INFORMATION$AoAc$VH_ = _POWER_PLATFORM_INFORMATION$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("AoAc"));
    static final java.lang.invoke.VarHandle _POWER_PLATFORM_INFORMATION$AoAc$VH() { return _POWER_PLATFORM_INFORMATION$AoAc$VH_; }

    static final MemoryLayout BATTERY_REPORTING_SCALE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Granularity"),
        C_LONG.withName("Capacity")
    );
    static final jdk.incubator.foreign.MemoryLayout BATTERY_REPORTING_SCALE$struct$LAYOUT() { return BATTERY_REPORTING_SCALE$struct$LAYOUT_; }

    static final MemoryLayout BATTERY_REPORTING_SCALE$Granularity$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout BATTERY_REPORTING_SCALE$Granularity$LAYOUT() { return BATTERY_REPORTING_SCALE$Granularity$LAYOUT_; }

    static final VarHandle BATTERY_REPORTING_SCALE$Granularity$VH_ = BATTERY_REPORTING_SCALE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Granularity"));
    static final java.lang.invoke.VarHandle BATTERY_REPORTING_SCALE$Granularity$VH() { return BATTERY_REPORTING_SCALE$Granularity$VH_; }

    static final MemoryLayout BATTERY_REPORTING_SCALE$Capacity$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout BATTERY_REPORTING_SCALE$Capacity$LAYOUT() { return BATTERY_REPORTING_SCALE$Capacity$LAYOUT_; }

    static final VarHandle BATTERY_REPORTING_SCALE$Capacity$VH_ = BATTERY_REPORTING_SCALE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Capacity"));
    static final java.lang.invoke.VarHandle BATTERY_REPORTING_SCALE$Capacity$VH() { return BATTERY_REPORTING_SCALE$Capacity$VH_; }

    static final MemoryLayout PPM_WMI_LEGACY_PERFSTATE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Frequency"),
        C_LONG.withName("Flags"),
        C_LONG.withName("PercentFrequency")
    );
    static final jdk.incubator.foreign.MemoryLayout PPM_WMI_LEGACY_PERFSTATE$struct$LAYOUT() { return PPM_WMI_LEGACY_PERFSTATE$struct$LAYOUT_; }

    static final MemoryLayout PPM_WMI_LEGACY_PERFSTATE$Frequency$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout PPM_WMI_LEGACY_PERFSTATE$Frequency$LAYOUT() { return PPM_WMI_LEGACY_PERFSTATE$Frequency$LAYOUT_; }

    static final VarHandle PPM_WMI_LEGACY_PERFSTATE$Frequency$VH_ = PPM_WMI_LEGACY_PERFSTATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Frequency"));
    static final java.lang.invoke.VarHandle PPM_WMI_LEGACY_PERFSTATE$Frequency$VH() { return PPM_WMI_LEGACY_PERFSTATE$Frequency$VH_; }

    static final MemoryLayout PPM_WMI_LEGACY_PERFSTATE$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout PPM_WMI_LEGACY_PERFSTATE$Flags$LAYOUT() { return PPM_WMI_LEGACY_PERFSTATE$Flags$LAYOUT_; }

    static final VarHandle PPM_WMI_LEGACY_PERFSTATE$Flags$VH_ = PPM_WMI_LEGACY_PERFSTATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle PPM_WMI_LEGACY_PERFSTATE$Flags$VH() { return PPM_WMI_LEGACY_PERFSTATE$Flags$VH_; }

    static final MemoryLayout PPM_WMI_LEGACY_PERFSTATE$PercentFrequency$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout PPM_WMI_LEGACY_PERFSTATE$PercentFrequency$LAYOUT() { return PPM_WMI_LEGACY_PERFSTATE$PercentFrequency$LAYOUT_; }

    static final VarHandle PPM_WMI_LEGACY_PERFSTATE$PercentFrequency$VH_ = PPM_WMI_LEGACY_PERFSTATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PercentFrequency"));
    static final java.lang.invoke.VarHandle PPM_WMI_LEGACY_PERFSTATE$PercentFrequency$VH() { return PPM_WMI_LEGACY_PERFSTATE$PercentFrequency$VH_; }

    static final MemoryLayout PPM_WMI_IDLE_STATE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Latency"),
        C_LONG.withName("Power"),
        C_LONG.withName("TimeCheck"),
        C_CHAR.withName("PromotePercent"),
        C_CHAR.withName("DemotePercent"),
        C_CHAR.withName("StateType"),
        C_CHAR.withName("Reserved"),
        C_LONG.withName("StateFlags"),
        C_LONG.withName("Context"),
        C_LONG.withName("IdleHandler"),
        C_LONG.withName("Reserved1")
    );
    static final jdk.incubator.foreign.MemoryLayout PPM_WMI_IDLE_STATE$struct$LAYOUT() { return PPM_WMI_IDLE_STATE$struct$LAYOUT_; }

    static final MemoryLayout PPM_WMI_IDLE_STATE$Latency$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout PPM_WMI_IDLE_STATE$Latency$LAYOUT() { return PPM_WMI_IDLE_STATE$Latency$LAYOUT_; }

    static final VarHandle PPM_WMI_IDLE_STATE$Latency$VH_ = PPM_WMI_IDLE_STATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Latency"));
    static final java.lang.invoke.VarHandle PPM_WMI_IDLE_STATE$Latency$VH() { return PPM_WMI_IDLE_STATE$Latency$VH_; }

    static final MemoryLayout PPM_WMI_IDLE_STATE$Power$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout PPM_WMI_IDLE_STATE$Power$LAYOUT() { return PPM_WMI_IDLE_STATE$Power$LAYOUT_; }

    static final VarHandle PPM_WMI_IDLE_STATE$Power$VH_ = PPM_WMI_IDLE_STATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Power"));
    static final java.lang.invoke.VarHandle PPM_WMI_IDLE_STATE$Power$VH() { return PPM_WMI_IDLE_STATE$Power$VH_; }

    static final MemoryLayout PPM_WMI_IDLE_STATE$TimeCheck$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout PPM_WMI_IDLE_STATE$TimeCheck$LAYOUT() { return PPM_WMI_IDLE_STATE$TimeCheck$LAYOUT_; }

    static final VarHandle PPM_WMI_IDLE_STATE$TimeCheck$VH_ = PPM_WMI_IDLE_STATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TimeCheck"));
    static final java.lang.invoke.VarHandle PPM_WMI_IDLE_STATE$TimeCheck$VH() { return PPM_WMI_IDLE_STATE$TimeCheck$VH_; }

}

