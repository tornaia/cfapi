// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$27 extends cfapi_h$26 {

    /* package-private */ cfapi_h$27() {}
    public static  MethodHandle VarI2FromI4$MH() {
        return cfapi_h$constants$95.VarI2FromI4$MH();
    }
    public static @C("HRESULT") int VarI2FromI4 (@C("LONG") int lIn, @C("SHORT*") Addressable psOut) {
        try {
            return (int)cfapi_h$constants$95.VarI2FromI4$MH().invokeExact(lIn, psOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI2FromI8$MH() {
        return cfapi_h$constants$95.VarI2FromI8$MH();
    }
    public static @C("HRESULT") int VarI2FromI8 (@C("LONG64") long i64In, @C("SHORT*") Addressable psOut) {
        try {
            return (int)cfapi_h$constants$95.VarI2FromI8$MH().invokeExact(i64In, psOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI2FromR4$MH() {
        return cfapi_h$constants$95.VarI2FromR4$MH();
    }
    public static @C("HRESULT") int VarI2FromR4 (@C("FLOAT") float fltIn, @C("SHORT*") Addressable psOut) {
        try {
            return (int)cfapi_h$constants$95.VarI2FromR4$MH().invokeExact(fltIn, psOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI2FromR8$MH() {
        return cfapi_h$constants$95.VarI2FromR8$MH();
    }
    public static @C("HRESULT") int VarI2FromR8 (@C("DOUBLE") double dblIn, @C("SHORT*") Addressable psOut) {
        try {
            return (int)cfapi_h$constants$95.VarI2FromR8$MH().invokeExact(dblIn, psOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI2FromCy$MH() {
        return cfapi_h$constants$95.VarI2FromCy$MH();
    }
    public static @C("HRESULT") int VarI2FromCy (@C("CY") MemorySegment cyIn, @C("SHORT*") Addressable psOut) {
        try {
            return (int)cfapi_h$constants$95.VarI2FromCy$MH().invokeExact(cyIn, psOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI2FromDate$MH() {
        return cfapi_h$constants$95.VarI2FromDate$MH();
    }
    public static @C("HRESULT") int VarI2FromDate (@C("DATE") double dateIn, @C("SHORT*") Addressable psOut) {
        try {
            return (int)cfapi_h$constants$95.VarI2FromDate$MH().invokeExact(dateIn, psOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI2FromStr$MH() {
        return cfapi_h$constants$95.VarI2FromStr$MH();
    }
    public static @C("HRESULT") int VarI2FromStr (@C("LPCOLESTR") Addressable strIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("SHORT*") Addressable psOut) {
        try {
            return (int)cfapi_h$constants$95.VarI2FromStr$MH().invokeExact(strIn.address(), lcid, dwFlags, psOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI2FromDisp$MH() {
        return cfapi_h$constants$95.VarI2FromDisp$MH();
    }
    public static @C("HRESULT") int VarI2FromDisp (@C("IDispatch*") Addressable pdispIn, @C("LCID") int lcid, @C("SHORT*") Addressable psOut) {
        try {
            return (int)cfapi_h$constants$95.VarI2FromDisp$MH().invokeExact(pdispIn.address(), lcid, psOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI2FromBool$MH() {
        return cfapi_h$constants$95.VarI2FromBool$MH();
    }
    public static @C("HRESULT") int VarI2FromBool (@C("VARIANT_BOOL") short boolIn, @C("SHORT*") Addressable psOut) {
        try {
            return (int)cfapi_h$constants$95.VarI2FromBool$MH().invokeExact(boolIn, psOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI2FromI1$MH() {
        return cfapi_h$constants$95.VarI2FromI1$MH();
    }
    public static @C("HRESULT") int VarI2FromI1 (@C("CHAR") byte cIn, @C("SHORT*") Addressable psOut) {
        try {
            return (int)cfapi_h$constants$95.VarI2FromI1$MH().invokeExact(cIn, psOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI2FromUI2$MH() {
        return cfapi_h$constants$95.VarI2FromUI2$MH();
    }
    public static @C("HRESULT") int VarI2FromUI2 (@C("USHORT") short uiIn, @C("SHORT*") Addressable psOut) {
        try {
            return (int)cfapi_h$constants$95.VarI2FromUI2$MH().invokeExact(uiIn, psOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI2FromUI4$MH() {
        return cfapi_h$constants$95.VarI2FromUI4$MH();
    }
    public static @C("HRESULT") int VarI2FromUI4 (@C("ULONG") int ulIn, @C("SHORT*") Addressable psOut) {
        try {
            return (int)cfapi_h$constants$95.VarI2FromUI4$MH().invokeExact(ulIn, psOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI2FromUI8$MH() {
        return cfapi_h$constants$95.VarI2FromUI8$MH();
    }
    public static @C("HRESULT") int VarI2FromUI8 (@C("ULONG64") long ui64In, @C("SHORT*") Addressable psOut) {
        try {
            return (int)cfapi_h$constants$95.VarI2FromUI8$MH().invokeExact(ui64In, psOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI2FromDec$MH() {
        return cfapi_h$constants$95.VarI2FromDec$MH();
    }
    public static @C("HRESULT") int VarI2FromDec (@C("const DECIMAL*") Addressable pdecIn, @C("SHORT*") Addressable psOut) {
        try {
            return (int)cfapi_h$constants$95.VarI2FromDec$MH().invokeExact(pdecIn.address(), psOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI4FromUI1$MH() {
        return cfapi_h$constants$95.VarI4FromUI1$MH();
    }
    public static @C("HRESULT") int VarI4FromUI1 (@C("BYTE") byte bIn, @C("LONG*") Addressable plOut) {
        try {
            return (int)cfapi_h$constants$95.VarI4FromUI1$MH().invokeExact(bIn, plOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI4FromI2$MH() {
        return cfapi_h$constants$95.VarI4FromI2$MH();
    }
    public static @C("HRESULT") int VarI4FromI2 (@C("SHORT") short sIn, @C("LONG*") Addressable plOut) {
        try {
            return (int)cfapi_h$constants$95.VarI4FromI2$MH().invokeExact(sIn, plOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI4FromI8$MH() {
        return cfapi_h$constants$95.VarI4FromI8$MH();
    }
    public static @C("HRESULT") int VarI4FromI8 (@C("LONG64") long i64In, @C("LONG*") Addressable plOut) {
        try {
            return (int)cfapi_h$constants$95.VarI4FromI8$MH().invokeExact(i64In, plOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI4FromR4$MH() {
        return cfapi_h$constants$95.VarI4FromR4$MH();
    }
    public static @C("HRESULT") int VarI4FromR4 (@C("FLOAT") float fltIn, @C("LONG*") Addressable plOut) {
        try {
            return (int)cfapi_h$constants$95.VarI4FromR4$MH().invokeExact(fltIn, plOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI4FromR8$MH() {
        return cfapi_h$constants$95.VarI4FromR8$MH();
    }
    public static @C("HRESULT") int VarI4FromR8 (@C("DOUBLE") double dblIn, @C("LONG*") Addressable plOut) {
        try {
            return (int)cfapi_h$constants$95.VarI4FromR8$MH().invokeExact(dblIn, plOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI4FromCy$MH() {
        return cfapi_h$constants$95.VarI4FromCy$MH();
    }
    public static @C("HRESULT") int VarI4FromCy (@C("CY") MemorySegment cyIn, @C("LONG*") Addressable plOut) {
        try {
            return (int)cfapi_h$constants$95.VarI4FromCy$MH().invokeExact(cyIn, plOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI4FromDate$MH() {
        return cfapi_h$constants$95.VarI4FromDate$MH();
    }
    public static @C("HRESULT") int VarI4FromDate (@C("DATE") double dateIn, @C("LONG*") Addressable plOut) {
        try {
            return (int)cfapi_h$constants$95.VarI4FromDate$MH().invokeExact(dateIn, plOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI4FromStr$MH() {
        return cfapi_h$constants$95.VarI4FromStr$MH();
    }
    public static @C("HRESULT") int VarI4FromStr (@C("LPCOLESTR") Addressable strIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("LONG*") Addressable plOut) {
        try {
            return (int)cfapi_h$constants$95.VarI4FromStr$MH().invokeExact(strIn.address(), lcid, dwFlags, plOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI4FromDisp$MH() {
        return cfapi_h$constants$95.VarI4FromDisp$MH();
    }
    public static @C("HRESULT") int VarI4FromDisp (@C("IDispatch*") Addressable pdispIn, @C("LCID") int lcid, @C("LONG*") Addressable plOut) {
        try {
            return (int)cfapi_h$constants$95.VarI4FromDisp$MH().invokeExact(pdispIn.address(), lcid, plOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI4FromBool$MH() {
        return cfapi_h$constants$95.VarI4FromBool$MH();
    }
    public static @C("HRESULT") int VarI4FromBool (@C("VARIANT_BOOL") short boolIn, @C("LONG*") Addressable plOut) {
        try {
            return (int)cfapi_h$constants$95.VarI4FromBool$MH().invokeExact(boolIn, plOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI4FromI1$MH() {
        return cfapi_h$constants$95.VarI4FromI1$MH();
    }
    public static @C("HRESULT") int VarI4FromI1 (@C("CHAR") byte cIn, @C("LONG*") Addressable plOut) {
        try {
            return (int)cfapi_h$constants$95.VarI4FromI1$MH().invokeExact(cIn, plOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI4FromUI2$MH() {
        return cfapi_h$constants$95.VarI4FromUI2$MH();
    }
    public static @C("HRESULT") int VarI4FromUI2 (@C("USHORT") short uiIn, @C("LONG*") Addressable plOut) {
        try {
            return (int)cfapi_h$constants$95.VarI4FromUI2$MH().invokeExact(uiIn, plOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI4FromUI4$MH() {
        return cfapi_h$constants$95.VarI4FromUI4$MH();
    }
    public static @C("HRESULT") int VarI4FromUI4 (@C("ULONG") int ulIn, @C("LONG*") Addressable plOut) {
        try {
            return (int)cfapi_h$constants$95.VarI4FromUI4$MH().invokeExact(ulIn, plOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI4FromUI8$MH() {
        return cfapi_h$constants$95.VarI4FromUI8$MH();
    }
    public static @C("HRESULT") int VarI4FromUI8 (@C("ULONG64") long ui64In, @C("LONG*") Addressable plOut) {
        try {
            return (int)cfapi_h$constants$95.VarI4FromUI8$MH().invokeExact(ui64In, plOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI4FromDec$MH() {
        return cfapi_h$constants$95.VarI4FromDec$MH();
    }
    public static @C("HRESULT") int VarI4FromDec (@C("const DECIMAL*") Addressable pdecIn, @C("LONG*") Addressable plOut) {
        try {
            return (int)cfapi_h$constants$95.VarI4FromDec$MH().invokeExact(pdecIn.address(), plOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI8FromUI1$MH() {
        return cfapi_h$constants$95.VarI8FromUI1$MH();
    }
    public static @C("HRESULT") int VarI8FromUI1 (@C("BYTE") byte bIn, @C("LONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarI8FromUI1$MH().invokeExact(bIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI8FromI2$MH() {
        return cfapi_h$constants$95.VarI8FromI2$MH();
    }
    public static @C("HRESULT") int VarI8FromI2 (@C("SHORT") short sIn, @C("LONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarI8FromI2$MH().invokeExact(sIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI8FromR4$MH() {
        return cfapi_h$constants$95.VarI8FromR4$MH();
    }
    public static @C("HRESULT") int VarI8FromR4 (@C("FLOAT") float fltIn, @C("LONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarI8FromR4$MH().invokeExact(fltIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI8FromR8$MH() {
        return cfapi_h$constants$95.VarI8FromR8$MH();
    }
    public static @C("HRESULT") int VarI8FromR8 (@C("DOUBLE") double dblIn, @C("LONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarI8FromR8$MH().invokeExact(dblIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI8FromCy$MH() {
        return cfapi_h$constants$95.VarI8FromCy$MH();
    }
    public static @C("HRESULT") int VarI8FromCy (@C("CY") MemorySegment cyIn, @C("LONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarI8FromCy$MH().invokeExact(cyIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI8FromDate$MH() {
        return cfapi_h$constants$95.VarI8FromDate$MH();
    }
    public static @C("HRESULT") int VarI8FromDate (@C("DATE") double dateIn, @C("LONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarI8FromDate$MH().invokeExact(dateIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI8FromStr$MH() {
        return cfapi_h$constants$95.VarI8FromStr$MH();
    }
    public static @C("HRESULT") int VarI8FromStr (@C("LPCOLESTR") Addressable strIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("LONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarI8FromStr$MH().invokeExact(strIn.address(), lcid, dwFlags, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI8FromDisp$MH() {
        return cfapi_h$constants$95.VarI8FromDisp$MH();
    }
    public static @C("HRESULT") int VarI8FromDisp (@C("IDispatch*") Addressable pdispIn, @C("LCID") int lcid, @C("LONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarI8FromDisp$MH().invokeExact(pdispIn.address(), lcid, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI8FromBool$MH() {
        return cfapi_h$constants$95.VarI8FromBool$MH();
    }
    public static @C("HRESULT") int VarI8FromBool (@C("VARIANT_BOOL") short boolIn, @C("LONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarI8FromBool$MH().invokeExact(boolIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI8FromI1$MH() {
        return cfapi_h$constants$95.VarI8FromI1$MH();
    }
    public static @C("HRESULT") int VarI8FromI1 (@C("CHAR") byte cIn, @C("LONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarI8FromI1$MH().invokeExact(cIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI8FromUI2$MH() {
        return cfapi_h$constants$95.VarI8FromUI2$MH();
    }
    public static @C("HRESULT") int VarI8FromUI2 (@C("USHORT") short uiIn, @C("LONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarI8FromUI2$MH().invokeExact(uiIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI8FromUI4$MH() {
        return cfapi_h$constants$95.VarI8FromUI4$MH();
    }
    public static @C("HRESULT") int VarI8FromUI4 (@C("ULONG") int ulIn, @C("LONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarI8FromUI4$MH().invokeExact(ulIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI8FromUI8$MH() {
        return cfapi_h$constants$95.VarI8FromUI8$MH();
    }
    public static @C("HRESULT") int VarI8FromUI8 (@C("ULONG64") long ui64In, @C("LONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarI8FromUI8$MH().invokeExact(ui64In, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI8FromDec$MH() {
        return cfapi_h$constants$95.VarI8FromDec$MH();
    }
    public static @C("HRESULT") int VarI8FromDec (@C("const DECIMAL*") Addressable pdecIn, @C("LONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarI8FromDec$MH().invokeExact(pdecIn.address(), pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR4FromUI1$MH() {
        return cfapi_h$constants$95.VarR4FromUI1$MH();
    }
    public static @C("HRESULT") int VarR4FromUI1 (@C("BYTE") byte bIn, @C("FLOAT*") Addressable pfltOut) {
        try {
            return (int)cfapi_h$constants$95.VarR4FromUI1$MH().invokeExact(bIn, pfltOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR4FromI2$MH() {
        return cfapi_h$constants$95.VarR4FromI2$MH();
    }
    public static @C("HRESULT") int VarR4FromI2 (@C("SHORT") short sIn, @C("FLOAT*") Addressable pfltOut) {
        try {
            return (int)cfapi_h$constants$95.VarR4FromI2$MH().invokeExact(sIn, pfltOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR4FromI4$MH() {
        return cfapi_h$constants$95.VarR4FromI4$MH();
    }
    public static @C("HRESULT") int VarR4FromI4 (@C("LONG") int lIn, @C("FLOAT*") Addressable pfltOut) {
        try {
            return (int)cfapi_h$constants$95.VarR4FromI4$MH().invokeExact(lIn, pfltOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR4FromI8$MH() {
        return cfapi_h$constants$95.VarR4FromI8$MH();
    }
    public static @C("HRESULT") int VarR4FromI8 (@C("LONG64") long i64In, @C("FLOAT*") Addressable pfltOut) {
        try {
            return (int)cfapi_h$constants$95.VarR4FromI8$MH().invokeExact(i64In, pfltOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR4FromR8$MH() {
        return cfapi_h$constants$95.VarR4FromR8$MH();
    }
    public static @C("HRESULT") int VarR4FromR8 (@C("DOUBLE") double dblIn, @C("FLOAT*") Addressable pfltOut) {
        try {
            return (int)cfapi_h$constants$95.VarR4FromR8$MH().invokeExact(dblIn, pfltOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR4FromCy$MH() {
        return cfapi_h$constants$95.VarR4FromCy$MH();
    }
    public static @C("HRESULT") int VarR4FromCy (@C("CY") MemorySegment cyIn, @C("FLOAT*") Addressable pfltOut) {
        try {
            return (int)cfapi_h$constants$95.VarR4FromCy$MH().invokeExact(cyIn, pfltOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR4FromDate$MH() {
        return cfapi_h$constants$95.VarR4FromDate$MH();
    }
    public static @C("HRESULT") int VarR4FromDate (@C("DATE") double dateIn, @C("FLOAT*") Addressable pfltOut) {
        try {
            return (int)cfapi_h$constants$95.VarR4FromDate$MH().invokeExact(dateIn, pfltOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR4FromStr$MH() {
        return cfapi_h$constants$95.VarR4FromStr$MH();
    }
    public static @C("HRESULT") int VarR4FromStr (@C("LPCOLESTR") Addressable strIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("FLOAT*") Addressable pfltOut) {
        try {
            return (int)cfapi_h$constants$95.VarR4FromStr$MH().invokeExact(strIn.address(), lcid, dwFlags, pfltOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR4FromDisp$MH() {
        return cfapi_h$constants$95.VarR4FromDisp$MH();
    }
    public static @C("HRESULT") int VarR4FromDisp (@C("IDispatch*") Addressable pdispIn, @C("LCID") int lcid, @C("FLOAT*") Addressable pfltOut) {
        try {
            return (int)cfapi_h$constants$95.VarR4FromDisp$MH().invokeExact(pdispIn.address(), lcid, pfltOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR4FromBool$MH() {
        return cfapi_h$constants$95.VarR4FromBool$MH();
    }
    public static @C("HRESULT") int VarR4FromBool (@C("VARIANT_BOOL") short boolIn, @C("FLOAT*") Addressable pfltOut) {
        try {
            return (int)cfapi_h$constants$95.VarR4FromBool$MH().invokeExact(boolIn, pfltOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR4FromI1$MH() {
        return cfapi_h$constants$95.VarR4FromI1$MH();
    }
    public static @C("HRESULT") int VarR4FromI1 (@C("CHAR") byte cIn, @C("FLOAT*") Addressable pfltOut) {
        try {
            return (int)cfapi_h$constants$95.VarR4FromI1$MH().invokeExact(cIn, pfltOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR4FromUI2$MH() {
        return cfapi_h$constants$95.VarR4FromUI2$MH();
    }
    public static @C("HRESULT") int VarR4FromUI2 (@C("USHORT") short uiIn, @C("FLOAT*") Addressable pfltOut) {
        try {
            return (int)cfapi_h$constants$95.VarR4FromUI2$MH().invokeExact(uiIn, pfltOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR4FromUI4$MH() {
        return cfapi_h$constants$95.VarR4FromUI4$MH();
    }
    public static @C("HRESULT") int VarR4FromUI4 (@C("ULONG") int ulIn, @C("FLOAT*") Addressable pfltOut) {
        try {
            return (int)cfapi_h$constants$95.VarR4FromUI4$MH().invokeExact(ulIn, pfltOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR4FromUI8$MH() {
        return cfapi_h$constants$95.VarR4FromUI8$MH();
    }
    public static @C("HRESULT") int VarR4FromUI8 (@C("ULONG64") long ui64In, @C("FLOAT*") Addressable pfltOut) {
        try {
            return (int)cfapi_h$constants$95.VarR4FromUI8$MH().invokeExact(ui64In, pfltOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR4FromDec$MH() {
        return cfapi_h$constants$95.VarR4FromDec$MH();
    }
    public static @C("HRESULT") int VarR4FromDec (@C("const DECIMAL*") Addressable pdecIn, @C("FLOAT*") Addressable pfltOut) {
        try {
            return (int)cfapi_h$constants$95.VarR4FromDec$MH().invokeExact(pdecIn.address(), pfltOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR8FromUI1$MH() {
        return cfapi_h$constants$95.VarR8FromUI1$MH();
    }
    public static @C("HRESULT") int VarR8FromUI1 (@C("BYTE") byte bIn, @C("DOUBLE*") Addressable pdblOut) {
        try {
            return (int)cfapi_h$constants$95.VarR8FromUI1$MH().invokeExact(bIn, pdblOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR8FromI2$MH() {
        return cfapi_h$constants$95.VarR8FromI2$MH();
    }
    public static @C("HRESULT") int VarR8FromI2 (@C("SHORT") short sIn, @C("DOUBLE*") Addressable pdblOut) {
        try {
            return (int)cfapi_h$constants$95.VarR8FromI2$MH().invokeExact(sIn, pdblOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR8FromI4$MH() {
        return cfapi_h$constants$95.VarR8FromI4$MH();
    }
    public static @C("HRESULT") int VarR8FromI4 (@C("LONG") int lIn, @C("DOUBLE*") Addressable pdblOut) {
        try {
            return (int)cfapi_h$constants$95.VarR8FromI4$MH().invokeExact(lIn, pdblOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR8FromI8$MH() {
        return cfapi_h$constants$95.VarR8FromI8$MH();
    }
    public static @C("HRESULT") int VarR8FromI8 (@C("LONG64") long i64In, @C("DOUBLE*") Addressable pdblOut) {
        try {
            return (int)cfapi_h$constants$95.VarR8FromI8$MH().invokeExact(i64In, pdblOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR8FromR4$MH() {
        return cfapi_h$constants$95.VarR8FromR4$MH();
    }
    public static @C("HRESULT") int VarR8FromR4 (@C("FLOAT") float fltIn, @C("DOUBLE*") Addressable pdblOut) {
        try {
            return (int)cfapi_h$constants$95.VarR8FromR4$MH().invokeExact(fltIn, pdblOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR8FromCy$MH() {
        return cfapi_h$constants$95.VarR8FromCy$MH();
    }
    public static @C("HRESULT") int VarR8FromCy (@C("CY") MemorySegment cyIn, @C("DOUBLE*") Addressable pdblOut) {
        try {
            return (int)cfapi_h$constants$95.VarR8FromCy$MH().invokeExact(cyIn, pdblOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR8FromDate$MH() {
        return cfapi_h$constants$95.VarR8FromDate$MH();
    }
    public static @C("HRESULT") int VarR8FromDate (@C("DATE") double dateIn, @C("DOUBLE*") Addressable pdblOut) {
        try {
            return (int)cfapi_h$constants$95.VarR8FromDate$MH().invokeExact(dateIn, pdblOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR8FromStr$MH() {
        return cfapi_h$constants$95.VarR8FromStr$MH();
    }
    public static @C("HRESULT") int VarR8FromStr (@C("LPCOLESTR") Addressable strIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("DOUBLE*") Addressable pdblOut) {
        try {
            return (int)cfapi_h$constants$95.VarR8FromStr$MH().invokeExact(strIn.address(), lcid, dwFlags, pdblOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR8FromDisp$MH() {
        return cfapi_h$constants$95.VarR8FromDisp$MH();
    }
    public static @C("HRESULT") int VarR8FromDisp (@C("IDispatch*") Addressable pdispIn, @C("LCID") int lcid, @C("DOUBLE*") Addressable pdblOut) {
        try {
            return (int)cfapi_h$constants$95.VarR8FromDisp$MH().invokeExact(pdispIn.address(), lcid, pdblOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR8FromBool$MH() {
        return cfapi_h$constants$95.VarR8FromBool$MH();
    }
    public static @C("HRESULT") int VarR8FromBool (@C("VARIANT_BOOL") short boolIn, @C("DOUBLE*") Addressable pdblOut) {
        try {
            return (int)cfapi_h$constants$95.VarR8FromBool$MH().invokeExact(boolIn, pdblOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR8FromI1$MH() {
        return cfapi_h$constants$95.VarR8FromI1$MH();
    }
    public static @C("HRESULT") int VarR8FromI1 (@C("CHAR") byte cIn, @C("DOUBLE*") Addressable pdblOut) {
        try {
            return (int)cfapi_h$constants$95.VarR8FromI1$MH().invokeExact(cIn, pdblOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR8FromUI2$MH() {
        return cfapi_h$constants$95.VarR8FromUI2$MH();
    }
    public static @C("HRESULT") int VarR8FromUI2 (@C("USHORT") short uiIn, @C("DOUBLE*") Addressable pdblOut) {
        try {
            return (int)cfapi_h$constants$95.VarR8FromUI2$MH().invokeExact(uiIn, pdblOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR8FromUI4$MH() {
        return cfapi_h$constants$95.VarR8FromUI4$MH();
    }
    public static @C("HRESULT") int VarR8FromUI4 (@C("ULONG") int ulIn, @C("DOUBLE*") Addressable pdblOut) {
        try {
            return (int)cfapi_h$constants$95.VarR8FromUI4$MH().invokeExact(ulIn, pdblOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR8FromUI8$MH() {
        return cfapi_h$constants$95.VarR8FromUI8$MH();
    }
    public static @C("HRESULT") int VarR8FromUI8 (@C("ULONG64") long ui64In, @C("DOUBLE*") Addressable pdblOut) {
        try {
            return (int)cfapi_h$constants$95.VarR8FromUI8$MH().invokeExact(ui64In, pdblOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR8FromDec$MH() {
        return cfapi_h$constants$95.VarR8FromDec$MH();
    }
    public static @C("HRESULT") int VarR8FromDec (@C("const DECIMAL*") Addressable pdecIn, @C("DOUBLE*") Addressable pdblOut) {
        try {
            return (int)cfapi_h$constants$95.VarR8FromDec$MH().invokeExact(pdecIn.address(), pdblOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDateFromUI1$MH() {
        return cfapi_h$constants$95.VarDateFromUI1$MH();
    }
    public static @C("HRESULT") int VarDateFromUI1 (@C("BYTE") byte bIn, @C("DATE*") Addressable pdateOut) {
        try {
            return (int)cfapi_h$constants$95.VarDateFromUI1$MH().invokeExact(bIn, pdateOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDateFromI2$MH() {
        return cfapi_h$constants$95.VarDateFromI2$MH();
    }
    public static @C("HRESULT") int VarDateFromI2 (@C("SHORT") short sIn, @C("DATE*") Addressable pdateOut) {
        try {
            return (int)cfapi_h$constants$95.VarDateFromI2$MH().invokeExact(sIn, pdateOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDateFromI4$MH() {
        return cfapi_h$constants$95.VarDateFromI4$MH();
    }
    public static @C("HRESULT") int VarDateFromI4 (@C("LONG") int lIn, @C("DATE*") Addressable pdateOut) {
        try {
            return (int)cfapi_h$constants$95.VarDateFromI4$MH().invokeExact(lIn, pdateOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDateFromI8$MH() {
        return cfapi_h$constants$95.VarDateFromI8$MH();
    }
    public static @C("HRESULT") int VarDateFromI8 (@C("LONG64") long i64In, @C("DATE*") Addressable pdateOut) {
        try {
            return (int)cfapi_h$constants$95.VarDateFromI8$MH().invokeExact(i64In, pdateOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDateFromR4$MH() {
        return cfapi_h$constants$95.VarDateFromR4$MH();
    }
    public static @C("HRESULT") int VarDateFromR4 (@C("FLOAT") float fltIn, @C("DATE*") Addressable pdateOut) {
        try {
            return (int)cfapi_h$constants$95.VarDateFromR4$MH().invokeExact(fltIn, pdateOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDateFromR8$MH() {
        return cfapi_h$constants$95.VarDateFromR8$MH();
    }
    public static @C("HRESULT") int VarDateFromR8 (@C("DOUBLE") double dblIn, @C("DATE*") Addressable pdateOut) {
        try {
            return (int)cfapi_h$constants$95.VarDateFromR8$MH().invokeExact(dblIn, pdateOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDateFromCy$MH() {
        return cfapi_h$constants$95.VarDateFromCy$MH();
    }
    public static @C("HRESULT") int VarDateFromCy (@C("CY") MemorySegment cyIn, @C("DATE*") Addressable pdateOut) {
        try {
            return (int)cfapi_h$constants$95.VarDateFromCy$MH().invokeExact(cyIn, pdateOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDateFromStr$MH() {
        return cfapi_h$constants$95.VarDateFromStr$MH();
    }
    public static @C("HRESULT") int VarDateFromStr (@C("LPCOLESTR") Addressable strIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("DATE*") Addressable pdateOut) {
        try {
            return (int)cfapi_h$constants$95.VarDateFromStr$MH().invokeExact(strIn.address(), lcid, dwFlags, pdateOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDateFromDisp$MH() {
        return cfapi_h$constants$95.VarDateFromDisp$MH();
    }
    public static @C("HRESULT") int VarDateFromDisp (@C("IDispatch*") Addressable pdispIn, @C("LCID") int lcid, @C("DATE*") Addressable pdateOut) {
        try {
            return (int)cfapi_h$constants$95.VarDateFromDisp$MH().invokeExact(pdispIn.address(), lcid, pdateOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDateFromBool$MH() {
        return cfapi_h$constants$95.VarDateFromBool$MH();
    }
    public static @C("HRESULT") int VarDateFromBool (@C("VARIANT_BOOL") short boolIn, @C("DATE*") Addressable pdateOut) {
        try {
            return (int)cfapi_h$constants$95.VarDateFromBool$MH().invokeExact(boolIn, pdateOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDateFromI1$MH() {
        return cfapi_h$constants$95.VarDateFromI1$MH();
    }
    public static @C("HRESULT") int VarDateFromI1 (@C("CHAR") byte cIn, @C("DATE*") Addressable pdateOut) {
        try {
            return (int)cfapi_h$constants$95.VarDateFromI1$MH().invokeExact(cIn, pdateOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDateFromUI2$MH() {
        return cfapi_h$constants$95.VarDateFromUI2$MH();
    }
    public static @C("HRESULT") int VarDateFromUI2 (@C("USHORT") short uiIn, @C("DATE*") Addressable pdateOut) {
        try {
            return (int)cfapi_h$constants$95.VarDateFromUI2$MH().invokeExact(uiIn, pdateOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDateFromUI4$MH() {
        return cfapi_h$constants$95.VarDateFromUI4$MH();
    }
    public static @C("HRESULT") int VarDateFromUI4 (@C("ULONG") int ulIn, @C("DATE*") Addressable pdateOut) {
        try {
            return (int)cfapi_h$constants$95.VarDateFromUI4$MH().invokeExact(ulIn, pdateOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDateFromUI8$MH() {
        return cfapi_h$constants$95.VarDateFromUI8$MH();
    }
    public static @C("HRESULT") int VarDateFromUI8 (@C("ULONG64") long ui64In, @C("DATE*") Addressable pdateOut) {
        try {
            return (int)cfapi_h$constants$95.VarDateFromUI8$MH().invokeExact(ui64In, pdateOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDateFromDec$MH() {
        return cfapi_h$constants$95.VarDateFromDec$MH();
    }
    public static @C("HRESULT") int VarDateFromDec (@C("const DECIMAL*") Addressable pdecIn, @C("DATE*") Addressable pdateOut) {
        try {
            return (int)cfapi_h$constants$95.VarDateFromDec$MH().invokeExact(pdecIn.address(), pdateOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyFromUI1$MH() {
        return cfapi_h$constants$95.VarCyFromUI1$MH();
    }
    public static @C("HRESULT") int VarCyFromUI1 (@C("BYTE") byte bIn, @C("CY*") Addressable pcyOut) {
        try {
            return (int)cfapi_h$constants$95.VarCyFromUI1$MH().invokeExact(bIn, pcyOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyFromI2$MH() {
        return cfapi_h$constants$95.VarCyFromI2$MH();
    }
    public static @C("HRESULT") int VarCyFromI2 (@C("SHORT") short sIn, @C("CY*") Addressable pcyOut) {
        try {
            return (int)cfapi_h$constants$95.VarCyFromI2$MH().invokeExact(sIn, pcyOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyFromI4$MH() {
        return cfapi_h$constants$95.VarCyFromI4$MH();
    }
    public static @C("HRESULT") int VarCyFromI4 (@C("LONG") int lIn, @C("CY*") Addressable pcyOut) {
        try {
            return (int)cfapi_h$constants$95.VarCyFromI4$MH().invokeExact(lIn, pcyOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyFromI8$MH() {
        return cfapi_h$constants$95.VarCyFromI8$MH();
    }
    public static @C("HRESULT") int VarCyFromI8 (@C("LONG64") long i64In, @C("CY*") Addressable pcyOut) {
        try {
            return (int)cfapi_h$constants$95.VarCyFromI8$MH().invokeExact(i64In, pcyOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyFromR4$MH() {
        return cfapi_h$constants$95.VarCyFromR4$MH();
    }
    public static @C("HRESULT") int VarCyFromR4 (@C("FLOAT") float fltIn, @C("CY*") Addressable pcyOut) {
        try {
            return (int)cfapi_h$constants$95.VarCyFromR4$MH().invokeExact(fltIn, pcyOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyFromR8$MH() {
        return cfapi_h$constants$95.VarCyFromR8$MH();
    }
    public static @C("HRESULT") int VarCyFromR8 (@C("DOUBLE") double dblIn, @C("CY*") Addressable pcyOut) {
        try {
            return (int)cfapi_h$constants$95.VarCyFromR8$MH().invokeExact(dblIn, pcyOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyFromDate$MH() {
        return cfapi_h$constants$95.VarCyFromDate$MH();
    }
    public static @C("HRESULT") int VarCyFromDate (@C("DATE") double dateIn, @C("CY*") Addressable pcyOut) {
        try {
            return (int)cfapi_h$constants$95.VarCyFromDate$MH().invokeExact(dateIn, pcyOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyFromStr$MH() {
        return cfapi_h$constants$95.VarCyFromStr$MH();
    }
    public static @C("HRESULT") int VarCyFromStr (@C("LPCOLESTR") Addressable strIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("CY*") Addressable pcyOut) {
        try {
            return (int)cfapi_h$constants$95.VarCyFromStr$MH().invokeExact(strIn.address(), lcid, dwFlags, pcyOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyFromDisp$MH() {
        return cfapi_h$constants$95.VarCyFromDisp$MH();
    }
    public static @C("HRESULT") int VarCyFromDisp (@C("IDispatch*") Addressable pdispIn, @C("LCID") int lcid, @C("CY*") Addressable pcyOut) {
        try {
            return (int)cfapi_h$constants$95.VarCyFromDisp$MH().invokeExact(pdispIn.address(), lcid, pcyOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyFromBool$MH() {
        return cfapi_h$constants$95.VarCyFromBool$MH();
    }
    public static @C("HRESULT") int VarCyFromBool (@C("VARIANT_BOOL") short boolIn, @C("CY*") Addressable pcyOut) {
        try {
            return (int)cfapi_h$constants$95.VarCyFromBool$MH().invokeExact(boolIn, pcyOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyFromI1$MH() {
        return cfapi_h$constants$95.VarCyFromI1$MH();
    }
    public static @C("HRESULT") int VarCyFromI1 (@C("CHAR") byte cIn, @C("CY*") Addressable pcyOut) {
        try {
            return (int)cfapi_h$constants$95.VarCyFromI1$MH().invokeExact(cIn, pcyOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyFromUI2$MH() {
        return cfapi_h$constants$95.VarCyFromUI2$MH();
    }
    public static @C("HRESULT") int VarCyFromUI2 (@C("USHORT") short uiIn, @C("CY*") Addressable pcyOut) {
        try {
            return (int)cfapi_h$constants$95.VarCyFromUI2$MH().invokeExact(uiIn, pcyOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyFromUI4$MH() {
        return cfapi_h$constants$95.VarCyFromUI4$MH();
    }
    public static @C("HRESULT") int VarCyFromUI4 (@C("ULONG") int ulIn, @C("CY*") Addressable pcyOut) {
        try {
            return (int)cfapi_h$constants$95.VarCyFromUI4$MH().invokeExact(ulIn, pcyOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyFromUI8$MH() {
        return cfapi_h$constants$95.VarCyFromUI8$MH();
    }
    public static @C("HRESULT") int VarCyFromUI8 (@C("ULONG64") long ui64In, @C("CY*") Addressable pcyOut) {
        try {
            return (int)cfapi_h$constants$95.VarCyFromUI8$MH().invokeExact(ui64In, pcyOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyFromDec$MH() {
        return cfapi_h$constants$95.VarCyFromDec$MH();
    }
    public static @C("HRESULT") int VarCyFromDec (@C("const DECIMAL*") Addressable pdecIn, @C("CY*") Addressable pcyOut) {
        try {
            return (int)cfapi_h$constants$95.VarCyFromDec$MH().invokeExact(pdecIn.address(), pcyOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBstrFromUI1$MH() {
        return cfapi_h$constants$95.VarBstrFromUI1$MH();
    }
    public static @C("HRESULT") int VarBstrFromUI1 (@C("BYTE") byte bVal, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$95.VarBstrFromUI1$MH().invokeExact(bVal, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBstrFromI2$MH() {
        return cfapi_h$constants$95.VarBstrFromI2$MH();
    }
    public static @C("HRESULT") int VarBstrFromI2 (@C("SHORT") short iVal, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$95.VarBstrFromI2$MH().invokeExact(iVal, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBstrFromI4$MH() {
        return cfapi_h$constants$95.VarBstrFromI4$MH();
    }
    public static @C("HRESULT") int VarBstrFromI4 (@C("LONG") int lIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$95.VarBstrFromI4$MH().invokeExact(lIn, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBstrFromI8$MH() {
        return cfapi_h$constants$95.VarBstrFromI8$MH();
    }
    public static @C("HRESULT") int VarBstrFromI8 (@C("LONG64") long i64In, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$95.VarBstrFromI8$MH().invokeExact(i64In, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBstrFromR4$MH() {
        return cfapi_h$constants$95.VarBstrFromR4$MH();
    }
    public static @C("HRESULT") int VarBstrFromR4 (@C("FLOAT") float fltIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$95.VarBstrFromR4$MH().invokeExact(fltIn, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBstrFromR8$MH() {
        return cfapi_h$constants$95.VarBstrFromR8$MH();
    }
    public static @C("HRESULT") int VarBstrFromR8 (@C("DOUBLE") double dblIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$95.VarBstrFromR8$MH().invokeExact(dblIn, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBstrFromCy$MH() {
        return cfapi_h$constants$95.VarBstrFromCy$MH();
    }
    public static @C("HRESULT") int VarBstrFromCy (@C("CY") MemorySegment cyIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$95.VarBstrFromCy$MH().invokeExact(cyIn, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBstrFromDate$MH() {
        return cfapi_h$constants$95.VarBstrFromDate$MH();
    }
    public static @C("HRESULT") int VarBstrFromDate (@C("DATE") double dateIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$95.VarBstrFromDate$MH().invokeExact(dateIn, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBstrFromDisp$MH() {
        return cfapi_h$constants$95.VarBstrFromDisp$MH();
    }
    public static @C("HRESULT") int VarBstrFromDisp (@C("IDispatch*") Addressable pdispIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$95.VarBstrFromDisp$MH().invokeExact(pdispIn.address(), lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBstrFromBool$MH() {
        return cfapi_h$constants$95.VarBstrFromBool$MH();
    }
    public static @C("HRESULT") int VarBstrFromBool (@C("VARIANT_BOOL") short boolIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$95.VarBstrFromBool$MH().invokeExact(boolIn, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBstrFromI1$MH() {
        return cfapi_h$constants$95.VarBstrFromI1$MH();
    }
    public static @C("HRESULT") int VarBstrFromI1 (@C("CHAR") byte cIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$95.VarBstrFromI1$MH().invokeExact(cIn, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBstrFromUI2$MH() {
        return cfapi_h$constants$95.VarBstrFromUI2$MH();
    }
    public static @C("HRESULT") int VarBstrFromUI2 (@C("USHORT") short uiIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$95.VarBstrFromUI2$MH().invokeExact(uiIn, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBstrFromUI4$MH() {
        return cfapi_h$constants$95.VarBstrFromUI4$MH();
    }
    public static @C("HRESULT") int VarBstrFromUI4 (@C("ULONG") int ulIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$95.VarBstrFromUI4$MH().invokeExact(ulIn, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBstrFromUI8$MH() {
        return cfapi_h$constants$95.VarBstrFromUI8$MH();
    }
    public static @C("HRESULT") int VarBstrFromUI8 (@C("ULONG64") long ui64In, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$95.VarBstrFromUI8$MH().invokeExact(ui64In, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBstrFromDec$MH() {
        return cfapi_h$constants$95.VarBstrFromDec$MH();
    }
    public static @C("HRESULT") int VarBstrFromDec (@C("const DECIMAL*") Addressable pdecIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$95.VarBstrFromDec$MH().invokeExact(pdecIn.address(), lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBoolFromUI1$MH() {
        return cfapi_h$constants$95.VarBoolFromUI1$MH();
    }
    public static @C("HRESULT") int VarBoolFromUI1 (@C("BYTE") byte bIn, @C("VARIANT_BOOL*") Addressable pboolOut) {
        try {
            return (int)cfapi_h$constants$95.VarBoolFromUI1$MH().invokeExact(bIn, pboolOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBoolFromI2$MH() {
        return cfapi_h$constants$95.VarBoolFromI2$MH();
    }
    public static @C("HRESULT") int VarBoolFromI2 (@C("SHORT") short sIn, @C("VARIANT_BOOL*") Addressable pboolOut) {
        try {
            return (int)cfapi_h$constants$95.VarBoolFromI2$MH().invokeExact(sIn, pboolOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBoolFromI4$MH() {
        return cfapi_h$constants$95.VarBoolFromI4$MH();
    }
    public static @C("HRESULT") int VarBoolFromI4 (@C("LONG") int lIn, @C("VARIANT_BOOL*") Addressable pboolOut) {
        try {
            return (int)cfapi_h$constants$95.VarBoolFromI4$MH().invokeExact(lIn, pboolOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBoolFromI8$MH() {
        return cfapi_h$constants$95.VarBoolFromI8$MH();
    }
    public static @C("HRESULT") int VarBoolFromI8 (@C("LONG64") long i64In, @C("VARIANT_BOOL*") Addressable pboolOut) {
        try {
            return (int)cfapi_h$constants$95.VarBoolFromI8$MH().invokeExact(i64In, pboolOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBoolFromR4$MH() {
        return cfapi_h$constants$95.VarBoolFromR4$MH();
    }
    public static @C("HRESULT") int VarBoolFromR4 (@C("FLOAT") float fltIn, @C("VARIANT_BOOL*") Addressable pboolOut) {
        try {
            return (int)cfapi_h$constants$95.VarBoolFromR4$MH().invokeExact(fltIn, pboolOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBoolFromR8$MH() {
        return cfapi_h$constants$95.VarBoolFromR8$MH();
    }
    public static @C("HRESULT") int VarBoolFromR8 (@C("DOUBLE") double dblIn, @C("VARIANT_BOOL*") Addressable pboolOut) {
        try {
            return (int)cfapi_h$constants$95.VarBoolFromR8$MH().invokeExact(dblIn, pboolOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBoolFromDate$MH() {
        return cfapi_h$constants$95.VarBoolFromDate$MH();
    }
    public static @C("HRESULT") int VarBoolFromDate (@C("DATE") double dateIn, @C("VARIANT_BOOL*") Addressable pboolOut) {
        try {
            return (int)cfapi_h$constants$95.VarBoolFromDate$MH().invokeExact(dateIn, pboolOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBoolFromCy$MH() {
        return cfapi_h$constants$95.VarBoolFromCy$MH();
    }
    public static @C("HRESULT") int VarBoolFromCy (@C("CY") MemorySegment cyIn, @C("VARIANT_BOOL*") Addressable pboolOut) {
        try {
            return (int)cfapi_h$constants$95.VarBoolFromCy$MH().invokeExact(cyIn, pboolOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBoolFromStr$MH() {
        return cfapi_h$constants$95.VarBoolFromStr$MH();
    }
    public static @C("HRESULT") int VarBoolFromStr (@C("LPCOLESTR") Addressable strIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("VARIANT_BOOL*") Addressable pboolOut) {
        try {
            return (int)cfapi_h$constants$95.VarBoolFromStr$MH().invokeExact(strIn.address(), lcid, dwFlags, pboolOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBoolFromDisp$MH() {
        return cfapi_h$constants$95.VarBoolFromDisp$MH();
    }
    public static @C("HRESULT") int VarBoolFromDisp (@C("IDispatch*") Addressable pdispIn, @C("LCID") int lcid, @C("VARIANT_BOOL*") Addressable pboolOut) {
        try {
            return (int)cfapi_h$constants$95.VarBoolFromDisp$MH().invokeExact(pdispIn.address(), lcid, pboolOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBoolFromI1$MH() {
        return cfapi_h$constants$95.VarBoolFromI1$MH();
    }
    public static @C("HRESULT") int VarBoolFromI1 (@C("CHAR") byte cIn, @C("VARIANT_BOOL*") Addressable pboolOut) {
        try {
            return (int)cfapi_h$constants$95.VarBoolFromI1$MH().invokeExact(cIn, pboolOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBoolFromUI2$MH() {
        return cfapi_h$constants$95.VarBoolFromUI2$MH();
    }
    public static @C("HRESULT") int VarBoolFromUI2 (@C("USHORT") short uiIn, @C("VARIANT_BOOL*") Addressable pboolOut) {
        try {
            return (int)cfapi_h$constants$95.VarBoolFromUI2$MH().invokeExact(uiIn, pboolOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBoolFromUI4$MH() {
        return cfapi_h$constants$95.VarBoolFromUI4$MH();
    }
    public static @C("HRESULT") int VarBoolFromUI4 (@C("ULONG") int ulIn, @C("VARIANT_BOOL*") Addressable pboolOut) {
        try {
            return (int)cfapi_h$constants$95.VarBoolFromUI4$MH().invokeExact(ulIn, pboolOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBoolFromUI8$MH() {
        return cfapi_h$constants$95.VarBoolFromUI8$MH();
    }
    public static @C("HRESULT") int VarBoolFromUI8 (@C("ULONG64") long i64In, @C("VARIANT_BOOL*") Addressable pboolOut) {
        try {
            return (int)cfapi_h$constants$95.VarBoolFromUI8$MH().invokeExact(i64In, pboolOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBoolFromDec$MH() {
        return cfapi_h$constants$95.VarBoolFromDec$MH();
    }
    public static @C("HRESULT") int VarBoolFromDec (@C("const DECIMAL*") Addressable pdecIn, @C("VARIANT_BOOL*") Addressable pboolOut) {
        try {
            return (int)cfapi_h$constants$95.VarBoolFromDec$MH().invokeExact(pdecIn.address(), pboolOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI1FromUI1$MH() {
        return cfapi_h$constants$95.VarI1FromUI1$MH();
    }
    public static @C("HRESULT") int VarI1FromUI1 (@C("BYTE") byte bIn, @C("CHAR*") Addressable pcOut) {
        try {
            return (int)cfapi_h$constants$95.VarI1FromUI1$MH().invokeExact(bIn, pcOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI1FromI2$MH() {
        return cfapi_h$constants$95.VarI1FromI2$MH();
    }
    public static @C("HRESULT") int VarI1FromI2 (@C("SHORT") short uiIn, @C("CHAR*") Addressable pcOut) {
        try {
            return (int)cfapi_h$constants$95.VarI1FromI2$MH().invokeExact(uiIn, pcOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI1FromI4$MH() {
        return cfapi_h$constants$95.VarI1FromI4$MH();
    }
    public static @C("HRESULT") int VarI1FromI4 (@C("LONG") int lIn, @C("CHAR*") Addressable pcOut) {
        try {
            return (int)cfapi_h$constants$95.VarI1FromI4$MH().invokeExact(lIn, pcOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI1FromI8$MH() {
        return cfapi_h$constants$95.VarI1FromI8$MH();
    }
    public static @C("HRESULT") int VarI1FromI8 (@C("LONG64") long i64In, @C("CHAR*") Addressable pcOut) {
        try {
            return (int)cfapi_h$constants$95.VarI1FromI8$MH().invokeExact(i64In, pcOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI1FromR4$MH() {
        return cfapi_h$constants$95.VarI1FromR4$MH();
    }
    public static @C("HRESULT") int VarI1FromR4 (@C("FLOAT") float fltIn, @C("CHAR*") Addressable pcOut) {
        try {
            return (int)cfapi_h$constants$95.VarI1FromR4$MH().invokeExact(fltIn, pcOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI1FromR8$MH() {
        return cfapi_h$constants$95.VarI1FromR8$MH();
    }
    public static @C("HRESULT") int VarI1FromR8 (@C("DOUBLE") double dblIn, @C("CHAR*") Addressable pcOut) {
        try {
            return (int)cfapi_h$constants$95.VarI1FromR8$MH().invokeExact(dblIn, pcOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI1FromDate$MH() {
        return cfapi_h$constants$95.VarI1FromDate$MH();
    }
    public static @C("HRESULT") int VarI1FromDate (@C("DATE") double dateIn, @C("CHAR*") Addressable pcOut) {
        try {
            return (int)cfapi_h$constants$95.VarI1FromDate$MH().invokeExact(dateIn, pcOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI1FromCy$MH() {
        return cfapi_h$constants$95.VarI1FromCy$MH();
    }
    public static @C("HRESULT") int VarI1FromCy (@C("CY") MemorySegment cyIn, @C("CHAR*") Addressable pcOut) {
        try {
            return (int)cfapi_h$constants$95.VarI1FromCy$MH().invokeExact(cyIn, pcOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI1FromStr$MH() {
        return cfapi_h$constants$95.VarI1FromStr$MH();
    }
    public static @C("HRESULT") int VarI1FromStr (@C("LPCOLESTR") Addressable strIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("CHAR*") Addressable pcOut) {
        try {
            return (int)cfapi_h$constants$95.VarI1FromStr$MH().invokeExact(strIn.address(), lcid, dwFlags, pcOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI1FromDisp$MH() {
        return cfapi_h$constants$95.VarI1FromDisp$MH();
    }
    public static @C("HRESULT") int VarI1FromDisp (@C("IDispatch*") Addressable pdispIn, @C("LCID") int lcid, @C("CHAR*") Addressable pcOut) {
        try {
            return (int)cfapi_h$constants$95.VarI1FromDisp$MH().invokeExact(pdispIn.address(), lcid, pcOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI1FromBool$MH() {
        return cfapi_h$constants$95.VarI1FromBool$MH();
    }
    public static @C("HRESULT") int VarI1FromBool (@C("VARIANT_BOOL") short boolIn, @C("CHAR*") Addressable pcOut) {
        try {
            return (int)cfapi_h$constants$95.VarI1FromBool$MH().invokeExact(boolIn, pcOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI1FromUI2$MH() {
        return cfapi_h$constants$95.VarI1FromUI2$MH();
    }
    public static @C("HRESULT") int VarI1FromUI2 (@C("USHORT") short uiIn, @C("CHAR*") Addressable pcOut) {
        try {
            return (int)cfapi_h$constants$95.VarI1FromUI2$MH().invokeExact(uiIn, pcOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI1FromUI4$MH() {
        return cfapi_h$constants$95.VarI1FromUI4$MH();
    }
    public static @C("HRESULT") int VarI1FromUI4 (@C("ULONG") int ulIn, @C("CHAR*") Addressable pcOut) {
        try {
            return (int)cfapi_h$constants$95.VarI1FromUI4$MH().invokeExact(ulIn, pcOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI1FromUI8$MH() {
        return cfapi_h$constants$95.VarI1FromUI8$MH();
    }
    public static @C("HRESULT") int VarI1FromUI8 (@C("ULONG64") long i64In, @C("CHAR*") Addressable pcOut) {
        try {
            return (int)cfapi_h$constants$95.VarI1FromUI8$MH().invokeExact(i64In, pcOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarI1FromDec$MH() {
        return cfapi_h$constants$95.VarI1FromDec$MH();
    }
    public static @C("HRESULT") int VarI1FromDec (@C("const DECIMAL*") Addressable pdecIn, @C("CHAR*") Addressable pcOut) {
        try {
            return (int)cfapi_h$constants$95.VarI1FromDec$MH().invokeExact(pdecIn.address(), pcOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI2FromUI1$MH() {
        return cfapi_h$constants$95.VarUI2FromUI1$MH();
    }
    public static @C("HRESULT") int VarUI2FromUI1 (@C("BYTE") byte bIn, @C("USHORT*") Addressable puiOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI2FromUI1$MH().invokeExact(bIn, puiOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI2FromI2$MH() {
        return cfapi_h$constants$95.VarUI2FromI2$MH();
    }
    public static @C("HRESULT") int VarUI2FromI2 (@C("SHORT") short uiIn, @C("USHORT*") Addressable puiOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI2FromI2$MH().invokeExact(uiIn, puiOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI2FromI4$MH() {
        return cfapi_h$constants$95.VarUI2FromI4$MH();
    }
    public static @C("HRESULT") int VarUI2FromI4 (@C("LONG") int lIn, @C("USHORT*") Addressable puiOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI2FromI4$MH().invokeExact(lIn, puiOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI2FromI8$MH() {
        return cfapi_h$constants$95.VarUI2FromI8$MH();
    }
    public static @C("HRESULT") int VarUI2FromI8 (@C("LONG64") long i64In, @C("USHORT*") Addressable puiOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI2FromI8$MH().invokeExact(i64In, puiOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI2FromR4$MH() {
        return cfapi_h$constants$95.VarUI2FromR4$MH();
    }
    public static @C("HRESULT") int VarUI2FromR4 (@C("FLOAT") float fltIn, @C("USHORT*") Addressable puiOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI2FromR4$MH().invokeExact(fltIn, puiOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI2FromR8$MH() {
        return cfapi_h$constants$95.VarUI2FromR8$MH();
    }
    public static @C("HRESULT") int VarUI2FromR8 (@C("DOUBLE") double dblIn, @C("USHORT*") Addressable puiOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI2FromR8$MH().invokeExact(dblIn, puiOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI2FromDate$MH() {
        return cfapi_h$constants$95.VarUI2FromDate$MH();
    }
    public static @C("HRESULT") int VarUI2FromDate (@C("DATE") double dateIn, @C("USHORT*") Addressable puiOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI2FromDate$MH().invokeExact(dateIn, puiOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI2FromCy$MH() {
        return cfapi_h$constants$95.VarUI2FromCy$MH();
    }
    public static @C("HRESULT") int VarUI2FromCy (@C("CY") MemorySegment cyIn, @C("USHORT*") Addressable puiOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI2FromCy$MH().invokeExact(cyIn, puiOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI2FromStr$MH() {
        return cfapi_h$constants$95.VarUI2FromStr$MH();
    }
    public static @C("HRESULT") int VarUI2FromStr (@C("LPCOLESTR") Addressable strIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("USHORT*") Addressable puiOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI2FromStr$MH().invokeExact(strIn.address(), lcid, dwFlags, puiOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI2FromDisp$MH() {
        return cfapi_h$constants$95.VarUI2FromDisp$MH();
    }
    public static @C("HRESULT") int VarUI2FromDisp (@C("IDispatch*") Addressable pdispIn, @C("LCID") int lcid, @C("USHORT*") Addressable puiOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI2FromDisp$MH().invokeExact(pdispIn.address(), lcid, puiOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI2FromBool$MH() {
        return cfapi_h$constants$95.VarUI2FromBool$MH();
    }
    public static @C("HRESULT") int VarUI2FromBool (@C("VARIANT_BOOL") short boolIn, @C("USHORT*") Addressable puiOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI2FromBool$MH().invokeExact(boolIn, puiOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI2FromI1$MH() {
        return cfapi_h$constants$95.VarUI2FromI1$MH();
    }
    public static @C("HRESULT") int VarUI2FromI1 (@C("CHAR") byte cIn, @C("USHORT*") Addressable puiOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI2FromI1$MH().invokeExact(cIn, puiOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI2FromUI4$MH() {
        return cfapi_h$constants$95.VarUI2FromUI4$MH();
    }
    public static @C("HRESULT") int VarUI2FromUI4 (@C("ULONG") int ulIn, @C("USHORT*") Addressable puiOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI2FromUI4$MH().invokeExact(ulIn, puiOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI2FromUI8$MH() {
        return cfapi_h$constants$95.VarUI2FromUI8$MH();
    }
    public static @C("HRESULT") int VarUI2FromUI8 (@C("ULONG64") long i64In, @C("USHORT*") Addressable puiOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI2FromUI8$MH().invokeExact(i64In, puiOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI2FromDec$MH() {
        return cfapi_h$constants$95.VarUI2FromDec$MH();
    }
    public static @C("HRESULT") int VarUI2FromDec (@C("const DECIMAL*") Addressable pdecIn, @C("USHORT*") Addressable puiOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI2FromDec$MH().invokeExact(pdecIn.address(), puiOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI4FromUI1$MH() {
        return cfapi_h$constants$95.VarUI4FromUI1$MH();
    }
    public static @C("HRESULT") int VarUI4FromUI1 (@C("BYTE") byte bIn, @C("ULONG*") Addressable pulOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI4FromUI1$MH().invokeExact(bIn, pulOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI4FromI2$MH() {
        return cfapi_h$constants$95.VarUI4FromI2$MH();
    }
    public static @C("HRESULT") int VarUI4FromI2 (@C("SHORT") short uiIn, @C("ULONG*") Addressable pulOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI4FromI2$MH().invokeExact(uiIn, pulOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI4FromI4$MH() {
        return cfapi_h$constants$95.VarUI4FromI4$MH();
    }
    public static @C("HRESULT") int VarUI4FromI4 (@C("LONG") int lIn, @C("ULONG*") Addressable pulOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI4FromI4$MH().invokeExact(lIn, pulOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI4FromI8$MH() {
        return cfapi_h$constants$95.VarUI4FromI8$MH();
    }
    public static @C("HRESULT") int VarUI4FromI8 (@C("LONG64") long i64In, @C("ULONG*") Addressable plOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI4FromI8$MH().invokeExact(i64In, plOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI4FromR4$MH() {
        return cfapi_h$constants$95.VarUI4FromR4$MH();
    }
    public static @C("HRESULT") int VarUI4FromR4 (@C("FLOAT") float fltIn, @C("ULONG*") Addressable pulOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI4FromR4$MH().invokeExact(fltIn, pulOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI4FromR8$MH() {
        return cfapi_h$constants$95.VarUI4FromR8$MH();
    }
    public static @C("HRESULT") int VarUI4FromR8 (@C("DOUBLE") double dblIn, @C("ULONG*") Addressable pulOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI4FromR8$MH().invokeExact(dblIn, pulOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI4FromDate$MH() {
        return cfapi_h$constants$95.VarUI4FromDate$MH();
    }
    public static @C("HRESULT") int VarUI4FromDate (@C("DATE") double dateIn, @C("ULONG*") Addressable pulOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI4FromDate$MH().invokeExact(dateIn, pulOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI4FromCy$MH() {
        return cfapi_h$constants$95.VarUI4FromCy$MH();
    }
    public static @C("HRESULT") int VarUI4FromCy (@C("CY") MemorySegment cyIn, @C("ULONG*") Addressable pulOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI4FromCy$MH().invokeExact(cyIn, pulOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI4FromStr$MH() {
        return cfapi_h$constants$95.VarUI4FromStr$MH();
    }
    public static @C("HRESULT") int VarUI4FromStr (@C("LPCOLESTR") Addressable strIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("ULONG*") Addressable pulOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI4FromStr$MH().invokeExact(strIn.address(), lcid, dwFlags, pulOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI4FromDisp$MH() {
        return cfapi_h$constants$95.VarUI4FromDisp$MH();
    }
    public static @C("HRESULT") int VarUI4FromDisp (@C("IDispatch*") Addressable pdispIn, @C("LCID") int lcid, @C("ULONG*") Addressable pulOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI4FromDisp$MH().invokeExact(pdispIn.address(), lcid, pulOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI4FromBool$MH() {
        return cfapi_h$constants$95.VarUI4FromBool$MH();
    }
    public static @C("HRESULT") int VarUI4FromBool (@C("VARIANT_BOOL") short boolIn, @C("ULONG*") Addressable pulOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI4FromBool$MH().invokeExact(boolIn, pulOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI4FromI1$MH() {
        return cfapi_h$constants$95.VarUI4FromI1$MH();
    }
    public static @C("HRESULT") int VarUI4FromI1 (@C("CHAR") byte cIn, @C("ULONG*") Addressable pulOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI4FromI1$MH().invokeExact(cIn, pulOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI4FromUI2$MH() {
        return cfapi_h$constants$95.VarUI4FromUI2$MH();
    }
    public static @C("HRESULT") int VarUI4FromUI2 (@C("USHORT") short uiIn, @C("ULONG*") Addressable pulOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI4FromUI2$MH().invokeExact(uiIn, pulOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI4FromUI8$MH() {
        return cfapi_h$constants$95.VarUI4FromUI8$MH();
    }
    public static @C("HRESULT") int VarUI4FromUI8 (@C("ULONG64") long ui64In, @C("ULONG*") Addressable plOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI4FromUI8$MH().invokeExact(ui64In, plOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI4FromDec$MH() {
        return cfapi_h$constants$95.VarUI4FromDec$MH();
    }
    public static @C("HRESULT") int VarUI4FromDec (@C("const DECIMAL*") Addressable pdecIn, @C("ULONG*") Addressable pulOut) {
        try {
            return (int)cfapi_h$constants$95.VarUI4FromDec$MH().invokeExact(pdecIn.address(), pulOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI8FromUI1$MH() {
        return cfapi_h$constants$95.VarUI8FromUI1$MH();
    }
    public static @C("HRESULT") int VarUI8FromUI1 (@C("BYTE") byte bIn, @C("ULONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarUI8FromUI1$MH().invokeExact(bIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI8FromI2$MH() {
        return cfapi_h$constants$95.VarUI8FromI2$MH();
    }
    public static @C("HRESULT") int VarUI8FromI2 (@C("SHORT") short sIn, @C("ULONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarUI8FromI2$MH().invokeExact(sIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI8FromI4$MH() {
        return cfapi_h$constants$95.VarUI8FromI4$MH();
    }
    public static @C("HRESULT") int VarUI8FromI4 (@C("LONG") int lIn, @C("ULONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarUI8FromI4$MH().invokeExact(lIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI8FromI8$MH() {
        return cfapi_h$constants$95.VarUI8FromI8$MH();
    }
    public static @C("HRESULT") int VarUI8FromI8 (@C("LONG64") long ui64In, @C("ULONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarUI8FromI8$MH().invokeExact(ui64In, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI8FromR4$MH() {
        return cfapi_h$constants$95.VarUI8FromR4$MH();
    }
    public static @C("HRESULT") int VarUI8FromR4 (@C("FLOAT") float fltIn, @C("ULONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarUI8FromR4$MH().invokeExact(fltIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI8FromR8$MH() {
        return cfapi_h$constants$95.VarUI8FromR8$MH();
    }
    public static @C("HRESULT") int VarUI8FromR8 (@C("DOUBLE") double dblIn, @C("ULONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarUI8FromR8$MH().invokeExact(dblIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI8FromCy$MH() {
        return cfapi_h$constants$95.VarUI8FromCy$MH();
    }
    public static @C("HRESULT") int VarUI8FromCy (@C("CY") MemorySegment cyIn, @C("ULONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarUI8FromCy$MH().invokeExact(cyIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI8FromDate$MH() {
        return cfapi_h$constants$95.VarUI8FromDate$MH();
    }
    public static @C("HRESULT") int VarUI8FromDate (@C("DATE") double dateIn, @C("ULONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarUI8FromDate$MH().invokeExact(dateIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI8FromStr$MH() {
        return cfapi_h$constants$95.VarUI8FromStr$MH();
    }
    public static @C("HRESULT") int VarUI8FromStr (@C("LPCOLESTR") Addressable strIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("ULONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarUI8FromStr$MH().invokeExact(strIn.address(), lcid, dwFlags, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI8FromDisp$MH() {
        return cfapi_h$constants$95.VarUI8FromDisp$MH();
    }
    public static @C("HRESULT") int VarUI8FromDisp (@C("IDispatch*") Addressable pdispIn, @C("LCID") int lcid, @C("ULONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarUI8FromDisp$MH().invokeExact(pdispIn.address(), lcid, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI8FromBool$MH() {
        return cfapi_h$constants$95.VarUI8FromBool$MH();
    }
    public static @C("HRESULT") int VarUI8FromBool (@C("VARIANT_BOOL") short boolIn, @C("ULONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarUI8FromBool$MH().invokeExact(boolIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI8FromI1$MH() {
        return cfapi_h$constants$95.VarUI8FromI1$MH();
    }
    public static @C("HRESULT") int VarUI8FromI1 (@C("CHAR") byte cIn, @C("ULONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarUI8FromI1$MH().invokeExact(cIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI8FromUI2$MH() {
        return cfapi_h$constants$95.VarUI8FromUI2$MH();
    }
    public static @C("HRESULT") int VarUI8FromUI2 (@C("USHORT") short uiIn, @C("ULONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarUI8FromUI2$MH().invokeExact(uiIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI8FromUI4$MH() {
        return cfapi_h$constants$95.VarUI8FromUI4$MH();
    }
    public static @C("HRESULT") int VarUI8FromUI4 (@C("ULONG") int ulIn, @C("ULONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarUI8FromUI4$MH().invokeExact(ulIn, pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUI8FromDec$MH() {
        return cfapi_h$constants$95.VarUI8FromDec$MH();
    }
    public static @C("HRESULT") int VarUI8FromDec (@C("const DECIMAL*") Addressable pdecIn, @C("ULONG64*") Addressable pi64Out) {
        try {
            return (int)cfapi_h$constants$95.VarUI8FromDec$MH().invokeExact(pdecIn.address(), pi64Out.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecFromUI1$MH() {
        return cfapi_h$constants$95.VarDecFromUI1$MH();
    }
    public static @C("HRESULT") int VarDecFromUI1 (@C("BYTE") byte bIn, @C("DECIMAL*") Addressable pdecOut) {
        try {
            return (int)cfapi_h$constants$95.VarDecFromUI1$MH().invokeExact(bIn, pdecOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecFromI2$MH() {
        return cfapi_h$constants$95.VarDecFromI2$MH();
    }
    public static @C("HRESULT") int VarDecFromI2 (@C("SHORT") short uiIn, @C("DECIMAL*") Addressable pdecOut) {
        try {
            return (int)cfapi_h$constants$95.VarDecFromI2$MH().invokeExact(uiIn, pdecOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecFromI4$MH() {
        return cfapi_h$constants$95.VarDecFromI4$MH();
    }
    public static @C("HRESULT") int VarDecFromI4 (@C("LONG") int lIn, @C("DECIMAL*") Addressable pdecOut) {
        try {
            return (int)cfapi_h$constants$95.VarDecFromI4$MH().invokeExact(lIn, pdecOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecFromI8$MH() {
        return cfapi_h$constants$95.VarDecFromI8$MH();
    }
    public static @C("HRESULT") int VarDecFromI8 (@C("LONG64") long i64In, @C("DECIMAL*") Addressable pdecOut) {
        try {
            return (int)cfapi_h$constants$95.VarDecFromI8$MH().invokeExact(i64In, pdecOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecFromR4$MH() {
        return cfapi_h$constants$95.VarDecFromR4$MH();
    }
    public static @C("HRESULT") int VarDecFromR4 (@C("FLOAT") float fltIn, @C("DECIMAL*") Addressable pdecOut) {
        try {
            return (int)cfapi_h$constants$95.VarDecFromR4$MH().invokeExact(fltIn, pdecOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecFromR8$MH() {
        return cfapi_h$constants$95.VarDecFromR8$MH();
    }
    public static @C("HRESULT") int VarDecFromR8 (@C("DOUBLE") double dblIn, @C("DECIMAL*") Addressable pdecOut) {
        try {
            return (int)cfapi_h$constants$95.VarDecFromR8$MH().invokeExact(dblIn, pdecOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecFromDate$MH() {
        return cfapi_h$constants$95.VarDecFromDate$MH();
    }
    public static @C("HRESULT") int VarDecFromDate (@C("DATE") double dateIn, @C("DECIMAL*") Addressable pdecOut) {
        try {
            return (int)cfapi_h$constants$95.VarDecFromDate$MH().invokeExact(dateIn, pdecOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecFromCy$MH() {
        return cfapi_h$constants$95.VarDecFromCy$MH();
    }
    public static @C("HRESULT") int VarDecFromCy (@C("CY") MemorySegment cyIn, @C("DECIMAL*") Addressable pdecOut) {
        try {
            return (int)cfapi_h$constants$95.VarDecFromCy$MH().invokeExact(cyIn, pdecOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecFromStr$MH() {
        return cfapi_h$constants$95.VarDecFromStr$MH();
    }
    public static @C("HRESULT") int VarDecFromStr (@C("LPCOLESTR") Addressable strIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("DECIMAL*") Addressable pdecOut) {
        try {
            return (int)cfapi_h$constants$95.VarDecFromStr$MH().invokeExact(strIn.address(), lcid, dwFlags, pdecOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecFromDisp$MH() {
        return cfapi_h$constants$95.VarDecFromDisp$MH();
    }
    public static @C("HRESULT") int VarDecFromDisp (@C("IDispatch*") Addressable pdispIn, @C("LCID") int lcid, @C("DECIMAL*") Addressable pdecOut) {
        try {
            return (int)cfapi_h$constants$95.VarDecFromDisp$MH().invokeExact(pdispIn.address(), lcid, pdecOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecFromBool$MH() {
        return cfapi_h$constants$95.VarDecFromBool$MH();
    }
    public static @C("HRESULT") int VarDecFromBool (@C("VARIANT_BOOL") short boolIn, @C("DECIMAL*") Addressable pdecOut) {
        try {
            return (int)cfapi_h$constants$95.VarDecFromBool$MH().invokeExact(boolIn, pdecOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecFromI1$MH() {
        return cfapi_h$constants$95.VarDecFromI1$MH();
    }
    public static @C("HRESULT") int VarDecFromI1 (@C("CHAR") byte cIn, @C("DECIMAL*") Addressable pdecOut) {
        try {
            return (int)cfapi_h$constants$95.VarDecFromI1$MH().invokeExact(cIn, pdecOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecFromUI2$MH() {
        return cfapi_h$constants$95.VarDecFromUI2$MH();
    }
    public static @C("HRESULT") int VarDecFromUI2 (@C("USHORT") short uiIn, @C("DECIMAL*") Addressable pdecOut) {
        try {
            return (int)cfapi_h$constants$95.VarDecFromUI2$MH().invokeExact(uiIn, pdecOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecFromUI4$MH() {
        return cfapi_h$constants$95.VarDecFromUI4$MH();
    }
    public static @C("HRESULT") int VarDecFromUI4 (@C("ULONG") int ulIn, @C("DECIMAL*") Addressable pdecOut) {
        try {
            return (int)cfapi_h$constants$95.VarDecFromUI4$MH().invokeExact(ulIn, pdecOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecFromUI8$MH() {
        return cfapi_h$constants$95.VarDecFromUI8$MH();
    }
    public static @C("HRESULT") int VarDecFromUI8 (@C("ULONG64") long ui64In, @C("DECIMAL*") Addressable pdecOut) {
        try {
            return (int)cfapi_h$constants$95.VarDecFromUI8$MH().invokeExact(ui64In, pdecOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarParseNumFromStr$MH() {
        return cfapi_h$constants$95.VarParseNumFromStr$MH();
    }
    public static @C("HRESULT") int VarParseNumFromStr (@C("LPCOLESTR") Addressable strIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("NUMPARSE*") Addressable pnumprs, @C("BYTE*") Addressable rgbDig) {
        try {
            return (int)cfapi_h$constants$95.VarParseNumFromStr$MH().invokeExact(strIn.address(), lcid, dwFlags, pnumprs.address(), rgbDig.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarNumFromParseNum$MH() {
        return cfapi_h$constants$95.VarNumFromParseNum$MH();
    }
    public static @C("HRESULT") int VarNumFromParseNum (@C("NUMPARSE*") Addressable pnumprs, @C("BYTE*") Addressable rgbDig, @C("ULONG") int dwVtBits, @C("VARIANT*") Addressable pvar) {
        try {
            return (int)cfapi_h$constants$95.VarNumFromParseNum$MH().invokeExact(pnumprs.address(), rgbDig.address(), dwVtBits, pvar.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarAdd$MH() {
        return cfapi_h$constants$95.VarAdd$MH();
    }
    public static @C("HRESULT") int VarAdd (@C("LPVARIANT") Addressable pvarLeft, @C("LPVARIANT") Addressable pvarRight, @C("LPVARIANT") Addressable pvarResult) {
        try {
            return (int)cfapi_h$constants$95.VarAdd$MH().invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarAnd$MH() {
        return cfapi_h$constants$96.VarAnd$MH();
    }
    public static @C("HRESULT") int VarAnd (@C("LPVARIANT") Addressable pvarLeft, @C("LPVARIANT") Addressable pvarRight, @C("LPVARIANT") Addressable pvarResult) {
        try {
            return (int)cfapi_h$constants$96.VarAnd$MH().invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCat$MH() {
        return cfapi_h$constants$96.VarCat$MH();
    }
    public static @C("HRESULT") int VarCat (@C("LPVARIANT") Addressable pvarLeft, @C("LPVARIANT") Addressable pvarRight, @C("LPVARIANT") Addressable pvarResult) {
        try {
            return (int)cfapi_h$constants$96.VarCat$MH().invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDiv$MH() {
        return cfapi_h$constants$96.VarDiv$MH();
    }
    public static @C("HRESULT") int VarDiv (@C("LPVARIANT") Addressable pvarLeft, @C("LPVARIANT") Addressable pvarRight, @C("LPVARIANT") Addressable pvarResult) {
        try {
            return (int)cfapi_h$constants$96.VarDiv$MH().invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarEqv$MH() {
        return cfapi_h$constants$96.VarEqv$MH();
    }
    public static @C("HRESULT") int VarEqv (@C("LPVARIANT") Addressable pvarLeft, @C("LPVARIANT") Addressable pvarRight, @C("LPVARIANT") Addressable pvarResult) {
        try {
            return (int)cfapi_h$constants$96.VarEqv$MH().invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarIdiv$MH() {
        return cfapi_h$constants$96.VarIdiv$MH();
    }
    public static @C("HRESULT") int VarIdiv (@C("LPVARIANT") Addressable pvarLeft, @C("LPVARIANT") Addressable pvarRight, @C("LPVARIANT") Addressable pvarResult) {
        try {
            return (int)cfapi_h$constants$96.VarIdiv$MH().invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarImp$MH() {
        return cfapi_h$constants$96.VarImp$MH();
    }
    public static @C("HRESULT") int VarImp (@C("LPVARIANT") Addressable pvarLeft, @C("LPVARIANT") Addressable pvarRight, @C("LPVARIANT") Addressable pvarResult) {
        try {
            return (int)cfapi_h$constants$96.VarImp$MH().invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarMod$MH() {
        return cfapi_h$constants$96.VarMod$MH();
    }
    public static @C("HRESULT") int VarMod (@C("LPVARIANT") Addressable pvarLeft, @C("LPVARIANT") Addressable pvarRight, @C("LPVARIANT") Addressable pvarResult) {
        try {
            return (int)cfapi_h$constants$96.VarMod$MH().invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarMul$MH() {
        return cfapi_h$constants$96.VarMul$MH();
    }
    public static @C("HRESULT") int VarMul (@C("LPVARIANT") Addressable pvarLeft, @C("LPVARIANT") Addressable pvarRight, @C("LPVARIANT") Addressable pvarResult) {
        try {
            return (int)cfapi_h$constants$96.VarMul$MH().invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarOr$MH() {
        return cfapi_h$constants$96.VarOr$MH();
    }
    public static @C("HRESULT") int VarOr (@C("LPVARIANT") Addressable pvarLeft, @C("LPVARIANT") Addressable pvarRight, @C("LPVARIANT") Addressable pvarResult) {
        try {
            return (int)cfapi_h$constants$96.VarOr$MH().invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarPow$MH() {
        return cfapi_h$constants$96.VarPow$MH();
    }
    public static @C("HRESULT") int VarPow (@C("LPVARIANT") Addressable pvarLeft, @C("LPVARIANT") Addressable pvarRight, @C("LPVARIANT") Addressable pvarResult) {
        try {
            return (int)cfapi_h$constants$96.VarPow$MH().invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarSub$MH() {
        return cfapi_h$constants$96.VarSub$MH();
    }
    public static @C("HRESULT") int VarSub (@C("LPVARIANT") Addressable pvarLeft, @C("LPVARIANT") Addressable pvarRight, @C("LPVARIANT") Addressable pvarResult) {
        try {
            return (int)cfapi_h$constants$96.VarSub$MH().invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarXor$MH() {
        return cfapi_h$constants$96.VarXor$MH();
    }
    public static @C("HRESULT") int VarXor (@C("LPVARIANT") Addressable pvarLeft, @C("LPVARIANT") Addressable pvarRight, @C("LPVARIANT") Addressable pvarResult) {
        try {
            return (int)cfapi_h$constants$96.VarXor$MH().invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarAbs$MH() {
        return cfapi_h$constants$96.VarAbs$MH();
    }
    public static @C("HRESULT") int VarAbs (@C("LPVARIANT") Addressable pvarIn, @C("LPVARIANT") Addressable pvarResult) {
        try {
            return (int)cfapi_h$constants$96.VarAbs$MH().invokeExact(pvarIn.address(), pvarResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarFix$MH() {
        return cfapi_h$constants$96.VarFix$MH();
    }
    public static @C("HRESULT") int VarFix (@C("LPVARIANT") Addressable pvarIn, @C("LPVARIANT") Addressable pvarResult) {
        try {
            return (int)cfapi_h$constants$96.VarFix$MH().invokeExact(pvarIn.address(), pvarResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarInt$MH() {
        return cfapi_h$constants$96.VarInt$MH();
    }
    public static @C("HRESULT") int VarInt (@C("LPVARIANT") Addressable pvarIn, @C("LPVARIANT") Addressable pvarResult) {
        try {
            return (int)cfapi_h$constants$96.VarInt$MH().invokeExact(pvarIn.address(), pvarResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarNeg$MH() {
        return cfapi_h$constants$96.VarNeg$MH();
    }
    public static @C("HRESULT") int VarNeg (@C("LPVARIANT") Addressable pvarIn, @C("LPVARIANT") Addressable pvarResult) {
        try {
            return (int)cfapi_h$constants$96.VarNeg$MH().invokeExact(pvarIn.address(), pvarResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarNot$MH() {
        return cfapi_h$constants$96.VarNot$MH();
    }
    public static @C("HRESULT") int VarNot (@C("LPVARIANT") Addressable pvarIn, @C("LPVARIANT") Addressable pvarResult) {
        try {
            return (int)cfapi_h$constants$96.VarNot$MH().invokeExact(pvarIn.address(), pvarResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarRound$MH() {
        return cfapi_h$constants$96.VarRound$MH();
    }
    public static @C("HRESULT") int VarRound (@C("LPVARIANT") Addressable pvarIn, @C("int") int cDecimals, @C("LPVARIANT") Addressable pvarResult) {
        try {
            return (int)cfapi_h$constants$96.VarRound$MH().invokeExact(pvarIn.address(), cDecimals, pvarResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCmp$MH() {
        return cfapi_h$constants$96.VarCmp$MH();
    }
    public static @C("HRESULT") int VarCmp (@C("LPVARIANT") Addressable pvarLeft, @C("LPVARIANT") Addressable pvarRight, @C("LCID") int lcid, @C("ULONG") int dwFlags) {
        try {
            return (int)cfapi_h$constants$96.VarCmp$MH().invokeExact(pvarLeft.address(), pvarRight.address(), lcid, dwFlags);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecAdd$MH() {
        return cfapi_h$constants$96.VarDecAdd$MH();
    }
    public static @C("HRESULT") int VarDecAdd (@C("LPDECIMAL") Addressable pdecLeft, @C("LPDECIMAL") Addressable pdecRight, @C("LPDECIMAL") Addressable pdecResult) {
        try {
            return (int)cfapi_h$constants$96.VarDecAdd$MH().invokeExact(pdecLeft.address(), pdecRight.address(), pdecResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecDiv$MH() {
        return cfapi_h$constants$96.VarDecDiv$MH();
    }
    public static @C("HRESULT") int VarDecDiv (@C("LPDECIMAL") Addressable pdecLeft, @C("LPDECIMAL") Addressable pdecRight, @C("LPDECIMAL") Addressable pdecResult) {
        try {
            return (int)cfapi_h$constants$96.VarDecDiv$MH().invokeExact(pdecLeft.address(), pdecRight.address(), pdecResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecMul$MH() {
        return cfapi_h$constants$96.VarDecMul$MH();
    }
    public static @C("HRESULT") int VarDecMul (@C("LPDECIMAL") Addressable pdecLeft, @C("LPDECIMAL") Addressable pdecRight, @C("LPDECIMAL") Addressable pdecResult) {
        try {
            return (int)cfapi_h$constants$96.VarDecMul$MH().invokeExact(pdecLeft.address(), pdecRight.address(), pdecResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecSub$MH() {
        return cfapi_h$constants$96.VarDecSub$MH();
    }
    public static @C("HRESULT") int VarDecSub (@C("LPDECIMAL") Addressable pdecLeft, @C("LPDECIMAL") Addressable pdecRight, @C("LPDECIMAL") Addressable pdecResult) {
        try {
            return (int)cfapi_h$constants$96.VarDecSub$MH().invokeExact(pdecLeft.address(), pdecRight.address(), pdecResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecAbs$MH() {
        return cfapi_h$constants$96.VarDecAbs$MH();
    }
    public static @C("HRESULT") int VarDecAbs (@C("LPDECIMAL") Addressable pdecIn, @C("LPDECIMAL") Addressable pdecResult) {
        try {
            return (int)cfapi_h$constants$96.VarDecAbs$MH().invokeExact(pdecIn.address(), pdecResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecFix$MH() {
        return cfapi_h$constants$96.VarDecFix$MH();
    }
    public static @C("HRESULT") int VarDecFix (@C("LPDECIMAL") Addressable pdecIn, @C("LPDECIMAL") Addressable pdecResult) {
        try {
            return (int)cfapi_h$constants$96.VarDecFix$MH().invokeExact(pdecIn.address(), pdecResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecInt$MH() {
        return cfapi_h$constants$96.VarDecInt$MH();
    }
    public static @C("HRESULT") int VarDecInt (@C("LPDECIMAL") Addressable pdecIn, @C("LPDECIMAL") Addressable pdecResult) {
        try {
            return (int)cfapi_h$constants$96.VarDecInt$MH().invokeExact(pdecIn.address(), pdecResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecNeg$MH() {
        return cfapi_h$constants$96.VarDecNeg$MH();
    }
    public static @C("HRESULT") int VarDecNeg (@C("LPDECIMAL") Addressable pdecIn, @C("LPDECIMAL") Addressable pdecResult) {
        try {
            return (int)cfapi_h$constants$96.VarDecNeg$MH().invokeExact(pdecIn.address(), pdecResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecRound$MH() {
        return cfapi_h$constants$96.VarDecRound$MH();
    }
    public static @C("HRESULT") int VarDecRound (@C("LPDECIMAL") Addressable pdecIn, @C("int") int cDecimals, @C("LPDECIMAL") Addressable pdecResult) {
        try {
            return (int)cfapi_h$constants$96.VarDecRound$MH().invokeExact(pdecIn.address(), cDecimals, pdecResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecCmp$MH() {
        return cfapi_h$constants$96.VarDecCmp$MH();
    }
    public static @C("HRESULT") int VarDecCmp (@C("LPDECIMAL") Addressable pdecLeft, @C("LPDECIMAL") Addressable pdecRight) {
        try {
            return (int)cfapi_h$constants$96.VarDecCmp$MH().invokeExact(pdecLeft.address(), pdecRight.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDecCmpR8$MH() {
        return cfapi_h$constants$96.VarDecCmpR8$MH();
    }
    public static @C("HRESULT") int VarDecCmpR8 (@C("LPDECIMAL") Addressable pdecLeft, @C("double") double dblRight) {
        try {
            return (int)cfapi_h$constants$96.VarDecCmpR8$MH().invokeExact(pdecLeft.address(), dblRight);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyAdd$MH() {
        return cfapi_h$constants$96.VarCyAdd$MH();
    }
    public static @C("HRESULT") int VarCyAdd (@C("CY") MemorySegment cyLeft, @C("CY") MemorySegment cyRight, @C("LPCY") Addressable pcyResult) {
        try {
            return (int)cfapi_h$constants$96.VarCyAdd$MH().invokeExact(cyLeft, cyRight, pcyResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyMul$MH() {
        return cfapi_h$constants$96.VarCyMul$MH();
    }
    public static @C("HRESULT") int VarCyMul (@C("CY") MemorySegment cyLeft, @C("CY") MemorySegment cyRight, @C("LPCY") Addressable pcyResult) {
        try {
            return (int)cfapi_h$constants$96.VarCyMul$MH().invokeExact(cyLeft, cyRight, pcyResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyMulI4$MH() {
        return cfapi_h$constants$96.VarCyMulI4$MH();
    }
    public static @C("HRESULT") int VarCyMulI4 (@C("CY") MemorySegment cyLeft, @C("LONG") int lRight, @C("LPCY") Addressable pcyResult) {
        try {
            return (int)cfapi_h$constants$96.VarCyMulI4$MH().invokeExact(cyLeft, lRight, pcyResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyMulI8$MH() {
        return cfapi_h$constants$96.VarCyMulI8$MH();
    }
    public static @C("HRESULT") int VarCyMulI8 (@C("CY") MemorySegment cyLeft, @C("LONG64") long lRight, @C("LPCY") Addressable pcyResult) {
        try {
            return (int)cfapi_h$constants$96.VarCyMulI8$MH().invokeExact(cyLeft, lRight, pcyResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCySub$MH() {
        return cfapi_h$constants$96.VarCySub$MH();
    }
    public static @C("HRESULT") int VarCySub (@C("CY") MemorySegment cyLeft, @C("CY") MemorySegment cyRight, @C("LPCY") Addressable pcyResult) {
        try {
            return (int)cfapi_h$constants$96.VarCySub$MH().invokeExact(cyLeft, cyRight, pcyResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyAbs$MH() {
        return cfapi_h$constants$96.VarCyAbs$MH();
    }
    public static @C("HRESULT") int VarCyAbs (@C("CY") MemorySegment cyIn, @C("LPCY") Addressable pcyResult) {
        try {
            return (int)cfapi_h$constants$96.VarCyAbs$MH().invokeExact(cyIn, pcyResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyFix$MH() {
        return cfapi_h$constants$96.VarCyFix$MH();
    }
    public static @C("HRESULT") int VarCyFix (@C("CY") MemorySegment cyIn, @C("LPCY") Addressable pcyResult) {
        try {
            return (int)cfapi_h$constants$96.VarCyFix$MH().invokeExact(cyIn, pcyResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyInt$MH() {
        return cfapi_h$constants$96.VarCyInt$MH();
    }
    public static @C("HRESULT") int VarCyInt (@C("CY") MemorySegment cyIn, @C("LPCY") Addressable pcyResult) {
        try {
            return (int)cfapi_h$constants$96.VarCyInt$MH().invokeExact(cyIn, pcyResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyNeg$MH() {
        return cfapi_h$constants$96.VarCyNeg$MH();
    }
    public static @C("HRESULT") int VarCyNeg (@C("CY") MemorySegment cyIn, @C("LPCY") Addressable pcyResult) {
        try {
            return (int)cfapi_h$constants$96.VarCyNeg$MH().invokeExact(cyIn, pcyResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyRound$MH() {
        return cfapi_h$constants$96.VarCyRound$MH();
    }
    public static @C("HRESULT") int VarCyRound (@C("CY") MemorySegment cyIn, @C("int") int cDecimals, @C("LPCY") Addressable pcyResult) {
        try {
            return (int)cfapi_h$constants$96.VarCyRound$MH().invokeExact(cyIn, cDecimals, pcyResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyCmp$MH() {
        return cfapi_h$constants$96.VarCyCmp$MH();
    }
    public static @C("HRESULT") int VarCyCmp (@C("CY") MemorySegment cyLeft, @C("CY") MemorySegment cyRight) {
        try {
            return (int)cfapi_h$constants$96.VarCyCmp$MH().invokeExact(cyLeft, cyRight);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarCyCmpR8$MH() {
        return cfapi_h$constants$96.VarCyCmpR8$MH();
    }
    public static @C("HRESULT") int VarCyCmpR8 (@C("CY") MemorySegment cyLeft, @C("double") double dblRight) {
        try {
            return (int)cfapi_h$constants$96.VarCyCmpR8$MH().invokeExact(cyLeft, dblRight);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBstrCat$MH() {
        return cfapi_h$constants$96.VarBstrCat$MH();
    }
    public static @C("HRESULT") int VarBstrCat (@C("BSTR") Addressable bstrLeft, @C("BSTR") Addressable bstrRight, @C("LPBSTR") Addressable pbstrResult) {
        try {
            return (int)cfapi_h$constants$96.VarBstrCat$MH().invokeExact(bstrLeft.address(), bstrRight.address(), pbstrResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarBstrCmp$MH() {
        return cfapi_h$constants$96.VarBstrCmp$MH();
    }
    public static @C("HRESULT") int VarBstrCmp (@C("BSTR") Addressable bstrLeft, @C("BSTR") Addressable bstrRight, @C("LCID") int lcid, @C("ULONG") int dwFlags) {
        try {
            return (int)cfapi_h$constants$96.VarBstrCmp$MH().invokeExact(bstrLeft.address(), bstrRight.address(), lcid, dwFlags);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR8Pow$MH() {
        return cfapi_h$constants$96.VarR8Pow$MH();
    }
    public static @C("HRESULT") int VarR8Pow (@C("double") double dblLeft, @C("double") double dblRight, @C("double*") Addressable pdblResult) {
        try {
            return (int)cfapi_h$constants$96.VarR8Pow$MH().invokeExact(dblLeft, dblRight, pdblResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR4CmpR8$MH() {
        return cfapi_h$constants$96.VarR4CmpR8$MH();
    }
    public static @C("HRESULT") int VarR4CmpR8 (@C("float") float fltLeft, @C("double") double dblRight) {
        try {
            return (int)cfapi_h$constants$96.VarR4CmpR8$MH().invokeExact(fltLeft, dblRight);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarR8Round$MH() {
        return cfapi_h$constants$96.VarR8Round$MH();
    }
    public static @C("HRESULT") int VarR8Round (@C("double") double dblIn, @C("int") int cDecimals, @C("double*") Addressable pdblResult) {
        try {
            return (int)cfapi_h$constants$96.VarR8Round$MH().invokeExact(dblIn, cDecimals, pdblResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDateFromUdate$MH() {
        return cfapi_h$constants$96.VarDateFromUdate$MH();
    }
    public static @C("HRESULT") int VarDateFromUdate (@C("UDATE*") Addressable pudateIn, @C("ULONG") int dwFlags, @C("DATE*") Addressable pdateOut) {
        try {
            return (int)cfapi_h$constants$96.VarDateFromUdate$MH().invokeExact(pudateIn.address(), dwFlags, pdateOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarDateFromUdateEx$MH() {
        return cfapi_h$constants$96.VarDateFromUdateEx$MH();
    }
    public static @C("HRESULT") int VarDateFromUdateEx (@C("UDATE*") Addressable pudateIn, @C("LCID") int lcid, @C("ULONG") int dwFlags, @C("DATE*") Addressable pdateOut) {
        try {
            return (int)cfapi_h$constants$96.VarDateFromUdateEx$MH().invokeExact(pudateIn.address(), lcid, dwFlags, pdateOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarUdateFromDate$MH() {
        return cfapi_h$constants$96.VarUdateFromDate$MH();
    }
    public static @C("HRESULT") int VarUdateFromDate (@C("DATE") double dateIn, @C("ULONG") int dwFlags, @C("UDATE*") Addressable pudateOut) {
        try {
            return (int)cfapi_h$constants$96.VarUdateFromDate$MH().invokeExact(dateIn, dwFlags, pudateOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetAltMonthNames$MH() {
        return cfapi_h$constants$96.GetAltMonthNames$MH();
    }
    public static @C("HRESULT") int GetAltMonthNames (@C("LCID") int lcid, @C("LPOLESTR**") Addressable prgp) {
        try {
            return (int)cfapi_h$constants$96.GetAltMonthNames$MH().invokeExact(lcid, prgp.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarFormat$MH() {
        return cfapi_h$constants$96.VarFormat$MH();
    }
    public static @C("HRESULT") int VarFormat (@C("LPVARIANT") Addressable pvarIn, @C("LPOLESTR") Addressable pstrFormat, @C("int") int iFirstDay, @C("int") int iFirstWeek, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$96.VarFormat$MH().invokeExact(pvarIn.address(), pstrFormat.address(), iFirstDay, iFirstWeek, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarFormatDateTime$MH() {
        return cfapi_h$constants$96.VarFormatDateTime$MH();
    }
    public static @C("HRESULT") int VarFormatDateTime (@C("LPVARIANT") Addressable pvarIn, @C("int") int iNamedFormat, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$96.VarFormatDateTime$MH().invokeExact(pvarIn.address(), iNamedFormat, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarFormatNumber$MH() {
        return cfapi_h$constants$96.VarFormatNumber$MH();
    }
    public static @C("HRESULT") int VarFormatNumber (@C("LPVARIANT") Addressable pvarIn, @C("int") int iNumDig, @C("int") int iIncLead, @C("int") int iUseParens, @C("int") int iGroup, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$96.VarFormatNumber$MH().invokeExact(pvarIn.address(), iNumDig, iIncLead, iUseParens, iGroup, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarFormatPercent$MH() {
        return cfapi_h$constants$96.VarFormatPercent$MH();
    }
    public static @C("HRESULT") int VarFormatPercent (@C("LPVARIANT") Addressable pvarIn, @C("int") int iNumDig, @C("int") int iIncLead, @C("int") int iUseParens, @C("int") int iGroup, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$96.VarFormatPercent$MH().invokeExact(pvarIn.address(), iNumDig, iIncLead, iUseParens, iGroup, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarFormatCurrency$MH() {
        return cfapi_h$constants$96.VarFormatCurrency$MH();
    }
    public static @C("HRESULT") int VarFormatCurrency (@C("LPVARIANT") Addressable pvarIn, @C("int") int iNumDig, @C("int") int iIncLead, @C("int") int iUseParens, @C("int") int iGroup, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$96.VarFormatCurrency$MH().invokeExact(pvarIn.address(), iNumDig, iIncLead, iUseParens, iGroup, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarWeekdayName$MH() {
        return cfapi_h$constants$96.VarWeekdayName$MH();
    }
    public static @C("HRESULT") int VarWeekdayName (@C("int") int iWeekday, @C("int") int fAbbrev, @C("int") int iFirstDay, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$96.VarWeekdayName$MH().invokeExact(iWeekday, fAbbrev, iFirstDay, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarMonthName$MH() {
        return cfapi_h$constants$96.VarMonthName$MH();
    }
    public static @C("HRESULT") int VarMonthName (@C("int") int iMonth, @C("int") int fAbbrev, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut) {
        try {
            return (int)cfapi_h$constants$96.VarMonthName$MH().invokeExact(iMonth, fAbbrev, dwFlags, pbstrOut.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarFormatFromTokens$MH() {
        return cfapi_h$constants$96.VarFormatFromTokens$MH();
    }
    public static @C("HRESULT") int VarFormatFromTokens (@C("LPVARIANT") Addressable pvarIn, @C("LPOLESTR") Addressable pstrFormat, @C("LPBYTE") Addressable pbTokCur, @C("ULONG") int dwFlags, @C("BSTR*") Addressable pbstrOut, @C("LCID") int lcid) {
        try {
            return (int)cfapi_h$constants$96.VarFormatFromTokens$MH().invokeExact(pvarIn.address(), pstrFormat.address(), pbTokCur.address(), dwFlags, pbstrOut.address(), lcid);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle VarTokenizeFormatString$MH() {
        return cfapi_h$constants$96.VarTokenizeFormatString$MH();
    }
    public static @C("HRESULT") int VarTokenizeFormatString (@C("LPOLESTR") Addressable pstrFormat, @C("LPBYTE") Addressable rgbTok, @C("int") int cbTok, @C("int") int iFirstDay, @C("int") int iFirstWeek, @C("LCID") int lcid, @C("int*") Addressable pcbActual) {
        try {
            return (int)cfapi_h$constants$96.VarTokenizeFormatString$MH().invokeExact(pstrFormat.address(), rgbTok.address(), cbTok, iFirstDay, iFirstWeek, lcid, pcbActual.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("long") ValueLayout DISPID = C_LONG;
    public static @C("long") ValueLayout MEMBERID = C_LONG;
    public static  MethodHandle LHashValOfNameSysA$MH() {
        return cfapi_h$constants$96.LHashValOfNameSysA$MH();
    }
    public static @C("ULONG") int LHashValOfNameSysA (@C("SYSKIND") int syskind, @C("LCID") int lcid, @C("LPCSTR") Addressable szName) {
        try {
            return (int)cfapi_h$constants$96.LHashValOfNameSysA$MH().invokeExact(syskind, lcid, szName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle LHashValOfNameSys$MH() {
        return cfapi_h$constants$96.LHashValOfNameSys$MH();
    }
    public static @C("ULONG") int LHashValOfNameSys (@C("SYSKIND") int syskind, @C("LCID") int lcid, @C("const OLECHAR*") Addressable szName) {
        try {
            return (int)cfapi_h$constants$96.LHashValOfNameSys$MH().invokeExact(syskind, lcid, szName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle LoadTypeLib$MH() {
        return cfapi_h$constants$96.LoadTypeLib$MH();
    }
    public static @C("HRESULT") int LoadTypeLib (@C("LPCOLESTR") Addressable szFile, @C("ITypeLib**") Addressable pptlib) {
        try {
            return (int)cfapi_h$constants$96.LoadTypeLib$MH().invokeExact(szFile.address(), pptlib.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int REGKIND_DEFAULT() {
        return cfapi_h$constants$96.REGKIND_DEFAULT();
    }
    public static @C("int") int REGKIND_REGISTER() {
        return cfapi_h$constants$96.REGKIND_REGISTER();
    }
    public static @C("int") int REGKIND_NONE() {
        return cfapi_h$constants$96.REGKIND_NONE();
    }
    public static  MethodHandle LoadTypeLibEx$MH() {
        return cfapi_h$constants$96.LoadTypeLibEx$MH();
    }
    public static @C("HRESULT") int LoadTypeLibEx (@C("LPCOLESTR") Addressable szFile, @C("REGKIND") int regkind, @C("ITypeLib**") Addressable pptlib) {
        try {
            return (int)cfapi_h$constants$96.LoadTypeLibEx$MH().invokeExact(szFile.address(), regkind, pptlib.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle LoadRegTypeLib$MH() {
        return cfapi_h$constants$96.LoadRegTypeLib$MH();
    }
    public static @C("HRESULT") int LoadRegTypeLib (@C("const GUID*") Addressable rguid, @C("WORD") short wVerMajor, @C("WORD") short wVerMinor, @C("LCID") int lcid, @C("ITypeLib**") Addressable pptlib) {
        try {
            return (int)cfapi_h$constants$96.LoadRegTypeLib$MH().invokeExact(rguid.address(), wVerMajor, wVerMinor, lcid, pptlib.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle QueryPathOfRegTypeLib$MH() {
        return cfapi_h$constants$96.QueryPathOfRegTypeLib$MH();
    }
    public static @C("HRESULT") int QueryPathOfRegTypeLib (@C("const GUID*") Addressable guid, @C("USHORT") short wMaj, @C("USHORT") short wMin, @C("LCID") int lcid, @C("LPBSTR") Addressable lpbstrPathName) {
        try {
            return (int)cfapi_h$constants$96.QueryPathOfRegTypeLib$MH().invokeExact(guid.address(), wMaj, wMin, lcid, lpbstrPathName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RegisterTypeLib$MH() {
        return cfapi_h$constants$96.RegisterTypeLib$MH();
    }
    public static @C("HRESULT") int RegisterTypeLib (@C("ITypeLib*") Addressable ptlib, @C("LPCOLESTR") Addressable szFullPath, @C("LPCOLESTR") Addressable szHelpDir) {
        try {
            return (int)cfapi_h$constants$96.RegisterTypeLib$MH().invokeExact(ptlib.address(), szFullPath.address(), szHelpDir.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle UnRegisterTypeLib$MH() {
        return cfapi_h$constants$96.UnRegisterTypeLib$MH();
    }
    public static @C("HRESULT") int UnRegisterTypeLib (@C("const GUID*") Addressable libID, @C("WORD") short wVerMajor, @C("WORD") short wVerMinor, @C("LCID") int lcid, @C("SYSKIND") int syskind) {
        try {
            return (int)cfapi_h$constants$96.UnRegisterTypeLib$MH().invokeExact(libID.address(), wVerMajor, wVerMinor, lcid, syskind);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RegisterTypeLibForUser$MH() {
        return cfapi_h$constants$96.RegisterTypeLibForUser$MH();
    }
    public static @C("HRESULT") int RegisterTypeLibForUser (@C("ITypeLib*") Addressable ptlib, @C("OLECHAR*") Addressable szFullPath, @C("OLECHAR*") Addressable szHelpDir) {
        try {
            return (int)cfapi_h$constants$96.RegisterTypeLibForUser$MH().invokeExact(ptlib.address(), szFullPath.address(), szHelpDir.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle UnRegisterTypeLibForUser$MH() {
        return cfapi_h$constants$96.UnRegisterTypeLibForUser$MH();
    }
    public static @C("HRESULT") int UnRegisterTypeLibForUser (@C("const GUID*") Addressable libID, @C("WORD") short wMajorVerNum, @C("WORD") short wMinorVerNum, @C("LCID") int lcid, @C("SYSKIND") int syskind) {
        try {
            return (int)cfapi_h$constants$96.UnRegisterTypeLibForUser$MH().invokeExact(libID.address(), wMajorVerNum, wMinorVerNum, lcid, syskind);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle CreateTypeLib$MH() {
        return cfapi_h$constants$96.CreateTypeLib$MH();
    }
    public static @C("HRESULT") int CreateTypeLib (@C("SYSKIND") int syskind, @C("LPCOLESTR") Addressable szFile, @C("ICreateTypeLib**") Addressable ppctlib) {
        try {
            return (int)cfapi_h$constants$96.CreateTypeLib$MH().invokeExact(syskind, szFile.address(), ppctlib.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle CreateTypeLib2$MH() {
        return cfapi_h$constants$96.CreateTypeLib2$MH();
    }
    public static @C("HRESULT") int CreateTypeLib2 (@C("SYSKIND") int syskind, @C("LPCOLESTR") Addressable szFile, @C("ICreateTypeLib2**") Addressable ppctlib) {
        try {
            return (int)cfapi_h$constants$96.CreateTypeLib2$MH().invokeExact(syskind, szFile.address(), ppctlib.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DispGetParam$MH() {
        return cfapi_h$constants$96.DispGetParam$MH();
    }
    public static @C("HRESULT") int DispGetParam (@C("DISPPARAMS*") Addressable pdispparams, @C("UINT") int position, @C("VARTYPE") short vtTarg, @C("VARIANT*") Addressable pvarResult, @C("UINT*") Addressable puArgErr) {
        try {
            return (int)cfapi_h$constants$96.DispGetParam$MH().invokeExact(pdispparams.address(), position, vtTarg, pvarResult.address(), puArgErr.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DispGetIDsOfNames$MH() {
        return cfapi_h$constants$96.DispGetIDsOfNames$MH();
    }
    public static @C("HRESULT") int DispGetIDsOfNames (@C("ITypeInfo*") Addressable ptinfo, @C("LPOLESTR*") Addressable rgszNames, @C("UINT") int cNames, @C("DISPID*") Addressable rgdispid) {
        try {
            return (int)cfapi_h$constants$96.DispGetIDsOfNames$MH().invokeExact(ptinfo.address(), rgszNames.address(), cNames, rgdispid.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DispInvoke$MH() {
        return cfapi_h$constants$96.DispInvoke$MH();
    }
    public static @C("HRESULT") int DispInvoke (@C("void*") Addressable _this, @C("ITypeInfo*") Addressable ptinfo, @C("DISPID") int dispidMember, @C("WORD") short wFlags, @C("DISPPARAMS*") Addressable pparams, @C("VARIANT*") Addressable pvarResult, @C("EXCEPINFO*") Addressable pexcepinfo, @C("UINT*") Addressable puArgErr) {
        try {
            return (int)cfapi_h$constants$96.DispInvoke$MH().invokeExact(_this.address(), ptinfo.address(), dispidMember, wFlags, pparams.address(), pvarResult.address(), pexcepinfo.address(), puArgErr.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle CreateDispTypeInfo$MH() {
        return cfapi_h$constants$96.CreateDispTypeInfo$MH();
    }
    public static @C("HRESULT") int CreateDispTypeInfo (@C("INTERFACEDATA*") Addressable pidata, @C("LCID") int lcid, @C("ITypeInfo**") Addressable pptinfo) {
        try {
            return (int)cfapi_h$constants$96.CreateDispTypeInfo$MH().invokeExact(pidata.address(), lcid, pptinfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle CreateStdDispatch$MH() {
        return cfapi_h$constants$96.CreateStdDispatch$MH();
    }
    public static @C("HRESULT") int CreateStdDispatch (@C("IUnknown*") Addressable punkOuter, @C("void*") Addressable pvThis, @C("ITypeInfo*") Addressable ptinfo, @C("IUnknown**") Addressable ppunkStdDisp) {
        try {
            return (int)cfapi_h$constants$96.CreateStdDispatch$MH().invokeExact(punkOuter.address(), pvThis.address(), ptinfo.address(), ppunkStdDisp.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DispCallFunc$MH() {
        return cfapi_h$constants$96.DispCallFunc$MH();
    }
    public static @C("HRESULT") int DispCallFunc (@C("void*") Addressable pvInstance, @C("ULONG_PTR") long oVft, @C("CALLCONV") int cc, @C("VARTYPE") short vtReturn, @C("UINT") int cActuals, @C("VARTYPE*") Addressable prgvt, @C("VARIANTARG**") Addressable prgpvarg, @C("VARIANT*") Addressable pvargResult) {
        try {
            return (int)cfapi_h$constants$96.DispCallFunc$MH().invokeExact(pvInstance.address(), oVft, cc, vtReturn, cActuals, prgvt.address(), prgpvarg.address(), pvargResult.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RegisterActiveObject$MH() {
        return cfapi_h$constants$96.RegisterActiveObject$MH();
    }
    public static @C("HRESULT") int RegisterActiveObject (@C("IUnknown*") Addressable punk, @C("const IID*") Addressable rclsid, @C("DWORD") int dwFlags, @C("DWORD*") Addressable pdwRegister) {
        try {
            return (int)cfapi_h$constants$96.RegisterActiveObject$MH().invokeExact(punk.address(), rclsid.address(), dwFlags, pdwRegister.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RevokeActiveObject$MH() {
        return cfapi_h$constants$96.RevokeActiveObject$MH();
    }
    public static @C("HRESULT") int RevokeActiveObject (@C("DWORD") int dwRegister, @C("void*") Addressable pvReserved) {
        try {
            return (int)cfapi_h$constants$96.RevokeActiveObject$MH().invokeExact(dwRegister, pvReserved.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetActiveObject$MH() {
        return cfapi_h$constants$96.GetActiveObject$MH();
    }
    public static @C("HRESULT") int GetActiveObject (@C("const IID*") Addressable rclsid, @C("void*") Addressable pvReserved, @C("IUnknown**") Addressable ppunk) {
        try {
            return (int)cfapi_h$constants$96.GetActiveObject$MH().invokeExact(rclsid.address(), pvReserved.address(), ppunk.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SetErrorInfo$MH() {
        return cfapi_h$constants$96.SetErrorInfo$MH();
    }
    public static @C("HRESULT") int SetErrorInfo (@C("ULONG") int dwReserved, @C("IErrorInfo*") Addressable perrinfo) {
        try {
            return (int)cfapi_h$constants$96.SetErrorInfo$MH().invokeExact(dwReserved, perrinfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetErrorInfo$MH() {
        return cfapi_h$constants$96.GetErrorInfo$MH();
    }
    public static @C("HRESULT") int GetErrorInfo (@C("ULONG") int dwReserved, @C("IErrorInfo**") Addressable pperrinfo) {
        try {
            return (int)cfapi_h$constants$96.GetErrorInfo$MH().invokeExact(dwReserved, pperrinfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle CreateErrorInfo$MH() {
        return cfapi_h$constants$96.CreateErrorInfo$MH();
    }
    public static @C("HRESULT") int CreateErrorInfo (@C("ICreateErrorInfo**") Addressable pperrinfo) {
        try {
            return (int)cfapi_h$constants$96.CreateErrorInfo$MH().invokeExact(pperrinfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetRecordInfoFromTypeInfo$MH() {
        return cfapi_h$constants$96.GetRecordInfoFromTypeInfo$MH();
    }
    public static @C("HRESULT") int GetRecordInfoFromTypeInfo (@C("ITypeInfo*") Addressable pTypeInfo, @C("IRecordInfo**") Addressable ppRecInfo) {
        try {
            return (int)cfapi_h$constants$96.GetRecordInfoFromTypeInfo$MH().invokeExact(pTypeInfo.address(), ppRecInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetRecordInfoFromGuids$MH() {
        return cfapi_h$constants$96.GetRecordInfoFromGuids$MH();
    }
    public static @C("HRESULT") int GetRecordInfoFromGuids (@C("const GUID*") Addressable rGuidTypeLib, @C("ULONG") int uVerMajor, @C("ULONG") int uVerMinor, @C("LCID") int lcid, @C("const GUID*") Addressable rGuidTypeInfo, @C("IRecordInfo**") Addressable ppRecInfo) {
        try {
            return (int)cfapi_h$constants$96.GetRecordInfoFromGuids$MH().invokeExact(rGuidTypeLib.address(), uVerMajor, uVerMinor, lcid, rGuidTypeInfo.address(), ppRecInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OaBuildVersion$MH() {
        return cfapi_h$constants$96.OaBuildVersion$MH();
    }
    public static @C("ULONG") int OaBuildVersion () {
        try {
            return (int)cfapi_h$constants$96.OaBuildVersion$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ClearCustData$MH() {
        return cfapi_h$constants$96.ClearCustData$MH();
    }
    public static void ClearCustData (@C("LPCUSTDATA") Addressable pCustData) {
        try {
            cfapi_h$constants$96.ClearCustData$MH().invokeExact(pCustData.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OaEnablePerUserTLibRegistration$MH() {
        return cfapi_h$constants$96.OaEnablePerUserTLibRegistration$MH();
    }
    public static void OaEnablePerUserTLibRegistration () {
        try {
            cfapi_h$constants$96.OaEnablePerUserTLibRegistration$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleBuildVersion$MH() {
        return cfapi_h$constants$96.OleBuildVersion$MH();
    }
    public static @C("DWORD") int OleBuildVersion () {
        try {
            return (int)cfapi_h$constants$96.OleBuildVersion$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle WriteFmtUserTypeStg$MH() {
        return cfapi_h$constants$96.WriteFmtUserTypeStg$MH();
    }
    public static @C("HRESULT") int WriteFmtUserTypeStg (@C("LPSTORAGE") Addressable pstg, @C("CLIPFORMAT") short cf, @C("LPOLESTR") Addressable lpszUserType) {
        try {
            return (int)cfapi_h$constants$96.WriteFmtUserTypeStg$MH().invokeExact(pstg.address(), cf, lpszUserType.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ReadFmtUserTypeStg$MH() {
        return cfapi_h$constants$96.ReadFmtUserTypeStg$MH();
    }
    public static @C("HRESULT") int ReadFmtUserTypeStg (@C("LPSTORAGE") Addressable pstg, @C("CLIPFORMAT*") Addressable pcf, @C("LPOLESTR*") Addressable lplpszUserType) {
        try {
            return (int)cfapi_h$constants$96.ReadFmtUserTypeStg$MH().invokeExact(pstg.address(), pcf.address(), lplpszUserType.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleInitialize$MH() {
        return cfapi_h$constants$96.OleInitialize$MH();
    }
    public static @C("HRESULT") int OleInitialize (@C("LPVOID") Addressable pvReserved) {
        try {
            return (int)cfapi_h$constants$96.OleInitialize$MH().invokeExact(pvReserved.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleUninitialize$MH() {
        return cfapi_h$constants$96.OleUninitialize$MH();
    }
    public static void OleUninitialize () {
        try {
            cfapi_h$constants$96.OleUninitialize$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleQueryLinkFromData$MH() {
        return cfapi_h$constants$96.OleQueryLinkFromData$MH();
    }
    public static @C("HRESULT") int OleQueryLinkFromData (@C("LPDATAOBJECT") Addressable pSrcDataObject) {
        try {
            return (int)cfapi_h$constants$96.OleQueryLinkFromData$MH().invokeExact(pSrcDataObject.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleQueryCreateFromData$MH() {
        return cfapi_h$constants$96.OleQueryCreateFromData$MH();
    }
    public static @C("HRESULT") int OleQueryCreateFromData (@C("LPDATAOBJECT") Addressable pSrcDataObject) {
        try {
            return (int)cfapi_h$constants$96.OleQueryCreateFromData$MH().invokeExact(pSrcDataObject.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleCreate$MH() {
        return cfapi_h$constants$96.OleCreate$MH();
    }
    public static @C("HRESULT") int OleCreate (@C("const IID*") Addressable rclsid, @C("const IID*") Addressable riid, @C("DWORD") int renderopt, @C("LPFORMATETC") Addressable pFormatEtc, @C("LPOLECLIENTSITE") Addressable pClientSite, @C("LPSTORAGE") Addressable pStg, @C("LPVOID*") Addressable ppvObj) {
        try {
            return (int)cfapi_h$constants$96.OleCreate$MH().invokeExact(rclsid.address(), riid.address(), renderopt, pFormatEtc.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleCreateEx$MH() {
        return cfapi_h$constants$96.OleCreateEx$MH();
    }
    public static @C("HRESULT") int OleCreateEx (@C("const IID*") Addressable rclsid, @C("const IID*") Addressable riid, @C("DWORD") int dwFlags, @C("DWORD") int renderopt, @C("ULONG") int cFormats, @C("DWORD*") Addressable rgAdvf, @C("LPFORMATETC") Addressable rgFormatEtc, @C("IAdviseSink*") Addressable lpAdviseSink, @C("DWORD*") Addressable rgdwConnection, @C("LPOLECLIENTSITE") Addressable pClientSite, @C("LPSTORAGE") Addressable pStg, @C("LPVOID*") Addressable ppvObj) {
        try {
            return (int)cfapi_h$constants$96.OleCreateEx$MH().invokeExact(rclsid.address(), riid.address(), dwFlags, renderopt, cFormats, rgAdvf.address(), rgFormatEtc.address(), lpAdviseSink.address(), rgdwConnection.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleCreateFromData$MH() {
        return cfapi_h$constants$96.OleCreateFromData$MH();
    }
    public static @C("HRESULT") int OleCreateFromData (@C("LPDATAOBJECT") Addressable pSrcDataObj, @C("const IID*") Addressable riid, @C("DWORD") int renderopt, @C("LPFORMATETC") Addressable pFormatEtc, @C("LPOLECLIENTSITE") Addressable pClientSite, @C("LPSTORAGE") Addressable pStg, @C("LPVOID*") Addressable ppvObj) {
        try {
            return (int)cfapi_h$constants$96.OleCreateFromData$MH().invokeExact(pSrcDataObj.address(), riid.address(), renderopt, pFormatEtc.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleCreateFromDataEx$MH() {
        return cfapi_h$constants$96.OleCreateFromDataEx$MH();
    }
    public static @C("HRESULT") int OleCreateFromDataEx (@C("LPDATAOBJECT") Addressable pSrcDataObj, @C("const IID*") Addressable riid, @C("DWORD") int dwFlags, @C("DWORD") int renderopt, @C("ULONG") int cFormats, @C("DWORD*") Addressable rgAdvf, @C("LPFORMATETC") Addressable rgFormatEtc, @C("IAdviseSink*") Addressable lpAdviseSink, @C("DWORD*") Addressable rgdwConnection, @C("LPOLECLIENTSITE") Addressable pClientSite, @C("LPSTORAGE") Addressable pStg, @C("LPVOID*") Addressable ppvObj) {
        try {
            return (int)cfapi_h$constants$96.OleCreateFromDataEx$MH().invokeExact(pSrcDataObj.address(), riid.address(), dwFlags, renderopt, cFormats, rgAdvf.address(), rgFormatEtc.address(), lpAdviseSink.address(), rgdwConnection.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleCreateLinkFromData$MH() {
        return cfapi_h$constants$96.OleCreateLinkFromData$MH();
    }
    public static @C("HRESULT") int OleCreateLinkFromData (@C("LPDATAOBJECT") Addressable pSrcDataObj, @C("const IID*") Addressable riid, @C("DWORD") int renderopt, @C("LPFORMATETC") Addressable pFormatEtc, @C("LPOLECLIENTSITE") Addressable pClientSite, @C("LPSTORAGE") Addressable pStg, @C("LPVOID*") Addressable ppvObj) {
        try {
            return (int)cfapi_h$constants$96.OleCreateLinkFromData$MH().invokeExact(pSrcDataObj.address(), riid.address(), renderopt, pFormatEtc.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleCreateLinkFromDataEx$MH() {
        return cfapi_h$constants$96.OleCreateLinkFromDataEx$MH();
    }
    public static @C("HRESULT") int OleCreateLinkFromDataEx (@C("LPDATAOBJECT") Addressable pSrcDataObj, @C("const IID*") Addressable riid, @C("DWORD") int dwFlags, @C("DWORD") int renderopt, @C("ULONG") int cFormats, @C("DWORD*") Addressable rgAdvf, @C("LPFORMATETC") Addressable rgFormatEtc, @C("IAdviseSink*") Addressable lpAdviseSink, @C("DWORD*") Addressable rgdwConnection, @C("LPOLECLIENTSITE") Addressable pClientSite, @C("LPSTORAGE") Addressable pStg, @C("LPVOID*") Addressable ppvObj) {
        try {
            return (int)cfapi_h$constants$96.OleCreateLinkFromDataEx$MH().invokeExact(pSrcDataObj.address(), riid.address(), dwFlags, renderopt, cFormats, rgAdvf.address(), rgFormatEtc.address(), lpAdviseSink.address(), rgdwConnection.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleCreateStaticFromData$MH() {
        return cfapi_h$constants$96.OleCreateStaticFromData$MH();
    }
    public static @C("HRESULT") int OleCreateStaticFromData (@C("LPDATAOBJECT") Addressable pSrcDataObj, @C("const IID*") Addressable iid, @C("DWORD") int renderopt, @C("LPFORMATETC") Addressable pFormatEtc, @C("LPOLECLIENTSITE") Addressable pClientSite, @C("LPSTORAGE") Addressable pStg, @C("LPVOID*") Addressable ppvObj) {
        try {
            return (int)cfapi_h$constants$96.OleCreateStaticFromData$MH().invokeExact(pSrcDataObj.address(), iid.address(), renderopt, pFormatEtc.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleCreateLink$MH() {
        return cfapi_h$constants$96.OleCreateLink$MH();
    }
    public static @C("HRESULT") int OleCreateLink (@C("LPMONIKER") Addressable pmkLinkSrc, @C("const IID*") Addressable riid, @C("DWORD") int renderopt, @C("LPFORMATETC") Addressable lpFormatEtc, @C("LPOLECLIENTSITE") Addressable pClientSite, @C("LPSTORAGE") Addressable pStg, @C("LPVOID*") Addressable ppvObj) {
        try {
            return (int)cfapi_h$constants$96.OleCreateLink$MH().invokeExact(pmkLinkSrc.address(), riid.address(), renderopt, lpFormatEtc.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleCreateLinkEx$MH() {
        return cfapi_h$constants$96.OleCreateLinkEx$MH();
    }
    public static @C("HRESULT") int OleCreateLinkEx (@C("LPMONIKER") Addressable pmkLinkSrc, @C("const IID*") Addressable riid, @C("DWORD") int dwFlags, @C("DWORD") int renderopt, @C("ULONG") int cFormats, @C("DWORD*") Addressable rgAdvf, @C("LPFORMATETC") Addressable rgFormatEtc, @C("IAdviseSink*") Addressable lpAdviseSink, @C("DWORD*") Addressable rgdwConnection, @C("LPOLECLIENTSITE") Addressable pClientSite, @C("LPSTORAGE") Addressable pStg, @C("LPVOID*") Addressable ppvObj) {
        try {
            return (int)cfapi_h$constants$96.OleCreateLinkEx$MH().invokeExact(pmkLinkSrc.address(), riid.address(), dwFlags, renderopt, cFormats, rgAdvf.address(), rgFormatEtc.address(), lpAdviseSink.address(), rgdwConnection.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleCreateLinkToFile$MH() {
        return cfapi_h$constants$96.OleCreateLinkToFile$MH();
    }
    public static @C("HRESULT") int OleCreateLinkToFile (@C("LPCOLESTR") Addressable lpszFileName, @C("const IID*") Addressable riid, @C("DWORD") int renderopt, @C("LPFORMATETC") Addressable lpFormatEtc, @C("LPOLECLIENTSITE") Addressable pClientSite, @C("LPSTORAGE") Addressable pStg, @C("LPVOID*") Addressable ppvObj) {
        try {
            return (int)cfapi_h$constants$96.OleCreateLinkToFile$MH().invokeExact(lpszFileName.address(), riid.address(), renderopt, lpFormatEtc.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleCreateLinkToFileEx$MH() {
        return cfapi_h$constants$96.OleCreateLinkToFileEx$MH();
    }
    public static @C("HRESULT") int OleCreateLinkToFileEx (@C("LPCOLESTR") Addressable lpszFileName, @C("const IID*") Addressable riid, @C("DWORD") int dwFlags, @C("DWORD") int renderopt, @C("ULONG") int cFormats, @C("DWORD*") Addressable rgAdvf, @C("LPFORMATETC") Addressable rgFormatEtc, @C("IAdviseSink*") Addressable lpAdviseSink, @C("DWORD*") Addressable rgdwConnection, @C("LPOLECLIENTSITE") Addressable pClientSite, @C("LPSTORAGE") Addressable pStg, @C("LPVOID*") Addressable ppvObj) {
        try {
            return (int)cfapi_h$constants$96.OleCreateLinkToFileEx$MH().invokeExact(lpszFileName.address(), riid.address(), dwFlags, renderopt, cFormats, rgAdvf.address(), rgFormatEtc.address(), lpAdviseSink.address(), rgdwConnection.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleCreateFromFile$MH() {
        return cfapi_h$constants$96.OleCreateFromFile$MH();
    }
    public static @C("HRESULT") int OleCreateFromFile (@C("const IID*") Addressable rclsid, @C("LPCOLESTR") Addressable lpszFileName, @C("const IID*") Addressable riid, @C("DWORD") int renderopt, @C("LPFORMATETC") Addressable lpFormatEtc, @C("LPOLECLIENTSITE") Addressable pClientSite, @C("LPSTORAGE") Addressable pStg, @C("LPVOID*") Addressable ppvObj) {
        try {
            return (int)cfapi_h$constants$96.OleCreateFromFile$MH().invokeExact(rclsid.address(), lpszFileName.address(), riid.address(), renderopt, lpFormatEtc.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleCreateFromFileEx$MH() {
        return cfapi_h$constants$96.OleCreateFromFileEx$MH();
    }
    public static @C("HRESULT") int OleCreateFromFileEx (@C("const IID*") Addressable rclsid, @C("LPCOLESTR") Addressable lpszFileName, @C("const IID*") Addressable riid, @C("DWORD") int dwFlags, @C("DWORD") int renderopt, @C("ULONG") int cFormats, @C("DWORD*") Addressable rgAdvf, @C("LPFORMATETC") Addressable rgFormatEtc, @C("IAdviseSink*") Addressable lpAdviseSink, @C("DWORD*") Addressable rgdwConnection, @C("LPOLECLIENTSITE") Addressable pClientSite, @C("LPSTORAGE") Addressable pStg, @C("LPVOID*") Addressable ppvObj) {
        try {
            return (int)cfapi_h$constants$96.OleCreateFromFileEx$MH().invokeExact(rclsid.address(), lpszFileName.address(), riid.address(), dwFlags, renderopt, cFormats, rgAdvf.address(), rgFormatEtc.address(), lpAdviseSink.address(), rgdwConnection.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleLoad$MH() {
        return cfapi_h$constants$96.OleLoad$MH();
    }
    public static @C("HRESULT") int OleLoad (@C("LPSTORAGE") Addressable pStg, @C("const IID*") Addressable riid, @C("LPOLECLIENTSITE") Addressable pClientSite, @C("LPVOID*") Addressable ppvObj) {
        try {
            return (int)cfapi_h$constants$96.OleLoad$MH().invokeExact(pStg.address(), riid.address(), pClientSite.address(), ppvObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleSave$MH() {
        return cfapi_h$constants$96.OleSave$MH();
    }
    public static @C("HRESULT") int OleSave (@C("LPPERSISTSTORAGE") Addressable pPS, @C("LPSTORAGE") Addressable pStg, @C("BOOL") int fSameAsLoad) {
        try {
            return (int)cfapi_h$constants$96.OleSave$MH().invokeExact(pPS.address(), pStg.address(), fSameAsLoad);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleLoadFromStream$MH() {
        return cfapi_h$constants$96.OleLoadFromStream$MH();
    }
    public static @C("HRESULT") int OleLoadFromStream (@C("LPSTREAM") Addressable pStm, @C("const IID*") Addressable iidInterface, @C("LPVOID*") Addressable ppvObj) {
        try {
            return (int)cfapi_h$constants$96.OleLoadFromStream$MH().invokeExact(pStm.address(), iidInterface.address(), ppvObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleSaveToStream$MH() {
        return cfapi_h$constants$96.OleSaveToStream$MH();
    }
    public static @C("HRESULT") int OleSaveToStream (@C("LPPERSISTSTREAM") Addressable pPStm, @C("LPSTREAM") Addressable pStm) {
        try {
            return (int)cfapi_h$constants$96.OleSaveToStream$MH().invokeExact(pPStm.address(), pStm.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleSetContainedObject$MH() {
        return cfapi_h$constants$96.OleSetContainedObject$MH();
    }
    public static @C("HRESULT") int OleSetContainedObject (@C("LPUNKNOWN") Addressable pUnknown, @C("BOOL") int fContained) {
        try {
            return (int)cfapi_h$constants$96.OleSetContainedObject$MH().invokeExact(pUnknown.address(), fContained);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleNoteObjectVisible$MH() {
        return cfapi_h$constants$96.OleNoteObjectVisible$MH();
    }
    public static @C("HRESULT") int OleNoteObjectVisible (@C("LPUNKNOWN") Addressable pUnknown, @C("BOOL") int fVisible) {
        try {
            return (int)cfapi_h$constants$96.OleNoteObjectVisible$MH().invokeExact(pUnknown.address(), fVisible);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RegisterDragDrop$MH() {
        return cfapi_h$constants$96.RegisterDragDrop$MH();
    }
    public static @C("HRESULT") int RegisterDragDrop (@C("HWND") Addressable hwnd, @C("LPDROPTARGET") Addressable pDropTarget) {
        try {
            return (int)cfapi_h$constants$96.RegisterDragDrop$MH().invokeExact(hwnd.address(), pDropTarget.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RevokeDragDrop$MH() {
        return cfapi_h$constants$96.RevokeDragDrop$MH();
    }
    public static @C("HRESULT") int RevokeDragDrop (@C("HWND") Addressable hwnd) {
        try {
            return (int)cfapi_h$constants$96.RevokeDragDrop$MH().invokeExact(hwnd.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DoDragDrop$MH() {
        return cfapi_h$constants$96.DoDragDrop$MH();
    }
    public static @C("HRESULT") int DoDragDrop (@C("LPDATAOBJECT") Addressable pDataObj, @C("LPDROPSOURCE") Addressable pDropSource, @C("DWORD") int dwOKEffects, @C("LPDWORD") Addressable pdwEffect) {
        try {
            return (int)cfapi_h$constants$96.DoDragDrop$MH().invokeExact(pDataObj.address(), pDropSource.address(), dwOKEffects, pdwEffect.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleSetClipboard$MH() {
        return cfapi_h$constants$96.OleSetClipboard$MH();
    }
    public static @C("HRESULT") int OleSetClipboard (@C("LPDATAOBJECT") Addressable pDataObj) {
        try {
            return (int)cfapi_h$constants$96.OleSetClipboard$MH().invokeExact(pDataObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleGetClipboard$MH() {
        return cfapi_h$constants$96.OleGetClipboard$MH();
    }
    public static @C("HRESULT") int OleGetClipboard (@C("LPDATAOBJECT*") Addressable ppDataObj) {
        try {
            return (int)cfapi_h$constants$96.OleGetClipboard$MH().invokeExact(ppDataObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleGetClipboardWithEnterpriseInfo$MH() {
        return cfapi_h$constants$96.OleGetClipboardWithEnterpriseInfo$MH();
    }
    public static @C("HRESULT") int OleGetClipboardWithEnterpriseInfo (@C("IDataObject**") Addressable dataObject, @C("PWSTR*") Addressable dataEnterpriseId, @C("PWSTR*") Addressable sourceDescription, @C("PWSTR*") Addressable targetDescription, @C("PWSTR*") Addressable dataDescription) {
        try {
            return (int)cfapi_h$constants$96.OleGetClipboardWithEnterpriseInfo$MH().invokeExact(dataObject.address(), dataEnterpriseId.address(), sourceDescription.address(), targetDescription.address(), dataDescription.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleFlushClipboard$MH() {
        return cfapi_h$constants$96.OleFlushClipboard$MH();
    }
    public static @C("HRESULT") int OleFlushClipboard () {
        try {
            return (int)cfapi_h$constants$96.OleFlushClipboard$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleIsCurrentClipboard$MH() {
        return cfapi_h$constants$96.OleIsCurrentClipboard$MH();
    }
    public static @C("HRESULT") int OleIsCurrentClipboard (@C("LPDATAOBJECT") Addressable pDataObj) {
        try {
            return (int)cfapi_h$constants$96.OleIsCurrentClipboard$MH().invokeExact(pDataObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleCreateMenuDescriptor$MH() {
        return cfapi_h$constants$96.OleCreateMenuDescriptor$MH();
    }
    public static @C("HOLEMENU") MemoryAddress OleCreateMenuDescriptor (@C("HMENU") Addressable hmenuCombined, @C("LPOLEMENUGROUPWIDTHS") Addressable lpMenuWidths) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$96.OleCreateMenuDescriptor$MH().invokeExact(hmenuCombined.address(), lpMenuWidths.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleSetMenuDescriptor$MH() {
        return cfapi_h$constants$96.OleSetMenuDescriptor$MH();
    }
    public static @C("HRESULT") int OleSetMenuDescriptor (@C("HOLEMENU") Addressable holemenu, @C("HWND") Addressable hwndFrame, @C("HWND") Addressable hwndActiveObject, @C("LPOLEINPLACEFRAME") Addressable lpFrame, @C("LPOLEINPLACEACTIVEOBJECT") Addressable lpActiveObj) {
        try {
            return (int)cfapi_h$constants$96.OleSetMenuDescriptor$MH().invokeExact(holemenu.address(), hwndFrame.address(), hwndActiveObject.address(), lpFrame.address(), lpActiveObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleDestroyMenuDescriptor$MH() {
        return cfapi_h$constants$96.OleDestroyMenuDescriptor$MH();
    }
    public static @C("HRESULT") int OleDestroyMenuDescriptor (@C("HOLEMENU") Addressable holemenu) {
        try {
            return (int)cfapi_h$constants$96.OleDestroyMenuDescriptor$MH().invokeExact(holemenu.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleTranslateAccelerator$MH() {
        return cfapi_h$constants$96.OleTranslateAccelerator$MH();
    }
    public static @C("HRESULT") int OleTranslateAccelerator (@C("LPOLEINPLACEFRAME") Addressable lpFrame, @C("LPOLEINPLACEFRAMEINFO") Addressable lpFrameInfo, @C("LPMSG") Addressable lpmsg) {
        try {
            return (int)cfapi_h$constants$96.OleTranslateAccelerator$MH().invokeExact(lpFrame.address(), lpFrameInfo.address(), lpmsg.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleDuplicateData$MH() {
        return cfapi_h$constants$96.OleDuplicateData$MH();
    }
    public static @C("HANDLE") MemoryAddress OleDuplicateData (@C("HANDLE") Addressable hSrc, @C("CLIPFORMAT") short cfFormat, @C("UINT") int uiFlags) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$96.OleDuplicateData$MH().invokeExact(hSrc.address(), cfFormat, uiFlags);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleDraw$MH() {
        return cfapi_h$constants$96.OleDraw$MH();
    }
    public static @C("HRESULT") int OleDraw (@C("LPUNKNOWN") Addressable pUnknown, @C("DWORD") int dwAspect, @C("HDC") Addressable hdcDraw, @C("LPCRECT") Addressable lprcBounds) {
        try {
            return (int)cfapi_h$constants$96.OleDraw$MH().invokeExact(pUnknown.address(), dwAspect, hdcDraw.address(), lprcBounds.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleRun$MH() {
        return cfapi_h$constants$96.OleRun$MH();
    }
    public static @C("HRESULT") int OleRun (@C("LPUNKNOWN") Addressable pUnknown) {
        try {
            return (int)cfapi_h$constants$96.OleRun$MH().invokeExact(pUnknown.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleIsRunning$MH() {
        return cfapi_h$constants$96.OleIsRunning$MH();
    }
    public static @C("BOOL") int OleIsRunning (@C("LPOLEOBJECT") Addressable pObject) {
        try {
            return (int)cfapi_h$constants$96.OleIsRunning$MH().invokeExact(pObject.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleLockRunning$MH() {
        return cfapi_h$constants$96.OleLockRunning$MH();
    }
    public static @C("HRESULT") int OleLockRunning (@C("LPUNKNOWN") Addressable pUnknown, @C("BOOL") int fLock, @C("BOOL") int fLastUnlockCloses) {
        try {
            return (int)cfapi_h$constants$96.OleLockRunning$MH().invokeExact(pUnknown.address(), fLock, fLastUnlockCloses);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ReleaseStgMedium$MH() {
        return cfapi_h$constants$96.ReleaseStgMedium$MH();
    }
    public static void ReleaseStgMedium (@C("LPSTGMEDIUM") Addressable x0) {
        try {
            cfapi_h$constants$96.ReleaseStgMedium$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle CreateOleAdviseHolder$MH() {
        return cfapi_h$constants$96.CreateOleAdviseHolder$MH();
    }
    public static @C("HRESULT") int CreateOleAdviseHolder (@C("LPOLEADVISEHOLDER*") Addressable ppOAHolder) {
        try {
            return (int)cfapi_h$constants$96.CreateOleAdviseHolder$MH().invokeExact(ppOAHolder.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleCreateDefaultHandler$MH() {
        return cfapi_h$constants$96.OleCreateDefaultHandler$MH();
    }
    public static @C("HRESULT") int OleCreateDefaultHandler (@C("const IID*") Addressable clsid, @C("LPUNKNOWN") Addressable pUnkOuter, @C("const IID*") Addressable riid, @C("LPVOID*") Addressable lplpObj) {
        try {
            return (int)cfapi_h$constants$96.OleCreateDefaultHandler$MH().invokeExact(clsid.address(), pUnkOuter.address(), riid.address(), lplpObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleCreateEmbeddingHelper$MH() {
        return cfapi_h$constants$96.OleCreateEmbeddingHelper$MH();
    }
    public static @C("HRESULT") int OleCreateEmbeddingHelper (@C("const IID*") Addressable clsid, @C("LPUNKNOWN") Addressable pUnkOuter, @C("DWORD") int flags, @C("LPCLASSFACTORY") Addressable pCF, @C("const IID*") Addressable riid, @C("LPVOID*") Addressable lplpObj) {
        try {
            return (int)cfapi_h$constants$96.OleCreateEmbeddingHelper$MH().invokeExact(clsid.address(), pUnkOuter.address(), flags, pCF.address(), riid.address(), lplpObj.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle IsAccelerator$MH() {
        return cfapi_h$constants$96.IsAccelerator$MH();
    }
    public static @C("BOOL") int IsAccelerator (@C("HACCEL") Addressable hAccel, @C("int") int cAccelEntries, @C("LPMSG") Addressable lpMsg, @C("WORD*") Addressable lpwCmd) {
        try {
            return (int)cfapi_h$constants$96.IsAccelerator$MH().invokeExact(hAccel.address(), cAccelEntries, lpMsg.address(), lpwCmd.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleGetIconOfFile$MH() {
        return cfapi_h$constants$96.OleGetIconOfFile$MH();
    }
    public static @C("HGLOBAL") MemoryAddress OleGetIconOfFile (@C("LPOLESTR") Addressable lpszPath, @C("BOOL") int fUseFileAsLabel) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$96.OleGetIconOfFile$MH().invokeExact(lpszPath.address(), fUseFileAsLabel);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleGetIconOfClass$MH() {
        return cfapi_h$constants$96.OleGetIconOfClass$MH();
    }
    public static @C("HGLOBAL") MemoryAddress OleGetIconOfClass (@C("const IID*") Addressable rclsid, @C("LPOLESTR") Addressable lpszLabel, @C("BOOL") int fUseTypeAsLabel) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$96.OleGetIconOfClass$MH().invokeExact(rclsid.address(), lpszLabel.address(), fUseTypeAsLabel);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleMetafilePictFromIconAndLabel$MH() {
        return cfapi_h$constants$96.OleMetafilePictFromIconAndLabel$MH();
    }
    public static @C("HGLOBAL") MemoryAddress OleMetafilePictFromIconAndLabel (@C("HICON") Addressable hIcon, @C("LPOLESTR") Addressable lpszLabel, @C("LPOLESTR") Addressable lpszSourceFile, @C("UINT") int iIconIndex) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$96.OleMetafilePictFromIconAndLabel$MH().invokeExact(hIcon.address(), lpszLabel.address(), lpszSourceFile.address(), iIconIndex);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleRegGetUserType$MH() {
        return cfapi_h$constants$96.OleRegGetUserType$MH();
    }
    public static @C("HRESULT") int OleRegGetUserType (@C("const IID*") Addressable clsid, @C("DWORD") int dwFormOfType, @C("LPOLESTR*") Addressable pszUserType) {
        try {
            return (int)cfapi_h$constants$96.OleRegGetUserType$MH().invokeExact(clsid.address(), dwFormOfType, pszUserType.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleRegGetMiscStatus$MH() {
        return cfapi_h$constants$96.OleRegGetMiscStatus$MH();
    }
    public static @C("HRESULT") int OleRegGetMiscStatus (@C("const IID*") Addressable clsid, @C("DWORD") int dwAspect, @C("DWORD*") Addressable pdwStatus) {
        try {
            return (int)cfapi_h$constants$96.OleRegGetMiscStatus$MH().invokeExact(clsid.address(), dwAspect, pdwStatus.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleRegEnumFormatEtc$MH() {
        return cfapi_h$constants$96.OleRegEnumFormatEtc$MH();
    }
    public static @C("HRESULT") int OleRegEnumFormatEtc (@C("const IID*") Addressable clsid, @C("DWORD") int dwDirection, @C("LPENUMFORMATETC*") Addressable ppenum) {
        try {
            return (int)cfapi_h$constants$96.OleRegEnumFormatEtc$MH().invokeExact(clsid.address(), dwDirection, ppenum.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleRegEnumVerbs$MH() {
        return cfapi_h$constants$96.OleRegEnumVerbs$MH();
    }
    public static @C("HRESULT") int OleRegEnumVerbs (@C("const IID*") Addressable clsid, @C("LPENUMOLEVERB*") Addressable ppenum) {
        try {
            return (int)cfapi_h$constants$96.OleRegEnumVerbs$MH().invokeExact(clsid.address(), ppenum.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleConvertOLESTREAMToIStorage$MH() {
        return cfapi_h$constants$96.OleConvertOLESTREAMToIStorage$MH();
    }
    public static @C("HRESULT") int OleConvertOLESTREAMToIStorage (@C("LPOLESTREAM") Addressable lpolestream, @C("LPSTORAGE") Addressable pstg, @C("const DVTARGETDEVICE*") Addressable ptd) {
        try {
            return (int)cfapi_h$constants$96.OleConvertOLESTREAMToIStorage$MH().invokeExact(lpolestream.address(), pstg.address(), ptd.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleConvertIStorageToOLESTREAM$MH() {
        return cfapi_h$constants$96.OleConvertIStorageToOLESTREAM$MH();
    }
    public static @C("HRESULT") int OleConvertIStorageToOLESTREAM (@C("LPSTORAGE") Addressable pstg, @C("LPOLESTREAM") Addressable lpolestream) {
        try {
            return (int)cfapi_h$constants$96.OleConvertIStorageToOLESTREAM$MH().invokeExact(pstg.address(), lpolestream.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleDoAutoConvert$MH() {
        return cfapi_h$constants$96.OleDoAutoConvert$MH();
    }
    public static @C("HRESULT") int OleDoAutoConvert (@C("LPSTORAGE") Addressable pStg, @C("LPCLSID") Addressable pClsidNew) {
        try {
            return (int)cfapi_h$constants$96.OleDoAutoConvert$MH().invokeExact(pStg.address(), pClsidNew.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleGetAutoConvert$MH() {
        return cfapi_h$constants$96.OleGetAutoConvert$MH();
    }
    public static @C("HRESULT") int OleGetAutoConvert (@C("const IID*") Addressable clsidOld, @C("LPCLSID") Addressable pClsidNew) {
        try {
            return (int)cfapi_h$constants$96.OleGetAutoConvert$MH().invokeExact(clsidOld.address(), pClsidNew.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleSetAutoConvert$MH() {
        return cfapi_h$constants$96.OleSetAutoConvert$MH();
    }
    public static @C("HRESULT") int OleSetAutoConvert (@C("const IID*") Addressable clsidOld, @C("const IID*") Addressable clsidNew) {
        try {
            return (int)cfapi_h$constants$96.OleSetAutoConvert$MH().invokeExact(clsidOld.address(), clsidNew.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SetConvertStg$MH() {
        return cfapi_h$constants$96.SetConvertStg$MH();
    }
    public static @C("HRESULT") int SetConvertStg (@C("LPSTORAGE") Addressable pStg, @C("BOOL") int fConvert) {
        try {
            return (int)cfapi_h$constants$96.SetConvertStg$MH().invokeExact(pStg.address(), fConvert);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleConvertIStorageToOLESTREAMEx$MH() {
        return cfapi_h$constants$96.OleConvertIStorageToOLESTREAMEx$MH();
    }
    public static @C("HRESULT") int OleConvertIStorageToOLESTREAMEx (@C("LPSTORAGE") Addressable pstg, @C("CLIPFORMAT") short cfFormat, @C("LONG") int lWidth, @C("LONG") int lHeight, @C("DWORD") int dwSize, @C("LPSTGMEDIUM") Addressable pmedium, @C("LPOLESTREAM") Addressable polestm) {
        try {
            return (int)cfapi_h$constants$96.OleConvertIStorageToOLESTREAMEx$MH().invokeExact(pstg.address(), cfFormat, lWidth, lHeight, dwSize, pmedium.address(), polestm.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OleConvertOLESTREAMToIStorageEx$MH() {
        return cfapi_h$constants$96.OleConvertOLESTREAMToIStorageEx$MH();
    }
    public static @C("HRESULT") int OleConvertOLESTREAMToIStorageEx (@C("LPOLESTREAM") Addressable polestm, @C("LPSTORAGE") Addressable pstg, @C("CLIPFORMAT*") Addressable pcfFormat, @C("LONG*") Addressable plwWidth, @C("LONG*") Addressable plHeight, @C("DWORD*") Addressable pdwSize, @C("LPSTGMEDIUM") Addressable pmedium) {
        try {
            return (int)cfapi_h$constants$96.OleConvertOLESTREAMToIStorageEx$MH().invokeExact(polestm.address(), pstg.address(), pcfFormat.address(), plwWidth.address(), plHeight.address(), pdwSize.address(), pmedium.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MemorySegment IID_IPrintDialogCallback$SEGMENT() {
        return cfapi_h$constants$96.IID_IPrintDialogCallback$SEGMENT();
    }
    public static  MemorySegment IID_IPrintDialogServices$SEGMENT() {
        return cfapi_h$constants$96.IID_IPrintDialogServices$SEGMENT();
    }
    public static  MethodHandle GetOpenFileNameA$MH() {
        return cfapi_h$constants$96.GetOpenFileNameA$MH();
    }
    public static @C("BOOL") int GetOpenFileNameA (@C("LPOPENFILENAMEA") Addressable x0) {
        try {
            return (int)cfapi_h$constants$96.GetOpenFileNameA$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetOpenFileNameW$MH() {
        return cfapi_h$constants$96.GetOpenFileNameW$MH();
    }
    public static @C("BOOL") int GetOpenFileNameW (@C("LPOPENFILENAMEW") Addressable x0) {
        try {
            return (int)cfapi_h$constants$96.GetOpenFileNameW$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetSaveFileNameA$MH() {
        return cfapi_h$constants$96.GetSaveFileNameA$MH();
    }
    public static @C("BOOL") int GetSaveFileNameA (@C("LPOPENFILENAMEA") Addressable x0) {
        try {
            return (int)cfapi_h$constants$96.GetSaveFileNameA$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetSaveFileNameW$MH() {
        return cfapi_h$constants$96.GetSaveFileNameW$MH();
    }
    public static @C("BOOL") int GetSaveFileNameW (@C("LPOPENFILENAMEW") Addressable x0) {
        try {
            return (int)cfapi_h$constants$96.GetSaveFileNameW$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetFileTitleA$MH() {
        return cfapi_h$constants$96.GetFileTitleA$MH();
    }
    public static @C("short") short GetFileTitleA (@C("LPCSTR") Addressable x0, @C("LPSTR") Addressable Buf, @C("WORD") short cchSize) {
        try {
            return (short)cfapi_h$constants$96.GetFileTitleA$MH().invokeExact(x0.address(), Buf.address(), cchSize);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetFileTitleW$MH() {
        return cfapi_h$constants$96.GetFileTitleW$MH();
    }
    public static @C("short") short GetFileTitleW (@C("LPCWSTR") Addressable x0, @C("LPWSTR") Addressable Buf, @C("WORD") short cchSize) {
        try {
            return (short)cfapi_h$constants$96.GetFileTitleW$MH().invokeExact(x0.address(), Buf.address(), cchSize);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ChooseColorA$MH() {
        return cfapi_h$constants$96.ChooseColorA$MH();
    }
    public static @C("BOOL") int ChooseColorA (@C("LPCHOOSECOLORA") Addressable x0) {
        try {
            return (int)cfapi_h$constants$96.ChooseColorA$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ChooseColorW$MH() {
        return cfapi_h$constants$96.ChooseColorW$MH();
    }
    public static @C("BOOL") int ChooseColorW (@C("LPCHOOSECOLORW") Addressable x0) {
        try {
            return (int)cfapi_h$constants$96.ChooseColorW$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle FindTextA$MH() {
        return cfapi_h$constants$97.FindTextA$MH();
    }
    public static @C("HWND") MemoryAddress FindTextA (@C("LPFINDREPLACEA") Addressable x0) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$97.FindTextA$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle FindTextW$MH() {
        return cfapi_h$constants$97.FindTextW$MH();
    }
    public static @C("HWND") MemoryAddress FindTextW (@C("LPFINDREPLACEW") Addressable x0) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$97.FindTextW$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ReplaceTextA$MH() {
        return cfapi_h$constants$97.ReplaceTextA$MH();
    }
    public static @C("HWND") MemoryAddress ReplaceTextA (@C("LPFINDREPLACEA") Addressable x0) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$97.ReplaceTextA$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ReplaceTextW$MH() {
        return cfapi_h$constants$97.ReplaceTextW$MH();
    }
    public static @C("HWND") MemoryAddress ReplaceTextW (@C("LPFINDREPLACEW") Addressable x0) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$97.ReplaceTextW$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ChooseFontA$MH() {
        return cfapi_h$constants$97.ChooseFontA$MH();
    }
    public static @C("BOOL") int ChooseFontA (@C("LPCHOOSEFONTA") Addressable x0) {
        try {
            return (int)cfapi_h$constants$97.ChooseFontA$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ChooseFontW$MH() {
        return cfapi_h$constants$97.ChooseFontW$MH();
    }
    public static @C("BOOL") int ChooseFontW (@C("LPCHOOSEFONTW") Addressable x0) {
        try {
            return (int)cfapi_h$constants$97.ChooseFontW$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle PrintDlgA$MH() {
        return cfapi_h$constants$97.PrintDlgA$MH();
    }
    public static @C("BOOL") int PrintDlgA (@C("LPPRINTDLGA") Addressable pPD) {
        try {
            return (int)cfapi_h$constants$97.PrintDlgA$MH().invokeExact(pPD.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle PrintDlgW$MH() {
        return cfapi_h$constants$97.PrintDlgW$MH();
    }
    public static @C("BOOL") int PrintDlgW (@C("LPPRINTDLGW") Addressable pPD) {
        try {
            return (int)cfapi_h$constants$97.PrintDlgW$MH().invokeExact(pPD.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle PrintDlgExA$MH() {
        return cfapi_h$constants$97.PrintDlgExA$MH();
    }
    public static @C("HRESULT") int PrintDlgExA (@C("LPPRINTDLGEXA") Addressable pPD) {
        try {
            return (int)cfapi_h$constants$97.PrintDlgExA$MH().invokeExact(pPD.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle PrintDlgExW$MH() {
        return cfapi_h$constants$97.PrintDlgExW$MH();
    }
    public static @C("HRESULT") int PrintDlgExW (@C("LPPRINTDLGEXW") Addressable pPD) {
        try {
            return (int)cfapi_h$constants$97.PrintDlgExW$MH().invokeExact(pPD.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle CommDlgExtendedError$MH() {
        return cfapi_h$constants$97.CommDlgExtendedError$MH();
    }
    public static @C("DWORD") int CommDlgExtendedError () {
        try {
            return (int)cfapi_h$constants$97.CommDlgExtendedError$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle PageSetupDlgA$MH() {
        return cfapi_h$constants$97.PageSetupDlgA$MH();
    }
    public static @C("BOOL") int PageSetupDlgA (@C("LPPAGESETUPDLGA") Addressable x0) {
        try {
            return (int)cfapi_h$constants$97.PageSetupDlgA$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle PageSetupDlgW$MH() {
        return cfapi_h$constants$97.PageSetupDlgW$MH();
    }
    public static @C("BOOL") int PageSetupDlgW (@C("LPPAGESETUPDLGW") Addressable x0) {
        try {
            return (int)cfapi_h$constants$97.PageSetupDlgW$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle uaw_CharUpperW$MH() {
        return cfapi_h$constants$97.uaw_CharUpperW$MH();
    }
    public static @C("LPUWSTR") MemoryAddress uaw_CharUpperW (@C("LPUWSTR") Addressable String) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$97.uaw_CharUpperW$MH().invokeExact(String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle uaw_lstrcmpW$MH() {
        return cfapi_h$constants$97.uaw_lstrcmpW$MH();
    }
    public static @C("int") int uaw_lstrcmpW (@C("PCUWSTR") Addressable String1, @C("PCUWSTR") Addressable String2) {
        try {
            return (int)cfapi_h$constants$97.uaw_lstrcmpW$MH().invokeExact(String1.address(), String2.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle uaw_lstrcmpiW$MH() {
        return cfapi_h$constants$97.uaw_lstrcmpiW$MH();
    }
    public static @C("int") int uaw_lstrcmpiW (@C("PCUWSTR") Addressable String1, @C("PCUWSTR") Addressable String2) {
        try {
            return (int)cfapi_h$constants$97.uaw_lstrcmpiW$MH().invokeExact(String1.address(), String2.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle uaw_lstrlenW$MH() {
        return cfapi_h$constants$97.uaw_lstrlenW$MH();
    }
    public static @C("int") int uaw_lstrlenW (@C("LPCUWSTR") Addressable String) {
        try {
            return (int)cfapi_h$constants$97.uaw_lstrlenW$MH().invokeExact(String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle uaw_wcschr$MH() {
        return cfapi_h$constants$97.uaw_wcschr$MH();
    }
    public static @C("PUWSTR") MemoryAddress uaw_wcschr (@C("PCUWSTR") Addressable String, @C("WCHAR") short Character) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$97.uaw_wcschr$MH().invokeExact(String.address(), Character);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle uaw_wcscpy$MH() {
        return cfapi_h$constants$97.uaw_wcscpy$MH();
    }
    public static @C("PUWSTR") MemoryAddress uaw_wcscpy (@C("PUWSTR") Addressable Destination, @C("PCUWSTR") Addressable Source) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$97.uaw_wcscpy$MH().invokeExact(Destination.address(), Source.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle uaw_wcsicmp$MH() {
        return cfapi_h$constants$97.uaw_wcsicmp$MH();
    }
    public static @C("int") int uaw_wcsicmp (@C("PCUWSTR") Addressable String1, @C("PCUWSTR") Addressable String2) {
        try {
            return (int)cfapi_h$constants$97.uaw_wcsicmp$MH().invokeExact(String1.address(), String2.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle uaw_wcslen$MH() {
        return cfapi_h$constants$97.uaw_wcslen$MH();
    }
    public static @C("size_t") long uaw_wcslen (@C("PCUWSTR") Addressable String) {
        try {
            return (long)cfapi_h$constants$97.uaw_wcslen$MH().invokeExact(String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle uaw_wcsrchr$MH() {
        return cfapi_h$constants$97.uaw_wcsrchr$MH();
    }
    public static @C("PUWSTR") MemoryAddress uaw_wcsrchr (@C("PCUWSTR") Addressable String, @C("WCHAR") short Character) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$97.uaw_wcsrchr$MH().invokeExact(String.address(), Character);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ua_CharUpperW$MH() {
        return cfapi_h$constants$97.ua_CharUpperW$MH();
    }
    public static @C("LPUWSTR") MemoryAddress ua_CharUpperW (@C("LPUWSTR") Addressable String) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$97.ua_CharUpperW$MH().invokeExact(String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ua_lstrcmpW$MH() {
        return cfapi_h$constants$97.ua_lstrcmpW$MH();
    }
    public static @C("int") int ua_lstrcmpW (@C("LPCUWSTR") Addressable String1, @C("LPCUWSTR") Addressable String2) {
        try {
            return (int)cfapi_h$constants$97.ua_lstrcmpW$MH().invokeExact(String1.address(), String2.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ua_lstrcmpiW$MH() {
        return cfapi_h$constants$97.ua_lstrcmpiW$MH();
    }
    public static @C("int") int ua_lstrcmpiW (@C("LPCUWSTR") Addressable String1, @C("LPCUWSTR") Addressable String2) {
        try {
            return (int)cfapi_h$constants$97.ua_lstrcmpiW$MH().invokeExact(String1.address(), String2.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ua_lstrlenW$MH() {
        return cfapi_h$constants$97.ua_lstrlenW$MH();
    }
    public static @C("int") int ua_lstrlenW (@C("LPCUWSTR") Addressable String) {
        try {
            return (int)cfapi_h$constants$97.ua_lstrlenW$MH().invokeExact(String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ua_wcschr$MH() {
        return cfapi_h$constants$97.ua_wcschr$MH();
    }
    public static @C("PUWSTR_C") MemoryAddress ua_wcschr (@C("PCUWSTR") Addressable String, @C("WCHAR") short Character) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$97.ua_wcschr$MH().invokeExact(String.address(), Character);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ua_wcsrchr$MH() {
        return cfapi_h$constants$97.ua_wcsrchr$MH();
    }
    public static @C("PUWSTR_C") MemoryAddress ua_wcsrchr (@C("PCUWSTR") Addressable String, @C("WCHAR") short Character) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$97.ua_wcsrchr$MH().invokeExact(String.address(), Character);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ua_wcscpy$MH() {
        return cfapi_h$constants$97.ua_wcscpy$MH();
    }
    public static @C("PUWSTR") MemoryAddress ua_wcscpy (@C("PUWSTR") Addressable Destination, @C("PCUWSTR") Addressable Source) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$97.ua_wcscpy$MH().invokeExact(Destination.address(), Source.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ua_wcscpy_s$MH() {
        return cfapi_h$constants$97.ua_wcscpy_s$MH();
    }
    public static @C("PUWSTR") MemoryAddress ua_wcscpy_s (@C("PUWSTR") Addressable Destination, @C("size_t") long DestinationSize, @C("PCUWSTR") Addressable Source) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$97.ua_wcscpy_s$MH().invokeExact(Destination.address(), DestinationSize, Source.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ua_wcslen$MH() {
        return cfapi_h$constants$97.ua_wcslen$MH();
    }
    public static @C("size_t") long ua_wcslen (@C("PCUWSTR") Addressable String) {
        try {
            return (long)cfapi_h$constants$97.ua_wcslen$MH().invokeExact(String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ua_wcsicmp$MH() {
        return cfapi_h$constants$97.ua_wcsicmp$MH();
    }
    public static @C("int") int ua_wcsicmp (@C("PCUWSTR") Addressable String1, @C("PCUWSTR") Addressable String2) {
        try {
            return (int)cfapi_h$constants$97.ua_wcsicmp$MH().invokeExact(String1.address(), String2.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MemorySegment NETWORK_MANAGER_FIRST_IP_ADDRESS_ARRIVAL_GUID$SEGMENT() {
        return cfapi_h$constants$97.NETWORK_MANAGER_FIRST_IP_ADDRESS_ARRIVAL_GUID$SEGMENT();
    }
    public static  MemorySegment NETWORK_MANAGER_LAST_IP_ADDRESS_REMOVAL_GUID$SEGMENT() {
        return cfapi_h$constants$97.NETWORK_MANAGER_LAST_IP_ADDRESS_REMOVAL_GUID$SEGMENT();
    }
    public static  MemorySegment DOMAIN_JOIN_GUID$SEGMENT() {
        return cfapi_h$constants$97.DOMAIN_JOIN_GUID$SEGMENT();
    }
    public static  MemorySegment DOMAIN_LEAVE_GUID$SEGMENT() {
        return cfapi_h$constants$97.DOMAIN_LEAVE_GUID$SEGMENT();
    }
    public static  MemorySegment FIREWALL_PORT_OPEN_GUID$SEGMENT() {
        return cfapi_h$constants$97.FIREWALL_PORT_OPEN_GUID$SEGMENT();
    }
    public static  MemorySegment FIREWALL_PORT_CLOSE_GUID$SEGMENT() {
        return cfapi_h$constants$97.FIREWALL_PORT_CLOSE_GUID$SEGMENT();
    }
    public static  MemorySegment MACHINE_POLICY_PRESENT_GUID$SEGMENT() {
        return cfapi_h$constants$97.MACHINE_POLICY_PRESENT_GUID$SEGMENT();
    }
    public static  MemorySegment USER_POLICY_PRESENT_GUID$SEGMENT() {
        return cfapi_h$constants$97.USER_POLICY_PRESENT_GUID$SEGMENT();
    }
    public static  MemorySegment RPC_INTERFACE_EVENT_GUID$SEGMENT() {
        return cfapi_h$constants$97.RPC_INTERFACE_EVENT_GUID$SEGMENT();
    }
    public static  MemorySegment NAMED_PIPE_EVENT_GUID$SEGMENT() {
        return cfapi_h$constants$97.NAMED_PIPE_EVENT_GUID$SEGMENT();
    }
    public static  MemorySegment CUSTOM_SYSTEM_STATE_CHANGE_EVENT_GUID$SEGMENT() {
        return cfapi_h$constants$97.CUSTOM_SYSTEM_STATE_CHANGE_EVENT_GUID$SEGMENT();
    }
    public static @C("int") int SC_ACTION_NONE() {
        return cfapi_h$constants$97.SC_ACTION_NONE();
    }
    public static @C("int") int SC_ACTION_RESTART() {
        return cfapi_h$constants$97.SC_ACTION_RESTART();
    }
    public static @C("int") int SC_ACTION_REBOOT() {
        return cfapi_h$constants$97.SC_ACTION_REBOOT();
    }
    public static @C("int") int SC_ACTION_RUN_COMMAND() {
        return cfapi_h$constants$97.SC_ACTION_RUN_COMMAND();
    }
    public static @C("int") int SC_ACTION_OWN_RESTART() {
        return cfapi_h$constants$97.SC_ACTION_OWN_RESTART();
    }
    public static @C("int") int SC_STATUS_PROCESS_INFO() {
        return cfapi_h$constants$98.SC_STATUS_PROCESS_INFO();
    }
    public static @C("int") int SC_ENUM_PROCESS_INFO() {
        return cfapi_h$constants$98.SC_ENUM_PROCESS_INFO();
    }
    public static  MethodHandle ChangeServiceConfigA$MH() {
        return cfapi_h$constants$98.ChangeServiceConfigA$MH();
    }
    public static @C("BOOL") int ChangeServiceConfigA (@C("SC_HANDLE") Addressable hService, @C("DWORD") int dwServiceType, @C("DWORD") int dwStartType, @C("DWORD") int dwErrorControl, @C("LPCSTR") Addressable lpBinaryPathName, @C("LPCSTR") Addressable lpLoadOrderGroup, @C("LPDWORD") Addressable lpdwTagId, @C("LPCSTR") Addressable lpDependencies, @C("LPCSTR") Addressable lpServiceStartName, @C("LPCSTR") Addressable lpPassword, @C("LPCSTR") Addressable lpDisplayName) {
        try {
            return (int)cfapi_h$constants$98.ChangeServiceConfigA$MH().invokeExact(hService.address(), dwServiceType, dwStartType, dwErrorControl, lpBinaryPathName.address(), lpLoadOrderGroup.address(), lpdwTagId.address(), lpDependencies.address(), lpServiceStartName.address(), lpPassword.address(), lpDisplayName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ChangeServiceConfigW$MH() {
        return cfapi_h$constants$98.ChangeServiceConfigW$MH();
    }
    public static @C("BOOL") int ChangeServiceConfigW (@C("SC_HANDLE") Addressable hService, @C("DWORD") int dwServiceType, @C("DWORD") int dwStartType, @C("DWORD") int dwErrorControl, @C("LPCWSTR") Addressable lpBinaryPathName, @C("LPCWSTR") Addressable lpLoadOrderGroup, @C("LPDWORD") Addressable lpdwTagId, @C("LPCWSTR") Addressable lpDependencies, @C("LPCWSTR") Addressable lpServiceStartName, @C("LPCWSTR") Addressable lpPassword, @C("LPCWSTR") Addressable lpDisplayName) {
        try {
            return (int)cfapi_h$constants$98.ChangeServiceConfigW$MH().invokeExact(hService.address(), dwServiceType, dwStartType, dwErrorControl, lpBinaryPathName.address(), lpLoadOrderGroup.address(), lpdwTagId.address(), lpDependencies.address(), lpServiceStartName.address(), lpPassword.address(), lpDisplayName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ChangeServiceConfig2A$MH() {
        return cfapi_h$constants$98.ChangeServiceConfig2A$MH();
    }
    public static @C("BOOL") int ChangeServiceConfig2A (@C("SC_HANDLE") Addressable hService, @C("DWORD") int dwInfoLevel, @C("LPVOID") Addressable lpInfo) {
        try {
            return (int)cfapi_h$constants$98.ChangeServiceConfig2A$MH().invokeExact(hService.address(), dwInfoLevel, lpInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ChangeServiceConfig2W$MH() {
        return cfapi_h$constants$98.ChangeServiceConfig2W$MH();
    }
    public static @C("BOOL") int ChangeServiceConfig2W (@C("SC_HANDLE") Addressable hService, @C("DWORD") int dwInfoLevel, @C("LPVOID") Addressable lpInfo) {
        try {
            return (int)cfapi_h$constants$98.ChangeServiceConfig2W$MH().invokeExact(hService.address(), dwInfoLevel, lpInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle CloseServiceHandle$MH() {
        return cfapi_h$constants$98.CloseServiceHandle$MH();
    }
    public static @C("BOOL") int CloseServiceHandle (@C("SC_HANDLE") Addressable hSCObject) {
        try {
            return (int)cfapi_h$constants$98.CloseServiceHandle$MH().invokeExact(hSCObject.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ControlService$MH() {
        return cfapi_h$constants$98.ControlService$MH();
    }
    public static @C("BOOL") int ControlService (@C("SC_HANDLE") Addressable hService, @C("DWORD") int dwControl, @C("LPSERVICE_STATUS") Addressable lpServiceStatus) {
        try {
            return (int)cfapi_h$constants$98.ControlService$MH().invokeExact(hService.address(), dwControl, lpServiceStatus.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle CreateServiceA$MH() {
        return cfapi_h$constants$98.CreateServiceA$MH();
    }
    public static @C("SC_HANDLE") MemoryAddress CreateServiceA (@C("SC_HANDLE") Addressable hSCManager, @C("LPCSTR") Addressable lpServiceName, @C("LPCSTR") Addressable lpDisplayName, @C("DWORD") int dwDesiredAccess, @C("DWORD") int dwServiceType, @C("DWORD") int dwStartType, @C("DWORD") int dwErrorControl, @C("LPCSTR") Addressable lpBinaryPathName, @C("LPCSTR") Addressable lpLoadOrderGroup, @C("LPDWORD") Addressable lpdwTagId, @C("LPCSTR") Addressable lpDependencies, @C("LPCSTR") Addressable lpServiceStartName, @C("LPCSTR") Addressable lpPassword) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$98.CreateServiceA$MH().invokeExact(hSCManager.address(), lpServiceName.address(), lpDisplayName.address(), dwDesiredAccess, dwServiceType, dwStartType, dwErrorControl, lpBinaryPathName.address(), lpLoadOrderGroup.address(), lpdwTagId.address(), lpDependencies.address(), lpServiceStartName.address(), lpPassword.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle CreateServiceW$MH() {
        return cfapi_h$constants$98.CreateServiceW$MH();
    }
    public static @C("SC_HANDLE") MemoryAddress CreateServiceW (@C("SC_HANDLE") Addressable hSCManager, @C("LPCWSTR") Addressable lpServiceName, @C("LPCWSTR") Addressable lpDisplayName, @C("DWORD") int dwDesiredAccess, @C("DWORD") int dwServiceType, @C("DWORD") int dwStartType, @C("DWORD") int dwErrorControl, @C("LPCWSTR") Addressable lpBinaryPathName, @C("LPCWSTR") Addressable lpLoadOrderGroup, @C("LPDWORD") Addressable lpdwTagId, @C("LPCWSTR") Addressable lpDependencies, @C("LPCWSTR") Addressable lpServiceStartName, @C("LPCWSTR") Addressable lpPassword) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$98.CreateServiceW$MH().invokeExact(hSCManager.address(), lpServiceName.address(), lpDisplayName.address(), dwDesiredAccess, dwServiceType, dwStartType, dwErrorControl, lpBinaryPathName.address(), lpLoadOrderGroup.address(), lpdwTagId.address(), lpDependencies.address(), lpServiceStartName.address(), lpPassword.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeleteService$MH() {
        return cfapi_h$constants$98.DeleteService$MH();
    }
    public static @C("BOOL") int DeleteService (@C("SC_HANDLE") Addressable hService) {
        try {
            return (int)cfapi_h$constants$98.DeleteService$MH().invokeExact(hService.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumDependentServicesA$MH() {
        return cfapi_h$constants$98.EnumDependentServicesA$MH();
    }
    public static @C("BOOL") int EnumDependentServicesA (@C("SC_HANDLE") Addressable hService, @C("DWORD") int dwServiceState, @C("LPENUM_SERVICE_STATUSA") Addressable lpServices, @C("DWORD") int cbBufSize, @C("LPDWORD") Addressable pcbBytesNeeded, @C("LPDWORD") Addressable lpServicesReturned) {
        try {
            return (int)cfapi_h$constants$98.EnumDependentServicesA$MH().invokeExact(hService.address(), dwServiceState, lpServices.address(), cbBufSize, pcbBytesNeeded.address(), lpServicesReturned.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumDependentServicesW$MH() {
        return cfapi_h$constants$98.EnumDependentServicesW$MH();
    }
    public static @C("BOOL") int EnumDependentServicesW (@C("SC_HANDLE") Addressable hService, @C("DWORD") int dwServiceState, @C("LPENUM_SERVICE_STATUSW") Addressable lpServices, @C("DWORD") int cbBufSize, @C("LPDWORD") Addressable pcbBytesNeeded, @C("LPDWORD") Addressable lpServicesReturned) {
        try {
            return (int)cfapi_h$constants$98.EnumDependentServicesW$MH().invokeExact(hService.address(), dwServiceState, lpServices.address(), cbBufSize, pcbBytesNeeded.address(), lpServicesReturned.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumServicesStatusA$MH() {
        return cfapi_h$constants$98.EnumServicesStatusA$MH();
    }
    public static @C("BOOL") int EnumServicesStatusA (@C("SC_HANDLE") Addressable hSCManager, @C("DWORD") int dwServiceType, @C("DWORD") int dwServiceState, @C("LPENUM_SERVICE_STATUSA") Addressable lpServices, @C("DWORD") int cbBufSize, @C("LPDWORD") Addressable pcbBytesNeeded, @C("LPDWORD") Addressable lpServicesReturned, @C("LPDWORD") Addressable lpResumeHandle) {
        try {
            return (int)cfapi_h$constants$98.EnumServicesStatusA$MH().invokeExact(hSCManager.address(), dwServiceType, dwServiceState, lpServices.address(), cbBufSize, pcbBytesNeeded.address(), lpServicesReturned.address(), lpResumeHandle.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumServicesStatusW$MH() {
        return cfapi_h$constants$98.EnumServicesStatusW$MH();
    }
    public static @C("BOOL") int EnumServicesStatusW (@C("SC_HANDLE") Addressable hSCManager, @C("DWORD") int dwServiceType, @C("DWORD") int dwServiceState, @C("LPENUM_SERVICE_STATUSW") Addressable lpServices, @C("DWORD") int cbBufSize, @C("LPDWORD") Addressable pcbBytesNeeded, @C("LPDWORD") Addressable lpServicesReturned, @C("LPDWORD") Addressable lpResumeHandle) {
        try {
            return (int)cfapi_h$constants$98.EnumServicesStatusW$MH().invokeExact(hSCManager.address(), dwServiceType, dwServiceState, lpServices.address(), cbBufSize, pcbBytesNeeded.address(), lpServicesReturned.address(), lpResumeHandle.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumServicesStatusExA$MH() {
        return cfapi_h$constants$98.EnumServicesStatusExA$MH();
    }
    public static @C("BOOL") int EnumServicesStatusExA (@C("SC_HANDLE") Addressable hSCManager, @C("SC_ENUM_TYPE") int InfoLevel, @C("DWORD") int dwServiceType, @C("DWORD") int dwServiceState, @C("LPBYTE") Addressable lpServices, @C("DWORD") int cbBufSize, @C("LPDWORD") Addressable pcbBytesNeeded, @C("LPDWORD") Addressable lpServicesReturned, @C("LPDWORD") Addressable lpResumeHandle, @C("LPCSTR") Addressable pszGroupName) {
        try {
            return (int)cfapi_h$constants$98.EnumServicesStatusExA$MH().invokeExact(hSCManager.address(), InfoLevel, dwServiceType, dwServiceState, lpServices.address(), cbBufSize, pcbBytesNeeded.address(), lpServicesReturned.address(), lpResumeHandle.address(), pszGroupName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumServicesStatusExW$MH() {
        return cfapi_h$constants$98.EnumServicesStatusExW$MH();
    }
    public static @C("BOOL") int EnumServicesStatusExW (@C("SC_HANDLE") Addressable hSCManager, @C("SC_ENUM_TYPE") int InfoLevel, @C("DWORD") int dwServiceType, @C("DWORD") int dwServiceState, @C("LPBYTE") Addressable lpServices, @C("DWORD") int cbBufSize, @C("LPDWORD") Addressable pcbBytesNeeded, @C("LPDWORD") Addressable lpServicesReturned, @C("LPDWORD") Addressable lpResumeHandle, @C("LPCWSTR") Addressable pszGroupName) {
        try {
            return (int)cfapi_h$constants$98.EnumServicesStatusExW$MH().invokeExact(hSCManager.address(), InfoLevel, dwServiceType, dwServiceState, lpServices.address(), cbBufSize, pcbBytesNeeded.address(), lpServicesReturned.address(), lpResumeHandle.address(), pszGroupName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetServiceKeyNameA$MH() {
        return cfapi_h$constants$98.GetServiceKeyNameA$MH();
    }
    public static @C("BOOL") int GetServiceKeyNameA (@C("SC_HANDLE") Addressable hSCManager, @C("LPCSTR") Addressable lpDisplayName, @C("LPSTR") Addressable lpServiceName, @C("LPDWORD") Addressable lpcchBuffer) {
        try {
            return (int)cfapi_h$constants$98.GetServiceKeyNameA$MH().invokeExact(hSCManager.address(), lpDisplayName.address(), lpServiceName.address(), lpcchBuffer.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetServiceKeyNameW$MH() {
        return cfapi_h$constants$98.GetServiceKeyNameW$MH();
    }
    public static @C("BOOL") int GetServiceKeyNameW (@C("SC_HANDLE") Addressable hSCManager, @C("LPCWSTR") Addressable lpDisplayName, @C("LPWSTR") Addressable lpServiceName, @C("LPDWORD") Addressable lpcchBuffer) {
        try {
            return (int)cfapi_h$constants$98.GetServiceKeyNameW$MH().invokeExact(hSCManager.address(), lpDisplayName.address(), lpServiceName.address(), lpcchBuffer.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetServiceDisplayNameA$MH() {
        return cfapi_h$constants$98.GetServiceDisplayNameA$MH();
    }
    public static @C("BOOL") int GetServiceDisplayNameA (@C("SC_HANDLE") Addressable hSCManager, @C("LPCSTR") Addressable lpServiceName, @C("LPSTR") Addressable lpDisplayName, @C("LPDWORD") Addressable lpcchBuffer) {
        try {
            return (int)cfapi_h$constants$98.GetServiceDisplayNameA$MH().invokeExact(hSCManager.address(), lpServiceName.address(), lpDisplayName.address(), lpcchBuffer.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetServiceDisplayNameW$MH() {
        return cfapi_h$constants$98.GetServiceDisplayNameW$MH();
    }
    public static @C("BOOL") int GetServiceDisplayNameW (@C("SC_HANDLE") Addressable hSCManager, @C("LPCWSTR") Addressable lpServiceName, @C("LPWSTR") Addressable lpDisplayName, @C("LPDWORD") Addressable lpcchBuffer) {
        try {
            return (int)cfapi_h$constants$98.GetServiceDisplayNameW$MH().invokeExact(hSCManager.address(), lpServiceName.address(), lpDisplayName.address(), lpcchBuffer.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle LockServiceDatabase$MH() {
        return cfapi_h$constants$98.LockServiceDatabase$MH();
    }
    public static @C("SC_LOCK") MemoryAddress LockServiceDatabase (@C("SC_HANDLE") Addressable hSCManager) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$98.LockServiceDatabase$MH().invokeExact(hSCManager.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle NotifyBootConfigStatus$MH() {
        return cfapi_h$constants$98.NotifyBootConfigStatus$MH();
    }
    public static @C("BOOL") int NotifyBootConfigStatus (@C("BOOL") int BootAcceptable) {
        try {
            return (int)cfapi_h$constants$98.NotifyBootConfigStatus$MH().invokeExact(BootAcceptable);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OpenSCManagerA$MH() {
        return cfapi_h$constants$98.OpenSCManagerA$MH();
    }
    public static @C("SC_HANDLE") MemoryAddress OpenSCManagerA (@C("LPCSTR") Addressable lpMachineName, @C("LPCSTR") Addressable lpDatabaseName, @C("DWORD") int dwDesiredAccess) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$98.OpenSCManagerA$MH().invokeExact(lpMachineName.address(), lpDatabaseName.address(), dwDesiredAccess);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OpenSCManagerW$MH() {
        return cfapi_h$constants$98.OpenSCManagerW$MH();
    }
    public static @C("SC_HANDLE") MemoryAddress OpenSCManagerW (@C("LPCWSTR") Addressable lpMachineName, @C("LPCWSTR") Addressable lpDatabaseName, @C("DWORD") int dwDesiredAccess) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$98.OpenSCManagerW$MH().invokeExact(lpMachineName.address(), lpDatabaseName.address(), dwDesiredAccess);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OpenServiceA$MH() {
        return cfapi_h$constants$98.OpenServiceA$MH();
    }
    public static @C("SC_HANDLE") MemoryAddress OpenServiceA (@C("SC_HANDLE") Addressable hSCManager, @C("LPCSTR") Addressable lpServiceName, @C("DWORD") int dwDesiredAccess) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$98.OpenServiceA$MH().invokeExact(hSCManager.address(), lpServiceName.address(), dwDesiredAccess);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OpenServiceW$MH() {
        return cfapi_h$constants$98.OpenServiceW$MH();
    }
    public static @C("SC_HANDLE") MemoryAddress OpenServiceW (@C("SC_HANDLE") Addressable hSCManager, @C("LPCWSTR") Addressable lpServiceName, @C("DWORD") int dwDesiredAccess) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$98.OpenServiceW$MH().invokeExact(hSCManager.address(), lpServiceName.address(), dwDesiredAccess);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle QueryServiceConfigA$MH() {
        return cfapi_h$constants$98.QueryServiceConfigA$MH();
    }
    public static @C("BOOL") int QueryServiceConfigA (@C("SC_HANDLE") Addressable hService, @C("LPQUERY_SERVICE_CONFIGA") Addressable lpServiceConfig, @C("DWORD") int cbBufSize, @C("LPDWORD") Addressable pcbBytesNeeded) {
        try {
            return (int)cfapi_h$constants$98.QueryServiceConfigA$MH().invokeExact(hService.address(), lpServiceConfig.address(), cbBufSize, pcbBytesNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle QueryServiceConfigW$MH() {
        return cfapi_h$constants$98.QueryServiceConfigW$MH();
    }
    public static @C("BOOL") int QueryServiceConfigW (@C("SC_HANDLE") Addressable hService, @C("LPQUERY_SERVICE_CONFIGW") Addressable lpServiceConfig, @C("DWORD") int cbBufSize, @C("LPDWORD") Addressable pcbBytesNeeded) {
        try {
            return (int)cfapi_h$constants$98.QueryServiceConfigW$MH().invokeExact(hService.address(), lpServiceConfig.address(), cbBufSize, pcbBytesNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle QueryServiceConfig2A$MH() {
        return cfapi_h$constants$98.QueryServiceConfig2A$MH();
    }
    public static @C("BOOL") int QueryServiceConfig2A (@C("SC_HANDLE") Addressable hService, @C("DWORD") int dwInfoLevel, @C("LPBYTE") Addressable lpBuffer, @C("DWORD") int cbBufSize, @C("LPDWORD") Addressable pcbBytesNeeded) {
        try {
            return (int)cfapi_h$constants$98.QueryServiceConfig2A$MH().invokeExact(hService.address(), dwInfoLevel, lpBuffer.address(), cbBufSize, pcbBytesNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle QueryServiceConfig2W$MH() {
        return cfapi_h$constants$98.QueryServiceConfig2W$MH();
    }
    public static @C("BOOL") int QueryServiceConfig2W (@C("SC_HANDLE") Addressable hService, @C("DWORD") int dwInfoLevel, @C("LPBYTE") Addressable lpBuffer, @C("DWORD") int cbBufSize, @C("LPDWORD") Addressable pcbBytesNeeded) {
        try {
            return (int)cfapi_h$constants$98.QueryServiceConfig2W$MH().invokeExact(hService.address(), dwInfoLevel, lpBuffer.address(), cbBufSize, pcbBytesNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle QueryServiceLockStatusA$MH() {
        return cfapi_h$constants$98.QueryServiceLockStatusA$MH();
    }
    public static @C("BOOL") int QueryServiceLockStatusA (@C("SC_HANDLE") Addressable hSCManager, @C("LPQUERY_SERVICE_LOCK_STATUSA") Addressable lpLockStatus, @C("DWORD") int cbBufSize, @C("LPDWORD") Addressable pcbBytesNeeded) {
        try {
            return (int)cfapi_h$constants$98.QueryServiceLockStatusA$MH().invokeExact(hSCManager.address(), lpLockStatus.address(), cbBufSize, pcbBytesNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle QueryServiceLockStatusW$MH() {
        return cfapi_h$constants$98.QueryServiceLockStatusW$MH();
    }
    public static @C("BOOL") int QueryServiceLockStatusW (@C("SC_HANDLE") Addressable hSCManager, @C("LPQUERY_SERVICE_LOCK_STATUSW") Addressable lpLockStatus, @C("DWORD") int cbBufSize, @C("LPDWORD") Addressable pcbBytesNeeded) {
        try {
            return (int)cfapi_h$constants$98.QueryServiceLockStatusW$MH().invokeExact(hSCManager.address(), lpLockStatus.address(), cbBufSize, pcbBytesNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle QueryServiceObjectSecurity$MH() {
        return cfapi_h$constants$98.QueryServiceObjectSecurity$MH();
    }
    public static @C("BOOL") int QueryServiceObjectSecurity (@C("SC_HANDLE") Addressable hService, @C("SECURITY_INFORMATION") int dwSecurityInformation, @C("PSECURITY_DESCRIPTOR") Addressable lpSecurityDescriptor, @C("DWORD") int cbBufSize, @C("LPDWORD") Addressable pcbBytesNeeded) {
        try {
            return (int)cfapi_h$constants$98.QueryServiceObjectSecurity$MH().invokeExact(hService.address(), dwSecurityInformation, lpSecurityDescriptor.address(), cbBufSize, pcbBytesNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle QueryServiceStatus$MH() {
        return cfapi_h$constants$98.QueryServiceStatus$MH();
    }
    public static @C("BOOL") int QueryServiceStatus (@C("SC_HANDLE") Addressable hService, @C("LPSERVICE_STATUS") Addressable lpServiceStatus) {
        try {
            return (int)cfapi_h$constants$98.QueryServiceStatus$MH().invokeExact(hService.address(), lpServiceStatus.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle QueryServiceStatusEx$MH() {
        return cfapi_h$constants$98.QueryServiceStatusEx$MH();
    }
    public static @C("BOOL") int QueryServiceStatusEx (@C("SC_HANDLE") Addressable hService, @C("SC_STATUS_TYPE") int InfoLevel, @C("LPBYTE") Addressable lpBuffer, @C("DWORD") int cbBufSize, @C("LPDWORD") Addressable pcbBytesNeeded) {
        try {
            return (int)cfapi_h$constants$98.QueryServiceStatusEx$MH().invokeExact(hService.address(), InfoLevel, lpBuffer.address(), cbBufSize, pcbBytesNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RegisterServiceCtrlHandlerA$MH() {
        return cfapi_h$constants$98.RegisterServiceCtrlHandlerA$MH();
    }
    public static @C("SERVICE_STATUS_HANDLE") MemoryAddress RegisterServiceCtrlHandlerA (@C("LPCSTR") Addressable lpServiceName, @C("LPHANDLER_FUNCTION") Addressable lpHandlerProc) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$98.RegisterServiceCtrlHandlerA$MH().invokeExact(lpServiceName.address(), lpHandlerProc.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RegisterServiceCtrlHandlerW$MH() {
        return cfapi_h$constants$98.RegisterServiceCtrlHandlerW$MH();
    }
    public static @C("SERVICE_STATUS_HANDLE") MemoryAddress RegisterServiceCtrlHandlerW (@C("LPCWSTR") Addressable lpServiceName, @C("LPHANDLER_FUNCTION") Addressable lpHandlerProc) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$98.RegisterServiceCtrlHandlerW$MH().invokeExact(lpServiceName.address(), lpHandlerProc.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RegisterServiceCtrlHandlerExA$MH() {
        return cfapi_h$constants$98.RegisterServiceCtrlHandlerExA$MH();
    }
    public static @C("SERVICE_STATUS_HANDLE") MemoryAddress RegisterServiceCtrlHandlerExA (@C("LPCSTR") Addressable lpServiceName, @C("LPHANDLER_FUNCTION_EX") Addressable lpHandlerProc, @C("LPVOID") Addressable lpContext) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$98.RegisterServiceCtrlHandlerExA$MH().invokeExact(lpServiceName.address(), lpHandlerProc.address(), lpContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle RegisterServiceCtrlHandlerExW$MH() {
        return cfapi_h$constants$98.RegisterServiceCtrlHandlerExW$MH();
    }
    public static @C("SERVICE_STATUS_HANDLE") MemoryAddress RegisterServiceCtrlHandlerExW (@C("LPCWSTR") Addressable lpServiceName, @C("LPHANDLER_FUNCTION_EX") Addressable lpHandlerProc, @C("LPVOID") Addressable lpContext) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$98.RegisterServiceCtrlHandlerExW$MH().invokeExact(lpServiceName.address(), lpHandlerProc.address(), lpContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SetServiceObjectSecurity$MH() {
        return cfapi_h$constants$98.SetServiceObjectSecurity$MH();
    }
    public static @C("BOOL") int SetServiceObjectSecurity (@C("SC_HANDLE") Addressable hService, @C("SECURITY_INFORMATION") int dwSecurityInformation, @C("PSECURITY_DESCRIPTOR") Addressable lpSecurityDescriptor) {
        try {
            return (int)cfapi_h$constants$98.SetServiceObjectSecurity$MH().invokeExact(hService.address(), dwSecurityInformation, lpSecurityDescriptor.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SetServiceStatus$MH() {
        return cfapi_h$constants$98.SetServiceStatus$MH();
    }
    public static @C("BOOL") int SetServiceStatus (@C("SERVICE_STATUS_HANDLE") Addressable hServiceStatus, @C("LPSERVICE_STATUS") Addressable lpServiceStatus) {
        try {
            return (int)cfapi_h$constants$98.SetServiceStatus$MH().invokeExact(hServiceStatus.address(), lpServiceStatus.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle StartServiceCtrlDispatcherA$MH() {
        return cfapi_h$constants$98.StartServiceCtrlDispatcherA$MH();
    }
    public static @C("BOOL") int StartServiceCtrlDispatcherA (@C("const SERVICE_TABLE_ENTRYA*") Addressable lpServiceStartTable) {
        try {
            return (int)cfapi_h$constants$98.StartServiceCtrlDispatcherA$MH().invokeExact(lpServiceStartTable.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle StartServiceCtrlDispatcherW$MH() {
        return cfapi_h$constants$98.StartServiceCtrlDispatcherW$MH();
    }
    public static @C("BOOL") int StartServiceCtrlDispatcherW (@C("const SERVICE_TABLE_ENTRYW*") Addressable lpServiceStartTable) {
        try {
            return (int)cfapi_h$constants$98.StartServiceCtrlDispatcherW$MH().invokeExact(lpServiceStartTable.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle StartServiceA$MH() {
        return cfapi_h$constants$98.StartServiceA$MH();
    }
    public static @C("BOOL") int StartServiceA (@C("SC_HANDLE") Addressable hService, @C("DWORD") int dwNumServiceArgs, @C("LPCSTR*") Addressable lpServiceArgVectors) {
        try {
            return (int)cfapi_h$constants$98.StartServiceA$MH().invokeExact(hService.address(), dwNumServiceArgs, lpServiceArgVectors.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle StartServiceW$MH() {
        return cfapi_h$constants$98.StartServiceW$MH();
    }
    public static @C("BOOL") int StartServiceW (@C("SC_HANDLE") Addressable hService, @C("DWORD") int dwNumServiceArgs, @C("LPCWSTR*") Addressable lpServiceArgVectors) {
        try {
            return (int)cfapi_h$constants$98.StartServiceW$MH().invokeExact(hService.address(), dwNumServiceArgs, lpServiceArgVectors.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle UnlockServiceDatabase$MH() {
        return cfapi_h$constants$98.UnlockServiceDatabase$MH();
    }
    public static @C("BOOL") int UnlockServiceDatabase (@C("SC_LOCK") Addressable ScLock) {
        try {
            return (int)cfapi_h$constants$98.UnlockServiceDatabase$MH().invokeExact(ScLock.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle NotifyServiceStatusChangeA$MH() {
        return cfapi_h$constants$98.NotifyServiceStatusChangeA$MH();
    }
    public static @C("DWORD") int NotifyServiceStatusChangeA (@C("SC_HANDLE") Addressable hService, @C("DWORD") int dwNotifyMask, @C("PSERVICE_NOTIFYA") Addressable pNotifyBuffer) {
        try {
            return (int)cfapi_h$constants$98.NotifyServiceStatusChangeA$MH().invokeExact(hService.address(), dwNotifyMask, pNotifyBuffer.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle NotifyServiceStatusChangeW$MH() {
        return cfapi_h$constants$98.NotifyServiceStatusChangeW$MH();
    }
    public static @C("DWORD") int NotifyServiceStatusChangeW (@C("SC_HANDLE") Addressable hService, @C("DWORD") int dwNotifyMask, @C("PSERVICE_NOTIFYW") Addressable pNotifyBuffer) {
        try {
            return (int)cfapi_h$constants$98.NotifyServiceStatusChangeW$MH().invokeExact(hService.address(), dwNotifyMask, pNotifyBuffer.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ControlServiceExA$MH() {
        return cfapi_h$constants$98.ControlServiceExA$MH();
    }
    public static @C("BOOL") int ControlServiceExA (@C("SC_HANDLE") Addressable hService, @C("DWORD") int dwControl, @C("DWORD") int dwInfoLevel, @C("PVOID") Addressable pControlParams) {
        try {
            return (int)cfapi_h$constants$98.ControlServiceExA$MH().invokeExact(hService.address(), dwControl, dwInfoLevel, pControlParams.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ControlServiceExW$MH() {
        return cfapi_h$constants$98.ControlServiceExW$MH();
    }
    public static @C("BOOL") int ControlServiceExW (@C("SC_HANDLE") Addressable hService, @C("DWORD") int dwControl, @C("DWORD") int dwInfoLevel, @C("PVOID") Addressable pControlParams) {
        try {
            return (int)cfapi_h$constants$98.ControlServiceExW$MH().invokeExact(hService.address(), dwControl, dwInfoLevel, pControlParams.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle QueryServiceDynamicInformation$MH() {
        return cfapi_h$constants$98.QueryServiceDynamicInformation$MH();
    }
    public static @C("BOOL") int QueryServiceDynamicInformation (@C("SERVICE_STATUS_HANDLE") Addressable hServiceStatus, @C("DWORD") int dwInfoLevel, @C("PVOID*") Addressable ppDynamicInfo) {
        try {
            return (int)cfapi_h$constants$98.QueryServiceDynamicInformation$MH().invokeExact(hServiceStatus.address(), dwInfoLevel, ppDynamicInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int SC_EVENT_DATABASE_CHANGE() {
        return cfapi_h$constants$98.SC_EVENT_DATABASE_CHANGE();
    }
    public static @C("int") int SC_EVENT_PROPERTY_CHANGE() {
        return cfapi_h$constants$98.SC_EVENT_PROPERTY_CHANGE();
    }
    public static @C("int") int SC_EVENT_STATUS_CHANGE() {
        return cfapi_h$constants$98.SC_EVENT_STATUS_CHANGE();
    }
    public static  MethodHandle SubscribeServiceChangeNotifications$MH() {
        return cfapi_h$constants$98.SubscribeServiceChangeNotifications$MH();
    }
    public static @C("DWORD") int SubscribeServiceChangeNotifications (@C("SC_HANDLE") Addressable hService, @C("SC_EVENT_TYPE") int eEventType, @C("PSC_NOTIFICATION_CALLBACK") Addressable pCallback, @C("PVOID") Addressable pCallbackContext, @C("PSC_NOTIFICATION_REGISTRATION*") Addressable pSubscription) {
        try {
            return (int)cfapi_h$constants$98.SubscribeServiceChangeNotifications$MH().invokeExact(hService.address(), eEventType, pCallback.address(), pCallbackContext.address(), pSubscription.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle UnsubscribeServiceChangeNotifications$MH() {
        return cfapi_h$constants$98.UnsubscribeServiceChangeNotifications$MH();
    }
    public static void UnsubscribeServiceChangeNotifications (@C("PSC_NOTIFICATION_REGISTRATION") Addressable pSubscription) {
        try {
            cfapi_h$constants$98.UnsubscribeServiceChangeNotifications$MH().invokeExact(pSubscription.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle WaitServiceState$MH() {
        return cfapi_h$constants$98.WaitServiceState$MH();
    }
    public static @C("DWORD") int WaitServiceState (@C("SC_HANDLE") Addressable hService, @C("DWORD") int dwNotify, @C("DWORD") int dwTimeout, @C("HANDLE") Addressable hCancelEvent) {
        try {
            return (int)cfapi_h$constants$98.WaitServiceState$MH().invokeExact(hService.address(), dwNotify, dwTimeout, hCancelEvent.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int ServiceRegistryStateParameters() {
        return cfapi_h$constants$98.ServiceRegistryStateParameters();
    }
    public static @C("int") int ServiceRegistryStatePersistent() {
        return cfapi_h$constants$98.ServiceRegistryStatePersistent();
    }
    public static @C("int") int MaxServiceRegistryStateType() {
        return cfapi_h$constants$98.MaxServiceRegistryStateType();
    }
    public static  MethodHandle GetServiceRegistryStateKey$MH() {
        return cfapi_h$constants$98.GetServiceRegistryStateKey$MH();
    }
    public static @C("DWORD") int GetServiceRegistryStateKey (@C("SERVICE_STATUS_HANDLE") Addressable ServiceStatusHandle, @C("SERVICE_REGISTRY_STATE_TYPE") int StateType, @C("DWORD") int AccessMask, @C("HKEY*") Addressable ServiceStateKey) {
        try {
            return (int)cfapi_h$constants$98.GetServiceRegistryStateKey$MH().invokeExact(ServiceStatusHandle.address(), StateType, AccessMask, ServiceStateKey.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int ServiceDirectoryPersistentState() {
        return cfapi_h$constants$98.ServiceDirectoryPersistentState();
    }
    public static @C("int") int ServiceDirectoryTypeMax() {
        return cfapi_h$constants$98.ServiceDirectoryTypeMax();
    }
    public static  MethodHandle GetServiceDirectory$MH() {
        return cfapi_h$constants$98.GetServiceDirectory$MH();
    }
    public static @C("DWORD") int GetServiceDirectory (@C("SERVICE_STATUS_HANDLE") Addressable hServiceStatus, @C("SERVICE_DIRECTORY_TYPE") int eDirectoryType, @C("PWCHAR") Addressable lpPathBuffer, @C("DWORD") int cchPathBufferLength, @C("DWORD*") Addressable lpcchRequiredBufferLength) {
        try {
            return (int)cfapi_h$constants$98.GetServiceDirectory$MH().invokeExact(hServiceStatus.address(), eDirectoryType, lpPathBuffer.address(), cchPathBufferLength, lpcchRequiredBufferLength.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmInstallIMEA$MH() {
        return cfapi_h$constants$99.ImmInstallIMEA$MH();
    }
    public static @C("HKL") MemoryAddress ImmInstallIMEA (@C("LPCSTR") Addressable lpszIMEFileName, @C("LPCSTR") Addressable lpszLayoutText) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$99.ImmInstallIMEA$MH().invokeExact(lpszIMEFileName.address(), lpszLayoutText.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmInstallIMEW$MH() {
        return cfapi_h$constants$99.ImmInstallIMEW$MH();
    }
    public static @C("HKL") MemoryAddress ImmInstallIMEW (@C("LPCWSTR") Addressable lpszIMEFileName, @C("LPCWSTR") Addressable lpszLayoutText) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$99.ImmInstallIMEW$MH().invokeExact(lpszIMEFileName.address(), lpszLayoutText.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmGetDefaultIMEWnd$MH() {
        return cfapi_h$constants$99.ImmGetDefaultIMEWnd$MH();
    }
    public static @C("HWND") MemoryAddress ImmGetDefaultIMEWnd (@C("HWND") Addressable x0) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$99.ImmGetDefaultIMEWnd$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmGetDescriptionA$MH() {
        return cfapi_h$constants$99.ImmGetDescriptionA$MH();
    }
    public static @C("UINT") int ImmGetDescriptionA (@C("HKL") Addressable x0, @C("LPSTR") Addressable lpszDescription, @C("UINT") int uBufLen) {
        try {
            return (int)cfapi_h$constants$99.ImmGetDescriptionA$MH().invokeExact(x0.address(), lpszDescription.address(), uBufLen);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmGetDescriptionW$MH() {
        return cfapi_h$constants$99.ImmGetDescriptionW$MH();
    }
    public static @C("UINT") int ImmGetDescriptionW (@C("HKL") Addressable x0, @C("LPWSTR") Addressable lpszDescription, @C("UINT") int uBufLen) {
        try {
            return (int)cfapi_h$constants$99.ImmGetDescriptionW$MH().invokeExact(x0.address(), lpszDescription.address(), uBufLen);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmGetIMEFileNameA$MH() {
        return cfapi_h$constants$99.ImmGetIMEFileNameA$MH();
    }
    public static @C("UINT") int ImmGetIMEFileNameA (@C("HKL") Addressable x0, @C("LPSTR") Addressable lpszFileName, @C("UINT") int uBufLen) {
        try {
            return (int)cfapi_h$constants$99.ImmGetIMEFileNameA$MH().invokeExact(x0.address(), lpszFileName.address(), uBufLen);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmGetIMEFileNameW$MH() {
        return cfapi_h$constants$99.ImmGetIMEFileNameW$MH();
    }
    public static @C("UINT") int ImmGetIMEFileNameW (@C("HKL") Addressable x0, @C("LPWSTR") Addressable lpszFileName, @C("UINT") int uBufLen) {
        try {
            return (int)cfapi_h$constants$99.ImmGetIMEFileNameW$MH().invokeExact(x0.address(), lpszFileName.address(), uBufLen);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmGetProperty$MH() {
        return cfapi_h$constants$99.ImmGetProperty$MH();
    }
    public static @C("DWORD") int ImmGetProperty (@C("HKL") Addressable x0, @C("DWORD") int x1) {
        try {
            return (int)cfapi_h$constants$99.ImmGetProperty$MH().invokeExact(x0.address(), x1);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmIsIME$MH() {
        return cfapi_h$constants$99.ImmIsIME$MH();
    }
    public static @C("BOOL") int ImmIsIME (@C("HKL") Addressable x0) {
        try {
            return (int)cfapi_h$constants$99.ImmIsIME$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmSimulateHotKey$MH() {
        return cfapi_h$constants$99.ImmSimulateHotKey$MH();
    }
    public static @C("BOOL") int ImmSimulateHotKey (@C("HWND") Addressable x0, @C("DWORD") int x1) {
        try {
            return (int)cfapi_h$constants$99.ImmSimulateHotKey$MH().invokeExact(x0.address(), x1);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmCreateContext$MH() {
        return cfapi_h$constants$99.ImmCreateContext$MH();
    }
    public static @C("HIMC") MemoryAddress ImmCreateContext () {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$99.ImmCreateContext$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmDestroyContext$MH() {
        return cfapi_h$constants$99.ImmDestroyContext$MH();
    }
    public static @C("BOOL") int ImmDestroyContext (@C("HIMC") Addressable x0) {
        try {
            return (int)cfapi_h$constants$99.ImmDestroyContext$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmGetContext$MH() {
        return cfapi_h$constants$99.ImmGetContext$MH();
    }
    public static @C("HIMC") MemoryAddress ImmGetContext (@C("HWND") Addressable x0) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$99.ImmGetContext$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmReleaseContext$MH() {
        return cfapi_h$constants$99.ImmReleaseContext$MH();
    }
    public static @C("BOOL") int ImmReleaseContext (@C("HWND") Addressable x0, @C("HIMC") Addressable x1) {
        try {
            return (int)cfapi_h$constants$99.ImmReleaseContext$MH().invokeExact(x0.address(), x1.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmAssociateContext$MH() {
        return cfapi_h$constants$99.ImmAssociateContext$MH();
    }
    public static @C("HIMC") MemoryAddress ImmAssociateContext (@C("HWND") Addressable x0, @C("HIMC") Addressable x1) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$99.ImmAssociateContext$MH().invokeExact(x0.address(), x1.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmAssociateContextEx$MH() {
        return cfapi_h$constants$99.ImmAssociateContextEx$MH();
    }
    public static @C("BOOL") int ImmAssociateContextEx (@C("HWND") Addressable x0, @C("HIMC") Addressable x1, @C("DWORD") int x2) {
        try {
            return (int)cfapi_h$constants$99.ImmAssociateContextEx$MH().invokeExact(x0.address(), x1.address(), x2);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmGetCompositionStringA$MH() {
        return cfapi_h$constants$99.ImmGetCompositionStringA$MH();
    }
    public static @C("LONG") int ImmGetCompositionStringA (@C("HIMC") Addressable x0, @C("DWORD") int x1, @C("LPVOID") Addressable lpBuf, @C("DWORD") int dwBufLen) {
        try {
            return (int)cfapi_h$constants$99.ImmGetCompositionStringA$MH().invokeExact(x0.address(), x1, lpBuf.address(), dwBufLen);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmGetCompositionStringW$MH() {
        return cfapi_h$constants$99.ImmGetCompositionStringW$MH();
    }
    public static @C("LONG") int ImmGetCompositionStringW (@C("HIMC") Addressable x0, @C("DWORD") int x1, @C("LPVOID") Addressable lpBuf, @C("DWORD") int dwBufLen) {
        try {
            return (int)cfapi_h$constants$99.ImmGetCompositionStringW$MH().invokeExact(x0.address(), x1, lpBuf.address(), dwBufLen);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmSetCompositionStringA$MH() {
        return cfapi_h$constants$99.ImmSetCompositionStringA$MH();
    }
    public static @C("BOOL") int ImmSetCompositionStringA (@C("HIMC") Addressable x0, @C("DWORD") int dwIndex, @C("LPVOID") Addressable lpComp, @C("DWORD") int dwCompLen, @C("LPVOID") Addressable lpRead, @C("DWORD") int dwReadLen) {
        try {
            return (int)cfapi_h$constants$99.ImmSetCompositionStringA$MH().invokeExact(x0.address(), dwIndex, lpComp.address(), dwCompLen, lpRead.address(), dwReadLen);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmSetCompositionStringW$MH() {
        return cfapi_h$constants$99.ImmSetCompositionStringW$MH();
    }
    public static @C("BOOL") int ImmSetCompositionStringW (@C("HIMC") Addressable x0, @C("DWORD") int dwIndex, @C("LPVOID") Addressable lpComp, @C("DWORD") int dwCompLen, @C("LPVOID") Addressable lpRead, @C("DWORD") int dwReadLen) {
        try {
            return (int)cfapi_h$constants$99.ImmSetCompositionStringW$MH().invokeExact(x0.address(), dwIndex, lpComp.address(), dwCompLen, lpRead.address(), dwReadLen);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmGetCandidateListCountA$MH() {
        return cfapi_h$constants$99.ImmGetCandidateListCountA$MH();
    }
    public static @C("DWORD") int ImmGetCandidateListCountA (@C("HIMC") Addressable x0, @C("LPDWORD") Addressable lpdwListCount) {
        try {
            return (int)cfapi_h$constants$99.ImmGetCandidateListCountA$MH().invokeExact(x0.address(), lpdwListCount.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmGetCandidateListCountW$MH() {
        return cfapi_h$constants$99.ImmGetCandidateListCountW$MH();
    }
    public static @C("DWORD") int ImmGetCandidateListCountW (@C("HIMC") Addressable x0, @C("LPDWORD") Addressable lpdwListCount) {
        try {
            return (int)cfapi_h$constants$99.ImmGetCandidateListCountW$MH().invokeExact(x0.address(), lpdwListCount.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmGetCandidateListA$MH() {
        return cfapi_h$constants$99.ImmGetCandidateListA$MH();
    }
    public static @C("DWORD") int ImmGetCandidateListA (@C("HIMC") Addressable x0, @C("DWORD") int deIndex, @C("LPCANDIDATELIST") Addressable lpCandList, @C("DWORD") int dwBufLen) {
        try {
            return (int)cfapi_h$constants$99.ImmGetCandidateListA$MH().invokeExact(x0.address(), deIndex, lpCandList.address(), dwBufLen);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmGetCandidateListW$MH() {
        return cfapi_h$constants$99.ImmGetCandidateListW$MH();
    }
    public static @C("DWORD") int ImmGetCandidateListW (@C("HIMC") Addressable x0, @C("DWORD") int deIndex, @C("LPCANDIDATELIST") Addressable lpCandList, @C("DWORD") int dwBufLen) {
        try {
            return (int)cfapi_h$constants$99.ImmGetCandidateListW$MH().invokeExact(x0.address(), deIndex, lpCandList.address(), dwBufLen);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmGetGuideLineA$MH() {
        return cfapi_h$constants$99.ImmGetGuideLineA$MH();
    }
    public static @C("DWORD") int ImmGetGuideLineA (@C("HIMC") Addressable x0, @C("DWORD") int dwIndex, @C("LPSTR") Addressable lpBuf, @C("DWORD") int dwBufLen) {
        try {
            return (int)cfapi_h$constants$99.ImmGetGuideLineA$MH().invokeExact(x0.address(), dwIndex, lpBuf.address(), dwBufLen);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ImmGetGuideLineW$MH() {
        return cfapi_h$constants$99.ImmGetGuideLineW$MH();
    }
    public static @C("DWORD") int ImmGetGuideLineW (@C("HIMC") Addressable x0, @C("DWORD") int dwIndex, @C("LPWSTR") Addressable lpBuf, @C("DWORD") int dwBufLen) {
        try {
            return (int)cfapi_h$constants$99.ImmGetGuideLineW$MH().invokeExact(x0.address(), dwIndex, lpBuf.address(), dwBufLen);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
}


