// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$111 extends cfapi_h$constants$110 {

    /* package-private */ cfapi_h$constants$111() {}
    static final MemorySegment szOID_KEY_USAGE_RESTRICTION$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.4");
    static final jdk.incubator.foreign.MemorySegment szOID_KEY_USAGE_RESTRICTION() { return szOID_KEY_USAGE_RESTRICTION$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_SUBJECT_ALT_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.7");
    static final jdk.incubator.foreign.MemorySegment szOID_SUBJECT_ALT_NAME() { return szOID_SUBJECT_ALT_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ISSUER_ALT_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.8");
    static final jdk.incubator.foreign.MemorySegment szOID_ISSUER_ALT_NAME() { return szOID_ISSUER_ALT_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_BASIC_CONSTRAINTS$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.10");
    static final jdk.incubator.foreign.MemorySegment szOID_BASIC_CONSTRAINTS() { return szOID_BASIC_CONSTRAINTS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KEY_USAGE$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.15");
    static final jdk.incubator.foreign.MemorySegment szOID_KEY_USAGE() { return szOID_KEY_USAGE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PRIVATEKEY_USAGE_PERIOD$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.16");
    static final jdk.incubator.foreign.MemorySegment szOID_PRIVATEKEY_USAGE_PERIOD() { return szOID_PRIVATEKEY_USAGE_PERIOD$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_BASIC_CONSTRAINTS2$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.19");
    static final jdk.incubator.foreign.MemorySegment szOID_BASIC_CONSTRAINTS2() { return szOID_BASIC_CONSTRAINTS2$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERT_POLICIES$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.32");
    static final jdk.incubator.foreign.MemorySegment szOID_CERT_POLICIES() { return szOID_CERT_POLICIES$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ANY_CERT_POLICY$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.32.0");
    static final jdk.incubator.foreign.MemorySegment szOID_ANY_CERT_POLICY() { return szOID_ANY_CERT_POLICY$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INHIBIT_ANY_POLICY$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.54");
    static final jdk.incubator.foreign.MemorySegment szOID_INHIBIT_ANY_POLICY() { return szOID_INHIBIT_ANY_POLICY$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_AUTHORITY_KEY_IDENTIFIER2$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.35");
    static final jdk.incubator.foreign.MemorySegment szOID_AUTHORITY_KEY_IDENTIFIER2() { return szOID_AUTHORITY_KEY_IDENTIFIER2$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_SUBJECT_KEY_IDENTIFIER$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.14");
    static final jdk.incubator.foreign.MemorySegment szOID_SUBJECT_KEY_IDENTIFIER() { return szOID_SUBJECT_KEY_IDENTIFIER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_SUBJECT_ALT_NAME2$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.17");
    static final jdk.incubator.foreign.MemorySegment szOID_SUBJECT_ALT_NAME2() { return szOID_SUBJECT_ALT_NAME2$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ISSUER_ALT_NAME2$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.18");
    static final jdk.incubator.foreign.MemorySegment szOID_ISSUER_ALT_NAME2() { return szOID_ISSUER_ALT_NAME2$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CRL_REASON_CODE$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.21");
    static final jdk.incubator.foreign.MemorySegment szOID_CRL_REASON_CODE() { return szOID_CRL_REASON_CODE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_REASON_CODE_HOLD$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.23");
    static final jdk.incubator.foreign.MemorySegment szOID_REASON_CODE_HOLD() { return szOID_REASON_CODE_HOLD$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CRL_DIST_POINTS$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.31");
    static final jdk.incubator.foreign.MemorySegment szOID_CRL_DIST_POINTS() { return szOID_CRL_DIST_POINTS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENHANCED_KEY_USAGE$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.37");
    static final jdk.incubator.foreign.MemorySegment szOID_ENHANCED_KEY_USAGE() { return szOID_ENHANCED_KEY_USAGE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ANY_ENHANCED_KEY_USAGE$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.37.0");
    static final jdk.incubator.foreign.MemorySegment szOID_ANY_ENHANCED_KEY_USAGE() { return szOID_ANY_ENHANCED_KEY_USAGE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CRL_NUMBER$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.20");
    static final jdk.incubator.foreign.MemorySegment szOID_CRL_NUMBER() { return szOID_CRL_NUMBER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DELTA_CRL_INDICATOR$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.27");
    static final jdk.incubator.foreign.MemorySegment szOID_DELTA_CRL_INDICATOR() { return szOID_DELTA_CRL_INDICATOR$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ISSUING_DIST_POINT$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.28");
    static final jdk.incubator.foreign.MemorySegment szOID_ISSUING_DIST_POINT() { return szOID_ISSUING_DIST_POINT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_FRESHEST_CRL$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.46");
    static final jdk.incubator.foreign.MemorySegment szOID_FRESHEST_CRL() { return szOID_FRESHEST_CRL$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NAME_CONSTRAINTS$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.30");
    static final jdk.incubator.foreign.MemorySegment szOID_NAME_CONSTRAINTS() { return szOID_NAME_CONSTRAINTS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_POLICY_MAPPINGS$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.33");
    static final jdk.incubator.foreign.MemorySegment szOID_POLICY_MAPPINGS() { return szOID_POLICY_MAPPINGS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_LEGACY_POLICY_MAPPINGS$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.5");
    static final jdk.incubator.foreign.MemorySegment szOID_LEGACY_POLICY_MAPPINGS() { return szOID_LEGACY_POLICY_MAPPINGS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_POLICY_CONSTRAINTS$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.36");
    static final jdk.incubator.foreign.MemorySegment szOID_POLICY_CONSTRAINTS() { return szOID_POLICY_CONSTRAINTS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RENEWAL_CERTIFICATE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.13.1");
    static final jdk.incubator.foreign.MemorySegment szOID_RENEWAL_CERTIFICATE() { return szOID_RENEWAL_CERTIFICATE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLLMENT_NAME_VALUE_PAIR$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.13.2.1");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLLMENT_NAME_VALUE_PAIR() { return szOID_ENROLLMENT_NAME_VALUE_PAIR$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLLMENT_CSP_PROVIDER$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.13.2.2");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLLMENT_CSP_PROVIDER() { return szOID_ENROLLMENT_CSP_PROVIDER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OS_VERSION$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.13.2.3");
    static final jdk.incubator.foreign.MemorySegment szOID_OS_VERSION() { return szOID_OS_VERSION$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLLMENT_AGENT$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.20.2.1");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLLMENT_AGENT() { return szOID_ENROLLMENT_AGENT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX() { return szOID_PKIX$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_PE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.1");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_PE() { return szOID_PKIX_PE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_AUTHORITY_INFO_ACCESS$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_AUTHORITY_INFO_ACCESS() { return szOID_AUTHORITY_INFO_ACCESS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_SUBJECT_INFO_ACCESS$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.1.11");
    static final jdk.incubator.foreign.MemorySegment szOID_SUBJECT_INFO_ACCESS() { return szOID_SUBJECT_INFO_ACCESS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_BIOMETRIC_EXT$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.1.2");
    static final jdk.incubator.foreign.MemorySegment szOID_BIOMETRIC_EXT() { return szOID_BIOMETRIC_EXT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_QC_STATEMENTS_EXT$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.1.3");
    static final jdk.incubator.foreign.MemorySegment szOID_QC_STATEMENTS_EXT() { return szOID_QC_STATEMENTS_EXT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_LOGOTYPE_EXT$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.1.12");
    static final jdk.incubator.foreign.MemorySegment szOID_LOGOTYPE_EXT() { return szOID_LOGOTYPE_EXT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_TLS_FEATURES_EXT$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.1.24");
    static final jdk.incubator.foreign.MemorySegment szOID_TLS_FEATURES_EXT() { return szOID_TLS_FEATURES_EXT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERT_EXTENSIONS$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.2.1.14");
    static final jdk.incubator.foreign.MemorySegment szOID_CERT_EXTENSIONS() { return szOID_CERT_EXTENSIONS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NEXT_UPDATE_LOCATION$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.2");
    static final jdk.incubator.foreign.MemorySegment szOID_NEXT_UPDATE_LOCATION() { return szOID_NEXT_UPDATE_LOCATION$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_REMOVE_CERTIFICATE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.8.1");
    static final jdk.incubator.foreign.MemorySegment szOID_REMOVE_CERTIFICATE() { return szOID_REMOVE_CERTIFICATE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CROSS_CERT_DIST_POINTS$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.9.1");
    static final jdk.incubator.foreign.MemorySegment szOID_CROSS_CERT_DIST_POINTS() { return szOID_CROSS_CERT_DIST_POINTS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CTL$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.1");
    static final jdk.incubator.foreign.MemorySegment szOID_CTL() { return szOID_CTL$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_SORTED_CTL$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_SORTED_CTL() { return szOID_SORTED_CTL$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_SERIALIZED$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.3.1");
    static final jdk.incubator.foreign.MemorySegment szOID_SERIALIZED() { return szOID_SERIALIZED$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NT_PRINCIPAL_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.20.2.3");
    static final jdk.incubator.foreign.MemorySegment szOID_NT_PRINCIPAL_NAME() { return szOID_NT_PRINCIPAL_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INTERNATIONALIZED_EMAIL_ADDRESS$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.20.2.4");
    static final jdk.incubator.foreign.MemorySegment szOID_INTERNATIONALIZED_EMAIL_ADDRESS() { return szOID_INTERNATIONALIZED_EMAIL_ADDRESS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PRODUCT_UPDATE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.31.1");
    static final jdk.incubator.foreign.MemorySegment szOID_PRODUCT_UPDATE() { return szOID_PRODUCT_UPDATE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ANY_APPLICATION_POLICY$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.12.1");
    static final jdk.incubator.foreign.MemorySegment szOID_ANY_APPLICATION_POLICY() { return szOID_ANY_APPLICATION_POLICY$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_AUTO_ENROLL_CTL_USAGE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.20.1");
    static final jdk.incubator.foreign.MemorySegment szOID_AUTO_ENROLL_CTL_USAGE() { return szOID_AUTO_ENROLL_CTL_USAGE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_CERTTYPE_EXTENSION$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.20.2");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_CERTTYPE_EXTENSION() { return szOID_ENROLL_CERTTYPE_EXTENSION$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERT_MANIFOLD$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.20.3");
    static final jdk.incubator.foreign.MemorySegment szOID_CERT_MANIFOLD() { return szOID_CERT_MANIFOLD$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERTSRV_CA_VERSION$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.1");
    static final jdk.incubator.foreign.MemorySegment szOID_CERTSRV_CA_VERSION() { return szOID_CERTSRV_CA_VERSION$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERTSRV_PREVIOUS_CERT_HASH$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.2");
    static final jdk.incubator.foreign.MemorySegment szOID_CERTSRV_PREVIOUS_CERT_HASH() { return szOID_CERTSRV_PREVIOUS_CERT_HASH$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CRL_VIRTUAL_BASE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.3");
    static final jdk.incubator.foreign.MemorySegment szOID_CRL_VIRTUAL_BASE() { return szOID_CRL_VIRTUAL_BASE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CRL_NEXT_PUBLISH$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.4");
    static final jdk.incubator.foreign.MemorySegment szOID_CRL_NEXT_PUBLISH() { return szOID_CRL_NEXT_PUBLISH$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_CA_EXCHANGE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.5");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_CA_EXCHANGE() { return szOID_KP_CA_EXCHANGE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_PRIVACY_CA$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.36");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_PRIVACY_CA() { return szOID_KP_PRIVACY_CA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_KEY_RECOVERY_AGENT$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.6");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_KEY_RECOVERY_AGENT() { return szOID_KP_KEY_RECOVERY_AGENT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERTIFICATE_TEMPLATE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.7");
    static final jdk.incubator.foreign.MemorySegment szOID_CERTIFICATE_TEMPLATE() { return szOID_CERTIFICATE_TEMPLATE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENTERPRISE_OID_ROOT$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.8");
    static final jdk.incubator.foreign.MemorySegment szOID_ENTERPRISE_OID_ROOT() { return szOID_ENTERPRISE_OID_ROOT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RDN_DUMMY_SIGNER$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.9");
    static final jdk.incubator.foreign.MemorySegment szOID_RDN_DUMMY_SIGNER() { return szOID_RDN_DUMMY_SIGNER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_APPLICATION_CERT_POLICIES$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.10");
    static final jdk.incubator.foreign.MemorySegment szOID_APPLICATION_CERT_POLICIES() { return szOID_APPLICATION_CERT_POLICIES$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_APPLICATION_POLICY_MAPPINGS$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.11");
    static final jdk.incubator.foreign.MemorySegment szOID_APPLICATION_POLICY_MAPPINGS() { return szOID_APPLICATION_POLICY_MAPPINGS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_APPLICATION_POLICY_CONSTRAINTS$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.12");
    static final jdk.incubator.foreign.MemorySegment szOID_APPLICATION_POLICY_CONSTRAINTS() { return szOID_APPLICATION_POLICY_CONSTRAINTS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ARCHIVED_KEY_ATTR$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.13");
    static final jdk.incubator.foreign.MemorySegment szOID_ARCHIVED_KEY_ATTR() { return szOID_ARCHIVED_KEY_ATTR$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CRL_SELF_CDP$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.14");
    static final jdk.incubator.foreign.MemorySegment szOID_CRL_SELF_CDP() { return szOID_CRL_SELF_CDP$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_REQUIRE_CERT_CHAIN_POLICY$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.15");
    static final jdk.incubator.foreign.MemorySegment szOID_REQUIRE_CERT_CHAIN_POLICY() { return szOID_REQUIRE_CERT_CHAIN_POLICY$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ARCHIVED_KEY_CERT_HASH$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.16");
    static final jdk.incubator.foreign.MemorySegment szOID_ARCHIVED_KEY_CERT_HASH() { return szOID_ARCHIVED_KEY_CERT_HASH$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ISSUED_CERT_HASH$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.17");
    static final jdk.incubator.foreign.MemorySegment szOID_ISSUED_CERT_HASH() { return szOID_ISSUED_CERT_HASH$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DS_EMAIL_REPLICATION$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.19");
    static final jdk.incubator.foreign.MemorySegment szOID_DS_EMAIL_REPLICATION() { return szOID_DS_EMAIL_REPLICATION$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_REQUEST_CLIENT_INFO$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.20");
    static final jdk.incubator.foreign.MemorySegment szOID_REQUEST_CLIENT_INFO() { return szOID_REQUEST_CLIENT_INFO$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENCRYPTED_KEY_HASH$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.21");
    static final jdk.incubator.foreign.MemorySegment szOID_ENCRYPTED_KEY_HASH() { return szOID_ENCRYPTED_KEY_HASH$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERTSRV_CROSSCA_VERSION$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.22");
    static final jdk.incubator.foreign.MemorySegment szOID_CERTSRV_CROSSCA_VERSION() { return szOID_CERTSRV_CROSSCA_VERSION$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NTDS_REPLICATION$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.25.1");
    static final jdk.incubator.foreign.MemorySegment szOID_NTDS_REPLICATION() { return szOID_NTDS_REPLICATION$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_SUBJECT_DIR_ATTRS$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.9");
    static final jdk.incubator.foreign.MemorySegment szOID_SUBJECT_DIR_ATTRS() { return szOID_SUBJECT_DIR_ATTRS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_KP$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.3");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_KP() { return szOID_PKIX_KP$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_KP_SERVER_AUTH$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.3.1");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_KP_SERVER_AUTH() { return szOID_PKIX_KP_SERVER_AUTH$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_KP_CLIENT_AUTH$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.3.2");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_KP_CLIENT_AUTH() { return szOID_PKIX_KP_CLIENT_AUTH$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_KP_CODE_SIGNING$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.3.3");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_KP_CODE_SIGNING() { return szOID_PKIX_KP_CODE_SIGNING$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_KP_EMAIL_PROTECTION$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.3.4");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_KP_EMAIL_PROTECTION() { return szOID_PKIX_KP_EMAIL_PROTECTION$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_KP_IPSEC_END_SYSTEM$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.3.5");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_KP_IPSEC_END_SYSTEM() { return szOID_PKIX_KP_IPSEC_END_SYSTEM$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_KP_IPSEC_TUNNEL$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.3.6");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_KP_IPSEC_TUNNEL() { return szOID_PKIX_KP_IPSEC_TUNNEL$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_KP_IPSEC_USER$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.3.7");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_KP_IPSEC_USER() { return szOID_PKIX_KP_IPSEC_USER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_KP_TIMESTAMP_SIGNING$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.3.8");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_KP_TIMESTAMP_SIGNING() { return szOID_PKIX_KP_TIMESTAMP_SIGNING$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_KP_OCSP_SIGNING$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.3.9");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_KP_OCSP_SIGNING() { return szOID_PKIX_KP_OCSP_SIGNING$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_OCSP_NOCHECK$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.48.1.5");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_OCSP_NOCHECK() { return szOID_PKIX_OCSP_NOCHECK$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_OCSP_NONCE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.48.1.2");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_OCSP_NONCE() { return szOID_PKIX_OCSP_NONCE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_IPSEC_KP_IKE_INTERMEDIATE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.8.2.2");
    static final jdk.incubator.foreign.MemorySegment szOID_IPSEC_KP_IKE_INTERMEDIATE() { return szOID_IPSEC_KP_IKE_INTERMEDIATE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKINIT_KP_KDC$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.2.3.5");
    static final jdk.incubator.foreign.MemorySegment szOID_PKINIT_KP_KDC() { return szOID_PKINIT_KP_KDC$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_CTL_USAGE_SIGNING$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.1");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_CTL_USAGE_SIGNING() { return szOID_KP_CTL_USAGE_SIGNING$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_TIME_STAMP_SIGNING$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.2");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_TIME_STAMP_SIGNING() { return szOID_KP_TIME_STAMP_SIGNING$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_SERVER_GATED_CRYPTO$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.3");
    static final jdk.incubator.foreign.MemorySegment szOID_SERVER_GATED_CRYPTO() { return szOID_SERVER_GATED_CRYPTO$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_SGC_NETSCAPE$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113730.4.1");
    static final jdk.incubator.foreign.MemorySegment szOID_SGC_NETSCAPE() { return szOID_SGC_NETSCAPE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_EFS$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.4");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_EFS() { return szOID_KP_EFS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_EFS_RECOVERY$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.4.1");
    static final jdk.incubator.foreign.MemorySegment szOID_EFS_RECOVERY() { return szOID_EFS_RECOVERY$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_WHQL_CRYPTO$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.5");
    static final jdk.incubator.foreign.MemorySegment szOID_WHQL_CRYPTO() { return szOID_WHQL_CRYPTO$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ATTEST_WHQL_CRYPTO$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.5.1");
    static final jdk.incubator.foreign.MemorySegment szOID_ATTEST_WHQL_CRYPTO() { return szOID_ATTEST_WHQL_CRYPTO$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NT5_CRYPTO$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.6");
    static final jdk.incubator.foreign.MemorySegment szOID_NT5_CRYPTO() { return szOID_NT5_CRYPTO$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OEM_WHQL_CRYPTO$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.7");
    static final jdk.incubator.foreign.MemorySegment szOID_OEM_WHQL_CRYPTO() { return szOID_OEM_WHQL_CRYPTO$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_EMBEDDED_NT_CRYPTO$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.8");
    static final jdk.incubator.foreign.MemorySegment szOID_EMBEDDED_NT_CRYPTO() { return szOID_EMBEDDED_NT_CRYPTO$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ROOT_LIST_SIGNER$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.9");
    static final jdk.incubator.foreign.MemorySegment szOID_ROOT_LIST_SIGNER() { return szOID_ROOT_LIST_SIGNER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_QUALIFIED_SUBORDINATION$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.10");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_QUALIFIED_SUBORDINATION() { return szOID_KP_QUALIFIED_SUBORDINATION$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_KEY_RECOVERY$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.11");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_KEY_RECOVERY() { return szOID_KP_KEY_RECOVERY$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_DOCUMENT_SIGNING$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.12");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_DOCUMENT_SIGNING() { return szOID_KP_DOCUMENT_SIGNING$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_LIFETIME_SIGNING$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.13");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_LIFETIME_SIGNING() { return szOID_KP_LIFETIME_SIGNING$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_MOBILE_DEVICE_SOFTWARE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.14");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_MOBILE_DEVICE_SOFTWARE() { return szOID_KP_MOBILE_DEVICE_SOFTWARE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_SMART_DISPLAY$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.15");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_SMART_DISPLAY() { return szOID_KP_SMART_DISPLAY$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_CSP_SIGNATURE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.16");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_CSP_SIGNATURE() { return szOID_KP_CSP_SIGNATURE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_FLIGHT_SIGNING$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.27");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_FLIGHT_SIGNING() { return szOID_KP_FLIGHT_SIGNING$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PLATFORM_MANIFEST_BINARY_ID$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.28");
    static final jdk.incubator.foreign.MemorySegment szOID_PLATFORM_MANIFEST_BINARY_ID() { return szOID_PLATFORM_MANIFEST_BINARY_ID$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DRM$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.5.1");
    static final jdk.incubator.foreign.MemorySegment szOID_DRM() { return szOID_DRM$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DRM_INDIVIDUALIZATION$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.5.2");
    static final jdk.incubator.foreign.MemorySegment szOID_DRM_INDIVIDUALIZATION() { return szOID_DRM_INDIVIDUALIZATION$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_LICENSES$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.6.1");
    static final jdk.incubator.foreign.MemorySegment szOID_LICENSES() { return szOID_LICENSES$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_LICENSE_SERVER$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.6.2");
    static final jdk.incubator.foreign.MemorySegment szOID_LICENSE_SERVER() { return szOID_LICENSE_SERVER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_SMARTCARD_LOGON$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.20.2.2");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_SMARTCARD_LOGON() { return szOID_KP_SMARTCARD_LOGON$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_KERNEL_MODE_CODE_SIGNING$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.61.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_KERNEL_MODE_CODE_SIGNING() { return szOID_KP_KERNEL_MODE_CODE_SIGNING$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_KERNEL_MODE_TRUSTED_BOOT_SIGNING$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.61.4.1");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_KERNEL_MODE_TRUSTED_BOOT_SIGNING() { return szOID_KP_KERNEL_MODE_TRUSTED_BOOT_SIGNING$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_REVOKED_LIST_SIGNER$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.19");
    static final jdk.incubator.foreign.MemorySegment szOID_REVOKED_LIST_SIGNER() { return szOID_REVOKED_LIST_SIGNER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_WINDOWS_KITS_SIGNER$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.20");
    static final jdk.incubator.foreign.MemorySegment szOID_WINDOWS_KITS_SIGNER() { return szOID_WINDOWS_KITS_SIGNER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_WINDOWS_RT_SIGNER$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.21");
    static final jdk.incubator.foreign.MemorySegment szOID_WINDOWS_RT_SIGNER() { return szOID_WINDOWS_RT_SIGNER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PROTECTED_PROCESS_LIGHT_SIGNER$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.22");
    static final jdk.incubator.foreign.MemorySegment szOID_PROTECTED_PROCESS_LIGHT_SIGNER() { return szOID_PROTECTED_PROCESS_LIGHT_SIGNER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_WINDOWS_TCB_SIGNER$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.23");
    static final jdk.incubator.foreign.MemorySegment szOID_WINDOWS_TCB_SIGNER() { return szOID_WINDOWS_TCB_SIGNER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PROTECTED_PROCESS_SIGNER$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.24");
    static final jdk.incubator.foreign.MemorySegment szOID_PROTECTED_PROCESS_SIGNER() { return szOID_PROTECTED_PROCESS_SIGNER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_WINDOWS_THIRD_PARTY_COMPONENT_SIGNER$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.25");
    static final jdk.incubator.foreign.MemorySegment szOID_WINDOWS_THIRD_PARTY_COMPONENT_SIGNER() { return szOID_WINDOWS_THIRD_PARTY_COMPONENT_SIGNER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_WINDOWS_SOFTWARE_EXTENSION_SIGNER$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.26");
    static final jdk.incubator.foreign.MemorySegment szOID_WINDOWS_SOFTWARE_EXTENSION_SIGNER() { return szOID_WINDOWS_SOFTWARE_EXTENSION_SIGNER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DISALLOWED_LIST$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.30");
    static final jdk.incubator.foreign.MemorySegment szOID_DISALLOWED_LIST() { return szOID_DISALLOWED_LIST$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PIN_RULES_SIGNER$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.31");
    static final jdk.incubator.foreign.MemorySegment szOID_PIN_RULES_SIGNER() { return szOID_PIN_RULES_SIGNER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PIN_RULES_CTL$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.32");
    static final jdk.incubator.foreign.MemorySegment szOID_PIN_RULES_CTL() { return szOID_PIN_RULES_CTL$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PIN_RULES_EXT$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.33");
    static final jdk.incubator.foreign.MemorySegment szOID_PIN_RULES_EXT() { return szOID_PIN_RULES_EXT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PIN_RULES_DOMAIN_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.34");
    static final jdk.incubator.foreign.MemorySegment szOID_PIN_RULES_DOMAIN_NAME() { return szOID_PIN_RULES_DOMAIN_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PIN_RULES_LOG_END_DATE_EXT$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.35");
    static final jdk.incubator.foreign.MemorySegment szOID_PIN_RULES_LOG_END_DATE_EXT() { return szOID_PIN_RULES_LOG_END_DATE_EXT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_IUM_SIGNING$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.37");
    static final jdk.incubator.foreign.MemorySegment szOID_IUM_SIGNING() { return szOID_IUM_SIGNING$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_EV_WHQL_CRYPTO$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.39");
    static final jdk.incubator.foreign.MemorySegment szOID_EV_WHQL_CRYPTO() { return szOID_EV_WHQL_CRYPTO$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_BIOMETRIC_SIGNING$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.41");
    static final jdk.incubator.foreign.MemorySegment szOID_BIOMETRIC_SIGNING() { return szOID_BIOMETRIC_SIGNING$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENCLAVE_SIGNING$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.42");
    static final jdk.incubator.foreign.MemorySegment szOID_ENCLAVE_SIGNING() { return szOID_ENCLAVE_SIGNING$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_SYNC_ROOT_CTL_EXT$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.50");
    static final jdk.incubator.foreign.MemorySegment szOID_SYNC_ROOT_CTL_EXT() { return szOID_SYNC_ROOT_CTL_EXT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_HPKP_DOMAIN_NAME_CTL$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.60");
    static final jdk.incubator.foreign.MemorySegment szOID_HPKP_DOMAIN_NAME_CTL() { return szOID_HPKP_DOMAIN_NAME_CTL$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_HPKP_HEADER_VALUE_CTL$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.3.61");
    static final jdk.incubator.foreign.MemorySegment szOID_HPKP_HEADER_VALUE_CTL() { return szOID_HPKP_HEADER_VALUE_CTL$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_KERNEL_MODE_HAL_EXTENSION_SIGNING$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.61.5.1");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_KERNEL_MODE_HAL_EXTENSION_SIGNING() { return szOID_KP_KERNEL_MODE_HAL_EXTENSION_SIGNING$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_WINDOWS_STORE_SIGNER$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.76.3.1");
    static final jdk.incubator.foreign.MemorySegment szOID_WINDOWS_STORE_SIGNER() { return szOID_WINDOWS_STORE_SIGNER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DYNAMIC_CODE_GEN_SIGNER$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.76.5.1");
    static final jdk.incubator.foreign.MemorySegment szOID_DYNAMIC_CODE_GEN_SIGNER() { return szOID_DYNAMIC_CODE_GEN_SIGNER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_MICROSOFT_PUBLISHER_SIGNER$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.76.8.1");
    static final jdk.incubator.foreign.MemorySegment szOID_MICROSOFT_PUBLISHER_SIGNER() { return szOID_MICROSOFT_PUBLISHER_SIGNER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_YESNO_TRUST_ATTR$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.4.1");
    static final jdk.incubator.foreign.MemorySegment szOID_YESNO_TRUST_ATTR() { return szOID_YESNO_TRUST_ATTR$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_SITE_PIN_RULES_INDEX_ATTR$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.4.2");
    static final jdk.incubator.foreign.MemorySegment szOID_SITE_PIN_RULES_INDEX_ATTR() { return szOID_SITE_PIN_RULES_INDEX_ATTR$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_SITE_PIN_RULES_FLAGS_ATTR$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.4.3");
    static final jdk.incubator.foreign.MemorySegment szOID_SITE_PIN_RULES_FLAGS_ATTR() { return szOID_SITE_PIN_RULES_FLAGS_ATTR$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_POLICY_QUALIFIER_CPS$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.2.1");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_POLICY_QUALIFIER_CPS() { return szOID_PKIX_POLICY_QUALIFIER_CPS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_POLICY_QUALIFIER_USERNOTICE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.2.2");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_POLICY_QUALIFIER_USERNOTICE() { return szOID_PKIX_POLICY_QUALIFIER_USERNOTICE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ROOT_PROGRAM_FLAGS$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.60.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_ROOT_PROGRAM_FLAGS() { return szOID_ROOT_PROGRAM_FLAGS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERT_POLICIES_95_QUALIFIER1$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113733.1.7.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_CERT_POLICIES_95_QUALIFIER1() { return szOID_CERT_POLICIES_95_QUALIFIER1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RDN_TPM_MANUFACTURER$SEGMENT_CONSTANT_ = CLinker.toCString("2.23.133.2.1");
    static final jdk.incubator.foreign.MemorySegment szOID_RDN_TPM_MANUFACTURER() { return szOID_RDN_TPM_MANUFACTURER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RDN_TPM_MODEL$SEGMENT_CONSTANT_ = CLinker.toCString("2.23.133.2.2");
    static final jdk.incubator.foreign.MemorySegment szOID_RDN_TPM_MODEL() { return szOID_RDN_TPM_MODEL$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RDN_TPM_VERSION$SEGMENT_CONSTANT_ = CLinker.toCString("2.23.133.2.3");
    static final jdk.incubator.foreign.MemorySegment szOID_RDN_TPM_VERSION() { return szOID_RDN_TPM_VERSION$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RDN_TCG_PLATFORM_MANUFACTURER$SEGMENT_CONSTANT_ = CLinker.toCString("2.23.133.2.4");
    static final jdk.incubator.foreign.MemorySegment szOID_RDN_TCG_PLATFORM_MANUFACTURER() { return szOID_RDN_TCG_PLATFORM_MANUFACTURER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RDN_TCG_PLATFORM_MODEL$SEGMENT_CONSTANT_ = CLinker.toCString("2.23.133.2.5");
    static final jdk.incubator.foreign.MemorySegment szOID_RDN_TCG_PLATFORM_MODEL() { return szOID_RDN_TCG_PLATFORM_MODEL$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RDN_TCG_PLATFORM_VERSION$SEGMENT_CONSTANT_ = CLinker.toCString("2.23.133.2.6");
    static final jdk.incubator.foreign.MemorySegment szOID_RDN_TCG_PLATFORM_VERSION() { return szOID_RDN_TCG_PLATFORM_VERSION$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CT_CERT_SCTLIST$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.11129.2.4.2");
    static final jdk.incubator.foreign.MemorySegment szOID_CT_CERT_SCTLIST() { return szOID_CT_CERT_SCTLIST$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_EK_INFO$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.23");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_EK_INFO() { return szOID_ENROLL_EK_INFO$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_AIK_INFO$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.39");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_AIK_INFO() { return szOID_ENROLL_AIK_INFO$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_ATTESTATION_STATEMENT$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.24");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_ATTESTATION_STATEMENT() { return szOID_ENROLL_ATTESTATION_STATEMENT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_KSP_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.25");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_KSP_NAME() { return szOID_ENROLL_KSP_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_EKPUB_CHALLENGE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.26");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_EKPUB_CHALLENGE() { return szOID_ENROLL_EKPUB_CHALLENGE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_CAXCHGCERT_HASH$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.27");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_CAXCHGCERT_HASH() { return szOID_ENROLL_CAXCHGCERT_HASH$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_ATTESTATION_CHALLENGE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.28");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_ATTESTATION_CHALLENGE() { return szOID_ENROLL_ATTESTATION_CHALLENGE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_ENCRYPTION_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.29");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_ENCRYPTION_ALGORITHM() { return szOID_ENROLL_ENCRYPTION_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_TPM_EK_CERTIFICATE$SEGMENT_CONSTANT_ = CLinker.toCString("2.23.133.8.1");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_TPM_EK_CERTIFICATE() { return szOID_KP_TPM_EK_CERTIFICATE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_TPM_PLATFORM_CERTIFICATE$SEGMENT_CONSTANT_ = CLinker.toCString("2.23.133.8.2");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_TPM_PLATFORM_CERTIFICATE() { return szOID_KP_TPM_PLATFORM_CERTIFICATE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KP_TPM_AIK_CERTIFICATE$SEGMENT_CONSTANT_ = CLinker.toCString("2.23.133.8.3");
    static final jdk.incubator.foreign.MemorySegment szOID_KP_TPM_AIK_CERTIFICATE() { return szOID_KP_TPM_AIK_CERTIFICATE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_EKVERIFYKEY$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.30");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_EKVERIFYKEY() { return szOID_ENROLL_EKVERIFYKEY$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_EKVERIFYCERT$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.31");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_EKVERIFYCERT() { return szOID_ENROLL_EKVERIFYCERT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_EKVERIFYCREDS$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.32");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_EKVERIFYCREDS() { return szOID_ENROLL_EKVERIFYCREDS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_SCEP_ERROR$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.33");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_SCEP_ERROR() { return szOID_ENROLL_SCEP_ERROR$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_SCEP_SERVER_STATE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.34");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_SCEP_SERVER_STATE() { return szOID_ENROLL_SCEP_SERVER_STATE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_SCEP_CHALLENGE_ANSWER$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.35");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_SCEP_CHALLENGE_ANSWER() { return szOID_ENROLL_SCEP_CHALLENGE_ANSWER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_SCEP_CLIENT_REQUEST$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.37");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_SCEP_CLIENT_REQUEST() { return szOID_ENROLL_SCEP_CLIENT_REQUEST$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_SCEP_SERVER_MESSAGE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.38");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_SCEP_SERVER_MESSAGE() { return szOID_ENROLL_SCEP_SERVER_MESSAGE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_SCEP_SERVER_SECRET$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.40");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_SCEP_SERVER_SECRET() { return szOID_ENROLL_SCEP_SERVER_SECRET$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_KEY_AFFINITY$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.41");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_KEY_AFFINITY() { return szOID_ENROLL_KEY_AFFINITY$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_SCEP_SIGNER_HASH$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.42");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_SCEP_SIGNER_HASH() { return szOID_ENROLL_SCEP_SIGNER_HASH$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ENROLL_EK_CA_KEYID$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.21.43");
    static final jdk.incubator.foreign.MemorySegment szOID_ENROLL_EK_CA_KEYID() { return szOID_ENROLL_EK_CA_KEYID$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ATTR_SUPPORTED_ALGORITHMS$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.52");
    static final jdk.incubator.foreign.MemorySegment szOID_ATTR_SUPPORTED_ALGORITHMS() { return szOID_ATTR_SUPPORTED_ALGORITHMS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ATTR_TPM_SPECIFICATION$SEGMENT_CONSTANT_ = CLinker.toCString("2.23.133.2.16");
    static final jdk.incubator.foreign.MemorySegment szOID_ATTR_TPM_SPECIFICATION() { return szOID_ATTR_TPM_SPECIFICATION$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ATTR_PLATFORM_SPECIFICATION$SEGMENT_CONSTANT_ = CLinker.toCString("2.23.133.2.17");
    static final jdk.incubator.foreign.MemorySegment szOID_ATTR_PLATFORM_SPECIFICATION() { return szOID_ATTR_PLATFORM_SPECIFICATION$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ATTR_TPM_SECURITY_ASSERTIONS$SEGMENT_CONSTANT_ = CLinker.toCString("2.23.133.2.18");
    static final jdk.incubator.foreign.MemorySegment szOID_ATTR_TPM_SECURITY_ASSERTIONS() { return szOID_ATTR_TPM_SECURITY_ASSERTIONS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_ACC_DESCR$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.48");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_ACC_DESCR() { return szOID_PKIX_ACC_DESCR$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_OCSP$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.48.1");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_OCSP() { return szOID_PKIX_OCSP$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_CA_ISSUERS$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.48.2");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_CA_ISSUERS() { return szOID_PKIX_CA_ISSUERS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_TIME_STAMPING$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.48.3");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_TIME_STAMPING() { return szOID_PKIX_TIME_STAMPING$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_CA_REPOSITORY$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.48.5");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_CA_REPOSITORY() { return szOID_PKIX_CA_REPOSITORY$SEGMENT_CONSTANT_; }

    static final int CRL_DIST_POINT_ERR_CRL_ISSUER_BIT() { return (int)2147483648L; }

    static final int CERT_EXCLUDED_SUBTREE_BIT() { return (int)2147483648L; }

    static final int SORTED_CTL_EXT_FLAGS_OFFSET() { return (int)0L; }

    static final int SORTED_CTL_EXT_COUNT_OFFSET() { return (int)4L; }

    static final int SORTED_CTL_EXT_MAX_COLLISION_OFFSET() { return (int)8L; }

    static final int SORTED_CTL_EXT_HASH_BUCKET_OFFSET() { return (int)12L; }

    static final int CERT_DSS_SIGNATURE_LEN() { return (int)40L; }

    static final int CERT_MAX_ASN_ENCODED_DSS_SIGNATURE_LEN() { return (int)48L; }

    static final int CRYPT_X942_PUB_INFO_BYTE_LENGTH() { return (int)64L; }

    static final MemorySegment szOID_QC_EU_COMPLIANCE$SEGMENT_CONSTANT_ = CLinker.toCString("0.4.0.1862.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_QC_EU_COMPLIANCE() { return szOID_QC_EU_COMPLIANCE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_QC_SSCD$SEGMENT_CONSTANT_ = CLinker.toCString("0.4.0.1862.1.4");
    static final jdk.incubator.foreign.MemorySegment szOID_QC_SSCD() { return szOID_QC_SSCD$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_VERISIGN_PRIVATE_6_9$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113733.1.6.9");
    static final jdk.incubator.foreign.MemorySegment szOID_VERISIGN_PRIVATE_6_9() { return szOID_VERISIGN_PRIVATE_6_9$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_VERISIGN_ONSITE_JURISDICTION_HASH$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113733.1.6.11");
    static final jdk.incubator.foreign.MemorySegment szOID_VERISIGN_ONSITE_JURISDICTION_HASH() { return szOID_VERISIGN_ONSITE_JURISDICTION_HASH$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_VERISIGN_BITSTRING_6_13$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113733.1.6.13");
    static final jdk.incubator.foreign.MemorySegment szOID_VERISIGN_BITSTRING_6_13() { return szOID_VERISIGN_BITSTRING_6_13$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_VERISIGN_ISS_STRONG_CRYPTO$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113733.1.8.1");
    static final jdk.incubator.foreign.MemorySegment szOID_VERISIGN_ISS_STRONG_CRYPTO() { return szOID_VERISIGN_ISS_STRONG_CRYPTO$SEGMENT_CONSTANT_; }

    static final MemorySegment szOIDVerisign_MessageType$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113733.1.9.2");
    static final jdk.incubator.foreign.MemorySegment szOIDVerisign_MessageType() { return szOIDVerisign_MessageType$SEGMENT_CONSTANT_; }

    static final MemorySegment szOIDVerisign_PkiStatus$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113733.1.9.3");
    static final jdk.incubator.foreign.MemorySegment szOIDVerisign_PkiStatus() { return szOIDVerisign_PkiStatus$SEGMENT_CONSTANT_; }

    static final MemorySegment szOIDVerisign_FailInfo$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113733.1.9.4");
    static final jdk.incubator.foreign.MemorySegment szOIDVerisign_FailInfo() { return szOIDVerisign_FailInfo$SEGMENT_CONSTANT_; }

    static final MemorySegment szOIDVerisign_SenderNonce$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113733.1.9.5");
    static final jdk.incubator.foreign.MemorySegment szOIDVerisign_SenderNonce() { return szOIDVerisign_SenderNonce$SEGMENT_CONSTANT_; }

    static final MemorySegment szOIDVerisign_RecipientNonce$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113733.1.9.6");
    static final jdk.incubator.foreign.MemorySegment szOIDVerisign_RecipientNonce() { return szOIDVerisign_RecipientNonce$SEGMENT_CONSTANT_; }

    static final MemorySegment szOIDVerisign_TransactionID$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113733.1.9.7");
    static final jdk.incubator.foreign.MemorySegment szOIDVerisign_TransactionID() { return szOIDVerisign_TransactionID$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NETSCAPE$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113730");
    static final jdk.incubator.foreign.MemorySegment szOID_NETSCAPE() { return szOID_NETSCAPE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NETSCAPE_CERT_EXTENSION$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113730.1");
    static final jdk.incubator.foreign.MemorySegment szOID_NETSCAPE_CERT_EXTENSION() { return szOID_NETSCAPE_CERT_EXTENSION$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NETSCAPE_CERT_TYPE$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113730.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_NETSCAPE_CERT_TYPE() { return szOID_NETSCAPE_CERT_TYPE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NETSCAPE_BASE_URL$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113730.1.2");
    static final jdk.incubator.foreign.MemorySegment szOID_NETSCAPE_BASE_URL() { return szOID_NETSCAPE_BASE_URL$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NETSCAPE_REVOCATION_URL$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113730.1.3");
    static final jdk.incubator.foreign.MemorySegment szOID_NETSCAPE_REVOCATION_URL() { return szOID_NETSCAPE_REVOCATION_URL$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NETSCAPE_CA_REVOCATION_URL$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113730.1.4");
    static final jdk.incubator.foreign.MemorySegment szOID_NETSCAPE_CA_REVOCATION_URL() { return szOID_NETSCAPE_CA_REVOCATION_URL$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NETSCAPE_CERT_RENEWAL_URL$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113730.1.7");
    static final jdk.incubator.foreign.MemorySegment szOID_NETSCAPE_CERT_RENEWAL_URL() { return szOID_NETSCAPE_CERT_RENEWAL_URL$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NETSCAPE_CA_POLICY_URL$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113730.1.8");
    static final jdk.incubator.foreign.MemorySegment szOID_NETSCAPE_CA_POLICY_URL() { return szOID_NETSCAPE_CA_POLICY_URL$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NETSCAPE_SSL_SERVER_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113730.1.12");
    static final jdk.incubator.foreign.MemorySegment szOID_NETSCAPE_SSL_SERVER_NAME() { return szOID_NETSCAPE_SSL_SERVER_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NETSCAPE_COMMENT$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113730.1.13");
    static final jdk.incubator.foreign.MemorySegment szOID_NETSCAPE_COMMENT() { return szOID_NETSCAPE_COMMENT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NETSCAPE_DATA_TYPE$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113730.2");
    static final jdk.incubator.foreign.MemorySegment szOID_NETSCAPE_DATA_TYPE() { return szOID_NETSCAPE_DATA_TYPE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NETSCAPE_CERT_SEQUENCE$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.113730.2.5");
    static final jdk.incubator.foreign.MemorySegment szOID_NETSCAPE_CERT_SEQUENCE() { return szOID_NETSCAPE_CERT_SEQUENCE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CT_PKI_DATA$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.12.2");
    static final jdk.incubator.foreign.MemorySegment szOID_CT_PKI_DATA() { return szOID_CT_PKI_DATA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CT_PKI_RESPONSE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.12.3");
    static final jdk.incubator.foreign.MemorySegment szOID_CT_PKI_RESPONSE() { return szOID_CT_PKI_RESPONSE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_NO_SIGNATURE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.6.2");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_NO_SIGNATURE() { return szOID_PKIX_NO_SIGNATURE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC() { return szOID_CMC$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_STATUS_INFO$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7.1");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_STATUS_INFO() { return szOID_CMC_STATUS_INFO$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_IDENTIFICATION$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7.2");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_IDENTIFICATION() { return szOID_CMC_IDENTIFICATION$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_IDENTITY_PROOF$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7.3");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_IDENTITY_PROOF() { return szOID_CMC_IDENTITY_PROOF$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_DATA_RETURN$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7.4");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_DATA_RETURN() { return szOID_CMC_DATA_RETURN$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_TRANSACTION_ID$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7.5");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_TRANSACTION_ID() { return szOID_CMC_TRANSACTION_ID$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_SENDER_NONCE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7.6");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_SENDER_NONCE() { return szOID_CMC_SENDER_NONCE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_RECIPIENT_NONCE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7.7");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_RECIPIENT_NONCE() { return szOID_CMC_RECIPIENT_NONCE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_ADD_EXTENSIONS$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7.8");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_ADD_EXTENSIONS() { return szOID_CMC_ADD_EXTENSIONS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_ENCRYPTED_POP$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7.9");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_ENCRYPTED_POP() { return szOID_CMC_ENCRYPTED_POP$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_DECRYPTED_POP$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7.10");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_DECRYPTED_POP() { return szOID_CMC_DECRYPTED_POP$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_LRA_POP_WITNESS$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7.11");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_LRA_POP_WITNESS() { return szOID_CMC_LRA_POP_WITNESS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_GET_CERT$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7.15");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_GET_CERT() { return szOID_CMC_GET_CERT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_GET_CRL$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7.16");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_GET_CRL() { return szOID_CMC_GET_CRL$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_REVOKE_REQUEST$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7.17");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_REVOKE_REQUEST() { return szOID_CMC_REVOKE_REQUEST$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_REG_INFO$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7.18");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_REG_INFO() { return szOID_CMC_REG_INFO$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_RESPONSE_INFO$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7.19");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_RESPONSE_INFO() { return szOID_CMC_RESPONSE_INFO$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_QUERY_PENDING$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7.21");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_QUERY_PENDING() { return szOID_CMC_QUERY_PENDING$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_ID_POP_LINK_RANDOM$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7.22");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_ID_POP_LINK_RANDOM() { return szOID_CMC_ID_POP_LINK_RANDOM$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_ID_POP_LINK_WITNESS$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7.23");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_ID_POP_LINK_WITNESS() { return szOID_CMC_ID_POP_LINK_WITNESS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_ID_CONFIRM_CERT_ACCEPTANCE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.7.24");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_ID_CONFIRM_CERT_ACCEPTANCE() { return szOID_CMC_ID_CONFIRM_CERT_ACCEPTANCE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CMC_ADD_ATTRIBUTES$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.10.1");
    static final jdk.incubator.foreign.MemorySegment szOID_CMC_ADD_ATTRIBUTES() { return szOID_CMC_ADD_ATTRIBUTES$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_LOYALTY_OTHER_LOGOTYPE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.20.1");
    static final jdk.incubator.foreign.MemorySegment szOID_LOYALTY_OTHER_LOGOTYPE() { return szOID_LOYALTY_OTHER_LOGOTYPE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_BACKGROUND_OTHER_LOGOTYPE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.20.2");
    static final jdk.incubator.foreign.MemorySegment szOID_BACKGROUND_OTHER_LOGOTYPE() { return szOID_BACKGROUND_OTHER_LOGOTYPE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKIX_OCSP_BASIC_SIGNED_RESPONSE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.48.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_PKIX_OCSP_BASIC_SIGNED_RESPONSE() { return szOID_PKIX_OCSP_BASIC_SIGNED_RESPONSE$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_ENCODE_OBJECT_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptDllEncodeObject");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_ENCODE_OBJECT_FUNC() { return CRYPT_OID_ENCODE_OBJECT_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_DECODE_OBJECT_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptDllDecodeObject");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_DECODE_OBJECT_FUNC() { return CRYPT_OID_DECODE_OBJECT_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_ENCODE_OBJECT_EX_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptDllEncodeObjectEx");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_ENCODE_OBJECT_EX_FUNC() { return CRYPT_OID_ENCODE_OBJECT_EX_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_DECODE_OBJECT_EX_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptDllDecodeObjectEx");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_DECODE_OBJECT_EX_FUNC() { return CRYPT_OID_DECODE_OBJECT_EX_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_CREATE_COM_OBJECT_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptDllCreateCOMObject");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_CREATE_COM_OBJECT_FUNC() { return CRYPT_OID_CREATE_COM_OBJECT_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_VERIFY_REVOCATION_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CertDllVerifyRevocation");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_VERIFY_REVOCATION_FUNC() { return CRYPT_OID_VERIFY_REVOCATION_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_VERIFY_CTL_USAGE_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CertDllVerifyCTLUsage");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_VERIFY_CTL_USAGE_FUNC() { return CRYPT_OID_VERIFY_CTL_USAGE_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_FORMAT_OBJECT_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptDllFormatObject");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_FORMAT_OBJECT_FUNC() { return CRYPT_OID_FORMAT_OBJECT_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_FIND_OID_INFO_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptDllFindOIDInfo");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_FIND_OID_INFO_FUNC() { return CRYPT_OID_FIND_OID_INFO_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_FIND_LOCALIZED_NAME_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptDllFindLocalizedName");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_FIND_LOCALIZED_NAME_FUNC() { return CRYPT_OID_FIND_LOCALIZED_NAME_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_REGPATH$SEGMENT_CONSTANT_ = CLinker.toCString("Software\\Microsoft\\Cryptography\\OID");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_REGPATH() { return CRYPT_OID_REGPATH$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_REG_ENCODING_TYPE_PREFIX$SEGMENT_CONSTANT_ = CLinker.toCString("EncodingType ");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_REG_ENCODING_TYPE_PREFIX() { return CRYPT_OID_REG_ENCODING_TYPE_PREFIX$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_REG_DLL_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_REG_DLL_VALUE_NAME() { return CRYPT_OID_REG_DLL_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_REG_FUNC_NAME_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("F");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_REG_FUNC_NAME_VALUE_NAME() { return CRYPT_OID_REG_FUNC_NAME_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_REG_FUNC_NAME_VALUE_NAME_A$SEGMENT_CONSTANT_ = CLinker.toCString("FuncName");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_REG_FUNC_NAME_VALUE_NAME_A() { return CRYPT_OID_REG_FUNC_NAME_VALUE_NAME_A$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_REG_FLAGS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_REG_FLAGS_VALUE_NAME() { return CRYPT_OID_REG_FLAGS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_DEFAULT_OID$SEGMENT_CONSTANT_ = CLinker.toCString("DEFAULT");
    static final jdk.incubator.foreign.MemorySegment CRYPT_DEFAULT_OID() { return CRYPT_DEFAULT_OID$SEGMENT_CONSTANT_; }

    static final int CRYPT_REGISTER_LAST_INDEX() { return (int)4294967295L; }

    static final int CRYPT_MATCH_ANY_ENCODING_TYPE() { return (int)4294967295L; }

    static final int CALG_OID_INFO_CNG_ONLY() { return (int)4294967295L; }

    static final int CALG_OID_INFO_PARAMETERS() { return (int)4294967294L; }

    static final MemorySegment CRYPT_OID_INFO_HASH_PARAMETERS_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_INFO_HASH_PARAMETERS_ALGORITHM() { return CRYPT_OID_INFO_HASH_PARAMETERS_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_INFO_ECC_PARAMETERS_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_INFO_ECC_PARAMETERS_ALGORITHM() { return CRYPT_OID_INFO_ECC_PARAMETERS_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_INFO_MGF1_PARAMETERS_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_INFO_MGF1_PARAMETERS_ALGORITHM() { return CRYPT_OID_INFO_MGF1_PARAMETERS_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_INFO_NO_SIGN_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_INFO_NO_SIGN_ALGORITHM() { return CRYPT_OID_INFO_NO_SIGN_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_INFO_OAEP_PARAMETERS_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_INFO_OAEP_PARAMETERS_ALGORITHM() { return CRYPT_OID_INFO_OAEP_PARAMETERS_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_INFO_ECC_WRAP_PARAMETERS_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_INFO_ECC_WRAP_PARAMETERS_ALGORITHM() { return CRYPT_OID_INFO_ECC_WRAP_PARAMETERS_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_INFO_NO_PARAMETERS_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_INFO_NO_PARAMETERS_ALGORITHM() { return CRYPT_OID_INFO_NO_PARAMETERS_ALGORITHM$SEGMENT_CONSTANT_; }

    static final int CRYPT_FIRST_ALG_OID_GROUP_ID() { return (int)1L; }

    static final int CRYPT_LAST_ALG_OID_GROUP_ID() { return (int)4L; }

    static final int CRYPT_OID_PUBKEY_SIGN_ONLY_FLAG() { return (int)2147483648L; }

    static final int CRYPT_OID_INFO_OID_KEY_FLAGS_MASK() { return (int)4294901760L; }

    static final int CRYPT_OID_INFO_PUBKEY_SIGN_KEY_FLAG() { return (int)2147483648L; }

    static final int CRYPT_OID_DISABLE_SEARCH_DS_FLAG() { return (int)2147483648L; }

    static final MemorySegment CRYPT_LOCALIZED_NAME_OID$SEGMENT_CONSTANT_ = CLinker.toCString("LocalizedNames");
    static final jdk.incubator.foreign.MemorySegment CRYPT_LOCALIZED_NAME_OID() { return CRYPT_LOCALIZED_NAME_OID$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_STRONG_SIGN_ECDSA_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment CERT_STRONG_SIGN_ECDSA_ALGORITHM() { return CERT_STRONG_SIGN_ECDSA_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERT_STRONG_SIGN_OS_PREFIX$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.72.1.");
    static final jdk.incubator.foreign.MemorySegment szOID_CERT_STRONG_SIGN_OS_PREFIX() { return szOID_CERT_STRONG_SIGN_OS_PREFIX$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERT_STRONG_SIGN_OS_1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.72.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_CERT_STRONG_SIGN_OS_1() { return szOID_CERT_STRONG_SIGN_OS_1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERT_STRONG_SIGN_OS_CURRENT$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.72.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_CERT_STRONG_SIGN_OS_CURRENT() { return szOID_CERT_STRONG_SIGN_OS_CURRENT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERT_STRONG_KEY_OS_PREFIX$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.72.2.");
    static final jdk.incubator.foreign.MemorySegment szOID_CERT_STRONG_KEY_OS_PREFIX() { return szOID_CERT_STRONG_KEY_OS_PREFIX$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERT_STRONG_KEY_OS_1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.72.2.1");
    static final jdk.incubator.foreign.MemorySegment szOID_CERT_STRONG_KEY_OS_1() { return szOID_CERT_STRONG_KEY_OS_1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERT_STRONG_KEY_OS_CURRENT$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.72.2.1");
    static final jdk.incubator.foreign.MemorySegment szOID_CERT_STRONG_KEY_OS_CURRENT() { return szOID_CERT_STRONG_KEY_OS_CURRENT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_7_DATA$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.7.1");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_7_DATA() { return szOID_PKCS_7_DATA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_7_SIGNED$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.7.2");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_7_SIGNED() { return szOID_PKCS_7_SIGNED$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_7_ENVELOPED$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.7.3");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_7_ENVELOPED() { return szOID_PKCS_7_ENVELOPED$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_7_SIGNEDANDENVELOPED$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.7.4");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_7_SIGNEDANDENVELOPED() { return szOID_PKCS_7_SIGNEDANDENVELOPED$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_7_DIGESTED$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.7.5");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_7_DIGESTED() { return szOID_PKCS_7_DIGESTED$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_7_ENCRYPTED$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.7.6");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_7_ENCRYPTED() { return szOID_PKCS_7_ENCRYPTED$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_9_CONTENT_TYPE$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.3");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_9_CONTENT_TYPE() { return szOID_PKCS_9_CONTENT_TYPE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_9_MESSAGE_DIGEST$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.4");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_9_MESSAGE_DIGEST() { return szOID_PKCS_9_MESSAGE_DIGEST$SEGMENT_CONSTANT_; }

    static final int CMSG_ALL_FLAGS() { return (int)4294967295L; }

    static final int CMSG_DATA_FLAG() { return (int)2L; }

    static final int CMSG_SIGNED_FLAG() { return (int)4L; }

    static final int CMSG_ENVELOPED_FLAG() { return (int)8L; }

    static final int CMSG_SIGNED_AND_ENVELOPED_FLAG() { return (int)16L; }

    static final int CMSG_HASHED_FLAG() { return (int)32L; }

    static final int CMSG_ENCRYPTED_FLAG() { return (int)64L; }

    static final int CMSG_SP3_COMPATIBLE_ENCRYPT_FLAG() { return (int)2147483648L; }

    static final int CMSG_INDEFINITE_LENGTH() { return (int)4294967295L; }

    static final int CMSG_SIGNED_DATA_PKCS_1_5_VERSION() { return (int)1L; }

    static final int CMSG_SIGNED_DATA_CMS_VERSION() { return (int)3L; }

    static final int CMSG_SIGNER_INFO_PKCS_1_5_VERSION() { return (int)1L; }

    static final int CMSG_SIGNER_INFO_CMS_VERSION() { return (int)3L; }

    static final int CMSG_HASHED_DATA_PKCS_1_5_VERSION() { return (int)0L; }

    static final int CMSG_HASHED_DATA_CMS_VERSION() { return (int)2L; }

    static final int CMSG_ENVELOPED_DATA_PKCS_1_5_VERSION() { return (int)0L; }

    static final int CMSG_ENVELOPED_DATA_CMS_VERSION() { return (int)2L; }

    static final int CMSG_KEY_TRANS_PKCS_1_5_VERSION() { return (int)0L; }

    static final int CMSG_KEY_TRANS_CMS_VERSION() { return (int)2L; }

    static final int CMSG_KEY_AGREE_VERSION() { return (int)3L; }

    static final int CMSG_MAIL_LIST_VERSION() { return (int)4L; }

    static final MemorySegment CMSG_OID_GEN_ENCRYPT_KEY_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllGenEncryptKey");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_GEN_ENCRYPT_KEY_FUNC() { return CMSG_OID_GEN_ENCRYPT_KEY_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_EXPORT_ENCRYPT_KEY_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllExportEncryptKey");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_EXPORT_ENCRYPT_KEY_FUNC() { return CMSG_OID_EXPORT_ENCRYPT_KEY_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_IMPORT_ENCRYPT_KEY_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllImportEncryptKey");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_IMPORT_ENCRYPT_KEY_FUNC() { return CMSG_OID_IMPORT_ENCRYPT_KEY_FUNC$SEGMENT_CONSTANT_; }

    static final MemoryAddress CMSG_DEFAULT_INSTALLABLE_FUNC_OID$ADDR_CONSTANT_ = MemoryAddress.ofLong(1L);
    static final jdk.incubator.foreign.MemoryAddress CMSG_DEFAULT_INSTALLABLE_FUNC_OID() { return CMSG_DEFAULT_INSTALLABLE_FUNC_OID$ADDR_CONSTANT_; }

    static final MemorySegment CMSG_OID_GEN_CONTENT_ENCRYPT_KEY_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllGenContentEncryptKey");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_GEN_CONTENT_ENCRYPT_KEY_FUNC() { return CMSG_OID_GEN_CONTENT_ENCRYPT_KEY_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_CAPI1_GEN_CONTENT_ENCRYPT_KEY_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllGenContentEncryptKey");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_CAPI1_GEN_CONTENT_ENCRYPT_KEY_FUNC() { return CMSG_OID_CAPI1_GEN_CONTENT_ENCRYPT_KEY_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_CNG_GEN_CONTENT_ENCRYPT_KEY_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllCNGGenContentEncryptKey");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_CNG_GEN_CONTENT_ENCRYPT_KEY_FUNC() { return CMSG_OID_CNG_GEN_CONTENT_ENCRYPT_KEY_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_EXPORT_KEY_TRANS_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllExportKeyTrans");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_EXPORT_KEY_TRANS_FUNC() { return CMSG_OID_EXPORT_KEY_TRANS_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_CAPI1_EXPORT_KEY_TRANS_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllExportKeyTrans");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_CAPI1_EXPORT_KEY_TRANS_FUNC() { return CMSG_OID_CAPI1_EXPORT_KEY_TRANS_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_CNG_EXPORT_KEY_TRANS_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllCNGExportKeyTrans");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_CNG_EXPORT_KEY_TRANS_FUNC() { return CMSG_OID_CNG_EXPORT_KEY_TRANS_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_EXPORT_KEY_AGREE_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllExportKeyAgree");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_EXPORT_KEY_AGREE_FUNC() { return CMSG_OID_EXPORT_KEY_AGREE_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_CAPI1_EXPORT_KEY_AGREE_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllExportKeyAgree");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_CAPI1_EXPORT_KEY_AGREE_FUNC() { return CMSG_OID_CAPI1_EXPORT_KEY_AGREE_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_CNG_EXPORT_KEY_AGREE_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllCNGExportKeyAgree");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_CNG_EXPORT_KEY_AGREE_FUNC() { return CMSG_OID_CNG_EXPORT_KEY_AGREE_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_EXPORT_MAIL_LIST_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllExportMailList");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_EXPORT_MAIL_LIST_FUNC() { return CMSG_OID_EXPORT_MAIL_LIST_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_CAPI1_EXPORT_MAIL_LIST_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllExportMailList");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_CAPI1_EXPORT_MAIL_LIST_FUNC() { return CMSG_OID_CAPI1_EXPORT_MAIL_LIST_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_IMPORT_KEY_TRANS_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllImportKeyTrans");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_IMPORT_KEY_TRANS_FUNC() { return CMSG_OID_IMPORT_KEY_TRANS_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_CAPI1_IMPORT_KEY_TRANS_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllImportKeyTrans");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_CAPI1_IMPORT_KEY_TRANS_FUNC() { return CMSG_OID_CAPI1_IMPORT_KEY_TRANS_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_IMPORT_KEY_AGREE_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllImportKeyAgree");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_IMPORT_KEY_AGREE_FUNC() { return CMSG_OID_IMPORT_KEY_AGREE_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_CAPI1_IMPORT_KEY_AGREE_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllImportKeyAgree");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_CAPI1_IMPORT_KEY_AGREE_FUNC() { return CMSG_OID_CAPI1_IMPORT_KEY_AGREE_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_IMPORT_MAIL_LIST_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllImportMailList");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_IMPORT_MAIL_LIST_FUNC() { return CMSG_OID_IMPORT_MAIL_LIST_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_CAPI1_IMPORT_MAIL_LIST_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllImportMailList");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_CAPI1_IMPORT_MAIL_LIST_FUNC() { return CMSG_OID_CAPI1_IMPORT_MAIL_LIST_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_CNG_IMPORT_KEY_TRANS_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllCNGImportKeyTrans");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_CNG_IMPORT_KEY_TRANS_FUNC() { return CMSG_OID_CNG_IMPORT_KEY_TRANS_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_CNG_IMPORT_KEY_AGREE_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllCNGImportKeyAgree");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_CNG_IMPORT_KEY_AGREE_FUNC() { return CMSG_OID_CNG_IMPORT_KEY_AGREE_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CMSG_OID_CNG_IMPORT_CONTENT_ENCRYPT_KEY_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptMsgDllCNGImportContentEncryptKey");
    static final jdk.incubator.foreign.MemorySegment CMSG_OID_CNG_IMPORT_CONTENT_ENCRYPT_KEY_FUNC() { return CMSG_OID_CNG_IMPORT_CONTENT_ENCRYPT_KEY_FUNC$SEGMENT_CONSTANT_; }

    static final int CERT_HASH_PROP_ID() { return (int)3L; }

    static final int CERT_CTL_USAGE_PROP_ID() { return (int)9L; }

    static final MemorySegment szOID_CERT_PROP_ID_PREFIX$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.11.");
    static final jdk.incubator.foreign.MemorySegment szOID_CERT_PROP_ID_PREFIX() { return szOID_CERT_PROP_ID_PREFIX$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERT_KEY_IDENTIFIER_PROP_ID$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.11.20");
    static final jdk.incubator.foreign.MemorySegment szOID_CERT_KEY_IDENTIFIER_PROP_ID() { return szOID_CERT_KEY_IDENTIFIER_PROP_ID$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.11.28");
    static final jdk.incubator.foreign.MemorySegment szOID_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID() { return szOID_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.11.29");
    static final jdk.incubator.foreign.MemorySegment szOID_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID() { return szOID_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERT_MD5_HASH_PROP_ID$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.11.4");
    static final jdk.incubator.foreign.MemorySegment szOID_CERT_MD5_HASH_PROP_ID() { return szOID_CERT_MD5_HASH_PROP_ID$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERT_SIGNATURE_HASH_PROP_ID$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.11.15");
    static final jdk.incubator.foreign.MemorySegment szOID_CERT_SIGNATURE_HASH_PROP_ID() { return szOID_CERT_SIGNATURE_HASH_PROP_ID$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DISALLOWED_HASH$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.11.15");
    static final jdk.incubator.foreign.MemorySegment szOID_DISALLOWED_HASH() { return szOID_DISALLOWED_HASH$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERT_DISALLOWED_FILETIME_PROP_ID$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.11.104");
    static final jdk.incubator.foreign.MemorySegment szOID_CERT_DISALLOWED_FILETIME_PROP_ID() { return szOID_CERT_DISALLOWED_FILETIME_PROP_ID$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ROOT_PROGRAM_AUTO_UPDATE_CA_REVOCATION$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.60.3.1");
    static final jdk.incubator.foreign.MemorySegment szOID_ROOT_PROGRAM_AUTO_UPDATE_CA_REVOCATION() { return szOID_ROOT_PROGRAM_AUTO_UPDATE_CA_REVOCATION$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ROOT_PROGRAM_AUTO_UPDATE_END_REVOCATION$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.60.3.2");
    static final jdk.incubator.foreign.MemorySegment szOID_ROOT_PROGRAM_AUTO_UPDATE_END_REVOCATION() { return szOID_ROOT_PROGRAM_AUTO_UPDATE_END_REVOCATION$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ROOT_PROGRAM_NO_OCSP_FAILOVER_TO_CRL$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.60.3.3");
    static final jdk.incubator.foreign.MemorySegment szOID_ROOT_PROGRAM_NO_OCSP_FAILOVER_TO_CRL() { return szOID_ROOT_PROGRAM_NO_OCSP_FAILOVER_TO_CRL$SEGMENT_CONSTANT_; }

    static final int CERT_NCRYPT_KEY_SPEC() { return (int)4294967295L; }

    static final MemoryAddress CERT_STORE_PROV_MSG$ADDR_CONSTANT_ = MemoryAddress.ofLong(1L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_MSG() { return CERT_STORE_PROV_MSG$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_MEMORY$ADDR_CONSTANT_ = MemoryAddress.ofLong(2L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_MEMORY() { return CERT_STORE_PROV_MEMORY$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_FILE$ADDR_CONSTANT_ = MemoryAddress.ofLong(3L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_FILE() { return CERT_STORE_PROV_FILE$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_REG$ADDR_CONSTANT_ = MemoryAddress.ofLong(4L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_REG() { return CERT_STORE_PROV_REG$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_PKCS7$ADDR_CONSTANT_ = MemoryAddress.ofLong(5L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_PKCS7() { return CERT_STORE_PROV_PKCS7$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_SERIALIZED$ADDR_CONSTANT_ = MemoryAddress.ofLong(6L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_SERIALIZED() { return CERT_STORE_PROV_SERIALIZED$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_FILENAME_A$ADDR_CONSTANT_ = MemoryAddress.ofLong(7L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_FILENAME_A() { return CERT_STORE_PROV_FILENAME_A$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_FILENAME_W$ADDR_CONSTANT_ = MemoryAddress.ofLong(8L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_FILENAME_W() { return CERT_STORE_PROV_FILENAME_W$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_FILENAME$ADDR_CONSTANT_ = MemoryAddress.ofLong(8L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_FILENAME() { return CERT_STORE_PROV_FILENAME$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_SYSTEM_A$ADDR_CONSTANT_ = MemoryAddress.ofLong(9L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_SYSTEM_A() { return CERT_STORE_PROV_SYSTEM_A$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_SYSTEM_W$ADDR_CONSTANT_ = MemoryAddress.ofLong(10L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_SYSTEM_W() { return CERT_STORE_PROV_SYSTEM_W$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_SYSTEM$ADDR_CONSTANT_ = MemoryAddress.ofLong(10L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_SYSTEM() { return CERT_STORE_PROV_SYSTEM$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_COLLECTION$ADDR_CONSTANT_ = MemoryAddress.ofLong(11L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_COLLECTION() { return CERT_STORE_PROV_COLLECTION$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_SYSTEM_REGISTRY_A$ADDR_CONSTANT_ = MemoryAddress.ofLong(12L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_SYSTEM_REGISTRY_A() { return CERT_STORE_PROV_SYSTEM_REGISTRY_A$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_SYSTEM_REGISTRY_W$ADDR_CONSTANT_ = MemoryAddress.ofLong(13L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_SYSTEM_REGISTRY_W() { return CERT_STORE_PROV_SYSTEM_REGISTRY_W$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_SYSTEM_REGISTRY$ADDR_CONSTANT_ = MemoryAddress.ofLong(13L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_SYSTEM_REGISTRY() { return CERT_STORE_PROV_SYSTEM_REGISTRY$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_PHYSICAL_W$ADDR_CONSTANT_ = MemoryAddress.ofLong(14L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_PHYSICAL_W() { return CERT_STORE_PROV_PHYSICAL_W$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_PHYSICAL$ADDR_CONSTANT_ = MemoryAddress.ofLong(14L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_PHYSICAL() { return CERT_STORE_PROV_PHYSICAL$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_SMART_CARD_W$ADDR_CONSTANT_ = MemoryAddress.ofLong(15L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_SMART_CARD_W() { return CERT_STORE_PROV_SMART_CARD_W$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_SMART_CARD$ADDR_CONSTANT_ = MemoryAddress.ofLong(15L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_SMART_CARD() { return CERT_STORE_PROV_SMART_CARD$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_LDAP_W$ADDR_CONSTANT_ = MemoryAddress.ofLong(16L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_LDAP_W() { return CERT_STORE_PROV_LDAP_W$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_LDAP$ADDR_CONSTANT_ = MemoryAddress.ofLong(16L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_LDAP() { return CERT_STORE_PROV_LDAP$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_STORE_PROV_PKCS12$ADDR_CONSTANT_ = MemoryAddress.ofLong(17L);
    static final jdk.incubator.foreign.MemoryAddress CERT_STORE_PROV_PKCS12() { return CERT_STORE_PROV_PKCS12$ADDR_CONSTANT_; }

    static final MemorySegment sz_CERT_STORE_PROV_MEMORY$SEGMENT_CONSTANT_ = CLinker.toCString("Memory");
    static final jdk.incubator.foreign.MemorySegment sz_CERT_STORE_PROV_MEMORY() { return sz_CERT_STORE_PROV_MEMORY$SEGMENT_CONSTANT_; }

    static final MemorySegment sz_CERT_STORE_PROV_FILENAME_W$SEGMENT_CONSTANT_ = CLinker.toCString("File");
    static final jdk.incubator.foreign.MemorySegment sz_CERT_STORE_PROV_FILENAME_W() { return sz_CERT_STORE_PROV_FILENAME_W$SEGMENT_CONSTANT_; }

    static final MemorySegment sz_CERT_STORE_PROV_FILENAME$SEGMENT_CONSTANT_ = CLinker.toCString("File");
    static final jdk.incubator.foreign.MemorySegment sz_CERT_STORE_PROV_FILENAME() { return sz_CERT_STORE_PROV_FILENAME$SEGMENT_CONSTANT_; }

    static final MemorySegment sz_CERT_STORE_PROV_SYSTEM_W$SEGMENT_CONSTANT_ = CLinker.toCString("System");
    static final jdk.incubator.foreign.MemorySegment sz_CERT_STORE_PROV_SYSTEM_W() { return sz_CERT_STORE_PROV_SYSTEM_W$SEGMENT_CONSTANT_; }

    static final MemorySegment sz_CERT_STORE_PROV_SYSTEM$SEGMENT_CONSTANT_ = CLinker.toCString("System");
    static final jdk.incubator.foreign.MemorySegment sz_CERT_STORE_PROV_SYSTEM() { return sz_CERT_STORE_PROV_SYSTEM$SEGMENT_CONSTANT_; }

    static final MemorySegment sz_CERT_STORE_PROV_PKCS7$SEGMENT_CONSTANT_ = CLinker.toCString("PKCS7");
    static final jdk.incubator.foreign.MemorySegment sz_CERT_STORE_PROV_PKCS7() { return sz_CERT_STORE_PROV_PKCS7$SEGMENT_CONSTANT_; }

    static final MemorySegment sz_CERT_STORE_PROV_PKCS12$SEGMENT_CONSTANT_ = CLinker.toCString("PKCS12");
    static final jdk.incubator.foreign.MemorySegment sz_CERT_STORE_PROV_PKCS12() { return sz_CERT_STORE_PROV_PKCS12$SEGMENT_CONSTANT_; }

    static final MemorySegment sz_CERT_STORE_PROV_SERIALIZED$SEGMENT_CONSTANT_ = CLinker.toCString("Serialized");
    static final jdk.incubator.foreign.MemorySegment sz_CERT_STORE_PROV_SERIALIZED() { return sz_CERT_STORE_PROV_SERIALIZED$SEGMENT_CONSTANT_; }

    static final MemorySegment sz_CERT_STORE_PROV_COLLECTION$SEGMENT_CONSTANT_ = CLinker.toCString("Collection");
    static final jdk.incubator.foreign.MemorySegment sz_CERT_STORE_PROV_COLLECTION() { return sz_CERT_STORE_PROV_COLLECTION$SEGMENT_CONSTANT_; }

    static final MemorySegment sz_CERT_STORE_PROV_SYSTEM_REGISTRY_W$SEGMENT_CONSTANT_ = CLinker.toCString("SystemRegistry");
    static final jdk.incubator.foreign.MemorySegment sz_CERT_STORE_PROV_SYSTEM_REGISTRY_W() { return sz_CERT_STORE_PROV_SYSTEM_REGISTRY_W$SEGMENT_CONSTANT_; }

    static final MemorySegment sz_CERT_STORE_PROV_SYSTEM_REGISTRY$SEGMENT_CONSTANT_ = CLinker.toCString("SystemRegistry");
    static final jdk.incubator.foreign.MemorySegment sz_CERT_STORE_PROV_SYSTEM_REGISTRY() { return sz_CERT_STORE_PROV_SYSTEM_REGISTRY$SEGMENT_CONSTANT_; }

    static final MemorySegment sz_CERT_STORE_PROV_PHYSICAL_W$SEGMENT_CONSTANT_ = CLinker.toCString("Physical");
    static final jdk.incubator.foreign.MemorySegment sz_CERT_STORE_PROV_PHYSICAL_W() { return sz_CERT_STORE_PROV_PHYSICAL_W$SEGMENT_CONSTANT_; }

    static final MemorySegment sz_CERT_STORE_PROV_PHYSICAL$SEGMENT_CONSTANT_ = CLinker.toCString("Physical");
    static final jdk.incubator.foreign.MemorySegment sz_CERT_STORE_PROV_PHYSICAL() { return sz_CERT_STORE_PROV_PHYSICAL$SEGMENT_CONSTANT_; }

    static final MemorySegment sz_CERT_STORE_PROV_SMART_CARD_W$SEGMENT_CONSTANT_ = CLinker.toCString("SmartCard");
    static final jdk.incubator.foreign.MemorySegment sz_CERT_STORE_PROV_SMART_CARD_W() { return sz_CERT_STORE_PROV_SMART_CARD_W$SEGMENT_CONSTANT_; }

    static final MemorySegment sz_CERT_STORE_PROV_SMART_CARD$SEGMENT_CONSTANT_ = CLinker.toCString("SmartCard");
    static final jdk.incubator.foreign.MemorySegment sz_CERT_STORE_PROV_SMART_CARD() { return sz_CERT_STORE_PROV_SMART_CARD$SEGMENT_CONSTANT_; }

    static final MemorySegment sz_CERT_STORE_PROV_LDAP_W$SEGMENT_CONSTANT_ = CLinker.toCString("Ldap");
    static final jdk.incubator.foreign.MemorySegment sz_CERT_STORE_PROV_LDAP_W() { return sz_CERT_STORE_PROV_LDAP_W$SEGMENT_CONSTANT_; }

    static final MemorySegment sz_CERT_STORE_PROV_LDAP$SEGMENT_CONSTANT_ = CLinker.toCString("Ldap");
    static final jdk.incubator.foreign.MemorySegment sz_CERT_STORE_PROV_LDAP() { return sz_CERT_STORE_PROV_LDAP$SEGMENT_CONSTANT_; }

    static final int CERT_SYSTEM_STORE_MASK() { return (int)4294901760L; }

    static final int CERT_SYSTEM_STORE_RELOCATE_FLAG() { return (int)2147483648L; }

    static final int CERT_SYSTEM_STORE_CURRENT_USER() { return (int)65536L; }

    static final int CERT_SYSTEM_STORE_LOCAL_MACHINE() { return (int)131072L; }

    static final int CERT_SYSTEM_STORE_CURRENT_SERVICE() { return (int)262144L; }

    static final int CERT_SYSTEM_STORE_SERVICES() { return (int)327680L; }

    static final int CERT_SYSTEM_STORE_USERS() { return (int)393216L; }

    static final int CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY() { return (int)458752L; }

    static final int CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY() { return (int)524288L; }

    static final int CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE() { return (int)589824L; }

    static final int CERT_SYSTEM_STORE_LOCAL_MACHINE_WCOS() { return (int)655360L; }

    static final MemorySegment CERT_GROUP_POLICY_SYSTEM_STORE_REGPATH$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_GROUP_POLICY_SYSTEM_STORE_REGPATH() { return CERT_GROUP_POLICY_SYSTEM_STORE_REGPATH$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_EFSBLOB_REGPATH$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_EFSBLOB_REGPATH() { return CERT_EFSBLOB_REGPATH$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_EFSBLOB_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment CERT_EFSBLOB_VALUE_NAME() { return CERT_EFSBLOB_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_PROT_ROOT_FLAGS_REGPATH$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_PROT_ROOT_FLAGS_REGPATH() { return CERT_PROT_ROOT_FLAGS_REGPATH$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_PROT_ROOT_FLAGS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("F");
    static final jdk.incubator.foreign.MemorySegment CERT_PROT_ROOT_FLAGS_VALUE_NAME() { return CERT_PROT_ROOT_FLAGS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_PROT_ROOT_PEER_USAGES_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment CERT_PROT_ROOT_PEER_USAGES_VALUE_NAME() { return CERT_PROT_ROOT_PEER_USAGES_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_PROT_ROOT_PEER_USAGES_VALUE_NAME_A$SEGMENT_CONSTANT_ = CLinker.toCString("PeerUsages");
    static final jdk.incubator.foreign.MemorySegment CERT_PROT_ROOT_PEER_USAGES_VALUE_NAME_A() { return CERT_PROT_ROOT_PEER_USAGES_VALUE_NAME_A$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_PROT_ROOT_PEER_USAGES_DEFAULT_A$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.5.5.7.3.2");
    static final jdk.incubator.foreign.MemorySegment CERT_PROT_ROOT_PEER_USAGES_DEFAULT_A() { return CERT_PROT_ROOT_PEER_USAGES_DEFAULT_A$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_TRUST_PUB_SAFER_GROUP_POLICY_REGPATH$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_TRUST_PUB_SAFER_GROUP_POLICY_REGPATH() { return CERT_TRUST_PUB_SAFER_GROUP_POLICY_REGPATH$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_LOCAL_MACHINE_SYSTEM_STORE_REGPATH$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_LOCAL_MACHINE_SYSTEM_STORE_REGPATH() { return CERT_LOCAL_MACHINE_SYSTEM_STORE_REGPATH$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_TRUST_PUB_SAFER_LOCAL_MACHINE_REGPATH$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_TRUST_PUB_SAFER_LOCAL_MACHINE_REGPATH() { return CERT_TRUST_PUB_SAFER_LOCAL_MACHINE_REGPATH$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_TRUST_PUB_AUTHENTICODE_FLAGS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("A");
    static final jdk.incubator.foreign.MemorySegment CERT_TRUST_PUB_AUTHENTICODE_FLAGS_VALUE_NAME() { return CERT_TRUST_PUB_AUTHENTICODE_FLAGS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_OCM_SUBCOMPONENTS_LOCAL_MACHINE_REGPATH$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_OCM_SUBCOMPONENTS_LOCAL_MACHINE_REGPATH() { return CERT_OCM_SUBCOMPONENTS_LOCAL_MACHINE_REGPATH$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_OCM_SUBCOMPONENTS_ROOT_AUTO_UPDATE_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("R");
    static final jdk.incubator.foreign.MemorySegment CERT_OCM_SUBCOMPONENTS_ROOT_AUTO_UPDATE_VALUE_NAME() { return CERT_OCM_SUBCOMPONENTS_ROOT_AUTO_UPDATE_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_DISABLE_ROOT_AUTO_UPDATE_REGPATH$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_DISABLE_ROOT_AUTO_UPDATE_REGPATH() { return CERT_DISABLE_ROOT_AUTO_UPDATE_REGPATH$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_DISABLE_ROOT_AUTO_UPDATE_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment CERT_DISABLE_ROOT_AUTO_UPDATE_VALUE_NAME() { return CERT_DISABLE_ROOT_AUTO_UPDATE_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_ENABLE_DISALLOWED_CERT_AUTO_UPDATE_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment CERT_ENABLE_DISALLOWED_CERT_AUTO_UPDATE_VALUE_NAME() { return CERT_ENABLE_DISALLOWED_CERT_AUTO_UPDATE_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_DISABLE_PIN_RULES_AUTO_UPDATE_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment CERT_DISABLE_PIN_RULES_AUTO_UPDATE_VALUE_NAME() { return CERT_DISABLE_PIN_RULES_AUTO_UPDATE_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_AUTO_UPDATE_LOCAL_MACHINE_REGPATH$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_AUTO_UPDATE_LOCAL_MACHINE_REGPATH() { return CERT_AUTO_UPDATE_LOCAL_MACHINE_REGPATH$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("R");
    static final jdk.incubator.foreign.MemorySegment CERT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME() { return CERT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_AUTO_UPDATE_SYNC_FROM_DIR_URL_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_AUTO_UPDATE_SYNC_FROM_DIR_URL_VALUE_NAME() { return CERT_AUTO_UPDATE_SYNC_FROM_DIR_URL_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_AUTH_ROOT_AUTO_UPDATE_LOCAL_MACHINE_REGPATH$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_AUTH_ROOT_AUTO_UPDATE_LOCAL_MACHINE_REGPATH() { return CERT_AUTH_ROOT_AUTO_UPDATE_LOCAL_MACHINE_REGPATH$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_AUTH_ROOT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("R");
    static final jdk.incubator.foreign.MemorySegment CERT_AUTH_ROOT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME() { return CERT_AUTH_ROOT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_AUTH_ROOT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_AUTH_ROOT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME() { return CERT_AUTH_ROOT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_AUTH_ROOT_AUTO_UPDATE_FLAGS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("F");
    static final jdk.incubator.foreign.MemorySegment CERT_AUTH_ROOT_AUTO_UPDATE_FLAGS_VALUE_NAME() { return CERT_AUTH_ROOT_AUTO_UPDATE_FLAGS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_AUTH_ROOT_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("L");
    static final jdk.incubator.foreign.MemorySegment CERT_AUTH_ROOT_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME() { return CERT_AUTH_ROOT_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_AUTH_ROOT_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment CERT_AUTH_ROOT_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME() { return CERT_AUTH_ROOT_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_AUTH_ROOT_CTL_FILENAME$SEGMENT_CONSTANT_ = CLinker.toCString("a");
    static final jdk.incubator.foreign.MemorySegment CERT_AUTH_ROOT_CTL_FILENAME() { return CERT_AUTH_ROOT_CTL_FILENAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_AUTH_ROOT_CTL_FILENAME_A$SEGMENT_CONSTANT_ = CLinker.toCString("authroot.stl");
    static final jdk.incubator.foreign.MemorySegment CERT_AUTH_ROOT_CTL_FILENAME_A() { return CERT_AUTH_ROOT_CTL_FILENAME_A$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_AUTH_ROOT_CAB_FILENAME$SEGMENT_CONSTANT_ = CLinker.toCString("a");
    static final jdk.incubator.foreign.MemorySegment CERT_AUTH_ROOT_CAB_FILENAME() { return CERT_AUTH_ROOT_CAB_FILENAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_AUTH_ROOT_SEQ_FILENAME$SEGMENT_CONSTANT_ = CLinker.toCString("a");
    static final jdk.incubator.foreign.MemorySegment CERT_AUTH_ROOT_SEQ_FILENAME() { return CERT_AUTH_ROOT_SEQ_FILENAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_AUTH_ROOT_CERT_EXT$SEGMENT_CONSTANT_ = CLinker.toCString(".");
    static final jdk.incubator.foreign.MemorySegment CERT_AUTH_ROOT_CERT_EXT() { return CERT_AUTH_ROOT_CERT_EXT$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_DISALLOWED_CERT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment CERT_DISALLOWED_CERT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME() { return CERT_DISALLOWED_CERT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_DISALLOWED_CERT_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment CERT_DISALLOWED_CERT_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME() { return CERT_DISALLOWED_CERT_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_DISALLOWED_CERT_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment CERT_DISALLOWED_CERT_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME() { return CERT_DISALLOWED_CERT_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_DISALLOWED_CERT_CTL_FILENAME$SEGMENT_CONSTANT_ = CLinker.toCString("d");
    static final jdk.incubator.foreign.MemorySegment CERT_DISALLOWED_CERT_CTL_FILENAME() { return CERT_DISALLOWED_CERT_CTL_FILENAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_DISALLOWED_CERT_CTL_FILENAME_A$SEGMENT_CONSTANT_ = CLinker.toCString("disallowedcert.stl");
    static final jdk.incubator.foreign.MemorySegment CERT_DISALLOWED_CERT_CTL_FILENAME_A() { return CERT_DISALLOWED_CERT_CTL_FILENAME_A$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_DISALLOWED_CERT_CAB_FILENAME$SEGMENT_CONSTANT_ = CLinker.toCString("d");
    static final jdk.incubator.foreign.MemorySegment CERT_DISALLOWED_CERT_CAB_FILENAME() { return CERT_DISALLOWED_CERT_CAB_FILENAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_DISALLOWED_CERT_AUTO_UPDATE_LIST_IDENTIFIER$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment CERT_DISALLOWED_CERT_AUTO_UPDATE_LIST_IDENTIFIER() { return CERT_DISALLOWED_CERT_AUTO_UPDATE_LIST_IDENTIFIER$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_PIN_RULES_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment CERT_PIN_RULES_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME() { return CERT_PIN_RULES_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_PIN_RULES_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment CERT_PIN_RULES_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME() { return CERT_PIN_RULES_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_PIN_RULES_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment CERT_PIN_RULES_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME() { return CERT_PIN_RULES_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_PIN_RULES_CTL_FILENAME$SEGMENT_CONSTANT_ = CLinker.toCString("p");
    static final jdk.incubator.foreign.MemorySegment CERT_PIN_RULES_CTL_FILENAME() { return CERT_PIN_RULES_CTL_FILENAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_PIN_RULES_CTL_FILENAME_A$SEGMENT_CONSTANT_ = CLinker.toCString("pinrules.stl");
    static final jdk.incubator.foreign.MemorySegment CERT_PIN_RULES_CTL_FILENAME_A() { return CERT_PIN_RULES_CTL_FILENAME_A$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_PIN_RULES_CAB_FILENAME$SEGMENT_CONSTANT_ = CLinker.toCString("p");
    static final jdk.incubator.foreign.MemorySegment CERT_PIN_RULES_CAB_FILENAME() { return CERT_PIN_RULES_CAB_FILENAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_PIN_RULES_AUTO_UPDATE_LIST_IDENTIFIER$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment CERT_PIN_RULES_AUTO_UPDATE_LIST_IDENTIFIER() { return CERT_PIN_RULES_AUTO_UPDATE_LIST_IDENTIFIER$SEGMENT_CONSTANT_; }

    static final int CERT_REGISTRY_STORE_CLIENT_GPT_FLAG() { return (int)2147483648L; }

    static final MemorySegment CERT_IE_DIRTY_FLAGS_REGPATH$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_IE_DIRTY_FLAGS_REGPATH() { return CERT_IE_DIRTY_FLAGS_REGPATH$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_OPEN_STORE_PROV_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CertDllOpenStoreProv");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_OPEN_STORE_PROV_FUNC() { return CRYPT_OID_OPEN_STORE_PROV_FUNC$SEGMENT_CONSTANT_; }

    static final int CERT_STORE_SAVE_TO_FILENAME() { return (int)4L; }

    static final int CERT_COMPARE_HASH() { return (int)1L; }

    static final int CERT_COMPARE_CTL_USAGE() { return (int)10L; }

    static final int CERT_FIND_ANY() { return (int)0L; }

    static final int CERT_FIND_SHA1_HASH() { return (int)65536L; }

    static final int CERT_FIND_MD5_HASH() { return (int)262144L; }

    static final int CERT_FIND_SIGNATURE_HASH() { return (int)917504L; }

    static final int CERT_FIND_KEY_IDENTIFIER() { return (int)983040L; }

    static final int CERT_FIND_HASH() { return (int)65536L; }

    static final int CERT_FIND_PROPERTY() { return (int)327680L; }

    static final int CERT_FIND_PUBLIC_KEY() { return (int)393216L; }

    static final int CERT_FIND_SUBJECT_NAME() { return (int)131079L; }

    static final int CERT_FIND_SUBJECT_ATTR() { return (int)196615L; }

    static final int CERT_FIND_ISSUER_NAME() { return (int)131076L; }

    static final int CERT_FIND_ISSUER_ATTR() { return (int)196612L; }

    static final int CERT_FIND_SUBJECT_STR_A() { return (int)458759L; }

    static final int CERT_FIND_SUBJECT_STR_W() { return (int)524295L; }

    static final int CERT_FIND_SUBJECT_STR() { return (int)524295L; }

    static final int CERT_FIND_ISSUER_STR_A() { return (int)458756L; }

    static final int CERT_FIND_ISSUER_STR_W() { return (int)524292L; }

    static final int CERT_FIND_ISSUER_STR() { return (int)524292L; }

    static final int CERT_FIND_KEY_SPEC() { return (int)589824L; }

    static final int CERT_FIND_ENHKEY_USAGE() { return (int)655360L; }

    static final int CERT_FIND_CTL_USAGE() { return (int)655360L; }

    static final int CERT_FIND_SUBJECT_CERT() { return (int)720896L; }

    static final int CERT_FIND_ISSUER_OF() { return (int)786432L; }

    static final int CERT_FIND_EXISTING() { return (int)851968L; }

    static final int CERT_FIND_CERT_ID() { return (int)1048576L; }

    static final int CERT_FIND_CROSS_CERT_DIST_POINTS() { return (int)1114112L; }

    static final int CERT_FIND_PUBKEY_MD5_HASH() { return (int)1179648L; }

    static final int CERT_FIND_SUBJECT_INFO_ACCESS() { return (int)1245184L; }

    static final int CERT_FIND_HASH_STR() { return (int)1310720L; }

    static final int CERT_FIND_HAS_PRIVATE_KEY() { return (int)1376256L; }

    static final int CERT_FIND_OPTIONAL_CTL_USAGE_FLAG() { return (int)1L; }

    static final int CERT_FIND_EXT_ONLY_CTL_USAGE_FLAG() { return (int)2L; }

    static final int CERT_FIND_PROP_ONLY_CTL_USAGE_FLAG() { return (int)4L; }

    static final int CERT_FIND_NO_CTL_USAGE_FLAG() { return (int)8L; }

    static final int CERT_FIND_OR_CTL_USAGE_FLAG() { return (int)16L; }

    static final int CERT_FIND_VALID_CTL_USAGE_FLAG() { return (int)32L; }

    static final int CERT_SET_PROPERTY_IGNORE_PERSIST_ERROR_FLAG() { return (int)2147483648L; }

    static final int CERT_STORE_ALL_CONTEXT_FLAG() { return (int)4294967295L; }

    static final int CERT_STORE_CERTIFICATE_CONTEXT_FLAG() { return (int)2L; }

    static final int CERT_STORE_CRL_CONTEXT_FLAG() { return (int)4L; }

    static final int CERT_STORE_CTL_CONTEXT_FLAG() { return (int)8L; }

    static final int CTL_FIND_NO_LIST_ID_CBDATA() { return (int)4294967295L; }

    static final MemoryAddress CTL_FIND_NO_SIGNER_PTR$ADDR_CONSTANT_ = MemoryAddress.ofLong(-1L);
    static final jdk.incubator.foreign.MemoryAddress CTL_FIND_NO_SIGNER_PTR() { return CTL_FIND_NO_SIGNER_PTR$ADDR_CONSTANT_; }

    static final MemorySegment CERT_PHYSICAL_STORE_DEFAULT_NAME$SEGMENT_CONSTANT_ = CLinker.toCString(".");
    static final jdk.incubator.foreign.MemorySegment CERT_PHYSICAL_STORE_DEFAULT_NAME() { return CERT_PHYSICAL_STORE_DEFAULT_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_PHYSICAL_STORE_GROUP_POLICY_NAME$SEGMENT_CONSTANT_ = CLinker.toCString(".");
    static final jdk.incubator.foreign.MemorySegment CERT_PHYSICAL_STORE_GROUP_POLICY_NAME() { return CERT_PHYSICAL_STORE_GROUP_POLICY_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_PHYSICAL_STORE_LOCAL_MACHINE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString(".");
    static final jdk.incubator.foreign.MemorySegment CERT_PHYSICAL_STORE_LOCAL_MACHINE_NAME() { return CERT_PHYSICAL_STORE_LOCAL_MACHINE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_PHYSICAL_STORE_DS_USER_CERTIFICATE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString(".");
    static final jdk.incubator.foreign.MemorySegment CERT_PHYSICAL_STORE_DS_USER_CERTIFICATE_NAME() { return CERT_PHYSICAL_STORE_DS_USER_CERTIFICATE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_PHYSICAL_STORE_LOCAL_MACHINE_GROUP_POLICY_NAME$SEGMENT_CONSTANT_ = CLinker.toCString(".");
    static final jdk.incubator.foreign.MemorySegment CERT_PHYSICAL_STORE_LOCAL_MACHINE_GROUP_POLICY_NAME() { return CERT_PHYSICAL_STORE_LOCAL_MACHINE_GROUP_POLICY_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_PHYSICAL_STORE_ENTERPRISE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString(".");
    static final jdk.incubator.foreign.MemorySegment CERT_PHYSICAL_STORE_ENTERPRISE_NAME() { return CERT_PHYSICAL_STORE_ENTERPRISE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_PHYSICAL_STORE_AUTH_ROOT_NAME$SEGMENT_CONSTANT_ = CLinker.toCString(".");
    static final jdk.incubator.foreign.MemorySegment CERT_PHYSICAL_STORE_AUTH_ROOT_NAME() { return CERT_PHYSICAL_STORE_AUTH_ROOT_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_PHYSICAL_STORE_SMART_CARD_NAME$SEGMENT_CONSTANT_ = CLinker.toCString(".");
    static final jdk.incubator.foreign.MemorySegment CERT_PHYSICAL_STORE_SMART_CARD_NAME() { return CERT_PHYSICAL_STORE_SMART_CARD_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_OPEN_SYSTEM_STORE_PROV_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CertDllOpenSystemStoreProv");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_OPEN_SYSTEM_STORE_PROV_FUNC() { return CRYPT_OID_OPEN_SYSTEM_STORE_PROV_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_REGISTER_SYSTEM_STORE_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CertDllRegisterSystemStore");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_REGISTER_SYSTEM_STORE_FUNC() { return CRYPT_OID_REGISTER_SYSTEM_STORE_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_UNREGISTER_SYSTEM_STORE_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CertDllUnregisterSystemStore");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_UNREGISTER_SYSTEM_STORE_FUNC() { return CRYPT_OID_UNREGISTER_SYSTEM_STORE_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_ENUM_SYSTEM_STORE_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CertDllEnumSystemStore");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_ENUM_SYSTEM_STORE_FUNC() { return CRYPT_OID_ENUM_SYSTEM_STORE_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_REGISTER_PHYSICAL_STORE_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CertDllRegisterPhysicalStore");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_REGISTER_PHYSICAL_STORE_FUNC() { return CRYPT_OID_REGISTER_PHYSICAL_STORE_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_UNREGISTER_PHYSICAL_STORE_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CertDllUnregisterPhysicalStore");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_UNREGISTER_PHYSICAL_STORE_FUNC() { return CRYPT_OID_UNREGISTER_PHYSICAL_STORE_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_ENUM_PHYSICAL_STORE_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CertDllEnumPhysicalStore");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_ENUM_PHYSICAL_STORE_FUNC() { return CRYPT_OID_ENUM_PHYSICAL_STORE_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_SYSTEM_STORE_LOCATION_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_SYSTEM_STORE_LOCATION_VALUE_NAME() { return CRYPT_OID_SYSTEM_STORE_LOCATION_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptDllExtractEncodedSignatureParameters");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC() { return CRYPT_OID_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_SIGN_AND_ENCODE_HASH_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptDllSignAndEncodeHash");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_SIGN_AND_ENCODE_HASH_FUNC() { return CRYPT_OID_SIGN_AND_ENCODE_HASH_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_VERIFY_ENCODED_SIGNATURE_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptDllVerifyEncodedSignature");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_VERIFY_ENCODED_SIGNATURE_FUNC() { return CRYPT_OID_VERIFY_ENCODED_SIGNATURE_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptDllExportPublicKeyInfoEx");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_FUNC() { return CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptDllExportPublicKeyInfoEx2");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC() { return CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_FROM_BCRYPT_HANDLE_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptDllExportPublicKeyInfoFromBCryptKeyHandle");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_FROM_BCRYPT_HANDLE_FUNC() { return CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_FROM_BCRYPT_HANDLE_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_IMPORT_PUBLIC_KEY_INFO_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptDllImportPublicKeyInfoEx");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_IMPORT_PUBLIC_KEY_INFO_FUNC() { return CRYPT_OID_IMPORT_PUBLIC_KEY_INFO_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptDllImportPublicKeyInfoEx2");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC() { return CRYPT_OID_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_IMPORT_PRIVATE_KEY_INFO_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptDllImportPrivateKeyInfoEx");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_IMPORT_PRIVATE_KEY_INFO_FUNC() { return CRYPT_OID_IMPORT_PRIVATE_KEY_INFO_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPT_OID_EXPORT_PRIVATE_KEY_INFO_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CryptDllExportPrivateKeyInfoEx");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_EXPORT_PRIVATE_KEY_INFO_FUNC() { return CRYPT_OID_EXPORT_PRIVATE_KEY_INFO_FUNC$SEGMENT_CONSTANT_; }

    static final int CRYPT_DELETE_KEYSET() { return (int)16L; }

    static final int CERT_QUERY_CONTENT_FLAG_CERT() { return (int)2L; }

    static final int CERT_QUERY_CONTENT_FLAG_CTL() { return (int)4L; }

    static final int CERT_QUERY_CONTENT_FLAG_CRL() { return (int)8L; }

    static final int CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE() { return (int)16L; }

    static final int CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT() { return (int)32L; }

    static final int CERT_QUERY_CONTENT_FLAG_SERIALIZED_CTL() { return (int)64L; }

    static final int CERT_QUERY_CONTENT_FLAG_SERIALIZED_CRL() { return (int)128L; }

    static final int CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED() { return (int)256L; }

    static final int CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED() { return (int)512L; }

    static final int CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED() { return (int)1024L; }

    static final int CERT_QUERY_CONTENT_FLAG_PKCS10() { return (int)2048L; }

    static final int CERT_QUERY_CONTENT_FLAG_PFX() { return (int)4096L; }

    static final int CERT_QUERY_CONTENT_FLAG_CERT_PAIR() { return (int)8192L; }

    static final int CERT_QUERY_CONTENT_FLAG_PFX_AND_LOAD() { return (int)16384L; }

    static final int CERT_QUERY_CONTENT_FLAG_ALL() { return (int)16382L; }

    static final int CERT_QUERY_CONTENT_FLAG_ALL_ISSUER_CERT() { return (int)818L; }

    static final int CERT_QUERY_FORMAT_FLAG_BINARY() { return (int)2L; }

    static final int CERT_QUERY_FORMAT_FLAG_BASE64_ENCODED() { return (int)4L; }

    static final int CERT_QUERY_FORMAT_FLAG_ASN_ASCII_HEX_ENCODED() { return (int)8L; }

    static final int CERT_QUERY_FORMAT_FLAG_ALL() { return (int)14L; }

    static final MemoryAddress CREDENTIAL_OID_PASSWORD_CREDENTIALS_A$ADDR_CONSTANT_ = MemoryAddress.ofLong(1L);
    static final jdk.incubator.foreign.MemoryAddress CREDENTIAL_OID_PASSWORD_CREDENTIALS_A() { return CREDENTIAL_OID_PASSWORD_CREDENTIALS_A$ADDR_CONSTANT_; }

    static final MemoryAddress CREDENTIAL_OID_PASSWORD_CREDENTIALS_W$ADDR_CONSTANT_ = MemoryAddress.ofLong(2L);
    static final jdk.incubator.foreign.MemoryAddress CREDENTIAL_OID_PASSWORD_CREDENTIALS_W() { return CREDENTIAL_OID_PASSWORD_CREDENTIALS_W$ADDR_CONSTANT_; }

    static final MemoryAddress CREDENTIAL_OID_PASSWORD_CREDENTIALS$ADDR_CONSTANT_ = MemoryAddress.ofLong(1L);
    static final jdk.incubator.foreign.MemoryAddress CREDENTIAL_OID_PASSWORD_CREDENTIALS() { return CREDENTIAL_OID_PASSWORD_CREDENTIALS$ADDR_CONSTANT_; }

    static final MemorySegment SCHEME_OID_RETRIEVE_ENCODED_OBJECT_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("SchemeDllRetrieveEncodedObject");
    static final jdk.incubator.foreign.MemorySegment SCHEME_OID_RETRIEVE_ENCODED_OBJECT_FUNC() { return SCHEME_OID_RETRIEVE_ENCODED_OBJECT_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment SCHEME_OID_RETRIEVE_ENCODED_OBJECTW_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("SchemeDllRetrieveEncodedObjectW");
    static final jdk.incubator.foreign.MemorySegment SCHEME_OID_RETRIEVE_ENCODED_OBJECTW_FUNC() { return SCHEME_OID_RETRIEVE_ENCODED_OBJECTW_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment CONTEXT_OID_CREATE_OBJECT_CONTEXT_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("ContextDllCreateObjectContext");
    static final jdk.incubator.foreign.MemorySegment CONTEXT_OID_CREATE_OBJECT_CONTEXT_FUNC() { return CONTEXT_OID_CREATE_OBJECT_CONTEXT_FUNC$SEGMENT_CONSTANT_; }

    static final MemoryAddress CONTEXT_OID_CERTIFICATE$ADDR_CONSTANT_ = MemoryAddress.ofLong(1L);
    static final jdk.incubator.foreign.MemoryAddress CONTEXT_OID_CERTIFICATE() { return CONTEXT_OID_CERTIFICATE$ADDR_CONSTANT_; }

    static final MemoryAddress CONTEXT_OID_CRL$ADDR_CONSTANT_ = MemoryAddress.ofLong(2L);
    static final jdk.incubator.foreign.MemoryAddress CONTEXT_OID_CRL() { return CONTEXT_OID_CRL$ADDR_CONSTANT_; }

    static final MemoryAddress CONTEXT_OID_CTL$ADDR_CONSTANT_ = MemoryAddress.ofLong(3L);
    static final jdk.incubator.foreign.MemoryAddress CONTEXT_OID_CTL() { return CONTEXT_OID_CTL$ADDR_CONSTANT_; }

    static final MemoryAddress CONTEXT_OID_PKCS7$ADDR_CONSTANT_ = MemoryAddress.ofLong(4L);
    static final jdk.incubator.foreign.MemoryAddress CONTEXT_OID_PKCS7() { return CONTEXT_OID_PKCS7$ADDR_CONSTANT_; }

    static final MemoryAddress CONTEXT_OID_CAPI2_ANY$ADDR_CONSTANT_ = MemoryAddress.ofLong(5L);
    static final jdk.incubator.foreign.MemoryAddress CONTEXT_OID_CAPI2_ANY() { return CONTEXT_OID_CAPI2_ANY$ADDR_CONSTANT_; }

    static final MemoryAddress CONTEXT_OID_OCSP_RESP$ADDR_CONSTANT_ = MemoryAddress.ofLong(6L);
    static final jdk.incubator.foreign.MemoryAddress CONTEXT_OID_OCSP_RESP() { return CONTEXT_OID_OCSP_RESP$ADDR_CONSTANT_; }

    static final int CRYPTNET_URL_CACHE_DISABLE_FLUSH() { return (int)4294967295L; }

    static final MemoryAddress CRYPT_PARAM_ASYNC_RETRIEVAL_COMPLETION$ADDR_CONSTANT_ = MemoryAddress.ofLong(1L);
    static final jdk.incubator.foreign.MemoryAddress CRYPT_PARAM_ASYNC_RETRIEVAL_COMPLETION() { return CRYPT_PARAM_ASYNC_RETRIEVAL_COMPLETION$ADDR_CONSTANT_; }

    static final MemoryAddress CRYPT_PARAM_CANCEL_ASYNC_RETRIEVAL$ADDR_CONSTANT_ = MemoryAddress.ofLong(2L);
    static final jdk.incubator.foreign.MemoryAddress CRYPT_PARAM_CANCEL_ASYNC_RETRIEVAL() { return CRYPT_PARAM_CANCEL_ASYNC_RETRIEVAL$ADDR_CONSTANT_; }

    static final MemorySegment URL_OID_GET_OBJECT_URL_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("UrlDllGetObjectUrl");
    static final jdk.incubator.foreign.MemorySegment URL_OID_GET_OBJECT_URL_FUNC() { return URL_OID_GET_OBJECT_URL_FUNC$SEGMENT_CONSTANT_; }

    static final MemoryAddress URL_OID_CERTIFICATE_ISSUER$ADDR_CONSTANT_ = MemoryAddress.ofLong(1L);
    static final jdk.incubator.foreign.MemoryAddress URL_OID_CERTIFICATE_ISSUER() { return URL_OID_CERTIFICATE_ISSUER$ADDR_CONSTANT_; }

    static final MemoryAddress URL_OID_CERTIFICATE_CRL_DIST_POINT$ADDR_CONSTANT_ = MemoryAddress.ofLong(2L);
    static final jdk.incubator.foreign.MemoryAddress URL_OID_CERTIFICATE_CRL_DIST_POINT() { return URL_OID_CERTIFICATE_CRL_DIST_POINT$ADDR_CONSTANT_; }

    static final MemoryAddress URL_OID_CTL_ISSUER$ADDR_CONSTANT_ = MemoryAddress.ofLong(3L);
    static final jdk.incubator.foreign.MemoryAddress URL_OID_CTL_ISSUER() { return URL_OID_CTL_ISSUER$ADDR_CONSTANT_; }

    static final MemoryAddress URL_OID_CTL_NEXT_UPDATE$ADDR_CONSTANT_ = MemoryAddress.ofLong(4L);
    static final jdk.incubator.foreign.MemoryAddress URL_OID_CTL_NEXT_UPDATE() { return URL_OID_CTL_NEXT_UPDATE$ADDR_CONSTANT_; }

    static final MemoryAddress URL_OID_CRL_ISSUER$ADDR_CONSTANT_ = MemoryAddress.ofLong(5L);
    static final jdk.incubator.foreign.MemoryAddress URL_OID_CRL_ISSUER() { return URL_OID_CRL_ISSUER$ADDR_CONSTANT_; }

    static final MemoryAddress URL_OID_CERTIFICATE_FRESHEST_CRL$ADDR_CONSTANT_ = MemoryAddress.ofLong(6L);
    static final jdk.incubator.foreign.MemoryAddress URL_OID_CERTIFICATE_FRESHEST_CRL() { return URL_OID_CERTIFICATE_FRESHEST_CRL$ADDR_CONSTANT_; }

    static final MemoryAddress URL_OID_CRL_FRESHEST_CRL$ADDR_CONSTANT_ = MemoryAddress.ofLong(7L);
    static final jdk.incubator.foreign.MemoryAddress URL_OID_CRL_FRESHEST_CRL() { return URL_OID_CRL_FRESHEST_CRL$ADDR_CONSTANT_; }

    static final MemoryAddress URL_OID_CROSS_CERT_DIST_POINT$ADDR_CONSTANT_ = MemoryAddress.ofLong(8L);
    static final jdk.incubator.foreign.MemoryAddress URL_OID_CROSS_CERT_DIST_POINT() { return URL_OID_CROSS_CERT_DIST_POINT$ADDR_CONSTANT_; }

    static final MemoryAddress URL_OID_CERTIFICATE_OCSP$ADDR_CONSTANT_ = MemoryAddress.ofLong(9L);
    static final jdk.incubator.foreign.MemoryAddress URL_OID_CERTIFICATE_OCSP() { return URL_OID_CERTIFICATE_OCSP$ADDR_CONSTANT_; }

    static final MemoryAddress URL_OID_CERTIFICATE_OCSP_AND_CRL_DIST_POINT$ADDR_CONSTANT_ = MemoryAddress.ofLong(10L);
    static final jdk.incubator.foreign.MemoryAddress URL_OID_CERTIFICATE_OCSP_AND_CRL_DIST_POINT() { return URL_OID_CERTIFICATE_OCSP_AND_CRL_DIST_POINT$ADDR_CONSTANT_; }

    static final MemoryAddress URL_OID_CERTIFICATE_CRL_DIST_POINT_AND_OCSP$ADDR_CONSTANT_ = MemoryAddress.ofLong(11L);
    static final jdk.incubator.foreign.MemoryAddress URL_OID_CERTIFICATE_CRL_DIST_POINT_AND_OCSP() { return URL_OID_CERTIFICATE_CRL_DIST_POINT_AND_OCSP$ADDR_CONSTANT_; }

    static final MemoryAddress URL_OID_CROSS_CERT_SUBJECT_INFO_ACCESS$ADDR_CONSTANT_ = MemoryAddress.ofLong(12L);
    static final jdk.incubator.foreign.MemoryAddress URL_OID_CROSS_CERT_SUBJECT_INFO_ACCESS() { return URL_OID_CROSS_CERT_SUBJECT_INFO_ACCESS$ADDR_CONSTANT_; }

    static final MemoryAddress URL_OID_CERTIFICATE_ONLY_OCSP$ADDR_CONSTANT_ = MemoryAddress.ofLong(13L);
    static final jdk.incubator.foreign.MemoryAddress URL_OID_CERTIFICATE_ONLY_OCSP() { return URL_OID_CERTIFICATE_ONLY_OCSP$ADDR_CONSTANT_; }

    static final MemorySegment TIME_VALID_OID_GET_OBJECT_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("TimeValidDllGetObject");
    static final jdk.incubator.foreign.MemorySegment TIME_VALID_OID_GET_OBJECT_FUNC() { return TIME_VALID_OID_GET_OBJECT_FUNC$SEGMENT_CONSTANT_; }

    static final MemoryAddress TIME_VALID_OID_GET_CTL$ADDR_CONSTANT_ = MemoryAddress.ofLong(1L);
    static final jdk.incubator.foreign.MemoryAddress TIME_VALID_OID_GET_CTL() { return TIME_VALID_OID_GET_CTL$ADDR_CONSTANT_; }

    static final MemoryAddress TIME_VALID_OID_GET_CRL$ADDR_CONSTANT_ = MemoryAddress.ofLong(2L);
    static final jdk.incubator.foreign.MemoryAddress TIME_VALID_OID_GET_CRL() { return TIME_VALID_OID_GET_CRL$ADDR_CONSTANT_; }

    static final MemoryAddress TIME_VALID_OID_GET_CRL_FROM_CERT$ADDR_CONSTANT_ = MemoryAddress.ofLong(3L);
    static final jdk.incubator.foreign.MemoryAddress TIME_VALID_OID_GET_CRL_FROM_CERT() { return TIME_VALID_OID_GET_CRL_FROM_CERT$ADDR_CONSTANT_; }

    static final MemoryAddress TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CERT$ADDR_CONSTANT_ = MemoryAddress.ofLong(4L);
    static final jdk.incubator.foreign.MemoryAddress TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CERT() { return TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CERT$ADDR_CONSTANT_; }

    static final MemoryAddress TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CRL$ADDR_CONSTANT_ = MemoryAddress.ofLong(5L);
    static final jdk.incubator.foreign.MemoryAddress TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CRL() { return TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CRL$ADDR_CONSTANT_; }

    static final MemorySegment TIME_VALID_OID_FLUSH_OBJECT_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("TimeValidDllFlushObject");
    static final jdk.incubator.foreign.MemorySegment TIME_VALID_OID_FLUSH_OBJECT_FUNC() { return TIME_VALID_OID_FLUSH_OBJECT_FUNC$SEGMENT_CONSTANT_; }

    static final MemoryAddress TIME_VALID_OID_FLUSH_CTL$ADDR_CONSTANT_ = MemoryAddress.ofLong(1L);
    static final jdk.incubator.foreign.MemoryAddress TIME_VALID_OID_FLUSH_CTL() { return TIME_VALID_OID_FLUSH_CTL$ADDR_CONSTANT_; }

    static final MemoryAddress TIME_VALID_OID_FLUSH_CRL$ADDR_CONSTANT_ = MemoryAddress.ofLong(2L);
    static final jdk.incubator.foreign.MemoryAddress TIME_VALID_OID_FLUSH_CRL() { return TIME_VALID_OID_FLUSH_CRL$ADDR_CONSTANT_; }

    static final MemoryAddress TIME_VALID_OID_FLUSH_CRL_FROM_CERT$ADDR_CONSTANT_ = MemoryAddress.ofLong(3L);
    static final jdk.incubator.foreign.MemoryAddress TIME_VALID_OID_FLUSH_CRL_FROM_CERT() { return TIME_VALID_OID_FLUSH_CRL_FROM_CERT$ADDR_CONSTANT_; }

    static final MemoryAddress TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CERT$ADDR_CONSTANT_ = MemoryAddress.ofLong(4L);
    static final jdk.incubator.foreign.MemoryAddress TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CERT() { return TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CERT$ADDR_CONSTANT_; }

    static final MemoryAddress TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CRL$ADDR_CONSTANT_ = MemoryAddress.ofLong(5L);
    static final jdk.incubator.foreign.MemoryAddress TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CRL() { return TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CRL$ADDR_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_CONFIG_REGPATH$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_CONFIG_REGPATH() { return CERT_CHAIN_CONFIG_REGPATH$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_MAX_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_MAX_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME() { return CERT_CHAIN_MAX_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CERT_CHAIN_MAX_URL_RETRIEVAL_BYTE_COUNT_DEFAULT() { return (int)104857600L; }

    static final MemorySegment CERT_CHAIN_CACHE_RESYNC_FILETIME_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_CACHE_RESYNC_FILETIME_VALUE_NAME() { return CERT_CHAIN_CACHE_RESYNC_FILETIME_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_DISABLE_MANDATORY_BASIC_CONSTRAINTS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_DISABLE_MANDATORY_BASIC_CONSTRAINTS_VALUE_NAME() { return CERT_CHAIN_DISABLE_MANDATORY_BASIC_CONSTRAINTS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_DISABLE_CA_NAME_CONSTRAINTS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_DISABLE_CA_NAME_CONSTRAINTS_VALUE_NAME() { return CERT_CHAIN_DISABLE_CA_NAME_CONSTRAINTS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_DISABLE_UNSUPPORTED_CRITICAL_EXTENSIONS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_DISABLE_UNSUPPORTED_CRITICAL_EXTENSIONS_VALUE_NAME() { return CERT_CHAIN_DISABLE_UNSUPPORTED_CRITICAL_EXTENSIONS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_VALUE_NAME() { return CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_VALUE_NAME() { return CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME() { return CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_VALUE_NAME() { return CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_OCSP_VALIDITY_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("O");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_OCSP_VALIDITY_SECONDS_VALUE_NAME() { return CERT_CHAIN_OCSP_VALIDITY_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CERT_CHAIN_OCSP_VALIDITY_SECONDS_DEFAULT() { return (int)43200L; }

    static final MemorySegment CERT_CHAIN_DISABLE_SERIAL_CHAIN_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_DISABLE_SERIAL_CHAIN_VALUE_NAME() { return CERT_CHAIN_DISABLE_SERIAL_CHAIN_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_SERIAL_CHAIN_LOG_FILE_NAME_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_SERIAL_CHAIN_LOG_FILE_NAME_VALUE_NAME() { return CERT_CHAIN_SERIAL_CHAIN_LOG_FILE_NAME_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_DISABLE_SYNC_WITH_SSL_TIME_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_DISABLE_SYNC_WITH_SSL_TIME_VALUE_NAME() { return CERT_CHAIN_DISABLE_SYNC_WITH_SSL_TIME_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_VALUE_NAME() { return CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DISABLE() { return (int)4294967295L; }

    static final MemorySegment CERT_CHAIN_SSL_HANDSHAKE_LOG_FILE_NAME_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_SSL_HANDSHAKE_LOG_FILE_NAME_VALUE_NAME() { return CERT_CHAIN_SSL_HANDSHAKE_LOG_FILE_NAME_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_ENABLE_WEAK_SIGNATURE_FLAGS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_ENABLE_WEAK_SIGNATURE_FLAGS_VALUE_NAME() { return CERT_CHAIN_ENABLE_WEAK_SIGNATURE_FLAGS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_VALUE_NAME() { return CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DISABLE() { return (int)4294967295L; }

    static final MemorySegment CERT_CHAIN_WEAK_RSA_PUB_KEY_TIME_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("W");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_WEAK_RSA_PUB_KEY_TIME_VALUE_NAME() { return CERT_CHAIN_WEAK_RSA_PUB_KEY_TIME_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final long CERT_CHAIN_WEAK_RSA_PUB_KEY_TIME_DEFAULT() { return 129067776000000000L; }

    static final MemorySegment CERT_CHAIN_WEAK_SIGNATURE_LOG_DIR_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("W");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_WEAK_SIGNATURE_LOG_DIR_VALUE_NAME() { return CERT_CHAIN_WEAK_SIGNATURE_LOG_DIR_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_DEFAULT_CONFIG_SUBDIR$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_DEFAULT_CONFIG_SUBDIR() { return CERT_CHAIN_DEFAULT_CONFIG_SUBDIR$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_WEAK_PREFIX_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("W");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_WEAK_PREFIX_NAME() { return CERT_CHAIN_WEAK_PREFIX_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_WEAK_THIRD_PARTY_CONFIG_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("T");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_WEAK_THIRD_PARTY_CONFIG_NAME() { return CERT_CHAIN_WEAK_THIRD_PARTY_CONFIG_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_WEAK_ALL_CONFIG_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("A");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_WEAK_ALL_CONFIG_NAME() { return CERT_CHAIN_WEAK_ALL_CONFIG_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_WEAK_FLAGS_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("F");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_WEAK_FLAGS_NAME() { return CERT_CHAIN_WEAK_FLAGS_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_WEAK_HYGIENE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("H");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_WEAK_HYGIENE_NAME() { return CERT_CHAIN_WEAK_HYGIENE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_WEAK_AFTER_TIME_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("A");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_WEAK_AFTER_TIME_NAME() { return CERT_CHAIN_WEAK_AFTER_TIME_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_WEAK_FILE_HASH_AFTER_TIME_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("F");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_WEAK_FILE_HASH_AFTER_TIME_NAME() { return CERT_CHAIN_WEAK_FILE_HASH_AFTER_TIME_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_WEAK_TIMESTAMP_HASH_AFTER_TIME_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("T");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_WEAK_TIMESTAMP_HASH_AFTER_TIME_NAME() { return CERT_CHAIN_WEAK_TIMESTAMP_HASH_AFTER_TIME_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_WEAK_MIN_BIT_LENGTH_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_WEAK_MIN_BIT_LENGTH_NAME() { return CERT_CHAIN_WEAK_MIN_BIT_LENGTH_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_WEAK_SHA256_ALLOW_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_WEAK_SHA256_ALLOW_NAME() { return CERT_CHAIN_WEAK_SHA256_ALLOW_NAME$SEGMENT_CONSTANT_; }

    static final int CERT_CHAIN_MIN_PUB_KEY_BIT_LENGTH_DISABLE() { return (int)4294967295L; }

    static final int CERT_CHAIN_ENABLE_WEAK_SETTINGS_FLAG() { return (int)2147483648L; }

    static final int CERT_CHAIN_DISABLE_WEAK_FLAGS() { return (int)215285760L; }

    static final int CERT_CHAIN_DISABLE_FILE_HASH_WEAK_FLAGS() { return (int)12288L; }

    static final int CERT_CHAIN_DISABLE_TIMESTAMP_HASH_WEAK_FLAGS() { return (int)49152L; }

    static final int CERT_CHAIN_ENABLE_HYGIENE_FLAGS() { return (int)857866240L; }

    static final int CERT_CHAIN_MOTW_WEAK_FLAGS() { return (int)1786773504L; }

    static final int CERT_CHAIN_OPT_IN_WEAK_FLAGS() { return (int)262144L; }

    static final MemorySegment CERT_CHAIN_AUTO_FLAGS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("A");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_AUTO_FLAGS_VALUE_NAME() { return CERT_CHAIN_AUTO_FLAGS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CERT_CHAIN_AUTO_LOG_FLAGS() { return (int)14L; }

    static final MemorySegment CERT_CHAIN_AUTO_FLUSH_FIRST_DELTA_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("A");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_AUTO_FLUSH_FIRST_DELTA_SECONDS_VALUE_NAME() { return CERT_CHAIN_AUTO_FLUSH_FIRST_DELTA_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CERT_CHAIN_AUTO_FLUSH_FIRST_DELTA_SECONDS_DEFAULT() { return (int)300L; }

    static final MemorySegment CERT_CHAIN_AUTO_FLUSH_NEXT_DELTA_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("A");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_AUTO_FLUSH_NEXT_DELTA_SECONDS_VALUE_NAME() { return CERT_CHAIN_AUTO_FLUSH_NEXT_DELTA_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CERT_CHAIN_AUTO_FLUSH_NEXT_DELTA_SECONDS_DEFAULT() { return (int)1800L; }

    static final MemorySegment CERT_CHAIN_AUTO_LOG_FILE_NAME_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("A");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_AUTO_LOG_FILE_NAME_VALUE_NAME() { return CERT_CHAIN_AUTO_LOG_FILE_NAME_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_DISABLE_AUTO_FLUSH_PROCESS_NAME_LIST_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_DISABLE_AUTO_FLUSH_PROCESS_NAME_LIST_VALUE_NAME() { return CERT_CHAIN_DISABLE_AUTO_FLUSH_PROCESS_NAME_LIST_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_SRV_OCSP_RESP_MIN_VALIDITY_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_SRV_OCSP_RESP_MIN_VALIDITY_SECONDS_VALUE_NAME() { return CERT_SRV_OCSP_RESP_MIN_VALIDITY_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CERT_SRV_OCSP_RESP_MIN_VALIDITY_SECONDS_DEFAULT() { return (int)600L; }

    static final MemorySegment CERT_SRV_OCSP_RESP_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_SRV_OCSP_RESP_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME() { return CERT_SRV_OCSP_RESP_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CERT_SRV_OCSP_RESP_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_DEFAULT() { return (int)15000L; }

    static final MemorySegment CERT_SRV_OCSP_RESP_MAX_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_SRV_OCSP_RESP_MAX_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME() { return CERT_SRV_OCSP_RESP_MAX_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CERT_SRV_OCSP_RESP_MAX_BEFORE_NEXT_UPDATE_SECONDS_DEFAULT() { return (int)14400L; }

    static final MemorySegment CERT_SRV_OCSP_RESP_MIN_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_SRV_OCSP_RESP_MIN_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME() { return CERT_SRV_OCSP_RESP_MIN_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CERT_SRV_OCSP_RESP_MIN_BEFORE_NEXT_UPDATE_SECONDS_DEFAULT() { return (int)120L; }

    static final MemorySegment CERT_SRV_OCSP_RESP_MIN_AFTER_NEXT_UPDATE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_SRV_OCSP_RESP_MIN_AFTER_NEXT_UPDATE_SECONDS_VALUE_NAME() { return CERT_SRV_OCSP_RESP_MIN_AFTER_NEXT_UPDATE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CERT_SRV_OCSP_RESP_MIN_AFTER_NEXT_UPDATE_SECONDS_DEFAULT() { return (int)60L; }

    static final MemorySegment CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_VALUE_NAME() { return CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_SRV_OCSP_RESP_MAX_SYNC_CERT_FILE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_SRV_OCSP_RESP_MAX_SYNC_CERT_FILE_SECONDS_VALUE_NAME() { return CERT_SRV_OCSP_RESP_MAX_SYNC_CERT_FILE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CERT_SRV_OCSP_RESP_MAX_SYNC_CERT_FILE_SECONDS_DEFAULT() { return (int)3600L; }

    static final MemorySegment CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_VALUE_NAME() { return CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CRYPTNET_OCSP_AFTER_CRL_DISABLE() { return (int)4294967295L; }

    static final MemorySegment CRYPTNET_URL_CACHE_DEFAULT_FLUSH_EXEMPT_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_URL_CACHE_DEFAULT_FLUSH_EXEMPT_SECONDS_VALUE_NAME() { return CRYPTNET_URL_CACHE_DEFAULT_FLUSH_EXEMPT_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CRYPTNET_URL_CACHE_DEFAULT_FLUSH_EXEMPT_SECONDS_DEFAULT() { return (int)2419200L; }

    static final MemorySegment CRYPTNET_PRE_FETCH_MIN_MAX_AGE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_PRE_FETCH_MIN_MAX_AGE_SECONDS_VALUE_NAME() { return CRYPTNET_PRE_FETCH_MIN_MAX_AGE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CRYPTNET_PRE_FETCH_MIN_MAX_AGE_SECONDS_DEFAULT() { return (int)3600L; }

    static final MemorySegment CRYPTNET_PRE_FETCH_MAX_MAX_AGE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_PRE_FETCH_MAX_MAX_AGE_SECONDS_VALUE_NAME() { return CRYPTNET_PRE_FETCH_MAX_MAX_AGE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CRYPTNET_PRE_FETCH_MAX_MAX_AGE_SECONDS_DEFAULT() { return (int)1209600L; }

    static final MemorySegment CRYPTNET_PRE_FETCH_MIN_OCSP_VALIDITY_PERIOD_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_PRE_FETCH_MIN_OCSP_VALIDITY_PERIOD_SECONDS_VALUE_NAME() { return CRYPTNET_PRE_FETCH_MIN_OCSP_VALIDITY_PERIOD_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CRYPTNET_PRE_FETCH_MIN_OCSP_VALIDITY_PERIOD_SECONDS_DEFAULT() { return (int)1209600L; }

    static final MemorySegment CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_VALUE_NAME() { return CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_VALUE_NAME() { return CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPTNET_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME() { return CRYPTNET_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CRYPTNET_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_DEFAULT() { return (int)3600L; }

    static final MemorySegment CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_VALUE_NAME() { return CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPTNET_PRE_FETCH_MAX_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_PRE_FETCH_MAX_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME() { return CRYPTNET_PRE_FETCH_MAX_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CRYPTNET_PRE_FETCH_MAX_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_DEFAULT() { return (int)14400L; }

    static final MemorySegment CRYPTNET_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME() { return CRYPTNET_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CRYPTNET_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_DEFAULT() { return (int)1800L; }

    static final MemorySegment CRYPTNET_PRE_FETCH_AFTER_CURRENT_TIME_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_PRE_FETCH_AFTER_CURRENT_TIME_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME() { return CRYPTNET_PRE_FETCH_AFTER_CURRENT_TIME_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CRYPTNET_PRE_FETCH_AFTER_CURRENT_TIME_PRE_FETCH_PERIOD_SECONDS_DEFAULT() { return (int)1800L; }

    static final MemorySegment CRYPTNET_PRE_FETCH_TRIGGER_PERIOD_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_PRE_FETCH_TRIGGER_PERIOD_SECONDS_VALUE_NAME() { return CRYPTNET_PRE_FETCH_TRIGGER_PERIOD_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CRYPTNET_PRE_FETCH_TRIGGER_PERIOD_SECONDS_DEFAULT() { return (int)600L; }

    static final int CRYPTNET_PRE_FETCH_TRIGGER_DISABLE() { return (int)4294967295L; }

    static final MemorySegment CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_VALUE_NAME() { return CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPTNET_PRE_FETCH_RETRIEVAL_TIMEOUT_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_PRE_FETCH_RETRIEVAL_TIMEOUT_SECONDS_VALUE_NAME() { return CRYPTNET_PRE_FETCH_RETRIEVAL_TIMEOUT_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CRYPTNET_PRE_FETCH_RETRIEVAL_TIMEOUT_SECONDS_DEFAULT() { return (int)300L; }

    static final MemorySegment CRYPTNET_CRL_PRE_FETCH_CONFIG_REGPATH$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_CRL_PRE_FETCH_CONFIG_REGPATH() { return CRYPTNET_CRL_PRE_FETCH_CONFIG_REGPATH$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPTNET_CRL_PRE_FETCH_PROCESS_NAME_LIST_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_CRL_PRE_FETCH_PROCESS_NAME_LIST_VALUE_NAME() { return CRYPTNET_CRL_PRE_FETCH_PROCESS_NAME_LIST_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPTNET_CRL_PRE_FETCH_URL_LIST_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_CRL_PRE_FETCH_URL_LIST_VALUE_NAME() { return CRYPTNET_CRL_PRE_FETCH_URL_LIST_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPTNET_CRL_PRE_FETCH_DISABLE_INFORMATION_EVENTS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_CRL_PRE_FETCH_DISABLE_INFORMATION_EVENTS_VALUE_NAME() { return CRYPTNET_CRL_PRE_FETCH_DISABLE_INFORMATION_EVENTS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPTNET_CRL_PRE_FETCH_LOG_FILE_NAME_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("L");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_CRL_PRE_FETCH_LOG_FILE_NAME_VALUE_NAME() { return CRYPTNET_CRL_PRE_FETCH_LOG_FILE_NAME_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPTNET_CRL_PRE_FETCH_TIMEOUT_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("T");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_CRL_PRE_FETCH_TIMEOUT_SECONDS_VALUE_NAME() { return CRYPTNET_CRL_PRE_FETCH_TIMEOUT_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CRYPTNET_CRL_PRE_FETCH_TIMEOUT_SECONDS_DEFAULT() { return (int)300L; }

    static final MemorySegment CRYPTNET_CRL_PRE_FETCH_MAX_AGE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_CRL_PRE_FETCH_MAX_AGE_SECONDS_VALUE_NAME() { return CRYPTNET_CRL_PRE_FETCH_MAX_AGE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CRYPTNET_CRL_PRE_FETCH_MAX_AGE_SECONDS_DEFAULT() { return (int)7200L; }

    static final int CRYPTNET_CRL_PRE_FETCH_MAX_AGE_SECONDS_MIN() { return (int)300L; }

    static final MemorySegment CRYPTNET_CRL_PRE_FETCH_PUBLISH_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_CRL_PRE_FETCH_PUBLISH_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME() { return CRYPTNET_CRL_PRE_FETCH_PUBLISH_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CRYPTNET_CRL_PRE_FETCH_PUBLISH_BEFORE_NEXT_UPDATE_SECONDS_DEFAULT() { return (int)3600L; }

    static final MemorySegment CRYPTNET_CRL_PRE_FETCH_PUBLISH_RANDOM_INTERVAL_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_CRL_PRE_FETCH_PUBLISH_RANDOM_INTERVAL_SECONDS_VALUE_NAME() { return CRYPTNET_CRL_PRE_FETCH_PUBLISH_RANDOM_INTERVAL_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CRYPTNET_CRL_PRE_FETCH_PUBLISH_RANDOM_INTERVAL_SECONDS_DEFAULT() { return (int)300L; }

    static final MemorySegment CRYPTNET_CRL_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_CRL_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME() { return CRYPTNET_CRL_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CRYPTNET_CRL_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_SECONDS_DEFAULT() { return (int)300L; }

    static final MemorySegment CRYPTNET_CRL_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_CRL_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_SECONDS_VALUE_NAME() { return CRYPTNET_CRL_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_SECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CRYPTNET_CRL_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_SECONDS_DEFAULT() { return (int)300L; }

    static final MemorySegment CERT_GROUP_POLICY_CHAIN_CONFIG_REGPATH$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment CERT_GROUP_POLICY_CHAIN_CONFIG_REGPATH() { return CERT_GROUP_POLICY_CHAIN_CONFIG_REGPATH$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME() { return CERT_CHAIN_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CERT_CHAIN_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_DEFAULT() { return (int)15000L; }

    static final MemorySegment CERT_CHAIN_REV_ACCUMULATIVE_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_REV_ACCUMULATIVE_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME() { return CERT_CHAIN_REV_ACCUMULATIVE_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CERT_CHAIN_REV_ACCUMULATIVE_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_DEFAULT() { return (int)20000L; }

    static final MemorySegment CERT_RETR_BEHAVIOR_INET_AUTH_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment CERT_RETR_BEHAVIOR_INET_AUTH_VALUE_NAME() { return CERT_RETR_BEHAVIOR_INET_AUTH_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_RETR_BEHAVIOR_INET_STATUS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment CERT_RETR_BEHAVIOR_INET_STATUS_VALUE_NAME() { return CERT_RETR_BEHAVIOR_INET_STATUS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_RETR_BEHAVIOR_FILE_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("A");
    static final jdk.incubator.foreign.MemorySegment CERT_RETR_BEHAVIOR_FILE_VALUE_NAME() { return CERT_RETR_BEHAVIOR_FILE_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_RETR_BEHAVIOR_LDAP_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment CERT_RETR_BEHAVIOR_LDAP_VALUE_NAME() { return CERT_RETR_BEHAVIOR_LDAP_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_VALUE_NAME() { return CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CRYPTNET_CRL_BEFORE_OCSP_ENABLE() { return (int)4294967295L; }

    static final MemorySegment CERT_CHAIN_DISABLE_AIA_URL_RETRIEVAL_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_DISABLE_AIA_URL_RETRIEVAL_VALUE_NAME() { return CERT_CHAIN_DISABLE_AIA_URL_RETRIEVAL_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_OPTIONS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("O");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_OPTIONS_VALUE_NAME() { return CERT_CHAIN_OPTIONS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_CHAIN_CROSS_CERT_DOWNLOAD_INTERVAL_HOURS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_CROSS_CERT_DOWNLOAD_INTERVAL_HOURS_VALUE_NAME() { return CERT_CHAIN_CROSS_CERT_DOWNLOAD_INTERVAL_HOURS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final int CERT_CHAIN_CROSS_CERT_DOWNLOAD_INTERVAL_HOURS_DEFAULT() { return (int)168L; }

    static final MemorySegment CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_VALUE_NAME() { return CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemoryAddress HCCE_CURRENT_USER$ADDR_CONSTANT_ = MemoryAddress.ofLong(0L);
    static final jdk.incubator.foreign.MemoryAddress HCCE_CURRENT_USER() { return HCCE_CURRENT_USER$ADDR_CONSTANT_; }

    static final MemoryAddress HCCE_LOCAL_MACHINE$ADDR_CONSTANT_ = MemoryAddress.ofLong(1L);
    static final jdk.incubator.foreign.MemoryAddress HCCE_LOCAL_MACHINE() { return HCCE_LOCAL_MACHINE$ADDR_CONSTANT_; }

    static final MemoryAddress HCCE_SERIAL_LOCAL_MACHINE$ADDR_CONSTANT_ = MemoryAddress.ofLong(2L);
    static final jdk.incubator.foreign.MemoryAddress HCCE_SERIAL_LOCAL_MACHINE() { return HCCE_SERIAL_LOCAL_MACHINE$ADDR_CONSTANT_; }

    static final int CERT_CHAIN_REVOCATION_CHECK_CACHE_ONLY() { return (int)2147483648L; }

    static final MemoryAddress REVOCATION_OID_CRL_REVOCATION$ADDR_CONSTANT_ = MemoryAddress.ofLong(1L);
    static final jdk.incubator.foreign.MemoryAddress REVOCATION_OID_CRL_REVOCATION() { return REVOCATION_OID_CRL_REVOCATION$ADDR_CONSTANT_; }

    static final int CERT_CHAIN_POLICY_IGNORE_ALL_NOT_TIME_VALID_FLAGS() { return (int)7L; }

    static final int CERT_CHAIN_POLICY_IGNORE_ALL_REV_UNKNOWN_FLAGS() { return (int)3840L; }

    static final MemorySegment CRYPT_OID_VERIFY_CERTIFICATE_CHAIN_POLICY_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("CertDllVerifyCertificateChainPolicy");
    static final jdk.incubator.foreign.MemorySegment CRYPT_OID_VERIFY_CERTIFICATE_CHAIN_POLICY_FUNC() { return CRYPT_OID_VERIFY_CERTIFICATE_CHAIN_POLICY_FUNC$SEGMENT_CONSTANT_; }

    static final MemoryAddress CERT_CHAIN_POLICY_BASE$ADDR_CONSTANT_ = MemoryAddress.ofLong(1L);
    static final jdk.incubator.foreign.MemoryAddress CERT_CHAIN_POLICY_BASE() { return CERT_CHAIN_POLICY_BASE$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_CHAIN_POLICY_AUTHENTICODE$ADDR_CONSTANT_ = MemoryAddress.ofLong(2L);
    static final jdk.incubator.foreign.MemoryAddress CERT_CHAIN_POLICY_AUTHENTICODE() { return CERT_CHAIN_POLICY_AUTHENTICODE$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_CHAIN_POLICY_AUTHENTICODE_TS$ADDR_CONSTANT_ = MemoryAddress.ofLong(3L);
    static final jdk.incubator.foreign.MemoryAddress CERT_CHAIN_POLICY_AUTHENTICODE_TS() { return CERT_CHAIN_POLICY_AUTHENTICODE_TS$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_CHAIN_POLICY_SSL$ADDR_CONSTANT_ = MemoryAddress.ofLong(4L);
    static final jdk.incubator.foreign.MemoryAddress CERT_CHAIN_POLICY_SSL() { return CERT_CHAIN_POLICY_SSL$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_CHAIN_POLICY_BASIC_CONSTRAINTS$ADDR_CONSTANT_ = MemoryAddress.ofLong(5L);
    static final jdk.incubator.foreign.MemoryAddress CERT_CHAIN_POLICY_BASIC_CONSTRAINTS() { return CERT_CHAIN_POLICY_BASIC_CONSTRAINTS$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_CHAIN_POLICY_NT_AUTH$ADDR_CONSTANT_ = MemoryAddress.ofLong(6L);
    static final jdk.incubator.foreign.MemoryAddress CERT_CHAIN_POLICY_NT_AUTH() { return CERT_CHAIN_POLICY_NT_AUTH$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_CHAIN_POLICY_MICROSOFT_ROOT$ADDR_CONSTANT_ = MemoryAddress.ofLong(7L);
    static final jdk.incubator.foreign.MemoryAddress CERT_CHAIN_POLICY_MICROSOFT_ROOT() { return CERT_CHAIN_POLICY_MICROSOFT_ROOT$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_CHAIN_POLICY_EV$ADDR_CONSTANT_ = MemoryAddress.ofLong(8L);
    static final jdk.incubator.foreign.MemoryAddress CERT_CHAIN_POLICY_EV() { return CERT_CHAIN_POLICY_EV$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_CHAIN_POLICY_SSL_F12$ADDR_CONSTANT_ = MemoryAddress.ofLong(9L);
    static final jdk.incubator.foreign.MemoryAddress CERT_CHAIN_POLICY_SSL_F12() { return CERT_CHAIN_POLICY_SSL_F12$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_CHAIN_POLICY_SSL_HPKP_HEADER$ADDR_CONSTANT_ = MemoryAddress.ofLong(10L);
    static final jdk.incubator.foreign.MemoryAddress CERT_CHAIN_POLICY_SSL_HPKP_HEADER() { return CERT_CHAIN_POLICY_SSL_HPKP_HEADER$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_CHAIN_POLICY_THIRD_PARTY_ROOT$ADDR_CONSTANT_ = MemoryAddress.ofLong(11L);
    static final jdk.incubator.foreign.MemoryAddress CERT_CHAIN_POLICY_THIRD_PARTY_ROOT() { return CERT_CHAIN_POLICY_THIRD_PARTY_ROOT$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_CHAIN_POLICY_SSL_KEY_PIN$ADDR_CONSTANT_ = MemoryAddress.ofLong(12L);
    static final jdk.incubator.foreign.MemoryAddress CERT_CHAIN_POLICY_SSL_KEY_PIN() { return CERT_CHAIN_POLICY_SSL_KEY_PIN$ADDR_CONSTANT_; }

    static final int BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_CA_FLAG() { return (int)2147483648L; }

    static final int CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_ERROR() { return (int)-2L; }

    static final int CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_ERROR() { return (int)-1L; }

    static final int CRYPT_STRING_NOCR() { return (int)2147483648L; }

    static final MemorySegment szOID_PKCS_12_PbeIds$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.12.1");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_12_PbeIds() { return szOID_PKCS_12_PbeIds$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_12_pbeWithSHA1And128BitRC4$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.12.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_12_pbeWithSHA1And128BitRC4() { return szOID_PKCS_12_pbeWithSHA1And128BitRC4$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_12_pbeWithSHA1And40BitRC4$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.12.1.2");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_12_pbeWithSHA1And40BitRC4() { return szOID_PKCS_12_pbeWithSHA1And40BitRC4$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_12_pbeWithSHA1And3KeyTripleDES$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.12.1.3");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_12_pbeWithSHA1And3KeyTripleDES() { return szOID_PKCS_12_pbeWithSHA1And3KeyTripleDES$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_12_pbeWithSHA1And2KeyTripleDES$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.12.1.4");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_12_pbeWithSHA1And2KeyTripleDES() { return szOID_PKCS_12_pbeWithSHA1And2KeyTripleDES$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_12_pbeWithSHA1And128BitRC2$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.12.1.5");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_12_pbeWithSHA1And128BitRC2() { return szOID_PKCS_12_pbeWithSHA1And128BitRC2$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_12_pbeWithSHA1And40BitRC2$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.12.1.6");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_12_pbeWithSHA1And40BitRC2() { return szOID_PKCS_12_pbeWithSHA1And40BitRC2$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_5_PBKDF2$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.5.12");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_5_PBKDF2() { return szOID_PKCS_5_PBKDF2$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_5_PBES2$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.5.13");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_5_PBES2() { return szOID_PKCS_5_PBES2$SEGMENT_CONSTANT_; }

    static final int PKCS12_IMPORT_RESERVED_MASK() { return (int)4294901760L; }

    static final int PKCS12_OBJECT_LOCATOR_ALL_IMPORT_FLAGS() { return (int)33360L; }

    static final MemorySegment PKCS12_ONLY_CERTIFICATES_PROVIDER_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment PKCS12_ONLY_CERTIFICATES_PROVIDER_NAME() { return PKCS12_ONLY_CERTIFICATES_PROVIDER_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment PKCS12_ONLY_CERTIFICATES_CONTAINER_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment PKCS12_ONLY_CERTIFICATES_CONTAINER_NAME() { return PKCS12_ONLY_CERTIFICATES_CONTAINER_NAME$SEGMENT_CONSTANT_; }

    static final int PKCS12_EXPORT_RESERVED_MASK() { return (int)4294901760L; }

    static final MemorySegment PKCS12_PBKDF2_ID_HMAC_SHA1$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.2.7");
    static final jdk.incubator.foreign.MemorySegment PKCS12_PBKDF2_ID_HMAC_SHA1() { return PKCS12_PBKDF2_ID_HMAC_SHA1$SEGMENT_CONSTANT_; }

    static final MemorySegment PKCS12_PBKDF2_ID_HMAC_SHA256$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.2.9");
    static final jdk.incubator.foreign.MemorySegment PKCS12_PBKDF2_ID_HMAC_SHA256() { return PKCS12_PBKDF2_ID_HMAC_SHA256$SEGMENT_CONSTANT_; }

    static final MemorySegment PKCS12_PBKDF2_ID_HMAC_SHA384$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.2.10");
    static final jdk.incubator.foreign.MemorySegment PKCS12_PBKDF2_ID_HMAC_SHA384() { return PKCS12_PBKDF2_ID_HMAC_SHA384$SEGMENT_CONSTANT_; }

    static final MemorySegment PKCS12_PBKDF2_ID_HMAC_SHA512$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.2.11");
    static final jdk.incubator.foreign.MemorySegment PKCS12_PBKDF2_ID_HMAC_SHA512() { return PKCS12_PBKDF2_ID_HMAC_SHA512$SEGMENT_CONSTANT_; }

    static final MemorySegment PKCS12_PBES2_ALG_AES256_SHA256$SEGMENT_CONSTANT_ = CLinker.toCString("A");
    static final jdk.incubator.foreign.MemorySegment PKCS12_PBES2_ALG_AES256_SHA256() { return PKCS12_PBES2_ALG_AES256_SHA256$SEGMENT_CONSTANT_; }

    static final MemorySegment PKCS12_CONFIG_REGPATH$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment PKCS12_CONFIG_REGPATH() { return PKCS12_CONFIG_REGPATH$SEGMENT_CONSTANT_; }

    static final MemorySegment PKCS12_ENCRYPT_CERTIFICATES_VALUE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment PKCS12_ENCRYPT_CERTIFICATES_VALUE_NAME() { return PKCS12_ENCRYPT_CERTIFICATES_VALUE_NAME$SEGMENT_CONSTANT_; }

    static final MemoryAddress CERT_RETRIEVE_ISSUER_LOGO$ADDR_CONSTANT_ = MemoryAddress.ofLong(1L);
    static final jdk.incubator.foreign.MemoryAddress CERT_RETRIEVE_ISSUER_LOGO() { return CERT_RETRIEVE_ISSUER_LOGO$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_RETRIEVE_SUBJECT_LOGO$ADDR_CONSTANT_ = MemoryAddress.ofLong(2L);
    static final jdk.incubator.foreign.MemoryAddress CERT_RETRIEVE_SUBJECT_LOGO() { return CERT_RETRIEVE_SUBJECT_LOGO$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_RETRIEVE_COMMUNITY_LOGO$ADDR_CONSTANT_ = MemoryAddress.ofLong(3L);
    static final jdk.incubator.foreign.MemoryAddress CERT_RETRIEVE_COMMUNITY_LOGO() { return CERT_RETRIEVE_COMMUNITY_LOGO$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_RETRIEVE_BIOMETRIC_PREDEFINED_BASE_TYPE$ADDR_CONSTANT_ = MemoryAddress.ofLong(1000L);
    static final jdk.incubator.foreign.MemoryAddress CERT_RETRIEVE_BIOMETRIC_PREDEFINED_BASE_TYPE() { return CERT_RETRIEVE_BIOMETRIC_PREDEFINED_BASE_TYPE$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_RETRIEVE_BIOMETRIC_PICTURE_TYPE$ADDR_CONSTANT_ = MemoryAddress.ofLong(1000L);
    static final jdk.incubator.foreign.MemoryAddress CERT_RETRIEVE_BIOMETRIC_PICTURE_TYPE() { return CERT_RETRIEVE_BIOMETRIC_PICTURE_TYPE$ADDR_CONSTANT_; }

    static final MemoryAddress CERT_RETRIEVE_BIOMETRIC_SIGNATURE_TYPE$ADDR_CONSTANT_ = MemoryAddress.ofLong(1001L);
    static final jdk.incubator.foreign.MemoryAddress CERT_RETRIEVE_BIOMETRIC_SIGNATURE_TYPE() { return CERT_RETRIEVE_BIOMETRIC_SIGNATURE_TYPE$ADDR_CONSTANT_; }

    static final int CERT_SELECT_LAST() { return (int)11L; }

    static final int CERT_SELECT_MAX() { return (int)33L; }

    static final MemorySegment SSL_OBJECT_LOCATOR_PFX_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("SslObjectLocatorInitializePfx");
    static final jdk.incubator.foreign.MemorySegment SSL_OBJECT_LOCATOR_PFX_FUNC() { return SSL_OBJECT_LOCATOR_PFX_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment SSL_OBJECT_LOCATOR_ISSUER_LIST_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("SslObjectLocatorInitializeIssuerList");
    static final jdk.incubator.foreign.MemorySegment SSL_OBJECT_LOCATOR_ISSUER_LIST_FUNC() { return SSL_OBJECT_LOCATOR_ISSUER_LIST_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment SSL_OBJECT_LOCATOR_CERT_VALIDATION_CONFIG_FUNC$SEGMENT_CONSTANT_ = CLinker.toCString("SslObjectLocatorInitializeCertValidationConfig");
    static final jdk.incubator.foreign.MemorySegment SSL_OBJECT_LOCATOR_CERT_VALIDATION_CONFIG_FUNC() { return SSL_OBJECT_LOCATOR_CERT_VALIDATION_CONFIG_FUNC$SEGMENT_CONSTANT_; }

    static final MemorySegment szFORCE_KEY_PROTECTION$SEGMENT_CONSTANT_ = CLinker.toCString("ForceKeyProtection");
    static final jdk.incubator.foreign.MemorySegment szFORCE_KEY_PROTECTION() { return szFORCE_KEY_PROTECTION$SEGMENT_CONSTANT_; }

    static final int CRYPTPROTECT_LAST_RESERVED_FLAGVAL() { return (int)4294967295L; }

    static final int __RPCNDR_H_VERSION__() { return (int)500L; }

    static final int __RPCSAL_H_VERSION__() { return (int)100L; }

    static final int NDR_CHAR_REP_MASK() { return (int)15L; }

    static final int NDR_INT_REP_MASK() { return (int)240L; }

    static final int NDR_FLOAT_REP_MASK() { return (int)65280L; }

    static final int NDR_LITTLE_ENDIAN() { return (int)16L; }

    static final int NDR_BIG_ENDIAN() { return (int)0L; }

    static final int NDR_IEEE_FLOAT() { return (int)0L; }

    static final int NDR_VAX_FLOAT() { return (int)256L; }

    static final int NDR_IBM_FLOAT() { return (int)768L; }

    static final int NDR_ASCII_CHAR() { return (int)0L; }

    static final int NDR_EBCDIC_CHAR() { return (int)1L; }

    static final int NDR_LOCAL_DATA_REPRESENTATION() { return (int)16L; }

    static final int NDR_LOCAL_ENDIAN() { return (int)16L; }

    static final int USER_MARSHAL_CB_SIGNATURE() { return (int)1431523907L; }

    static final int MIDL_WINRT_TYPE_SERIALIZATION_INFO_CURRENT_VERSION() { return (int)1L; }

    static final int CLSCTX_VALID_MASK() { return (int)-2082474977L; }

    static final int WDT_INPROC_CALL() { return (int)1215587415L; }

    static final int WDT_REMOTE_CALL() { return (int)1383359575L; }

    static final int WDT_INPROC64_CALL() { return (int)1349805143L; }

    static final byte DECIMAL_NEG() { return (byte)128L; }

    static final short VARIANT_TRUE() { return (short)-1L; }

    static final short VARIANT_FALSE() { return (short)0L; }

    static final int METHOD_DIRECT_TO_HARDWARE() { return (int)1L; }

    static final int METHOD_DIRECT_FROM_HARDWARE() { return (int)2L; }

    static final int FILE_SPECIAL_ACCESS() { return (int)0L; }

    static final int FILE_READ_ACCESS() { return (int)1L; }

    static final int FILE_WRITE_ACCESS() { return (int)2L; }

    static final int IOCTL_STORAGE_BASE() { return (int)45L; }

    static final int IOCTL_STORAGE_CHECK_VERIFY() { return (int)2967552L; }

    static final int IOCTL_STORAGE_CHECK_VERIFY2() { return (int)2951168L; }

    static final int IOCTL_STORAGE_MEDIA_REMOVAL() { return (int)2967556L; }

    static final int IOCTL_STORAGE_EJECT_MEDIA() { return (int)2967560L; }

    static final int IOCTL_STORAGE_LOAD_MEDIA() { return (int)2967564L; }

    static final int IOCTL_STORAGE_LOAD_MEDIA2() { return (int)2951180L; }

    static final int IOCTL_STORAGE_RESERVE() { return (int)2967568L; }

    static final int IOCTL_STORAGE_RELEASE() { return (int)2967572L; }

    static final int IOCTL_STORAGE_FIND_NEW_DEVICES() { return (int)2967576L; }

    static final int IOCTL_STORAGE_EJECTION_CONTROL() { return (int)2951488L; }

    static final int IOCTL_STORAGE_MCN_CONTROL() { return (int)2951492L; }

    static final int IOCTL_STORAGE_GET_MEDIA_TYPES() { return (int)2952192L; }

    static final int IOCTL_STORAGE_GET_MEDIA_TYPES_EX() { return (int)2952196L; }

    static final int IOCTL_STORAGE_GET_MEDIA_SERIAL_NUMBER() { return (int)2952208L; }

    static final int IOCTL_STORAGE_GET_HOTPLUG_INFO() { return (int)2952212L; }

    static final int IOCTL_STORAGE_SET_HOTPLUG_INFO() { return (int)3001368L; }

    static final int IOCTL_STORAGE_RESET_BUS() { return (int)2969600L; }

    static final int IOCTL_STORAGE_RESET_DEVICE() { return (int)2969604L; }

    static final int IOCTL_STORAGE_BREAK_RESERVATION() { return (int)2969620L; }

    static final int IOCTL_STORAGE_PERSISTENT_RESERVE_IN() { return (int)2969624L; }

    static final int IOCTL_STORAGE_PERSISTENT_RESERVE_OUT() { return (int)3002396L; }

    static final int IOCTL_STORAGE_GET_DEVICE_NUMBER() { return (int)2953344L; }

    static final int IOCTL_STORAGE_GET_DEVICE_NUMBER_EX() { return (int)2953348L; }

    static final int IOCTL_STORAGE_PREDICT_FAILURE() { return (int)2953472L; }

    static final int IOCTL_STORAGE_FAILURE_PREDICTION_CONFIG() { return (int)2953476L; }

    static final int IOCTL_STORAGE_GET_COUNTERS() { return (int)2953480L; }

    static final int IOCTL_STORAGE_READ_CAPACITY() { return (int)2969920L; }

    static final int IOCTL_STORAGE_GET_DEVICE_TELEMETRY() { return (int)3002816L; }

    static final int IOCTL_STORAGE_DEVICE_TELEMETRY_NOTIFY() { return (int)3002820L; }

    static final int IOCTL_STORAGE_DEVICE_TELEMETRY_QUERY_CAPS() { return (int)3002824L; }

    static final int IOCTL_STORAGE_GET_DEVICE_TELEMETRY_RAW() { return (int)3002828L; }

    static final int IOCTL_STORAGE_SET_TEMPERATURE_THRESHOLD() { return (int)3002880L; }

    static final int IOCTL_STORAGE_PROTOCOL_COMMAND() { return (int)3003328L; }

    static final int IOCTL_STORAGE_QUERY_PROPERTY() { return (int)2954240L; }

    static final int IOCTL_STORAGE_MANAGE_DATA_SET_ATTRIBUTES() { return (int)2987012L; }

    static final int IOCTL_STORAGE_GET_LB_PROVISIONING_MAP_RESOURCES() { return (int)2970632L; }

    static final int IOCTL_STORAGE_SET_PROPERTY() { return (int)2987020L; }

    static final int IOCTL_STORAGE_REINITIALIZE_MEDIA() { return (int)2987584L; }

    static final int IOCTL_STORAGE_GET_BC_PROPERTIES() { return (int)2971648L; }

    static final int IOCTL_STORAGE_ALLOCATE_BC_STREAM() { return (int)3004420L; }

    static final int IOCTL_STORAGE_FREE_BC_STREAM() { return (int)3004424L; }

    static final int IOCTL_STORAGE_CHECK_PRIORITY_HINT_SUPPORT() { return (int)2955392L; }

    static final int IOCTL_STORAGE_START_DATA_INTEGRITY_CHECK() { return (int)3004548L; }

    static final int IOCTL_STORAGE_STOP_DATA_INTEGRITY_CHECK() { return (int)3004552L; }

    static final int OBSOLETE_IOCTL_STORAGE_RESET_BUS() { return (int)3002368L; }

    static final int OBSOLETE_IOCTL_STORAGE_RESET_DEVICE() { return (int)3002372L; }

    static final int IOCTL_STORAGE_FIRMWARE_GET_INFO() { return (int)2956288L; }

    static final int IOCTL_STORAGE_FIRMWARE_DOWNLOAD() { return (int)3005444L; }

    static final int IOCTL_STORAGE_FIRMWARE_ACTIVATE() { return (int)3005448L; }

    static final int IOCTL_STORAGE_ENABLE_IDLE_POWER() { return (int)2956416L; }

    static final int IOCTL_STORAGE_GET_IDLE_POWERUP_REASON() { return (int)2956420L; }

    static final int IOCTL_STORAGE_POWER_ACTIVE() { return (int)2956424L; }

    static final int IOCTL_STORAGE_POWER_IDLE() { return (int)2956428L; }

    static final int IOCTL_STORAGE_EVENT_NOTIFICATION() { return (int)2956432L; }

    static final int IOCTL_STORAGE_DEVICE_POWER_CAP() { return (int)2956436L; }

    static final int IOCTL_STORAGE_RPMB_COMMAND() { return (int)2956440L; }

    static final int IOCTL_STORAGE_ATTRIBUTE_MANAGEMENT() { return (int)3005596L; }

    static final int IOCTL_STORAGE_DIAGNOSTIC() { return (int)2956448L; }

    static final int IOCTL_STORAGE_GET_PHYSICAL_ELEMENT_STATUS() { return (int)2956452L; }

    static final int IOCTL_STORAGE_REMOVE_ELEMENT_AND_TRUNCATE() { return (int)2956480L; }

    static final int IOCTL_STORAGE_GET_DEVICE_INTERNAL_LOG() { return (int)2956484L; }

    static final int TAPE_RETURN_STATISTICS() { return (int)0L; }

    static final int TAPE_RETURN_ENV_INFO() { return (int)1L; }

    static final int TAPE_RESET_STATISTICS() { return (int)2L; }

    static final int MEDIA_CURRENTLY_MOUNTED() { return (int)2147483648L; }

    static final int NO_SRBTYPE_ADAPTER_DESCRIPTOR_SIZE() { return (int)30L; }

    static final long STORAGE_MINIPORT_DESCRIPTOR_V1_SIZE() { return 16L; }

    static final int StorageIdTypeNAA() { return (int)3L; }

    static final long DEVICE_LB_PROVISIONING_DESCRIPTOR_V1_SIZE() { return 32L; }

    static final int STORAGE_TIER_NAME_LENGTH() { return (int)256L; }

    static final int STORAGE_TIER_DESCRIPTION_LENGTH() { return (int)512L; }

    static final int STORAGE_TIER_FLAG_NO_SEEK_PENALTY() { return (int)131072L; }

    static final int STORAGE_TIER_FLAG_WRITE_BACK_CACHE() { return (int)2097152L; }

    static final int STORAGE_TIER_FLAG_READ_CACHE() { return (int)4194304L; }

    static final int STORAGE_TIER_FLAG_PARITY() { return (int)8388608L; }

    static final int STORAGE_TIER_FLAG_SMR() { return (int)16777216L; }

    static final int STORAGE_ADAPTER_SERIAL_NUMBER_V1_MAX_LENGTH() { return (int)128L; }

    static final long STORAGE_ADAPTER_SERIAL_NUMBER_V1_VERSION() { return 264L; }

    static final long STORAGE_ADAPTER_SERIAL_NUMBER_V1_SIZE() { return 264L; }

    static final int STORAGE_DEVICE_NUMA_NODE_UNKNOWN() { return (int)4294967295L; }

    static final int DeviceDsmActionFlag_NonDestructive() { return (int)2147483648L; }

    static final int DeviceDsmAction_None() { return (int)0L; }

    static final int DeviceDsmAction_Trim() { return (int)1L; }

    static final int DeviceDsmAction_Notification() { return (int)2147483650L; }

    static final int DeviceDsmAction_OffloadRead() { return (int)2147483651L; }

    static final int DeviceDsmAction_OffloadWrite() { return (int)4L; }

    static final int DeviceDsmAction_Allocation() { return (int)2147483653L; }

    static final int DeviceDsmAction_Repair() { return (int)2147483654L; }

    static final int DeviceDsmAction_Scrub() { return (int)2147483655L; }

    static final int DeviceDsmAction_DrtQuery() { return (int)2147483656L; }

    static final int DeviceDsmAction_DrtClear() { return (int)2147483657L; }

    static final int DeviceDsmAction_DrtDisable() { return (int)2147483658L; }

    static final int DeviceDsmAction_TieringQuery() { return (int)2147483659L; }

    static final int DeviceDsmAction_Map() { return (int)2147483660L; }

    static final int DeviceDsmAction_RegenerateParity() { return (int)2147483661L; }

    static final int DeviceDsmAction_NvCache_Change_Priority() { return (int)2147483662L; }

    static final int DeviceDsmAction_NvCache_Evict() { return (int)2147483663L; }

    static final int DeviceDsmAction_TopologyIdQuery() { return (int)2147483664L; }

    static final int DeviceDsmAction_GetPhysicalAddresses() { return (int)2147483665L; }

    static final int DeviceDsmAction_ScopeRegen() { return (int)2147483666L; }

    static final int DeviceDsmAction_ReportZones() { return (int)2147483667L; }

    static final int DeviceDsmAction_OpenZone() { return (int)2147483668L; }

    static final int DeviceDsmAction_FinishZone() { return (int)2147483669L; }

    static final int DeviceDsmAction_CloseZone() { return (int)2147483670L; }

    static final int DeviceDsmAction_ResetWritePointer() { return (int)23L; }

    static final int DeviceDsmAction_GetRangeErrorInfo() { return (int)2147483672L; }

    static final int DeviceDsmAction_WriteZeroes() { return (int)25L; }

    static final int DeviceDsmAction_LostQuery() { return (int)2147483674L; }

    static final int DeviceDsmAction_GetFreeSpace() { return (int)2147483675L; }

    static final int DeviceDsmAction_ConversionQuery() { return (int)2147483676L; }

    static final int DeviceDsmAction_VdtSet() { return (int)29L; }

    static final int DEVICE_DSM_FLAG_TRIM_NOT_FS_ALLOCATED() { return (int)2147483648L; }

    static final int STORAGE_OFFLOAD_TOKEN_TYPE_ZERO_DATA() { return (int)4294901761L; }

    static final int DEVICE_DATA_SET_LBP_STATE_PARAMETERS_VERSION_V1() { return (int)1L; }

    static final long DEVICE_DSM_ALLOCATION_OUTPUT_V1() { return 32L; }

    static final long DEVICE_DATA_SET_LB_PROVISIONING_STATE_VERSION_V1() { return 32L; }

    static final long DEVICE_DSM_ALLOCATION_OUTPUT_V2() { return 40L; }

    static final long DEVICE_DATA_SET_LB_PROVISIONING_STATE_VERSION_V2() { return 40L; }

    static final long DEVICE_DSM_PHYSICAL_ADDRESS_HAS_MEMORY_ERROR() { return -1L; }

    static final int DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT_VERSION_V1() { return (int)1L; }

    static final int DEVICE_DSM_RANGE_ERROR_INFO_VERSION_V1() { return (int)1L; }

    static final MemorySegment STORAGE_CRASH_TELEMETRY_REGKEY$SEGMENT_CONSTANT_ = CLinker.toCString("\\");
    static final jdk.incubator.foreign.MemorySegment STORAGE_CRASH_TELEMETRY_REGKEY() { return STORAGE_CRASH_TELEMETRY_REGKEY$SEGMENT_CONSTANT_; }

    static final MemorySegment STORAGE_DEVICE_TELEMETRY_REGKEY$SEGMENT_CONSTANT_ = CLinker.toCString("\\");
    static final jdk.incubator.foreign.MemorySegment STORAGE_DEVICE_TELEMETRY_REGKEY() { return STORAGE_DEVICE_TELEMETRY_REGKEY$SEGMENT_CONSTANT_; }

    static final int FW_ISSUEID_UNKNOWN() { return (int)4294967295L; }

    static final MemorySegment TC_PUBLIC_DATA_TYPE_ATAGP$SEGMENT_CONSTANT_ = CLinker.toCString("ATAGPLogPages");
    static final jdk.incubator.foreign.MemorySegment TC_PUBLIC_DATA_TYPE_ATAGP() { return TC_PUBLIC_DATA_TYPE_ATAGP$SEGMENT_CONSTANT_; }

    static final MemorySegment TC_PUBLIC_DATA_TYPE_ATASMART$SEGMENT_CONSTANT_ = CLinker.toCString("ATASMARTPages");
    static final jdk.incubator.foreign.MemorySegment TC_PUBLIC_DATA_TYPE_ATASMART() { return TC_PUBLIC_DATA_TYPE_ATASMART$SEGMENT_CONSTANT_; }

    static final int STORAGE_EVENT_ALL() { return (int)7L; }

    static final long STORAGE_COUNTERS_VERSION_V1() { return 32L; }

    static final int STORAGE_HW_FIRMWARE_REQUEST_FLAG_SWITCH_TO_EXISTING_FIRMWARE() { return (int)2147483648L; }

    static final int STORAGE_PROTOCOL_COMMAND_FLAG_ADAPTER_REQUEST() { return (int)2147483648L; }

    static final int IOCTL_SCMBUS_BASE() { return (int)89L; }

    static final int IOCTL_SCM_BUS_GET_LOGICAL_DEVICES() { return (int)5832704L; }

    static final int IOCTL_SCM_BUS_GET_PHYSICAL_DEVICES() { return (int)5832708L; }

    static final int IOCTL_SCM_BUS_GET_REGIONS() { return (int)5832712L; }

    static final int IOCTL_SCM_LD_GET_INTERLEAVE_SET() { return (int)5835776L; }

    static final int IOCTL_SCM_PD_QUERY_PROPERTY() { return (int)5838848L; }

    static final int IOCTL_SCM_PD_FIRMWARE_DOWNLOAD() { return (int)5871620L; }

    static final int IOCTL_SCM_PD_FIRMWARE_ACTIVATE() { return (int)5871624L; }

    static final int IOCTL_SCM_PD_PASSTHROUGH() { return (int)5888012L; }

    static final int IOCTL_SCM_PD_UPDATE_MANAGEMENT_STATUS() { return (int)5838864L; }

    static final int IOCTL_SCM_PD_REINITIALIZE_MEDIA() { return (int)5871636L; }

    static final long SCM_REGION_SPA_UNKNOWN() { return -1L; }

    static final long SCM_PD_MEMORY_SIZE_UNKNOWN() { return -1L; }

    static final int IOCTL_DISK_BASE() { return (int)7L; }

    static final int IOCTL_DISK_GET_DRIVE_GEOMETRY() { return (int)458752L; }

    static final int IOCTL_DISK_GET_PARTITION_INFO() { return (int)475140L; }

    static final int IOCTL_DISK_SET_PARTITION_INFO() { return (int)507912L; }

    static final int IOCTL_DISK_GET_DRIVE_LAYOUT() { return (int)475148L; }

    static final int IOCTL_DISK_SET_DRIVE_LAYOUT() { return (int)507920L; }

    static final int IOCTL_DISK_VERIFY() { return (int)458772L; }

    static final int IOCTL_DISK_FORMAT_TRACKS() { return (int)507928L; }

    static final int IOCTL_DISK_REASSIGN_BLOCKS() { return (int)507932L; }

    static final int IOCTL_DISK_PERFORMANCE() { return (int)458784L; }

    static final int IOCTL_DISK_IS_WRITABLE() { return (int)458788L; }

    static final int IOCTL_DISK_LOGGING() { return (int)458792L; }

    static final int IOCTL_DISK_FORMAT_TRACKS_EX() { return (int)507948L; }

    static final int IOCTL_DISK_HISTOGRAM_STRUCTURE() { return (int)458800L; }

    static final int IOCTL_DISK_HISTOGRAM_DATA() { return (int)458804L; }

    static final int IOCTL_DISK_HISTOGRAM_RESET() { return (int)458808L; }

    static final int IOCTL_DISK_REQUEST_STRUCTURE() { return (int)458812L; }

    static final int IOCTL_DISK_REQUEST_DATA() { return (int)458816L; }

    static final int IOCTL_DISK_PERFORMANCE_OFF() { return (int)458848L; }

    static final int IOCTL_DISK_CONTROLLER_NUMBER() { return (int)458820L; }

    static final int SMART_GET_VERSION() { return (int)475264L; }

    static final int SMART_SEND_DRIVE_COMMAND() { return (int)508036L; }

    static final int SMART_RCV_DRIVE_DATA() { return (int)508040L; }

    static final int IOCTL_DISK_GET_PARTITION_INFO_EX() { return (int)458824L; }

    static final int IOCTL_DISK_SET_PARTITION_INFO_EX() { return (int)507980L; }

    static final int IOCTL_DISK_GET_DRIVE_LAYOUT_EX() { return (int)458832L; }

    static final int IOCTL_DISK_SET_DRIVE_LAYOUT_EX() { return (int)507988L; }

    static final int IOCTL_DISK_CREATE_DISK() { return (int)507992L; }

    static final int IOCTL_DISK_GET_LENGTH_INFO() { return (int)475228L; }

    static final int IOCTL_DISK_GET_DRIVE_GEOMETRY_EX() { return (int)458912L; }

    static final int IOCTL_DISK_REASSIGN_BLOCKS_EX() { return (int)508068L; }

    static final int IOCTL_DISK_UPDATE_DRIVE_SIZE() { return (int)508104L; }

    static final int IOCTL_DISK_GROW_PARTITION() { return (int)508112L; }

    static final int IOCTL_DISK_GET_CACHE_INFORMATION() { return (int)475348L; }

    static final int IOCTL_DISK_SET_CACHE_INFORMATION() { return (int)508120L; }

    static final int OBSOLETE_DISK_GET_WRITE_CACHE_STATE() { return (int)475356L; }

    static final int IOCTL_DISK_DELETE_DRIVE_LAYOUT() { return (int)508160L; }

    static final int IOCTL_DISK_UPDATE_PROPERTIES() { return (int)459072L; }

    static final int IOCTL_DISK_FORMAT_DRIVE() { return (int)508876L; }

    static final int IOCTL_DISK_SENSE_DEVICE() { return (int)459744L; }

    static final int IOCTL_DISK_CHECK_VERIFY() { return (int)477184L; }

    static final int IOCTL_DISK_MEDIA_REMOVAL() { return (int)477188L; }

    static final int IOCTL_DISK_EJECT_MEDIA() { return (int)477192L; }

    static final int IOCTL_DISK_LOAD_MEDIA() { return (int)477196L; }

    static final int IOCTL_DISK_RESERVE() { return (int)477200L; }

    static final int IOCTL_DISK_RELEASE() { return (int)477204L; }

    static final int IOCTL_DISK_FIND_NEW_DEVICES() { return (int)477208L; }

    static final int IOCTL_DISK_GET_MEDIA_TYPES() { return (int)461824L; }

    static final int GPT_ATTRIBUTE_PLATFORM_REQUIRED() { return (int)1L; }

    static final int GPT_ATTRIBUTE_NO_BLOCK_IO_PROTOCOL() { return (int)2L; }

}

