// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$80 extends cfapi_h$constants$79 {

    /* package-private */ cfapi_h$constants$80() {}
    static final FunctionDescriptor FLAG_STGMEDIUM_UserSize64$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FLAG_STGMEDIUM_UserSize64$FUNC() { return FLAG_STGMEDIUM_UserSize64$FUNC_; }

    static final MethodHandle FLAG_STGMEDIUM_UserSize64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FLAG_STGMEDIUM_UserSize64",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        FLAG_STGMEDIUM_UserSize64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FLAG_STGMEDIUM_UserSize64$MH() { return FLAG_STGMEDIUM_UserSize64$MH_; }

    static final FunctionDescriptor FLAG_STGMEDIUM_UserMarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FLAG_STGMEDIUM_UserMarshal64$FUNC() { return FLAG_STGMEDIUM_UserMarshal64$FUNC_; }

    static final MethodHandle FLAG_STGMEDIUM_UserMarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FLAG_STGMEDIUM_UserMarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        FLAG_STGMEDIUM_UserMarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FLAG_STGMEDIUM_UserMarshal64$MH() { return FLAG_STGMEDIUM_UserMarshal64$MH_; }

    static final FunctionDescriptor FLAG_STGMEDIUM_UserUnmarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FLAG_STGMEDIUM_UserUnmarshal64$FUNC() { return FLAG_STGMEDIUM_UserUnmarshal64$FUNC_; }

    static final MethodHandle FLAG_STGMEDIUM_UserUnmarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FLAG_STGMEDIUM_UserUnmarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        FLAG_STGMEDIUM_UserUnmarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FLAG_STGMEDIUM_UserUnmarshal64$MH() { return FLAG_STGMEDIUM_UserUnmarshal64$MH_; }

    static final FunctionDescriptor FLAG_STGMEDIUM_UserFree64$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FLAG_STGMEDIUM_UserFree64$FUNC() { return FLAG_STGMEDIUM_UserFree64$FUNC_; }

    static final MethodHandle FLAG_STGMEDIUM_UserFree64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FLAG_STGMEDIUM_UserFree64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        FLAG_STGMEDIUM_UserFree64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FLAG_STGMEDIUM_UserFree64$MH() { return FLAG_STGMEDIUM_UserFree64$MH_; }

    static final FunctionDescriptor HBITMAP_UserSize64$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HBITMAP_UserSize64$FUNC() { return HBITMAP_UserSize64$FUNC_; }

    static final MethodHandle HBITMAP_UserSize64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HBITMAP_UserSize64",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        HBITMAP_UserSize64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HBITMAP_UserSize64$MH() { return HBITMAP_UserSize64$MH_; }

    static final FunctionDescriptor HBITMAP_UserMarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HBITMAP_UserMarshal64$FUNC() { return HBITMAP_UserMarshal64$FUNC_; }

    static final MethodHandle HBITMAP_UserMarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HBITMAP_UserMarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HBITMAP_UserMarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HBITMAP_UserMarshal64$MH() { return HBITMAP_UserMarshal64$MH_; }

    static final FunctionDescriptor HBITMAP_UserUnmarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HBITMAP_UserUnmarshal64$FUNC() { return HBITMAP_UserUnmarshal64$FUNC_; }

    static final MethodHandle HBITMAP_UserUnmarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HBITMAP_UserUnmarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HBITMAP_UserUnmarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HBITMAP_UserUnmarshal64$MH() { return HBITMAP_UserUnmarshal64$MH_; }

    static final FunctionDescriptor HBITMAP_UserFree64$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HBITMAP_UserFree64$FUNC() { return HBITMAP_UserFree64$FUNC_; }

    static final MethodHandle HBITMAP_UserFree64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HBITMAP_UserFree64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        HBITMAP_UserFree64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HBITMAP_UserFree64$MH() { return HBITMAP_UserFree64$MH_; }

    static final FunctionDescriptor HDC_UserSize64$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HDC_UserSize64$FUNC() { return HDC_UserSize64$FUNC_; }

    static final MethodHandle HDC_UserSize64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HDC_UserSize64",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        HDC_UserSize64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HDC_UserSize64$MH() { return HDC_UserSize64$MH_; }

    static final FunctionDescriptor HDC_UserMarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HDC_UserMarshal64$FUNC() { return HDC_UserMarshal64$FUNC_; }

    static final MethodHandle HDC_UserMarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HDC_UserMarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HDC_UserMarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HDC_UserMarshal64$MH() { return HDC_UserMarshal64$MH_; }

    static final FunctionDescriptor HDC_UserUnmarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HDC_UserUnmarshal64$FUNC() { return HDC_UserUnmarshal64$FUNC_; }

    static final MethodHandle HDC_UserUnmarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HDC_UserUnmarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HDC_UserUnmarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HDC_UserUnmarshal64$MH() { return HDC_UserUnmarshal64$MH_; }

    static final FunctionDescriptor HDC_UserFree64$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HDC_UserFree64$FUNC() { return HDC_UserFree64$FUNC_; }

    static final MethodHandle HDC_UserFree64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HDC_UserFree64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        HDC_UserFree64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HDC_UserFree64$MH() { return HDC_UserFree64$MH_; }

    static final FunctionDescriptor HICON_UserSize64$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HICON_UserSize64$FUNC() { return HICON_UserSize64$FUNC_; }

    static final MethodHandle HICON_UserSize64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HICON_UserSize64",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        HICON_UserSize64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HICON_UserSize64$MH() { return HICON_UserSize64$MH_; }

    static final FunctionDescriptor HICON_UserMarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HICON_UserMarshal64$FUNC() { return HICON_UserMarshal64$FUNC_; }

    static final MethodHandle HICON_UserMarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HICON_UserMarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HICON_UserMarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HICON_UserMarshal64$MH() { return HICON_UserMarshal64$MH_; }

    static final FunctionDescriptor HICON_UserUnmarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HICON_UserUnmarshal64$FUNC() { return HICON_UserUnmarshal64$FUNC_; }

    static final MethodHandle HICON_UserUnmarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HICON_UserUnmarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HICON_UserUnmarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HICON_UserUnmarshal64$MH() { return HICON_UserUnmarshal64$MH_; }

    static final FunctionDescriptor HICON_UserFree64$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HICON_UserFree64$FUNC() { return HICON_UserFree64$FUNC_; }

    static final MethodHandle HICON_UserFree64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HICON_UserFree64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        HICON_UserFree64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HICON_UserFree64$MH() { return HICON_UserFree64$MH_; }

    static final FunctionDescriptor SNB_UserSize64$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SNB_UserSize64$FUNC() { return SNB_UserSize64$FUNC_; }

    static final MethodHandle SNB_UserSize64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SNB_UserSize64",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        SNB_UserSize64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SNB_UserSize64$MH() { return SNB_UserSize64$MH_; }

    static final FunctionDescriptor SNB_UserMarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SNB_UserMarshal64$FUNC() { return SNB_UserMarshal64$FUNC_; }

    static final MethodHandle SNB_UserMarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SNB_UserMarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        SNB_UserMarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SNB_UserMarshal64$MH() { return SNB_UserMarshal64$MH_; }

    static final FunctionDescriptor SNB_UserUnmarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SNB_UserUnmarshal64$FUNC() { return SNB_UserUnmarshal64$FUNC_; }

    static final MethodHandle SNB_UserUnmarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SNB_UserUnmarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        SNB_UserUnmarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SNB_UserUnmarshal64$MH() { return SNB_UserUnmarshal64$MH_; }

    static final FunctionDescriptor SNB_UserFree64$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SNB_UserFree64$FUNC() { return SNB_UserFree64$FUNC_; }

    static final MethodHandle SNB_UserFree64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SNB_UserFree64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        SNB_UserFree64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SNB_UserFree64$MH() { return SNB_UserFree64$MH_; }

    static final FunctionDescriptor STGMEDIUM_UserSize64$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor STGMEDIUM_UserSize64$FUNC() { return STGMEDIUM_UserSize64$FUNC_; }

    static final MethodHandle STGMEDIUM_UserSize64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "STGMEDIUM_UserSize64",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        STGMEDIUM_UserSize64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle STGMEDIUM_UserSize64$MH() { return STGMEDIUM_UserSize64$MH_; }

    static final FunctionDescriptor STGMEDIUM_UserMarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor STGMEDIUM_UserMarshal64$FUNC() { return STGMEDIUM_UserMarshal64$FUNC_; }

    static final MethodHandle STGMEDIUM_UserMarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "STGMEDIUM_UserMarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        STGMEDIUM_UserMarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle STGMEDIUM_UserMarshal64$MH() { return STGMEDIUM_UserMarshal64$MH_; }

    static final FunctionDescriptor STGMEDIUM_UserUnmarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor STGMEDIUM_UserUnmarshal64$FUNC() { return STGMEDIUM_UserUnmarshal64$FUNC_; }

    static final MethodHandle STGMEDIUM_UserUnmarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "STGMEDIUM_UserUnmarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        STGMEDIUM_UserUnmarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle STGMEDIUM_UserUnmarshal64$MH() { return STGMEDIUM_UserUnmarshal64$MH_; }

    static final FunctionDescriptor STGMEDIUM_UserFree64$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor STGMEDIUM_UserFree64$FUNC() { return STGMEDIUM_UserFree64$FUNC_; }

    static final MethodHandle STGMEDIUM_UserFree64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "STGMEDIUM_UserFree64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        STGMEDIUM_UserFree64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle STGMEDIUM_UserFree64$MH() { return STGMEDIUM_UserFree64$MH_; }

    static final FunctionDescriptor IBindCtx_SetBindOptions_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IBindCtx_SetBindOptions_Proxy$FUNC() { return IBindCtx_SetBindOptions_Proxy$FUNC_; }

    static final MethodHandle IBindCtx_SetBindOptions_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IBindCtx_SetBindOptions_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IBindCtx_SetBindOptions_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IBindCtx_SetBindOptions_Proxy$MH() { return IBindCtx_SetBindOptions_Proxy$MH_; }

    static final FunctionDescriptor IBindCtx_SetBindOptions_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IBindCtx_SetBindOptions_Stub$FUNC() { return IBindCtx_SetBindOptions_Stub$FUNC_; }

    static final MethodHandle IBindCtx_SetBindOptions_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IBindCtx_SetBindOptions_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IBindCtx_SetBindOptions_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IBindCtx_SetBindOptions_Stub$MH() { return IBindCtx_SetBindOptions_Stub$MH_; }

    static final FunctionDescriptor IBindCtx_GetBindOptions_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IBindCtx_GetBindOptions_Proxy$FUNC() { return IBindCtx_GetBindOptions_Proxy$FUNC_; }

    static final MethodHandle IBindCtx_GetBindOptions_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IBindCtx_GetBindOptions_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IBindCtx_GetBindOptions_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IBindCtx_GetBindOptions_Proxy$MH() { return IBindCtx_GetBindOptions_Proxy$MH_; }

    static final FunctionDescriptor IBindCtx_GetBindOptions_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IBindCtx_GetBindOptions_Stub$FUNC() { return IBindCtx_GetBindOptions_Stub$FUNC_; }

    static final MethodHandle IBindCtx_GetBindOptions_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IBindCtx_GetBindOptions_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IBindCtx_GetBindOptions_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IBindCtx_GetBindOptions_Stub$MH() { return IBindCtx_GetBindOptions_Stub$MH_; }

    static final FunctionDescriptor IEnumMoniker_Next_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumMoniker_Next_Proxy$FUNC() { return IEnumMoniker_Next_Proxy$FUNC_; }

    static final MethodHandle IEnumMoniker_Next_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumMoniker_Next_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IEnumMoniker_Next_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumMoniker_Next_Proxy$MH() { return IEnumMoniker_Next_Proxy$MH_; }

    static final FunctionDescriptor IEnumMoniker_Next_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumMoniker_Next_Stub$FUNC() { return IEnumMoniker_Next_Stub$FUNC_; }

    static final MethodHandle IEnumMoniker_Next_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumMoniker_Next_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IEnumMoniker_Next_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumMoniker_Next_Stub$MH() { return IEnumMoniker_Next_Stub$MH_; }

    static final FunctionDescriptor IRunnableObject_IsRunning_Proxy$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IRunnableObject_IsRunning_Proxy$FUNC() { return IRunnableObject_IsRunning_Proxy$FUNC_; }

    static final MethodHandle IRunnableObject_IsRunning_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IRunnableObject_IsRunning_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        IRunnableObject_IsRunning_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IRunnableObject_IsRunning_Proxy$MH() { return IRunnableObject_IsRunning_Proxy$MH_; }

    static final FunctionDescriptor IRunnableObject_IsRunning_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IRunnableObject_IsRunning_Stub$FUNC() { return IRunnableObject_IsRunning_Stub$FUNC_; }

    static final MethodHandle IRunnableObject_IsRunning_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IRunnableObject_IsRunning_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        IRunnableObject_IsRunning_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IRunnableObject_IsRunning_Stub$MH() { return IRunnableObject_IsRunning_Stub$MH_; }

    static final FunctionDescriptor IMoniker_BindToObject_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IMoniker_BindToObject_Proxy$FUNC() { return IMoniker_BindToObject_Proxy$FUNC_; }

    static final MethodHandle IMoniker_BindToObject_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IMoniker_BindToObject_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IMoniker_BindToObject_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IMoniker_BindToObject_Proxy$MH() { return IMoniker_BindToObject_Proxy$MH_; }

    static final FunctionDescriptor IMoniker_BindToObject_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IMoniker_BindToObject_Stub$FUNC() { return IMoniker_BindToObject_Stub$FUNC_; }

    static final MethodHandle IMoniker_BindToObject_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IMoniker_BindToObject_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IMoniker_BindToObject_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IMoniker_BindToObject_Stub$MH() { return IMoniker_BindToObject_Stub$MH_; }

    static final FunctionDescriptor IMoniker_BindToStorage_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IMoniker_BindToStorage_Proxy$FUNC() { return IMoniker_BindToStorage_Proxy$FUNC_; }

    static final MethodHandle IMoniker_BindToStorage_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IMoniker_BindToStorage_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IMoniker_BindToStorage_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IMoniker_BindToStorage_Proxy$MH() { return IMoniker_BindToStorage_Proxy$MH_; }

    static final FunctionDescriptor IMoniker_BindToStorage_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IMoniker_BindToStorage_Stub$FUNC() { return IMoniker_BindToStorage_Stub$FUNC_; }

    static final MethodHandle IMoniker_BindToStorage_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IMoniker_BindToStorage_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IMoniker_BindToStorage_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IMoniker_BindToStorage_Stub$MH() { return IMoniker_BindToStorage_Stub$MH_; }

    static final FunctionDescriptor IEnumSTATSTG_Next_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumSTATSTG_Next_Proxy$FUNC() { return IEnumSTATSTG_Next_Proxy$FUNC_; }

    static final MethodHandle IEnumSTATSTG_Next_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumSTATSTG_Next_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IEnumSTATSTG_Next_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumSTATSTG_Next_Proxy$MH() { return IEnumSTATSTG_Next_Proxy$MH_; }

    static final FunctionDescriptor IEnumSTATSTG_Next_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumSTATSTG_Next_Stub$FUNC() { return IEnumSTATSTG_Next_Stub$FUNC_; }

    static final MethodHandle IEnumSTATSTG_Next_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumSTATSTG_Next_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IEnumSTATSTG_Next_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumSTATSTG_Next_Stub$MH() { return IEnumSTATSTG_Next_Stub$MH_; }

    static final FunctionDescriptor IStorage_OpenStream_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IStorage_OpenStream_Proxy$FUNC() { return IStorage_OpenStream_Proxy$FUNC_; }

    static final MethodHandle IStorage_OpenStream_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IStorage_OpenStream_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        IStorage_OpenStream_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IStorage_OpenStream_Proxy$MH() { return IStorage_OpenStream_Proxy$MH_; }

    static final FunctionDescriptor IStorage_OpenStream_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IStorage_OpenStream_Stub$FUNC() { return IStorage_OpenStream_Stub$FUNC_; }

    static final MethodHandle IStorage_OpenStream_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IStorage_OpenStream_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        IStorage_OpenStream_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IStorage_OpenStream_Stub$MH() { return IStorage_OpenStream_Stub$MH_; }

    static final FunctionDescriptor IStorage_CopyTo_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IStorage_CopyTo_Proxy$FUNC() { return IStorage_CopyTo_Proxy$FUNC_; }

    static final MethodHandle IStorage_CopyTo_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IStorage_CopyTo_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IStorage_CopyTo_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IStorage_CopyTo_Proxy$MH() { return IStorage_CopyTo_Proxy$MH_; }

    static final FunctionDescriptor IStorage_CopyTo_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IStorage_CopyTo_Stub$FUNC() { return IStorage_CopyTo_Stub$FUNC_; }

    static final MethodHandle IStorage_CopyTo_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IStorage_CopyTo_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IStorage_CopyTo_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IStorage_CopyTo_Stub$MH() { return IStorage_CopyTo_Stub$MH_; }

    static final FunctionDescriptor IStorage_EnumElements_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IStorage_EnumElements_Proxy$FUNC() { return IStorage_EnumElements_Proxy$FUNC_; }

    static final MethodHandle IStorage_EnumElements_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IStorage_EnumElements_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        IStorage_EnumElements_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IStorage_EnumElements_Proxy$MH() { return IStorage_EnumElements_Proxy$MH_; }

    static final FunctionDescriptor IStorage_EnumElements_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IStorage_EnumElements_Stub$FUNC() { return IStorage_EnumElements_Stub$FUNC_; }

    static final MethodHandle IStorage_EnumElements_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IStorage_EnumElements_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        IStorage_EnumElements_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IStorage_EnumElements_Stub$MH() { return IStorage_EnumElements_Stub$MH_; }

    static final FunctionDescriptor ILockBytes_ReadAt_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("_ULARGE_INTEGER"),
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ILockBytes_ReadAt_Proxy$FUNC() { return ILockBytes_ReadAt_Proxy$FUNC_; }

    static final MethodHandle ILockBytes_ReadAt_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ILockBytes_ReadAt_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ILockBytes_ReadAt_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ILockBytes_ReadAt_Proxy$MH() { return ILockBytes_ReadAt_Proxy$MH_; }

    static final FunctionDescriptor ILockBytes_ReadAt_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("_ULARGE_INTEGER"),
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ILockBytes_ReadAt_Stub$FUNC() { return ILockBytes_ReadAt_Stub$FUNC_; }

    static final MethodHandle ILockBytes_ReadAt_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ILockBytes_ReadAt_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ILockBytes_ReadAt_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ILockBytes_ReadAt_Stub$MH() { return ILockBytes_ReadAt_Stub$MH_; }

    static final FunctionDescriptor ILockBytes_WriteAt_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("_ULARGE_INTEGER"),
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ILockBytes_WriteAt_Proxy$FUNC() { return ILockBytes_WriteAt_Proxy$FUNC_; }

    static final MethodHandle ILockBytes_WriteAt_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ILockBytes_WriteAt_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ILockBytes_WriteAt_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ILockBytes_WriteAt_Proxy$MH() { return ILockBytes_WriteAt_Proxy$MH_; }

    static final FunctionDescriptor ILockBytes_WriteAt_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("_ULARGE_INTEGER"),
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ILockBytes_WriteAt_Stub$FUNC() { return ILockBytes_WriteAt_Stub$FUNC_; }

    static final MethodHandle ILockBytes_WriteAt_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ILockBytes_WriteAt_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ILockBytes_WriteAt_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ILockBytes_WriteAt_Stub$MH() { return ILockBytes_WriteAt_Stub$MH_; }

    static final FunctionDescriptor IEnumFORMATETC_Next_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumFORMATETC_Next_Proxy$FUNC() { return IEnumFORMATETC_Next_Proxy$FUNC_; }

    static final MethodHandle IEnumFORMATETC_Next_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumFORMATETC_Next_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IEnumFORMATETC_Next_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumFORMATETC_Next_Proxy$MH() { return IEnumFORMATETC_Next_Proxy$MH_; }

    static final FunctionDescriptor IEnumFORMATETC_Next_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumFORMATETC_Next_Stub$FUNC() { return IEnumFORMATETC_Next_Stub$FUNC_; }

    static final MethodHandle IEnumFORMATETC_Next_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumFORMATETC_Next_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IEnumFORMATETC_Next_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumFORMATETC_Next_Stub$MH() { return IEnumFORMATETC_Next_Stub$MH_; }

    static final FunctionDescriptor IEnumSTATDATA_Next_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumSTATDATA_Next_Proxy$FUNC() { return IEnumSTATDATA_Next_Proxy$FUNC_; }

    static final MethodHandle IEnumSTATDATA_Next_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumSTATDATA_Next_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IEnumSTATDATA_Next_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumSTATDATA_Next_Proxy$MH() { return IEnumSTATDATA_Next_Proxy$MH_; }

    static final FunctionDescriptor IEnumSTATDATA_Next_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumSTATDATA_Next_Stub$FUNC() { return IEnumSTATDATA_Next_Stub$FUNC_; }

    static final MethodHandle IEnumSTATDATA_Next_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumSTATDATA_Next_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IEnumSTATDATA_Next_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumSTATDATA_Next_Stub$MH() { return IEnumSTATDATA_Next_Stub$MH_; }

    static final FunctionDescriptor IAdviseSink_OnDataChange_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink_OnDataChange_Proxy$FUNC() { return IAdviseSink_OnDataChange_Proxy$FUNC_; }

    static final MethodHandle IAdviseSink_OnDataChange_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink_OnDataChange_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IAdviseSink_OnDataChange_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink_OnDataChange_Proxy$MH() { return IAdviseSink_OnDataChange_Proxy$MH_; }

    static final FunctionDescriptor IAdviseSink_OnDataChange_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink_OnDataChange_Stub$FUNC() { return IAdviseSink_OnDataChange_Stub$FUNC_; }

    static final MethodHandle IAdviseSink_OnDataChange_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink_OnDataChange_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IAdviseSink_OnDataChange_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink_OnDataChange_Stub$MH() { return IAdviseSink_OnDataChange_Stub$MH_; }

    static final FunctionDescriptor IAdviseSink_OnViewChange_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink_OnViewChange_Proxy$FUNC() { return IAdviseSink_OnViewChange_Proxy$FUNC_; }

    static final MethodHandle IAdviseSink_OnViewChange_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink_OnViewChange_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;II)V",
        IAdviseSink_OnViewChange_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink_OnViewChange_Proxy$MH() { return IAdviseSink_OnViewChange_Proxy$MH_; }

    static final FunctionDescriptor IAdviseSink_OnViewChange_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink_OnViewChange_Stub$FUNC() { return IAdviseSink_OnViewChange_Stub$FUNC_; }

    static final MethodHandle IAdviseSink_OnViewChange_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink_OnViewChange_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        IAdviseSink_OnViewChange_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink_OnViewChange_Stub$MH() { return IAdviseSink_OnViewChange_Stub$MH_; }

    static final FunctionDescriptor IAdviseSink_OnRename_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink_OnRename_Proxy$FUNC() { return IAdviseSink_OnRename_Proxy$FUNC_; }

    static final MethodHandle IAdviseSink_OnRename_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink_OnRename_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IAdviseSink_OnRename_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink_OnRename_Proxy$MH() { return IAdviseSink_OnRename_Proxy$MH_; }

    static final FunctionDescriptor IAdviseSink_OnRename_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink_OnRename_Stub$FUNC() { return IAdviseSink_OnRename_Stub$FUNC_; }

    static final MethodHandle IAdviseSink_OnRename_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink_OnRename_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IAdviseSink_OnRename_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink_OnRename_Stub$MH() { return IAdviseSink_OnRename_Stub$MH_; }

    static final FunctionDescriptor IAdviseSink_OnSave_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink_OnSave_Proxy$FUNC() { return IAdviseSink_OnSave_Proxy$FUNC_; }

    static final MethodHandle IAdviseSink_OnSave_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink_OnSave_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        IAdviseSink_OnSave_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink_OnSave_Proxy$MH() { return IAdviseSink_OnSave_Proxy$MH_; }

    static final FunctionDescriptor IAdviseSink_OnSave_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink_OnSave_Stub$FUNC() { return IAdviseSink_OnSave_Stub$FUNC_; }

    static final MethodHandle IAdviseSink_OnSave_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink_OnSave_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        IAdviseSink_OnSave_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink_OnSave_Stub$MH() { return IAdviseSink_OnSave_Stub$MH_; }

    static final FunctionDescriptor IAdviseSink_OnClose_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink_OnClose_Proxy$FUNC() { return IAdviseSink_OnClose_Proxy$FUNC_; }

    static final MethodHandle IAdviseSink_OnClose_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink_OnClose_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        IAdviseSink_OnClose_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink_OnClose_Proxy$MH() { return IAdviseSink_OnClose_Proxy$MH_; }

    static final FunctionDescriptor IAdviseSink_OnClose_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink_OnClose_Stub$FUNC() { return IAdviseSink_OnClose_Stub$FUNC_; }

    static final MethodHandle IAdviseSink_OnClose_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink_OnClose_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        IAdviseSink_OnClose_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink_OnClose_Stub$MH() { return IAdviseSink_OnClose_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Begin_OnDataChange_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Begin_OnDataChange_Proxy$FUNC() { return AsyncIAdviseSink_Begin_OnDataChange_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Begin_OnDataChange_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Begin_OnDataChange_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink_Begin_OnDataChange_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Begin_OnDataChange_Proxy$MH() { return AsyncIAdviseSink_Begin_OnDataChange_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Begin_OnDataChange_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Begin_OnDataChange_Stub$FUNC() { return AsyncIAdviseSink_Begin_OnDataChange_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Begin_OnDataChange_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Begin_OnDataChange_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink_Begin_OnDataChange_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Begin_OnDataChange_Stub$MH() { return AsyncIAdviseSink_Begin_OnDataChange_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Finish_OnDataChange_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Finish_OnDataChange_Proxy$FUNC() { return AsyncIAdviseSink_Finish_OnDataChange_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Finish_OnDataChange_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Finish_OnDataChange_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink_Finish_OnDataChange_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Finish_OnDataChange_Proxy$MH() { return AsyncIAdviseSink_Finish_OnDataChange_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Finish_OnDataChange_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Finish_OnDataChange_Stub$FUNC() { return AsyncIAdviseSink_Finish_OnDataChange_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Finish_OnDataChange_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Finish_OnDataChange_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink_Finish_OnDataChange_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Finish_OnDataChange_Stub$MH() { return AsyncIAdviseSink_Finish_OnDataChange_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Begin_OnViewChange_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Begin_OnViewChange_Proxy$FUNC() { return AsyncIAdviseSink_Begin_OnViewChange_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Begin_OnViewChange_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Begin_OnViewChange_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;II)V",
        AsyncIAdviseSink_Begin_OnViewChange_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Begin_OnViewChange_Proxy$MH() { return AsyncIAdviseSink_Begin_OnViewChange_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Begin_OnViewChange_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Begin_OnViewChange_Stub$FUNC() { return AsyncIAdviseSink_Begin_OnViewChange_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Begin_OnViewChange_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Begin_OnViewChange_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        AsyncIAdviseSink_Begin_OnViewChange_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Begin_OnViewChange_Stub$MH() { return AsyncIAdviseSink_Begin_OnViewChange_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Finish_OnViewChange_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Finish_OnViewChange_Proxy$FUNC() { return AsyncIAdviseSink_Finish_OnViewChange_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Finish_OnViewChange_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Finish_OnViewChange_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink_Finish_OnViewChange_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Finish_OnViewChange_Proxy$MH() { return AsyncIAdviseSink_Finish_OnViewChange_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Finish_OnViewChange_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Finish_OnViewChange_Stub$FUNC() { return AsyncIAdviseSink_Finish_OnViewChange_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Finish_OnViewChange_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Finish_OnViewChange_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink_Finish_OnViewChange_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Finish_OnViewChange_Stub$MH() { return AsyncIAdviseSink_Finish_OnViewChange_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Begin_OnRename_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Begin_OnRename_Proxy$FUNC() { return AsyncIAdviseSink_Begin_OnRename_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Begin_OnRename_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Begin_OnRename_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink_Begin_OnRename_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Begin_OnRename_Proxy$MH() { return AsyncIAdviseSink_Begin_OnRename_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Begin_OnRename_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Begin_OnRename_Stub$FUNC() { return AsyncIAdviseSink_Begin_OnRename_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Begin_OnRename_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Begin_OnRename_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink_Begin_OnRename_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Begin_OnRename_Stub$MH() { return AsyncIAdviseSink_Begin_OnRename_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Finish_OnRename_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Finish_OnRename_Proxy$FUNC() { return AsyncIAdviseSink_Finish_OnRename_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Finish_OnRename_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Finish_OnRename_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink_Finish_OnRename_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Finish_OnRename_Proxy$MH() { return AsyncIAdviseSink_Finish_OnRename_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Finish_OnRename_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Finish_OnRename_Stub$FUNC() { return AsyncIAdviseSink_Finish_OnRename_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Finish_OnRename_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Finish_OnRename_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink_Finish_OnRename_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Finish_OnRename_Stub$MH() { return AsyncIAdviseSink_Finish_OnRename_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Begin_OnSave_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Begin_OnSave_Proxy$FUNC() { return AsyncIAdviseSink_Begin_OnSave_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Begin_OnSave_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Begin_OnSave_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink_Begin_OnSave_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Begin_OnSave_Proxy$MH() { return AsyncIAdviseSink_Begin_OnSave_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Begin_OnSave_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Begin_OnSave_Stub$FUNC() { return AsyncIAdviseSink_Begin_OnSave_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Begin_OnSave_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Begin_OnSave_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink_Begin_OnSave_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Begin_OnSave_Stub$MH() { return AsyncIAdviseSink_Begin_OnSave_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Finish_OnSave_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Finish_OnSave_Proxy$FUNC() { return AsyncIAdviseSink_Finish_OnSave_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Finish_OnSave_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Finish_OnSave_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink_Finish_OnSave_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Finish_OnSave_Proxy$MH() { return AsyncIAdviseSink_Finish_OnSave_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Finish_OnSave_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Finish_OnSave_Stub$FUNC() { return AsyncIAdviseSink_Finish_OnSave_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Finish_OnSave_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Finish_OnSave_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink_Finish_OnSave_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Finish_OnSave_Stub$MH() { return AsyncIAdviseSink_Finish_OnSave_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Begin_OnClose_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Begin_OnClose_Proxy$FUNC() { return AsyncIAdviseSink_Begin_OnClose_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Begin_OnClose_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Begin_OnClose_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink_Begin_OnClose_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Begin_OnClose_Proxy$MH() { return AsyncIAdviseSink_Begin_OnClose_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Begin_OnClose_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Begin_OnClose_Stub$FUNC() { return AsyncIAdviseSink_Begin_OnClose_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Begin_OnClose_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Begin_OnClose_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink_Begin_OnClose_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Begin_OnClose_Stub$MH() { return AsyncIAdviseSink_Begin_OnClose_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Finish_OnClose_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Finish_OnClose_Proxy$FUNC() { return AsyncIAdviseSink_Finish_OnClose_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Finish_OnClose_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Finish_OnClose_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink_Finish_OnClose_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Finish_OnClose_Proxy$MH() { return AsyncIAdviseSink_Finish_OnClose_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink_Finish_OnClose_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink_Finish_OnClose_Stub$FUNC() { return AsyncIAdviseSink_Finish_OnClose_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink_Finish_OnClose_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink_Finish_OnClose_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink_Finish_OnClose_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink_Finish_OnClose_Stub$MH() { return AsyncIAdviseSink_Finish_OnClose_Stub$MH_; }

    static final FunctionDescriptor IAdviseSink2_OnLinkSrcChange_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink2_OnLinkSrcChange_Proxy$FUNC() { return IAdviseSink2_OnLinkSrcChange_Proxy$FUNC_; }

    static final MethodHandle IAdviseSink2_OnLinkSrcChange_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink2_OnLinkSrcChange_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IAdviseSink2_OnLinkSrcChange_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink2_OnLinkSrcChange_Proxy$MH() { return IAdviseSink2_OnLinkSrcChange_Proxy$MH_; }

    static final FunctionDescriptor IAdviseSink2_OnLinkSrcChange_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IAdviseSink2_OnLinkSrcChange_Stub$FUNC() { return IAdviseSink2_OnLinkSrcChange_Stub$FUNC_; }

    static final MethodHandle IAdviseSink2_OnLinkSrcChange_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IAdviseSink2_OnLinkSrcChange_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IAdviseSink2_OnLinkSrcChange_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IAdviseSink2_OnLinkSrcChange_Stub$MH() { return IAdviseSink2_OnLinkSrcChange_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink2_Begin_OnLinkSrcChange_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink2_Begin_OnLinkSrcChange_Proxy$FUNC() { return AsyncIAdviseSink2_Begin_OnLinkSrcChange_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink2_Begin_OnLinkSrcChange_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink2_Begin_OnLinkSrcChange_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink2_Begin_OnLinkSrcChange_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink2_Begin_OnLinkSrcChange_Proxy$MH() { return AsyncIAdviseSink2_Begin_OnLinkSrcChange_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink2_Begin_OnLinkSrcChange_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink2_Begin_OnLinkSrcChange_Stub$FUNC() { return AsyncIAdviseSink2_Begin_OnLinkSrcChange_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink2_Begin_OnLinkSrcChange_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink2_Begin_OnLinkSrcChange_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink2_Begin_OnLinkSrcChange_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink2_Begin_OnLinkSrcChange_Stub$MH() { return AsyncIAdviseSink2_Begin_OnLinkSrcChange_Stub$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink2_Finish_OnLinkSrcChange_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink2_Finish_OnLinkSrcChange_Proxy$FUNC() { return AsyncIAdviseSink2_Finish_OnLinkSrcChange_Proxy$FUNC_; }

    static final MethodHandle AsyncIAdviseSink2_Finish_OnLinkSrcChange_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink2_Finish_OnLinkSrcChange_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        AsyncIAdviseSink2_Finish_OnLinkSrcChange_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink2_Finish_OnLinkSrcChange_Proxy$MH() { return AsyncIAdviseSink2_Finish_OnLinkSrcChange_Proxy$MH_; }

    static final FunctionDescriptor AsyncIAdviseSink2_Finish_OnLinkSrcChange_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AsyncIAdviseSink2_Finish_OnLinkSrcChange_Stub$FUNC() { return AsyncIAdviseSink2_Finish_OnLinkSrcChange_Stub$FUNC_; }

    static final MethodHandle AsyncIAdviseSink2_Finish_OnLinkSrcChange_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AsyncIAdviseSink2_Finish_OnLinkSrcChange_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        AsyncIAdviseSink2_Finish_OnLinkSrcChange_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AsyncIAdviseSink2_Finish_OnLinkSrcChange_Stub$MH() { return AsyncIAdviseSink2_Finish_OnLinkSrcChange_Stub$MH_; }

    static final FunctionDescriptor IDataObject_GetData_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IDataObject_GetData_Proxy$FUNC() { return IDataObject_GetData_Proxy$FUNC_; }

    static final MethodHandle IDataObject_GetData_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IDataObject_GetData_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IDataObject_GetData_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IDataObject_GetData_Proxy$MH() { return IDataObject_GetData_Proxy$MH_; }

    static final FunctionDescriptor IDataObject_GetData_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IDataObject_GetData_Stub$FUNC() { return IDataObject_GetData_Stub$FUNC_; }

    static final MethodHandle IDataObject_GetData_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IDataObject_GetData_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IDataObject_GetData_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IDataObject_GetData_Stub$MH() { return IDataObject_GetData_Stub$MH_; }

    static final FunctionDescriptor IDataObject_GetDataHere_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IDataObject_GetDataHere_Proxy$FUNC() { return IDataObject_GetDataHere_Proxy$FUNC_; }

    static final MethodHandle IDataObject_GetDataHere_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IDataObject_GetDataHere_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IDataObject_GetDataHere_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IDataObject_GetDataHere_Proxy$MH() { return IDataObject_GetDataHere_Proxy$MH_; }

    static final FunctionDescriptor IDataObject_GetDataHere_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IDataObject_GetDataHere_Stub$FUNC() { return IDataObject_GetDataHere_Stub$FUNC_; }

    static final MethodHandle IDataObject_GetDataHere_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IDataObject_GetDataHere_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IDataObject_GetDataHere_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IDataObject_GetDataHere_Stub$MH() { return IDataObject_GetDataHere_Stub$MH_; }

    static final FunctionDescriptor IDataObject_SetData_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor IDataObject_SetData_Proxy$FUNC() { return IDataObject_SetData_Proxy$FUNC_; }

    static final MethodHandle IDataObject_SetData_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IDataObject_SetData_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        IDataObject_SetData_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IDataObject_SetData_Proxy$MH() { return IDataObject_SetData_Proxy$MH_; }

    static final FunctionDescriptor IDataObject_SetData_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor IDataObject_SetData_Stub$FUNC() { return IDataObject_SetData_Stub$FUNC_; }

    static final MethodHandle IDataObject_SetData_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IDataObject_SetData_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        IDataObject_SetData_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IDataObject_SetData_Stub$MH() { return IDataObject_SetData_Stub$MH_; }

    static final FunctionDescriptor IFillLockBytes_FillAppend_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IFillLockBytes_FillAppend_Proxy$FUNC() { return IFillLockBytes_FillAppend_Proxy$FUNC_; }

    static final MethodHandle IFillLockBytes_FillAppend_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IFillLockBytes_FillAppend_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        IFillLockBytes_FillAppend_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IFillLockBytes_FillAppend_Proxy$MH() { return IFillLockBytes_FillAppend_Proxy$MH_; }

    static final FunctionDescriptor IFillLockBytes_FillAppend_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IFillLockBytes_FillAppend_Stub$FUNC() { return IFillLockBytes_FillAppend_Stub$FUNC_; }

    static final MethodHandle IFillLockBytes_FillAppend_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IFillLockBytes_FillAppend_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        IFillLockBytes_FillAppend_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IFillLockBytes_FillAppend_Stub$MH() { return IFillLockBytes_FillAppend_Stub$MH_; }

    static final FunctionDescriptor IFillLockBytes_FillAt_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("_ULARGE_INTEGER"),
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IFillLockBytes_FillAt_Proxy$FUNC() { return IFillLockBytes_FillAt_Proxy$FUNC_; }

    static final MethodHandle IFillLockBytes_FillAt_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IFillLockBytes_FillAt_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        IFillLockBytes_FillAt_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IFillLockBytes_FillAt_Proxy$MH() { return IFillLockBytes_FillAt_Proxy$MH_; }

    static final FunctionDescriptor IFillLockBytes_FillAt_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("_ULARGE_INTEGER"),
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IFillLockBytes_FillAt_Stub$FUNC() { return IFillLockBytes_FillAt_Stub$FUNC_; }

    static final MethodHandle IFillLockBytes_FillAt_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IFillLockBytes_FillAt_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        IFillLockBytes_FillAt_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IFillLockBytes_FillAt_Stub$MH() { return IFillLockBytes_FillAt_Stub$MH_; }

    static final MemoryLayout __MIDL_itf_oaidl_0000_0000_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_oaidl_0000_0000_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_oaidl_0000_0000_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_oaidl_0000_0000_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_oaidl_0000_0000_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_oaidl_0000_0000_v0_0_c_ifspec$VH() { return __MIDL_itf_oaidl_0000_0000_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_oaidl_0000_0000_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_oaidl_0000_0000_v0_0_c_ifspec", __MIDL_itf_oaidl_0000_0000_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_oaidl_0000_0000_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_oaidl_0000_0000_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_oaidl_0000_0000_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_oaidl_0000_0000_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_oaidl_0000_0000_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_oaidl_0000_0000_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_oaidl_0000_0000_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_oaidl_0000_0000_v0_0_s_ifspec$VH() { return __MIDL_itf_oaidl_0000_0000_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_oaidl_0000_0000_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_oaidl_0000_0000_v0_0_s_ifspec", __MIDL_itf_oaidl_0000_0000_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_oaidl_0000_0000_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_oaidl_0000_0000_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout tagSAFEARRAYBOUND$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElements"),
        C_LONG.withName("lLbound")
    ).withName("tagSAFEARRAYBOUND");
    static final jdk.incubator.foreign.MemoryLayout tagSAFEARRAYBOUND$struct$LAYOUT() { return tagSAFEARRAYBOUND$struct$LAYOUT_; }

    static final MemoryLayout tagSAFEARRAYBOUND$cElements$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagSAFEARRAYBOUND$cElements$LAYOUT() { return tagSAFEARRAYBOUND$cElements$LAYOUT_; }

    static final VarHandle tagSAFEARRAYBOUND$cElements$VH_ = tagSAFEARRAYBOUND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElements"));
    static final java.lang.invoke.VarHandle tagSAFEARRAYBOUND$cElements$VH() { return tagSAFEARRAYBOUND$cElements$VH_; }

    static final MemoryLayout tagSAFEARRAYBOUND$lLbound$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagSAFEARRAYBOUND$lLbound$LAYOUT() { return tagSAFEARRAYBOUND$lLbound$LAYOUT_; }

    static final VarHandle tagSAFEARRAYBOUND$lLbound$VH_ = tagSAFEARRAYBOUND$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lLbound"));
    static final java.lang.invoke.VarHandle tagSAFEARRAYBOUND$lLbound$VH() { return tagSAFEARRAYBOUND$lLbound$VH_; }

    static final MemoryLayout _wireSAFEARR_BSTR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("aBstr")
    ).withName("_wireSAFEARR_BSTR");
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARR_BSTR$struct$LAYOUT() { return _wireSAFEARR_BSTR$struct$LAYOUT_; }

    static final MemoryLayout _wireSAFEARR_BSTR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARR_BSTR$Size$LAYOUT() { return _wireSAFEARR_BSTR$Size$LAYOUT_; }

    static final VarHandle _wireSAFEARR_BSTR$Size$VH_ = _wireSAFEARR_BSTR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _wireSAFEARR_BSTR$Size$VH() { return _wireSAFEARR_BSTR$Size$VH_; }

    static final MemoryLayout _wireSAFEARR_BSTR$aBstr$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARR_BSTR$aBstr$LAYOUT() { return _wireSAFEARR_BSTR$aBstr$LAYOUT_; }

    static final VarHandle _wireSAFEARR_BSTR$aBstr$VH_ = MemoryHandles.asAddressVarHandle(_wireSAFEARR_BSTR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("aBstr")));
    static final java.lang.invoke.VarHandle _wireSAFEARR_BSTR$aBstr$VH() { return _wireSAFEARR_BSTR$aBstr$VH_; }

    static final MemoryLayout _wireSAFEARR_UNKNOWN$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("apUnknown")
    ).withName("_wireSAFEARR_UNKNOWN");
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARR_UNKNOWN$struct$LAYOUT() { return _wireSAFEARR_UNKNOWN$struct$LAYOUT_; }

    static final MemoryLayout _wireSAFEARR_UNKNOWN$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARR_UNKNOWN$Size$LAYOUT() { return _wireSAFEARR_UNKNOWN$Size$LAYOUT_; }

    static final VarHandle _wireSAFEARR_UNKNOWN$Size$VH_ = _wireSAFEARR_UNKNOWN$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _wireSAFEARR_UNKNOWN$Size$VH() { return _wireSAFEARR_UNKNOWN$Size$VH_; }

    static final MemoryLayout _wireSAFEARR_UNKNOWN$apUnknown$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARR_UNKNOWN$apUnknown$LAYOUT() { return _wireSAFEARR_UNKNOWN$apUnknown$LAYOUT_; }

    static final VarHandle _wireSAFEARR_UNKNOWN$apUnknown$VH_ = MemoryHandles.asAddressVarHandle(_wireSAFEARR_UNKNOWN$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("apUnknown")));
    static final java.lang.invoke.VarHandle _wireSAFEARR_UNKNOWN$apUnknown$VH() { return _wireSAFEARR_UNKNOWN$apUnknown$VH_; }

    static final MemoryLayout _wireSAFEARR_DISPATCH$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("apDispatch")
    ).withName("_wireSAFEARR_DISPATCH");
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARR_DISPATCH$struct$LAYOUT() { return _wireSAFEARR_DISPATCH$struct$LAYOUT_; }

    static final MemoryLayout _wireSAFEARR_DISPATCH$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARR_DISPATCH$Size$LAYOUT() { return _wireSAFEARR_DISPATCH$Size$LAYOUT_; }

    static final VarHandle _wireSAFEARR_DISPATCH$Size$VH_ = _wireSAFEARR_DISPATCH$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _wireSAFEARR_DISPATCH$Size$VH() { return _wireSAFEARR_DISPATCH$Size$VH_; }

    static final MemoryLayout _wireSAFEARR_DISPATCH$apDispatch$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARR_DISPATCH$apDispatch$LAYOUT() { return _wireSAFEARR_DISPATCH$apDispatch$LAYOUT_; }

    static final VarHandle _wireSAFEARR_DISPATCH$apDispatch$VH_ = MemoryHandles.asAddressVarHandle(_wireSAFEARR_DISPATCH$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("apDispatch")));
    static final java.lang.invoke.VarHandle _wireSAFEARR_DISPATCH$apDispatch$VH() { return _wireSAFEARR_DISPATCH$apDispatch$VH_; }

    static final MemoryLayout _wireSAFEARR_VARIANT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("aVariant")
    ).withName("_wireSAFEARR_VARIANT");
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARR_VARIANT$struct$LAYOUT() { return _wireSAFEARR_VARIANT$struct$LAYOUT_; }

    static final MemoryLayout _wireSAFEARR_VARIANT$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARR_VARIANT$Size$LAYOUT() { return _wireSAFEARR_VARIANT$Size$LAYOUT_; }

    static final VarHandle _wireSAFEARR_VARIANT$Size$VH_ = _wireSAFEARR_VARIANT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _wireSAFEARR_VARIANT$Size$VH() { return _wireSAFEARR_VARIANT$Size$VH_; }

    static final MemoryLayout _wireSAFEARR_VARIANT$aVariant$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARR_VARIANT$aVariant$LAYOUT() { return _wireSAFEARR_VARIANT$aVariant$LAYOUT_; }

    static final VarHandle _wireSAFEARR_VARIANT$aVariant$VH_ = MemoryHandles.asAddressVarHandle(_wireSAFEARR_VARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("aVariant")));
    static final java.lang.invoke.VarHandle _wireSAFEARR_VARIANT$aVariant$VH() { return _wireSAFEARR_VARIANT$aVariant$VH_; }

    static final MemoryLayout _wireSAFEARR_BRECORD$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("aRecord")
    ).withName("_wireSAFEARR_BRECORD");
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARR_BRECORD$struct$LAYOUT() { return _wireSAFEARR_BRECORD$struct$LAYOUT_; }

    static final MemoryLayout _wireSAFEARR_BRECORD$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARR_BRECORD$Size$LAYOUT() { return _wireSAFEARR_BRECORD$Size$LAYOUT_; }

    static final VarHandle _wireSAFEARR_BRECORD$Size$VH_ = _wireSAFEARR_BRECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _wireSAFEARR_BRECORD$Size$VH() { return _wireSAFEARR_BRECORD$Size$VH_; }

    static final MemoryLayout _wireSAFEARR_BRECORD$aRecord$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARR_BRECORD$aRecord$LAYOUT() { return _wireSAFEARR_BRECORD$aRecord$LAYOUT_; }

    static final VarHandle _wireSAFEARR_BRECORD$aRecord$VH_ = MemoryHandles.asAddressVarHandle(_wireSAFEARR_BRECORD$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("aRecord")));
    static final java.lang.invoke.VarHandle _wireSAFEARR_BRECORD$aRecord$VH() { return _wireSAFEARR_BRECORD$aRecord$VH_; }

    static final MemoryLayout _wireSAFEARR_HAVEIID$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("apUnknown"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("iid")
    ).withName("_wireSAFEARR_HAVEIID");
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARR_HAVEIID$struct$LAYOUT() { return _wireSAFEARR_HAVEIID$struct$LAYOUT_; }

    static final MemoryLayout _wireSAFEARR_HAVEIID$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARR_HAVEIID$Size$LAYOUT() { return _wireSAFEARR_HAVEIID$Size$LAYOUT_; }

    static final VarHandle _wireSAFEARR_HAVEIID$Size$VH_ = _wireSAFEARR_HAVEIID$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _wireSAFEARR_HAVEIID$Size$VH() { return _wireSAFEARR_HAVEIID$Size$VH_; }

    static final MemoryLayout _wireSAFEARR_HAVEIID$apUnknown$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARR_HAVEIID$apUnknown$LAYOUT() { return _wireSAFEARR_HAVEIID$apUnknown$LAYOUT_; }

    static final VarHandle _wireSAFEARR_HAVEIID$apUnknown$VH_ = MemoryHandles.asAddressVarHandle(_wireSAFEARR_HAVEIID$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("apUnknown")));
    static final java.lang.invoke.VarHandle _wireSAFEARR_HAVEIID$apUnknown$VH() { return _wireSAFEARR_HAVEIID$apUnknown$VH_; }

    static final int SF_ERROR() { return (int)10L; }

    static final int SF_I1() { return (int)16L; }

    static final int SF_I2() { return (int)2L; }

    static final int SF_I4() { return (int)3L; }

    static final int SF_I8() { return (int)20L; }

    static final int SF_BSTR() { return (int)8L; }

    static final int SF_UNKNOWN() { return (int)13L; }

    static final int SF_DISPATCH() { return (int)9L; }

    static final int SF_VARIANT() { return (int)12L; }

    static final int SF_RECORD() { return (int)36L; }

    static final int SF_HAVEIID() { return (int)32781L; }

    static final MemoryLayout _wireSAFEARRAY_UNION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("sfType"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            MemoryLayout.ofStruct(
                C_LONG.withName("Size"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("aBstr")
            ).withName("BstrStr"),
            MemoryLayout.ofStruct(
                C_LONG.withName("Size"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("apUnknown")
            ).withName("UnknownStr"),
            MemoryLayout.ofStruct(
                C_LONG.withName("Size"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("apDispatch")
            ).withName("DispatchStr"),
            MemoryLayout.ofStruct(
                C_LONG.withName("Size"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("aVariant")
            ).withName("VariantStr"),
            MemoryLayout.ofStruct(
                C_LONG.withName("Size"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("aRecord")
            ).withName("RecordStr"),
            MemoryLayout.ofStruct(
                C_LONG.withName("Size"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("apUnknown"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("Data1"),
                    C_SHORT.withName("Data2"),
                    C_SHORT.withName("Data3"),
                    MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
                ).withName("iid")
            ).withName("HaveIidStr"),
            MemoryLayout.ofStruct(
                C_LONG.withName("clSize"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pData")
            ).withName("ByteStr"),
            MemoryLayout.ofStruct(
                C_LONG.withName("clSize"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pData")
            ).withName("WordStr"),
            MemoryLayout.ofStruct(
                C_LONG.withName("clSize"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pData")
            ).withName("LongStr"),
            MemoryLayout.ofStruct(
                C_LONG.withName("clSize"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pData")
            ).withName("HyperStr")
        ).withName("u")
    ).withName("_wireSAFEARRAY_UNION");
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARRAY_UNION$struct$LAYOUT() { return _wireSAFEARRAY_UNION$struct$LAYOUT_; }

    static final MemoryLayout _wireSAFEARRAY_UNION$sfType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARRAY_UNION$sfType$LAYOUT() { return _wireSAFEARRAY_UNION$sfType$LAYOUT_; }

    static final VarHandle _wireSAFEARRAY_UNION$sfType$VH_ = _wireSAFEARRAY_UNION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("sfType"));
    static final java.lang.invoke.VarHandle _wireSAFEARRAY_UNION$sfType$VH() { return _wireSAFEARRAY_UNION$sfType$VH_; }

    static final MemoryLayout _wireSAFEARRAY_UNION$__MIDL_IOleAutomationTypes_0001$union$LAYOUT_ = MemoryLayout.ofUnion(
        MemoryLayout.ofStruct(
            C_LONG.withName("Size"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("aBstr")
        ).withName("BstrStr"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Size"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("apUnknown")
        ).withName("UnknownStr"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Size"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("apDispatch")
        ).withName("DispatchStr"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Size"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("aVariant")
        ).withName("VariantStr"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Size"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("aRecord")
        ).withName("RecordStr"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Size"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("apUnknown"),
            MemoryLayout.ofStruct(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
            ).withName("iid")
        ).withName("HaveIidStr"),
        MemoryLayout.ofStruct(
            C_LONG.withName("clSize"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pData")
        ).withName("ByteStr"),
        MemoryLayout.ofStruct(
            C_LONG.withName("clSize"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pData")
        ).withName("WordStr"),
        MemoryLayout.ofStruct(
            C_LONG.withName("clSize"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pData")
        ).withName("LongStr"),
        MemoryLayout.ofStruct(
            C_LONG.withName("clSize"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pData")
        ).withName("HyperStr")
    ).withName("__MIDL_IOleAutomationTypes_0001");
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARRAY_UNION$__MIDL_IOleAutomationTypes_0001$union$LAYOUT() { return _wireSAFEARRAY_UNION$__MIDL_IOleAutomationTypes_0001$union$LAYOUT_; }

    static final MemoryLayout _wireSAFEARRAY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("cDims"),
        C_SHORT.withName("fFeatures"),
        C_LONG.withName("cbElements"),
        C_LONG.withName("cLocks"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_LONG.withName("sfType"),
            MemoryLayout.ofPaddingBits(32),
            MemoryLayout.ofUnion(
                MemoryLayout.ofStruct(
                    C_LONG.withName("Size"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("aBstr")
                ).withName("BstrStr"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("Size"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("apUnknown")
                ).withName("UnknownStr"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("Size"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("apDispatch")
                ).withName("DispatchStr"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("Size"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("aVariant")
                ).withName("VariantStr"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("Size"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("aRecord")
                ).withName("RecordStr"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("Size"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("apUnknown"),
                    MemoryLayout.ofStruct(
                        C_LONG.withName("Data1"),
                        C_SHORT.withName("Data2"),
                        C_SHORT.withName("Data3"),
                        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
                    ).withName("iid")
                ).withName("HaveIidStr"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("clSize"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pData")
                ).withName("ByteStr"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("clSize"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pData")
                ).withName("WordStr"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("clSize"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pData")
                ).withName("LongStr"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("clSize"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pData")
                ).withName("HyperStr")
            ).withName("u")
        ).withName("uArrayStructs"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONG.withName("cElements"),
            C_LONG.withName("lLbound")
        ).withName("tagSAFEARRAYBOUND")).withName("rgsabound")
    ).withName("_wireSAFEARRAY");
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARRAY$struct$LAYOUT() { return _wireSAFEARRAY$struct$LAYOUT_; }

    static final MemoryLayout _wireSAFEARRAY$cDims$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARRAY$cDims$LAYOUT() { return _wireSAFEARRAY$cDims$LAYOUT_; }

    static final VarHandle _wireSAFEARRAY$cDims$VH_ = _wireSAFEARRAY$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cDims"));
    static final java.lang.invoke.VarHandle _wireSAFEARRAY$cDims$VH() { return _wireSAFEARRAY$cDims$VH_; }

    static final MemoryLayout _wireSAFEARRAY$fFeatures$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARRAY$fFeatures$LAYOUT() { return _wireSAFEARRAY$fFeatures$LAYOUT_; }

    static final VarHandle _wireSAFEARRAY$fFeatures$VH_ = _wireSAFEARRAY$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("fFeatures"));
    static final java.lang.invoke.VarHandle _wireSAFEARRAY$fFeatures$VH() { return _wireSAFEARRAY$fFeatures$VH_; }

    static final MemoryLayout _wireSAFEARRAY$cbElements$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARRAY$cbElements$LAYOUT() { return _wireSAFEARRAY$cbElements$LAYOUT_; }

    static final VarHandle _wireSAFEARRAY$cbElements$VH_ = _wireSAFEARRAY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbElements"));
    static final java.lang.invoke.VarHandle _wireSAFEARRAY$cbElements$VH() { return _wireSAFEARRAY$cbElements$VH_; }

    static final MemoryLayout _wireSAFEARRAY$cLocks$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _wireSAFEARRAY$cLocks$LAYOUT() { return _wireSAFEARRAY$cLocks$LAYOUT_; }

    static final VarHandle _wireSAFEARRAY$cLocks$VH_ = _wireSAFEARRAY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cLocks"));
    static final java.lang.invoke.VarHandle _wireSAFEARRAY$cLocks$VH() { return _wireSAFEARRAY$cLocks$VH_; }

    static final MemoryLayout tagSAFEARRAY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("cDims"),
        C_SHORT.withName("fFeatures"),
        C_LONG.withName("cbElements"),
        C_LONG.withName("cLocks"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pvData"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONG.withName("cElements"),
            C_LONG.withName("lLbound")
        ).withName("tagSAFEARRAYBOUND")).withName("rgsabound")
    ).withName("tagSAFEARRAY");
    static final jdk.incubator.foreign.MemoryLayout tagSAFEARRAY$struct$LAYOUT() { return tagSAFEARRAY$struct$LAYOUT_; }

    static final MemoryLayout tagSAFEARRAY$cDims$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagSAFEARRAY$cDims$LAYOUT() { return tagSAFEARRAY$cDims$LAYOUT_; }

    static final VarHandle tagSAFEARRAY$cDims$VH_ = tagSAFEARRAY$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cDims"));
    static final java.lang.invoke.VarHandle tagSAFEARRAY$cDims$VH() { return tagSAFEARRAY$cDims$VH_; }

    static final MemoryLayout tagSAFEARRAY$fFeatures$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagSAFEARRAY$fFeatures$LAYOUT() { return tagSAFEARRAY$fFeatures$LAYOUT_; }

    static final VarHandle tagSAFEARRAY$fFeatures$VH_ = tagSAFEARRAY$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("fFeatures"));
    static final java.lang.invoke.VarHandle tagSAFEARRAY$fFeatures$VH() { return tagSAFEARRAY$fFeatures$VH_; }

    static final MemoryLayout tagSAFEARRAY$cbElements$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagSAFEARRAY$cbElements$LAYOUT() { return tagSAFEARRAY$cbElements$LAYOUT_; }

    static final VarHandle tagSAFEARRAY$cbElements$VH_ = tagSAFEARRAY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbElements"));
    static final java.lang.invoke.VarHandle tagSAFEARRAY$cbElements$VH() { return tagSAFEARRAY$cbElements$VH_; }

    static final MemoryLayout tagSAFEARRAY$cLocks$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagSAFEARRAY$cLocks$LAYOUT() { return tagSAFEARRAY$cLocks$LAYOUT_; }

    static final VarHandle tagSAFEARRAY$cLocks$VH_ = tagSAFEARRAY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cLocks"));
    static final java.lang.invoke.VarHandle tagSAFEARRAY$cLocks$VH() { return tagSAFEARRAY$cLocks$VH_; }

    static final MemoryLayout tagSAFEARRAY$pvData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagSAFEARRAY$pvData$LAYOUT() { return tagSAFEARRAY$pvData$LAYOUT_; }

    static final VarHandle tagSAFEARRAY$pvData$VH_ = MemoryHandles.asAddressVarHandle(tagSAFEARRAY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvData")));
    static final java.lang.invoke.VarHandle tagSAFEARRAY$pvData$VH() { return tagSAFEARRAY$pvData$VH_; }

    static final MemoryLayout tagVARIANT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("vt"),
        C_SHORT.withName("wReserved1"),
        C_SHORT.withName("wReserved2"),
        C_SHORT.withName("wReserved3"),
        C_LONGLONG.withName("llVal"),
        C_LONG.withName("lVal"),
        C_CHAR.withName("bVal"),
        C_SHORT.withName("iVal"),
        C_FLOAT.withName("fltVal"),
        C_DOUBLE.withName("dblVal"),
        C_SHORT.withName("boolVal"),
        C_SHORT.withName("__OBSOLETE__VARIANT_BOOL"),
        C_LONG.withName("scode"),
        MemoryLayout.ofUnion(
            C_LONG.withName("Lo"),
            C_LONG.withName("Hi"),
            C_LONGLONG.withName("int64")
        ).withName("cyVal"),
        C_DOUBLE.withName("date"),
        C_POINTER.withName("bstrVal"),
        C_POINTER.withName("punkVal"),
        C_POINTER.withName("pdispVal"),
        C_POINTER.withName("parray"),
        C_POINTER.withName("pbVal"),
        C_POINTER.withName("piVal"),
        C_POINTER.withName("plVal"),
        C_POINTER.withName("pllVal"),
        C_POINTER.withName("pfltVal"),
        C_POINTER.withName("pdblVal"),
        C_POINTER.withName("pboolVal"),
        C_POINTER.withName("__OBSOLETE__VARIANT_PBOOL"),
        C_POINTER.withName("pscode"),
        C_POINTER.withName("pcyVal"),
        C_POINTER.withName("pdate"),
        C_POINTER.withName("pbstrVal"),
        C_POINTER.withName("ppunkVal"),
        C_POINTER.withName("ppdispVal"),
        C_POINTER.withName("pparray"),
        C_POINTER.withName("pvarVal"),
        C_POINTER.withName("byref"),
        C_CHAR.withName("cVal"),
        C_SHORT.withName("uiVal"),
        C_LONG.withName("ulVal"),
        C_LONGLONG.withName("ullVal"),
        C_INT.withName("intVal"),
        C_INT.withName("uintVal"),
        C_POINTER.withName("pdecVal"),
        C_POINTER.withName("pcVal"),
        C_POINTER.withName("puiVal"),
        C_POINTER.withName("pulVal"),
        C_POINTER.withName("pullVal"),
        C_POINTER.withName("pintVal"),
        C_POINTER.withName("puintVal"),
        C_POINTER.withName("pvRecord"),
        C_POINTER.withName("pRecInfo"),
        MemoryLayout.ofStruct(
            C_SHORT.withName("wReserved"),
            C_CHAR.withName("scale"),
            C_CHAR.withName("sign"),
            C_SHORT.withName("signscale"),
            C_LONG.withName("Hi32"),
            C_LONG.withName("Lo32"),
            C_LONG.withName("Mid32"),
            C_LONGLONG.withName("Lo64")
        ).withName("decVal")
    ).withName("tagVARIANT");
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$struct$LAYOUT() { return tagVARIANT$struct$LAYOUT_; }

    static final MemoryLayout tagVARIANT$vt$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$vt$LAYOUT() { return tagVARIANT$vt$LAYOUT_; }

    static final VarHandle tagVARIANT$vt$VH_ = tagVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("vt"));
    static final java.lang.invoke.VarHandle tagVARIANT$vt$VH() { return tagVARIANT$vt$VH_; }

    static final MemoryLayout tagVARIANT$wReserved1$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$wReserved1$LAYOUT() { return tagVARIANT$wReserved1$LAYOUT_; }

    static final VarHandle tagVARIANT$wReserved1$VH_ = tagVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReserved1"));
    static final java.lang.invoke.VarHandle tagVARIANT$wReserved1$VH() { return tagVARIANT$wReserved1$VH_; }

    static final MemoryLayout tagVARIANT$wReserved2$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$wReserved2$LAYOUT() { return tagVARIANT$wReserved2$LAYOUT_; }

    static final VarHandle tagVARIANT$wReserved2$VH_ = tagVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReserved2"));
    static final java.lang.invoke.VarHandle tagVARIANT$wReserved2$VH() { return tagVARIANT$wReserved2$VH_; }

    static final MemoryLayout tagVARIANT$wReserved3$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$wReserved3$LAYOUT() { return tagVARIANT$wReserved3$LAYOUT_; }

    static final VarHandle tagVARIANT$wReserved3$VH_ = tagVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReserved3"));
    static final java.lang.invoke.VarHandle tagVARIANT$wReserved3$VH() { return tagVARIANT$wReserved3$VH_; }

    static final MemoryLayout tagVARIANT$llVal$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$llVal$LAYOUT() { return tagVARIANT$llVal$LAYOUT_; }

    static final VarHandle tagVARIANT$llVal$VH_ = tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("llVal"));
    static final java.lang.invoke.VarHandle tagVARIANT$llVal$VH() { return tagVARIANT$llVal$VH_; }

    static final MemoryLayout tagVARIANT$lVal$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$lVal$LAYOUT() { return tagVARIANT$lVal$LAYOUT_; }

    static final VarHandle tagVARIANT$lVal$VH_ = tagVARIANT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lVal"));
    static final java.lang.invoke.VarHandle tagVARIANT$lVal$VH() { return tagVARIANT$lVal$VH_; }

    static final MemoryLayout tagVARIANT$bVal$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$bVal$LAYOUT() { return tagVARIANT$bVal$LAYOUT_; }

    static final VarHandle tagVARIANT$bVal$VH_ = tagVARIANT$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("bVal"));
    static final java.lang.invoke.VarHandle tagVARIANT$bVal$VH() { return tagVARIANT$bVal$VH_; }

    static final MemoryLayout tagVARIANT$iVal$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$iVal$LAYOUT() { return tagVARIANT$iVal$LAYOUT_; }

    static final VarHandle tagVARIANT$iVal$VH_ = tagVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("iVal"));
    static final java.lang.invoke.VarHandle tagVARIANT$iVal$VH() { return tagVARIANT$iVal$VH_; }

    static final MemoryLayout tagVARIANT$fltVal$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$fltVal$LAYOUT() { return tagVARIANT$fltVal$LAYOUT_; }

    static final VarHandle tagVARIANT$fltVal$VH_ = tagVARIANT$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("fltVal"));
    static final java.lang.invoke.VarHandle tagVARIANT$fltVal$VH() { return tagVARIANT$fltVal$VH_; }

    static final MemoryLayout tagVARIANT$dblVal$LAYOUT_ = C_DOUBLE;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$dblVal$LAYOUT() { return tagVARIANT$dblVal$LAYOUT_; }

    static final VarHandle tagVARIANT$dblVal$VH_ = tagVARIANT$struct$LAYOUT_.varHandle(double.class, MemoryLayout.PathElement.groupElement("dblVal"));
    static final java.lang.invoke.VarHandle tagVARIANT$dblVal$VH() { return tagVARIANT$dblVal$VH_; }

    static final MemoryLayout tagVARIANT$boolVal$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$boolVal$LAYOUT() { return tagVARIANT$boolVal$LAYOUT_; }

    static final VarHandle tagVARIANT$boolVal$VH_ = tagVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("boolVal"));
    static final java.lang.invoke.VarHandle tagVARIANT$boolVal$VH() { return tagVARIANT$boolVal$VH_; }

    static final MemoryLayout tagVARIANT$__OBSOLETE__VARIANT_BOOL$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$__OBSOLETE__VARIANT_BOOL$LAYOUT() { return tagVARIANT$__OBSOLETE__VARIANT_BOOL$LAYOUT_; }

    static final VarHandle tagVARIANT$__OBSOLETE__VARIANT_BOOL$VH_ = tagVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__OBSOLETE__VARIANT_BOOL"));
    static final java.lang.invoke.VarHandle tagVARIANT$__OBSOLETE__VARIANT_BOOL$VH() { return tagVARIANT$__OBSOLETE__VARIANT_BOOL$VH_; }

    static final MemoryLayout tagVARIANT$scode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$scode$LAYOUT() { return tagVARIANT$scode$LAYOUT_; }

    static final VarHandle tagVARIANT$scode$VH_ = tagVARIANT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("scode"));
    static final java.lang.invoke.VarHandle tagVARIANT$scode$VH() { return tagVARIANT$scode$VH_; }

    static final MemoryLayout tagVARIANT$date$LAYOUT_ = C_DOUBLE;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$date$LAYOUT() { return tagVARIANT$date$LAYOUT_; }

    static final VarHandle tagVARIANT$date$VH_ = tagVARIANT$struct$LAYOUT_.varHandle(double.class, MemoryLayout.PathElement.groupElement("date"));
    static final java.lang.invoke.VarHandle tagVARIANT$date$VH() { return tagVARIANT$date$VH_; }

    static final MemoryLayout tagVARIANT$bstrVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$bstrVal$LAYOUT() { return tagVARIANT$bstrVal$LAYOUT_; }

    static final VarHandle tagVARIANT$bstrVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("bstrVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$bstrVal$VH() { return tagVARIANT$bstrVal$VH_; }

    static final MemoryLayout tagVARIANT$punkVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$punkVal$LAYOUT() { return tagVARIANT$punkVal$LAYOUT_; }

    static final VarHandle tagVARIANT$punkVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("punkVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$punkVal$VH() { return tagVARIANT$punkVal$VH_; }

    static final MemoryLayout tagVARIANT$pdispVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$pdispVal$LAYOUT() { return tagVARIANT$pdispVal$LAYOUT_; }

    static final VarHandle tagVARIANT$pdispVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pdispVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$pdispVal$VH() { return tagVARIANT$pdispVal$VH_; }

    static final MemoryLayout tagVARIANT$parray$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$parray$LAYOUT() { return tagVARIANT$parray$LAYOUT_; }

    static final VarHandle tagVARIANT$parray$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("parray")));
    static final java.lang.invoke.VarHandle tagVARIANT$parray$VH() { return tagVARIANT$parray$VH_; }

    static final MemoryLayout tagVARIANT$pbVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$pbVal$LAYOUT() { return tagVARIANT$pbVal$LAYOUT_; }

    static final VarHandle tagVARIANT$pbVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pbVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$pbVal$VH() { return tagVARIANT$pbVal$VH_; }

    static final MemoryLayout tagVARIANT$piVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$piVal$LAYOUT() { return tagVARIANT$piVal$LAYOUT_; }

    static final VarHandle tagVARIANT$piVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("piVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$piVal$VH() { return tagVARIANT$piVal$VH_; }

    static final MemoryLayout tagVARIANT$plVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$plVal$LAYOUT() { return tagVARIANT$plVal$LAYOUT_; }

    static final VarHandle tagVARIANT$plVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("plVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$plVal$VH() { return tagVARIANT$plVal$VH_; }

    static final MemoryLayout tagVARIANT$pllVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$pllVal$LAYOUT() { return tagVARIANT$pllVal$LAYOUT_; }

    static final VarHandle tagVARIANT$pllVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pllVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$pllVal$VH() { return tagVARIANT$pllVal$VH_; }

    static final MemoryLayout tagVARIANT$pfltVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$pfltVal$LAYOUT() { return tagVARIANT$pfltVal$LAYOUT_; }

    static final VarHandle tagVARIANT$pfltVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pfltVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$pfltVal$VH() { return tagVARIANT$pfltVal$VH_; }

    static final MemoryLayout tagVARIANT$pdblVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$pdblVal$LAYOUT() { return tagVARIANT$pdblVal$LAYOUT_; }

    static final VarHandle tagVARIANT$pdblVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pdblVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$pdblVal$VH() { return tagVARIANT$pdblVal$VH_; }

    static final MemoryLayout tagVARIANT$pboolVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$pboolVal$LAYOUT() { return tagVARIANT$pboolVal$LAYOUT_; }

    static final VarHandle tagVARIANT$pboolVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pboolVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$pboolVal$VH() { return tagVARIANT$pboolVal$VH_; }

    static final MemoryLayout tagVARIANT$__OBSOLETE__VARIANT_PBOOL$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$__OBSOLETE__VARIANT_PBOOL$LAYOUT() { return tagVARIANT$__OBSOLETE__VARIANT_PBOOL$LAYOUT_; }

    static final VarHandle tagVARIANT$__OBSOLETE__VARIANT_PBOOL$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__OBSOLETE__VARIANT_PBOOL")));
    static final java.lang.invoke.VarHandle tagVARIANT$__OBSOLETE__VARIANT_PBOOL$VH() { return tagVARIANT$__OBSOLETE__VARIANT_PBOOL$VH_; }

    static final MemoryLayout tagVARIANT$pscode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$pscode$LAYOUT() { return tagVARIANT$pscode$LAYOUT_; }

    static final VarHandle tagVARIANT$pscode$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pscode")));
    static final java.lang.invoke.VarHandle tagVARIANT$pscode$VH() { return tagVARIANT$pscode$VH_; }

    static final MemoryLayout tagVARIANT$pcyVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$pcyVal$LAYOUT() { return tagVARIANT$pcyVal$LAYOUT_; }

    static final VarHandle tagVARIANT$pcyVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pcyVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$pcyVal$VH() { return tagVARIANT$pcyVal$VH_; }

    static final MemoryLayout tagVARIANT$pdate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$pdate$LAYOUT() { return tagVARIANT$pdate$LAYOUT_; }

    static final VarHandle tagVARIANT$pdate$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pdate")));
    static final java.lang.invoke.VarHandle tagVARIANT$pdate$VH() { return tagVARIANT$pdate$VH_; }

    static final MemoryLayout tagVARIANT$pbstrVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$pbstrVal$LAYOUT() { return tagVARIANT$pbstrVal$LAYOUT_; }

    static final VarHandle tagVARIANT$pbstrVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pbstrVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$pbstrVal$VH() { return tagVARIANT$pbstrVal$VH_; }

    static final MemoryLayout tagVARIANT$ppunkVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$ppunkVal$LAYOUT() { return tagVARIANT$ppunkVal$LAYOUT_; }

    static final VarHandle tagVARIANT$ppunkVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ppunkVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$ppunkVal$VH() { return tagVARIANT$ppunkVal$VH_; }

    static final MemoryLayout tagVARIANT$ppdispVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$ppdispVal$LAYOUT() { return tagVARIANT$ppdispVal$LAYOUT_; }

    static final VarHandle tagVARIANT$ppdispVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ppdispVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$ppdispVal$VH() { return tagVARIANT$ppdispVal$VH_; }

    static final MemoryLayout tagVARIANT$pparray$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$pparray$LAYOUT() { return tagVARIANT$pparray$LAYOUT_; }

    static final VarHandle tagVARIANT$pparray$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pparray")));
    static final java.lang.invoke.VarHandle tagVARIANT$pparray$VH() { return tagVARIANT$pparray$VH_; }

    static final MemoryLayout tagVARIANT$pvarVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$pvarVal$LAYOUT() { return tagVARIANT$pvarVal$LAYOUT_; }

    static final VarHandle tagVARIANT$pvarVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvarVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$pvarVal$VH() { return tagVARIANT$pvarVal$VH_; }

    static final MemoryLayout tagVARIANT$byref$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$byref$LAYOUT() { return tagVARIANT$byref$LAYOUT_; }

    static final VarHandle tagVARIANT$byref$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("byref")));
    static final java.lang.invoke.VarHandle tagVARIANT$byref$VH() { return tagVARIANT$byref$VH_; }

    static final MemoryLayout tagVARIANT$cVal$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$cVal$LAYOUT() { return tagVARIANT$cVal$LAYOUT_; }

    static final VarHandle tagVARIANT$cVal$VH_ = tagVARIANT$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cVal"));
    static final java.lang.invoke.VarHandle tagVARIANT$cVal$VH() { return tagVARIANT$cVal$VH_; }

    static final MemoryLayout tagVARIANT$uiVal$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$uiVal$LAYOUT() { return tagVARIANT$uiVal$LAYOUT_; }

    static final VarHandle tagVARIANT$uiVal$VH_ = tagVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("uiVal"));
    static final java.lang.invoke.VarHandle tagVARIANT$uiVal$VH() { return tagVARIANT$uiVal$VH_; }

    static final MemoryLayout tagVARIANT$ulVal$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$ulVal$LAYOUT() { return tagVARIANT$ulVal$LAYOUT_; }

    static final VarHandle tagVARIANT$ulVal$VH_ = tagVARIANT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulVal"));
    static final java.lang.invoke.VarHandle tagVARIANT$ulVal$VH() { return tagVARIANT$ulVal$VH_; }

    static final MemoryLayout tagVARIANT$ullVal$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$ullVal$LAYOUT() { return tagVARIANT$ullVal$LAYOUT_; }

    static final VarHandle tagVARIANT$ullVal$VH_ = tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ullVal"));
    static final java.lang.invoke.VarHandle tagVARIANT$ullVal$VH() { return tagVARIANT$ullVal$VH_; }

    static final MemoryLayout tagVARIANT$intVal$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$intVal$LAYOUT() { return tagVARIANT$intVal$LAYOUT_; }

    static final VarHandle tagVARIANT$intVal$VH_ = tagVARIANT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("intVal"));
    static final java.lang.invoke.VarHandle tagVARIANT$intVal$VH() { return tagVARIANT$intVal$VH_; }

    static final MemoryLayout tagVARIANT$uintVal$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$uintVal$LAYOUT() { return tagVARIANT$uintVal$LAYOUT_; }

    static final VarHandle tagVARIANT$uintVal$VH_ = tagVARIANT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uintVal"));
    static final java.lang.invoke.VarHandle tagVARIANT$uintVal$VH() { return tagVARIANT$uintVal$VH_; }

    static final MemoryLayout tagVARIANT$pdecVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$pdecVal$LAYOUT() { return tagVARIANT$pdecVal$LAYOUT_; }

    static final VarHandle tagVARIANT$pdecVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pdecVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$pdecVal$VH() { return tagVARIANT$pdecVal$VH_; }

    static final MemoryLayout tagVARIANT$pcVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$pcVal$LAYOUT() { return tagVARIANT$pcVal$LAYOUT_; }

    static final VarHandle tagVARIANT$pcVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pcVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$pcVal$VH() { return tagVARIANT$pcVal$VH_; }

    static final MemoryLayout tagVARIANT$puiVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$puiVal$LAYOUT() { return tagVARIANT$puiVal$LAYOUT_; }

    static final VarHandle tagVARIANT$puiVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("puiVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$puiVal$VH() { return tagVARIANT$puiVal$VH_; }

    static final MemoryLayout tagVARIANT$pulVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$pulVal$LAYOUT() { return tagVARIANT$pulVal$LAYOUT_; }

    static final VarHandle tagVARIANT$pulVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pulVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$pulVal$VH() { return tagVARIANT$pulVal$VH_; }

    static final MemoryLayout tagVARIANT$pullVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$pullVal$LAYOUT() { return tagVARIANT$pullVal$LAYOUT_; }

    static final VarHandle tagVARIANT$pullVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pullVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$pullVal$VH() { return tagVARIANT$pullVal$VH_; }

    static final MemoryLayout tagVARIANT$pintVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$pintVal$LAYOUT() { return tagVARIANT$pintVal$LAYOUT_; }

    static final VarHandle tagVARIANT$pintVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pintVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$pintVal$VH() { return tagVARIANT$pintVal$VH_; }

    static final MemoryLayout tagVARIANT$puintVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$puintVal$LAYOUT() { return tagVARIANT$puintVal$LAYOUT_; }

    static final VarHandle tagVARIANT$puintVal$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("puintVal")));
    static final java.lang.invoke.VarHandle tagVARIANT$puintVal$VH() { return tagVARIANT$puintVal$VH_; }

    static final MemoryLayout tagVARIANT$pvRecord$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$pvRecord$LAYOUT() { return tagVARIANT$pvRecord$LAYOUT_; }

    static final VarHandle tagVARIANT$pvRecord$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvRecord")));
    static final java.lang.invoke.VarHandle tagVARIANT$pvRecord$VH() { return tagVARIANT$pvRecord$VH_; }

    static final MemoryLayout tagVARIANT$pRecInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVARIANT$pRecInfo$LAYOUT() { return tagVARIANT$pRecInfo$LAYOUT_; }

    static final VarHandle tagVARIANT$pRecInfo$VH_ = MemoryHandles.asAddressVarHandle(tagVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pRecInfo")));
    static final java.lang.invoke.VarHandle tagVARIANT$pRecInfo$VH() { return tagVARIANT$pRecInfo$VH_; }

    static final MemoryLayout _wireBRECORD$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("fFlags"),
        C_LONG.withName("clSize"),
        C_POINTER.withName("pRecInfo"),
        C_POINTER.withName("pRecord")
    ).withName("_wireBRECORD");
    static final jdk.incubator.foreign.MemoryLayout _wireBRECORD$struct$LAYOUT() { return _wireBRECORD$struct$LAYOUT_; }

    static final MemoryLayout _wireBRECORD$fFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _wireBRECORD$fFlags$LAYOUT() { return _wireBRECORD$fFlags$LAYOUT_; }

    static final VarHandle _wireBRECORD$fFlags$VH_ = _wireBRECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fFlags"));
    static final java.lang.invoke.VarHandle _wireBRECORD$fFlags$VH() { return _wireBRECORD$fFlags$VH_; }

    static final MemoryLayout _wireBRECORD$clSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _wireBRECORD$clSize$LAYOUT() { return _wireBRECORD$clSize$LAYOUT_; }

    static final VarHandle _wireBRECORD$clSize$VH_ = _wireBRECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("clSize"));
    static final java.lang.invoke.VarHandle _wireBRECORD$clSize$VH() { return _wireBRECORD$clSize$VH_; }

    static final MemoryLayout _wireBRECORD$pRecInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireBRECORD$pRecInfo$LAYOUT() { return _wireBRECORD$pRecInfo$LAYOUT_; }

    static final VarHandle _wireBRECORD$pRecInfo$VH_ = MemoryHandles.asAddressVarHandle(_wireBRECORD$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pRecInfo")));
    static final java.lang.invoke.VarHandle _wireBRECORD$pRecInfo$VH() { return _wireBRECORD$pRecInfo$VH_; }

    static final MemoryLayout _wireBRECORD$pRecord$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireBRECORD$pRecord$LAYOUT() { return _wireBRECORD$pRecord$LAYOUT_; }

    static final VarHandle _wireBRECORD$pRecord$VH_ = MemoryHandles.asAddressVarHandle(_wireBRECORD$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pRecord")));
    static final java.lang.invoke.VarHandle _wireBRECORD$pRecord$VH() { return _wireBRECORD$pRecord$VH_; }

    static final MemoryLayout _wireVARIANT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("clSize"),
        C_LONG.withName("rpcReserved"),
        C_SHORT.withName("vt"),
        C_SHORT.withName("wReserved1"),
        C_SHORT.withName("wReserved2"),
        C_SHORT.withName("wReserved3"),
        C_LONGLONG.withName("llVal"),
        C_LONG.withName("lVal"),
        C_CHAR.withName("bVal"),
        C_SHORT.withName("iVal"),
        C_FLOAT.withName("fltVal"),
        C_DOUBLE.withName("dblVal"),
        C_SHORT.withName("boolVal"),
        C_LONG.withName("scode"),
        MemoryLayout.ofUnion(
            C_LONG.withName("Lo"),
            C_LONG.withName("Hi"),
            C_LONGLONG.withName("int64")
        ).withName("cyVal"),
        C_DOUBLE.withName("date"),
        C_POINTER.withName("bstrVal"),
        C_POINTER.withName("punkVal"),
        C_POINTER.withName("pdispVal"),
        C_POINTER.withName("parray"),
        C_POINTER.withName("brecVal"),
        C_POINTER.withName("pbVal"),
        C_POINTER.withName("piVal"),
        C_POINTER.withName("plVal"),
        C_POINTER.withName("pllVal"),
        C_POINTER.withName("pfltVal"),
        C_POINTER.withName("pdblVal"),
        C_POINTER.withName("pboolVal"),
        C_POINTER.withName("pscode"),
        C_POINTER.withName("pcyVal"),
        C_POINTER.withName("pdate"),
        C_POINTER.withName("pbstrVal"),
        C_POINTER.withName("ppunkVal"),
        C_POINTER.withName("ppdispVal"),
        C_POINTER.withName("pparray"),
        C_POINTER.withName("pvarVal"),
        C_CHAR.withName("cVal"),
        C_SHORT.withName("uiVal"),
        C_LONG.withName("ulVal"),
        C_LONGLONG.withName("ullVal"),
        C_INT.withName("intVal"),
        C_INT.withName("uintVal"),
        MemoryLayout.ofStruct(
            C_SHORT.withName("wReserved"),
            C_CHAR.withName("scale"),
            C_CHAR.withName("sign"),
            C_SHORT.withName("signscale"),
            C_LONG.withName("Hi32"),
            C_LONG.withName("Lo32"),
            C_LONG.withName("Mid32"),
            C_LONGLONG.withName("Lo64")
        ).withName("decVal"),
        C_POINTER.withName("pdecVal"),
        C_POINTER.withName("pcVal"),
        C_POINTER.withName("puiVal"),
        C_POINTER.withName("pulVal"),
        C_POINTER.withName("pullVal"),
        C_POINTER.withName("pintVal"),
        C_POINTER.withName("puintVal")
    ).withName("_wireVARIANT");
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$struct$LAYOUT() { return _wireVARIANT$struct$LAYOUT_; }

    static final MemoryLayout _wireVARIANT$clSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$clSize$LAYOUT() { return _wireVARIANT$clSize$LAYOUT_; }

    static final VarHandle _wireVARIANT$clSize$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("clSize"));
    static final java.lang.invoke.VarHandle _wireVARIANT$clSize$VH() { return _wireVARIANT$clSize$VH_; }

    static final MemoryLayout _wireVARIANT$rpcReserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$rpcReserved$LAYOUT() { return _wireVARIANT$rpcReserved$LAYOUT_; }

    static final VarHandle _wireVARIANT$rpcReserved$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("rpcReserved"));
    static final java.lang.invoke.VarHandle _wireVARIANT$rpcReserved$VH() { return _wireVARIANT$rpcReserved$VH_; }

    static final MemoryLayout _wireVARIANT$vt$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$vt$LAYOUT() { return _wireVARIANT$vt$LAYOUT_; }

    static final VarHandle _wireVARIANT$vt$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("vt"));
    static final java.lang.invoke.VarHandle _wireVARIANT$vt$VH() { return _wireVARIANT$vt$VH_; }

    static final MemoryLayout _wireVARIANT$wReserved1$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$wReserved1$LAYOUT() { return _wireVARIANT$wReserved1$LAYOUT_; }

    static final VarHandle _wireVARIANT$wReserved1$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReserved1"));
    static final java.lang.invoke.VarHandle _wireVARIANT$wReserved1$VH() { return _wireVARIANT$wReserved1$VH_; }

    static final MemoryLayout _wireVARIANT$wReserved2$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$wReserved2$LAYOUT() { return _wireVARIANT$wReserved2$LAYOUT_; }

    static final VarHandle _wireVARIANT$wReserved2$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReserved2"));
    static final java.lang.invoke.VarHandle _wireVARIANT$wReserved2$VH() { return _wireVARIANT$wReserved2$VH_; }

    static final MemoryLayout _wireVARIANT$wReserved3$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$wReserved3$LAYOUT() { return _wireVARIANT$wReserved3$LAYOUT_; }

    static final VarHandle _wireVARIANT$wReserved3$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReserved3"));
    static final java.lang.invoke.VarHandle _wireVARIANT$wReserved3$VH() { return _wireVARIANT$wReserved3$VH_; }

    static final MemoryLayout _wireVARIANT$llVal$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$llVal$LAYOUT() { return _wireVARIANT$llVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$llVal$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("llVal"));
    static final java.lang.invoke.VarHandle _wireVARIANT$llVal$VH() { return _wireVARIANT$llVal$VH_; }

    static final MemoryLayout _wireVARIANT$lVal$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$lVal$LAYOUT() { return _wireVARIANT$lVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$lVal$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lVal"));
    static final java.lang.invoke.VarHandle _wireVARIANT$lVal$VH() { return _wireVARIANT$lVal$VH_; }

    static final MemoryLayout _wireVARIANT$bVal$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$bVal$LAYOUT() { return _wireVARIANT$bVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$bVal$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("bVal"));
    static final java.lang.invoke.VarHandle _wireVARIANT$bVal$VH() { return _wireVARIANT$bVal$VH_; }

    static final MemoryLayout _wireVARIANT$iVal$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$iVal$LAYOUT() { return _wireVARIANT$iVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$iVal$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("iVal"));
    static final java.lang.invoke.VarHandle _wireVARIANT$iVal$VH() { return _wireVARIANT$iVal$VH_; }

    static final MemoryLayout _wireVARIANT$fltVal$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$fltVal$LAYOUT() { return _wireVARIANT$fltVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$fltVal$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("fltVal"));
    static final java.lang.invoke.VarHandle _wireVARIANT$fltVal$VH() { return _wireVARIANT$fltVal$VH_; }

    static final MemoryLayout _wireVARIANT$dblVal$LAYOUT_ = C_DOUBLE;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$dblVal$LAYOUT() { return _wireVARIANT$dblVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$dblVal$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(double.class, MemoryLayout.PathElement.groupElement("dblVal"));
    static final java.lang.invoke.VarHandle _wireVARIANT$dblVal$VH() { return _wireVARIANT$dblVal$VH_; }

    static final MemoryLayout _wireVARIANT$boolVal$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$boolVal$LAYOUT() { return _wireVARIANT$boolVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$boolVal$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("boolVal"));
    static final java.lang.invoke.VarHandle _wireVARIANT$boolVal$VH() { return _wireVARIANT$boolVal$VH_; }

    static final MemoryLayout _wireVARIANT$scode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$scode$LAYOUT() { return _wireVARIANT$scode$LAYOUT_; }

    static final VarHandle _wireVARIANT$scode$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("scode"));
    static final java.lang.invoke.VarHandle _wireVARIANT$scode$VH() { return _wireVARIANT$scode$VH_; }

    static final MemoryLayout _wireVARIANT$date$LAYOUT_ = C_DOUBLE;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$date$LAYOUT() { return _wireVARIANT$date$LAYOUT_; }

    static final VarHandle _wireVARIANT$date$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(double.class, MemoryLayout.PathElement.groupElement("date"));
    static final java.lang.invoke.VarHandle _wireVARIANT$date$VH() { return _wireVARIANT$date$VH_; }

    static final MemoryLayout _wireVARIANT$bstrVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$bstrVal$LAYOUT() { return _wireVARIANT$bstrVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$bstrVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("bstrVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$bstrVal$VH() { return _wireVARIANT$bstrVal$VH_; }

    static final MemoryLayout _wireVARIANT$punkVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$punkVal$LAYOUT() { return _wireVARIANT$punkVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$punkVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("punkVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$punkVal$VH() { return _wireVARIANT$punkVal$VH_; }

    static final MemoryLayout _wireVARIANT$pdispVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$pdispVal$LAYOUT() { return _wireVARIANT$pdispVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$pdispVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pdispVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$pdispVal$VH() { return _wireVARIANT$pdispVal$VH_; }

    static final MemoryLayout _wireVARIANT$parray$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$parray$LAYOUT() { return _wireVARIANT$parray$LAYOUT_; }

    static final VarHandle _wireVARIANT$parray$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("parray")));
    static final java.lang.invoke.VarHandle _wireVARIANT$parray$VH() { return _wireVARIANT$parray$VH_; }

    static final MemoryLayout _wireVARIANT$brecVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$brecVal$LAYOUT() { return _wireVARIANT$brecVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$brecVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("brecVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$brecVal$VH() { return _wireVARIANT$brecVal$VH_; }

    static final MemoryLayout _wireVARIANT$pbVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$pbVal$LAYOUT() { return _wireVARIANT$pbVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$pbVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pbVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$pbVal$VH() { return _wireVARIANT$pbVal$VH_; }

    static final MemoryLayout _wireVARIANT$piVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$piVal$LAYOUT() { return _wireVARIANT$piVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$piVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("piVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$piVal$VH() { return _wireVARIANT$piVal$VH_; }

    static final MemoryLayout _wireVARIANT$plVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$plVal$LAYOUT() { return _wireVARIANT$plVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$plVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("plVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$plVal$VH() { return _wireVARIANT$plVal$VH_; }

    static final MemoryLayout _wireVARIANT$pllVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$pllVal$LAYOUT() { return _wireVARIANT$pllVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$pllVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pllVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$pllVal$VH() { return _wireVARIANT$pllVal$VH_; }

    static final MemoryLayout _wireVARIANT$pfltVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$pfltVal$LAYOUT() { return _wireVARIANT$pfltVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$pfltVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pfltVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$pfltVal$VH() { return _wireVARIANT$pfltVal$VH_; }

    static final MemoryLayout _wireVARIANT$pdblVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$pdblVal$LAYOUT() { return _wireVARIANT$pdblVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$pdblVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pdblVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$pdblVal$VH() { return _wireVARIANT$pdblVal$VH_; }

    static final MemoryLayout _wireVARIANT$pboolVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$pboolVal$LAYOUT() { return _wireVARIANT$pboolVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$pboolVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pboolVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$pboolVal$VH() { return _wireVARIANT$pboolVal$VH_; }

    static final MemoryLayout _wireVARIANT$pscode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$pscode$LAYOUT() { return _wireVARIANT$pscode$LAYOUT_; }

    static final VarHandle _wireVARIANT$pscode$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pscode")));
    static final java.lang.invoke.VarHandle _wireVARIANT$pscode$VH() { return _wireVARIANT$pscode$VH_; }

    static final MemoryLayout _wireVARIANT$pcyVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$pcyVal$LAYOUT() { return _wireVARIANT$pcyVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$pcyVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pcyVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$pcyVal$VH() { return _wireVARIANT$pcyVal$VH_; }

    static final MemoryLayout _wireVARIANT$pdate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$pdate$LAYOUT() { return _wireVARIANT$pdate$LAYOUT_; }

    static final VarHandle _wireVARIANT$pdate$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pdate")));
    static final java.lang.invoke.VarHandle _wireVARIANT$pdate$VH() { return _wireVARIANT$pdate$VH_; }

    static final MemoryLayout _wireVARIANT$pbstrVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$pbstrVal$LAYOUT() { return _wireVARIANT$pbstrVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$pbstrVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pbstrVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$pbstrVal$VH() { return _wireVARIANT$pbstrVal$VH_; }

    static final MemoryLayout _wireVARIANT$ppunkVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$ppunkVal$LAYOUT() { return _wireVARIANT$ppunkVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$ppunkVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ppunkVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$ppunkVal$VH() { return _wireVARIANT$ppunkVal$VH_; }

    static final MemoryLayout _wireVARIANT$ppdispVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$ppdispVal$LAYOUT() { return _wireVARIANT$ppdispVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$ppdispVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ppdispVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$ppdispVal$VH() { return _wireVARIANT$ppdispVal$VH_; }

    static final MemoryLayout _wireVARIANT$pparray$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$pparray$LAYOUT() { return _wireVARIANT$pparray$LAYOUT_; }

    static final VarHandle _wireVARIANT$pparray$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pparray")));
    static final java.lang.invoke.VarHandle _wireVARIANT$pparray$VH() { return _wireVARIANT$pparray$VH_; }

    static final MemoryLayout _wireVARIANT$pvarVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$pvarVal$LAYOUT() { return _wireVARIANT$pvarVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$pvarVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvarVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$pvarVal$VH() { return _wireVARIANT$pvarVal$VH_; }

    static final MemoryLayout _wireVARIANT$cVal$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$cVal$LAYOUT() { return _wireVARIANT$cVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$cVal$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cVal"));
    static final java.lang.invoke.VarHandle _wireVARIANT$cVal$VH() { return _wireVARIANT$cVal$VH_; }

    static final MemoryLayout _wireVARIANT$uiVal$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$uiVal$LAYOUT() { return _wireVARIANT$uiVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$uiVal$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("uiVal"));
    static final java.lang.invoke.VarHandle _wireVARIANT$uiVal$VH() { return _wireVARIANT$uiVal$VH_; }

    static final MemoryLayout _wireVARIANT$ulVal$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$ulVal$LAYOUT() { return _wireVARIANT$ulVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$ulVal$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulVal"));
    static final java.lang.invoke.VarHandle _wireVARIANT$ulVal$VH() { return _wireVARIANT$ulVal$VH_; }

    static final MemoryLayout _wireVARIANT$ullVal$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$ullVal$LAYOUT() { return _wireVARIANT$ullVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$ullVal$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ullVal"));
    static final java.lang.invoke.VarHandle _wireVARIANT$ullVal$VH() { return _wireVARIANT$ullVal$VH_; }

    static final MemoryLayout _wireVARIANT$intVal$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$intVal$LAYOUT() { return _wireVARIANT$intVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$intVal$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("intVal"));
    static final java.lang.invoke.VarHandle _wireVARIANT$intVal$VH() { return _wireVARIANT$intVal$VH_; }

    static final MemoryLayout _wireVARIANT$uintVal$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$uintVal$LAYOUT() { return _wireVARIANT$uintVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$uintVal$VH_ = _wireVARIANT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uintVal"));
    static final java.lang.invoke.VarHandle _wireVARIANT$uintVal$VH() { return _wireVARIANT$uintVal$VH_; }

    static final MemoryLayout _wireVARIANT$pdecVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$pdecVal$LAYOUT() { return _wireVARIANT$pdecVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$pdecVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pdecVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$pdecVal$VH() { return _wireVARIANT$pdecVal$VH_; }

    static final MemoryLayout _wireVARIANT$pcVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$pcVal$LAYOUT() { return _wireVARIANT$pcVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$pcVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pcVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$pcVal$VH() { return _wireVARIANT$pcVal$VH_; }

    static final MemoryLayout _wireVARIANT$puiVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$puiVal$LAYOUT() { return _wireVARIANT$puiVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$puiVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("puiVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$puiVal$VH() { return _wireVARIANT$puiVal$VH_; }

    static final MemoryLayout _wireVARIANT$pulVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$pulVal$LAYOUT() { return _wireVARIANT$pulVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$pulVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pulVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$pulVal$VH() { return _wireVARIANT$pulVal$VH_; }

    static final MemoryLayout _wireVARIANT$pullVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$pullVal$LAYOUT() { return _wireVARIANT$pullVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$pullVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pullVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$pullVal$VH() { return _wireVARIANT$pullVal$VH_; }

    static final MemoryLayout _wireVARIANT$pintVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$pintVal$LAYOUT() { return _wireVARIANT$pintVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$pintVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pintVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$pintVal$VH() { return _wireVARIANT$pintVal$VH_; }

    static final MemoryLayout _wireVARIANT$puintVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _wireVARIANT$puintVal$LAYOUT() { return _wireVARIANT$puintVal$LAYOUT_; }

    static final VarHandle _wireVARIANT$puintVal$VH_ = MemoryHandles.asAddressVarHandle(_wireVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("puintVal")));
    static final java.lang.invoke.VarHandle _wireVARIANT$puintVal$VH() { return _wireVARIANT$puintVal$VH_; }

    static final int TKIND_ENUM() { return (int)0L; }

    static final int TKIND_RECORD() { return (int)1L; }

    static final int TKIND_MODULE() { return (int)2L; }

    static final int TKIND_INTERFACE() { return (int)3L; }

    static final int TKIND_DISPATCH() { return (int)4L; }

    static final int TKIND_COCLASS() { return (int)5L; }

    static final int TKIND_ALIAS() { return (int)6L; }

    static final int TKIND_UNION() { return (int)7L; }

    static final int TKIND_MAX() { return (int)8L; }

    static final MemoryLayout tagTYPEDESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lptdesc"),
        C_POINTER.withName("lpadesc"),
        C_LONG.withName("hreftype"),
        C_SHORT.withName("vt"),
        MemoryLayout.ofPaddingBits(48)
    ).withName("tagTYPEDESC");
    static final jdk.incubator.foreign.MemoryLayout tagTYPEDESC$struct$LAYOUT() { return tagTYPEDESC$struct$LAYOUT_; }

    static final MemoryLayout tagTYPEDESC$lptdesc$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagTYPEDESC$lptdesc$LAYOUT() { return tagTYPEDESC$lptdesc$LAYOUT_; }

    static final VarHandle tagTYPEDESC$lptdesc$VH_ = MemoryHandles.asAddressVarHandle(tagTYPEDESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lptdesc")));
    static final java.lang.invoke.VarHandle tagTYPEDESC$lptdesc$VH() { return tagTYPEDESC$lptdesc$VH_; }

    static final MemoryLayout tagTYPEDESC$lpadesc$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagTYPEDESC$lpadesc$LAYOUT() { return tagTYPEDESC$lpadesc$LAYOUT_; }

    static final VarHandle tagTYPEDESC$lpadesc$VH_ = MemoryHandles.asAddressVarHandle(tagTYPEDESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpadesc")));
    static final java.lang.invoke.VarHandle tagTYPEDESC$lpadesc$VH() { return tagTYPEDESC$lpadesc$VH_; }

    static final MemoryLayout tagTYPEDESC$hreftype$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagTYPEDESC$hreftype$LAYOUT() { return tagTYPEDESC$hreftype$LAYOUT_; }

    static final VarHandle tagTYPEDESC$hreftype$VH_ = tagTYPEDESC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("hreftype"));
    static final java.lang.invoke.VarHandle tagTYPEDESC$hreftype$VH() { return tagTYPEDESC$hreftype$VH_; }

    static final MemoryLayout tagTYPEDESC$vt$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagTYPEDESC$vt$LAYOUT() { return tagTYPEDESC$vt$LAYOUT_; }

    static final VarHandle tagTYPEDESC$vt$VH_ = tagTYPEDESC$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("vt"));
    static final java.lang.invoke.VarHandle tagTYPEDESC$vt$VH() { return tagTYPEDESC$vt$VH_; }

    static final MemoryLayout tagARRAYDESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_POINTER.withName("lptdesc"),
            C_POINTER.withName("lpadesc"),
            C_LONG.withName("hreftype"),
            C_SHORT.withName("vt"),
            MemoryLayout.ofPaddingBits(48)
        ).withName("tdescElem"),
        C_SHORT.withName("cDims"),
        MemoryLayout.ofPaddingBits(16),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONG.withName("cElements"),
            C_LONG.withName("lLbound")
        ).withName("tagSAFEARRAYBOUND")).withName("rgbounds"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagARRAYDESC");
    static final jdk.incubator.foreign.MemoryLayout tagARRAYDESC$struct$LAYOUT() { return tagARRAYDESC$struct$LAYOUT_; }

    static final MemoryLayout tagARRAYDESC$cDims$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagARRAYDESC$cDims$LAYOUT() { return tagARRAYDESC$cDims$LAYOUT_; }

    static final VarHandle tagARRAYDESC$cDims$VH_ = tagARRAYDESC$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cDims"));
    static final java.lang.invoke.VarHandle tagARRAYDESC$cDims$VH() { return tagARRAYDESC$cDims$VH_; }

    static final MemoryLayout tagPARAMDESCEX$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cBytes"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_SHORT.withName("vt"),
            C_SHORT.withName("wReserved1"),
            C_SHORT.withName("wReserved2"),
            C_SHORT.withName("wReserved3"),
            C_LONGLONG.withName("llVal"),
            C_LONG.withName("lVal"),
            C_CHAR.withName("bVal"),
            C_SHORT.withName("iVal"),
            C_FLOAT.withName("fltVal"),
            C_DOUBLE.withName("dblVal"),
            C_SHORT.withName("boolVal"),
            C_SHORT.withName("__OBSOLETE__VARIANT_BOOL"),
            C_LONG.withName("scode"),
            MemoryLayout.ofUnion(
                C_LONG.withName("Lo"),
                C_LONG.withName("Hi"),
                C_LONGLONG.withName("int64")
            ).withName("cyVal"),
            C_DOUBLE.withName("date"),
            C_POINTER.withName("bstrVal"),
            C_POINTER.withName("punkVal"),
            C_POINTER.withName("pdispVal"),
            C_POINTER.withName("parray"),
            C_POINTER.withName("pbVal"),
            C_POINTER.withName("piVal"),
            C_POINTER.withName("plVal"),
            C_POINTER.withName("pllVal"),
            C_POINTER.withName("pfltVal"),
            C_POINTER.withName("pdblVal"),
            C_POINTER.withName("pboolVal"),
            C_POINTER.withName("__OBSOLETE__VARIANT_PBOOL"),
            C_POINTER.withName("pscode"),
            C_POINTER.withName("pcyVal"),
            C_POINTER.withName("pdate"),
            C_POINTER.withName("pbstrVal"),
            C_POINTER.withName("ppunkVal"),
            C_POINTER.withName("ppdispVal"),
            C_POINTER.withName("pparray"),
            C_POINTER.withName("pvarVal"),
            C_POINTER.withName("byref"),
            C_CHAR.withName("cVal"),
            C_SHORT.withName("uiVal"),
            C_LONG.withName("ulVal"),
            C_LONGLONG.withName("ullVal"),
            C_INT.withName("intVal"),
            C_INT.withName("uintVal"),
            C_POINTER.withName("pdecVal"),
            C_POINTER.withName("pcVal"),
            C_POINTER.withName("puiVal"),
            C_POINTER.withName("pulVal"),
            C_POINTER.withName("pullVal"),
            C_POINTER.withName("pintVal"),
            C_POINTER.withName("puintVal"),
            C_POINTER.withName("pvRecord"),
            C_POINTER.withName("pRecInfo"),
            MemoryLayout.ofStruct(
                C_SHORT.withName("wReserved"),
                C_CHAR.withName("scale"),
                C_CHAR.withName("sign"),
                C_SHORT.withName("signscale"),
                C_LONG.withName("Hi32"),
                C_LONG.withName("Lo32"),
                C_LONG.withName("Mid32"),
                C_LONGLONG.withName("Lo64")
            ).withName("decVal")
        ).withName("varDefaultValue")
    ).withName("tagPARAMDESCEX");
    static final jdk.incubator.foreign.MemoryLayout tagPARAMDESCEX$struct$LAYOUT() { return tagPARAMDESCEX$struct$LAYOUT_; }

    static final MemoryLayout tagPARAMDESCEX$cBytes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPARAMDESCEX$cBytes$LAYOUT() { return tagPARAMDESCEX$cBytes$LAYOUT_; }

    static final VarHandle tagPARAMDESCEX$cBytes$VH_ = tagPARAMDESCEX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cBytes"));
    static final java.lang.invoke.VarHandle tagPARAMDESCEX$cBytes$VH() { return tagPARAMDESCEX$cBytes$VH_; }

    static final MemoryLayout tagPARAMDESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pparamdescex"),
        C_SHORT.withName("wParamFlags"),
        MemoryLayout.ofPaddingBits(48)
    ).withName("tagPARAMDESC");
    static final jdk.incubator.foreign.MemoryLayout tagPARAMDESC$struct$LAYOUT() { return tagPARAMDESC$struct$LAYOUT_; }

    static final MemoryLayout tagPARAMDESC$pparamdescex$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPARAMDESC$pparamdescex$LAYOUT() { return tagPARAMDESC$pparamdescex$LAYOUT_; }

    static final VarHandle tagPARAMDESC$pparamdescex$VH_ = MemoryHandles.asAddressVarHandle(tagPARAMDESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pparamdescex")));
    static final java.lang.invoke.VarHandle tagPARAMDESC$pparamdescex$VH() { return tagPARAMDESC$pparamdescex$VH_; }

    static final MemoryLayout tagPARAMDESC$wParamFlags$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagPARAMDESC$wParamFlags$LAYOUT() { return tagPARAMDESC$wParamFlags$LAYOUT_; }

    static final VarHandle tagPARAMDESC$wParamFlags$VH_ = tagPARAMDESC$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wParamFlags"));
    static final java.lang.invoke.VarHandle tagPARAMDESC$wParamFlags$VH() { return tagPARAMDESC$wParamFlags$VH_; }

    static final MemoryLayout tagIDLDESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("dwReserved"),
        C_SHORT.withName("wIDLFlags"),
        MemoryLayout.ofPaddingBits(48)
    ).withName("tagIDLDESC");
    static final jdk.incubator.foreign.MemoryLayout tagIDLDESC$struct$LAYOUT() { return tagIDLDESC$struct$LAYOUT_; }

    static final MemoryLayout tagIDLDESC$dwReserved$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout tagIDLDESC$dwReserved$LAYOUT() { return tagIDLDESC$dwReserved$LAYOUT_; }

    static final VarHandle tagIDLDESC$dwReserved$VH_ = tagIDLDESC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwReserved"));
    static final java.lang.invoke.VarHandle tagIDLDESC$dwReserved$VH() { return tagIDLDESC$dwReserved$VH_; }

    static final MemoryLayout tagIDLDESC$wIDLFlags$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagIDLDESC$wIDLFlags$LAYOUT() { return tagIDLDESC$wIDLFlags$LAYOUT_; }

    static final VarHandle tagIDLDESC$wIDLFlags$VH_ = tagIDLDESC$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wIDLFlags"));
    static final java.lang.invoke.VarHandle tagIDLDESC$wIDLFlags$VH() { return tagIDLDESC$wIDLFlags$VH_; }

    static final MemoryLayout tagELEMDESC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_POINTER.withName("lptdesc"),
            C_POINTER.withName("lpadesc"),
            C_LONG.withName("hreftype"),
            C_SHORT.withName("vt"),
            MemoryLayout.ofPaddingBits(48)
        ).withName("tdesc"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("dwReserved"),
            C_SHORT.withName("wIDLFlags"),
            MemoryLayout.ofPaddingBits(48)
        ).withName("idldesc"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pparamdescex"),
            C_SHORT.withName("wParamFlags"),
            MemoryLayout.ofPaddingBits(48)
        ).withName("paramdesc")
    ).withName("tagELEMDESC");
    static final jdk.incubator.foreign.MemoryLayout tagELEMDESC$struct$LAYOUT() { return tagELEMDESC$struct$LAYOUT_; }

    static final MemoryLayout tagTYPEATTR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("guid"),
        C_LONG.withName("lcid"),
        C_LONG.withName("dwReserved"),
        C_LONG.withName("memidConstructor"),
        C_LONG.withName("memidDestructor"),
        C_POINTER.withName("lpstrSchema"),
        C_LONG.withName("cbSizeInstance"),
        C_INT.withName("typekind"),
        C_SHORT.withName("cFuncs"),
        C_SHORT.withName("cVars"),
        C_SHORT.withName("cImplTypes"),
        C_SHORT.withName("cbSizeVft"),
        C_SHORT.withName("cbAlignment"),
        C_SHORT.withName("wTypeFlags"),
        C_SHORT.withName("wMajorVerNum"),
        C_SHORT.withName("wMinorVerNum"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("lptdesc"),
            C_POINTER.withName("lpadesc"),
            C_LONG.withName("hreftype"),
            C_SHORT.withName("vt"),
            MemoryLayout.ofPaddingBits(48)
        ).withName("tdescAlias"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("dwReserved"),
            C_SHORT.withName("wIDLFlags"),
            MemoryLayout.ofPaddingBits(48)
        ).withName("idldescType")
    ).withName("tagTYPEATTR");
    static final jdk.incubator.foreign.MemoryLayout tagTYPEATTR$struct$LAYOUT() { return tagTYPEATTR$struct$LAYOUT_; }

    static final MemoryLayout tagTYPEATTR$lcid$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagTYPEATTR$lcid$LAYOUT() { return tagTYPEATTR$lcid$LAYOUT_; }

    static final VarHandle tagTYPEATTR$lcid$VH_ = tagTYPEATTR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lcid"));
    static final java.lang.invoke.VarHandle tagTYPEATTR$lcid$VH() { return tagTYPEATTR$lcid$VH_; }

    static final MemoryLayout tagTYPEATTR$dwReserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagTYPEATTR$dwReserved$LAYOUT() { return tagTYPEATTR$dwReserved$LAYOUT_; }

    static final VarHandle tagTYPEATTR$dwReserved$VH_ = tagTYPEATTR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReserved"));
    static final java.lang.invoke.VarHandle tagTYPEATTR$dwReserved$VH() { return tagTYPEATTR$dwReserved$VH_; }

    static final MemoryLayout tagTYPEATTR$memidConstructor$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagTYPEATTR$memidConstructor$LAYOUT() { return tagTYPEATTR$memidConstructor$LAYOUT_; }

    static final VarHandle tagTYPEATTR$memidConstructor$VH_ = tagTYPEATTR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("memidConstructor"));
    static final java.lang.invoke.VarHandle tagTYPEATTR$memidConstructor$VH() { return tagTYPEATTR$memidConstructor$VH_; }

    static final MemoryLayout tagTYPEATTR$memidDestructor$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagTYPEATTR$memidDestructor$LAYOUT() { return tagTYPEATTR$memidDestructor$LAYOUT_; }

    static final VarHandle tagTYPEATTR$memidDestructor$VH_ = tagTYPEATTR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("memidDestructor"));
    static final java.lang.invoke.VarHandle tagTYPEATTR$memidDestructor$VH() { return tagTYPEATTR$memidDestructor$VH_; }

    static final MemoryLayout tagTYPEATTR$lpstrSchema$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagTYPEATTR$lpstrSchema$LAYOUT() { return tagTYPEATTR$lpstrSchema$LAYOUT_; }

    static final VarHandle tagTYPEATTR$lpstrSchema$VH_ = MemoryHandles.asAddressVarHandle(tagTYPEATTR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpstrSchema")));
    static final java.lang.invoke.VarHandle tagTYPEATTR$lpstrSchema$VH() { return tagTYPEATTR$lpstrSchema$VH_; }

    static final MemoryLayout tagTYPEATTR$cbSizeInstance$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagTYPEATTR$cbSizeInstance$LAYOUT() { return tagTYPEATTR$cbSizeInstance$LAYOUT_; }

    static final VarHandle tagTYPEATTR$cbSizeInstance$VH_ = tagTYPEATTR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSizeInstance"));
    static final java.lang.invoke.VarHandle tagTYPEATTR$cbSizeInstance$VH() { return tagTYPEATTR$cbSizeInstance$VH_; }

    static final MemoryLayout tagTYPEATTR$typekind$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagTYPEATTR$typekind$LAYOUT() { return tagTYPEATTR$typekind$LAYOUT_; }

    static final VarHandle tagTYPEATTR$typekind$VH_ = tagTYPEATTR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("typekind"));
    static final java.lang.invoke.VarHandle tagTYPEATTR$typekind$VH() { return tagTYPEATTR$typekind$VH_; }

    static final MemoryLayout tagTYPEATTR$cFuncs$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagTYPEATTR$cFuncs$LAYOUT() { return tagTYPEATTR$cFuncs$LAYOUT_; }

    static final VarHandle tagTYPEATTR$cFuncs$VH_ = tagTYPEATTR$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cFuncs"));
    static final java.lang.invoke.VarHandle tagTYPEATTR$cFuncs$VH() { return tagTYPEATTR$cFuncs$VH_; }

    static final MemoryLayout tagTYPEATTR$cVars$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagTYPEATTR$cVars$LAYOUT() { return tagTYPEATTR$cVars$LAYOUT_; }

    static final VarHandle tagTYPEATTR$cVars$VH_ = tagTYPEATTR$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cVars"));
    static final java.lang.invoke.VarHandle tagTYPEATTR$cVars$VH() { return tagTYPEATTR$cVars$VH_; }

    static final MemoryLayout tagTYPEATTR$cImplTypes$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagTYPEATTR$cImplTypes$LAYOUT() { return tagTYPEATTR$cImplTypes$LAYOUT_; }

    static final VarHandle tagTYPEATTR$cImplTypes$VH_ = tagTYPEATTR$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cImplTypes"));
    static final java.lang.invoke.VarHandle tagTYPEATTR$cImplTypes$VH() { return tagTYPEATTR$cImplTypes$VH_; }

    static final MemoryLayout tagTYPEATTR$cbSizeVft$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagTYPEATTR$cbSizeVft$LAYOUT() { return tagTYPEATTR$cbSizeVft$LAYOUT_; }

    static final VarHandle tagTYPEATTR$cbSizeVft$VH_ = tagTYPEATTR$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cbSizeVft"));
    static final java.lang.invoke.VarHandle tagTYPEATTR$cbSizeVft$VH() { return tagTYPEATTR$cbSizeVft$VH_; }

    static final MemoryLayout tagTYPEATTR$cbAlignment$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagTYPEATTR$cbAlignment$LAYOUT() { return tagTYPEATTR$cbAlignment$LAYOUT_; }

    static final VarHandle tagTYPEATTR$cbAlignment$VH_ = tagTYPEATTR$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cbAlignment"));
    static final java.lang.invoke.VarHandle tagTYPEATTR$cbAlignment$VH() { return tagTYPEATTR$cbAlignment$VH_; }

    static final MemoryLayout tagTYPEATTR$wTypeFlags$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagTYPEATTR$wTypeFlags$LAYOUT() { return tagTYPEATTR$wTypeFlags$LAYOUT_; }

    static final VarHandle tagTYPEATTR$wTypeFlags$VH_ = tagTYPEATTR$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wTypeFlags"));
    static final java.lang.invoke.VarHandle tagTYPEATTR$wTypeFlags$VH() { return tagTYPEATTR$wTypeFlags$VH_; }

    static final MemoryLayout tagTYPEATTR$wMajorVerNum$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagTYPEATTR$wMajorVerNum$LAYOUT() { return tagTYPEATTR$wMajorVerNum$LAYOUT_; }

    static final VarHandle tagTYPEATTR$wMajorVerNum$VH_ = tagTYPEATTR$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wMajorVerNum"));
    static final java.lang.invoke.VarHandle tagTYPEATTR$wMajorVerNum$VH() { return tagTYPEATTR$wMajorVerNum$VH_; }

}

