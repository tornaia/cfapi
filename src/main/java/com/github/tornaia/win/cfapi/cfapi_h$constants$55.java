// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$55 extends cfapi_h$constants$54 {

    /* package-private */ cfapi_h$constants$55() {}
    static final MemoryLayout _CRYPT_PASSWORD_CREDENTIALSW$pszPassword$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_PASSWORD_CREDENTIALSW$pszPassword$LAYOUT() { return _CRYPT_PASSWORD_CREDENTIALSW$pszPassword$LAYOUT_; }

    static final VarHandle _CRYPT_PASSWORD_CREDENTIALSW$pszPassword$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_PASSWORD_CREDENTIALSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszPassword")));
    static final java.lang.invoke.VarHandle _CRYPT_PASSWORD_CREDENTIALSW$pszPassword$VH() { return _CRYPT_PASSWORD_CREDENTIALSW$pszPassword$VH_; }

    static final MemoryLayout _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwObjectType"),
        C_LONG.withName("dwError"),
        C_LONG.withName("dwReserved"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("ThisUpdateTime"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("NextUpdateTime"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("PublishTime")
    ).withName("_CRYPTNET_URL_CACHE_PRE_FETCH_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$struct$LAYOUT() { return _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$cbSize$LAYOUT() { return _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$cbSize$VH_ = _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$cbSize$VH() { return _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$cbSize$VH_; }

    static final MemoryLayout _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$dwObjectType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$dwObjectType$LAYOUT() { return _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$dwObjectType$LAYOUT_; }

    static final VarHandle _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$dwObjectType$VH_ = _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwObjectType"));
    static final java.lang.invoke.VarHandle _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$dwObjectType$VH() { return _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$dwObjectType$VH_; }

    static final MemoryLayout _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$dwError$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$dwError$LAYOUT() { return _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$dwError$LAYOUT_; }

    static final VarHandle _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$dwError$VH_ = _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwError"));
    static final java.lang.invoke.VarHandle _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$dwError$VH() { return _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$dwError$VH_; }

    static final MemoryLayout _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$dwReserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$dwReserved$LAYOUT() { return _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$dwReserved$LAYOUT_; }

    static final VarHandle _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$dwReserved$VH_ = _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReserved"));
    static final java.lang.invoke.VarHandle _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$dwReserved$VH() { return _CRYPTNET_URL_CACHE_PRE_FETCH_INFO$dwReserved$VH_; }

    static final MemoryLayout _CRYPTNET_URL_CACHE_FLUSH_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwExemptSeconds"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("ExpireTime")
    ).withName("_CRYPTNET_URL_CACHE_FLUSH_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CRYPTNET_URL_CACHE_FLUSH_INFO$struct$LAYOUT() { return _CRYPTNET_URL_CACHE_FLUSH_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CRYPTNET_URL_CACHE_FLUSH_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPTNET_URL_CACHE_FLUSH_INFO$cbSize$LAYOUT() { return _CRYPTNET_URL_CACHE_FLUSH_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CRYPTNET_URL_CACHE_FLUSH_INFO$cbSize$VH_ = _CRYPTNET_URL_CACHE_FLUSH_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CRYPTNET_URL_CACHE_FLUSH_INFO$cbSize$VH() { return _CRYPTNET_URL_CACHE_FLUSH_INFO$cbSize$VH_; }

    static final MemoryLayout _CRYPTNET_URL_CACHE_FLUSH_INFO$dwExemptSeconds$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPTNET_URL_CACHE_FLUSH_INFO$dwExemptSeconds$LAYOUT() { return _CRYPTNET_URL_CACHE_FLUSH_INFO$dwExemptSeconds$LAYOUT_; }

    static final VarHandle _CRYPTNET_URL_CACHE_FLUSH_INFO$dwExemptSeconds$VH_ = _CRYPTNET_URL_CACHE_FLUSH_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwExemptSeconds"));
    static final java.lang.invoke.VarHandle _CRYPTNET_URL_CACHE_FLUSH_INFO$dwExemptSeconds$VH() { return _CRYPTNET_URL_CACHE_FLUSH_INFO$dwExemptSeconds$VH_; }

    static final MemoryLayout _CRYPTNET_URL_CACHE_RESPONSE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_SHORT.withName("wResponseType"),
        C_SHORT.withName("wResponseFlags"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("LastModifiedTime"),
        C_LONG.withName("dwMaxAge"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pwszETag"),
        C_LONG.withName("dwProxyId"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CRYPTNET_URL_CACHE_RESPONSE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CRYPTNET_URL_CACHE_RESPONSE_INFO$struct$LAYOUT() { return _CRYPTNET_URL_CACHE_RESPONSE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CRYPTNET_URL_CACHE_RESPONSE_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPTNET_URL_CACHE_RESPONSE_INFO$cbSize$LAYOUT() { return _CRYPTNET_URL_CACHE_RESPONSE_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CRYPTNET_URL_CACHE_RESPONSE_INFO$cbSize$VH_ = _CRYPTNET_URL_CACHE_RESPONSE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CRYPTNET_URL_CACHE_RESPONSE_INFO$cbSize$VH() { return _CRYPTNET_URL_CACHE_RESPONSE_INFO$cbSize$VH_; }

    static final MemoryLayout _CRYPTNET_URL_CACHE_RESPONSE_INFO$wResponseType$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _CRYPTNET_URL_CACHE_RESPONSE_INFO$wResponseType$LAYOUT() { return _CRYPTNET_URL_CACHE_RESPONSE_INFO$wResponseType$LAYOUT_; }

    static final VarHandle _CRYPTNET_URL_CACHE_RESPONSE_INFO$wResponseType$VH_ = _CRYPTNET_URL_CACHE_RESPONSE_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wResponseType"));
    static final java.lang.invoke.VarHandle _CRYPTNET_URL_CACHE_RESPONSE_INFO$wResponseType$VH() { return _CRYPTNET_URL_CACHE_RESPONSE_INFO$wResponseType$VH_; }

    static final MemoryLayout _CRYPTNET_URL_CACHE_RESPONSE_INFO$wResponseFlags$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _CRYPTNET_URL_CACHE_RESPONSE_INFO$wResponseFlags$LAYOUT() { return _CRYPTNET_URL_CACHE_RESPONSE_INFO$wResponseFlags$LAYOUT_; }

    static final VarHandle _CRYPTNET_URL_CACHE_RESPONSE_INFO$wResponseFlags$VH_ = _CRYPTNET_URL_CACHE_RESPONSE_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wResponseFlags"));
    static final java.lang.invoke.VarHandle _CRYPTNET_URL_CACHE_RESPONSE_INFO$wResponseFlags$VH() { return _CRYPTNET_URL_CACHE_RESPONSE_INFO$wResponseFlags$VH_; }

    static final MemoryLayout _CRYPTNET_URL_CACHE_RESPONSE_INFO$dwMaxAge$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPTNET_URL_CACHE_RESPONSE_INFO$dwMaxAge$LAYOUT() { return _CRYPTNET_URL_CACHE_RESPONSE_INFO$dwMaxAge$LAYOUT_; }

    static final VarHandle _CRYPTNET_URL_CACHE_RESPONSE_INFO$dwMaxAge$VH_ = _CRYPTNET_URL_CACHE_RESPONSE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwMaxAge"));
    static final java.lang.invoke.VarHandle _CRYPTNET_URL_CACHE_RESPONSE_INFO$dwMaxAge$VH() { return _CRYPTNET_URL_CACHE_RESPONSE_INFO$dwMaxAge$VH_; }

    static final MemoryLayout _CRYPTNET_URL_CACHE_RESPONSE_INFO$pwszETag$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPTNET_URL_CACHE_RESPONSE_INFO$pwszETag$LAYOUT() { return _CRYPTNET_URL_CACHE_RESPONSE_INFO$pwszETag$LAYOUT_; }

    static final VarHandle _CRYPTNET_URL_CACHE_RESPONSE_INFO$pwszETag$VH_ = MemoryHandles.asAddressVarHandle(_CRYPTNET_URL_CACHE_RESPONSE_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszETag")));
    static final java.lang.invoke.VarHandle _CRYPTNET_URL_CACHE_RESPONSE_INFO$pwszETag$VH() { return _CRYPTNET_URL_CACHE_RESPONSE_INFO$pwszETag$VH_; }

    static final MemoryLayout _CRYPTNET_URL_CACHE_RESPONSE_INFO$dwProxyId$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPTNET_URL_CACHE_RESPONSE_INFO$dwProxyId$LAYOUT() { return _CRYPTNET_URL_CACHE_RESPONSE_INFO$dwProxyId$LAYOUT_; }

    static final VarHandle _CRYPTNET_URL_CACHE_RESPONSE_INFO$dwProxyId$VH_ = _CRYPTNET_URL_CACHE_RESPONSE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwProxyId"));
    static final java.lang.invoke.VarHandle _CRYPTNET_URL_CACHE_RESPONSE_INFO$dwProxyId$VH() { return _CRYPTNET_URL_CACHE_RESPONSE_INFO$dwProxyId$VH_; }

    static final MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pLastSyncTime"),
        C_LONG.withName("dwMaxUrlRetrievalByteCount"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pPreFetchInfo"),
        C_POINTER.withName("pFlushInfo"),
        C_POINTER.withName("ppResponseInfo"),
        C_POINTER.withName("pwszCacheFileNamePrefix"),
        C_POINTER.withName("pftCacheResync"),
        C_INT.withName("fProxyCacheRetrieval"),
        C_LONG.withName("dwHttpStatusCode"),
        C_POINTER.withName("ppwszErrorResponseHeaders"),
        C_POINTER.withName("ppErrorContentBlob")
    ).withName("_CRYPT_RETRIEVE_AUX_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$struct$LAYOUT() { return _CRYPT_RETRIEVE_AUX_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$cbSize$LAYOUT() { return _CRYPT_RETRIEVE_AUX_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CRYPT_RETRIEVE_AUX_INFO$cbSize$VH_ = _CRYPT_RETRIEVE_AUX_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CRYPT_RETRIEVE_AUX_INFO$cbSize$VH() { return _CRYPT_RETRIEVE_AUX_INFO$cbSize$VH_; }

    static final MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$pLastSyncTime$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$pLastSyncTime$LAYOUT() { return _CRYPT_RETRIEVE_AUX_INFO$pLastSyncTime$LAYOUT_; }

    static final VarHandle _CRYPT_RETRIEVE_AUX_INFO$pLastSyncTime$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_RETRIEVE_AUX_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pLastSyncTime")));
    static final java.lang.invoke.VarHandle _CRYPT_RETRIEVE_AUX_INFO$pLastSyncTime$VH() { return _CRYPT_RETRIEVE_AUX_INFO$pLastSyncTime$VH_; }

    static final MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$dwMaxUrlRetrievalByteCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$dwMaxUrlRetrievalByteCount$LAYOUT() { return _CRYPT_RETRIEVE_AUX_INFO$dwMaxUrlRetrievalByteCount$LAYOUT_; }

    static final VarHandle _CRYPT_RETRIEVE_AUX_INFO$dwMaxUrlRetrievalByteCount$VH_ = _CRYPT_RETRIEVE_AUX_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwMaxUrlRetrievalByteCount"));
    static final java.lang.invoke.VarHandle _CRYPT_RETRIEVE_AUX_INFO$dwMaxUrlRetrievalByteCount$VH() { return _CRYPT_RETRIEVE_AUX_INFO$dwMaxUrlRetrievalByteCount$VH_; }

    static final MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$pPreFetchInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$pPreFetchInfo$LAYOUT() { return _CRYPT_RETRIEVE_AUX_INFO$pPreFetchInfo$LAYOUT_; }

    static final VarHandle _CRYPT_RETRIEVE_AUX_INFO$pPreFetchInfo$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_RETRIEVE_AUX_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pPreFetchInfo")));
    static final java.lang.invoke.VarHandle _CRYPT_RETRIEVE_AUX_INFO$pPreFetchInfo$VH() { return _CRYPT_RETRIEVE_AUX_INFO$pPreFetchInfo$VH_; }

    static final MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$pFlushInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$pFlushInfo$LAYOUT() { return _CRYPT_RETRIEVE_AUX_INFO$pFlushInfo$LAYOUT_; }

    static final VarHandle _CRYPT_RETRIEVE_AUX_INFO$pFlushInfo$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_RETRIEVE_AUX_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pFlushInfo")));
    static final java.lang.invoke.VarHandle _CRYPT_RETRIEVE_AUX_INFO$pFlushInfo$VH() { return _CRYPT_RETRIEVE_AUX_INFO$pFlushInfo$VH_; }

    static final MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$ppResponseInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$ppResponseInfo$LAYOUT() { return _CRYPT_RETRIEVE_AUX_INFO$ppResponseInfo$LAYOUT_; }

    static final VarHandle _CRYPT_RETRIEVE_AUX_INFO$ppResponseInfo$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_RETRIEVE_AUX_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ppResponseInfo")));
    static final java.lang.invoke.VarHandle _CRYPT_RETRIEVE_AUX_INFO$ppResponseInfo$VH() { return _CRYPT_RETRIEVE_AUX_INFO$ppResponseInfo$VH_; }

    static final MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$pwszCacheFileNamePrefix$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$pwszCacheFileNamePrefix$LAYOUT() { return _CRYPT_RETRIEVE_AUX_INFO$pwszCacheFileNamePrefix$LAYOUT_; }

    static final VarHandle _CRYPT_RETRIEVE_AUX_INFO$pwszCacheFileNamePrefix$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_RETRIEVE_AUX_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszCacheFileNamePrefix")));
    static final java.lang.invoke.VarHandle _CRYPT_RETRIEVE_AUX_INFO$pwszCacheFileNamePrefix$VH() { return _CRYPT_RETRIEVE_AUX_INFO$pwszCacheFileNamePrefix$VH_; }

    static final MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$pftCacheResync$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$pftCacheResync$LAYOUT() { return _CRYPT_RETRIEVE_AUX_INFO$pftCacheResync$LAYOUT_; }

    static final VarHandle _CRYPT_RETRIEVE_AUX_INFO$pftCacheResync$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_RETRIEVE_AUX_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pftCacheResync")));
    static final java.lang.invoke.VarHandle _CRYPT_RETRIEVE_AUX_INFO$pftCacheResync$VH() { return _CRYPT_RETRIEVE_AUX_INFO$pftCacheResync$VH_; }

    static final MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$fProxyCacheRetrieval$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$fProxyCacheRetrieval$LAYOUT() { return _CRYPT_RETRIEVE_AUX_INFO$fProxyCacheRetrieval$LAYOUT_; }

    static final VarHandle _CRYPT_RETRIEVE_AUX_INFO$fProxyCacheRetrieval$VH_ = _CRYPT_RETRIEVE_AUX_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fProxyCacheRetrieval"));
    static final java.lang.invoke.VarHandle _CRYPT_RETRIEVE_AUX_INFO$fProxyCacheRetrieval$VH() { return _CRYPT_RETRIEVE_AUX_INFO$fProxyCacheRetrieval$VH_; }

    static final MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$dwHttpStatusCode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$dwHttpStatusCode$LAYOUT() { return _CRYPT_RETRIEVE_AUX_INFO$dwHttpStatusCode$LAYOUT_; }

    static final VarHandle _CRYPT_RETRIEVE_AUX_INFO$dwHttpStatusCode$VH_ = _CRYPT_RETRIEVE_AUX_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwHttpStatusCode"));
    static final java.lang.invoke.VarHandle _CRYPT_RETRIEVE_AUX_INFO$dwHttpStatusCode$VH() { return _CRYPT_RETRIEVE_AUX_INFO$dwHttpStatusCode$VH_; }

    static final MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$ppwszErrorResponseHeaders$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$ppwszErrorResponseHeaders$LAYOUT() { return _CRYPT_RETRIEVE_AUX_INFO$ppwszErrorResponseHeaders$LAYOUT_; }

    static final VarHandle _CRYPT_RETRIEVE_AUX_INFO$ppwszErrorResponseHeaders$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_RETRIEVE_AUX_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ppwszErrorResponseHeaders")));
    static final java.lang.invoke.VarHandle _CRYPT_RETRIEVE_AUX_INFO$ppwszErrorResponseHeaders$VH() { return _CRYPT_RETRIEVE_AUX_INFO$ppwszErrorResponseHeaders$VH_; }

    static final MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$ppErrorContentBlob$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_RETRIEVE_AUX_INFO$ppErrorContentBlob$LAYOUT() { return _CRYPT_RETRIEVE_AUX_INFO$ppErrorContentBlob$LAYOUT_; }

    static final VarHandle _CRYPT_RETRIEVE_AUX_INFO$ppErrorContentBlob$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_RETRIEVE_AUX_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ppErrorContentBlob")));
    static final java.lang.invoke.VarHandle _CRYPT_RETRIEVE_AUX_INFO$ppErrorContentBlob$VH() { return _CRYPT_RETRIEVE_AUX_INFO$ppErrorContentBlob$VH_; }

    static final FunctionDescriptor CryptRetrieveObjectByUrlA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptRetrieveObjectByUrlA$FUNC() { return CryptRetrieveObjectByUrlA$FUNC_; }

    static final MethodHandle CryptRetrieveObjectByUrlA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptRetrieveObjectByUrlA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptRetrieveObjectByUrlA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptRetrieveObjectByUrlA$MH() { return CryptRetrieveObjectByUrlA$MH_; }

    static final FunctionDescriptor CryptRetrieveObjectByUrlW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptRetrieveObjectByUrlW$FUNC() { return CryptRetrieveObjectByUrlW$FUNC_; }

    static final MethodHandle CryptRetrieveObjectByUrlW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptRetrieveObjectByUrlW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptRetrieveObjectByUrlW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptRetrieveObjectByUrlW$MH() { return CryptRetrieveObjectByUrlW$MH_; }

    static final FunctionDescriptor CryptInstallCancelRetrieval$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptInstallCancelRetrieval$FUNC() { return CryptInstallCancelRetrieval$FUNC_; }

    static final MethodHandle CryptInstallCancelRetrieval$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptInstallCancelRetrieval",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        CryptInstallCancelRetrieval$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptInstallCancelRetrieval$MH() { return CryptInstallCancelRetrieval$MH_; }

    static final FunctionDescriptor CryptInstallCancelRetrieval$pfnCancel$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptInstallCancelRetrieval$pfnCancel$FUNC() { return CryptInstallCancelRetrieval$pfnCancel$FUNC_; }

    static final FunctionDescriptor CryptUninstallCancelRetrieval$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptUninstallCancelRetrieval$FUNC() { return CryptUninstallCancelRetrieval$FUNC_; }

    static final MethodHandle CryptUninstallCancelRetrieval$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptUninstallCancelRetrieval",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        CryptUninstallCancelRetrieval$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptUninstallCancelRetrieval$MH() { return CryptUninstallCancelRetrieval$MH_; }

    static final FunctionDescriptor CryptCancelAsyncRetrieval$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptCancelAsyncRetrieval$FUNC() { return CryptCancelAsyncRetrieval$FUNC_; }

    static final MethodHandle CryptCancelAsyncRetrieval$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptCancelAsyncRetrieval",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptCancelAsyncRetrieval$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptCancelAsyncRetrieval$MH() { return CryptCancelAsyncRetrieval$MH_; }

    static final MemoryLayout _CRYPT_ASYNC_RETRIEVAL_COMPLETION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pfnCompletion"),
        C_POINTER.withName("pvCompletion")
    ).withName("_CRYPT_ASYNC_RETRIEVAL_COMPLETION");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_ASYNC_RETRIEVAL_COMPLETION$struct$LAYOUT() { return _CRYPT_ASYNC_RETRIEVAL_COMPLETION$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_ASYNC_RETRIEVAL_COMPLETION$pfnCompletion$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_ASYNC_RETRIEVAL_COMPLETION$pfnCompletion$LAYOUT() { return _CRYPT_ASYNC_RETRIEVAL_COMPLETION$pfnCompletion$LAYOUT_; }

    static final VarHandle _CRYPT_ASYNC_RETRIEVAL_COMPLETION$pfnCompletion$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_ASYNC_RETRIEVAL_COMPLETION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pfnCompletion")));
    static final java.lang.invoke.VarHandle _CRYPT_ASYNC_RETRIEVAL_COMPLETION$pfnCompletion$VH() { return _CRYPT_ASYNC_RETRIEVAL_COMPLETION$pfnCompletion$VH_; }

    static final MemoryLayout _CRYPT_ASYNC_RETRIEVAL_COMPLETION$pvCompletion$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_ASYNC_RETRIEVAL_COMPLETION$pvCompletion$LAYOUT() { return _CRYPT_ASYNC_RETRIEVAL_COMPLETION$pvCompletion$LAYOUT_; }

    static final VarHandle _CRYPT_ASYNC_RETRIEVAL_COMPLETION$pvCompletion$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_ASYNC_RETRIEVAL_COMPLETION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvCompletion")));
    static final java.lang.invoke.VarHandle _CRYPT_ASYNC_RETRIEVAL_COMPLETION$pvCompletion$VH() { return _CRYPT_ASYNC_RETRIEVAL_COMPLETION$pvCompletion$VH_; }

    static final MemoryLayout _CRYPT_URL_ARRAY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cUrl"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgwszUrl")
    ).withName("_CRYPT_URL_ARRAY");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_URL_ARRAY$struct$LAYOUT() { return _CRYPT_URL_ARRAY$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_URL_ARRAY$cUrl$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_URL_ARRAY$cUrl$LAYOUT() { return _CRYPT_URL_ARRAY$cUrl$LAYOUT_; }

    static final VarHandle _CRYPT_URL_ARRAY$cUrl$VH_ = _CRYPT_URL_ARRAY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cUrl"));
    static final java.lang.invoke.VarHandle _CRYPT_URL_ARRAY$cUrl$VH() { return _CRYPT_URL_ARRAY$cUrl$VH_; }

    static final MemoryLayout _CRYPT_URL_ARRAY$rgwszUrl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_URL_ARRAY$rgwszUrl$LAYOUT() { return _CRYPT_URL_ARRAY$rgwszUrl$LAYOUT_; }

    static final VarHandle _CRYPT_URL_ARRAY$rgwszUrl$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_URL_ARRAY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgwszUrl")));
    static final java.lang.invoke.VarHandle _CRYPT_URL_ARRAY$rgwszUrl$VH() { return _CRYPT_URL_ARRAY$rgwszUrl$VH_; }

    static final MemoryLayout _CRYPT_URL_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwSyncDeltaTime"),
        C_LONG.withName("cGroup"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgcGroupEntry")
    ).withName("_CRYPT_URL_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_URL_INFO$struct$LAYOUT() { return _CRYPT_URL_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_URL_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_URL_INFO$cbSize$LAYOUT() { return _CRYPT_URL_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CRYPT_URL_INFO$cbSize$VH_ = _CRYPT_URL_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CRYPT_URL_INFO$cbSize$VH() { return _CRYPT_URL_INFO$cbSize$VH_; }

    static final MemoryLayout _CRYPT_URL_INFO$dwSyncDeltaTime$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_URL_INFO$dwSyncDeltaTime$LAYOUT() { return _CRYPT_URL_INFO$dwSyncDeltaTime$LAYOUT_; }

    static final VarHandle _CRYPT_URL_INFO$dwSyncDeltaTime$VH_ = _CRYPT_URL_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSyncDeltaTime"));
    static final java.lang.invoke.VarHandle _CRYPT_URL_INFO$dwSyncDeltaTime$VH() { return _CRYPT_URL_INFO$dwSyncDeltaTime$VH_; }

    static final MemoryLayout _CRYPT_URL_INFO$cGroup$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_URL_INFO$cGroup$LAYOUT() { return _CRYPT_URL_INFO$cGroup$LAYOUT_; }

    static final VarHandle _CRYPT_URL_INFO$cGroup$VH_ = _CRYPT_URL_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cGroup"));
    static final java.lang.invoke.VarHandle _CRYPT_URL_INFO$cGroup$VH() { return _CRYPT_URL_INFO$cGroup$VH_; }

    static final MemoryLayout _CRYPT_URL_INFO$rgcGroupEntry$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_URL_INFO$rgcGroupEntry$LAYOUT() { return _CRYPT_URL_INFO$rgcGroupEntry$LAYOUT_; }

    static final VarHandle _CRYPT_URL_INFO$rgcGroupEntry$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_URL_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgcGroupEntry")));
    static final java.lang.invoke.VarHandle _CRYPT_URL_INFO$rgcGroupEntry$VH() { return _CRYPT_URL_INFO$rgcGroupEntry$VH_; }

    static final FunctionDescriptor CryptGetObjectUrl$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptGetObjectUrl$FUNC() { return CryptGetObjectUrl$FUNC_; }

    static final MethodHandle CryptGetObjectUrl$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptGetObjectUrl",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptGetObjectUrl$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptGetObjectUrl$MH() { return CryptGetObjectUrl$MH_; }

    static final MemoryLayout _CERT_CRL_CONTEXT_PAIR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pCertContext"),
        C_POINTER.withName("pCrlContext")
    ).withName("_CERT_CRL_CONTEXT_PAIR");
    static final jdk.incubator.foreign.MemoryLayout _CERT_CRL_CONTEXT_PAIR$struct$LAYOUT() { return _CERT_CRL_CONTEXT_PAIR$struct$LAYOUT_; }

    static final MemoryLayout _CERT_CRL_CONTEXT_PAIR$pCertContext$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CRL_CONTEXT_PAIR$pCertContext$LAYOUT() { return _CERT_CRL_CONTEXT_PAIR$pCertContext$LAYOUT_; }

    static final VarHandle _CERT_CRL_CONTEXT_PAIR$pCertContext$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CRL_CONTEXT_PAIR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pCertContext")));
    static final java.lang.invoke.VarHandle _CERT_CRL_CONTEXT_PAIR$pCertContext$VH() { return _CERT_CRL_CONTEXT_PAIR$pCertContext$VH_; }

    static final MemoryLayout _CERT_CRL_CONTEXT_PAIR$pCrlContext$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CRL_CONTEXT_PAIR$pCrlContext$LAYOUT() { return _CERT_CRL_CONTEXT_PAIR$pCrlContext$LAYOUT_; }

    static final VarHandle _CERT_CRL_CONTEXT_PAIR$pCrlContext$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CRL_CONTEXT_PAIR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pCrlContext")));
    static final java.lang.invoke.VarHandle _CERT_CRL_CONTEXT_PAIR$pCrlContext$VH() { return _CERT_CRL_CONTEXT_PAIR$pCrlContext$VH_; }

    static final MemoryLayout _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_INT.withName("iDeltaCrlIndicator"),
        C_POINTER.withName("pftCacheResync"),
        C_POINTER.withName("pLastSyncTime"),
        C_POINTER.withName("pMaxAgeTime"),
        C_POINTER.withName("pChainPara"),
        C_POINTER.withName("pDeltaCrlIndicator")
    ).withName("_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$struct$LAYOUT() { return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$cbSize$LAYOUT() { return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$cbSize$VH_ = _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$cbSize$VH() { return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$cbSize$VH_; }

    static final MemoryLayout _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$iDeltaCrlIndicator$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$iDeltaCrlIndicator$LAYOUT() { return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$iDeltaCrlIndicator$LAYOUT_; }

    static final VarHandle _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$iDeltaCrlIndicator$VH_ = _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iDeltaCrlIndicator"));
    static final java.lang.invoke.VarHandle _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$iDeltaCrlIndicator$VH() { return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$iDeltaCrlIndicator$VH_; }

    static final MemoryLayout _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pftCacheResync$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pftCacheResync$LAYOUT() { return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pftCacheResync$LAYOUT_; }

    static final VarHandle _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pftCacheResync$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pftCacheResync")));
    static final java.lang.invoke.VarHandle _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pftCacheResync$VH() { return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pftCacheResync$VH_; }

    static final MemoryLayout _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pLastSyncTime$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pLastSyncTime$LAYOUT() { return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pLastSyncTime$LAYOUT_; }

    static final VarHandle _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pLastSyncTime$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pLastSyncTime")));
    static final java.lang.invoke.VarHandle _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pLastSyncTime$VH() { return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pLastSyncTime$VH_; }

    static final MemoryLayout _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pMaxAgeTime$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pMaxAgeTime$LAYOUT() { return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pMaxAgeTime$LAYOUT_; }

    static final VarHandle _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pMaxAgeTime$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pMaxAgeTime")));
    static final java.lang.invoke.VarHandle _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pMaxAgeTime$VH() { return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pMaxAgeTime$VH_; }

    static final MemoryLayout _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pChainPara$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pChainPara$LAYOUT() { return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pChainPara$LAYOUT_; }

    static final VarHandle _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pChainPara$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pChainPara")));
    static final java.lang.invoke.VarHandle _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pChainPara$VH() { return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pChainPara$VH_; }

    static final MemoryLayout _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pDeltaCrlIndicator$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pDeltaCrlIndicator$LAYOUT() { return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pDeltaCrlIndicator$LAYOUT_; }

    static final VarHandle _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pDeltaCrlIndicator$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDeltaCrlIndicator")));
    static final java.lang.invoke.VarHandle _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pDeltaCrlIndicator$VH() { return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO$pDeltaCrlIndicator$VH_; }

    static final FunctionDescriptor CryptGetTimeValidObject$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptGetTimeValidObject$FUNC() { return CryptGetTimeValidObject$FUNC_; }

    static final MethodHandle CryptGetTimeValidObject$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptGetTimeValidObject",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptGetTimeValidObject$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptGetTimeValidObject$MH() { return CryptGetTimeValidObject$MH_; }

    static final FunctionDescriptor CryptFlushTimeValidObject$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptFlushTimeValidObject$FUNC() { return CryptFlushTimeValidObject$FUNC_; }

    static final MethodHandle CryptFlushTimeValidObject$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptFlushTimeValidObject",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        CryptFlushTimeValidObject$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptFlushTimeValidObject$MH() { return CryptFlushTimeValidObject$MH_; }

    static final FunctionDescriptor CertCreateSelfSignCertificate$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CertCreateSelfSignCertificate$FUNC() { return CertCreateSelfSignCertificate$FUNC_; }

    static final MethodHandle CertCreateSelfSignCertificate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CertCreateSelfSignCertificate",
        "(JLjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CertCreateSelfSignCertificate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CertCreateSelfSignCertificate$MH() { return CertCreateSelfSignCertificate$MH_; }

    static final FunctionDescriptor CryptGetKeyIdentifierProperty$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptGetKeyIdentifierProperty$FUNC() { return CryptGetKeyIdentifierProperty$FUNC_; }

    static final MethodHandle CryptGetKeyIdentifierProperty$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptGetKeyIdentifierProperty",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptGetKeyIdentifierProperty$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptGetKeyIdentifierProperty$MH() { return CryptGetKeyIdentifierProperty$MH_; }

    static final FunctionDescriptor CryptSetKeyIdentifierProperty$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptSetKeyIdentifierProperty$FUNC() { return CryptSetKeyIdentifierProperty$FUNC_; }

    static final MethodHandle CryptSetKeyIdentifierProperty$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptSetKeyIdentifierProperty",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptSetKeyIdentifierProperty$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptSetKeyIdentifierProperty$MH() { return CryptSetKeyIdentifierProperty$MH_; }

    static final FunctionDescriptor CryptEnumKeyIdentifierProperties$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptEnumKeyIdentifierProperties$FUNC() { return CryptEnumKeyIdentifierProperties$FUNC_; }

    static final MethodHandle CryptEnumKeyIdentifierProperties$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptEnumKeyIdentifierProperties",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptEnumKeyIdentifierProperties$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptEnumKeyIdentifierProperties$MH() { return CryptEnumKeyIdentifierProperties$MH_; }

    static final FunctionDescriptor CryptEnumKeyIdentifierProperties$pfnEnum$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptEnumKeyIdentifierProperties$pfnEnum$FUNC() { return CryptEnumKeyIdentifierProperties$pfnEnum$FUNC_; }

    static final FunctionDescriptor CryptCreateKeyIdentifierFromCSP$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptCreateKeyIdentifierFromCSP$FUNC() { return CryptCreateKeyIdentifierFromCSP$FUNC_; }

    static final MethodHandle CryptCreateKeyIdentifierFromCSP$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptCreateKeyIdentifierFromCSP",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptCreateKeyIdentifierFromCSP$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptCreateKeyIdentifierFromCSP$MH() { return CryptCreateKeyIdentifierFromCSP$MH_; }

    static final MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hRestrictedRoot"),
        C_POINTER.withName("hRestrictedTrust"),
        C_POINTER.withName("hRestrictedOther"),
        C_LONG.withName("cAdditionalStore"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rghAdditionalStore"),
        C_LONG.withName("dwFlags"),
        C_LONG.withName("dwUrlRetrievalTimeout"),
        C_LONG.withName("MaximumCachedCertificates"),
        C_LONG.withName("CycleDetectionModulus"),
        C_POINTER.withName("hExclusiveRoot"),
        C_POINTER.withName("hExclusiveTrustedPeople"),
        C_LONG.withName("dwExclusiveFlags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CERT_CHAIN_ENGINE_CONFIG");
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$struct$LAYOUT() { return _CERT_CHAIN_ENGINE_CONFIG$struct$LAYOUT_; }

    static final MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$cbSize$LAYOUT() { return _CERT_CHAIN_ENGINE_CONFIG$cbSize$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_ENGINE_CONFIG$cbSize$VH_ = _CERT_CHAIN_ENGINE_CONFIG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_ENGINE_CONFIG$cbSize$VH() { return _CERT_CHAIN_ENGINE_CONFIG$cbSize$VH_; }

    static final MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$hRestrictedRoot$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$hRestrictedRoot$LAYOUT() { return _CERT_CHAIN_ENGINE_CONFIG$hRestrictedRoot$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_ENGINE_CONFIG$hRestrictedRoot$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CHAIN_ENGINE_CONFIG$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hRestrictedRoot")));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_ENGINE_CONFIG$hRestrictedRoot$VH() { return _CERT_CHAIN_ENGINE_CONFIG$hRestrictedRoot$VH_; }

    static final MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$hRestrictedTrust$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$hRestrictedTrust$LAYOUT() { return _CERT_CHAIN_ENGINE_CONFIG$hRestrictedTrust$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_ENGINE_CONFIG$hRestrictedTrust$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CHAIN_ENGINE_CONFIG$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hRestrictedTrust")));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_ENGINE_CONFIG$hRestrictedTrust$VH() { return _CERT_CHAIN_ENGINE_CONFIG$hRestrictedTrust$VH_; }

    static final MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$hRestrictedOther$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$hRestrictedOther$LAYOUT() { return _CERT_CHAIN_ENGINE_CONFIG$hRestrictedOther$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_ENGINE_CONFIG$hRestrictedOther$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CHAIN_ENGINE_CONFIG$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hRestrictedOther")));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_ENGINE_CONFIG$hRestrictedOther$VH() { return _CERT_CHAIN_ENGINE_CONFIG$hRestrictedOther$VH_; }

    static final MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$cAdditionalStore$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$cAdditionalStore$LAYOUT() { return _CERT_CHAIN_ENGINE_CONFIG$cAdditionalStore$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_ENGINE_CONFIG$cAdditionalStore$VH_ = _CERT_CHAIN_ENGINE_CONFIG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cAdditionalStore"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_ENGINE_CONFIG$cAdditionalStore$VH() { return _CERT_CHAIN_ENGINE_CONFIG$cAdditionalStore$VH_; }

    static final MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$rghAdditionalStore$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$rghAdditionalStore$LAYOUT() { return _CERT_CHAIN_ENGINE_CONFIG$rghAdditionalStore$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_ENGINE_CONFIG$rghAdditionalStore$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CHAIN_ENGINE_CONFIG$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rghAdditionalStore")));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_ENGINE_CONFIG$rghAdditionalStore$VH() { return _CERT_CHAIN_ENGINE_CONFIG$rghAdditionalStore$VH_; }

    static final MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$dwFlags$LAYOUT() { return _CERT_CHAIN_ENGINE_CONFIG$dwFlags$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_ENGINE_CONFIG$dwFlags$VH_ = _CERT_CHAIN_ENGINE_CONFIG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_ENGINE_CONFIG$dwFlags$VH() { return _CERT_CHAIN_ENGINE_CONFIG$dwFlags$VH_; }

    static final MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$dwUrlRetrievalTimeout$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$dwUrlRetrievalTimeout$LAYOUT() { return _CERT_CHAIN_ENGINE_CONFIG$dwUrlRetrievalTimeout$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_ENGINE_CONFIG$dwUrlRetrievalTimeout$VH_ = _CERT_CHAIN_ENGINE_CONFIG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwUrlRetrievalTimeout"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_ENGINE_CONFIG$dwUrlRetrievalTimeout$VH() { return _CERT_CHAIN_ENGINE_CONFIG$dwUrlRetrievalTimeout$VH_; }

    static final MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$MaximumCachedCertificates$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$MaximumCachedCertificates$LAYOUT() { return _CERT_CHAIN_ENGINE_CONFIG$MaximumCachedCertificates$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_ENGINE_CONFIG$MaximumCachedCertificates$VH_ = _CERT_CHAIN_ENGINE_CONFIG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaximumCachedCertificates"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_ENGINE_CONFIG$MaximumCachedCertificates$VH() { return _CERT_CHAIN_ENGINE_CONFIG$MaximumCachedCertificates$VH_; }

    static final MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$CycleDetectionModulus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$CycleDetectionModulus$LAYOUT() { return _CERT_CHAIN_ENGINE_CONFIG$CycleDetectionModulus$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_ENGINE_CONFIG$CycleDetectionModulus$VH_ = _CERT_CHAIN_ENGINE_CONFIG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CycleDetectionModulus"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_ENGINE_CONFIG$CycleDetectionModulus$VH() { return _CERT_CHAIN_ENGINE_CONFIG$CycleDetectionModulus$VH_; }

    static final MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$hExclusiveRoot$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$hExclusiveRoot$LAYOUT() { return _CERT_CHAIN_ENGINE_CONFIG$hExclusiveRoot$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_ENGINE_CONFIG$hExclusiveRoot$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CHAIN_ENGINE_CONFIG$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hExclusiveRoot")));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_ENGINE_CONFIG$hExclusiveRoot$VH() { return _CERT_CHAIN_ENGINE_CONFIG$hExclusiveRoot$VH_; }

    static final MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$hExclusiveTrustedPeople$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$hExclusiveTrustedPeople$LAYOUT() { return _CERT_CHAIN_ENGINE_CONFIG$hExclusiveTrustedPeople$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_ENGINE_CONFIG$hExclusiveTrustedPeople$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CHAIN_ENGINE_CONFIG$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hExclusiveTrustedPeople")));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_ENGINE_CONFIG$hExclusiveTrustedPeople$VH() { return _CERT_CHAIN_ENGINE_CONFIG$hExclusiveTrustedPeople$VH_; }

    static final MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$dwExclusiveFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ENGINE_CONFIG$dwExclusiveFlags$LAYOUT() { return _CERT_CHAIN_ENGINE_CONFIG$dwExclusiveFlags$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_ENGINE_CONFIG$dwExclusiveFlags$VH_ = _CERT_CHAIN_ENGINE_CONFIG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwExclusiveFlags"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_ENGINE_CONFIG$dwExclusiveFlags$VH() { return _CERT_CHAIN_ENGINE_CONFIG$dwExclusiveFlags$VH_; }

    static final FunctionDescriptor CertCreateCertificateChainEngine$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CertCreateCertificateChainEngine$FUNC() { return CertCreateCertificateChainEngine$FUNC_; }

    static final MethodHandle CertCreateCertificateChainEngine$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CertCreateCertificateChainEngine",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CertCreateCertificateChainEngine$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CertCreateCertificateChainEngine$MH() { return CertCreateCertificateChainEngine$MH_; }

    static final FunctionDescriptor CertFreeCertificateChainEngine$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CertFreeCertificateChainEngine$FUNC() { return CertFreeCertificateChainEngine$FUNC_; }

    static final MethodHandle CertFreeCertificateChainEngine$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CertFreeCertificateChainEngine",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        CertFreeCertificateChainEngine$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CertFreeCertificateChainEngine$MH() { return CertFreeCertificateChainEngine$MH_; }

    static final FunctionDescriptor CertResyncCertificateChainEngine$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CertResyncCertificateChainEngine$FUNC() { return CertResyncCertificateChainEngine$FUNC_; }

    static final MethodHandle CertResyncCertificateChainEngine$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CertResyncCertificateChainEngine",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        CertResyncCertificateChainEngine$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CertResyncCertificateChainEngine$MH() { return CertResyncCertificateChainEngine$MH_; }

    static final MemoryLayout _CERT_TRUST_STATUS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwErrorStatus"),
        C_LONG.withName("dwInfoStatus")
    ).withName("_CERT_TRUST_STATUS");
    static final jdk.incubator.foreign.MemoryLayout _CERT_TRUST_STATUS$struct$LAYOUT() { return _CERT_TRUST_STATUS$struct$LAYOUT_; }

    static final MemoryLayout _CERT_TRUST_STATUS$dwErrorStatus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_TRUST_STATUS$dwErrorStatus$LAYOUT() { return _CERT_TRUST_STATUS$dwErrorStatus$LAYOUT_; }

    static final VarHandle _CERT_TRUST_STATUS$dwErrorStatus$VH_ = _CERT_TRUST_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwErrorStatus"));
    static final java.lang.invoke.VarHandle _CERT_TRUST_STATUS$dwErrorStatus$VH() { return _CERT_TRUST_STATUS$dwErrorStatus$VH_; }

    static final MemoryLayout _CERT_TRUST_STATUS$dwInfoStatus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_TRUST_STATUS$dwInfoStatus$LAYOUT() { return _CERT_TRUST_STATUS$dwInfoStatus$LAYOUT_; }

    static final VarHandle _CERT_TRUST_STATUS$dwInfoStatus$VH_ = _CERT_TRUST_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwInfoStatus"));
    static final java.lang.invoke.VarHandle _CERT_TRUST_STATUS$dwInfoStatus$VH() { return _CERT_TRUST_STATUS$dwInfoStatus$VH_; }

    static final MemoryLayout _CERT_REVOCATION_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwRevocationResult"),
        C_POINTER.withName("pszRevocationOid"),
        C_POINTER.withName("pvOidSpecificInfo"),
        C_INT.withName("fHasFreshnessTime"),
        C_LONG.withName("dwFreshnessTime"),
        C_POINTER.withName("pCrlInfo")
    ).withName("_CERT_REVOCATION_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CERT_REVOCATION_INFO$struct$LAYOUT() { return _CERT_REVOCATION_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CERT_REVOCATION_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_REVOCATION_INFO$cbSize$LAYOUT() { return _CERT_REVOCATION_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CERT_REVOCATION_INFO$cbSize$VH_ = _CERT_REVOCATION_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CERT_REVOCATION_INFO$cbSize$VH() { return _CERT_REVOCATION_INFO$cbSize$VH_; }

    static final MemoryLayout _CERT_REVOCATION_INFO$dwRevocationResult$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_REVOCATION_INFO$dwRevocationResult$LAYOUT() { return _CERT_REVOCATION_INFO$dwRevocationResult$LAYOUT_; }

    static final VarHandle _CERT_REVOCATION_INFO$dwRevocationResult$VH_ = _CERT_REVOCATION_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRevocationResult"));
    static final java.lang.invoke.VarHandle _CERT_REVOCATION_INFO$dwRevocationResult$VH() { return _CERT_REVOCATION_INFO$dwRevocationResult$VH_; }

    static final MemoryLayout _CERT_REVOCATION_INFO$pszRevocationOid$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_REVOCATION_INFO$pszRevocationOid$LAYOUT() { return _CERT_REVOCATION_INFO$pszRevocationOid$LAYOUT_; }

    static final VarHandle _CERT_REVOCATION_INFO$pszRevocationOid$VH_ = MemoryHandles.asAddressVarHandle(_CERT_REVOCATION_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszRevocationOid")));
    static final java.lang.invoke.VarHandle _CERT_REVOCATION_INFO$pszRevocationOid$VH() { return _CERT_REVOCATION_INFO$pszRevocationOid$VH_; }

    static final MemoryLayout _CERT_REVOCATION_INFO$pvOidSpecificInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_REVOCATION_INFO$pvOidSpecificInfo$LAYOUT() { return _CERT_REVOCATION_INFO$pvOidSpecificInfo$LAYOUT_; }

    static final VarHandle _CERT_REVOCATION_INFO$pvOidSpecificInfo$VH_ = MemoryHandles.asAddressVarHandle(_CERT_REVOCATION_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvOidSpecificInfo")));
    static final java.lang.invoke.VarHandle _CERT_REVOCATION_INFO$pvOidSpecificInfo$VH() { return _CERT_REVOCATION_INFO$pvOidSpecificInfo$VH_; }

    static final MemoryLayout _CERT_REVOCATION_INFO$fHasFreshnessTime$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _CERT_REVOCATION_INFO$fHasFreshnessTime$LAYOUT() { return _CERT_REVOCATION_INFO$fHasFreshnessTime$LAYOUT_; }

    static final VarHandle _CERT_REVOCATION_INFO$fHasFreshnessTime$VH_ = _CERT_REVOCATION_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fHasFreshnessTime"));
    static final java.lang.invoke.VarHandle _CERT_REVOCATION_INFO$fHasFreshnessTime$VH() { return _CERT_REVOCATION_INFO$fHasFreshnessTime$VH_; }

    static final MemoryLayout _CERT_REVOCATION_INFO$dwFreshnessTime$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_REVOCATION_INFO$dwFreshnessTime$LAYOUT() { return _CERT_REVOCATION_INFO$dwFreshnessTime$LAYOUT_; }

    static final VarHandle _CERT_REVOCATION_INFO$dwFreshnessTime$VH_ = _CERT_REVOCATION_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFreshnessTime"));
    static final java.lang.invoke.VarHandle _CERT_REVOCATION_INFO$dwFreshnessTime$VH() { return _CERT_REVOCATION_INFO$dwFreshnessTime$VH_; }

    static final MemoryLayout _CERT_REVOCATION_INFO$pCrlInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_REVOCATION_INFO$pCrlInfo$LAYOUT() { return _CERT_REVOCATION_INFO$pCrlInfo$LAYOUT_; }

    static final VarHandle _CERT_REVOCATION_INFO$pCrlInfo$VH_ = MemoryHandles.asAddressVarHandle(_CERT_REVOCATION_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pCrlInfo")));
    static final java.lang.invoke.VarHandle _CERT_REVOCATION_INFO$pCrlInfo$VH() { return _CERT_REVOCATION_INFO$pCrlInfo$VH_; }

    static final MemoryLayout _CERT_TRUST_LIST_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pCtlEntry"),
        C_POINTER.withName("pCtlContext")
    ).withName("_CERT_TRUST_LIST_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CERT_TRUST_LIST_INFO$struct$LAYOUT() { return _CERT_TRUST_LIST_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CERT_TRUST_LIST_INFO$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_TRUST_LIST_INFO$cbSize$LAYOUT() { return _CERT_TRUST_LIST_INFO$cbSize$LAYOUT_; }

    static final VarHandle _CERT_TRUST_LIST_INFO$cbSize$VH_ = _CERT_TRUST_LIST_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CERT_TRUST_LIST_INFO$cbSize$VH() { return _CERT_TRUST_LIST_INFO$cbSize$VH_; }

    static final MemoryLayout _CERT_TRUST_LIST_INFO$pCtlEntry$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_TRUST_LIST_INFO$pCtlEntry$LAYOUT() { return _CERT_TRUST_LIST_INFO$pCtlEntry$LAYOUT_; }

    static final VarHandle _CERT_TRUST_LIST_INFO$pCtlEntry$VH_ = MemoryHandles.asAddressVarHandle(_CERT_TRUST_LIST_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pCtlEntry")));
    static final java.lang.invoke.VarHandle _CERT_TRUST_LIST_INFO$pCtlEntry$VH() { return _CERT_TRUST_LIST_INFO$pCtlEntry$VH_; }

    static final MemoryLayout _CERT_TRUST_LIST_INFO$pCtlContext$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_TRUST_LIST_INFO$pCtlContext$LAYOUT() { return _CERT_TRUST_LIST_INFO$pCtlContext$LAYOUT_; }

    static final VarHandle _CERT_TRUST_LIST_INFO$pCtlContext$VH_ = MemoryHandles.asAddressVarHandle(_CERT_TRUST_LIST_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pCtlContext")));
    static final java.lang.invoke.VarHandle _CERT_TRUST_LIST_INFO$pCtlContext$VH() { return _CERT_TRUST_LIST_INFO$pCtlContext$VH_; }

    static final MemoryLayout _CERT_CHAIN_ELEMENT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pCertContext"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwErrorStatus"),
            C_LONG.withName("dwInfoStatus")
        ).withName("TrustStatus"),
        C_POINTER.withName("pRevocationInfo"),
        C_POINTER.withName("pIssuanceUsage"),
        C_POINTER.withName("pApplicationUsage"),
        C_POINTER.withName("pwszExtendedErrorInfo")
    ).withName("_CERT_CHAIN_ELEMENT");
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ELEMENT$struct$LAYOUT() { return _CERT_CHAIN_ELEMENT$struct$LAYOUT_; }

    static final MemoryLayout _CERT_CHAIN_ELEMENT$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ELEMENT$cbSize$LAYOUT() { return _CERT_CHAIN_ELEMENT$cbSize$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_ELEMENT$cbSize$VH_ = _CERT_CHAIN_ELEMENT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_ELEMENT$cbSize$VH() { return _CERT_CHAIN_ELEMENT$cbSize$VH_; }

    static final MemoryLayout _CERT_CHAIN_ELEMENT$pCertContext$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ELEMENT$pCertContext$LAYOUT() { return _CERT_CHAIN_ELEMENT$pCertContext$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_ELEMENT$pCertContext$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CHAIN_ELEMENT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pCertContext")));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_ELEMENT$pCertContext$VH() { return _CERT_CHAIN_ELEMENT$pCertContext$VH_; }

    static final MemoryLayout _CERT_CHAIN_ELEMENT$pRevocationInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ELEMENT$pRevocationInfo$LAYOUT() { return _CERT_CHAIN_ELEMENT$pRevocationInfo$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_ELEMENT$pRevocationInfo$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CHAIN_ELEMENT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pRevocationInfo")));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_ELEMENT$pRevocationInfo$VH() { return _CERT_CHAIN_ELEMENT$pRevocationInfo$VH_; }

    static final MemoryLayout _CERT_CHAIN_ELEMENT$pIssuanceUsage$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ELEMENT$pIssuanceUsage$LAYOUT() { return _CERT_CHAIN_ELEMENT$pIssuanceUsage$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_ELEMENT$pIssuanceUsage$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CHAIN_ELEMENT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pIssuanceUsage")));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_ELEMENT$pIssuanceUsage$VH() { return _CERT_CHAIN_ELEMENT$pIssuanceUsage$VH_; }

    static final MemoryLayout _CERT_CHAIN_ELEMENT$pApplicationUsage$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ELEMENT$pApplicationUsage$LAYOUT() { return _CERT_CHAIN_ELEMENT$pApplicationUsage$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_ELEMENT$pApplicationUsage$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CHAIN_ELEMENT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pApplicationUsage")));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_ELEMENT$pApplicationUsage$VH() { return _CERT_CHAIN_ELEMENT$pApplicationUsage$VH_; }

    static final MemoryLayout _CERT_CHAIN_ELEMENT$pwszExtendedErrorInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_ELEMENT$pwszExtendedErrorInfo$LAYOUT() { return _CERT_CHAIN_ELEMENT$pwszExtendedErrorInfo$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_ELEMENT$pwszExtendedErrorInfo$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CHAIN_ELEMENT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszExtendedErrorInfo")));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_ELEMENT$pwszExtendedErrorInfo$VH() { return _CERT_CHAIN_ELEMENT$pwszExtendedErrorInfo$VH_; }

    static final MemoryLayout _CERT_SIMPLE_CHAIN$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwErrorStatus"),
            C_LONG.withName("dwInfoStatus")
        ).withName("TrustStatus"),
        C_LONG.withName("cElement"),
        C_POINTER.withName("rgpElement"),
        C_POINTER.withName("pTrustListInfo"),
        C_INT.withName("fHasRevocationFreshnessTime"),
        C_LONG.withName("dwRevocationFreshnessTime")
    ).withName("_CERT_SIMPLE_CHAIN");
    static final jdk.incubator.foreign.MemoryLayout _CERT_SIMPLE_CHAIN$struct$LAYOUT() { return _CERT_SIMPLE_CHAIN$struct$LAYOUT_; }

    static final MemoryLayout _CERT_SIMPLE_CHAIN$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SIMPLE_CHAIN$cbSize$LAYOUT() { return _CERT_SIMPLE_CHAIN$cbSize$LAYOUT_; }

    static final VarHandle _CERT_SIMPLE_CHAIN$cbSize$VH_ = _CERT_SIMPLE_CHAIN$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CERT_SIMPLE_CHAIN$cbSize$VH() { return _CERT_SIMPLE_CHAIN$cbSize$VH_; }

    static final MemoryLayout _CERT_SIMPLE_CHAIN$cElement$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SIMPLE_CHAIN$cElement$LAYOUT() { return _CERT_SIMPLE_CHAIN$cElement$LAYOUT_; }

    static final VarHandle _CERT_SIMPLE_CHAIN$cElement$VH_ = _CERT_SIMPLE_CHAIN$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElement"));
    static final java.lang.invoke.VarHandle _CERT_SIMPLE_CHAIN$cElement$VH() { return _CERT_SIMPLE_CHAIN$cElement$VH_; }

    static final MemoryLayout _CERT_SIMPLE_CHAIN$rgpElement$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SIMPLE_CHAIN$rgpElement$LAYOUT() { return _CERT_SIMPLE_CHAIN$rgpElement$LAYOUT_; }

    static final VarHandle _CERT_SIMPLE_CHAIN$rgpElement$VH_ = MemoryHandles.asAddressVarHandle(_CERT_SIMPLE_CHAIN$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgpElement")));
    static final java.lang.invoke.VarHandle _CERT_SIMPLE_CHAIN$rgpElement$VH() { return _CERT_SIMPLE_CHAIN$rgpElement$VH_; }

    static final MemoryLayout _CERT_SIMPLE_CHAIN$pTrustListInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SIMPLE_CHAIN$pTrustListInfo$LAYOUT() { return _CERT_SIMPLE_CHAIN$pTrustListInfo$LAYOUT_; }

    static final VarHandle _CERT_SIMPLE_CHAIN$pTrustListInfo$VH_ = MemoryHandles.asAddressVarHandle(_CERT_SIMPLE_CHAIN$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pTrustListInfo")));
    static final java.lang.invoke.VarHandle _CERT_SIMPLE_CHAIN$pTrustListInfo$VH() { return _CERT_SIMPLE_CHAIN$pTrustListInfo$VH_; }

    static final MemoryLayout _CERT_SIMPLE_CHAIN$fHasRevocationFreshnessTime$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SIMPLE_CHAIN$fHasRevocationFreshnessTime$LAYOUT() { return _CERT_SIMPLE_CHAIN$fHasRevocationFreshnessTime$LAYOUT_; }

    static final VarHandle _CERT_SIMPLE_CHAIN$fHasRevocationFreshnessTime$VH_ = _CERT_SIMPLE_CHAIN$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fHasRevocationFreshnessTime"));
    static final java.lang.invoke.VarHandle _CERT_SIMPLE_CHAIN$fHasRevocationFreshnessTime$VH() { return _CERT_SIMPLE_CHAIN$fHasRevocationFreshnessTime$VH_; }

    static final MemoryLayout _CERT_SIMPLE_CHAIN$dwRevocationFreshnessTime$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SIMPLE_CHAIN$dwRevocationFreshnessTime$LAYOUT() { return _CERT_SIMPLE_CHAIN$dwRevocationFreshnessTime$LAYOUT_; }

    static final VarHandle _CERT_SIMPLE_CHAIN$dwRevocationFreshnessTime$VH_ = _CERT_SIMPLE_CHAIN$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRevocationFreshnessTime"));
    static final java.lang.invoke.VarHandle _CERT_SIMPLE_CHAIN$dwRevocationFreshnessTime$VH() { return _CERT_SIMPLE_CHAIN$dwRevocationFreshnessTime$VH_; }

    static final MemoryLayout _CERT_CHAIN_CONTEXT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwErrorStatus"),
            C_LONG.withName("dwInfoStatus")
        ).withName("TrustStatus"),
        C_LONG.withName("cChain"),
        C_POINTER.withName("rgpChain"),
        C_LONG.withName("cLowerQualityChainContext"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgpLowerQualityChainContext"),
        C_INT.withName("fHasRevocationFreshnessTime"),
        C_LONG.withName("dwRevocationFreshnessTime"),
        C_LONG.withName("dwCreateFlags"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ChainId"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CERT_CHAIN_CONTEXT");
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_CONTEXT$struct$LAYOUT() { return _CERT_CHAIN_CONTEXT$struct$LAYOUT_; }

    static final MemoryLayout _CERT_CHAIN_CONTEXT$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_CONTEXT$cbSize$LAYOUT() { return _CERT_CHAIN_CONTEXT$cbSize$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_CONTEXT$cbSize$VH_ = _CERT_CHAIN_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_CONTEXT$cbSize$VH() { return _CERT_CHAIN_CONTEXT$cbSize$VH_; }

    static final MemoryLayout _CERT_CHAIN_CONTEXT$cChain$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_CONTEXT$cChain$LAYOUT() { return _CERT_CHAIN_CONTEXT$cChain$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_CONTEXT$cChain$VH_ = _CERT_CHAIN_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cChain"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_CONTEXT$cChain$VH() { return _CERT_CHAIN_CONTEXT$cChain$VH_; }

    static final MemoryLayout _CERT_CHAIN_CONTEXT$rgpChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_CONTEXT$rgpChain$LAYOUT() { return _CERT_CHAIN_CONTEXT$rgpChain$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_CONTEXT$rgpChain$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CHAIN_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgpChain")));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_CONTEXT$rgpChain$VH() { return _CERT_CHAIN_CONTEXT$rgpChain$VH_; }

    static final MemoryLayout _CERT_CHAIN_CONTEXT$cLowerQualityChainContext$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_CONTEXT$cLowerQualityChainContext$LAYOUT() { return _CERT_CHAIN_CONTEXT$cLowerQualityChainContext$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_CONTEXT$cLowerQualityChainContext$VH_ = _CERT_CHAIN_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cLowerQualityChainContext"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_CONTEXT$cLowerQualityChainContext$VH() { return _CERT_CHAIN_CONTEXT$cLowerQualityChainContext$VH_; }

    static final MemoryLayout _CERT_CHAIN_CONTEXT$rgpLowerQualityChainContext$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_CONTEXT$rgpLowerQualityChainContext$LAYOUT() { return _CERT_CHAIN_CONTEXT$rgpLowerQualityChainContext$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_CONTEXT$rgpLowerQualityChainContext$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CHAIN_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgpLowerQualityChainContext")));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_CONTEXT$rgpLowerQualityChainContext$VH() { return _CERT_CHAIN_CONTEXT$rgpLowerQualityChainContext$VH_; }

    static final MemoryLayout _CERT_CHAIN_CONTEXT$fHasRevocationFreshnessTime$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_CONTEXT$fHasRevocationFreshnessTime$LAYOUT() { return _CERT_CHAIN_CONTEXT$fHasRevocationFreshnessTime$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_CONTEXT$fHasRevocationFreshnessTime$VH_ = _CERT_CHAIN_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fHasRevocationFreshnessTime"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_CONTEXT$fHasRevocationFreshnessTime$VH() { return _CERT_CHAIN_CONTEXT$fHasRevocationFreshnessTime$VH_; }

    static final MemoryLayout _CERT_CHAIN_CONTEXT$dwRevocationFreshnessTime$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_CONTEXT$dwRevocationFreshnessTime$LAYOUT() { return _CERT_CHAIN_CONTEXT$dwRevocationFreshnessTime$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_CONTEXT$dwRevocationFreshnessTime$VH_ = _CERT_CHAIN_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRevocationFreshnessTime"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_CONTEXT$dwRevocationFreshnessTime$VH() { return _CERT_CHAIN_CONTEXT$dwRevocationFreshnessTime$VH_; }

    static final MemoryLayout _CERT_CHAIN_CONTEXT$dwCreateFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_CONTEXT$dwCreateFlags$LAYOUT() { return _CERT_CHAIN_CONTEXT$dwCreateFlags$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_CONTEXT$dwCreateFlags$VH_ = _CERT_CHAIN_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCreateFlags"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_CONTEXT$dwCreateFlags$VH() { return _CERT_CHAIN_CONTEXT$dwCreateFlags$VH_; }

    static final MemoryLayout _CERT_USAGE_MATCH$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwType"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_LONG.withName("cUsageIdentifier"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("rgpszUsageIdentifier")
        ).withName("Usage")
    ).withName("_CERT_USAGE_MATCH");
    static final jdk.incubator.foreign.MemoryLayout _CERT_USAGE_MATCH$struct$LAYOUT() { return _CERT_USAGE_MATCH$struct$LAYOUT_; }

    static final MemoryLayout _CERT_USAGE_MATCH$dwType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_USAGE_MATCH$dwType$LAYOUT() { return _CERT_USAGE_MATCH$dwType$LAYOUT_; }

    static final VarHandle _CERT_USAGE_MATCH$dwType$VH_ = _CERT_USAGE_MATCH$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwType"));
    static final java.lang.invoke.VarHandle _CERT_USAGE_MATCH$dwType$VH() { return _CERT_USAGE_MATCH$dwType$VH_; }

    static final MemoryLayout _CTL_USAGE_MATCH$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwType"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_LONG.withName("cUsageIdentifier"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("rgpszUsageIdentifier")
        ).withName("Usage")
    ).withName("_CTL_USAGE_MATCH");
    static final jdk.incubator.foreign.MemoryLayout _CTL_USAGE_MATCH$struct$LAYOUT() { return _CTL_USAGE_MATCH$struct$LAYOUT_; }

    static final MemoryLayout _CTL_USAGE_MATCH$dwType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CTL_USAGE_MATCH$dwType$LAYOUT() { return _CTL_USAGE_MATCH$dwType$LAYOUT_; }

    static final VarHandle _CTL_USAGE_MATCH$dwType$VH_ = _CTL_USAGE_MATCH$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwType"));
    static final java.lang.invoke.VarHandle _CTL_USAGE_MATCH$dwType$VH() { return _CTL_USAGE_MATCH$dwType$VH_; }

    static final MemoryLayout _CERT_CHAIN_PARA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwType"),
            MemoryLayout.ofPaddingBits(32),
            MemoryLayout.ofStruct(
                C_LONG.withName("cUsageIdentifier"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("rgpszUsageIdentifier")
            ).withName("Usage")
        ).withName("RequestedUsage")
    ).withName("_CERT_CHAIN_PARA");
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_PARA$struct$LAYOUT() { return _CERT_CHAIN_PARA$struct$LAYOUT_; }

    static final MemoryLayout _CERT_CHAIN_PARA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_PARA$cbSize$LAYOUT() { return _CERT_CHAIN_PARA$cbSize$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_PARA$cbSize$VH_ = _CERT_CHAIN_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_PARA$cbSize$VH() { return _CERT_CHAIN_PARA$cbSize$VH_; }

    static final FunctionDescriptor CertGetCertificateChain$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CertGetCertificateChain$FUNC() { return CertGetCertificateChain$FUNC_; }

    static final MethodHandle CertGetCertificateChain$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CertGetCertificateChain",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CertGetCertificateChain$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CertGetCertificateChain$MH() { return CertGetCertificateChain$MH_; }

    static final FunctionDescriptor CertFreeCertificateChain$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CertFreeCertificateChain$FUNC() { return CertFreeCertificateChain$FUNC_; }

    static final MethodHandle CertFreeCertificateChain$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CertFreeCertificateChain",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        CertFreeCertificateChain$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CertFreeCertificateChain$MH() { return CertFreeCertificateChain$MH_; }

    static final FunctionDescriptor CertDuplicateCertificateChain$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CertDuplicateCertificateChain$FUNC() { return CertDuplicateCertificateChain$FUNC_; }

    static final MethodHandle CertDuplicateCertificateChain$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CertDuplicateCertificateChain",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CertDuplicateCertificateChain$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CertDuplicateCertificateChain$MH() { return CertDuplicateCertificateChain$MH_; }

    static final MemoryLayout _CERT_REVOCATION_CHAIN_PARA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hChainEngine"),
        C_POINTER.withName("hAdditionalStore"),
        C_LONG.withName("dwChainFlags"),
        C_LONG.withName("dwUrlRetrievalTimeout"),
        C_POINTER.withName("pftCurrentTime"),
        C_POINTER.withName("pftCacheResync"),
        C_LONG.withName("cbMaxUrlRetrievalByteCount"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CERT_REVOCATION_CHAIN_PARA");
    static final jdk.incubator.foreign.MemoryLayout _CERT_REVOCATION_CHAIN_PARA$struct$LAYOUT() { return _CERT_REVOCATION_CHAIN_PARA$struct$LAYOUT_; }

    static final MemoryLayout _CERT_REVOCATION_CHAIN_PARA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_REVOCATION_CHAIN_PARA$cbSize$LAYOUT() { return _CERT_REVOCATION_CHAIN_PARA$cbSize$LAYOUT_; }

    static final VarHandle _CERT_REVOCATION_CHAIN_PARA$cbSize$VH_ = _CERT_REVOCATION_CHAIN_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CERT_REVOCATION_CHAIN_PARA$cbSize$VH() { return _CERT_REVOCATION_CHAIN_PARA$cbSize$VH_; }

    static final MemoryLayout _CERT_REVOCATION_CHAIN_PARA$hChainEngine$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_REVOCATION_CHAIN_PARA$hChainEngine$LAYOUT() { return _CERT_REVOCATION_CHAIN_PARA$hChainEngine$LAYOUT_; }

    static final VarHandle _CERT_REVOCATION_CHAIN_PARA$hChainEngine$VH_ = MemoryHandles.asAddressVarHandle(_CERT_REVOCATION_CHAIN_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hChainEngine")));
    static final java.lang.invoke.VarHandle _CERT_REVOCATION_CHAIN_PARA$hChainEngine$VH() { return _CERT_REVOCATION_CHAIN_PARA$hChainEngine$VH_; }

    static final MemoryLayout _CERT_REVOCATION_CHAIN_PARA$hAdditionalStore$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_REVOCATION_CHAIN_PARA$hAdditionalStore$LAYOUT() { return _CERT_REVOCATION_CHAIN_PARA$hAdditionalStore$LAYOUT_; }

    static final VarHandle _CERT_REVOCATION_CHAIN_PARA$hAdditionalStore$VH_ = MemoryHandles.asAddressVarHandle(_CERT_REVOCATION_CHAIN_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hAdditionalStore")));
    static final java.lang.invoke.VarHandle _CERT_REVOCATION_CHAIN_PARA$hAdditionalStore$VH() { return _CERT_REVOCATION_CHAIN_PARA$hAdditionalStore$VH_; }

    static final MemoryLayout _CERT_REVOCATION_CHAIN_PARA$dwChainFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_REVOCATION_CHAIN_PARA$dwChainFlags$LAYOUT() { return _CERT_REVOCATION_CHAIN_PARA$dwChainFlags$LAYOUT_; }

    static final VarHandle _CERT_REVOCATION_CHAIN_PARA$dwChainFlags$VH_ = _CERT_REVOCATION_CHAIN_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwChainFlags"));
    static final java.lang.invoke.VarHandle _CERT_REVOCATION_CHAIN_PARA$dwChainFlags$VH() { return _CERT_REVOCATION_CHAIN_PARA$dwChainFlags$VH_; }

    static final MemoryLayout _CERT_REVOCATION_CHAIN_PARA$dwUrlRetrievalTimeout$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_REVOCATION_CHAIN_PARA$dwUrlRetrievalTimeout$LAYOUT() { return _CERT_REVOCATION_CHAIN_PARA$dwUrlRetrievalTimeout$LAYOUT_; }

    static final VarHandle _CERT_REVOCATION_CHAIN_PARA$dwUrlRetrievalTimeout$VH_ = _CERT_REVOCATION_CHAIN_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwUrlRetrievalTimeout"));
    static final java.lang.invoke.VarHandle _CERT_REVOCATION_CHAIN_PARA$dwUrlRetrievalTimeout$VH() { return _CERT_REVOCATION_CHAIN_PARA$dwUrlRetrievalTimeout$VH_; }

    static final MemoryLayout _CERT_REVOCATION_CHAIN_PARA$pftCurrentTime$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_REVOCATION_CHAIN_PARA$pftCurrentTime$LAYOUT() { return _CERT_REVOCATION_CHAIN_PARA$pftCurrentTime$LAYOUT_; }

    static final VarHandle _CERT_REVOCATION_CHAIN_PARA$pftCurrentTime$VH_ = MemoryHandles.asAddressVarHandle(_CERT_REVOCATION_CHAIN_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pftCurrentTime")));
    static final java.lang.invoke.VarHandle _CERT_REVOCATION_CHAIN_PARA$pftCurrentTime$VH() { return _CERT_REVOCATION_CHAIN_PARA$pftCurrentTime$VH_; }

    static final MemoryLayout _CERT_REVOCATION_CHAIN_PARA$pftCacheResync$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_REVOCATION_CHAIN_PARA$pftCacheResync$LAYOUT() { return _CERT_REVOCATION_CHAIN_PARA$pftCacheResync$LAYOUT_; }

    static final VarHandle _CERT_REVOCATION_CHAIN_PARA$pftCacheResync$VH_ = MemoryHandles.asAddressVarHandle(_CERT_REVOCATION_CHAIN_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pftCacheResync")));
    static final java.lang.invoke.VarHandle _CERT_REVOCATION_CHAIN_PARA$pftCacheResync$VH() { return _CERT_REVOCATION_CHAIN_PARA$pftCacheResync$VH_; }

    static final MemoryLayout _CERT_REVOCATION_CHAIN_PARA$cbMaxUrlRetrievalByteCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_REVOCATION_CHAIN_PARA$cbMaxUrlRetrievalByteCount$LAYOUT() { return _CERT_REVOCATION_CHAIN_PARA$cbMaxUrlRetrievalByteCount$LAYOUT_; }

    static final VarHandle _CERT_REVOCATION_CHAIN_PARA$cbMaxUrlRetrievalByteCount$VH_ = _CERT_REVOCATION_CHAIN_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbMaxUrlRetrievalByteCount"));
    static final java.lang.invoke.VarHandle _CERT_REVOCATION_CHAIN_PARA$cbMaxUrlRetrievalByteCount$VH() { return _CERT_REVOCATION_CHAIN_PARA$cbMaxUrlRetrievalByteCount$VH_; }

    static final MemoryLayout _CRL_REVOCATION_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pCrlEntry"),
        C_POINTER.withName("pCrlContext"),
        C_POINTER.withName("pCrlIssuerChain")
    ).withName("_CRL_REVOCATION_INFO");
    static final jdk.incubator.foreign.MemoryLayout _CRL_REVOCATION_INFO$struct$LAYOUT() { return _CRL_REVOCATION_INFO$struct$LAYOUT_; }

    static final MemoryLayout _CRL_REVOCATION_INFO$pCrlEntry$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRL_REVOCATION_INFO$pCrlEntry$LAYOUT() { return _CRL_REVOCATION_INFO$pCrlEntry$LAYOUT_; }

    static final VarHandle _CRL_REVOCATION_INFO$pCrlEntry$VH_ = MemoryHandles.asAddressVarHandle(_CRL_REVOCATION_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pCrlEntry")));
    static final java.lang.invoke.VarHandle _CRL_REVOCATION_INFO$pCrlEntry$VH() { return _CRL_REVOCATION_INFO$pCrlEntry$VH_; }

    static final MemoryLayout _CRL_REVOCATION_INFO$pCrlContext$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRL_REVOCATION_INFO$pCrlContext$LAYOUT() { return _CRL_REVOCATION_INFO$pCrlContext$LAYOUT_; }

    static final VarHandle _CRL_REVOCATION_INFO$pCrlContext$VH_ = MemoryHandles.asAddressVarHandle(_CRL_REVOCATION_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pCrlContext")));
    static final java.lang.invoke.VarHandle _CRL_REVOCATION_INFO$pCrlContext$VH() { return _CRL_REVOCATION_INFO$pCrlContext$VH_; }

    static final MemoryLayout _CRL_REVOCATION_INFO$pCrlIssuerChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRL_REVOCATION_INFO$pCrlIssuerChain$LAYOUT() { return _CRL_REVOCATION_INFO$pCrlIssuerChain$LAYOUT_; }

    static final VarHandle _CRL_REVOCATION_INFO$pCrlIssuerChain$VH_ = MemoryHandles.asAddressVarHandle(_CRL_REVOCATION_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pCrlIssuerChain")));
    static final java.lang.invoke.VarHandle _CRL_REVOCATION_INFO$pCrlIssuerChain$VH() { return _CRL_REVOCATION_INFO$pCrlIssuerChain$VH_; }

    static final FunctionDescriptor CertFindChainInStore$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CertFindChainInStore$FUNC() { return CertFindChainInStore$FUNC_; }

    static final MethodHandle CertFindChainInStore$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CertFindChainInStore",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CertFindChainInStore$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CertFindChainInStore$MH() { return CertFindChainInStore$MH_; }

    static final MemoryLayout _CERT_CHAIN_FIND_BY_ISSUER_PARA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pszUsageIdentifier"),
        C_LONG.withName("dwKeySpec"),
        C_LONG.withName("dwAcquirePrivateKeyFlags"),
        C_LONG.withName("cIssuer"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("rgIssuer"),
        C_POINTER.withName("pfnFindCallback"),
        C_POINTER.withName("pvFindArg")
    ).withName("_CERT_CHAIN_FIND_BY_ISSUER_PARA");
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_FIND_BY_ISSUER_PARA$struct$LAYOUT() { return _CERT_CHAIN_FIND_BY_ISSUER_PARA$struct$LAYOUT_; }

    static final MemoryLayout _CERT_CHAIN_FIND_BY_ISSUER_PARA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_FIND_BY_ISSUER_PARA$cbSize$LAYOUT() { return _CERT_CHAIN_FIND_BY_ISSUER_PARA$cbSize$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_FIND_BY_ISSUER_PARA$cbSize$VH_ = _CERT_CHAIN_FIND_BY_ISSUER_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_FIND_BY_ISSUER_PARA$cbSize$VH() { return _CERT_CHAIN_FIND_BY_ISSUER_PARA$cbSize$VH_; }

    static final MemoryLayout _CERT_CHAIN_FIND_BY_ISSUER_PARA$pszUsageIdentifier$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_FIND_BY_ISSUER_PARA$pszUsageIdentifier$LAYOUT() { return _CERT_CHAIN_FIND_BY_ISSUER_PARA$pszUsageIdentifier$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_FIND_BY_ISSUER_PARA$pszUsageIdentifier$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CHAIN_FIND_BY_ISSUER_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszUsageIdentifier")));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_FIND_BY_ISSUER_PARA$pszUsageIdentifier$VH() { return _CERT_CHAIN_FIND_BY_ISSUER_PARA$pszUsageIdentifier$VH_; }

    static final MemoryLayout _CERT_CHAIN_FIND_BY_ISSUER_PARA$dwKeySpec$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_FIND_BY_ISSUER_PARA$dwKeySpec$LAYOUT() { return _CERT_CHAIN_FIND_BY_ISSUER_PARA$dwKeySpec$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_FIND_BY_ISSUER_PARA$dwKeySpec$VH_ = _CERT_CHAIN_FIND_BY_ISSUER_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwKeySpec"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_FIND_BY_ISSUER_PARA$dwKeySpec$VH() { return _CERT_CHAIN_FIND_BY_ISSUER_PARA$dwKeySpec$VH_; }

    static final MemoryLayout _CERT_CHAIN_FIND_BY_ISSUER_PARA$dwAcquirePrivateKeyFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_FIND_BY_ISSUER_PARA$dwAcquirePrivateKeyFlags$LAYOUT() { return _CERT_CHAIN_FIND_BY_ISSUER_PARA$dwAcquirePrivateKeyFlags$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_FIND_BY_ISSUER_PARA$dwAcquirePrivateKeyFlags$VH_ = _CERT_CHAIN_FIND_BY_ISSUER_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwAcquirePrivateKeyFlags"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_FIND_BY_ISSUER_PARA$dwAcquirePrivateKeyFlags$VH() { return _CERT_CHAIN_FIND_BY_ISSUER_PARA$dwAcquirePrivateKeyFlags$VH_; }

    static final MemoryLayout _CERT_CHAIN_FIND_BY_ISSUER_PARA$cIssuer$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_FIND_BY_ISSUER_PARA$cIssuer$LAYOUT() { return _CERT_CHAIN_FIND_BY_ISSUER_PARA$cIssuer$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_FIND_BY_ISSUER_PARA$cIssuer$VH_ = _CERT_CHAIN_FIND_BY_ISSUER_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cIssuer"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_FIND_BY_ISSUER_PARA$cIssuer$VH() { return _CERT_CHAIN_FIND_BY_ISSUER_PARA$cIssuer$VH_; }

    static final MemoryLayout _CERT_CHAIN_FIND_BY_ISSUER_PARA$rgIssuer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_FIND_BY_ISSUER_PARA$rgIssuer$LAYOUT() { return _CERT_CHAIN_FIND_BY_ISSUER_PARA$rgIssuer$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_FIND_BY_ISSUER_PARA$rgIssuer$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CHAIN_FIND_BY_ISSUER_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgIssuer")));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_FIND_BY_ISSUER_PARA$rgIssuer$VH() { return _CERT_CHAIN_FIND_BY_ISSUER_PARA$rgIssuer$VH_; }

    static final MemoryLayout _CERT_CHAIN_FIND_BY_ISSUER_PARA$pfnFindCallback$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_FIND_BY_ISSUER_PARA$pfnFindCallback$LAYOUT() { return _CERT_CHAIN_FIND_BY_ISSUER_PARA$pfnFindCallback$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_FIND_BY_ISSUER_PARA$pfnFindCallback$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CHAIN_FIND_BY_ISSUER_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pfnFindCallback")));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_FIND_BY_ISSUER_PARA$pfnFindCallback$VH() { return _CERT_CHAIN_FIND_BY_ISSUER_PARA$pfnFindCallback$VH_; }

    static final MemoryLayout _CERT_CHAIN_FIND_BY_ISSUER_PARA$pvFindArg$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_FIND_BY_ISSUER_PARA$pvFindArg$LAYOUT() { return _CERT_CHAIN_FIND_BY_ISSUER_PARA$pvFindArg$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_FIND_BY_ISSUER_PARA$pvFindArg$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CHAIN_FIND_BY_ISSUER_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvFindArg")));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_FIND_BY_ISSUER_PARA$pvFindArg$VH() { return _CERT_CHAIN_FIND_BY_ISSUER_PARA$pvFindArg$VH_; }

    static final MemoryLayout _CERT_CHAIN_POLICY_PARA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwFlags"),
        C_POINTER.withName("pvExtraPolicyPara")
    ).withName("_CERT_CHAIN_POLICY_PARA");
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_POLICY_PARA$struct$LAYOUT() { return _CERT_CHAIN_POLICY_PARA$struct$LAYOUT_; }

    static final MemoryLayout _CERT_CHAIN_POLICY_PARA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_POLICY_PARA$cbSize$LAYOUT() { return _CERT_CHAIN_POLICY_PARA$cbSize$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_POLICY_PARA$cbSize$VH_ = _CERT_CHAIN_POLICY_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_POLICY_PARA$cbSize$VH() { return _CERT_CHAIN_POLICY_PARA$cbSize$VH_; }

    static final MemoryLayout _CERT_CHAIN_POLICY_PARA$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_POLICY_PARA$dwFlags$LAYOUT() { return _CERT_CHAIN_POLICY_PARA$dwFlags$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_POLICY_PARA$dwFlags$VH_ = _CERT_CHAIN_POLICY_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_POLICY_PARA$dwFlags$VH() { return _CERT_CHAIN_POLICY_PARA$dwFlags$VH_; }

    static final MemoryLayout _CERT_CHAIN_POLICY_PARA$pvExtraPolicyPara$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_POLICY_PARA$pvExtraPolicyPara$LAYOUT() { return _CERT_CHAIN_POLICY_PARA$pvExtraPolicyPara$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_POLICY_PARA$pvExtraPolicyPara$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvExtraPolicyPara")));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_POLICY_PARA$pvExtraPolicyPara$VH() { return _CERT_CHAIN_POLICY_PARA$pvExtraPolicyPara$VH_; }

    static final MemoryLayout _CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwError"),
        C_LONG.withName("lChainIndex"),
        C_LONG.withName("lElementIndex"),
        C_POINTER.withName("pvExtraPolicyStatus")
    ).withName("_CERT_CHAIN_POLICY_STATUS");
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_POLICY_STATUS$struct$LAYOUT() { return _CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_; }

    static final MemoryLayout _CERT_CHAIN_POLICY_STATUS$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_POLICY_STATUS$cbSize$LAYOUT() { return _CERT_CHAIN_POLICY_STATUS$cbSize$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_POLICY_STATUS$cbSize$VH_ = _CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_POLICY_STATUS$cbSize$VH() { return _CERT_CHAIN_POLICY_STATUS$cbSize$VH_; }

    static final MemoryLayout _CERT_CHAIN_POLICY_STATUS$dwError$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_POLICY_STATUS$dwError$LAYOUT() { return _CERT_CHAIN_POLICY_STATUS$dwError$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_POLICY_STATUS$dwError$VH_ = _CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwError"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_POLICY_STATUS$dwError$VH() { return _CERT_CHAIN_POLICY_STATUS$dwError$VH_; }

    static final MemoryLayout _CERT_CHAIN_POLICY_STATUS$lChainIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_POLICY_STATUS$lChainIndex$LAYOUT() { return _CERT_CHAIN_POLICY_STATUS$lChainIndex$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_POLICY_STATUS$lChainIndex$VH_ = _CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lChainIndex"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_POLICY_STATUS$lChainIndex$VH() { return _CERT_CHAIN_POLICY_STATUS$lChainIndex$VH_; }

    static final MemoryLayout _CERT_CHAIN_POLICY_STATUS$lElementIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_POLICY_STATUS$lElementIndex$LAYOUT() { return _CERT_CHAIN_POLICY_STATUS$lElementIndex$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_POLICY_STATUS$lElementIndex$VH_ = _CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lElementIndex"));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_POLICY_STATUS$lElementIndex$VH() { return _CERT_CHAIN_POLICY_STATUS$lElementIndex$VH_; }

    static final MemoryLayout _CERT_CHAIN_POLICY_STATUS$pvExtraPolicyStatus$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_CHAIN_POLICY_STATUS$pvExtraPolicyStatus$LAYOUT() { return _CERT_CHAIN_POLICY_STATUS$pvExtraPolicyStatus$LAYOUT_; }

    static final VarHandle _CERT_CHAIN_POLICY_STATUS$pvExtraPolicyStatus$VH_ = MemoryHandles.asAddressVarHandle(_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvExtraPolicyStatus")));
    static final java.lang.invoke.VarHandle _CERT_CHAIN_POLICY_STATUS$pvExtraPolicyStatus$VH() { return _CERT_CHAIN_POLICY_STATUS$pvExtraPolicyStatus$VH_; }

    static final FunctionDescriptor CertVerifyCertificateChainPolicy$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CertVerifyCertificateChainPolicy$FUNC() { return CertVerifyCertificateChainPolicy$FUNC_; }

    static final MethodHandle CertVerifyCertificateChainPolicy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CertVerifyCertificateChainPolicy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CertVerifyCertificateChainPolicy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CertVerifyCertificateChainPolicy$MH() { return CertVerifyCertificateChainPolicy$MH_; }

    static final MemoryLayout _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwRegPolicySettings"),
        C_POINTER.withName("pSignerInfo")
    ).withName("_AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA");
    static final jdk.incubator.foreign.MemoryLayout _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT() { return _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_; }

    static final MemoryLayout _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$LAYOUT() { return _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$LAYOUT_; }

    static final VarHandle _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$VH_ = _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$VH() { return _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$VH_; }

    static final MemoryLayout _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$dwRegPolicySettings$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$dwRegPolicySettings$LAYOUT() { return _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$dwRegPolicySettings$LAYOUT_; }

    static final VarHandle _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$dwRegPolicySettings$VH_ = _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRegPolicySettings"));
    static final java.lang.invoke.VarHandle _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$dwRegPolicySettings$VH() { return _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$dwRegPolicySettings$VH_; }

    static final MemoryLayout _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$pSignerInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$pSignerInfo$LAYOUT() { return _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$pSignerInfo$LAYOUT_; }

    static final VarHandle _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$pSignerInfo$VH_ = MemoryHandles.asAddressVarHandle(_AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pSignerInfo")));
    static final java.lang.invoke.VarHandle _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$pSignerInfo$VH() { return _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA$pSignerInfo$VH_; }

    static final MemoryLayout _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_INT.withName("fCommercial")
    ).withName("_AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS");
    static final jdk.incubator.foreign.MemoryLayout _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT() { return _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_; }

    static final MemoryLayout _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$LAYOUT() { return _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$LAYOUT_; }

    static final VarHandle _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$VH_ = _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$VH() { return _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$VH_; }

    static final MemoryLayout _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS$fCommercial$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS$fCommercial$LAYOUT() { return _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS$fCommercial$LAYOUT_; }

    static final VarHandle _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS$fCommercial$VH_ = _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fCommercial"));
    static final java.lang.invoke.VarHandle _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS$fCommercial$VH() { return _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS$fCommercial$VH_; }

    static final MemoryLayout _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwRegPolicySettings"),
        C_INT.withName("fCommercial")
    ).withName("_AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA");
    static final jdk.incubator.foreign.MemoryLayout _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT() { return _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_; }

    static final MemoryLayout _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$LAYOUT() { return _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$LAYOUT_; }

    static final VarHandle _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$VH_ = _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$VH() { return _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$VH_; }

    static final MemoryLayout _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$dwRegPolicySettings$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$dwRegPolicySettings$LAYOUT() { return _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$dwRegPolicySettings$LAYOUT_; }

    static final VarHandle _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$dwRegPolicySettings$VH_ = _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRegPolicySettings"));
    static final java.lang.invoke.VarHandle _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$dwRegPolicySettings$VH() { return _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$dwRegPolicySettings$VH_; }

    static final MemoryLayout _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$fCommercial$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$fCommercial$LAYOUT() { return _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$fCommercial$LAYOUT_; }

    static final VarHandle _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$fCommercial$VH_ = _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fCommercial"));
    static final java.lang.invoke.VarHandle _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$fCommercial$VH() { return _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA$fCommercial$VH_; }

    static final MemoryLayout _HTTPSPolicyCallbackData$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbStruct"),
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwAuthType"),
        C_LONG.withName("fdwChecks"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pwszServerName")
    ).withName("_HTTPSPolicyCallbackData");
    static final jdk.incubator.foreign.MemoryLayout _HTTPSPolicyCallbackData$struct$LAYOUT() { return _HTTPSPolicyCallbackData$struct$LAYOUT_; }

    static final MemoryLayout _HTTPSPolicyCallbackData$cbStruct$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _HTTPSPolicyCallbackData$cbStruct$LAYOUT() { return _HTTPSPolicyCallbackData$cbStruct$LAYOUT_; }

    static final VarHandle _HTTPSPolicyCallbackData$cbStruct$VH_ = _HTTPSPolicyCallbackData$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbStruct"));
    static final java.lang.invoke.VarHandle _HTTPSPolicyCallbackData$cbStruct$VH() { return _HTTPSPolicyCallbackData$cbStruct$VH_; }

    static final MemoryLayout _HTTPSPolicyCallbackData$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _HTTPSPolicyCallbackData$cbSize$LAYOUT() { return _HTTPSPolicyCallbackData$cbSize$LAYOUT_; }

    static final VarHandle _HTTPSPolicyCallbackData$cbSize$VH_ = _HTTPSPolicyCallbackData$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _HTTPSPolicyCallbackData$cbSize$VH() { return _HTTPSPolicyCallbackData$cbSize$VH_; }

    static final MemoryLayout _HTTPSPolicyCallbackData$dwAuthType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _HTTPSPolicyCallbackData$dwAuthType$LAYOUT() { return _HTTPSPolicyCallbackData$dwAuthType$LAYOUT_; }

    static final VarHandle _HTTPSPolicyCallbackData$dwAuthType$VH_ = _HTTPSPolicyCallbackData$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwAuthType"));
    static final java.lang.invoke.VarHandle _HTTPSPolicyCallbackData$dwAuthType$VH() { return _HTTPSPolicyCallbackData$dwAuthType$VH_; }

    static final MemoryLayout _HTTPSPolicyCallbackData$fdwChecks$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _HTTPSPolicyCallbackData$fdwChecks$LAYOUT() { return _HTTPSPolicyCallbackData$fdwChecks$LAYOUT_; }

    static final VarHandle _HTTPSPolicyCallbackData$fdwChecks$VH_ = _HTTPSPolicyCallbackData$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fdwChecks"));
    static final java.lang.invoke.VarHandle _HTTPSPolicyCallbackData$fdwChecks$VH() { return _HTTPSPolicyCallbackData$fdwChecks$VH_; }

    static final MemoryLayout _HTTPSPolicyCallbackData$pwszServerName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _HTTPSPolicyCallbackData$pwszServerName$LAYOUT() { return _HTTPSPolicyCallbackData$pwszServerName$LAYOUT_; }

    static final VarHandle _HTTPSPolicyCallbackData$pwszServerName$VH_ = MemoryHandles.asAddressVarHandle(_HTTPSPolicyCallbackData$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszServerName")));
    static final java.lang.invoke.VarHandle _HTTPSPolicyCallbackData$pwszServerName$VH() { return _HTTPSPolicyCallbackData$pwszServerName$VH_; }

    static final MemoryLayout _EV_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwRootProgramQualifierFlags")
    ).withName("_EV_EXTRA_CERT_CHAIN_POLICY_PARA");
    static final jdk.incubator.foreign.MemoryLayout _EV_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT() { return _EV_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_; }

    static final MemoryLayout _EV_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _EV_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$LAYOUT() { return _EV_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$LAYOUT_; }

    static final VarHandle _EV_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$VH_ = _EV_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _EV_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$VH() { return _EV_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$VH_; }

    static final MemoryLayout _EV_EXTRA_CERT_CHAIN_POLICY_PARA$dwRootProgramQualifierFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _EV_EXTRA_CERT_CHAIN_POLICY_PARA$dwRootProgramQualifierFlags$LAYOUT() { return _EV_EXTRA_CERT_CHAIN_POLICY_PARA$dwRootProgramQualifierFlags$LAYOUT_; }

    static final VarHandle _EV_EXTRA_CERT_CHAIN_POLICY_PARA$dwRootProgramQualifierFlags$VH_ = _EV_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRootProgramQualifierFlags"));
    static final java.lang.invoke.VarHandle _EV_EXTRA_CERT_CHAIN_POLICY_PARA$dwRootProgramQualifierFlags$VH() { return _EV_EXTRA_CERT_CHAIN_POLICY_PARA$dwRootProgramQualifierFlags$VH_; }

    static final MemoryLayout _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwQualifiers"),
        C_LONG.withName("dwIssuanceUsageIndex")
    ).withName("_EV_EXTRA_CERT_CHAIN_POLICY_STATUS");
    static final jdk.incubator.foreign.MemoryLayout _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT() { return _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_; }

    static final MemoryLayout _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$LAYOUT() { return _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$LAYOUT_; }

    static final VarHandle _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$VH_ = _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$VH() { return _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$VH_; }

    static final MemoryLayout _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$dwQualifiers$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$dwQualifiers$LAYOUT() { return _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$dwQualifiers$LAYOUT_; }

    static final VarHandle _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$dwQualifiers$VH_ = _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwQualifiers"));
    static final java.lang.invoke.VarHandle _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$dwQualifiers$VH() { return _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$dwQualifiers$VH_; }

    static final MemoryLayout _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$dwIssuanceUsageIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$dwIssuanceUsageIndex$LAYOUT() { return _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$dwIssuanceUsageIndex$LAYOUT_; }

    static final VarHandle _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$dwIssuanceUsageIndex$VH_ = _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwIssuanceUsageIndex"));
    static final java.lang.invoke.VarHandle _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$dwIssuanceUsageIndex$VH() { return _EV_EXTRA_CERT_CHAIN_POLICY_STATUS$dwIssuanceUsageIndex$VH_; }

    static final MemoryLayout _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwErrorLevel"),
        C_LONG.withName("dwErrorCategory"),
        C_LONG.withName("dwReserved"),
        MemoryLayout.ofSequence(256, C_SHORT).withName("wszErrorText")
    ).withName("_SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS");
    static final jdk.incubator.foreign.MemoryLayout _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT() { return _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_; }

    static final MemoryLayout _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$LAYOUT() { return _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$LAYOUT_; }

    static final VarHandle _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$VH_ = _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$VH() { return _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$VH_; }

    static final MemoryLayout _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$dwErrorLevel$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$dwErrorLevel$LAYOUT() { return _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$dwErrorLevel$LAYOUT_; }

    static final VarHandle _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$dwErrorLevel$VH_ = _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwErrorLevel"));
    static final java.lang.invoke.VarHandle _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$dwErrorLevel$VH() { return _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$dwErrorLevel$VH_; }

    static final MemoryLayout _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$dwErrorCategory$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$dwErrorCategory$LAYOUT() { return _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$dwErrorCategory$LAYOUT_; }

    static final VarHandle _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$dwErrorCategory$VH_ = _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwErrorCategory"));
    static final java.lang.invoke.VarHandle _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$dwErrorCategory$VH() { return _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$dwErrorCategory$VH_; }

    static final MemoryLayout _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$dwReserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$dwReserved$LAYOUT() { return _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$dwReserved$LAYOUT_; }

    static final VarHandle _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$dwReserved$VH_ = _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReserved"));
    static final java.lang.invoke.VarHandle _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$dwReserved$VH() { return _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS$dwReserved$VH_; }

    static final MemoryLayout _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwReserved"),
        C_POINTER.withName("pwszServerName"),
        MemoryLayout.ofSequence(2, C_POINTER).withName("rgpszHpkpValue")
    ).withName("_SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA");
    static final jdk.incubator.foreign.MemoryLayout _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT() { return _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_; }

    static final MemoryLayout _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$LAYOUT() { return _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$LAYOUT_; }

    static final VarHandle _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$VH_ = _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$VH() { return _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$VH_; }

    static final MemoryLayout _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$dwReserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$dwReserved$LAYOUT() { return _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$dwReserved$LAYOUT_; }

    static final VarHandle _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$dwReserved$VH_ = _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReserved"));
    static final java.lang.invoke.VarHandle _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$dwReserved$VH() { return _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$dwReserved$VH_; }

    static final MemoryLayout _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$pwszServerName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$pwszServerName$LAYOUT() { return _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$pwszServerName$LAYOUT_; }

    static final VarHandle _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$pwszServerName$VH_ = MemoryHandles.asAddressVarHandle(_SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszServerName")));
    static final java.lang.invoke.VarHandle _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$pwszServerName$VH() { return _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA$pwszServerName$VH_; }

    static final MemoryLayout _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwReserved"),
        C_POINTER.withName("pwszServerName")
    ).withName("_SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA");
    static final jdk.incubator.foreign.MemoryLayout _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT() { return _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_; }

    static final MemoryLayout _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$LAYOUT() { return _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$LAYOUT_; }

    static final VarHandle _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$VH_ = _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$VH() { return _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$cbSize$VH_; }

    static final MemoryLayout _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$dwReserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$dwReserved$LAYOUT() { return _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$dwReserved$LAYOUT_; }

    static final VarHandle _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$dwReserved$VH_ = _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReserved"));
    static final java.lang.invoke.VarHandle _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$dwReserved$VH() { return _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$dwReserved$VH_; }

    static final MemoryLayout _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$pwszServerName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$pwszServerName$LAYOUT() { return _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$pwszServerName$LAYOUT_; }

    static final VarHandle _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$pwszServerName$VH_ = MemoryHandles.asAddressVarHandle(_SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszServerName")));
    static final java.lang.invoke.VarHandle _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$pwszServerName$VH() { return _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA$pwszServerName$VH_; }

    static final MemoryLayout _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("lError"),
        MemoryLayout.ofSequence(512, C_SHORT).withName("wszErrorText")
    ).withName("_SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS");
    static final jdk.incubator.foreign.MemoryLayout _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT() { return _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_; }

    static final MemoryLayout _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$LAYOUT() { return _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$LAYOUT_; }

    static final VarHandle _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$VH_ = _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$VH() { return _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS$cbSize$VH_; }

    static final MemoryLayout _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS$lError$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS$lError$LAYOUT() { return _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS$lError$LAYOUT_; }

    static final VarHandle _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS$lError$VH_ = _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lError"));
    static final java.lang.invoke.VarHandle _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS$lError$VH() { return _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS$lError$VH_; }

    static final FunctionDescriptor CryptStringToBinaryA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptStringToBinaryA$FUNC() { return CryptStringToBinaryA$FUNC_; }

    static final MethodHandle CryptStringToBinaryA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptStringToBinaryA",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptStringToBinaryA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptStringToBinaryA$MH() { return CryptStringToBinaryA$MH_; }

    static final FunctionDescriptor CryptStringToBinaryW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptStringToBinaryW$FUNC() { return CryptStringToBinaryW$FUNC_; }

    static final MethodHandle CryptStringToBinaryW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptStringToBinaryW",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptStringToBinaryW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptStringToBinaryW$MH() { return CryptStringToBinaryW$MH_; }

    static final FunctionDescriptor CryptBinaryToStringA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptBinaryToStringA$FUNC() { return CryptBinaryToStringA$FUNC_; }

    static final MethodHandle CryptBinaryToStringA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptBinaryToStringA",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptBinaryToStringA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptBinaryToStringA$MH() { return CryptBinaryToStringA$MH_; }

    static final FunctionDescriptor CryptBinaryToStringW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CryptBinaryToStringW$FUNC() { return CryptBinaryToStringW$FUNC_; }

    static final MethodHandle CryptBinaryToStringW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CryptBinaryToStringW",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CryptBinaryToStringW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CryptBinaryToStringW$MH() { return CryptBinaryToStringW$MH_; }

    static final MemoryLayout _CRYPT_PKCS12_PBE_PARAMS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("iIterations"),
        C_LONG.withName("cbSalt")
    ).withName("_CRYPT_PKCS12_PBE_PARAMS");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_PKCS12_PBE_PARAMS$struct$LAYOUT() { return _CRYPT_PKCS12_PBE_PARAMS$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_PKCS12_PBE_PARAMS$iIterations$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_PKCS12_PBE_PARAMS$iIterations$LAYOUT() { return _CRYPT_PKCS12_PBE_PARAMS$iIterations$LAYOUT_; }

    static final VarHandle _CRYPT_PKCS12_PBE_PARAMS$iIterations$VH_ = _CRYPT_PKCS12_PBE_PARAMS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iIterations"));
    static final java.lang.invoke.VarHandle _CRYPT_PKCS12_PBE_PARAMS$iIterations$VH() { return _CRYPT_PKCS12_PBE_PARAMS$iIterations$VH_; }

    static final MemoryLayout _CRYPT_PKCS12_PBE_PARAMS$cbSalt$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_PKCS12_PBE_PARAMS$cbSalt$LAYOUT() { return _CRYPT_PKCS12_PBE_PARAMS$cbSalt$LAYOUT_; }

    static final VarHandle _CRYPT_PKCS12_PBE_PARAMS$cbSalt$VH_ = _CRYPT_PKCS12_PBE_PARAMS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSalt"));
    static final java.lang.invoke.VarHandle _CRYPT_PKCS12_PBE_PARAMS$cbSalt$VH() { return _CRYPT_PKCS12_PBE_PARAMS$cbSalt$VH_; }

    static final FunctionDescriptor PFXImportCertStore$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor PFXImportCertStore$FUNC() { return PFXImportCertStore$FUNC_; }

    static final MethodHandle PFXImportCertStore$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "PFXImportCertStore",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        PFXImportCertStore$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle PFXImportCertStore$MH() { return PFXImportCertStore$MH_; }

    static final FunctionDescriptor PFXIsPFXBlob$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor PFXIsPFXBlob$FUNC() { return PFXIsPFXBlob$FUNC_; }

    static final MethodHandle PFXIsPFXBlob$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "PFXIsPFXBlob",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        PFXIsPFXBlob$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle PFXIsPFXBlob$MH() { return PFXIsPFXBlob$MH_; }

    static final FunctionDescriptor PFXVerifyPassword$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor PFXVerifyPassword$FUNC() { return PFXVerifyPassword$FUNC_; }

    static final MethodHandle PFXVerifyPassword$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "PFXVerifyPassword",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        PFXVerifyPassword$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle PFXVerifyPassword$MH() { return PFXVerifyPassword$MH_; }

    static final FunctionDescriptor PFXExportCertStoreEx$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor PFXExportCertStoreEx$FUNC() { return PFXExportCertStoreEx$FUNC_; }

    static final MethodHandle PFXExportCertStoreEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "PFXExportCertStoreEx",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        PFXExportCertStoreEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle PFXExportCertStoreEx$MH() { return PFXExportCertStoreEx$MH_; }

    static final MemoryLayout _PKCS12_PBES2_EXPORT_PARAMS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hNcryptDescriptor"),
        C_POINTER.withName("pwszPbes2Alg")
    ).withName("_PKCS12_PBES2_EXPORT_PARAMS");
    static final jdk.incubator.foreign.MemoryLayout _PKCS12_PBES2_EXPORT_PARAMS$struct$LAYOUT() { return _PKCS12_PBES2_EXPORT_PARAMS$struct$LAYOUT_; }

    static final MemoryLayout _PKCS12_PBES2_EXPORT_PARAMS$dwSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PKCS12_PBES2_EXPORT_PARAMS$dwSize$LAYOUT() { return _PKCS12_PBES2_EXPORT_PARAMS$dwSize$LAYOUT_; }

    static final VarHandle _PKCS12_PBES2_EXPORT_PARAMS$dwSize$VH_ = _PKCS12_PBES2_EXPORT_PARAMS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSize"));
    static final java.lang.invoke.VarHandle _PKCS12_PBES2_EXPORT_PARAMS$dwSize$VH() { return _PKCS12_PBES2_EXPORT_PARAMS$dwSize$VH_; }

    static final MemoryLayout _PKCS12_PBES2_EXPORT_PARAMS$hNcryptDescriptor$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PKCS12_PBES2_EXPORT_PARAMS$hNcryptDescriptor$LAYOUT() { return _PKCS12_PBES2_EXPORT_PARAMS$hNcryptDescriptor$LAYOUT_; }

    static final VarHandle _PKCS12_PBES2_EXPORT_PARAMS$hNcryptDescriptor$VH_ = MemoryHandles.asAddressVarHandle(_PKCS12_PBES2_EXPORT_PARAMS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hNcryptDescriptor")));
    static final java.lang.invoke.VarHandle _PKCS12_PBES2_EXPORT_PARAMS$hNcryptDescriptor$VH() { return _PKCS12_PBES2_EXPORT_PARAMS$hNcryptDescriptor$VH_; }

    static final MemoryLayout _PKCS12_PBES2_EXPORT_PARAMS$pwszPbes2Alg$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PKCS12_PBES2_EXPORT_PARAMS$pwszPbes2Alg$LAYOUT() { return _PKCS12_PBES2_EXPORT_PARAMS$pwszPbes2Alg$LAYOUT_; }

    static final VarHandle _PKCS12_PBES2_EXPORT_PARAMS$pwszPbes2Alg$VH_ = MemoryHandles.asAddressVarHandle(_PKCS12_PBES2_EXPORT_PARAMS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszPbes2Alg")));
    static final java.lang.invoke.VarHandle _PKCS12_PBES2_EXPORT_PARAMS$pwszPbes2Alg$VH() { return _PKCS12_PBES2_EXPORT_PARAMS$pwszPbes2Alg$VH_; }

    static final FunctionDescriptor PFXExportCertStore$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor PFXExportCertStore$FUNC() { return PFXExportCertStore$FUNC_; }

    static final MethodHandle PFXExportCertStore$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "PFXExportCertStore",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        PFXExportCertStore$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle PFXExportCertStore$MH() { return PFXExportCertStore$MH_; }

    static final MemoryLayout _CERT_SERVER_OCSP_RESPONSE_CONTEXT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pbEncodedOcspResponse"),
        C_LONG.withName("cbEncodedOcspResponse"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CERT_SERVER_OCSP_RESPONSE_CONTEXT");
    static final jdk.incubator.foreign.MemoryLayout _CERT_SERVER_OCSP_RESPONSE_CONTEXT$struct$LAYOUT() { return _CERT_SERVER_OCSP_RESPONSE_CONTEXT$struct$LAYOUT_; }

    static final MemoryLayout _CERT_SERVER_OCSP_RESPONSE_CONTEXT$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SERVER_OCSP_RESPONSE_CONTEXT$cbSize$LAYOUT() { return _CERT_SERVER_OCSP_RESPONSE_CONTEXT$cbSize$LAYOUT_; }

    static final VarHandle _CERT_SERVER_OCSP_RESPONSE_CONTEXT$cbSize$VH_ = _CERT_SERVER_OCSP_RESPONSE_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CERT_SERVER_OCSP_RESPONSE_CONTEXT$cbSize$VH() { return _CERT_SERVER_OCSP_RESPONSE_CONTEXT$cbSize$VH_; }

    static final MemoryLayout _CERT_SERVER_OCSP_RESPONSE_CONTEXT$pbEncodedOcspResponse$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SERVER_OCSP_RESPONSE_CONTEXT$pbEncodedOcspResponse$LAYOUT() { return _CERT_SERVER_OCSP_RESPONSE_CONTEXT$pbEncodedOcspResponse$LAYOUT_; }

    static final VarHandle _CERT_SERVER_OCSP_RESPONSE_CONTEXT$pbEncodedOcspResponse$VH_ = MemoryHandles.asAddressVarHandle(_CERT_SERVER_OCSP_RESPONSE_CONTEXT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pbEncodedOcspResponse")));
    static final java.lang.invoke.VarHandle _CERT_SERVER_OCSP_RESPONSE_CONTEXT$pbEncodedOcspResponse$VH() { return _CERT_SERVER_OCSP_RESPONSE_CONTEXT$pbEncodedOcspResponse$VH_; }

    static final MemoryLayout _CERT_SERVER_OCSP_RESPONSE_CONTEXT$cbEncodedOcspResponse$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SERVER_OCSP_RESPONSE_CONTEXT$cbEncodedOcspResponse$LAYOUT() { return _CERT_SERVER_OCSP_RESPONSE_CONTEXT$cbEncodedOcspResponse$LAYOUT_; }

    static final VarHandle _CERT_SERVER_OCSP_RESPONSE_CONTEXT$cbEncodedOcspResponse$VH_ = _CERT_SERVER_OCSP_RESPONSE_CONTEXT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbEncodedOcspResponse"));
    static final java.lang.invoke.VarHandle _CERT_SERVER_OCSP_RESPONSE_CONTEXT$cbEncodedOcspResponse$VH() { return _CERT_SERVER_OCSP_RESPONSE_CONTEXT$cbEncodedOcspResponse$VH_; }

    static final MemoryLayout _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwFlags"),
        C_POINTER.withName("pcbUsedSize"),
        C_POINTER.withName("pwszOcspDirectory"),
        C_POINTER.withName("pfnUpdateCallback"),
        C_POINTER.withName("pvUpdateCallbackArg")
    ).withName("_CERT_SERVER_OCSP_RESPONSE_OPEN_PARA");
    static final jdk.incubator.foreign.MemoryLayout _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$struct$LAYOUT() { return _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$struct$LAYOUT_; }

    static final MemoryLayout _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$cbSize$LAYOUT() { return _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$cbSize$LAYOUT_; }

    static final VarHandle _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$cbSize$VH_ = _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$cbSize$VH() { return _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$cbSize$VH_; }

    static final MemoryLayout _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$dwFlags$LAYOUT() { return _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$dwFlags$LAYOUT_; }

    static final VarHandle _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$dwFlags$VH_ = _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$dwFlags$VH() { return _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$dwFlags$VH_; }

    static final MemoryLayout _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pcbUsedSize$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pcbUsedSize$LAYOUT() { return _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pcbUsedSize$LAYOUT_; }

    static final VarHandle _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pcbUsedSize$VH_ = MemoryHandles.asAddressVarHandle(_CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pcbUsedSize")));
    static final java.lang.invoke.VarHandle _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pcbUsedSize$VH() { return _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pcbUsedSize$VH_; }

    static final MemoryLayout _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pwszOcspDirectory$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pwszOcspDirectory$LAYOUT() { return _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pwszOcspDirectory$LAYOUT_; }

    static final VarHandle _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pwszOcspDirectory$VH_ = MemoryHandles.asAddressVarHandle(_CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszOcspDirectory")));
    static final java.lang.invoke.VarHandle _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pwszOcspDirectory$VH() { return _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pwszOcspDirectory$VH_; }

    static final MemoryLayout _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pfnUpdateCallback$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pfnUpdateCallback$LAYOUT() { return _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pfnUpdateCallback$LAYOUT_; }

    static final VarHandle _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pfnUpdateCallback$VH_ = MemoryHandles.asAddressVarHandle(_CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pfnUpdateCallback")));
    static final java.lang.invoke.VarHandle _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pfnUpdateCallback$VH() { return _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pfnUpdateCallback$VH_; }

    static final MemoryLayout _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pvUpdateCallbackArg$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pvUpdateCallbackArg$LAYOUT() { return _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pvUpdateCallbackArg$LAYOUT_; }

    static final VarHandle _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pvUpdateCallbackArg$VH_ = MemoryHandles.asAddressVarHandle(_CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvUpdateCallbackArg")));
    static final java.lang.invoke.VarHandle _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pvUpdateCallbackArg$VH() { return _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA$pvUpdateCallbackArg$VH_; }

    static final FunctionDescriptor CertOpenServerOcspResponse$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CertOpenServerOcspResponse$FUNC() { return CertOpenServerOcspResponse$FUNC_; }

    static final MethodHandle CertOpenServerOcspResponse$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CertOpenServerOcspResponse",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CertOpenServerOcspResponse$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CertOpenServerOcspResponse$MH() { return CertOpenServerOcspResponse$MH_; }

    static final FunctionDescriptor CertAddRefServerOcspResponse$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CertAddRefServerOcspResponse$FUNC() { return CertAddRefServerOcspResponse$FUNC_; }

    static final MethodHandle CertAddRefServerOcspResponse$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CertAddRefServerOcspResponse",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        CertAddRefServerOcspResponse$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CertAddRefServerOcspResponse$MH() { return CertAddRefServerOcspResponse$MH_; }

    static final FunctionDescriptor CertCloseServerOcspResponse$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CertCloseServerOcspResponse$FUNC() { return CertCloseServerOcspResponse$FUNC_; }

    static final MethodHandle CertCloseServerOcspResponse$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CertCloseServerOcspResponse",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        CertCloseServerOcspResponse$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CertCloseServerOcspResponse$MH() { return CertCloseServerOcspResponse$MH_; }

    static final FunctionDescriptor CertGetServerOcspResponseContext$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CertGetServerOcspResponseContext$FUNC() { return CertGetServerOcspResponseContext$FUNC_; }

    static final MethodHandle CertGetServerOcspResponseContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CertGetServerOcspResponseContext",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CertGetServerOcspResponseContext$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CertGetServerOcspResponseContext$MH() { return CertGetServerOcspResponseContext$MH_; }

    static final FunctionDescriptor CertAddRefServerOcspResponseContext$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CertAddRefServerOcspResponseContext$FUNC() { return CertAddRefServerOcspResponseContext$FUNC_; }

    static final MethodHandle CertAddRefServerOcspResponseContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CertAddRefServerOcspResponseContext",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        CertAddRefServerOcspResponseContext$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CertAddRefServerOcspResponseContext$MH() { return CertAddRefServerOcspResponseContext$MH_; }

    static final FunctionDescriptor CertFreeServerOcspResponseContext$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CertFreeServerOcspResponseContext$FUNC() { return CertFreeServerOcspResponseContext$FUNC_; }

    static final MethodHandle CertFreeServerOcspResponseContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CertFreeServerOcspResponseContext",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        CertFreeServerOcspResponseContext$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CertFreeServerOcspResponseContext$MH() { return CertFreeServerOcspResponseContext$MH_; }

    static final FunctionDescriptor CertRetrieveLogoOrBiometricInfo$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CertRetrieveLogoOrBiometricInfo$FUNC() { return CertRetrieveLogoOrBiometricInfo$FUNC_; }

    static final MethodHandle CertRetrieveLogoOrBiometricInfo$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CertRetrieveLogoOrBiometricInfo",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CertRetrieveLogoOrBiometricInfo$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CertRetrieveLogoOrBiometricInfo$MH() { return CertRetrieveLogoOrBiometricInfo$MH_; }

    static final MemoryLayout _CERT_SELECT_CHAIN_PARA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("hChainEngine"),
        C_POINTER.withName("pTime"),
        C_POINTER.withName("hAdditionalStore"),
        C_POINTER.withName("pChainPara"),
        C_LONG.withName("dwFlags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CERT_SELECT_CHAIN_PARA");
    static final jdk.incubator.foreign.MemoryLayout _CERT_SELECT_CHAIN_PARA$struct$LAYOUT() { return _CERT_SELECT_CHAIN_PARA$struct$LAYOUT_; }

    static final MemoryLayout _CERT_SELECT_CHAIN_PARA$hChainEngine$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SELECT_CHAIN_PARA$hChainEngine$LAYOUT() { return _CERT_SELECT_CHAIN_PARA$hChainEngine$LAYOUT_; }

    static final VarHandle _CERT_SELECT_CHAIN_PARA$hChainEngine$VH_ = MemoryHandles.asAddressVarHandle(_CERT_SELECT_CHAIN_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hChainEngine")));
    static final java.lang.invoke.VarHandle _CERT_SELECT_CHAIN_PARA$hChainEngine$VH() { return _CERT_SELECT_CHAIN_PARA$hChainEngine$VH_; }

    static final MemoryLayout _CERT_SELECT_CHAIN_PARA$pTime$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SELECT_CHAIN_PARA$pTime$LAYOUT() { return _CERT_SELECT_CHAIN_PARA$pTime$LAYOUT_; }

    static final VarHandle _CERT_SELECT_CHAIN_PARA$pTime$VH_ = MemoryHandles.asAddressVarHandle(_CERT_SELECT_CHAIN_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pTime")));
    static final java.lang.invoke.VarHandle _CERT_SELECT_CHAIN_PARA$pTime$VH() { return _CERT_SELECT_CHAIN_PARA$pTime$VH_; }

    static final MemoryLayout _CERT_SELECT_CHAIN_PARA$hAdditionalStore$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SELECT_CHAIN_PARA$hAdditionalStore$LAYOUT() { return _CERT_SELECT_CHAIN_PARA$hAdditionalStore$LAYOUT_; }

    static final VarHandle _CERT_SELECT_CHAIN_PARA$hAdditionalStore$VH_ = MemoryHandles.asAddressVarHandle(_CERT_SELECT_CHAIN_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hAdditionalStore")));
    static final java.lang.invoke.VarHandle _CERT_SELECT_CHAIN_PARA$hAdditionalStore$VH() { return _CERT_SELECT_CHAIN_PARA$hAdditionalStore$VH_; }

    static final MemoryLayout _CERT_SELECT_CHAIN_PARA$pChainPara$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SELECT_CHAIN_PARA$pChainPara$LAYOUT() { return _CERT_SELECT_CHAIN_PARA$pChainPara$LAYOUT_; }

    static final VarHandle _CERT_SELECT_CHAIN_PARA$pChainPara$VH_ = MemoryHandles.asAddressVarHandle(_CERT_SELECT_CHAIN_PARA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pChainPara")));
    static final java.lang.invoke.VarHandle _CERT_SELECT_CHAIN_PARA$pChainPara$VH() { return _CERT_SELECT_CHAIN_PARA$pChainPara$VH_; }

    static final MemoryLayout _CERT_SELECT_CHAIN_PARA$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SELECT_CHAIN_PARA$dwFlags$LAYOUT() { return _CERT_SELECT_CHAIN_PARA$dwFlags$LAYOUT_; }

    static final VarHandle _CERT_SELECT_CHAIN_PARA$dwFlags$VH_ = _CERT_SELECT_CHAIN_PARA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _CERT_SELECT_CHAIN_PARA$dwFlags$VH() { return _CERT_SELECT_CHAIN_PARA$dwFlags$VH_; }

    static final MemoryLayout _CERT_SELECT_CRITERIA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwType"),
        C_LONG.withName("cPara"),
        C_POINTER.withName("ppPara")
    ).withName("_CERT_SELECT_CRITERIA");
    static final jdk.incubator.foreign.MemoryLayout _CERT_SELECT_CRITERIA$struct$LAYOUT() { return _CERT_SELECT_CRITERIA$struct$LAYOUT_; }

    static final MemoryLayout _CERT_SELECT_CRITERIA$dwType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SELECT_CRITERIA$dwType$LAYOUT() { return _CERT_SELECT_CRITERIA$dwType$LAYOUT_; }

    static final VarHandle _CERT_SELECT_CRITERIA$dwType$VH_ = _CERT_SELECT_CRITERIA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwType"));
    static final java.lang.invoke.VarHandle _CERT_SELECT_CRITERIA$dwType$VH() { return _CERT_SELECT_CRITERIA$dwType$VH_; }

    static final MemoryLayout _CERT_SELECT_CRITERIA$cPara$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SELECT_CRITERIA$cPara$LAYOUT() { return _CERT_SELECT_CRITERIA$cPara$LAYOUT_; }

    static final VarHandle _CERT_SELECT_CRITERIA$cPara$VH_ = _CERT_SELECT_CRITERIA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cPara"));
    static final java.lang.invoke.VarHandle _CERT_SELECT_CRITERIA$cPara$VH() { return _CERT_SELECT_CRITERIA$cPara$VH_; }

    static final MemoryLayout _CERT_SELECT_CRITERIA$ppPara$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CERT_SELECT_CRITERIA$ppPara$LAYOUT() { return _CERT_SELECT_CRITERIA$ppPara$LAYOUT_; }

    static final VarHandle _CERT_SELECT_CRITERIA$ppPara$VH_ = MemoryHandles.asAddressVarHandle(_CERT_SELECT_CRITERIA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ppPara")));
    static final java.lang.invoke.VarHandle _CERT_SELECT_CRITERIA$ppPara$VH() { return _CERT_SELECT_CRITERIA$ppPara$VH_; }

    static final FunctionDescriptor CertSelectCertificateChains$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CertSelectCertificateChains$FUNC() { return CertSelectCertificateChains$FUNC_; }

    static final MethodHandle CertSelectCertificateChains$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CertSelectCertificateChains",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CertSelectCertificateChains$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CertSelectCertificateChains$MH() { return CertSelectCertificateChains$MH_; }

    static final FunctionDescriptor CertFreeCertificateChainList$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CertFreeCertificateChainList$FUNC() { return CertFreeCertificateChainList$FUNC_; }

    static final MethodHandle CertFreeCertificateChainList$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CertFreeCertificateChainList",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        CertFreeCertificateChainList$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CertFreeCertificateChainList$MH() { return CertFreeCertificateChainList$MH_; }

    static final MemoryLayout _CRYPT_TIMESTAMP_REQUEST$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwVersion"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_POINTER.withName("pszObjId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbData"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pbData")
            ).withName("Parameters")
        ).withName("HashAlgorithm"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("HashedMessage"),
        C_POINTER.withName("pszTSAPolicyId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("Nonce"),
        C_INT.withName("fCertReq"),
        C_LONG.withName("cExtension"),
        C_POINTER.withName("rgExtension")
    ).withName("_CRYPT_TIMESTAMP_REQUEST");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_TIMESTAMP_REQUEST$struct$LAYOUT() { return _CRYPT_TIMESTAMP_REQUEST$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_TIMESTAMP_REQUEST$dwVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_TIMESTAMP_REQUEST$dwVersion$LAYOUT() { return _CRYPT_TIMESTAMP_REQUEST$dwVersion$LAYOUT_; }

    static final VarHandle _CRYPT_TIMESTAMP_REQUEST$dwVersion$VH_ = _CRYPT_TIMESTAMP_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersion"));
    static final java.lang.invoke.VarHandle _CRYPT_TIMESTAMP_REQUEST$dwVersion$VH() { return _CRYPT_TIMESTAMP_REQUEST$dwVersion$VH_; }

    static final MemoryLayout _CRYPT_TIMESTAMP_REQUEST$pszTSAPolicyId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_TIMESTAMP_REQUEST$pszTSAPolicyId$LAYOUT() { return _CRYPT_TIMESTAMP_REQUEST$pszTSAPolicyId$LAYOUT_; }

    static final VarHandle _CRYPT_TIMESTAMP_REQUEST$pszTSAPolicyId$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_TIMESTAMP_REQUEST$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszTSAPolicyId")));
    static final java.lang.invoke.VarHandle _CRYPT_TIMESTAMP_REQUEST$pszTSAPolicyId$VH() { return _CRYPT_TIMESTAMP_REQUEST$pszTSAPolicyId$VH_; }

    static final MemoryLayout _CRYPT_TIMESTAMP_REQUEST$fCertReq$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_TIMESTAMP_REQUEST$fCertReq$LAYOUT() { return _CRYPT_TIMESTAMP_REQUEST$fCertReq$LAYOUT_; }

    static final VarHandle _CRYPT_TIMESTAMP_REQUEST$fCertReq$VH_ = _CRYPT_TIMESTAMP_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fCertReq"));
    static final java.lang.invoke.VarHandle _CRYPT_TIMESTAMP_REQUEST$fCertReq$VH() { return _CRYPT_TIMESTAMP_REQUEST$fCertReq$VH_; }

    static final MemoryLayout _CRYPT_TIMESTAMP_REQUEST$cExtension$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_TIMESTAMP_REQUEST$cExtension$LAYOUT() { return _CRYPT_TIMESTAMP_REQUEST$cExtension$LAYOUT_; }

    static final VarHandle _CRYPT_TIMESTAMP_REQUEST$cExtension$VH_ = _CRYPT_TIMESTAMP_REQUEST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cExtension"));
    static final java.lang.invoke.VarHandle _CRYPT_TIMESTAMP_REQUEST$cExtension$VH() { return _CRYPT_TIMESTAMP_REQUEST$cExtension$VH_; }

    static final MemoryLayout _CRYPT_TIMESTAMP_REQUEST$rgExtension$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_TIMESTAMP_REQUEST$rgExtension$LAYOUT() { return _CRYPT_TIMESTAMP_REQUEST$rgExtension$LAYOUT_; }

    static final VarHandle _CRYPT_TIMESTAMP_REQUEST$rgExtension$VH_ = MemoryHandles.asAddressVarHandle(_CRYPT_TIMESTAMP_REQUEST$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rgExtension")));
    static final java.lang.invoke.VarHandle _CRYPT_TIMESTAMP_REQUEST$rgExtension$VH() { return _CRYPT_TIMESTAMP_REQUEST$rgExtension$VH_; }

    static final MemoryLayout _CRYPT_TIMESTAMP_RESPONSE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwStatus"),
        C_LONG.withName("cFreeText"),
        C_POINTER.withName("rgFreeText"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData"),
            C_LONG.withName("cUnusedBits"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("FailureInfo"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbData"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pbData")
        ).withName("ContentInfo")
    ).withName("_CRYPT_TIMESTAMP_RESPONSE");
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_TIMESTAMP_RESPONSE$struct$LAYOUT() { return _CRYPT_TIMESTAMP_RESPONSE$struct$LAYOUT_; }

    static final MemoryLayout _CRYPT_TIMESTAMP_RESPONSE$dwStatus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_TIMESTAMP_RESPONSE$dwStatus$LAYOUT() { return _CRYPT_TIMESTAMP_RESPONSE$dwStatus$LAYOUT_; }

    static final VarHandle _CRYPT_TIMESTAMP_RESPONSE$dwStatus$VH_ = _CRYPT_TIMESTAMP_RESPONSE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStatus"));
    static final java.lang.invoke.VarHandle _CRYPT_TIMESTAMP_RESPONSE$dwStatus$VH() { return _CRYPT_TIMESTAMP_RESPONSE$dwStatus$VH_; }

    static final MemoryLayout _CRYPT_TIMESTAMP_RESPONSE$cFreeText$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _CRYPT_TIMESTAMP_RESPONSE$cFreeText$LAYOUT() { return _CRYPT_TIMESTAMP_RESPONSE$cFreeText$LAYOUT_; }

    static final VarHandle _CRYPT_TIMESTAMP_RESPONSE$cFreeText$VH_ = _CRYPT_TIMESTAMP_RESPONSE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cFreeText"));
    static final java.lang.invoke.VarHandle _CRYPT_TIMESTAMP_RESPONSE$cFreeText$VH() { return _CRYPT_TIMESTAMP_RESPONSE$cFreeText$VH_; }

}

