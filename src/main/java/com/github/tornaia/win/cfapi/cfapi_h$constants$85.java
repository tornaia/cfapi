// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$85 extends cfapi_h$constants$84 {

    /* package-private */ cfapi_h$constants$85() {}
    static final MemoryLayout IOleInPlaceUIWindowVtbl$GetWindow$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceUIWindowVtbl$GetWindow$LAYOUT() { return IOleInPlaceUIWindowVtbl$GetWindow$LAYOUT_; }

    static final VarHandle IOleInPlaceUIWindowVtbl$GetWindow$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceUIWindowVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetWindow")));
    static final java.lang.invoke.VarHandle IOleInPlaceUIWindowVtbl$GetWindow$VH() { return IOleInPlaceUIWindowVtbl$GetWindow$VH_; }

    static final MemoryLayout IOleInPlaceUIWindowVtbl$ContextSensitiveHelp$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceUIWindowVtbl$ContextSensitiveHelp$LAYOUT() { return IOleInPlaceUIWindowVtbl$ContextSensitiveHelp$LAYOUT_; }

    static final VarHandle IOleInPlaceUIWindowVtbl$ContextSensitiveHelp$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceUIWindowVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ContextSensitiveHelp")));
    static final java.lang.invoke.VarHandle IOleInPlaceUIWindowVtbl$ContextSensitiveHelp$VH() { return IOleInPlaceUIWindowVtbl$ContextSensitiveHelp$VH_; }

    static final MemoryLayout IOleInPlaceUIWindowVtbl$GetBorder$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceUIWindowVtbl$GetBorder$LAYOUT() { return IOleInPlaceUIWindowVtbl$GetBorder$LAYOUT_; }

    static final VarHandle IOleInPlaceUIWindowVtbl$GetBorder$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceUIWindowVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetBorder")));
    static final java.lang.invoke.VarHandle IOleInPlaceUIWindowVtbl$GetBorder$VH() { return IOleInPlaceUIWindowVtbl$GetBorder$VH_; }

    static final MemoryLayout IOleInPlaceUIWindowVtbl$RequestBorderSpace$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceUIWindowVtbl$RequestBorderSpace$LAYOUT() { return IOleInPlaceUIWindowVtbl$RequestBorderSpace$LAYOUT_; }

    static final VarHandle IOleInPlaceUIWindowVtbl$RequestBorderSpace$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceUIWindowVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RequestBorderSpace")));
    static final java.lang.invoke.VarHandle IOleInPlaceUIWindowVtbl$RequestBorderSpace$VH() { return IOleInPlaceUIWindowVtbl$RequestBorderSpace$VH_; }

    static final MemoryLayout IOleInPlaceUIWindowVtbl$SetBorderSpace$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceUIWindowVtbl$SetBorderSpace$LAYOUT() { return IOleInPlaceUIWindowVtbl$SetBorderSpace$LAYOUT_; }

    static final VarHandle IOleInPlaceUIWindowVtbl$SetBorderSpace$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceUIWindowVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetBorderSpace")));
    static final java.lang.invoke.VarHandle IOleInPlaceUIWindowVtbl$SetBorderSpace$VH() { return IOleInPlaceUIWindowVtbl$SetBorderSpace$VH_; }

    static final MemoryLayout IOleInPlaceUIWindowVtbl$SetActiveObject$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceUIWindowVtbl$SetActiveObject$LAYOUT() { return IOleInPlaceUIWindowVtbl$SetActiveObject$LAYOUT_; }

    static final VarHandle IOleInPlaceUIWindowVtbl$SetActiveObject$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceUIWindowVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetActiveObject")));
    static final java.lang.invoke.VarHandle IOleInPlaceUIWindowVtbl$SetActiveObject$VH() { return IOleInPlaceUIWindowVtbl$SetActiveObject$VH_; }

    static final MemoryLayout IOleInPlaceUIWindow$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IOleInPlaceUIWindow");
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceUIWindow$struct$LAYOUT() { return IOleInPlaceUIWindow$struct$LAYOUT_; }

    static final MemoryLayout IOleInPlaceUIWindow$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceUIWindow$lpVtbl$LAYOUT() { return IOleInPlaceUIWindow$lpVtbl$LAYOUT_; }

    static final VarHandle IOleInPlaceUIWindow$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceUIWindow$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IOleInPlaceUIWindow$lpVtbl$VH() { return IOleInPlaceUIWindow$lpVtbl$VH_; }

    static final MemoryLayout IID_IOleInPlaceActiveObject$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IOleInPlaceActiveObject$LAYOUT() { return IID_IOleInPlaceActiveObject$LAYOUT_; }

    static final MemorySegment IID_IOleInPlaceActiveObject$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IOleInPlaceActiveObject", IID_IOleInPlaceActiveObject$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IOleInPlaceActiveObject$SEGMENT() { return IID_IOleInPlaceActiveObject$SEGMENT_; }

    static final MemoryLayout IOleInPlaceActiveObjectVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetWindow"),
        C_POINTER.withName("ContextSensitiveHelp"),
        C_POINTER.withName("TranslateAcceleratorA"),
        C_POINTER.withName("OnFrameWindowActivate"),
        C_POINTER.withName("OnDocWindowActivate"),
        C_POINTER.withName("ResizeBorder"),
        C_POINTER.withName("EnableModeless")
    ).withName("IOleInPlaceActiveObjectVtbl");
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceActiveObjectVtbl$struct$LAYOUT() { return IOleInPlaceActiveObjectVtbl$struct$LAYOUT_; }

    static final MemoryLayout IOleInPlaceActiveObjectVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceActiveObjectVtbl$QueryInterface$LAYOUT() { return IOleInPlaceActiveObjectVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IOleInPlaceActiveObjectVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceActiveObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IOleInPlaceActiveObjectVtbl$QueryInterface$VH() { return IOleInPlaceActiveObjectVtbl$QueryInterface$VH_; }

    static final MemoryLayout IOleInPlaceActiveObjectVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceActiveObjectVtbl$AddRef$LAYOUT() { return IOleInPlaceActiveObjectVtbl$AddRef$LAYOUT_; }

    static final VarHandle IOleInPlaceActiveObjectVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceActiveObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IOleInPlaceActiveObjectVtbl$AddRef$VH() { return IOleInPlaceActiveObjectVtbl$AddRef$VH_; }

    static final MemoryLayout IOleInPlaceActiveObjectVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceActiveObjectVtbl$Release$LAYOUT() { return IOleInPlaceActiveObjectVtbl$Release$LAYOUT_; }

    static final VarHandle IOleInPlaceActiveObjectVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceActiveObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IOleInPlaceActiveObjectVtbl$Release$VH() { return IOleInPlaceActiveObjectVtbl$Release$VH_; }

    static final MemoryLayout IOleInPlaceActiveObjectVtbl$GetWindow$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceActiveObjectVtbl$GetWindow$LAYOUT() { return IOleInPlaceActiveObjectVtbl$GetWindow$LAYOUT_; }

    static final VarHandle IOleInPlaceActiveObjectVtbl$GetWindow$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceActiveObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetWindow")));
    static final java.lang.invoke.VarHandle IOleInPlaceActiveObjectVtbl$GetWindow$VH() { return IOleInPlaceActiveObjectVtbl$GetWindow$VH_; }

    static final MemoryLayout IOleInPlaceActiveObjectVtbl$ContextSensitiveHelp$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceActiveObjectVtbl$ContextSensitiveHelp$LAYOUT() { return IOleInPlaceActiveObjectVtbl$ContextSensitiveHelp$LAYOUT_; }

    static final VarHandle IOleInPlaceActiveObjectVtbl$ContextSensitiveHelp$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceActiveObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ContextSensitiveHelp")));
    static final java.lang.invoke.VarHandle IOleInPlaceActiveObjectVtbl$ContextSensitiveHelp$VH() { return IOleInPlaceActiveObjectVtbl$ContextSensitiveHelp$VH_; }

    static final MemoryLayout IOleInPlaceActiveObjectVtbl$TranslateAcceleratorA$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceActiveObjectVtbl$TranslateAcceleratorA$LAYOUT() { return IOleInPlaceActiveObjectVtbl$TranslateAcceleratorA$LAYOUT_; }

    static final VarHandle IOleInPlaceActiveObjectVtbl$TranslateAcceleratorA$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceActiveObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TranslateAcceleratorA")));
    static final java.lang.invoke.VarHandle IOleInPlaceActiveObjectVtbl$TranslateAcceleratorA$VH() { return IOleInPlaceActiveObjectVtbl$TranslateAcceleratorA$VH_; }

    static final MemoryLayout IOleInPlaceActiveObjectVtbl$OnFrameWindowActivate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceActiveObjectVtbl$OnFrameWindowActivate$LAYOUT() { return IOleInPlaceActiveObjectVtbl$OnFrameWindowActivate$LAYOUT_; }

    static final VarHandle IOleInPlaceActiveObjectVtbl$OnFrameWindowActivate$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceActiveObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnFrameWindowActivate")));
    static final java.lang.invoke.VarHandle IOleInPlaceActiveObjectVtbl$OnFrameWindowActivate$VH() { return IOleInPlaceActiveObjectVtbl$OnFrameWindowActivate$VH_; }

    static final MemoryLayout IOleInPlaceActiveObjectVtbl$OnDocWindowActivate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceActiveObjectVtbl$OnDocWindowActivate$LAYOUT() { return IOleInPlaceActiveObjectVtbl$OnDocWindowActivate$LAYOUT_; }

    static final VarHandle IOleInPlaceActiveObjectVtbl$OnDocWindowActivate$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceActiveObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnDocWindowActivate")));
    static final java.lang.invoke.VarHandle IOleInPlaceActiveObjectVtbl$OnDocWindowActivate$VH() { return IOleInPlaceActiveObjectVtbl$OnDocWindowActivate$VH_; }

    static final MemoryLayout IOleInPlaceActiveObjectVtbl$ResizeBorder$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceActiveObjectVtbl$ResizeBorder$LAYOUT() { return IOleInPlaceActiveObjectVtbl$ResizeBorder$LAYOUT_; }

    static final VarHandle IOleInPlaceActiveObjectVtbl$ResizeBorder$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceActiveObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ResizeBorder")));
    static final java.lang.invoke.VarHandle IOleInPlaceActiveObjectVtbl$ResizeBorder$VH() { return IOleInPlaceActiveObjectVtbl$ResizeBorder$VH_; }

    static final MemoryLayout IOleInPlaceActiveObjectVtbl$EnableModeless$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceActiveObjectVtbl$EnableModeless$LAYOUT() { return IOleInPlaceActiveObjectVtbl$EnableModeless$LAYOUT_; }

    static final VarHandle IOleInPlaceActiveObjectVtbl$EnableModeless$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceActiveObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EnableModeless")));
    static final java.lang.invoke.VarHandle IOleInPlaceActiveObjectVtbl$EnableModeless$VH() { return IOleInPlaceActiveObjectVtbl$EnableModeless$VH_; }

    static final MemoryLayout IOleInPlaceActiveObject$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IOleInPlaceActiveObject");
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceActiveObject$struct$LAYOUT() { return IOleInPlaceActiveObject$struct$LAYOUT_; }

    static final MemoryLayout IOleInPlaceActiveObject$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceActiveObject$lpVtbl$LAYOUT() { return IOleInPlaceActiveObject$lpVtbl$LAYOUT_; }

    static final VarHandle IOleInPlaceActiveObject$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceActiveObject$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IOleInPlaceActiveObject$lpVtbl$VH() { return IOleInPlaceActiveObject$lpVtbl$VH_; }

    static final FunctionDescriptor IOleInPlaceActiveObject_RemoteTranslateAccelerator_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IOleInPlaceActiveObject_RemoteTranslateAccelerator_Proxy$FUNC() { return IOleInPlaceActiveObject_RemoteTranslateAccelerator_Proxy$FUNC_; }

    static final MethodHandle IOleInPlaceActiveObject_RemoteTranslateAccelerator_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IOleInPlaceActiveObject_RemoteTranslateAccelerator_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        IOleInPlaceActiveObject_RemoteTranslateAccelerator_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IOleInPlaceActiveObject_RemoteTranslateAccelerator_Proxy$MH() { return IOleInPlaceActiveObject_RemoteTranslateAccelerator_Proxy$MH_; }

    static final FunctionDescriptor IOleInPlaceActiveObject_RemoteTranslateAccelerator_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IOleInPlaceActiveObject_RemoteTranslateAccelerator_Stub$FUNC() { return IOleInPlaceActiveObject_RemoteTranslateAccelerator_Stub$FUNC_; }

    static final MethodHandle IOleInPlaceActiveObject_RemoteTranslateAccelerator_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IOleInPlaceActiveObject_RemoteTranslateAccelerator_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IOleInPlaceActiveObject_RemoteTranslateAccelerator_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IOleInPlaceActiveObject_RemoteTranslateAccelerator_Stub$MH() { return IOleInPlaceActiveObject_RemoteTranslateAccelerator_Stub$MH_; }

    static final FunctionDescriptor IOleInPlaceActiveObject_RemoteResizeBorder_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor IOleInPlaceActiveObject_RemoteResizeBorder_Proxy$FUNC() { return IOleInPlaceActiveObject_RemoteResizeBorder_Proxy$FUNC_; }

    static final MethodHandle IOleInPlaceActiveObject_RemoteResizeBorder_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IOleInPlaceActiveObject_RemoteResizeBorder_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        IOleInPlaceActiveObject_RemoteResizeBorder_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IOleInPlaceActiveObject_RemoteResizeBorder_Proxy$MH() { return IOleInPlaceActiveObject_RemoteResizeBorder_Proxy$MH_; }

    static final FunctionDescriptor IOleInPlaceActiveObject_RemoteResizeBorder_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IOleInPlaceActiveObject_RemoteResizeBorder_Stub$FUNC() { return IOleInPlaceActiveObject_RemoteResizeBorder_Stub$FUNC_; }

    static final MethodHandle IOleInPlaceActiveObject_RemoteResizeBorder_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IOleInPlaceActiveObject_RemoteResizeBorder_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IOleInPlaceActiveObject_RemoteResizeBorder_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IOleInPlaceActiveObject_RemoteResizeBorder_Stub$MH() { return IOleInPlaceActiveObject_RemoteResizeBorder_Stub$MH_; }

    static final MemoryLayout tagOIFI$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("cb"),
        C_INT.withName("fMDIApp"),
        C_POINTER.withName("hwndFrame"),
        C_POINTER.withName("haccel"),
        C_INT.withName("cAccelEntries"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagOIFI");
    static final jdk.incubator.foreign.MemoryLayout tagOIFI$struct$LAYOUT() { return tagOIFI$struct$LAYOUT_; }

    static final MemoryLayout tagOIFI$cb$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagOIFI$cb$LAYOUT() { return tagOIFI$cb$LAYOUT_; }

    static final VarHandle tagOIFI$cb$VH_ = tagOIFI$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cb"));
    static final java.lang.invoke.VarHandle tagOIFI$cb$VH() { return tagOIFI$cb$VH_; }

    static final MemoryLayout tagOIFI$fMDIApp$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagOIFI$fMDIApp$LAYOUT() { return tagOIFI$fMDIApp$LAYOUT_; }

    static final VarHandle tagOIFI$fMDIApp$VH_ = tagOIFI$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fMDIApp"));
    static final java.lang.invoke.VarHandle tagOIFI$fMDIApp$VH() { return tagOIFI$fMDIApp$VH_; }

    static final MemoryLayout tagOIFI$hwndFrame$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagOIFI$hwndFrame$LAYOUT() { return tagOIFI$hwndFrame$LAYOUT_; }

    static final VarHandle tagOIFI$hwndFrame$VH_ = MemoryHandles.asAddressVarHandle(tagOIFI$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwndFrame")));
    static final java.lang.invoke.VarHandle tagOIFI$hwndFrame$VH() { return tagOIFI$hwndFrame$VH_; }

    static final MemoryLayout tagOIFI$haccel$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagOIFI$haccel$LAYOUT() { return tagOIFI$haccel$LAYOUT_; }

    static final VarHandle tagOIFI$haccel$VH_ = MemoryHandles.asAddressVarHandle(tagOIFI$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("haccel")));
    static final java.lang.invoke.VarHandle tagOIFI$haccel$VH() { return tagOIFI$haccel$VH_; }

    static final MemoryLayout tagOIFI$cAccelEntries$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagOIFI$cAccelEntries$LAYOUT() { return tagOIFI$cAccelEntries$LAYOUT_; }

    static final VarHandle tagOIFI$cAccelEntries$VH_ = tagOIFI$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cAccelEntries"));
    static final java.lang.invoke.VarHandle tagOIFI$cAccelEntries$VH() { return tagOIFI$cAccelEntries$VH_; }

    static final MemoryLayout tagOleMenuGroupWidths$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(6, C_LONG).withName("width")
    ).withName("tagOleMenuGroupWidths");
    static final jdk.incubator.foreign.MemoryLayout tagOleMenuGroupWidths$struct$LAYOUT() { return tagOleMenuGroupWidths$struct$LAYOUT_; }

    static final MemoryLayout IID_IOleInPlaceFrame$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IOleInPlaceFrame$LAYOUT() { return IID_IOleInPlaceFrame$LAYOUT_; }

    static final MemorySegment IID_IOleInPlaceFrame$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IOleInPlaceFrame", IID_IOleInPlaceFrame$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IOleInPlaceFrame$SEGMENT() { return IID_IOleInPlaceFrame$SEGMENT_; }

    static final MemoryLayout IOleInPlaceFrameVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetWindow"),
        C_POINTER.withName("ContextSensitiveHelp"),
        C_POINTER.withName("GetBorder"),
        C_POINTER.withName("RequestBorderSpace"),
        C_POINTER.withName("SetBorderSpace"),
        C_POINTER.withName("SetActiveObject"),
        C_POINTER.withName("InsertMenus"),
        C_POINTER.withName("SetMenu"),
        C_POINTER.withName("RemoveMenus"),
        C_POINTER.withName("SetStatusText"),
        C_POINTER.withName("EnableModeless"),
        C_POINTER.withName("TranslateAcceleratorA")
    ).withName("IOleInPlaceFrameVtbl");
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceFrameVtbl$struct$LAYOUT() { return IOleInPlaceFrameVtbl$struct$LAYOUT_; }

    static final MemoryLayout IOleInPlaceFrameVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceFrameVtbl$QueryInterface$LAYOUT() { return IOleInPlaceFrameVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IOleInPlaceFrameVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceFrameVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IOleInPlaceFrameVtbl$QueryInterface$VH() { return IOleInPlaceFrameVtbl$QueryInterface$VH_; }

    static final MemoryLayout IOleInPlaceFrameVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceFrameVtbl$AddRef$LAYOUT() { return IOleInPlaceFrameVtbl$AddRef$LAYOUT_; }

    static final VarHandle IOleInPlaceFrameVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceFrameVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IOleInPlaceFrameVtbl$AddRef$VH() { return IOleInPlaceFrameVtbl$AddRef$VH_; }

    static final MemoryLayout IOleInPlaceFrameVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceFrameVtbl$Release$LAYOUT() { return IOleInPlaceFrameVtbl$Release$LAYOUT_; }

    static final VarHandle IOleInPlaceFrameVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceFrameVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IOleInPlaceFrameVtbl$Release$VH() { return IOleInPlaceFrameVtbl$Release$VH_; }

    static final MemoryLayout IOleInPlaceFrameVtbl$GetWindow$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceFrameVtbl$GetWindow$LAYOUT() { return IOleInPlaceFrameVtbl$GetWindow$LAYOUT_; }

    static final VarHandle IOleInPlaceFrameVtbl$GetWindow$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceFrameVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetWindow")));
    static final java.lang.invoke.VarHandle IOleInPlaceFrameVtbl$GetWindow$VH() { return IOleInPlaceFrameVtbl$GetWindow$VH_; }

    static final MemoryLayout IOleInPlaceFrameVtbl$ContextSensitiveHelp$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceFrameVtbl$ContextSensitiveHelp$LAYOUT() { return IOleInPlaceFrameVtbl$ContextSensitiveHelp$LAYOUT_; }

    static final VarHandle IOleInPlaceFrameVtbl$ContextSensitiveHelp$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceFrameVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ContextSensitiveHelp")));
    static final java.lang.invoke.VarHandle IOleInPlaceFrameVtbl$ContextSensitiveHelp$VH() { return IOleInPlaceFrameVtbl$ContextSensitiveHelp$VH_; }

    static final MemoryLayout IOleInPlaceFrameVtbl$GetBorder$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceFrameVtbl$GetBorder$LAYOUT() { return IOleInPlaceFrameVtbl$GetBorder$LAYOUT_; }

    static final VarHandle IOleInPlaceFrameVtbl$GetBorder$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceFrameVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetBorder")));
    static final java.lang.invoke.VarHandle IOleInPlaceFrameVtbl$GetBorder$VH() { return IOleInPlaceFrameVtbl$GetBorder$VH_; }

    static final MemoryLayout IOleInPlaceFrameVtbl$RequestBorderSpace$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceFrameVtbl$RequestBorderSpace$LAYOUT() { return IOleInPlaceFrameVtbl$RequestBorderSpace$LAYOUT_; }

    static final VarHandle IOleInPlaceFrameVtbl$RequestBorderSpace$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceFrameVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RequestBorderSpace")));
    static final java.lang.invoke.VarHandle IOleInPlaceFrameVtbl$RequestBorderSpace$VH() { return IOleInPlaceFrameVtbl$RequestBorderSpace$VH_; }

    static final MemoryLayout IOleInPlaceFrameVtbl$SetBorderSpace$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceFrameVtbl$SetBorderSpace$LAYOUT() { return IOleInPlaceFrameVtbl$SetBorderSpace$LAYOUT_; }

    static final VarHandle IOleInPlaceFrameVtbl$SetBorderSpace$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceFrameVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetBorderSpace")));
    static final java.lang.invoke.VarHandle IOleInPlaceFrameVtbl$SetBorderSpace$VH() { return IOleInPlaceFrameVtbl$SetBorderSpace$VH_; }

    static final MemoryLayout IOleInPlaceFrameVtbl$SetActiveObject$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceFrameVtbl$SetActiveObject$LAYOUT() { return IOleInPlaceFrameVtbl$SetActiveObject$LAYOUT_; }

    static final VarHandle IOleInPlaceFrameVtbl$SetActiveObject$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceFrameVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetActiveObject")));
    static final java.lang.invoke.VarHandle IOleInPlaceFrameVtbl$SetActiveObject$VH() { return IOleInPlaceFrameVtbl$SetActiveObject$VH_; }

    static final MemoryLayout IOleInPlaceFrameVtbl$InsertMenus$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceFrameVtbl$InsertMenus$LAYOUT() { return IOleInPlaceFrameVtbl$InsertMenus$LAYOUT_; }

    static final VarHandle IOleInPlaceFrameVtbl$InsertMenus$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceFrameVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("InsertMenus")));
    static final java.lang.invoke.VarHandle IOleInPlaceFrameVtbl$InsertMenus$VH() { return IOleInPlaceFrameVtbl$InsertMenus$VH_; }

    static final MemoryLayout IOleInPlaceFrameVtbl$SetMenu$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceFrameVtbl$SetMenu$LAYOUT() { return IOleInPlaceFrameVtbl$SetMenu$LAYOUT_; }

    static final VarHandle IOleInPlaceFrameVtbl$SetMenu$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceFrameVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetMenu")));
    static final java.lang.invoke.VarHandle IOleInPlaceFrameVtbl$SetMenu$VH() { return IOleInPlaceFrameVtbl$SetMenu$VH_; }

    static final MemoryLayout IOleInPlaceFrameVtbl$RemoveMenus$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceFrameVtbl$RemoveMenus$LAYOUT() { return IOleInPlaceFrameVtbl$RemoveMenus$LAYOUT_; }

    static final VarHandle IOleInPlaceFrameVtbl$RemoveMenus$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceFrameVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RemoveMenus")));
    static final java.lang.invoke.VarHandle IOleInPlaceFrameVtbl$RemoveMenus$VH() { return IOleInPlaceFrameVtbl$RemoveMenus$VH_; }

    static final MemoryLayout IOleInPlaceFrameVtbl$SetStatusText$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceFrameVtbl$SetStatusText$LAYOUT() { return IOleInPlaceFrameVtbl$SetStatusText$LAYOUT_; }

    static final VarHandle IOleInPlaceFrameVtbl$SetStatusText$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceFrameVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetStatusText")));
    static final java.lang.invoke.VarHandle IOleInPlaceFrameVtbl$SetStatusText$VH() { return IOleInPlaceFrameVtbl$SetStatusText$VH_; }

    static final MemoryLayout IOleInPlaceFrameVtbl$EnableModeless$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceFrameVtbl$EnableModeless$LAYOUT() { return IOleInPlaceFrameVtbl$EnableModeless$LAYOUT_; }

    static final VarHandle IOleInPlaceFrameVtbl$EnableModeless$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceFrameVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EnableModeless")));
    static final java.lang.invoke.VarHandle IOleInPlaceFrameVtbl$EnableModeless$VH() { return IOleInPlaceFrameVtbl$EnableModeless$VH_; }

    static final MemoryLayout IOleInPlaceFrameVtbl$TranslateAcceleratorA$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceFrameVtbl$TranslateAcceleratorA$LAYOUT() { return IOleInPlaceFrameVtbl$TranslateAcceleratorA$LAYOUT_; }

    static final VarHandle IOleInPlaceFrameVtbl$TranslateAcceleratorA$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceFrameVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TranslateAcceleratorA")));
    static final java.lang.invoke.VarHandle IOleInPlaceFrameVtbl$TranslateAcceleratorA$VH() { return IOleInPlaceFrameVtbl$TranslateAcceleratorA$VH_; }

    static final MemoryLayout IOleInPlaceFrame$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IOleInPlaceFrame");
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceFrame$struct$LAYOUT() { return IOleInPlaceFrame$struct$LAYOUT_; }

    static final MemoryLayout IOleInPlaceFrame$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceFrame$lpVtbl$LAYOUT() { return IOleInPlaceFrame$lpVtbl$LAYOUT_; }

    static final VarHandle IOleInPlaceFrame$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceFrame$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IOleInPlaceFrame$lpVtbl$VH() { return IOleInPlaceFrame$lpVtbl$VH_; }

    static final MemoryLayout IID_IOleInPlaceObject$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IOleInPlaceObject$LAYOUT() { return IID_IOleInPlaceObject$LAYOUT_; }

    static final MemorySegment IID_IOleInPlaceObject$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IOleInPlaceObject", IID_IOleInPlaceObject$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IOleInPlaceObject$SEGMENT() { return IID_IOleInPlaceObject$SEGMENT_; }

    static final MemoryLayout IOleInPlaceObjectVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetWindow"),
        C_POINTER.withName("ContextSensitiveHelp"),
        C_POINTER.withName("InPlaceDeactivate"),
        C_POINTER.withName("UIDeactivate"),
        C_POINTER.withName("SetObjectRects"),
        C_POINTER.withName("ReactivateAndUndo")
    ).withName("IOleInPlaceObjectVtbl");
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceObjectVtbl$struct$LAYOUT() { return IOleInPlaceObjectVtbl$struct$LAYOUT_; }

    static final MemoryLayout IOleInPlaceObjectVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceObjectVtbl$QueryInterface$LAYOUT() { return IOleInPlaceObjectVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IOleInPlaceObjectVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IOleInPlaceObjectVtbl$QueryInterface$VH() { return IOleInPlaceObjectVtbl$QueryInterface$VH_; }

    static final MemoryLayout IOleInPlaceObjectVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceObjectVtbl$AddRef$LAYOUT() { return IOleInPlaceObjectVtbl$AddRef$LAYOUT_; }

    static final VarHandle IOleInPlaceObjectVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IOleInPlaceObjectVtbl$AddRef$VH() { return IOleInPlaceObjectVtbl$AddRef$VH_; }

    static final MemoryLayout IOleInPlaceObjectVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceObjectVtbl$Release$LAYOUT() { return IOleInPlaceObjectVtbl$Release$LAYOUT_; }

    static final VarHandle IOleInPlaceObjectVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IOleInPlaceObjectVtbl$Release$VH() { return IOleInPlaceObjectVtbl$Release$VH_; }

    static final MemoryLayout IOleInPlaceObjectVtbl$GetWindow$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceObjectVtbl$GetWindow$LAYOUT() { return IOleInPlaceObjectVtbl$GetWindow$LAYOUT_; }

    static final VarHandle IOleInPlaceObjectVtbl$GetWindow$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetWindow")));
    static final java.lang.invoke.VarHandle IOleInPlaceObjectVtbl$GetWindow$VH() { return IOleInPlaceObjectVtbl$GetWindow$VH_; }

    static final MemoryLayout IOleInPlaceObjectVtbl$ContextSensitiveHelp$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceObjectVtbl$ContextSensitiveHelp$LAYOUT() { return IOleInPlaceObjectVtbl$ContextSensitiveHelp$LAYOUT_; }

    static final VarHandle IOleInPlaceObjectVtbl$ContextSensitiveHelp$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ContextSensitiveHelp")));
    static final java.lang.invoke.VarHandle IOleInPlaceObjectVtbl$ContextSensitiveHelp$VH() { return IOleInPlaceObjectVtbl$ContextSensitiveHelp$VH_; }

    static final MemoryLayout IOleInPlaceObjectVtbl$InPlaceDeactivate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceObjectVtbl$InPlaceDeactivate$LAYOUT() { return IOleInPlaceObjectVtbl$InPlaceDeactivate$LAYOUT_; }

    static final VarHandle IOleInPlaceObjectVtbl$InPlaceDeactivate$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("InPlaceDeactivate")));
    static final java.lang.invoke.VarHandle IOleInPlaceObjectVtbl$InPlaceDeactivate$VH() { return IOleInPlaceObjectVtbl$InPlaceDeactivate$VH_; }

    static final MemoryLayout IOleInPlaceObjectVtbl$UIDeactivate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceObjectVtbl$UIDeactivate$LAYOUT() { return IOleInPlaceObjectVtbl$UIDeactivate$LAYOUT_; }

    static final VarHandle IOleInPlaceObjectVtbl$UIDeactivate$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("UIDeactivate")));
    static final java.lang.invoke.VarHandle IOleInPlaceObjectVtbl$UIDeactivate$VH() { return IOleInPlaceObjectVtbl$UIDeactivate$VH_; }

    static final MemoryLayout IOleInPlaceObjectVtbl$SetObjectRects$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceObjectVtbl$SetObjectRects$LAYOUT() { return IOleInPlaceObjectVtbl$SetObjectRects$LAYOUT_; }

    static final VarHandle IOleInPlaceObjectVtbl$SetObjectRects$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetObjectRects")));
    static final java.lang.invoke.VarHandle IOleInPlaceObjectVtbl$SetObjectRects$VH() { return IOleInPlaceObjectVtbl$SetObjectRects$VH_; }

    static final MemoryLayout IOleInPlaceObjectVtbl$ReactivateAndUndo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceObjectVtbl$ReactivateAndUndo$LAYOUT() { return IOleInPlaceObjectVtbl$ReactivateAndUndo$LAYOUT_; }

    static final VarHandle IOleInPlaceObjectVtbl$ReactivateAndUndo$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReactivateAndUndo")));
    static final java.lang.invoke.VarHandle IOleInPlaceObjectVtbl$ReactivateAndUndo$VH() { return IOleInPlaceObjectVtbl$ReactivateAndUndo$VH_; }

    static final MemoryLayout IOleInPlaceObject$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IOleInPlaceObject");
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceObject$struct$LAYOUT() { return IOleInPlaceObject$struct$LAYOUT_; }

    static final MemoryLayout IOleInPlaceObject$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceObject$lpVtbl$LAYOUT() { return IOleInPlaceObject$lpVtbl$LAYOUT_; }

    static final VarHandle IOleInPlaceObject$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceObject$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IOleInPlaceObject$lpVtbl$VH() { return IOleInPlaceObject$lpVtbl$VH_; }

    static final MemoryLayout IID_IOleInPlaceSite$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IOleInPlaceSite$LAYOUT() { return IID_IOleInPlaceSite$LAYOUT_; }

    static final MemorySegment IID_IOleInPlaceSite$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IOleInPlaceSite", IID_IOleInPlaceSite$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IOleInPlaceSite$SEGMENT() { return IID_IOleInPlaceSite$SEGMENT_; }

    static final MemoryLayout IOleInPlaceSiteVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetWindow"),
        C_POINTER.withName("ContextSensitiveHelp"),
        C_POINTER.withName("CanInPlaceActivate"),
        C_POINTER.withName("OnInPlaceActivate"),
        C_POINTER.withName("OnUIActivate"),
        C_POINTER.withName("GetWindowContext"),
        C_POINTER.withName("Scroll"),
        C_POINTER.withName("OnUIDeactivate"),
        C_POINTER.withName("OnInPlaceDeactivate"),
        C_POINTER.withName("DiscardUndoState"),
        C_POINTER.withName("DeactivateAndUndo"),
        C_POINTER.withName("OnPosRectChange")
    ).withName("IOleInPlaceSiteVtbl");
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceSiteVtbl$struct$LAYOUT() { return IOleInPlaceSiteVtbl$struct$LAYOUT_; }

    static final MemoryLayout IOleInPlaceSiteVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceSiteVtbl$QueryInterface$LAYOUT() { return IOleInPlaceSiteVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IOleInPlaceSiteVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceSiteVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IOleInPlaceSiteVtbl$QueryInterface$VH() { return IOleInPlaceSiteVtbl$QueryInterface$VH_; }

    static final MemoryLayout IOleInPlaceSiteVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceSiteVtbl$AddRef$LAYOUT() { return IOleInPlaceSiteVtbl$AddRef$LAYOUT_; }

    static final VarHandle IOleInPlaceSiteVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceSiteVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IOleInPlaceSiteVtbl$AddRef$VH() { return IOleInPlaceSiteVtbl$AddRef$VH_; }

    static final MemoryLayout IOleInPlaceSiteVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceSiteVtbl$Release$LAYOUT() { return IOleInPlaceSiteVtbl$Release$LAYOUT_; }

    static final VarHandle IOleInPlaceSiteVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceSiteVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IOleInPlaceSiteVtbl$Release$VH() { return IOleInPlaceSiteVtbl$Release$VH_; }

    static final MemoryLayout IOleInPlaceSiteVtbl$GetWindow$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceSiteVtbl$GetWindow$LAYOUT() { return IOleInPlaceSiteVtbl$GetWindow$LAYOUT_; }

    static final VarHandle IOleInPlaceSiteVtbl$GetWindow$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceSiteVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetWindow")));
    static final java.lang.invoke.VarHandle IOleInPlaceSiteVtbl$GetWindow$VH() { return IOleInPlaceSiteVtbl$GetWindow$VH_; }

    static final MemoryLayout IOleInPlaceSiteVtbl$ContextSensitiveHelp$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceSiteVtbl$ContextSensitiveHelp$LAYOUT() { return IOleInPlaceSiteVtbl$ContextSensitiveHelp$LAYOUT_; }

    static final VarHandle IOleInPlaceSiteVtbl$ContextSensitiveHelp$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceSiteVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ContextSensitiveHelp")));
    static final java.lang.invoke.VarHandle IOleInPlaceSiteVtbl$ContextSensitiveHelp$VH() { return IOleInPlaceSiteVtbl$ContextSensitiveHelp$VH_; }

    static final MemoryLayout IOleInPlaceSiteVtbl$CanInPlaceActivate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceSiteVtbl$CanInPlaceActivate$LAYOUT() { return IOleInPlaceSiteVtbl$CanInPlaceActivate$LAYOUT_; }

    static final VarHandle IOleInPlaceSiteVtbl$CanInPlaceActivate$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceSiteVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CanInPlaceActivate")));
    static final java.lang.invoke.VarHandle IOleInPlaceSiteVtbl$CanInPlaceActivate$VH() { return IOleInPlaceSiteVtbl$CanInPlaceActivate$VH_; }

    static final MemoryLayout IOleInPlaceSiteVtbl$OnInPlaceActivate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceSiteVtbl$OnInPlaceActivate$LAYOUT() { return IOleInPlaceSiteVtbl$OnInPlaceActivate$LAYOUT_; }

    static final VarHandle IOleInPlaceSiteVtbl$OnInPlaceActivate$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceSiteVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnInPlaceActivate")));
    static final java.lang.invoke.VarHandle IOleInPlaceSiteVtbl$OnInPlaceActivate$VH() { return IOleInPlaceSiteVtbl$OnInPlaceActivate$VH_; }

    static final MemoryLayout IOleInPlaceSiteVtbl$OnUIActivate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceSiteVtbl$OnUIActivate$LAYOUT() { return IOleInPlaceSiteVtbl$OnUIActivate$LAYOUT_; }

    static final VarHandle IOleInPlaceSiteVtbl$OnUIActivate$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceSiteVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnUIActivate")));
    static final java.lang.invoke.VarHandle IOleInPlaceSiteVtbl$OnUIActivate$VH() { return IOleInPlaceSiteVtbl$OnUIActivate$VH_; }

    static final MemoryLayout IOleInPlaceSiteVtbl$GetWindowContext$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceSiteVtbl$GetWindowContext$LAYOUT() { return IOleInPlaceSiteVtbl$GetWindowContext$LAYOUT_; }

    static final VarHandle IOleInPlaceSiteVtbl$GetWindowContext$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceSiteVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetWindowContext")));
    static final java.lang.invoke.VarHandle IOleInPlaceSiteVtbl$GetWindowContext$VH() { return IOleInPlaceSiteVtbl$GetWindowContext$VH_; }

    static final MemoryLayout IOleInPlaceSiteVtbl$Scroll$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceSiteVtbl$Scroll$LAYOUT() { return IOleInPlaceSiteVtbl$Scroll$LAYOUT_; }

    static final VarHandle IOleInPlaceSiteVtbl$Scroll$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceSiteVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Scroll")));
    static final java.lang.invoke.VarHandle IOleInPlaceSiteVtbl$Scroll$VH() { return IOleInPlaceSiteVtbl$Scroll$VH_; }

    static final MemoryLayout IOleInPlaceSiteVtbl$OnUIDeactivate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceSiteVtbl$OnUIDeactivate$LAYOUT() { return IOleInPlaceSiteVtbl$OnUIDeactivate$LAYOUT_; }

    static final VarHandle IOleInPlaceSiteVtbl$OnUIDeactivate$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceSiteVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnUIDeactivate")));
    static final java.lang.invoke.VarHandle IOleInPlaceSiteVtbl$OnUIDeactivate$VH() { return IOleInPlaceSiteVtbl$OnUIDeactivate$VH_; }

    static final MemoryLayout IOleInPlaceSiteVtbl$OnInPlaceDeactivate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceSiteVtbl$OnInPlaceDeactivate$LAYOUT() { return IOleInPlaceSiteVtbl$OnInPlaceDeactivate$LAYOUT_; }

    static final VarHandle IOleInPlaceSiteVtbl$OnInPlaceDeactivate$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceSiteVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnInPlaceDeactivate")));
    static final java.lang.invoke.VarHandle IOleInPlaceSiteVtbl$OnInPlaceDeactivate$VH() { return IOleInPlaceSiteVtbl$OnInPlaceDeactivate$VH_; }

    static final MemoryLayout IOleInPlaceSiteVtbl$DiscardUndoState$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceSiteVtbl$DiscardUndoState$LAYOUT() { return IOleInPlaceSiteVtbl$DiscardUndoState$LAYOUT_; }

    static final VarHandle IOleInPlaceSiteVtbl$DiscardUndoState$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceSiteVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DiscardUndoState")));
    static final java.lang.invoke.VarHandle IOleInPlaceSiteVtbl$DiscardUndoState$VH() { return IOleInPlaceSiteVtbl$DiscardUndoState$VH_; }

    static final MemoryLayout IOleInPlaceSiteVtbl$DeactivateAndUndo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceSiteVtbl$DeactivateAndUndo$LAYOUT() { return IOleInPlaceSiteVtbl$DeactivateAndUndo$LAYOUT_; }

    static final VarHandle IOleInPlaceSiteVtbl$DeactivateAndUndo$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceSiteVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DeactivateAndUndo")));
    static final java.lang.invoke.VarHandle IOleInPlaceSiteVtbl$DeactivateAndUndo$VH() { return IOleInPlaceSiteVtbl$DeactivateAndUndo$VH_; }

    static final MemoryLayout IOleInPlaceSiteVtbl$OnPosRectChange$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceSiteVtbl$OnPosRectChange$LAYOUT() { return IOleInPlaceSiteVtbl$OnPosRectChange$LAYOUT_; }

    static final VarHandle IOleInPlaceSiteVtbl$OnPosRectChange$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceSiteVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OnPosRectChange")));
    static final java.lang.invoke.VarHandle IOleInPlaceSiteVtbl$OnPosRectChange$VH() { return IOleInPlaceSiteVtbl$OnPosRectChange$VH_; }

    static final MemoryLayout IOleInPlaceSite$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IOleInPlaceSite");
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceSite$struct$LAYOUT() { return IOleInPlaceSite$struct$LAYOUT_; }

    static final MemoryLayout IOleInPlaceSite$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IOleInPlaceSite$lpVtbl$LAYOUT() { return IOleInPlaceSite$lpVtbl$LAYOUT_; }

    static final VarHandle IOleInPlaceSite$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IOleInPlaceSite$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IOleInPlaceSite$lpVtbl$VH() { return IOleInPlaceSite$lpVtbl$VH_; }

    static final MemoryLayout IID_IContinue$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IContinue$LAYOUT() { return IID_IContinue$LAYOUT_; }

    static final MemorySegment IID_IContinue$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IContinue", IID_IContinue$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IContinue$SEGMENT() { return IID_IContinue$SEGMENT_; }

    static final MemoryLayout IContinueVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("FContinue")
    ).withName("IContinueVtbl");
    static final jdk.incubator.foreign.MemoryLayout IContinueVtbl$struct$LAYOUT() { return IContinueVtbl$struct$LAYOUT_; }

    static final MemoryLayout IContinueVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IContinueVtbl$QueryInterface$LAYOUT() { return IContinueVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IContinueVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IContinueVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IContinueVtbl$QueryInterface$VH() { return IContinueVtbl$QueryInterface$VH_; }

    static final MemoryLayout IContinueVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IContinueVtbl$AddRef$LAYOUT() { return IContinueVtbl$AddRef$LAYOUT_; }

    static final VarHandle IContinueVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IContinueVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IContinueVtbl$AddRef$VH() { return IContinueVtbl$AddRef$VH_; }

    static final MemoryLayout IContinueVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IContinueVtbl$Release$LAYOUT() { return IContinueVtbl$Release$LAYOUT_; }

    static final VarHandle IContinueVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IContinueVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IContinueVtbl$Release$VH() { return IContinueVtbl$Release$VH_; }

    static final MemoryLayout IContinueVtbl$FContinue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IContinueVtbl$FContinue$LAYOUT() { return IContinueVtbl$FContinue$LAYOUT_; }

    static final VarHandle IContinueVtbl$FContinue$VH_ = MemoryHandles.asAddressVarHandle(IContinueVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("FContinue")));
    static final java.lang.invoke.VarHandle IContinueVtbl$FContinue$VH() { return IContinueVtbl$FContinue$VH_; }

    static final MemoryLayout IContinue$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IContinue");
    static final jdk.incubator.foreign.MemoryLayout IContinue$struct$LAYOUT() { return IContinue$struct$LAYOUT_; }

    static final MemoryLayout IContinue$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IContinue$lpVtbl$LAYOUT() { return IContinue$lpVtbl$LAYOUT_; }

    static final VarHandle IContinue$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IContinue$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IContinue$lpVtbl$VH() { return IContinue$lpVtbl$VH_; }

    static final MemoryLayout IID_IViewObject$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IViewObject$LAYOUT() { return IID_IViewObject$LAYOUT_; }

    static final MemorySegment IID_IViewObject$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IViewObject", IID_IViewObject$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IViewObject$SEGMENT() { return IID_IViewObject$SEGMENT_; }

    static final MemoryLayout IViewObjectVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Draw"),
        C_POINTER.withName("GetColorSet"),
        C_POINTER.withName("Freeze"),
        C_POINTER.withName("Unfreeze"),
        C_POINTER.withName("SetAdvise"),
        C_POINTER.withName("GetAdvise")
    ).withName("IViewObjectVtbl");
    static final jdk.incubator.foreign.MemoryLayout IViewObjectVtbl$struct$LAYOUT() { return IViewObjectVtbl$struct$LAYOUT_; }

    static final MemoryLayout IViewObjectVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObjectVtbl$QueryInterface$LAYOUT() { return IViewObjectVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IViewObjectVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IViewObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IViewObjectVtbl$QueryInterface$VH() { return IViewObjectVtbl$QueryInterface$VH_; }

    static final MemoryLayout IViewObjectVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObjectVtbl$AddRef$LAYOUT() { return IViewObjectVtbl$AddRef$LAYOUT_; }

    static final VarHandle IViewObjectVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IViewObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IViewObjectVtbl$AddRef$VH() { return IViewObjectVtbl$AddRef$VH_; }

    static final MemoryLayout IViewObjectVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObjectVtbl$Release$LAYOUT() { return IViewObjectVtbl$Release$LAYOUT_; }

    static final VarHandle IViewObjectVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IViewObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IViewObjectVtbl$Release$VH() { return IViewObjectVtbl$Release$VH_; }

    static final MemoryLayout IViewObjectVtbl$Draw$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObjectVtbl$Draw$LAYOUT() { return IViewObjectVtbl$Draw$LAYOUT_; }

    static final VarHandle IViewObjectVtbl$Draw$VH_ = MemoryHandles.asAddressVarHandle(IViewObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Draw")));
    static final java.lang.invoke.VarHandle IViewObjectVtbl$Draw$VH() { return IViewObjectVtbl$Draw$VH_; }

    static final MemoryLayout IViewObjectVtbl$GetColorSet$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObjectVtbl$GetColorSet$LAYOUT() { return IViewObjectVtbl$GetColorSet$LAYOUT_; }

    static final VarHandle IViewObjectVtbl$GetColorSet$VH_ = MemoryHandles.asAddressVarHandle(IViewObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetColorSet")));
    static final java.lang.invoke.VarHandle IViewObjectVtbl$GetColorSet$VH() { return IViewObjectVtbl$GetColorSet$VH_; }

    static final MemoryLayout IViewObjectVtbl$Freeze$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObjectVtbl$Freeze$LAYOUT() { return IViewObjectVtbl$Freeze$LAYOUT_; }

    static final VarHandle IViewObjectVtbl$Freeze$VH_ = MemoryHandles.asAddressVarHandle(IViewObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Freeze")));
    static final java.lang.invoke.VarHandle IViewObjectVtbl$Freeze$VH() { return IViewObjectVtbl$Freeze$VH_; }

    static final MemoryLayout IViewObjectVtbl$Unfreeze$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObjectVtbl$Unfreeze$LAYOUT() { return IViewObjectVtbl$Unfreeze$LAYOUT_; }

    static final VarHandle IViewObjectVtbl$Unfreeze$VH_ = MemoryHandles.asAddressVarHandle(IViewObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Unfreeze")));
    static final java.lang.invoke.VarHandle IViewObjectVtbl$Unfreeze$VH() { return IViewObjectVtbl$Unfreeze$VH_; }

    static final MemoryLayout IViewObjectVtbl$SetAdvise$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObjectVtbl$SetAdvise$LAYOUT() { return IViewObjectVtbl$SetAdvise$LAYOUT_; }

    static final VarHandle IViewObjectVtbl$SetAdvise$VH_ = MemoryHandles.asAddressVarHandle(IViewObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetAdvise")));
    static final java.lang.invoke.VarHandle IViewObjectVtbl$SetAdvise$VH() { return IViewObjectVtbl$SetAdvise$VH_; }

    static final MemoryLayout IViewObjectVtbl$GetAdvise$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObjectVtbl$GetAdvise$LAYOUT() { return IViewObjectVtbl$GetAdvise$LAYOUT_; }

    static final VarHandle IViewObjectVtbl$GetAdvise$VH_ = MemoryHandles.asAddressVarHandle(IViewObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetAdvise")));
    static final java.lang.invoke.VarHandle IViewObjectVtbl$GetAdvise$VH() { return IViewObjectVtbl$GetAdvise$VH_; }

    static final MemoryLayout IViewObject$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IViewObject");
    static final jdk.incubator.foreign.MemoryLayout IViewObject$struct$LAYOUT() { return IViewObject$struct$LAYOUT_; }

    static final MemoryLayout IViewObject$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObject$lpVtbl$LAYOUT() { return IViewObject$lpVtbl$LAYOUT_; }

    static final VarHandle IViewObject$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IViewObject$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IViewObject$lpVtbl$VH() { return IViewObject$lpVtbl$VH_; }

    static final FunctionDescriptor IViewObject_RemoteDraw_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IViewObject_RemoteDraw_Proxy$FUNC() { return IViewObject_RemoteDraw_Proxy$FUNC_; }

    static final MethodHandle IViewObject_RemoteDraw_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IViewObject_RemoteDraw_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;IIJLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IViewObject_RemoteDraw_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IViewObject_RemoteDraw_Proxy$MH() { return IViewObject_RemoteDraw_Proxy$MH_; }

    static final FunctionDescriptor IViewObject_RemoteDraw_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IViewObject_RemoteDraw_Stub$FUNC() { return IViewObject_RemoteDraw_Stub$FUNC_; }

    static final MethodHandle IViewObject_RemoteDraw_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IViewObject_RemoteDraw_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IViewObject_RemoteDraw_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IViewObject_RemoteDraw_Stub$MH() { return IViewObject_RemoteDraw_Stub$MH_; }

    static final FunctionDescriptor IViewObject_RemoteGetColorSet_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IViewObject_RemoteGetColorSet_Proxy$FUNC() { return IViewObject_RemoteGetColorSet_Proxy$FUNC_; }

    static final MethodHandle IViewObject_RemoteGetColorSet_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IViewObject_RemoteGetColorSet_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;IIJLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        IViewObject_RemoteGetColorSet_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IViewObject_RemoteGetColorSet_Proxy$MH() { return IViewObject_RemoteGetColorSet_Proxy$MH_; }

    static final FunctionDescriptor IViewObject_RemoteGetColorSet_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IViewObject_RemoteGetColorSet_Stub$FUNC() { return IViewObject_RemoteGetColorSet_Stub$FUNC_; }

    static final MethodHandle IViewObject_RemoteGetColorSet_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IViewObject_RemoteGetColorSet_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IViewObject_RemoteGetColorSet_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IViewObject_RemoteGetColorSet_Stub$MH() { return IViewObject_RemoteGetColorSet_Stub$MH_; }

    static final FunctionDescriptor IViewObject_RemoteFreeze_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IViewObject_RemoteFreeze_Proxy$FUNC() { return IViewObject_RemoteFreeze_Proxy$FUNC_; }

    static final MethodHandle IViewObject_RemoteFreeze_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IViewObject_RemoteFreeze_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;IIJLjdk/incubator/foreign/MemoryAddress;)I",
        IViewObject_RemoteFreeze_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IViewObject_RemoteFreeze_Proxy$MH() { return IViewObject_RemoteFreeze_Proxy$MH_; }

    static final FunctionDescriptor IViewObject_RemoteFreeze_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IViewObject_RemoteFreeze_Stub$FUNC() { return IViewObject_RemoteFreeze_Stub$FUNC_; }

    static final MethodHandle IViewObject_RemoteFreeze_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IViewObject_RemoteFreeze_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IViewObject_RemoteFreeze_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IViewObject_RemoteFreeze_Stub$MH() { return IViewObject_RemoteFreeze_Stub$MH_; }

    static final FunctionDescriptor IViewObject_RemoteGetAdvise_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IViewObject_RemoteGetAdvise_Proxy$FUNC() { return IViewObject_RemoteGetAdvise_Proxy$FUNC_; }

    static final MethodHandle IViewObject_RemoteGetAdvise_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IViewObject_RemoteGetAdvise_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IViewObject_RemoteGetAdvise_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IViewObject_RemoteGetAdvise_Proxy$MH() { return IViewObject_RemoteGetAdvise_Proxy$MH_; }

    static final FunctionDescriptor IViewObject_RemoteGetAdvise_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IViewObject_RemoteGetAdvise_Stub$FUNC() { return IViewObject_RemoteGetAdvise_Stub$FUNC_; }

    static final MethodHandle IViewObject_RemoteGetAdvise_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IViewObject_RemoteGetAdvise_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IViewObject_RemoteGetAdvise_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IViewObject_RemoteGetAdvise_Stub$MH() { return IViewObject_RemoteGetAdvise_Stub$MH_; }

    static final MemoryLayout IID_IViewObject2$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IViewObject2$LAYOUT() { return IID_IViewObject2$LAYOUT_; }

    static final MemorySegment IID_IViewObject2$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IViewObject2", IID_IViewObject2$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IViewObject2$SEGMENT() { return IID_IViewObject2$SEGMENT_; }

    static final MemoryLayout IViewObject2Vtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Draw"),
        C_POINTER.withName("GetColorSet"),
        C_POINTER.withName("Freeze"),
        C_POINTER.withName("Unfreeze"),
        C_POINTER.withName("SetAdvise"),
        C_POINTER.withName("GetAdvise"),
        C_POINTER.withName("GetExtent")
    ).withName("IViewObject2Vtbl");
    static final jdk.incubator.foreign.MemoryLayout IViewObject2Vtbl$struct$LAYOUT() { return IViewObject2Vtbl$struct$LAYOUT_; }

    static final MemoryLayout IViewObject2Vtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObject2Vtbl$QueryInterface$LAYOUT() { return IViewObject2Vtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IViewObject2Vtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IViewObject2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IViewObject2Vtbl$QueryInterface$VH() { return IViewObject2Vtbl$QueryInterface$VH_; }

    static final MemoryLayout IViewObject2Vtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObject2Vtbl$AddRef$LAYOUT() { return IViewObject2Vtbl$AddRef$LAYOUT_; }

    static final VarHandle IViewObject2Vtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IViewObject2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IViewObject2Vtbl$AddRef$VH() { return IViewObject2Vtbl$AddRef$VH_; }

    static final MemoryLayout IViewObject2Vtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObject2Vtbl$Release$LAYOUT() { return IViewObject2Vtbl$Release$LAYOUT_; }

    static final VarHandle IViewObject2Vtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IViewObject2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IViewObject2Vtbl$Release$VH() { return IViewObject2Vtbl$Release$VH_; }

    static final MemoryLayout IViewObject2Vtbl$Draw$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObject2Vtbl$Draw$LAYOUT() { return IViewObject2Vtbl$Draw$LAYOUT_; }

    static final VarHandle IViewObject2Vtbl$Draw$VH_ = MemoryHandles.asAddressVarHandle(IViewObject2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Draw")));
    static final java.lang.invoke.VarHandle IViewObject2Vtbl$Draw$VH() { return IViewObject2Vtbl$Draw$VH_; }

    static final MemoryLayout IViewObject2Vtbl$GetColorSet$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObject2Vtbl$GetColorSet$LAYOUT() { return IViewObject2Vtbl$GetColorSet$LAYOUT_; }

    static final VarHandle IViewObject2Vtbl$GetColorSet$VH_ = MemoryHandles.asAddressVarHandle(IViewObject2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetColorSet")));
    static final java.lang.invoke.VarHandle IViewObject2Vtbl$GetColorSet$VH() { return IViewObject2Vtbl$GetColorSet$VH_; }

    static final MemoryLayout IViewObject2Vtbl$Freeze$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObject2Vtbl$Freeze$LAYOUT() { return IViewObject2Vtbl$Freeze$LAYOUT_; }

    static final VarHandle IViewObject2Vtbl$Freeze$VH_ = MemoryHandles.asAddressVarHandle(IViewObject2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Freeze")));
    static final java.lang.invoke.VarHandle IViewObject2Vtbl$Freeze$VH() { return IViewObject2Vtbl$Freeze$VH_; }

    static final MemoryLayout IViewObject2Vtbl$Unfreeze$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObject2Vtbl$Unfreeze$LAYOUT() { return IViewObject2Vtbl$Unfreeze$LAYOUT_; }

    static final VarHandle IViewObject2Vtbl$Unfreeze$VH_ = MemoryHandles.asAddressVarHandle(IViewObject2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Unfreeze")));
    static final java.lang.invoke.VarHandle IViewObject2Vtbl$Unfreeze$VH() { return IViewObject2Vtbl$Unfreeze$VH_; }

    static final MemoryLayout IViewObject2Vtbl$SetAdvise$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObject2Vtbl$SetAdvise$LAYOUT() { return IViewObject2Vtbl$SetAdvise$LAYOUT_; }

    static final VarHandle IViewObject2Vtbl$SetAdvise$VH_ = MemoryHandles.asAddressVarHandle(IViewObject2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetAdvise")));
    static final java.lang.invoke.VarHandle IViewObject2Vtbl$SetAdvise$VH() { return IViewObject2Vtbl$SetAdvise$VH_; }

    static final MemoryLayout IViewObject2Vtbl$GetAdvise$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObject2Vtbl$GetAdvise$LAYOUT() { return IViewObject2Vtbl$GetAdvise$LAYOUT_; }

    static final VarHandle IViewObject2Vtbl$GetAdvise$VH_ = MemoryHandles.asAddressVarHandle(IViewObject2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetAdvise")));
    static final java.lang.invoke.VarHandle IViewObject2Vtbl$GetAdvise$VH() { return IViewObject2Vtbl$GetAdvise$VH_; }

    static final MemoryLayout IViewObject2Vtbl$GetExtent$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObject2Vtbl$GetExtent$LAYOUT() { return IViewObject2Vtbl$GetExtent$LAYOUT_; }

    static final VarHandle IViewObject2Vtbl$GetExtent$VH_ = MemoryHandles.asAddressVarHandle(IViewObject2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetExtent")));
    static final java.lang.invoke.VarHandle IViewObject2Vtbl$GetExtent$VH() { return IViewObject2Vtbl$GetExtent$VH_; }

    static final MemoryLayout IViewObject2$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IViewObject2");
    static final jdk.incubator.foreign.MemoryLayout IViewObject2$struct$LAYOUT() { return IViewObject2$struct$LAYOUT_; }

    static final MemoryLayout IViewObject2$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IViewObject2$lpVtbl$LAYOUT() { return IViewObject2$lpVtbl$LAYOUT_; }

    static final VarHandle IViewObject2$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IViewObject2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IViewObject2$lpVtbl$VH() { return IViewObject2$lpVtbl$VH_; }

    static final MemoryLayout IID_IDropSource$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IDropSource$LAYOUT() { return IID_IDropSource$LAYOUT_; }

    static final MemorySegment IID_IDropSource$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IDropSource", IID_IDropSource$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IDropSource$SEGMENT() { return IID_IDropSource$SEGMENT_; }

    static final MemoryLayout IDropSourceVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("QueryContinueDrag"),
        C_POINTER.withName("GiveFeedback")
    ).withName("IDropSourceVtbl");
    static final jdk.incubator.foreign.MemoryLayout IDropSourceVtbl$struct$LAYOUT() { return IDropSourceVtbl$struct$LAYOUT_; }

    static final MemoryLayout IDropSourceVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDropSourceVtbl$QueryInterface$LAYOUT() { return IDropSourceVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IDropSourceVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IDropSourceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IDropSourceVtbl$QueryInterface$VH() { return IDropSourceVtbl$QueryInterface$VH_; }

    static final MemoryLayout IDropSourceVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDropSourceVtbl$AddRef$LAYOUT() { return IDropSourceVtbl$AddRef$LAYOUT_; }

    static final VarHandle IDropSourceVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IDropSourceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IDropSourceVtbl$AddRef$VH() { return IDropSourceVtbl$AddRef$VH_; }

    static final MemoryLayout IDropSourceVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDropSourceVtbl$Release$LAYOUT() { return IDropSourceVtbl$Release$LAYOUT_; }

    static final VarHandle IDropSourceVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IDropSourceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IDropSourceVtbl$Release$VH() { return IDropSourceVtbl$Release$VH_; }

    static final MemoryLayout IDropSourceVtbl$QueryContinueDrag$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDropSourceVtbl$QueryContinueDrag$LAYOUT() { return IDropSourceVtbl$QueryContinueDrag$LAYOUT_; }

    static final VarHandle IDropSourceVtbl$QueryContinueDrag$VH_ = MemoryHandles.asAddressVarHandle(IDropSourceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryContinueDrag")));
    static final java.lang.invoke.VarHandle IDropSourceVtbl$QueryContinueDrag$VH() { return IDropSourceVtbl$QueryContinueDrag$VH_; }

    static final MemoryLayout IDropSourceVtbl$GiveFeedback$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDropSourceVtbl$GiveFeedback$LAYOUT() { return IDropSourceVtbl$GiveFeedback$LAYOUT_; }

    static final VarHandle IDropSourceVtbl$GiveFeedback$VH_ = MemoryHandles.asAddressVarHandle(IDropSourceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GiveFeedback")));
    static final java.lang.invoke.VarHandle IDropSourceVtbl$GiveFeedback$VH() { return IDropSourceVtbl$GiveFeedback$VH_; }

    static final MemoryLayout IDropSource$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IDropSource");
    static final jdk.incubator.foreign.MemoryLayout IDropSource$struct$LAYOUT() { return IDropSource$struct$LAYOUT_; }

    static final MemoryLayout IDropSource$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDropSource$lpVtbl$LAYOUT() { return IDropSource$lpVtbl$LAYOUT_; }

    static final VarHandle IDropSource$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IDropSource$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IDropSource$lpVtbl$VH() { return IDropSource$lpVtbl$VH_; }

    static final MemoryLayout IID_IDropTarget$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IDropTarget$LAYOUT() { return IID_IDropTarget$LAYOUT_; }

    static final MemorySegment IID_IDropTarget$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IDropTarget", IID_IDropTarget$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IDropTarget$SEGMENT() { return IID_IDropTarget$SEGMENT_; }

    static final MemoryLayout IDropTargetVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("DragEnter"),
        C_POINTER.withName("DragOver"),
        C_POINTER.withName("DragLeave"),
        C_POINTER.withName("Drop")
    ).withName("IDropTargetVtbl");
    static final jdk.incubator.foreign.MemoryLayout IDropTargetVtbl$struct$LAYOUT() { return IDropTargetVtbl$struct$LAYOUT_; }

    static final MemoryLayout IDropTargetVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDropTargetVtbl$QueryInterface$LAYOUT() { return IDropTargetVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IDropTargetVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IDropTargetVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IDropTargetVtbl$QueryInterface$VH() { return IDropTargetVtbl$QueryInterface$VH_; }

    static final MemoryLayout IDropTargetVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDropTargetVtbl$AddRef$LAYOUT() { return IDropTargetVtbl$AddRef$LAYOUT_; }

    static final VarHandle IDropTargetVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IDropTargetVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IDropTargetVtbl$AddRef$VH() { return IDropTargetVtbl$AddRef$VH_; }

    static final MemoryLayout IDropTargetVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDropTargetVtbl$Release$LAYOUT() { return IDropTargetVtbl$Release$LAYOUT_; }

    static final VarHandle IDropTargetVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IDropTargetVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IDropTargetVtbl$Release$VH() { return IDropTargetVtbl$Release$VH_; }

    static final MemoryLayout IDropTargetVtbl$DragEnter$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDropTargetVtbl$DragEnter$LAYOUT() { return IDropTargetVtbl$DragEnter$LAYOUT_; }

    static final VarHandle IDropTargetVtbl$DragEnter$VH_ = MemoryHandles.asAddressVarHandle(IDropTargetVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DragEnter")));
    static final java.lang.invoke.VarHandle IDropTargetVtbl$DragEnter$VH() { return IDropTargetVtbl$DragEnter$VH_; }

    static final MemoryLayout IDropTargetVtbl$DragOver$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDropTargetVtbl$DragOver$LAYOUT() { return IDropTargetVtbl$DragOver$LAYOUT_; }

    static final VarHandle IDropTargetVtbl$DragOver$VH_ = MemoryHandles.asAddressVarHandle(IDropTargetVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DragOver")));
    static final java.lang.invoke.VarHandle IDropTargetVtbl$DragOver$VH() { return IDropTargetVtbl$DragOver$VH_; }

    static final MemoryLayout IDropTargetVtbl$DragLeave$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDropTargetVtbl$DragLeave$LAYOUT() { return IDropTargetVtbl$DragLeave$LAYOUT_; }

    static final VarHandle IDropTargetVtbl$DragLeave$VH_ = MemoryHandles.asAddressVarHandle(IDropTargetVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DragLeave")));
    static final java.lang.invoke.VarHandle IDropTargetVtbl$DragLeave$VH() { return IDropTargetVtbl$DragLeave$VH_; }

    static final MemoryLayout IDropTargetVtbl$Drop$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDropTargetVtbl$Drop$LAYOUT() { return IDropTargetVtbl$Drop$LAYOUT_; }

    static final VarHandle IDropTargetVtbl$Drop$VH_ = MemoryHandles.asAddressVarHandle(IDropTargetVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Drop")));
    static final java.lang.invoke.VarHandle IDropTargetVtbl$Drop$VH() { return IDropTargetVtbl$Drop$VH_; }

    static final MemoryLayout IDropTarget$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IDropTarget");
    static final jdk.incubator.foreign.MemoryLayout IDropTarget$struct$LAYOUT() { return IDropTarget$struct$LAYOUT_; }

    static final MemoryLayout IDropTarget$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDropTarget$lpVtbl$LAYOUT() { return IDropTarget$lpVtbl$LAYOUT_; }

    static final VarHandle IDropTarget$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IDropTarget$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IDropTarget$lpVtbl$VH() { return IDropTarget$lpVtbl$VH_; }

    static final MemoryLayout IID_IDropSourceNotify$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IDropSourceNotify$LAYOUT() { return IID_IDropSourceNotify$LAYOUT_; }

    static final MemorySegment IID_IDropSourceNotify$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IDropSourceNotify", IID_IDropSourceNotify$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IDropSourceNotify$SEGMENT() { return IID_IDropSourceNotify$SEGMENT_; }

    static final MemoryLayout IDropSourceNotifyVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("DragEnterTarget"),
        C_POINTER.withName("DragLeaveTarget")
    ).withName("IDropSourceNotifyVtbl");
    static final jdk.incubator.foreign.MemoryLayout IDropSourceNotifyVtbl$struct$LAYOUT() { return IDropSourceNotifyVtbl$struct$LAYOUT_; }

    static final MemoryLayout IDropSourceNotifyVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDropSourceNotifyVtbl$QueryInterface$LAYOUT() { return IDropSourceNotifyVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IDropSourceNotifyVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IDropSourceNotifyVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IDropSourceNotifyVtbl$QueryInterface$VH() { return IDropSourceNotifyVtbl$QueryInterface$VH_; }

    static final MemoryLayout IDropSourceNotifyVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDropSourceNotifyVtbl$AddRef$LAYOUT() { return IDropSourceNotifyVtbl$AddRef$LAYOUT_; }

    static final VarHandle IDropSourceNotifyVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IDropSourceNotifyVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IDropSourceNotifyVtbl$AddRef$VH() { return IDropSourceNotifyVtbl$AddRef$VH_; }

    static final MemoryLayout IDropSourceNotifyVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDropSourceNotifyVtbl$Release$LAYOUT() { return IDropSourceNotifyVtbl$Release$LAYOUT_; }

    static final VarHandle IDropSourceNotifyVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IDropSourceNotifyVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IDropSourceNotifyVtbl$Release$VH() { return IDropSourceNotifyVtbl$Release$VH_; }

    static final MemoryLayout IDropSourceNotifyVtbl$DragEnterTarget$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDropSourceNotifyVtbl$DragEnterTarget$LAYOUT() { return IDropSourceNotifyVtbl$DragEnterTarget$LAYOUT_; }

    static final VarHandle IDropSourceNotifyVtbl$DragEnterTarget$VH_ = MemoryHandles.asAddressVarHandle(IDropSourceNotifyVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DragEnterTarget")));
    static final java.lang.invoke.VarHandle IDropSourceNotifyVtbl$DragEnterTarget$VH() { return IDropSourceNotifyVtbl$DragEnterTarget$VH_; }

    static final MemoryLayout IDropSourceNotifyVtbl$DragLeaveTarget$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDropSourceNotifyVtbl$DragLeaveTarget$LAYOUT() { return IDropSourceNotifyVtbl$DragLeaveTarget$LAYOUT_; }

    static final VarHandle IDropSourceNotifyVtbl$DragLeaveTarget$VH_ = MemoryHandles.asAddressVarHandle(IDropSourceNotifyVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DragLeaveTarget")));
    static final java.lang.invoke.VarHandle IDropSourceNotifyVtbl$DragLeaveTarget$VH() { return IDropSourceNotifyVtbl$DragLeaveTarget$VH_; }

    static final MemoryLayout IDropSourceNotify$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IDropSourceNotify");
    static final jdk.incubator.foreign.MemoryLayout IDropSourceNotify$struct$LAYOUT() { return IDropSourceNotify$struct$LAYOUT_; }

    static final MemoryLayout IDropSourceNotify$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDropSourceNotify$lpVtbl$LAYOUT() { return IDropSourceNotify$lpVtbl$LAYOUT_; }

    static final VarHandle IDropSourceNotify$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IDropSourceNotify$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IDropSourceNotify$lpVtbl$VH() { return IDropSourceNotify$lpVtbl$VH_; }

    static final MemoryLayout IID_IEnterpriseDropTarget$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IEnterpriseDropTarget$LAYOUT() { return IID_IEnterpriseDropTarget$LAYOUT_; }

    static final MemorySegment IID_IEnterpriseDropTarget$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IEnterpriseDropTarget", IID_IEnterpriseDropTarget$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IEnterpriseDropTarget$SEGMENT() { return IID_IEnterpriseDropTarget$SEGMENT_; }

    static final MemoryLayout IEnterpriseDropTargetVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("SetDropSourceEnterpriseId"),
        C_POINTER.withName("IsEvaluatingEdpPolicy")
    ).withName("IEnterpriseDropTargetVtbl");
    static final jdk.incubator.foreign.MemoryLayout IEnterpriseDropTargetVtbl$struct$LAYOUT() { return IEnterpriseDropTargetVtbl$struct$LAYOUT_; }

    static final MemoryLayout IEnterpriseDropTargetVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnterpriseDropTargetVtbl$QueryInterface$LAYOUT() { return IEnterpriseDropTargetVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IEnterpriseDropTargetVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IEnterpriseDropTargetVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IEnterpriseDropTargetVtbl$QueryInterface$VH() { return IEnterpriseDropTargetVtbl$QueryInterface$VH_; }

    static final MemoryLayout IEnterpriseDropTargetVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnterpriseDropTargetVtbl$AddRef$LAYOUT() { return IEnterpriseDropTargetVtbl$AddRef$LAYOUT_; }

    static final VarHandle IEnterpriseDropTargetVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IEnterpriseDropTargetVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IEnterpriseDropTargetVtbl$AddRef$VH() { return IEnterpriseDropTargetVtbl$AddRef$VH_; }

    static final MemoryLayout IEnterpriseDropTargetVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnterpriseDropTargetVtbl$Release$LAYOUT() { return IEnterpriseDropTargetVtbl$Release$LAYOUT_; }

    static final VarHandle IEnterpriseDropTargetVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IEnterpriseDropTargetVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IEnterpriseDropTargetVtbl$Release$VH() { return IEnterpriseDropTargetVtbl$Release$VH_; }

    static final MemoryLayout IEnterpriseDropTargetVtbl$SetDropSourceEnterpriseId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnterpriseDropTargetVtbl$SetDropSourceEnterpriseId$LAYOUT() { return IEnterpriseDropTargetVtbl$SetDropSourceEnterpriseId$LAYOUT_; }

    static final VarHandle IEnterpriseDropTargetVtbl$SetDropSourceEnterpriseId$VH_ = MemoryHandles.asAddressVarHandle(IEnterpriseDropTargetVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetDropSourceEnterpriseId")));
    static final java.lang.invoke.VarHandle IEnterpriseDropTargetVtbl$SetDropSourceEnterpriseId$VH() { return IEnterpriseDropTargetVtbl$SetDropSourceEnterpriseId$VH_; }

    static final MemoryLayout IEnterpriseDropTargetVtbl$IsEvaluatingEdpPolicy$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnterpriseDropTargetVtbl$IsEvaluatingEdpPolicy$LAYOUT() { return IEnterpriseDropTargetVtbl$IsEvaluatingEdpPolicy$LAYOUT_; }

    static final VarHandle IEnterpriseDropTargetVtbl$IsEvaluatingEdpPolicy$VH_ = MemoryHandles.asAddressVarHandle(IEnterpriseDropTargetVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IsEvaluatingEdpPolicy")));
    static final java.lang.invoke.VarHandle IEnterpriseDropTargetVtbl$IsEvaluatingEdpPolicy$VH() { return IEnterpriseDropTargetVtbl$IsEvaluatingEdpPolicy$VH_; }

    static final MemoryLayout IEnterpriseDropTarget$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IEnterpriseDropTarget");
    static final jdk.incubator.foreign.MemoryLayout IEnterpriseDropTarget$struct$LAYOUT() { return IEnterpriseDropTarget$struct$LAYOUT_; }

    static final MemoryLayout IEnterpriseDropTarget$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnterpriseDropTarget$lpVtbl$LAYOUT() { return IEnterpriseDropTarget$lpVtbl$LAYOUT_; }

    static final VarHandle IEnterpriseDropTarget$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IEnterpriseDropTarget$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IEnterpriseDropTarget$lpVtbl$VH() { return IEnterpriseDropTarget$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_oleidl_0000_0024_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_oleidl_0000_0024_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_oleidl_0000_0024_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_oleidl_0000_0024_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_oleidl_0000_0024_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_oleidl_0000_0024_v0_0_c_ifspec$VH() { return __MIDL_itf_oleidl_0000_0024_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_oleidl_0000_0024_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_oleidl_0000_0024_v0_0_c_ifspec", __MIDL_itf_oleidl_0000_0024_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_oleidl_0000_0024_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_oleidl_0000_0024_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_oleidl_0000_0024_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_oleidl_0000_0024_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_oleidl_0000_0024_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_oleidl_0000_0024_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_oleidl_0000_0024_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_oleidl_0000_0024_v0_0_s_ifspec$VH() { return __MIDL_itf_oleidl_0000_0024_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_oleidl_0000_0024_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_oleidl_0000_0024_v0_0_s_ifspec", __MIDL_itf_oleidl_0000_0024_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_oleidl_0000_0024_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_oleidl_0000_0024_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout tagOLEVERB$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("lVerb"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpszVerbName"),
        C_LONG.withName("fuFlags"),
        C_LONG.withName("grfAttribs")
    ).withName("tagOLEVERB");
    static final jdk.incubator.foreign.MemoryLayout tagOLEVERB$struct$LAYOUT() { return tagOLEVERB$struct$LAYOUT_; }

    static final MemoryLayout tagOLEVERB$lVerb$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagOLEVERB$lVerb$LAYOUT() { return tagOLEVERB$lVerb$LAYOUT_; }

    static final VarHandle tagOLEVERB$lVerb$VH_ = tagOLEVERB$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lVerb"));
    static final java.lang.invoke.VarHandle tagOLEVERB$lVerb$VH() { return tagOLEVERB$lVerb$VH_; }

    static final MemoryLayout tagOLEVERB$lpszVerbName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagOLEVERB$lpszVerbName$LAYOUT() { return tagOLEVERB$lpszVerbName$LAYOUT_; }

    static final VarHandle tagOLEVERB$lpszVerbName$VH_ = MemoryHandles.asAddressVarHandle(tagOLEVERB$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszVerbName")));
    static final java.lang.invoke.VarHandle tagOLEVERB$lpszVerbName$VH() { return tagOLEVERB$lpszVerbName$VH_; }

    static final MemoryLayout tagOLEVERB$fuFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagOLEVERB$fuFlags$LAYOUT() { return tagOLEVERB$fuFlags$LAYOUT_; }

    static final VarHandle tagOLEVERB$fuFlags$VH_ = tagOLEVERB$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fuFlags"));
    static final java.lang.invoke.VarHandle tagOLEVERB$fuFlags$VH() { return tagOLEVERB$fuFlags$VH_; }

    static final MemoryLayout tagOLEVERB$grfAttribs$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagOLEVERB$grfAttribs$LAYOUT() { return tagOLEVERB$grfAttribs$LAYOUT_; }

    static final VarHandle tagOLEVERB$grfAttribs$VH_ = tagOLEVERB$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("grfAttribs"));
    static final java.lang.invoke.VarHandle tagOLEVERB$grfAttribs$VH() { return tagOLEVERB$grfAttribs$VH_; }

    static final int OLEVERBATTRIB_NEVERDIRTIES() { return (int)1L; }

    static final int OLEVERBATTRIB_ONCONTAINERMENU() { return (int)2L; }

    static final MemoryLayout IID_IEnumOLEVERB$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IEnumOLEVERB$LAYOUT() { return IID_IEnumOLEVERB$LAYOUT_; }

    static final MemorySegment IID_IEnumOLEVERB$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IEnumOLEVERB", IID_IEnumOLEVERB$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IEnumOLEVERB$SEGMENT() { return IID_IEnumOLEVERB$SEGMENT_; }

    static final MemoryLayout IEnumOLEVERBVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Next"),
        C_POINTER.withName("Skip"),
        C_POINTER.withName("Reset"),
        C_POINTER.withName("Clone")
    ).withName("IEnumOLEVERBVtbl");
    static final jdk.incubator.foreign.MemoryLayout IEnumOLEVERBVtbl$struct$LAYOUT() { return IEnumOLEVERBVtbl$struct$LAYOUT_; }

    static final MemoryLayout IEnumOLEVERBVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumOLEVERBVtbl$QueryInterface$LAYOUT() { return IEnumOLEVERBVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IEnumOLEVERBVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IEnumOLEVERBVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IEnumOLEVERBVtbl$QueryInterface$VH() { return IEnumOLEVERBVtbl$QueryInterface$VH_; }

    static final MemoryLayout IEnumOLEVERBVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumOLEVERBVtbl$AddRef$LAYOUT() { return IEnumOLEVERBVtbl$AddRef$LAYOUT_; }

    static final VarHandle IEnumOLEVERBVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IEnumOLEVERBVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IEnumOLEVERBVtbl$AddRef$VH() { return IEnumOLEVERBVtbl$AddRef$VH_; }

    static final MemoryLayout IEnumOLEVERBVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumOLEVERBVtbl$Release$LAYOUT() { return IEnumOLEVERBVtbl$Release$LAYOUT_; }

    static final VarHandle IEnumOLEVERBVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IEnumOLEVERBVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IEnumOLEVERBVtbl$Release$VH() { return IEnumOLEVERBVtbl$Release$VH_; }

    static final MemoryLayout IEnumOLEVERBVtbl$Next$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumOLEVERBVtbl$Next$LAYOUT() { return IEnumOLEVERBVtbl$Next$LAYOUT_; }

    static final VarHandle IEnumOLEVERBVtbl$Next$VH_ = MemoryHandles.asAddressVarHandle(IEnumOLEVERBVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Next")));
    static final java.lang.invoke.VarHandle IEnumOLEVERBVtbl$Next$VH() { return IEnumOLEVERBVtbl$Next$VH_; }

    static final MemoryLayout IEnumOLEVERBVtbl$Skip$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumOLEVERBVtbl$Skip$LAYOUT() { return IEnumOLEVERBVtbl$Skip$LAYOUT_; }

    static final VarHandle IEnumOLEVERBVtbl$Skip$VH_ = MemoryHandles.asAddressVarHandle(IEnumOLEVERBVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Skip")));
    static final java.lang.invoke.VarHandle IEnumOLEVERBVtbl$Skip$VH() { return IEnumOLEVERBVtbl$Skip$VH_; }

    static final MemoryLayout IEnumOLEVERBVtbl$Reset$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumOLEVERBVtbl$Reset$LAYOUT() { return IEnumOLEVERBVtbl$Reset$LAYOUT_; }

    static final VarHandle IEnumOLEVERBVtbl$Reset$VH_ = MemoryHandles.asAddressVarHandle(IEnumOLEVERBVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Reset")));
    static final java.lang.invoke.VarHandle IEnumOLEVERBVtbl$Reset$VH() { return IEnumOLEVERBVtbl$Reset$VH_; }

    static final MemoryLayout IEnumOLEVERBVtbl$Clone$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumOLEVERBVtbl$Clone$LAYOUT() { return IEnumOLEVERBVtbl$Clone$LAYOUT_; }

    static final VarHandle IEnumOLEVERBVtbl$Clone$VH_ = MemoryHandles.asAddressVarHandle(IEnumOLEVERBVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Clone")));
    static final java.lang.invoke.VarHandle IEnumOLEVERBVtbl$Clone$VH() { return IEnumOLEVERBVtbl$Clone$VH_; }

    static final MemoryLayout IEnumOLEVERB$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IEnumOLEVERB");
    static final jdk.incubator.foreign.MemoryLayout IEnumOLEVERB$struct$LAYOUT() { return IEnumOLEVERB$struct$LAYOUT_; }

    static final MemoryLayout IEnumOLEVERB$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumOLEVERB$lpVtbl$LAYOUT() { return IEnumOLEVERB$lpVtbl$LAYOUT_; }

    static final VarHandle IEnumOLEVERB$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IEnumOLEVERB$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IEnumOLEVERB$lpVtbl$VH() { return IEnumOLEVERB$lpVtbl$VH_; }

    static final FunctionDescriptor IEnumOLEVERB_RemoteNext_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumOLEVERB_RemoteNext_Proxy$FUNC() { return IEnumOLEVERB_RemoteNext_Proxy$FUNC_; }

    static final MethodHandle IEnumOLEVERB_RemoteNext_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumOLEVERB_RemoteNext_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IEnumOLEVERB_RemoteNext_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumOLEVERB_RemoteNext_Proxy$MH() { return IEnumOLEVERB_RemoteNext_Proxy$MH_; }

    static final FunctionDescriptor IEnumOLEVERB_RemoteNext_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumOLEVERB_RemoteNext_Stub$FUNC() { return IEnumOLEVERB_RemoteNext_Stub$FUNC_; }

    static final MethodHandle IEnumOLEVERB_RemoteNext_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumOLEVERB_RemoteNext_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IEnumOLEVERB_RemoteNext_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumOLEVERB_RemoteNext_Stub$MH() { return IEnumOLEVERB_RemoteNext_Stub$MH_; }

    static final MemoryLayout __MIDL_itf_oleidl_0000_0025_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_oleidl_0000_0025_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_oleidl_0000_0025_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_oleidl_0000_0025_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_oleidl_0000_0025_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_oleidl_0000_0025_v0_0_c_ifspec$VH() { return __MIDL_itf_oleidl_0000_0025_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_oleidl_0000_0025_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_oleidl_0000_0025_v0_0_c_ifspec", __MIDL_itf_oleidl_0000_0025_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_oleidl_0000_0025_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_oleidl_0000_0025_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_oleidl_0000_0025_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_oleidl_0000_0025_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_oleidl_0000_0025_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_oleidl_0000_0025_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_oleidl_0000_0025_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_oleidl_0000_0025_v0_0_s_ifspec$VH() { return __MIDL_itf_oleidl_0000_0025_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_oleidl_0000_0025_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_oleidl_0000_0025_v0_0_s_ifspec", __MIDL_itf_oleidl_0000_0025_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_oleidl_0000_0025_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_oleidl_0000_0025_v0_0_s_ifspec$SEGMENT_; }

    static final FunctionDescriptor HACCEL_UserSize$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HACCEL_UserSize$FUNC() { return HACCEL_UserSize$FUNC_; }

    static final MethodHandle HACCEL_UserSize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HACCEL_UserSize",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        HACCEL_UserSize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HACCEL_UserSize$MH() { return HACCEL_UserSize$MH_; }

    static final FunctionDescriptor HACCEL_UserMarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HACCEL_UserMarshal$FUNC() { return HACCEL_UserMarshal$FUNC_; }

    static final MethodHandle HACCEL_UserMarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HACCEL_UserMarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HACCEL_UserMarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HACCEL_UserMarshal$MH() { return HACCEL_UserMarshal$MH_; }

    static final FunctionDescriptor HACCEL_UserUnmarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HACCEL_UserUnmarshal$FUNC() { return HACCEL_UserUnmarshal$FUNC_; }

    static final MethodHandle HACCEL_UserUnmarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HACCEL_UserUnmarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HACCEL_UserUnmarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HACCEL_UserUnmarshal$MH() { return HACCEL_UserUnmarshal$MH_; }

    static final FunctionDescriptor HACCEL_UserFree$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HACCEL_UserFree$FUNC() { return HACCEL_UserFree$FUNC_; }

    static final MethodHandle HACCEL_UserFree$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HACCEL_UserFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        HACCEL_UserFree$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HACCEL_UserFree$MH() { return HACCEL_UserFree$MH_; }

    static final FunctionDescriptor HGLOBAL_UserSize$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HGLOBAL_UserSize$FUNC() { return HGLOBAL_UserSize$FUNC_; }

    static final MethodHandle HGLOBAL_UserSize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HGLOBAL_UserSize",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        HGLOBAL_UserSize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HGLOBAL_UserSize$MH() { return HGLOBAL_UserSize$MH_; }

    static final FunctionDescriptor HGLOBAL_UserMarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HGLOBAL_UserMarshal$FUNC() { return HGLOBAL_UserMarshal$FUNC_; }

    static final MethodHandle HGLOBAL_UserMarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HGLOBAL_UserMarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HGLOBAL_UserMarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HGLOBAL_UserMarshal$MH() { return HGLOBAL_UserMarshal$MH_; }

    static final FunctionDescriptor HGLOBAL_UserUnmarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HGLOBAL_UserUnmarshal$FUNC() { return HGLOBAL_UserUnmarshal$FUNC_; }

    static final MethodHandle HGLOBAL_UserUnmarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HGLOBAL_UserUnmarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HGLOBAL_UserUnmarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HGLOBAL_UserUnmarshal$MH() { return HGLOBAL_UserUnmarshal$MH_; }

    static final FunctionDescriptor HGLOBAL_UserFree$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HGLOBAL_UserFree$FUNC() { return HGLOBAL_UserFree$FUNC_; }

    static final MethodHandle HGLOBAL_UserFree$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HGLOBAL_UserFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        HGLOBAL_UserFree$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HGLOBAL_UserFree$MH() { return HGLOBAL_UserFree$MH_; }

    static final FunctionDescriptor HMENU_UserSize$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HMENU_UserSize$FUNC() { return HMENU_UserSize$FUNC_; }

    static final MethodHandle HMENU_UserSize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HMENU_UserSize",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        HMENU_UserSize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HMENU_UserSize$MH() { return HMENU_UserSize$MH_; }

    static final FunctionDescriptor HMENU_UserMarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HMENU_UserMarshal$FUNC() { return HMENU_UserMarshal$FUNC_; }

    static final MethodHandle HMENU_UserMarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HMENU_UserMarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HMENU_UserMarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HMENU_UserMarshal$MH() { return HMENU_UserMarshal$MH_; }

    static final FunctionDescriptor HMENU_UserUnmarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HMENU_UserUnmarshal$FUNC() { return HMENU_UserUnmarshal$FUNC_; }

    static final MethodHandle HMENU_UserUnmarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HMENU_UserUnmarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HMENU_UserUnmarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HMENU_UserUnmarshal$MH() { return HMENU_UserUnmarshal$MH_; }

    static final FunctionDescriptor HMENU_UserFree$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HMENU_UserFree$FUNC() { return HMENU_UserFree$FUNC_; }

    static final MethodHandle HMENU_UserFree$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HMENU_UserFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        HMENU_UserFree$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HMENU_UserFree$MH() { return HMENU_UserFree$MH_; }

    static final FunctionDescriptor HWND_UserSize$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HWND_UserSize$FUNC() { return HWND_UserSize$FUNC_; }

    static final MethodHandle HWND_UserSize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HWND_UserSize",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        HWND_UserSize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HWND_UserSize$MH() { return HWND_UserSize$MH_; }

    static final FunctionDescriptor HWND_UserMarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HWND_UserMarshal$FUNC() { return HWND_UserMarshal$FUNC_; }

    static final MethodHandle HWND_UserMarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HWND_UserMarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HWND_UserMarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HWND_UserMarshal$MH() { return HWND_UserMarshal$MH_; }

    static final FunctionDescriptor HWND_UserUnmarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HWND_UserUnmarshal$FUNC() { return HWND_UserUnmarshal$FUNC_; }

    static final MethodHandle HWND_UserUnmarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HWND_UserUnmarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HWND_UserUnmarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HWND_UserUnmarshal$MH() { return HWND_UserUnmarshal$MH_; }

    static final FunctionDescriptor HWND_UserFree$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HWND_UserFree$FUNC() { return HWND_UserFree$FUNC_; }

    static final MethodHandle HWND_UserFree$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HWND_UserFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        HWND_UserFree$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HWND_UserFree$MH() { return HWND_UserFree$MH_; }

    static final FunctionDescriptor HACCEL_UserSize64$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HACCEL_UserSize64$FUNC() { return HACCEL_UserSize64$FUNC_; }

    static final MethodHandle HACCEL_UserSize64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HACCEL_UserSize64",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        HACCEL_UserSize64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HACCEL_UserSize64$MH() { return HACCEL_UserSize64$MH_; }

    static final FunctionDescriptor HACCEL_UserMarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HACCEL_UserMarshal64$FUNC() { return HACCEL_UserMarshal64$FUNC_; }

    static final MethodHandle HACCEL_UserMarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HACCEL_UserMarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HACCEL_UserMarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HACCEL_UserMarshal64$MH() { return HACCEL_UserMarshal64$MH_; }

    static final FunctionDescriptor HACCEL_UserUnmarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HACCEL_UserUnmarshal64$FUNC() { return HACCEL_UserUnmarshal64$FUNC_; }

    static final MethodHandle HACCEL_UserUnmarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HACCEL_UserUnmarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HACCEL_UserUnmarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HACCEL_UserUnmarshal64$MH() { return HACCEL_UserUnmarshal64$MH_; }

    static final FunctionDescriptor HACCEL_UserFree64$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HACCEL_UserFree64$FUNC() { return HACCEL_UserFree64$FUNC_; }

    static final MethodHandle HACCEL_UserFree64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HACCEL_UserFree64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        HACCEL_UserFree64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HACCEL_UserFree64$MH() { return HACCEL_UserFree64$MH_; }

    static final FunctionDescriptor HGLOBAL_UserSize64$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HGLOBAL_UserSize64$FUNC() { return HGLOBAL_UserSize64$FUNC_; }

    static final MethodHandle HGLOBAL_UserSize64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HGLOBAL_UserSize64",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        HGLOBAL_UserSize64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HGLOBAL_UserSize64$MH() { return HGLOBAL_UserSize64$MH_; }

    static final FunctionDescriptor HGLOBAL_UserMarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HGLOBAL_UserMarshal64$FUNC() { return HGLOBAL_UserMarshal64$FUNC_; }

    static final MethodHandle HGLOBAL_UserMarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HGLOBAL_UserMarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HGLOBAL_UserMarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HGLOBAL_UserMarshal64$MH() { return HGLOBAL_UserMarshal64$MH_; }

    static final FunctionDescriptor HGLOBAL_UserUnmarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HGLOBAL_UserUnmarshal64$FUNC() { return HGLOBAL_UserUnmarshal64$FUNC_; }

    static final MethodHandle HGLOBAL_UserUnmarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HGLOBAL_UserUnmarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HGLOBAL_UserUnmarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HGLOBAL_UserUnmarshal64$MH() { return HGLOBAL_UserUnmarshal64$MH_; }

    static final FunctionDescriptor HGLOBAL_UserFree64$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HGLOBAL_UserFree64$FUNC() { return HGLOBAL_UserFree64$FUNC_; }

    static final MethodHandle HGLOBAL_UserFree64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HGLOBAL_UserFree64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        HGLOBAL_UserFree64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HGLOBAL_UserFree64$MH() { return HGLOBAL_UserFree64$MH_; }

    static final FunctionDescriptor HMENU_UserSize64$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HMENU_UserSize64$FUNC() { return HMENU_UserSize64$FUNC_; }

    static final MethodHandle HMENU_UserSize64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HMENU_UserSize64",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        HMENU_UserSize64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HMENU_UserSize64$MH() { return HMENU_UserSize64$MH_; }

    static final FunctionDescriptor HMENU_UserMarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HMENU_UserMarshal64$FUNC() { return HMENU_UserMarshal64$FUNC_; }

    static final MethodHandle HMENU_UserMarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HMENU_UserMarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HMENU_UserMarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HMENU_UserMarshal64$MH() { return HMENU_UserMarshal64$MH_; }

    static final FunctionDescriptor HMENU_UserUnmarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HMENU_UserUnmarshal64$FUNC() { return HMENU_UserUnmarshal64$FUNC_; }

    static final MethodHandle HMENU_UserUnmarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HMENU_UserUnmarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HMENU_UserUnmarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HMENU_UserUnmarshal64$MH() { return HMENU_UserUnmarshal64$MH_; }

    static final FunctionDescriptor HMENU_UserFree64$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HMENU_UserFree64$FUNC() { return HMENU_UserFree64$FUNC_; }

    static final MethodHandle HMENU_UserFree64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HMENU_UserFree64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        HMENU_UserFree64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HMENU_UserFree64$MH() { return HMENU_UserFree64$MH_; }

    static final FunctionDescriptor HWND_UserSize64$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HWND_UserSize64$FUNC() { return HWND_UserSize64$FUNC_; }

    static final MethodHandle HWND_UserSize64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HWND_UserSize64",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        HWND_UserSize64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HWND_UserSize64$MH() { return HWND_UserSize64$MH_; }

    static final FunctionDescriptor HWND_UserMarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HWND_UserMarshal64$FUNC() { return HWND_UserMarshal64$FUNC_; }

    static final MethodHandle HWND_UserMarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HWND_UserMarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HWND_UserMarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HWND_UserMarshal64$MH() { return HWND_UserMarshal64$MH_; }

    static final FunctionDescriptor HWND_UserUnmarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HWND_UserUnmarshal64$FUNC() { return HWND_UserUnmarshal64$FUNC_; }

    static final MethodHandle HWND_UserUnmarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HWND_UserUnmarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        HWND_UserUnmarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HWND_UserUnmarshal64$MH() { return HWND_UserUnmarshal64$MH_; }

    static final FunctionDescriptor HWND_UserFree64$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor HWND_UserFree64$FUNC() { return HWND_UserFree64$FUNC_; }

    static final MethodHandle HWND_UserFree64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "HWND_UserFree64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        HWND_UserFree64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle HWND_UserFree64$MH() { return HWND_UserFree64$MH_; }

    static final FunctionDescriptor IOleCache2_UpdateCache_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IOleCache2_UpdateCache_Proxy$FUNC() { return IOleCache2_UpdateCache_Proxy$FUNC_; }

    static final MethodHandle IOleCache2_UpdateCache_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IOleCache2_UpdateCache_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        IOleCache2_UpdateCache_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IOleCache2_UpdateCache_Proxy$MH() { return IOleCache2_UpdateCache_Proxy$MH_; }

    static final FunctionDescriptor IOleCache2_UpdateCache_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor IOleCache2_UpdateCache_Stub$FUNC() { return IOleCache2_UpdateCache_Stub$FUNC_; }

    static final MethodHandle IOleCache2_UpdateCache_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IOleCache2_UpdateCache_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IJ)I",
        IOleCache2_UpdateCache_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IOleCache2_UpdateCache_Stub$MH() { return IOleCache2_UpdateCache_Stub$MH_; }

    static final FunctionDescriptor IOleInPlaceActiveObject_TranslateAccelerator_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IOleInPlaceActiveObject_TranslateAccelerator_Proxy$FUNC() { return IOleInPlaceActiveObject_TranslateAccelerator_Proxy$FUNC_; }

    static final MethodHandle IOleInPlaceActiveObject_TranslateAccelerator_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IOleInPlaceActiveObject_TranslateAccelerator_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IOleInPlaceActiveObject_TranslateAccelerator_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IOleInPlaceActiveObject_TranslateAccelerator_Proxy$MH() { return IOleInPlaceActiveObject_TranslateAccelerator_Proxy$MH_; }

    static final FunctionDescriptor IOleInPlaceActiveObject_TranslateAccelerator_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IOleInPlaceActiveObject_TranslateAccelerator_Stub$FUNC() { return IOleInPlaceActiveObject_TranslateAccelerator_Stub$FUNC_; }

    static final MethodHandle IOleInPlaceActiveObject_TranslateAccelerator_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IOleInPlaceActiveObject_TranslateAccelerator_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        IOleInPlaceActiveObject_TranslateAccelerator_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IOleInPlaceActiveObject_TranslateAccelerator_Stub$MH() { return IOleInPlaceActiveObject_TranslateAccelerator_Stub$MH_; }

    static final FunctionDescriptor IOleInPlaceActiveObject_ResizeBorder_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor IOleInPlaceActiveObject_ResizeBorder_Proxy$FUNC() { return IOleInPlaceActiveObject_ResizeBorder_Proxy$FUNC_; }

    static final MethodHandle IOleInPlaceActiveObject_ResizeBorder_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IOleInPlaceActiveObject_ResizeBorder_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        IOleInPlaceActiveObject_ResizeBorder_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IOleInPlaceActiveObject_ResizeBorder_Proxy$MH() { return IOleInPlaceActiveObject_ResizeBorder_Proxy$MH_; }

    static final FunctionDescriptor IOleInPlaceActiveObject_ResizeBorder_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor IOleInPlaceActiveObject_ResizeBorder_Stub$FUNC() { return IOleInPlaceActiveObject_ResizeBorder_Stub$FUNC_; }

    static final MethodHandle IOleInPlaceActiveObject_ResizeBorder_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IOleInPlaceActiveObject_ResizeBorder_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        IOleInPlaceActiveObject_ResizeBorder_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IOleInPlaceActiveObject_ResizeBorder_Stub$MH() { return IOleInPlaceActiveObject_ResizeBorder_Stub$MH_; }

    static final FunctionDescriptor IViewObject_Draw_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor IViewObject_Draw_Proxy$FUNC() { return IViewObject_Draw_Proxy$FUNC_; }

    static final MethodHandle IViewObject_Draw_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IViewObject_Draw_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        IViewObject_Draw_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IViewObject_Draw_Proxy$MH() { return IViewObject_Draw_Proxy$MH_; }

    static final FunctionDescriptor IViewObject_Draw_Proxy$pfnContinue$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor IViewObject_Draw_Proxy$pfnContinue$FUNC() { return IViewObject_Draw_Proxy$pfnContinue$FUNC_; }

    static final FunctionDescriptor IViewObject_Draw_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IViewObject_Draw_Stub$FUNC() { return IViewObject_Draw_Stub$FUNC_; }

    static final MethodHandle IViewObject_Draw_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IViewObject_Draw_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;IIJLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IViewObject_Draw_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IViewObject_Draw_Stub$MH() { return IViewObject_Draw_Stub$MH_; }

    static final FunctionDescriptor IViewObject_GetColorSet_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IViewObject_GetColorSet_Proxy$FUNC() { return IViewObject_GetColorSet_Proxy$FUNC_; }

    static final MethodHandle IViewObject_GetColorSet_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IViewObject_GetColorSet_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IViewObject_GetColorSet_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IViewObject_GetColorSet_Proxy$MH() { return IViewObject_GetColorSet_Proxy$MH_; }

    static final FunctionDescriptor IViewObject_GetColorSet_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONGLONG,
        C_POINTER,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IViewObject_GetColorSet_Stub$FUNC() { return IViewObject_GetColorSet_Stub$FUNC_; }

    static final MethodHandle IViewObject_GetColorSet_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IViewObject_GetColorSet_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;IIJLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        IViewObject_GetColorSet_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IViewObject_GetColorSet_Stub$MH() { return IViewObject_GetColorSet_Stub$MH_; }

    static final FunctionDescriptor IViewObject_Freeze_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IViewObject_Freeze_Proxy$FUNC() { return IViewObject_Freeze_Proxy$FUNC_; }

    static final MethodHandle IViewObject_Freeze_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IViewObject_Freeze_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IViewObject_Freeze_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IViewObject_Freeze_Proxy$MH() { return IViewObject_Freeze_Proxy$MH_; }

    static final FunctionDescriptor IViewObject_Freeze_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IViewObject_Freeze_Stub$FUNC() { return IViewObject_Freeze_Stub$FUNC_; }

    static final MethodHandle IViewObject_Freeze_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IViewObject_Freeze_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;IIJLjdk/incubator/foreign/MemoryAddress;)I",
        IViewObject_Freeze_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IViewObject_Freeze_Stub$MH() { return IViewObject_Freeze_Stub$MH_; }

    static final FunctionDescriptor IViewObject_GetAdvise_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IViewObject_GetAdvise_Proxy$FUNC() { return IViewObject_GetAdvise_Proxy$FUNC_; }

    static final MethodHandle IViewObject_GetAdvise_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IViewObject_GetAdvise_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IViewObject_GetAdvise_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IViewObject_GetAdvise_Proxy$MH() { return IViewObject_GetAdvise_Proxy$MH_; }

    static final FunctionDescriptor IViewObject_GetAdvise_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IViewObject_GetAdvise_Stub$FUNC() { return IViewObject_GetAdvise_Stub$FUNC_; }

    static final MethodHandle IViewObject_GetAdvise_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IViewObject_GetAdvise_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IViewObject_GetAdvise_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IViewObject_GetAdvise_Stub$MH() { return IViewObject_GetAdvise_Stub$MH_; }

    static final FunctionDescriptor IEnumOLEVERB_Next_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumOLEVERB_Next_Proxy$FUNC() { return IEnumOLEVERB_Next_Proxy$FUNC_; }

    static final MethodHandle IEnumOLEVERB_Next_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumOLEVERB_Next_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IEnumOLEVERB_Next_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumOLEVERB_Next_Proxy$MH() { return IEnumOLEVERB_Next_Proxy$MH_; }

    static final FunctionDescriptor IEnumOLEVERB_Next_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumOLEVERB_Next_Stub$FUNC() { return IEnumOLEVERB_Next_Stub$FUNC_; }

    static final MethodHandle IEnumOLEVERB_Next_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumOLEVERB_Next_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IEnumOLEVERB_Next_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumOLEVERB_Next_Stub$MH() { return IEnumOLEVERB_Next_Stub$MH_; }

    static final MemoryLayout __MIDL_itf_servprov_0000_0000_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_servprov_0000_0000_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_servprov_0000_0000_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_servprov_0000_0000_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_servprov_0000_0000_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_servprov_0000_0000_v0_0_c_ifspec$VH() { return __MIDL_itf_servprov_0000_0000_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_servprov_0000_0000_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_servprov_0000_0000_v0_0_c_ifspec", __MIDL_itf_servprov_0000_0000_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_servprov_0000_0000_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_servprov_0000_0000_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_servprov_0000_0000_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_servprov_0000_0000_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_servprov_0000_0000_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_servprov_0000_0000_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_servprov_0000_0000_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_servprov_0000_0000_v0_0_s_ifspec$VH() { return __MIDL_itf_servprov_0000_0000_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_servprov_0000_0000_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_servprov_0000_0000_v0_0_s_ifspec", __MIDL_itf_servprov_0000_0000_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_servprov_0000_0000_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_servprov_0000_0000_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IServiceProvider$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IServiceProvider$LAYOUT() { return IID_IServiceProvider$LAYOUT_; }

    static final MemorySegment IID_IServiceProvider$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IServiceProvider", IID_IServiceProvider$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IServiceProvider$SEGMENT() { return IID_IServiceProvider$SEGMENT_; }

    static final MemoryLayout IServiceProviderVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("QueryService")
    ).withName("IServiceProviderVtbl");
    static final jdk.incubator.foreign.MemoryLayout IServiceProviderVtbl$struct$LAYOUT() { return IServiceProviderVtbl$struct$LAYOUT_; }

    static final MemoryLayout IServiceProviderVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IServiceProviderVtbl$QueryInterface$LAYOUT() { return IServiceProviderVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IServiceProviderVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IServiceProviderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IServiceProviderVtbl$QueryInterface$VH() { return IServiceProviderVtbl$QueryInterface$VH_; }

    static final MemoryLayout IServiceProviderVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IServiceProviderVtbl$AddRef$LAYOUT() { return IServiceProviderVtbl$AddRef$LAYOUT_; }

    static final VarHandle IServiceProviderVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IServiceProviderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IServiceProviderVtbl$AddRef$VH() { return IServiceProviderVtbl$AddRef$VH_; }

    static final MemoryLayout IServiceProviderVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IServiceProviderVtbl$Release$LAYOUT() { return IServiceProviderVtbl$Release$LAYOUT_; }

    static final VarHandle IServiceProviderVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IServiceProviderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IServiceProviderVtbl$Release$VH() { return IServiceProviderVtbl$Release$VH_; }

    static final MemoryLayout IServiceProviderVtbl$QueryService$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IServiceProviderVtbl$QueryService$LAYOUT() { return IServiceProviderVtbl$QueryService$LAYOUT_; }

    static final VarHandle IServiceProviderVtbl$QueryService$VH_ = MemoryHandles.asAddressVarHandle(IServiceProviderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryService")));
    static final java.lang.invoke.VarHandle IServiceProviderVtbl$QueryService$VH() { return IServiceProviderVtbl$QueryService$VH_; }

    static final MemoryLayout IServiceProvider$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IServiceProvider");
    static final jdk.incubator.foreign.MemoryLayout IServiceProvider$struct$LAYOUT() { return IServiceProvider$struct$LAYOUT_; }

    static final MemoryLayout IServiceProvider$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IServiceProvider$lpVtbl$LAYOUT() { return IServiceProvider$lpVtbl$LAYOUT_; }

    static final VarHandle IServiceProvider$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IServiceProvider$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IServiceProvider$lpVtbl$VH() { return IServiceProvider$lpVtbl$VH_; }

    static final FunctionDescriptor IServiceProvider_RemoteQueryService_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IServiceProvider_RemoteQueryService_Proxy$FUNC() { return IServiceProvider_RemoteQueryService_Proxy$FUNC_; }

    static final MethodHandle IServiceProvider_RemoteQueryService_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IServiceProvider_RemoteQueryService_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IServiceProvider_RemoteQueryService_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IServiceProvider_RemoteQueryService_Proxy$MH() { return IServiceProvider_RemoteQueryService_Proxy$MH_; }

    static final FunctionDescriptor IServiceProvider_RemoteQueryService_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IServiceProvider_RemoteQueryService_Stub$FUNC() { return IServiceProvider_RemoteQueryService_Stub$FUNC_; }

    static final MethodHandle IServiceProvider_RemoteQueryService_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IServiceProvider_RemoteQueryService_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IServiceProvider_RemoteQueryService_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IServiceProvider_RemoteQueryService_Stub$MH() { return IServiceProvider_RemoteQueryService_Stub$MH_; }

    static final MemoryLayout __MIDL_itf_servprov_0000_0001_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_servprov_0000_0001_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_servprov_0000_0001_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_servprov_0000_0001_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_servprov_0000_0001_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_servprov_0000_0001_v0_0_c_ifspec$VH() { return __MIDL_itf_servprov_0000_0001_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_servprov_0000_0001_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_servprov_0000_0001_v0_0_c_ifspec", __MIDL_itf_servprov_0000_0001_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_servprov_0000_0001_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_servprov_0000_0001_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_servprov_0000_0001_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_servprov_0000_0001_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_servprov_0000_0001_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_servprov_0000_0001_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_servprov_0000_0001_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_servprov_0000_0001_v0_0_s_ifspec$VH() { return __MIDL_itf_servprov_0000_0001_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_servprov_0000_0001_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_servprov_0000_0001_v0_0_s_ifspec", __MIDL_itf_servprov_0000_0001_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_servprov_0000_0001_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_servprov_0000_0001_v0_0_s_ifspec$SEGMENT_; }

    static final FunctionDescriptor IServiceProvider_QueryService_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IServiceProvider_QueryService_Proxy$FUNC() { return IServiceProvider_QueryService_Proxy$FUNC_; }

    static final MethodHandle IServiceProvider_QueryService_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IServiceProvider_QueryService_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IServiceProvider_QueryService_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IServiceProvider_QueryService_Proxy$MH() { return IServiceProvider_QueryService_Proxy$MH_; }

    static final FunctionDescriptor IServiceProvider_QueryService_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IServiceProvider_QueryService_Stub$FUNC() { return IServiceProvider_QueryService_Stub$FUNC_; }

    static final MethodHandle IServiceProvider_QueryService_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IServiceProvider_QueryService_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IServiceProvider_QueryService_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IServiceProvider_QueryService_Stub$MH() { return IServiceProvider_QueryService_Stub$MH_; }

    static final MemoryLayout _xml_error$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("_nLine"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("_pchBuf"),
        C_INT.withName("_cchBuf"),
        C_INT.withName("_ich"),
        C_POINTER.withName("_pszFound"),
        C_POINTER.withName("_pszExpected"),
        C_LONG.withName("_reserved1"),
        C_LONG.withName("_reserved2")
    ).withName("_xml_error");
    static final jdk.incubator.foreign.MemoryLayout _xml_error$struct$LAYOUT() { return _xml_error$struct$LAYOUT_; }

    static final MemoryLayout _xml_error$_nLine$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _xml_error$_nLine$LAYOUT() { return _xml_error$_nLine$LAYOUT_; }

    static final VarHandle _xml_error$_nLine$VH_ = _xml_error$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("_nLine"));
    static final java.lang.invoke.VarHandle _xml_error$_nLine$VH() { return _xml_error$_nLine$VH_; }

    static final MemoryLayout _xml_error$_pchBuf$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _xml_error$_pchBuf$LAYOUT() { return _xml_error$_pchBuf$LAYOUT_; }

    static final VarHandle _xml_error$_pchBuf$VH_ = MemoryHandles.asAddressVarHandle(_xml_error$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("_pchBuf")));
    static final java.lang.invoke.VarHandle _xml_error$_pchBuf$VH() { return _xml_error$_pchBuf$VH_; }

    static final MemoryLayout _xml_error$_cchBuf$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _xml_error$_cchBuf$LAYOUT() { return _xml_error$_cchBuf$LAYOUT_; }

    static final VarHandle _xml_error$_cchBuf$VH_ = _xml_error$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("_cchBuf"));
    static final java.lang.invoke.VarHandle _xml_error$_cchBuf$VH() { return _xml_error$_cchBuf$VH_; }

    static final MemoryLayout _xml_error$_ich$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _xml_error$_ich$LAYOUT() { return _xml_error$_ich$LAYOUT_; }

    static final VarHandle _xml_error$_ich$VH_ = _xml_error$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("_ich"));
    static final java.lang.invoke.VarHandle _xml_error$_ich$VH() { return _xml_error$_ich$VH_; }

    static final MemoryLayout _xml_error$_pszFound$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _xml_error$_pszFound$LAYOUT() { return _xml_error$_pszFound$LAYOUT_; }

    static final VarHandle _xml_error$_pszFound$VH_ = MemoryHandles.asAddressVarHandle(_xml_error$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("_pszFound")));
    static final java.lang.invoke.VarHandle _xml_error$_pszFound$VH() { return _xml_error$_pszFound$VH_; }

    static final MemoryLayout _xml_error$_pszExpected$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _xml_error$_pszExpected$LAYOUT() { return _xml_error$_pszExpected$LAYOUT_; }

    static final VarHandle _xml_error$_pszExpected$VH_ = MemoryHandles.asAddressVarHandle(_xml_error$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("_pszExpected")));
    static final java.lang.invoke.VarHandle _xml_error$_pszExpected$VH() { return _xml_error$_pszExpected$VH_; }

    static final MemoryLayout _xml_error$_reserved1$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _xml_error$_reserved1$LAYOUT() { return _xml_error$_reserved1$LAYOUT_; }

    static final VarHandle _xml_error$_reserved1$VH_ = _xml_error$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("_reserved1"));
    static final java.lang.invoke.VarHandle _xml_error$_reserved1$VH() { return _xml_error$_reserved1$VH_; }

    static final MemoryLayout _xml_error$_reserved2$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _xml_error$_reserved2$LAYOUT() { return _xml_error$_reserved2$LAYOUT_; }

    static final VarHandle _xml_error$_reserved2$VH_ = _xml_error$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("_reserved2"));
    static final java.lang.invoke.VarHandle _xml_error$_reserved2$VH() { return _xml_error$_reserved2$VH_; }

    static final MemoryLayout __MIDL_itf_msxml_0000_0000_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_msxml_0000_0000_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_msxml_0000_0000_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_msxml_0000_0000_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_msxml_0000_0000_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_msxml_0000_0000_v0_0_c_ifspec$VH() { return __MIDL_itf_msxml_0000_0000_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_msxml_0000_0000_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_msxml_0000_0000_v0_0_c_ifspec", __MIDL_itf_msxml_0000_0000_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_msxml_0000_0000_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_msxml_0000_0000_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_msxml_0000_0000_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_msxml_0000_0000_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_msxml_0000_0000_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_msxml_0000_0000_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_msxml_0000_0000_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_msxml_0000_0000_v0_0_s_ifspec$VH() { return __MIDL_itf_msxml_0000_0000_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_msxml_0000_0000_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_msxml_0000_0000_v0_0_s_ifspec", __MIDL_itf_msxml_0000_0000_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_msxml_0000_0000_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_msxml_0000_0000_v0_0_s_ifspec$SEGMENT_; }

    static final int NODE_INVALID() { return (int)0L; }

    static final int NODE_ELEMENT() { return (int)1L; }

    static final int NODE_ATTRIBUTE() { return (int)2L; }

    static final int NODE_TEXT() { return (int)3L; }

    static final int NODE_CDATA_SECTION() { return (int)4L; }

    static final int NODE_ENTITY_REFERENCE() { return (int)5L; }

    static final int NODE_ENTITY() { return (int)6L; }

    static final int NODE_PROCESSING_INSTRUCTION() { return (int)7L; }

    static final int NODE_COMMENT() { return (int)8L; }

    static final int NODE_DOCUMENT() { return (int)9L; }

    static final int NODE_DOCUMENT_TYPE() { return (int)10L; }

    static final int NODE_DOCUMENT_FRAGMENT() { return (int)11L; }

    static final int NODE_NOTATION() { return (int)12L; }

    static final int XMLELEMTYPE_ELEMENT() { return (int)0L; }

    static final int XMLELEMTYPE_TEXT() { return (int)1L; }

    static final int XMLELEMTYPE_COMMENT() { return (int)2L; }

    static final int XMLELEMTYPE_DOCUMENT() { return (int)3L; }

    static final int XMLELEMTYPE_DTD() { return (int)4L; }

    static final int XMLELEMTYPE_PI() { return (int)5L; }

    static final int XMLELEMTYPE_OTHER() { return (int)6L; }

    static final MemoryLayout LIBID_MSXML$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout LIBID_MSXML$LAYOUT() { return LIBID_MSXML$LAYOUT_; }

    static final MemorySegment LIBID_MSXML$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "LIBID_MSXML", LIBID_MSXML$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment LIBID_MSXML$SEGMENT() { return LIBID_MSXML$SEGMENT_; }

    static final MemoryLayout IID_IXMLDOMImplementation$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IXMLDOMImplementation$LAYOUT() { return IID_IXMLDOMImplementation$LAYOUT_; }

    static final MemorySegment IID_IXMLDOMImplementation$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IXMLDOMImplementation", IID_IXMLDOMImplementation$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IXMLDOMImplementation$SEGMENT() { return IID_IXMLDOMImplementation$SEGMENT_; }

    static final MemoryLayout IXMLDOMImplementationVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetTypeInfoCount"),
        C_POINTER.withName("GetTypeInfo"),
        C_POINTER.withName("GetIDsOfNames"),
        C_POINTER.withName("Invoke"),
        C_POINTER.withName("hasFeature")
    ).withName("IXMLDOMImplementationVtbl");
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMImplementationVtbl$struct$LAYOUT() { return IXMLDOMImplementationVtbl$struct$LAYOUT_; }

    static final MemoryLayout IXMLDOMImplementationVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMImplementationVtbl$QueryInterface$LAYOUT() { return IXMLDOMImplementationVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IXMLDOMImplementationVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMImplementationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IXMLDOMImplementationVtbl$QueryInterface$VH() { return IXMLDOMImplementationVtbl$QueryInterface$VH_; }

    static final MemoryLayout IXMLDOMImplementationVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMImplementationVtbl$AddRef$LAYOUT() { return IXMLDOMImplementationVtbl$AddRef$LAYOUT_; }

    static final VarHandle IXMLDOMImplementationVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMImplementationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IXMLDOMImplementationVtbl$AddRef$VH() { return IXMLDOMImplementationVtbl$AddRef$VH_; }

    static final MemoryLayout IXMLDOMImplementationVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMImplementationVtbl$Release$LAYOUT() { return IXMLDOMImplementationVtbl$Release$LAYOUT_; }

    static final VarHandle IXMLDOMImplementationVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMImplementationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IXMLDOMImplementationVtbl$Release$VH() { return IXMLDOMImplementationVtbl$Release$VH_; }

    static final MemoryLayout IXMLDOMImplementationVtbl$GetTypeInfoCount$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMImplementationVtbl$GetTypeInfoCount$LAYOUT() { return IXMLDOMImplementationVtbl$GetTypeInfoCount$LAYOUT_; }

    static final VarHandle IXMLDOMImplementationVtbl$GetTypeInfoCount$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMImplementationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfoCount")));
    static final java.lang.invoke.VarHandle IXMLDOMImplementationVtbl$GetTypeInfoCount$VH() { return IXMLDOMImplementationVtbl$GetTypeInfoCount$VH_; }

}

