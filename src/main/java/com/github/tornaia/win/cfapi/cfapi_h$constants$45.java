// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$45 extends cfapi_h$constants$44 {

    /* package-private */ cfapi_h$constants$45() {}
    static final MemoryLayout tagJOYCAPS2W$wYmax$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagJOYCAPS2W$wYmax$LAYOUT() { return tagJOYCAPS2W$wYmax$LAYOUT_; }

    static final VarHandle tagJOYCAPS2W$wYmax$VH_ = tagJOYCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wYmax"));
    static final java.lang.invoke.VarHandle tagJOYCAPS2W$wYmax$VH() { return tagJOYCAPS2W$wYmax$VH_; }

    static final MemoryLayout tagJOYCAPS2W$wZmin$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagJOYCAPS2W$wZmin$LAYOUT() { return tagJOYCAPS2W$wZmin$LAYOUT_; }

    static final VarHandle tagJOYCAPS2W$wZmin$VH_ = tagJOYCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wZmin"));
    static final java.lang.invoke.VarHandle tagJOYCAPS2W$wZmin$VH() { return tagJOYCAPS2W$wZmin$VH_; }

    static final MemoryLayout tagJOYCAPS2W$wZmax$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagJOYCAPS2W$wZmax$LAYOUT() { return tagJOYCAPS2W$wZmax$LAYOUT_; }

    static final VarHandle tagJOYCAPS2W$wZmax$VH_ = tagJOYCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wZmax"));
    static final java.lang.invoke.VarHandle tagJOYCAPS2W$wZmax$VH() { return tagJOYCAPS2W$wZmax$VH_; }

    static final MemoryLayout tagJOYCAPS2W$wNumButtons$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagJOYCAPS2W$wNumButtons$LAYOUT() { return tagJOYCAPS2W$wNumButtons$LAYOUT_; }

    static final VarHandle tagJOYCAPS2W$wNumButtons$VH_ = tagJOYCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wNumButtons"));
    static final java.lang.invoke.VarHandle tagJOYCAPS2W$wNumButtons$VH() { return tagJOYCAPS2W$wNumButtons$VH_; }

    static final MemoryLayout tagJOYCAPS2W$wPeriodMin$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagJOYCAPS2W$wPeriodMin$LAYOUT() { return tagJOYCAPS2W$wPeriodMin$LAYOUT_; }

    static final VarHandle tagJOYCAPS2W$wPeriodMin$VH_ = tagJOYCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wPeriodMin"));
    static final java.lang.invoke.VarHandle tagJOYCAPS2W$wPeriodMin$VH() { return tagJOYCAPS2W$wPeriodMin$VH_; }

    static final MemoryLayout tagJOYCAPS2W$wPeriodMax$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagJOYCAPS2W$wPeriodMax$LAYOUT() { return tagJOYCAPS2W$wPeriodMax$LAYOUT_; }

    static final VarHandle tagJOYCAPS2W$wPeriodMax$VH_ = tagJOYCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wPeriodMax"));
    static final java.lang.invoke.VarHandle tagJOYCAPS2W$wPeriodMax$VH() { return tagJOYCAPS2W$wPeriodMax$VH_; }

    static final MemoryLayout tagJOYCAPS2W$wRmin$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagJOYCAPS2W$wRmin$LAYOUT() { return tagJOYCAPS2W$wRmin$LAYOUT_; }

    static final VarHandle tagJOYCAPS2W$wRmin$VH_ = tagJOYCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wRmin"));
    static final java.lang.invoke.VarHandle tagJOYCAPS2W$wRmin$VH() { return tagJOYCAPS2W$wRmin$VH_; }

    static final MemoryLayout tagJOYCAPS2W$wRmax$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagJOYCAPS2W$wRmax$LAYOUT() { return tagJOYCAPS2W$wRmax$LAYOUT_; }

    static final VarHandle tagJOYCAPS2W$wRmax$VH_ = tagJOYCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wRmax"));
    static final java.lang.invoke.VarHandle tagJOYCAPS2W$wRmax$VH() { return tagJOYCAPS2W$wRmax$VH_; }

    static final MemoryLayout tagJOYCAPS2W$wUmin$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagJOYCAPS2W$wUmin$LAYOUT() { return tagJOYCAPS2W$wUmin$LAYOUT_; }

    static final VarHandle tagJOYCAPS2W$wUmin$VH_ = tagJOYCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wUmin"));
    static final java.lang.invoke.VarHandle tagJOYCAPS2W$wUmin$VH() { return tagJOYCAPS2W$wUmin$VH_; }

    static final MemoryLayout tagJOYCAPS2W$wUmax$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagJOYCAPS2W$wUmax$LAYOUT() { return tagJOYCAPS2W$wUmax$LAYOUT_; }

    static final VarHandle tagJOYCAPS2W$wUmax$VH_ = tagJOYCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wUmax"));
    static final java.lang.invoke.VarHandle tagJOYCAPS2W$wUmax$VH() { return tagJOYCAPS2W$wUmax$VH_; }

    static final MemoryLayout tagJOYCAPS2W$wVmin$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagJOYCAPS2W$wVmin$LAYOUT() { return tagJOYCAPS2W$wVmin$LAYOUT_; }

    static final VarHandle tagJOYCAPS2W$wVmin$VH_ = tagJOYCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wVmin"));
    static final java.lang.invoke.VarHandle tagJOYCAPS2W$wVmin$VH() { return tagJOYCAPS2W$wVmin$VH_; }

    static final MemoryLayout tagJOYCAPS2W$wVmax$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagJOYCAPS2W$wVmax$LAYOUT() { return tagJOYCAPS2W$wVmax$LAYOUT_; }

    static final VarHandle tagJOYCAPS2W$wVmax$VH_ = tagJOYCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wVmax"));
    static final java.lang.invoke.VarHandle tagJOYCAPS2W$wVmax$VH() { return tagJOYCAPS2W$wVmax$VH_; }

    static final MemoryLayout tagJOYCAPS2W$wCaps$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagJOYCAPS2W$wCaps$LAYOUT() { return tagJOYCAPS2W$wCaps$LAYOUT_; }

    static final VarHandle tagJOYCAPS2W$wCaps$VH_ = tagJOYCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wCaps"));
    static final java.lang.invoke.VarHandle tagJOYCAPS2W$wCaps$VH() { return tagJOYCAPS2W$wCaps$VH_; }

    static final MemoryLayout tagJOYCAPS2W$wMaxAxes$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagJOYCAPS2W$wMaxAxes$LAYOUT() { return tagJOYCAPS2W$wMaxAxes$LAYOUT_; }

    static final VarHandle tagJOYCAPS2W$wMaxAxes$VH_ = tagJOYCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wMaxAxes"));
    static final java.lang.invoke.VarHandle tagJOYCAPS2W$wMaxAxes$VH() { return tagJOYCAPS2W$wMaxAxes$VH_; }

    static final MemoryLayout tagJOYCAPS2W$wNumAxes$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagJOYCAPS2W$wNumAxes$LAYOUT() { return tagJOYCAPS2W$wNumAxes$LAYOUT_; }

    static final VarHandle tagJOYCAPS2W$wNumAxes$VH_ = tagJOYCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wNumAxes"));
    static final java.lang.invoke.VarHandle tagJOYCAPS2W$wNumAxes$VH() { return tagJOYCAPS2W$wNumAxes$VH_; }

    static final MemoryLayout tagJOYCAPS2W$wMaxButtons$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagJOYCAPS2W$wMaxButtons$LAYOUT() { return tagJOYCAPS2W$wMaxButtons$LAYOUT_; }

    static final VarHandle tagJOYCAPS2W$wMaxButtons$VH_ = tagJOYCAPS2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wMaxButtons"));
    static final java.lang.invoke.VarHandle tagJOYCAPS2W$wMaxButtons$VH() { return tagJOYCAPS2W$wMaxButtons$VH_; }

    static final MemoryLayout joyinfo_tag$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("wXpos"),
        C_INT.withName("wYpos"),
        C_INT.withName("wZpos"),
        C_INT.withName("wButtons")
    ).withName("joyinfo_tag");
    static final jdk.incubator.foreign.MemoryLayout joyinfo_tag$struct$LAYOUT() { return joyinfo_tag$struct$LAYOUT_; }

    static final MemoryLayout joyinfo_tag$wXpos$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout joyinfo_tag$wXpos$LAYOUT() { return joyinfo_tag$wXpos$LAYOUT_; }

    static final VarHandle joyinfo_tag$wXpos$VH_ = joyinfo_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wXpos"));
    static final java.lang.invoke.VarHandle joyinfo_tag$wXpos$VH() { return joyinfo_tag$wXpos$VH_; }

    static final MemoryLayout joyinfo_tag$wYpos$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout joyinfo_tag$wYpos$LAYOUT() { return joyinfo_tag$wYpos$LAYOUT_; }

    static final VarHandle joyinfo_tag$wYpos$VH_ = joyinfo_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wYpos"));
    static final java.lang.invoke.VarHandle joyinfo_tag$wYpos$VH() { return joyinfo_tag$wYpos$VH_; }

    static final MemoryLayout joyinfo_tag$wZpos$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout joyinfo_tag$wZpos$LAYOUT() { return joyinfo_tag$wZpos$LAYOUT_; }

    static final VarHandle joyinfo_tag$wZpos$VH_ = joyinfo_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wZpos"));
    static final java.lang.invoke.VarHandle joyinfo_tag$wZpos$VH() { return joyinfo_tag$wZpos$VH_; }

    static final MemoryLayout joyinfo_tag$wButtons$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout joyinfo_tag$wButtons$LAYOUT() { return joyinfo_tag$wButtons$LAYOUT_; }

    static final VarHandle joyinfo_tag$wButtons$VH_ = joyinfo_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wButtons"));
    static final java.lang.invoke.VarHandle joyinfo_tag$wButtons$VH() { return joyinfo_tag$wButtons$VH_; }

    static final MemoryLayout joyinfoex_tag$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwSize"),
        C_LONG.withName("dwFlags"),
        C_LONG.withName("dwXpos"),
        C_LONG.withName("dwYpos"),
        C_LONG.withName("dwZpos"),
        C_LONG.withName("dwRpos"),
        C_LONG.withName("dwUpos"),
        C_LONG.withName("dwVpos"),
        C_LONG.withName("dwButtons"),
        C_LONG.withName("dwButtonNumber"),
        C_LONG.withName("dwPOV"),
        C_LONG.withName("dwReserved1"),
        C_LONG.withName("dwReserved2")
    ).withName("joyinfoex_tag");
    static final jdk.incubator.foreign.MemoryLayout joyinfoex_tag$struct$LAYOUT() { return joyinfoex_tag$struct$LAYOUT_; }

    static final MemoryLayout joyinfoex_tag$dwSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout joyinfoex_tag$dwSize$LAYOUT() { return joyinfoex_tag$dwSize$LAYOUT_; }

    static final VarHandle joyinfoex_tag$dwSize$VH_ = joyinfoex_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSize"));
    static final java.lang.invoke.VarHandle joyinfoex_tag$dwSize$VH() { return joyinfoex_tag$dwSize$VH_; }

    static final MemoryLayout joyinfoex_tag$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout joyinfoex_tag$dwFlags$LAYOUT() { return joyinfoex_tag$dwFlags$LAYOUT_; }

    static final VarHandle joyinfoex_tag$dwFlags$VH_ = joyinfoex_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle joyinfoex_tag$dwFlags$VH() { return joyinfoex_tag$dwFlags$VH_; }

    static final MemoryLayout joyinfoex_tag$dwXpos$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout joyinfoex_tag$dwXpos$LAYOUT() { return joyinfoex_tag$dwXpos$LAYOUT_; }

    static final VarHandle joyinfoex_tag$dwXpos$VH_ = joyinfoex_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwXpos"));
    static final java.lang.invoke.VarHandle joyinfoex_tag$dwXpos$VH() { return joyinfoex_tag$dwXpos$VH_; }

    static final MemoryLayout joyinfoex_tag$dwYpos$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout joyinfoex_tag$dwYpos$LAYOUT() { return joyinfoex_tag$dwYpos$LAYOUT_; }

    static final VarHandle joyinfoex_tag$dwYpos$VH_ = joyinfoex_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwYpos"));
    static final java.lang.invoke.VarHandle joyinfoex_tag$dwYpos$VH() { return joyinfoex_tag$dwYpos$VH_; }

    static final MemoryLayout joyinfoex_tag$dwZpos$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout joyinfoex_tag$dwZpos$LAYOUT() { return joyinfoex_tag$dwZpos$LAYOUT_; }

    static final VarHandle joyinfoex_tag$dwZpos$VH_ = joyinfoex_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwZpos"));
    static final java.lang.invoke.VarHandle joyinfoex_tag$dwZpos$VH() { return joyinfoex_tag$dwZpos$VH_; }

    static final MemoryLayout joyinfoex_tag$dwRpos$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout joyinfoex_tag$dwRpos$LAYOUT() { return joyinfoex_tag$dwRpos$LAYOUT_; }

    static final VarHandle joyinfoex_tag$dwRpos$VH_ = joyinfoex_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRpos"));
    static final java.lang.invoke.VarHandle joyinfoex_tag$dwRpos$VH() { return joyinfoex_tag$dwRpos$VH_; }

    static final MemoryLayout joyinfoex_tag$dwUpos$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout joyinfoex_tag$dwUpos$LAYOUT() { return joyinfoex_tag$dwUpos$LAYOUT_; }

    static final VarHandle joyinfoex_tag$dwUpos$VH_ = joyinfoex_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwUpos"));
    static final java.lang.invoke.VarHandle joyinfoex_tag$dwUpos$VH() { return joyinfoex_tag$dwUpos$VH_; }

    static final MemoryLayout joyinfoex_tag$dwVpos$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout joyinfoex_tag$dwVpos$LAYOUT() { return joyinfoex_tag$dwVpos$LAYOUT_; }

    static final VarHandle joyinfoex_tag$dwVpos$VH_ = joyinfoex_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVpos"));
    static final java.lang.invoke.VarHandle joyinfoex_tag$dwVpos$VH() { return joyinfoex_tag$dwVpos$VH_; }

    static final MemoryLayout joyinfoex_tag$dwButtons$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout joyinfoex_tag$dwButtons$LAYOUT() { return joyinfoex_tag$dwButtons$LAYOUT_; }

    static final VarHandle joyinfoex_tag$dwButtons$VH_ = joyinfoex_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwButtons"));
    static final java.lang.invoke.VarHandle joyinfoex_tag$dwButtons$VH() { return joyinfoex_tag$dwButtons$VH_; }

    static final MemoryLayout joyinfoex_tag$dwButtonNumber$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout joyinfoex_tag$dwButtonNumber$LAYOUT() { return joyinfoex_tag$dwButtonNumber$LAYOUT_; }

    static final VarHandle joyinfoex_tag$dwButtonNumber$VH_ = joyinfoex_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwButtonNumber"));
    static final java.lang.invoke.VarHandle joyinfoex_tag$dwButtonNumber$VH() { return joyinfoex_tag$dwButtonNumber$VH_; }

    static final MemoryLayout joyinfoex_tag$dwPOV$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout joyinfoex_tag$dwPOV$LAYOUT() { return joyinfoex_tag$dwPOV$LAYOUT_; }

    static final VarHandle joyinfoex_tag$dwPOV$VH_ = joyinfoex_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwPOV"));
    static final java.lang.invoke.VarHandle joyinfoex_tag$dwPOV$VH() { return joyinfoex_tag$dwPOV$VH_; }

    static final MemoryLayout joyinfoex_tag$dwReserved1$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout joyinfoex_tag$dwReserved1$LAYOUT() { return joyinfoex_tag$dwReserved1$LAYOUT_; }

    static final VarHandle joyinfoex_tag$dwReserved1$VH_ = joyinfoex_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReserved1"));
    static final java.lang.invoke.VarHandle joyinfoex_tag$dwReserved1$VH() { return joyinfoex_tag$dwReserved1$VH_; }

    static final MemoryLayout joyinfoex_tag$dwReserved2$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout joyinfoex_tag$dwReserved2$LAYOUT() { return joyinfoex_tag$dwReserved2$LAYOUT_; }

    static final VarHandle joyinfoex_tag$dwReserved2$VH_ = joyinfoex_tag$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReserved2"));
    static final java.lang.invoke.VarHandle joyinfoex_tag$dwReserved2$VH() { return joyinfoex_tag$dwReserved2$VH_; }

    static final FunctionDescriptor joyGetPosEx$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor joyGetPosEx$FUNC() { return joyGetPosEx$FUNC_; }

    static final MethodHandle joyGetPosEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "joyGetPosEx",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        joyGetPosEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle joyGetPosEx$MH() { return joyGetPosEx$MH_; }

    static final FunctionDescriptor joyGetNumDevs$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor joyGetNumDevs$FUNC() { return joyGetNumDevs$FUNC_; }

    static final MethodHandle joyGetNumDevs$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "joyGetNumDevs",
        "()I",
        joyGetNumDevs$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle joyGetNumDevs$MH() { return joyGetNumDevs$MH_; }

    static final FunctionDescriptor joyGetDevCapsA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor joyGetDevCapsA$FUNC() { return joyGetDevCapsA$FUNC_; }

    static final MethodHandle joyGetDevCapsA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "joyGetDevCapsA",
        "(JLjdk/incubator/foreign/MemoryAddress;I)I",
        joyGetDevCapsA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle joyGetDevCapsA$MH() { return joyGetDevCapsA$MH_; }

    static final FunctionDescriptor joyGetDevCapsW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor joyGetDevCapsW$FUNC() { return joyGetDevCapsW$FUNC_; }

    static final MethodHandle joyGetDevCapsW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "joyGetDevCapsW",
        "(JLjdk/incubator/foreign/MemoryAddress;I)I",
        joyGetDevCapsW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle joyGetDevCapsW$MH() { return joyGetDevCapsW$MH_; }

    static final FunctionDescriptor joyGetPos$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor joyGetPos$FUNC() { return joyGetPos$FUNC_; }

    static final MethodHandle joyGetPos$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "joyGetPos",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        joyGetPos$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle joyGetPos$MH() { return joyGetPos$MH_; }

    static final FunctionDescriptor joyGetThreshold$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor joyGetThreshold$FUNC() { return joyGetThreshold$FUNC_; }

    static final MethodHandle joyGetThreshold$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "joyGetThreshold",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        joyGetThreshold$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle joyGetThreshold$MH() { return joyGetThreshold$MH_; }

    static final FunctionDescriptor joyReleaseCapture$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor joyReleaseCapture$FUNC() { return joyReleaseCapture$FUNC_; }

    static final MethodHandle joyReleaseCapture$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "joyReleaseCapture",
        "(I)I",
        joyReleaseCapture$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle joyReleaseCapture$MH() { return joyReleaseCapture$MH_; }

    static final FunctionDescriptor joySetCapture$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor joySetCapture$FUNC() { return joySetCapture$FUNC_; }

    static final MethodHandle joySetCapture$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "joySetCapture",
        "(Ljdk/incubator/foreign/MemoryAddress;III)I",
        joySetCapture$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle joySetCapture$MH() { return joySetCapture$MH_; }

    static final FunctionDescriptor joySetThreshold$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor joySetThreshold$FUNC() { return joySetThreshold$FUNC_; }

    static final MethodHandle joySetThreshold$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "joySetThreshold",
        "(II)I",
        joySetThreshold$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle joySetThreshold$MH() { return joySetThreshold$MH_; }

    static final FunctionDescriptor joyConfigChanged$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor joyConfigChanged$FUNC() { return joyConfigChanged$FUNC_; }

    static final MethodHandle joyConfigChanged$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "joyConfigChanged",
        "(I)I",
        joyConfigChanged$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle joyConfigChanged$MH() { return joyConfigChanged$MH_; }

    static final MemoryLayout _NCB$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("ncb_command"),
        C_CHAR.withName("ncb_retcode"),
        C_CHAR.withName("ncb_lsn"),
        C_CHAR.withName("ncb_num"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ncb_buffer"),
        C_SHORT.withName("ncb_length"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("ncb_callname"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("ncb_name"),
        C_CHAR.withName("ncb_rto"),
        C_CHAR.withName("ncb_sto"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ncb_post"),
        C_CHAR.withName("ncb_lana_num"),
        C_CHAR.withName("ncb_cmd_cplt"),
        MemoryLayout.ofSequence(18, C_CHAR).withName("ncb_reserve"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ncb_event")
    ).withName("_NCB");
    static final jdk.incubator.foreign.MemoryLayout _NCB$struct$LAYOUT() { return _NCB$struct$LAYOUT_; }

    static final MemoryLayout _NCB$ncb_command$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _NCB$ncb_command$LAYOUT() { return _NCB$ncb_command$LAYOUT_; }

    static final VarHandle _NCB$ncb_command$VH_ = _NCB$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ncb_command"));
    static final java.lang.invoke.VarHandle _NCB$ncb_command$VH() { return _NCB$ncb_command$VH_; }

    static final MemoryLayout _NCB$ncb_retcode$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _NCB$ncb_retcode$LAYOUT() { return _NCB$ncb_retcode$LAYOUT_; }

    static final VarHandle _NCB$ncb_retcode$VH_ = _NCB$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ncb_retcode"));
    static final java.lang.invoke.VarHandle _NCB$ncb_retcode$VH() { return _NCB$ncb_retcode$VH_; }

    static final MemoryLayout _NCB$ncb_lsn$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _NCB$ncb_lsn$LAYOUT() { return _NCB$ncb_lsn$LAYOUT_; }

    static final VarHandle _NCB$ncb_lsn$VH_ = _NCB$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ncb_lsn"));
    static final java.lang.invoke.VarHandle _NCB$ncb_lsn$VH() { return _NCB$ncb_lsn$VH_; }

    static final MemoryLayout _NCB$ncb_num$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _NCB$ncb_num$LAYOUT() { return _NCB$ncb_num$LAYOUT_; }

    static final VarHandle _NCB$ncb_num$VH_ = _NCB$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ncb_num"));
    static final java.lang.invoke.VarHandle _NCB$ncb_num$VH() { return _NCB$ncb_num$VH_; }

    static final MemoryLayout _NCB$ncb_buffer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _NCB$ncb_buffer$LAYOUT() { return _NCB$ncb_buffer$LAYOUT_; }

    static final VarHandle _NCB$ncb_buffer$VH_ = MemoryHandles.asAddressVarHandle(_NCB$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ncb_buffer")));
    static final java.lang.invoke.VarHandle _NCB$ncb_buffer$VH() { return _NCB$ncb_buffer$VH_; }

    static final MemoryLayout _NCB$ncb_length$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _NCB$ncb_length$LAYOUT() { return _NCB$ncb_length$LAYOUT_; }

    static final VarHandle _NCB$ncb_length$VH_ = _NCB$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ncb_length"));
    static final java.lang.invoke.VarHandle _NCB$ncb_length$VH() { return _NCB$ncb_length$VH_; }

    static final MemoryLayout _NCB$ncb_rto$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _NCB$ncb_rto$LAYOUT() { return _NCB$ncb_rto$LAYOUT_; }

    static final VarHandle _NCB$ncb_rto$VH_ = _NCB$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ncb_rto"));
    static final java.lang.invoke.VarHandle _NCB$ncb_rto$VH() { return _NCB$ncb_rto$VH_; }

    static final MemoryLayout _NCB$ncb_sto$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _NCB$ncb_sto$LAYOUT() { return _NCB$ncb_sto$LAYOUT_; }

    static final VarHandle _NCB$ncb_sto$VH_ = _NCB$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ncb_sto"));
    static final java.lang.invoke.VarHandle _NCB$ncb_sto$VH() { return _NCB$ncb_sto$VH_; }

    static final MemoryLayout _NCB$ncb_post$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _NCB$ncb_post$LAYOUT() { return _NCB$ncb_post$LAYOUT_; }

    static final VarHandle _NCB$ncb_post$VH_ = MemoryHandles.asAddressVarHandle(_NCB$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ncb_post")));
    static final java.lang.invoke.VarHandle _NCB$ncb_post$VH() { return _NCB$ncb_post$VH_; }

    static final MemoryLayout _NCB$ncb_lana_num$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _NCB$ncb_lana_num$LAYOUT() { return _NCB$ncb_lana_num$LAYOUT_; }

    static final VarHandle _NCB$ncb_lana_num$VH_ = _NCB$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ncb_lana_num"));
    static final java.lang.invoke.VarHandle _NCB$ncb_lana_num$VH() { return _NCB$ncb_lana_num$VH_; }

    static final MemoryLayout _NCB$ncb_cmd_cplt$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _NCB$ncb_cmd_cplt$LAYOUT() { return _NCB$ncb_cmd_cplt$LAYOUT_; }

    static final VarHandle _NCB$ncb_cmd_cplt$VH_ = _NCB$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ncb_cmd_cplt"));
    static final java.lang.invoke.VarHandle _NCB$ncb_cmd_cplt$VH() { return _NCB$ncb_cmd_cplt$VH_; }

    static final MemoryLayout _NCB$ncb_event$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _NCB$ncb_event$LAYOUT() { return _NCB$ncb_event$LAYOUT_; }

    static final VarHandle _NCB$ncb_event$VH_ = MemoryHandles.asAddressVarHandle(_NCB$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ncb_event")));
    static final java.lang.invoke.VarHandle _NCB$ncb_event$VH() { return _NCB$ncb_event$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(6, C_CHAR).withName("adapter_address"),
        C_CHAR.withName("rev_major"),
        C_CHAR.withName("reserved0"),
        C_CHAR.withName("adapter_type"),
        C_CHAR.withName("rev_minor"),
        C_SHORT.withName("duration"),
        C_SHORT.withName("frmr_recv"),
        C_SHORT.withName("frmr_xmit"),
        C_SHORT.withName("iframe_recv_err"),
        C_SHORT.withName("xmit_aborts"),
        C_LONG.withName("xmit_success"),
        C_LONG.withName("recv_success"),
        C_SHORT.withName("iframe_xmit_err"),
        C_SHORT.withName("recv_buff_unavail"),
        C_SHORT.withName("t1_timeouts"),
        C_SHORT.withName("ti_timeouts"),
        C_LONG.withName("reserved1"),
        C_SHORT.withName("free_ncbs"),
        C_SHORT.withName("max_cfg_ncbs"),
        C_SHORT.withName("max_ncbs"),
        C_SHORT.withName("xmit_buf_unavail"),
        C_SHORT.withName("max_dgram_size"),
        C_SHORT.withName("pending_sess"),
        C_SHORT.withName("max_cfg_sess"),
        C_SHORT.withName("max_sess"),
        C_SHORT.withName("max_sess_pkt_size"),
        C_SHORT.withName("name_count")
    ).withName("_ADAPTER_STATUS");
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$struct$LAYOUT() { return _ADAPTER_STATUS$struct$LAYOUT_; }

    static final MemoryLayout _ADAPTER_STATUS$rev_major$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$rev_major$LAYOUT() { return _ADAPTER_STATUS$rev_major$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$rev_major$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("rev_major"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$rev_major$VH() { return _ADAPTER_STATUS$rev_major$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$reserved0$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$reserved0$LAYOUT() { return _ADAPTER_STATUS$reserved0$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$reserved0$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("reserved0"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$reserved0$VH() { return _ADAPTER_STATUS$reserved0$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$adapter_type$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$adapter_type$LAYOUT() { return _ADAPTER_STATUS$adapter_type$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$adapter_type$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("adapter_type"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$adapter_type$VH() { return _ADAPTER_STATUS$adapter_type$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$rev_minor$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$rev_minor$LAYOUT() { return _ADAPTER_STATUS$rev_minor$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$rev_minor$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("rev_minor"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$rev_minor$VH() { return _ADAPTER_STATUS$rev_minor$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$duration$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$duration$LAYOUT() { return _ADAPTER_STATUS$duration$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$duration$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("duration"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$duration$VH() { return _ADAPTER_STATUS$duration$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$frmr_recv$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$frmr_recv$LAYOUT() { return _ADAPTER_STATUS$frmr_recv$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$frmr_recv$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("frmr_recv"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$frmr_recv$VH() { return _ADAPTER_STATUS$frmr_recv$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$frmr_xmit$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$frmr_xmit$LAYOUT() { return _ADAPTER_STATUS$frmr_xmit$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$frmr_xmit$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("frmr_xmit"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$frmr_xmit$VH() { return _ADAPTER_STATUS$frmr_xmit$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$iframe_recv_err$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$iframe_recv_err$LAYOUT() { return _ADAPTER_STATUS$iframe_recv_err$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$iframe_recv_err$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("iframe_recv_err"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$iframe_recv_err$VH() { return _ADAPTER_STATUS$iframe_recv_err$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$xmit_aborts$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$xmit_aborts$LAYOUT() { return _ADAPTER_STATUS$xmit_aborts$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$xmit_aborts$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("xmit_aborts"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$xmit_aborts$VH() { return _ADAPTER_STATUS$xmit_aborts$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$xmit_success$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$xmit_success$LAYOUT() { return _ADAPTER_STATUS$xmit_success$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$xmit_success$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("xmit_success"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$xmit_success$VH() { return _ADAPTER_STATUS$xmit_success$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$recv_success$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$recv_success$LAYOUT() { return _ADAPTER_STATUS$recv_success$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$recv_success$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("recv_success"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$recv_success$VH() { return _ADAPTER_STATUS$recv_success$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$iframe_xmit_err$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$iframe_xmit_err$LAYOUT() { return _ADAPTER_STATUS$iframe_xmit_err$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$iframe_xmit_err$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("iframe_xmit_err"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$iframe_xmit_err$VH() { return _ADAPTER_STATUS$iframe_xmit_err$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$recv_buff_unavail$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$recv_buff_unavail$LAYOUT() { return _ADAPTER_STATUS$recv_buff_unavail$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$recv_buff_unavail$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("recv_buff_unavail"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$recv_buff_unavail$VH() { return _ADAPTER_STATUS$recv_buff_unavail$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$t1_timeouts$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$t1_timeouts$LAYOUT() { return _ADAPTER_STATUS$t1_timeouts$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$t1_timeouts$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("t1_timeouts"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$t1_timeouts$VH() { return _ADAPTER_STATUS$t1_timeouts$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$ti_timeouts$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$ti_timeouts$LAYOUT() { return _ADAPTER_STATUS$ti_timeouts$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$ti_timeouts$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ti_timeouts"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$ti_timeouts$VH() { return _ADAPTER_STATUS$ti_timeouts$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$reserved1$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$reserved1$LAYOUT() { return _ADAPTER_STATUS$reserved1$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$reserved1$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("reserved1"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$reserved1$VH() { return _ADAPTER_STATUS$reserved1$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$free_ncbs$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$free_ncbs$LAYOUT() { return _ADAPTER_STATUS$free_ncbs$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$free_ncbs$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("free_ncbs"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$free_ncbs$VH() { return _ADAPTER_STATUS$free_ncbs$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$max_cfg_ncbs$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$max_cfg_ncbs$LAYOUT() { return _ADAPTER_STATUS$max_cfg_ncbs$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$max_cfg_ncbs$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("max_cfg_ncbs"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$max_cfg_ncbs$VH() { return _ADAPTER_STATUS$max_cfg_ncbs$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$max_ncbs$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$max_ncbs$LAYOUT() { return _ADAPTER_STATUS$max_ncbs$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$max_ncbs$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("max_ncbs"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$max_ncbs$VH() { return _ADAPTER_STATUS$max_ncbs$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$xmit_buf_unavail$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$xmit_buf_unavail$LAYOUT() { return _ADAPTER_STATUS$xmit_buf_unavail$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$xmit_buf_unavail$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("xmit_buf_unavail"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$xmit_buf_unavail$VH() { return _ADAPTER_STATUS$xmit_buf_unavail$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$max_dgram_size$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$max_dgram_size$LAYOUT() { return _ADAPTER_STATUS$max_dgram_size$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$max_dgram_size$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("max_dgram_size"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$max_dgram_size$VH() { return _ADAPTER_STATUS$max_dgram_size$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$pending_sess$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$pending_sess$LAYOUT() { return _ADAPTER_STATUS$pending_sess$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$pending_sess$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("pending_sess"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$pending_sess$VH() { return _ADAPTER_STATUS$pending_sess$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$max_cfg_sess$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$max_cfg_sess$LAYOUT() { return _ADAPTER_STATUS$max_cfg_sess$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$max_cfg_sess$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("max_cfg_sess"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$max_cfg_sess$VH() { return _ADAPTER_STATUS$max_cfg_sess$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$max_sess$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$max_sess$LAYOUT() { return _ADAPTER_STATUS$max_sess$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$max_sess$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("max_sess"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$max_sess$VH() { return _ADAPTER_STATUS$max_sess$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$max_sess_pkt_size$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$max_sess_pkt_size$LAYOUT() { return _ADAPTER_STATUS$max_sess_pkt_size$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$max_sess_pkt_size$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("max_sess_pkt_size"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$max_sess_pkt_size$VH() { return _ADAPTER_STATUS$max_sess_pkt_size$VH_; }

    static final MemoryLayout _ADAPTER_STATUS$name_count$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ADAPTER_STATUS$name_count$LAYOUT() { return _ADAPTER_STATUS$name_count$LAYOUT_; }

    static final VarHandle _ADAPTER_STATUS$name_count$VH_ = _ADAPTER_STATUS$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("name_count"));
    static final java.lang.invoke.VarHandle _ADAPTER_STATUS$name_count$VH() { return _ADAPTER_STATUS$name_count$VH_; }

    static final MemoryLayout _NAME_BUFFER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(16, C_CHAR).withName("name"),
        C_CHAR.withName("name_num"),
        C_CHAR.withName("name_flags")
    ).withName("_NAME_BUFFER");
    static final jdk.incubator.foreign.MemoryLayout _NAME_BUFFER$struct$LAYOUT() { return _NAME_BUFFER$struct$LAYOUT_; }

    static final MemoryLayout _NAME_BUFFER$name_num$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _NAME_BUFFER$name_num$LAYOUT() { return _NAME_BUFFER$name_num$LAYOUT_; }

    static final VarHandle _NAME_BUFFER$name_num$VH_ = _NAME_BUFFER$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("name_num"));
    static final java.lang.invoke.VarHandle _NAME_BUFFER$name_num$VH() { return _NAME_BUFFER$name_num$VH_; }

    static final MemoryLayout _NAME_BUFFER$name_flags$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _NAME_BUFFER$name_flags$LAYOUT() { return _NAME_BUFFER$name_flags$LAYOUT_; }

    static final VarHandle _NAME_BUFFER$name_flags$VH_ = _NAME_BUFFER$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("name_flags"));
    static final java.lang.invoke.VarHandle _NAME_BUFFER$name_flags$VH() { return _NAME_BUFFER$name_flags$VH_; }

    static final MemoryLayout _SESSION_HEADER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("sess_name"),
        C_CHAR.withName("num_sess"),
        C_CHAR.withName("rcv_dg_outstanding"),
        C_CHAR.withName("rcv_any_outstanding")
    ).withName("_SESSION_HEADER");
    static final jdk.incubator.foreign.MemoryLayout _SESSION_HEADER$struct$LAYOUT() { return _SESSION_HEADER$struct$LAYOUT_; }

    static final MemoryLayout _SESSION_HEADER$sess_name$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _SESSION_HEADER$sess_name$LAYOUT() { return _SESSION_HEADER$sess_name$LAYOUT_; }

    static final VarHandle _SESSION_HEADER$sess_name$VH_ = _SESSION_HEADER$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("sess_name"));
    static final java.lang.invoke.VarHandle _SESSION_HEADER$sess_name$VH() { return _SESSION_HEADER$sess_name$VH_; }

    static final MemoryLayout _SESSION_HEADER$num_sess$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _SESSION_HEADER$num_sess$LAYOUT() { return _SESSION_HEADER$num_sess$LAYOUT_; }

    static final VarHandle _SESSION_HEADER$num_sess$VH_ = _SESSION_HEADER$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("num_sess"));
    static final java.lang.invoke.VarHandle _SESSION_HEADER$num_sess$VH() { return _SESSION_HEADER$num_sess$VH_; }

    static final MemoryLayout _SESSION_HEADER$rcv_dg_outstanding$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _SESSION_HEADER$rcv_dg_outstanding$LAYOUT() { return _SESSION_HEADER$rcv_dg_outstanding$LAYOUT_; }

    static final VarHandle _SESSION_HEADER$rcv_dg_outstanding$VH_ = _SESSION_HEADER$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("rcv_dg_outstanding"));
    static final java.lang.invoke.VarHandle _SESSION_HEADER$rcv_dg_outstanding$VH() { return _SESSION_HEADER$rcv_dg_outstanding$VH_; }

    static final MemoryLayout _SESSION_HEADER$rcv_any_outstanding$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _SESSION_HEADER$rcv_any_outstanding$LAYOUT() { return _SESSION_HEADER$rcv_any_outstanding$LAYOUT_; }

    static final VarHandle _SESSION_HEADER$rcv_any_outstanding$VH_ = _SESSION_HEADER$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("rcv_any_outstanding"));
    static final java.lang.invoke.VarHandle _SESSION_HEADER$rcv_any_outstanding$VH() { return _SESSION_HEADER$rcv_any_outstanding$VH_; }

    static final MemoryLayout _SESSION_BUFFER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("lsn"),
        C_CHAR.withName("state"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("local_name"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("remote_name"),
        C_CHAR.withName("rcvs_outstanding"),
        C_CHAR.withName("sends_outstanding")
    ).withName("_SESSION_BUFFER");
    static final jdk.incubator.foreign.MemoryLayout _SESSION_BUFFER$struct$LAYOUT() { return _SESSION_BUFFER$struct$LAYOUT_; }

    static final MemoryLayout _SESSION_BUFFER$lsn$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _SESSION_BUFFER$lsn$LAYOUT() { return _SESSION_BUFFER$lsn$LAYOUT_; }

    static final VarHandle _SESSION_BUFFER$lsn$VH_ = _SESSION_BUFFER$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("lsn"));
    static final java.lang.invoke.VarHandle _SESSION_BUFFER$lsn$VH() { return _SESSION_BUFFER$lsn$VH_; }

    static final MemoryLayout _SESSION_BUFFER$state$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _SESSION_BUFFER$state$LAYOUT() { return _SESSION_BUFFER$state$LAYOUT_; }

    static final VarHandle _SESSION_BUFFER$state$VH_ = _SESSION_BUFFER$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("state"));
    static final java.lang.invoke.VarHandle _SESSION_BUFFER$state$VH() { return _SESSION_BUFFER$state$VH_; }

    static final MemoryLayout _SESSION_BUFFER$rcvs_outstanding$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _SESSION_BUFFER$rcvs_outstanding$LAYOUT() { return _SESSION_BUFFER$rcvs_outstanding$LAYOUT_; }

    static final VarHandle _SESSION_BUFFER$rcvs_outstanding$VH_ = _SESSION_BUFFER$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("rcvs_outstanding"));
    static final java.lang.invoke.VarHandle _SESSION_BUFFER$rcvs_outstanding$VH() { return _SESSION_BUFFER$rcvs_outstanding$VH_; }

    static final MemoryLayout _SESSION_BUFFER$sends_outstanding$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _SESSION_BUFFER$sends_outstanding$LAYOUT() { return _SESSION_BUFFER$sends_outstanding$LAYOUT_; }

    static final VarHandle _SESSION_BUFFER$sends_outstanding$VH_ = _SESSION_BUFFER$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("sends_outstanding"));
    static final java.lang.invoke.VarHandle _SESSION_BUFFER$sends_outstanding$VH() { return _SESSION_BUFFER$sends_outstanding$VH_; }

    static final MemoryLayout _LANA_ENUM$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("length"),
        MemoryLayout.ofSequence(255, C_CHAR).withName("lana")
    ).withName("_LANA_ENUM");
    static final jdk.incubator.foreign.MemoryLayout _LANA_ENUM$struct$LAYOUT() { return _LANA_ENUM$struct$LAYOUT_; }

    static final MemoryLayout _LANA_ENUM$length$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _LANA_ENUM$length$LAYOUT() { return _LANA_ENUM$length$LAYOUT_; }

    static final VarHandle _LANA_ENUM$length$VH_ = _LANA_ENUM$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("length"));
    static final java.lang.invoke.VarHandle _LANA_ENUM$length$VH() { return _LANA_ENUM$length$VH_; }

    static final MemoryLayout _FIND_NAME_HEADER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("node_count"),
        C_CHAR.withName("reserved"),
        C_CHAR.withName("unique_group")
    ).withName("_FIND_NAME_HEADER");
    static final jdk.incubator.foreign.MemoryLayout _FIND_NAME_HEADER$struct$LAYOUT() { return _FIND_NAME_HEADER$struct$LAYOUT_; }

    static final MemoryLayout _FIND_NAME_HEADER$node_count$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _FIND_NAME_HEADER$node_count$LAYOUT() { return _FIND_NAME_HEADER$node_count$LAYOUT_; }

    static final VarHandle _FIND_NAME_HEADER$node_count$VH_ = _FIND_NAME_HEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("node_count"));
    static final java.lang.invoke.VarHandle _FIND_NAME_HEADER$node_count$VH() { return _FIND_NAME_HEADER$node_count$VH_; }

    static final MemoryLayout _FIND_NAME_HEADER$reserved$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _FIND_NAME_HEADER$reserved$LAYOUT() { return _FIND_NAME_HEADER$reserved$LAYOUT_; }

    static final VarHandle _FIND_NAME_HEADER$reserved$VH_ = _FIND_NAME_HEADER$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("reserved"));
    static final java.lang.invoke.VarHandle _FIND_NAME_HEADER$reserved$VH() { return _FIND_NAME_HEADER$reserved$VH_; }

    static final MemoryLayout _FIND_NAME_HEADER$unique_group$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _FIND_NAME_HEADER$unique_group$LAYOUT() { return _FIND_NAME_HEADER$unique_group$LAYOUT_; }

    static final VarHandle _FIND_NAME_HEADER$unique_group$VH_ = _FIND_NAME_HEADER$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("unique_group"));
    static final java.lang.invoke.VarHandle _FIND_NAME_HEADER$unique_group$VH() { return _FIND_NAME_HEADER$unique_group$VH_; }

    static final MemoryLayout _FIND_NAME_BUFFER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("length"),
        C_CHAR.withName("access_control"),
        C_CHAR.withName("frame_control"),
        MemoryLayout.ofSequence(6, C_CHAR).withName("destination_addr"),
        MemoryLayout.ofSequence(6, C_CHAR).withName("source_addr"),
        MemoryLayout.ofSequence(18, C_CHAR).withName("routing_info")
    ).withName("_FIND_NAME_BUFFER");
    static final jdk.incubator.foreign.MemoryLayout _FIND_NAME_BUFFER$struct$LAYOUT() { return _FIND_NAME_BUFFER$struct$LAYOUT_; }

    static final MemoryLayout _FIND_NAME_BUFFER$length$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _FIND_NAME_BUFFER$length$LAYOUT() { return _FIND_NAME_BUFFER$length$LAYOUT_; }

    static final VarHandle _FIND_NAME_BUFFER$length$VH_ = _FIND_NAME_BUFFER$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("length"));
    static final java.lang.invoke.VarHandle _FIND_NAME_BUFFER$length$VH() { return _FIND_NAME_BUFFER$length$VH_; }

    static final MemoryLayout _FIND_NAME_BUFFER$access_control$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _FIND_NAME_BUFFER$access_control$LAYOUT() { return _FIND_NAME_BUFFER$access_control$LAYOUT_; }

    static final VarHandle _FIND_NAME_BUFFER$access_control$VH_ = _FIND_NAME_BUFFER$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("access_control"));
    static final java.lang.invoke.VarHandle _FIND_NAME_BUFFER$access_control$VH() { return _FIND_NAME_BUFFER$access_control$VH_; }

    static final MemoryLayout _FIND_NAME_BUFFER$frame_control$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _FIND_NAME_BUFFER$frame_control$LAYOUT() { return _FIND_NAME_BUFFER$frame_control$LAYOUT_; }

    static final VarHandle _FIND_NAME_BUFFER$frame_control$VH_ = _FIND_NAME_BUFFER$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("frame_control"));
    static final java.lang.invoke.VarHandle _FIND_NAME_BUFFER$frame_control$VH() { return _FIND_NAME_BUFFER$frame_control$VH_; }

    static final MemoryLayout _ACTION_HEADER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("transport_id"),
        C_SHORT.withName("action_code"),
        C_SHORT.withName("reserved")
    ).withName("_ACTION_HEADER");
    static final jdk.incubator.foreign.MemoryLayout _ACTION_HEADER$struct$LAYOUT() { return _ACTION_HEADER$struct$LAYOUT_; }

    static final MemoryLayout _ACTION_HEADER$transport_id$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTION_HEADER$transport_id$LAYOUT() { return _ACTION_HEADER$transport_id$LAYOUT_; }

    static final VarHandle _ACTION_HEADER$transport_id$VH_ = _ACTION_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("transport_id"));
    static final java.lang.invoke.VarHandle _ACTION_HEADER$transport_id$VH() { return _ACTION_HEADER$transport_id$VH_; }

    static final MemoryLayout _ACTION_HEADER$action_code$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ACTION_HEADER$action_code$LAYOUT() { return _ACTION_HEADER$action_code$LAYOUT_; }

    static final VarHandle _ACTION_HEADER$action_code$VH_ = _ACTION_HEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("action_code"));
    static final java.lang.invoke.VarHandle _ACTION_HEADER$action_code$VH() { return _ACTION_HEADER$action_code$VH_; }

    static final MemoryLayout _ACTION_HEADER$reserved$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _ACTION_HEADER$reserved$LAYOUT() { return _ACTION_HEADER$reserved$LAYOUT_; }

    static final VarHandle _ACTION_HEADER$reserved$VH_ = _ACTION_HEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("reserved"));
    static final java.lang.invoke.VarHandle _ACTION_HEADER$reserved$VH() { return _ACTION_HEADER$reserved$VH_; }

    static final FunctionDescriptor Netbios$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor Netbios$FUNC() { return Netbios$FUNC_; }

    static final MethodHandle Netbios$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "Netbios",
        "(Ljdk/incubator/foreign/MemoryAddress;)B",
        Netbios$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle Netbios$MH() { return Netbios$MH_; }

    static final MemoryLayout _RPC_BINDING_VECTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Count"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofSequence(1, C_POINTER).withName("BindingH")
    ).withName("_RPC_BINDING_VECTOR");
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_VECTOR$struct$LAYOUT() { return _RPC_BINDING_VECTOR$struct$LAYOUT_; }

    static final MemoryLayout _RPC_BINDING_VECTOR$Count$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_VECTOR$Count$LAYOUT() { return _RPC_BINDING_VECTOR$Count$LAYOUT_; }

    static final VarHandle _RPC_BINDING_VECTOR$Count$VH_ = _RPC_BINDING_VECTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Count"));
    static final java.lang.invoke.VarHandle _RPC_BINDING_VECTOR$Count$VH() { return _RPC_BINDING_VECTOR$Count$VH_; }

    static final MemoryLayout _UUID_VECTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Count"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofSequence(1, C_POINTER).withName("Uuid")
    ).withName("_UUID_VECTOR");
    static final jdk.incubator.foreign.MemoryLayout _UUID_VECTOR$struct$LAYOUT() { return _UUID_VECTOR$struct$LAYOUT_; }

    static final MemoryLayout _UUID_VECTOR$Count$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _UUID_VECTOR$Count$LAYOUT() { return _UUID_VECTOR$Count$LAYOUT_; }

    static final VarHandle _UUID_VECTOR$Count$VH_ = _UUID_VECTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Count"));
    static final java.lang.invoke.VarHandle _UUID_VECTOR$Count$VH() { return _UUID_VECTOR$Count$VH_; }

    static final MemoryLayout _RPC_IF_ID$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("Uuid"),
        C_SHORT.withName("VersMajor"),
        C_SHORT.withName("VersMinor")
    ).withName("_RPC_IF_ID");
    static final jdk.incubator.foreign.MemoryLayout _RPC_IF_ID$struct$LAYOUT() { return _RPC_IF_ID$struct$LAYOUT_; }

    static final MemoryLayout _RPC_IF_ID$VersMajor$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_IF_ID$VersMajor$LAYOUT() { return _RPC_IF_ID$VersMajor$LAYOUT_; }

    static final VarHandle _RPC_IF_ID$VersMajor$VH_ = _RPC_IF_ID$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("VersMajor"));
    static final java.lang.invoke.VarHandle _RPC_IF_ID$VersMajor$VH() { return _RPC_IF_ID$VersMajor$VH_; }

    static final MemoryLayout _RPC_IF_ID$VersMinor$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_IF_ID$VersMinor$LAYOUT() { return _RPC_IF_ID$VersMinor$LAYOUT_; }

    static final VarHandle _RPC_IF_ID$VersMinor$VH_ = _RPC_IF_ID$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("VersMinor"));
    static final java.lang.invoke.VarHandle _RPC_IF_ID$VersMinor$VH() { return _RPC_IF_ID$VersMinor$VH_; }

    static final MemoryLayout _RPC_PROTSEQ_VECTORA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Count"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofSequence(1, C_POINTER).withName("Protseq")
    ).withName("_RPC_PROTSEQ_VECTORA");
    static final jdk.incubator.foreign.MemoryLayout _RPC_PROTSEQ_VECTORA$struct$LAYOUT() { return _RPC_PROTSEQ_VECTORA$struct$LAYOUT_; }

    static final MemoryLayout _RPC_PROTSEQ_VECTORA$Count$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_PROTSEQ_VECTORA$Count$LAYOUT() { return _RPC_PROTSEQ_VECTORA$Count$LAYOUT_; }

    static final VarHandle _RPC_PROTSEQ_VECTORA$Count$VH_ = _RPC_PROTSEQ_VECTORA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Count"));
    static final java.lang.invoke.VarHandle _RPC_PROTSEQ_VECTORA$Count$VH() { return _RPC_PROTSEQ_VECTORA$Count$VH_; }

    static final MemoryLayout _RPC_PROTSEQ_VECTORW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Count"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofSequence(1, C_POINTER).withName("Protseq")
    ).withName("_RPC_PROTSEQ_VECTORW");
    static final jdk.incubator.foreign.MemoryLayout _RPC_PROTSEQ_VECTORW$struct$LAYOUT() { return _RPC_PROTSEQ_VECTORW$struct$LAYOUT_; }

    static final MemoryLayout _RPC_PROTSEQ_VECTORW$Count$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_PROTSEQ_VECTORW$Count$LAYOUT() { return _RPC_PROTSEQ_VECTORW$Count$LAYOUT_; }

    static final VarHandle _RPC_PROTSEQ_VECTORW$Count$VH_ = _RPC_PROTSEQ_VECTORW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Count"));
    static final java.lang.invoke.VarHandle _RPC_PROTSEQ_VECTORW$Count$VH() { return _RPC_PROTSEQ_VECTORW$Count$VH_; }

    static final MemoryLayout _RPC_POLICY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Length"),
        C_LONG.withName("EndpointFlags"),
        C_LONG.withName("NICFlags")
    ).withName("_RPC_POLICY");
    static final jdk.incubator.foreign.MemoryLayout _RPC_POLICY$struct$LAYOUT() { return _RPC_POLICY$struct$LAYOUT_; }

    static final MemoryLayout _RPC_POLICY$Length$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_POLICY$Length$LAYOUT() { return _RPC_POLICY$Length$LAYOUT_; }

    static final VarHandle _RPC_POLICY$Length$VH_ = _RPC_POLICY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Length"));
    static final java.lang.invoke.VarHandle _RPC_POLICY$Length$VH() { return _RPC_POLICY$Length$VH_; }

    static final MemoryLayout _RPC_POLICY$EndpointFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_POLICY$EndpointFlags$LAYOUT() { return _RPC_POLICY$EndpointFlags$LAYOUT_; }

    static final VarHandle _RPC_POLICY$EndpointFlags$VH_ = _RPC_POLICY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EndpointFlags"));
    static final java.lang.invoke.VarHandle _RPC_POLICY$EndpointFlags$VH() { return _RPC_POLICY$EndpointFlags$VH_; }

    static final MemoryLayout _RPC_POLICY$NICFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_POLICY$NICFlags$LAYOUT() { return _RPC_POLICY$NICFlags$LAYOUT_; }

    static final VarHandle _RPC_POLICY$NICFlags$VH_ = _RPC_POLICY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NICFlags"));
    static final java.lang.invoke.VarHandle _RPC_POLICY$NICFlags$VH() { return _RPC_POLICY$NICFlags$VH_; }

    static final MemoryLayout RPC_STATS_VECTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Count"),
        MemoryLayout.ofSequence(1, C_LONG).withName("Stats")
    );
    static final jdk.incubator.foreign.MemoryLayout RPC_STATS_VECTOR$struct$LAYOUT() { return RPC_STATS_VECTOR$struct$LAYOUT_; }

    static final MemoryLayout RPC_STATS_VECTOR$Count$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout RPC_STATS_VECTOR$Count$LAYOUT() { return RPC_STATS_VECTOR$Count$LAYOUT_; }

    static final VarHandle RPC_STATS_VECTOR$Count$VH_ = RPC_STATS_VECTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Count"));
    static final java.lang.invoke.VarHandle RPC_STATS_VECTOR$Count$VH() { return RPC_STATS_VECTOR$Count$VH_; }

    static final MemoryLayout RPC_IF_ID_VECTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Count"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofSequence(1, C_POINTER).withName("IfId")
    );
    static final jdk.incubator.foreign.MemoryLayout RPC_IF_ID_VECTOR$struct$LAYOUT() { return RPC_IF_ID_VECTOR$struct$LAYOUT_; }

    static final MemoryLayout RPC_IF_ID_VECTOR$Count$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout RPC_IF_ID_VECTOR$Count$LAYOUT() { return RPC_IF_ID_VECTOR$Count$LAYOUT_; }

    static final VarHandle RPC_IF_ID_VECTOR$Count$VH_ = RPC_IF_ID_VECTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Count"));
    static final java.lang.invoke.VarHandle RPC_IF_ID_VECTOR$Count$VH() { return RPC_IF_ID_VECTOR$Count$VH_; }

    static final FunctionDescriptor RpcBindingCopy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingCopy$FUNC() { return RpcBindingCopy$FUNC_; }

    static final MethodHandle RpcBindingCopy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingCopy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingCopy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingCopy$MH() { return RpcBindingCopy$MH_; }

    static final FunctionDescriptor RpcBindingFree$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingFree$FUNC() { return RpcBindingFree$FUNC_; }

    static final MethodHandle RpcBindingFree$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingFree",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingFree$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingFree$MH() { return RpcBindingFree$MH_; }

    static final FunctionDescriptor RpcBindingSetOption$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingSetOption$FUNC() { return RpcBindingSetOption$FUNC_; }

    static final MethodHandle RpcBindingSetOption$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingSetOption",
        "(Ljdk/incubator/foreign/MemoryAddress;IJ)I",
        RpcBindingSetOption$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingSetOption$MH() { return RpcBindingSetOption$MH_; }

    static final FunctionDescriptor RpcBindingInqOption$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingInqOption$FUNC() { return RpcBindingInqOption$FUNC_; }

    static final MethodHandle RpcBindingInqOption$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingInqOption",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingInqOption$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingInqOption$MH() { return RpcBindingInqOption$MH_; }

    static final FunctionDescriptor RpcBindingFromStringBindingA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingFromStringBindingA$FUNC() { return RpcBindingFromStringBindingA$FUNC_; }

    static final MethodHandle RpcBindingFromStringBindingA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingFromStringBindingA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingFromStringBindingA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingFromStringBindingA$MH() { return RpcBindingFromStringBindingA$MH_; }

    static final FunctionDescriptor RpcBindingFromStringBindingW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingFromStringBindingW$FUNC() { return RpcBindingFromStringBindingW$FUNC_; }

    static final MethodHandle RpcBindingFromStringBindingW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingFromStringBindingW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingFromStringBindingW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingFromStringBindingW$MH() { return RpcBindingFromStringBindingW$MH_; }

    static final FunctionDescriptor RpcSsGetContextBinding$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcSsGetContextBinding$FUNC() { return RpcSsGetContextBinding$FUNC_; }

    static final MethodHandle RpcSsGetContextBinding$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcSsGetContextBinding",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcSsGetContextBinding$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcSsGetContextBinding$MH() { return RpcSsGetContextBinding$MH_; }

    static final FunctionDescriptor RpcBindingInqObject$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingInqObject$FUNC() { return RpcBindingInqObject$FUNC_; }

    static final MethodHandle RpcBindingInqObject$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingInqObject",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingInqObject$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingInqObject$MH() { return RpcBindingInqObject$MH_; }

    static final FunctionDescriptor RpcBindingReset$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingReset$FUNC() { return RpcBindingReset$FUNC_; }

    static final MethodHandle RpcBindingReset$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingReset",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingReset$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingReset$MH() { return RpcBindingReset$MH_; }

    static final FunctionDescriptor RpcBindingSetObject$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingSetObject$FUNC() { return RpcBindingSetObject$FUNC_; }

    static final MethodHandle RpcBindingSetObject$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingSetObject",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingSetObject$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingSetObject$MH() { return RpcBindingSetObject$MH_; }

    static final FunctionDescriptor RpcMgmtInqDefaultProtectLevel$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtInqDefaultProtectLevel$FUNC() { return RpcMgmtInqDefaultProtectLevel$FUNC_; }

    static final MethodHandle RpcMgmtInqDefaultProtectLevel$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcMgmtInqDefaultProtectLevel",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcMgmtInqDefaultProtectLevel$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcMgmtInqDefaultProtectLevel$MH() { return RpcMgmtInqDefaultProtectLevel$MH_; }

    static final FunctionDescriptor RpcBindingToStringBindingA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingToStringBindingA$FUNC() { return RpcBindingToStringBindingA$FUNC_; }

    static final MethodHandle RpcBindingToStringBindingA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingToStringBindingA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingToStringBindingA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingToStringBindingA$MH() { return RpcBindingToStringBindingA$MH_; }

    static final FunctionDescriptor RpcBindingToStringBindingW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingToStringBindingW$FUNC() { return RpcBindingToStringBindingW$FUNC_; }

    static final MethodHandle RpcBindingToStringBindingW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingToStringBindingW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingToStringBindingW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingToStringBindingW$MH() { return RpcBindingToStringBindingW$MH_; }

    static final FunctionDescriptor RpcBindingVectorFree$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingVectorFree$FUNC() { return RpcBindingVectorFree$FUNC_; }

    static final MethodHandle RpcBindingVectorFree$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingVectorFree",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingVectorFree$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingVectorFree$MH() { return RpcBindingVectorFree$MH_; }

    static final FunctionDescriptor RpcStringBindingComposeA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcStringBindingComposeA$FUNC() { return RpcStringBindingComposeA$FUNC_; }

    static final MethodHandle RpcStringBindingComposeA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcStringBindingComposeA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcStringBindingComposeA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcStringBindingComposeA$MH() { return RpcStringBindingComposeA$MH_; }

    static final FunctionDescriptor RpcStringBindingComposeW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcStringBindingComposeW$FUNC() { return RpcStringBindingComposeW$FUNC_; }

    static final MethodHandle RpcStringBindingComposeW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcStringBindingComposeW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcStringBindingComposeW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcStringBindingComposeW$MH() { return RpcStringBindingComposeW$MH_; }

    static final FunctionDescriptor RpcStringBindingParseA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcStringBindingParseA$FUNC() { return RpcStringBindingParseA$FUNC_; }

    static final MethodHandle RpcStringBindingParseA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcStringBindingParseA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcStringBindingParseA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcStringBindingParseA$MH() { return RpcStringBindingParseA$MH_; }

    static final FunctionDescriptor RpcStringBindingParseW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcStringBindingParseW$FUNC() { return RpcStringBindingParseW$FUNC_; }

    static final MethodHandle RpcStringBindingParseW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcStringBindingParseW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcStringBindingParseW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcStringBindingParseW$MH() { return RpcStringBindingParseW$MH_; }

    static final FunctionDescriptor RpcStringFreeA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcStringFreeA$FUNC() { return RpcStringFreeA$FUNC_; }

    static final MethodHandle RpcStringFreeA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcStringFreeA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcStringFreeA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcStringFreeA$MH() { return RpcStringFreeA$MH_; }

    static final FunctionDescriptor RpcStringFreeW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcStringFreeW$FUNC() { return RpcStringFreeW$FUNC_; }

    static final MethodHandle RpcStringFreeW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcStringFreeW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcStringFreeW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcStringFreeW$MH() { return RpcStringFreeW$MH_; }

    static final FunctionDescriptor RpcIfInqId$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcIfInqId$FUNC() { return RpcIfInqId$FUNC_; }

    static final MethodHandle RpcIfInqId$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcIfInqId",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcIfInqId$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcIfInqId$MH() { return RpcIfInqId$MH_; }

    static final FunctionDescriptor RpcNetworkIsProtseqValidA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNetworkIsProtseqValidA$FUNC() { return RpcNetworkIsProtseqValidA$FUNC_; }

    static final MethodHandle RpcNetworkIsProtseqValidA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNetworkIsProtseqValidA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNetworkIsProtseqValidA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNetworkIsProtseqValidA$MH() { return RpcNetworkIsProtseqValidA$MH_; }

    static final FunctionDescriptor RpcNetworkIsProtseqValidW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNetworkIsProtseqValidW$FUNC() { return RpcNetworkIsProtseqValidW$FUNC_; }

    static final MethodHandle RpcNetworkIsProtseqValidW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNetworkIsProtseqValidW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNetworkIsProtseqValidW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNetworkIsProtseqValidW$MH() { return RpcNetworkIsProtseqValidW$MH_; }

    static final FunctionDescriptor RpcMgmtInqComTimeout$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtInqComTimeout$FUNC() { return RpcMgmtInqComTimeout$FUNC_; }

    static final MethodHandle RpcMgmtInqComTimeout$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcMgmtInqComTimeout",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcMgmtInqComTimeout$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcMgmtInqComTimeout$MH() { return RpcMgmtInqComTimeout$MH_; }

    static final FunctionDescriptor RpcMgmtSetComTimeout$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtSetComTimeout$FUNC() { return RpcMgmtSetComTimeout$FUNC_; }

    static final MethodHandle RpcMgmtSetComTimeout$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcMgmtSetComTimeout",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        RpcMgmtSetComTimeout$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcMgmtSetComTimeout$MH() { return RpcMgmtSetComTimeout$MH_; }

    static final FunctionDescriptor RpcMgmtSetCancelTimeout$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtSetCancelTimeout$FUNC() { return RpcMgmtSetCancelTimeout$FUNC_; }

    static final MethodHandle RpcMgmtSetCancelTimeout$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcMgmtSetCancelTimeout",
        "(I)I",
        RpcMgmtSetCancelTimeout$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcMgmtSetCancelTimeout$MH() { return RpcMgmtSetCancelTimeout$MH_; }

    static final FunctionDescriptor RpcNetworkInqProtseqsA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNetworkInqProtseqsA$FUNC() { return RpcNetworkInqProtseqsA$FUNC_; }

    static final MethodHandle RpcNetworkInqProtseqsA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNetworkInqProtseqsA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNetworkInqProtseqsA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNetworkInqProtseqsA$MH() { return RpcNetworkInqProtseqsA$MH_; }

    static final FunctionDescriptor RpcNetworkInqProtseqsW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNetworkInqProtseqsW$FUNC() { return RpcNetworkInqProtseqsW$FUNC_; }

    static final MethodHandle RpcNetworkInqProtseqsW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNetworkInqProtseqsW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcNetworkInqProtseqsW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNetworkInqProtseqsW$MH() { return RpcNetworkInqProtseqsW$MH_; }

    static final FunctionDescriptor RpcObjectInqType$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcObjectInqType$FUNC() { return RpcObjectInqType$FUNC_; }

    static final MethodHandle RpcObjectInqType$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcObjectInqType",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcObjectInqType$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcObjectInqType$MH() { return RpcObjectInqType$MH_; }

    static final FunctionDescriptor RpcObjectSetInqFn$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcObjectSetInqFn$FUNC() { return RpcObjectSetInqFn$FUNC_; }

    static final MethodHandle RpcObjectSetInqFn$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcObjectSetInqFn",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcObjectSetInqFn$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcObjectSetInqFn$MH() { return RpcObjectSetInqFn$MH_; }

    static final FunctionDescriptor RpcObjectSetInqFn$InquiryFn$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcObjectSetInqFn$InquiryFn$FUNC() { return RpcObjectSetInqFn$InquiryFn$FUNC_; }

    static final FunctionDescriptor RpcObjectSetType$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcObjectSetType$FUNC() { return RpcObjectSetType$FUNC_; }

    static final MethodHandle RpcObjectSetType$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcObjectSetType",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcObjectSetType$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcObjectSetType$MH() { return RpcObjectSetType$MH_; }

    static final FunctionDescriptor RpcProtseqVectorFreeA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcProtseqVectorFreeA$FUNC() { return RpcProtseqVectorFreeA$FUNC_; }

    static final MethodHandle RpcProtseqVectorFreeA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcProtseqVectorFreeA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcProtseqVectorFreeA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcProtseqVectorFreeA$MH() { return RpcProtseqVectorFreeA$MH_; }

    static final FunctionDescriptor RpcProtseqVectorFreeW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcProtseqVectorFreeW$FUNC() { return RpcProtseqVectorFreeW$FUNC_; }

    static final MethodHandle RpcProtseqVectorFreeW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcProtseqVectorFreeW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcProtseqVectorFreeW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcProtseqVectorFreeW$MH() { return RpcProtseqVectorFreeW$MH_; }

    static final FunctionDescriptor RpcServerInqBindings$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerInqBindings$FUNC() { return RpcServerInqBindings$FUNC_; }

    static final MethodHandle RpcServerInqBindings$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerInqBindings",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerInqBindings$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerInqBindings$MH() { return RpcServerInqBindings$MH_; }

    static final FunctionDescriptor RpcServerInqBindingsEx$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerInqBindingsEx$FUNC() { return RpcServerInqBindingsEx$FUNC_; }

    static final MethodHandle RpcServerInqBindingsEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerInqBindingsEx",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerInqBindingsEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerInqBindingsEx$MH() { return RpcServerInqBindingsEx$MH_; }

    static final FunctionDescriptor RpcServerInqIf$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerInqIf$FUNC() { return RpcServerInqIf$FUNC_; }

    static final MethodHandle RpcServerInqIf$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerInqIf",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerInqIf$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerInqIf$MH() { return RpcServerInqIf$MH_; }

    static final FunctionDescriptor RpcServerListen$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerListen$FUNC() { return RpcServerListen$FUNC_; }

    static final MethodHandle RpcServerListen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerListen",
        "(III)I",
        RpcServerListen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerListen$MH() { return RpcServerListen$MH_; }

    static final FunctionDescriptor RpcServerRegisterIf$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerRegisterIf$FUNC() { return RpcServerRegisterIf$FUNC_; }

    static final MethodHandle RpcServerRegisterIf$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerRegisterIf",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerRegisterIf$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerRegisterIf$MH() { return RpcServerRegisterIf$MH_; }

    static final FunctionDescriptor RpcServerRegisterIfEx$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerRegisterIfEx$FUNC() { return RpcServerRegisterIfEx$FUNC_; }

    static final MethodHandle RpcServerRegisterIfEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerRegisterIfEx",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        RpcServerRegisterIfEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerRegisterIfEx$MH() { return RpcServerRegisterIfEx$MH_; }

    static final FunctionDescriptor RpcServerRegisterIfEx$IfCallback$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerRegisterIfEx$IfCallback$FUNC() { return RpcServerRegisterIfEx$IfCallback$FUNC_; }

    static final FunctionDescriptor RpcServerRegisterIf2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerRegisterIf2$FUNC() { return RpcServerRegisterIf2$FUNC_; }

    static final MethodHandle RpcServerRegisterIf2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerRegisterIf2",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;)I",
        RpcServerRegisterIf2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerRegisterIf2$MH() { return RpcServerRegisterIf2$MH_; }

    static final FunctionDescriptor RpcServerRegisterIf2$IfCallbackFn$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerRegisterIf2$IfCallbackFn$FUNC() { return RpcServerRegisterIf2$IfCallbackFn$FUNC_; }

    static final FunctionDescriptor RpcServerRegisterIf3$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerRegisterIf3$FUNC() { return RpcServerRegisterIf3$FUNC_; }

    static final MethodHandle RpcServerRegisterIf3$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerRegisterIf3",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerRegisterIf3$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerRegisterIf3$MH() { return RpcServerRegisterIf3$MH_; }

    static final FunctionDescriptor RpcServerRegisterIf3$IfCallback$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerRegisterIf3$IfCallback$FUNC() { return RpcServerRegisterIf3$IfCallback$FUNC_; }

    static final FunctionDescriptor RpcServerUnregisterIf$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerUnregisterIf$FUNC() { return RpcServerUnregisterIf$FUNC_; }

    static final MethodHandle RpcServerUnregisterIf$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerUnregisterIf",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        RpcServerUnregisterIf$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerUnregisterIf$MH() { return RpcServerUnregisterIf$MH_; }

    static final FunctionDescriptor RpcServerUnregisterIfEx$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerUnregisterIfEx$FUNC() { return RpcServerUnregisterIfEx$FUNC_; }

    static final MethodHandle RpcServerUnregisterIfEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerUnregisterIfEx",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        RpcServerUnregisterIfEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerUnregisterIfEx$MH() { return RpcServerUnregisterIfEx$MH_; }

    static final FunctionDescriptor RpcServerUseAllProtseqs$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerUseAllProtseqs$FUNC() { return RpcServerUseAllProtseqs$FUNC_; }

    static final MethodHandle RpcServerUseAllProtseqs$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerUseAllProtseqs",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcServerUseAllProtseqs$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerUseAllProtseqs$MH() { return RpcServerUseAllProtseqs$MH_; }

    static final FunctionDescriptor RpcServerUseAllProtseqsEx$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerUseAllProtseqsEx$FUNC() { return RpcServerUseAllProtseqsEx$FUNC_; }

    static final MethodHandle RpcServerUseAllProtseqsEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerUseAllProtseqsEx",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerUseAllProtseqsEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerUseAllProtseqsEx$MH() { return RpcServerUseAllProtseqsEx$MH_; }

    static final FunctionDescriptor RpcServerUseAllProtseqsIf$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerUseAllProtseqsIf$FUNC() { return RpcServerUseAllProtseqsIf$FUNC_; }

    static final MethodHandle RpcServerUseAllProtseqsIf$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerUseAllProtseqsIf",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerUseAllProtseqsIf$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerUseAllProtseqsIf$MH() { return RpcServerUseAllProtseqsIf$MH_; }

    static final FunctionDescriptor RpcServerUseAllProtseqsIfEx$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerUseAllProtseqsIfEx$FUNC() { return RpcServerUseAllProtseqsIfEx$FUNC_; }

    static final MethodHandle RpcServerUseAllProtseqsIfEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerUseAllProtseqsIfEx",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerUseAllProtseqsIfEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerUseAllProtseqsIfEx$MH() { return RpcServerUseAllProtseqsIfEx$MH_; }

    static final FunctionDescriptor RpcServerUseProtseqA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerUseProtseqA$FUNC() { return RpcServerUseProtseqA$FUNC_; }

    static final MethodHandle RpcServerUseProtseqA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerUseProtseqA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcServerUseProtseqA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerUseProtseqA$MH() { return RpcServerUseProtseqA$MH_; }

    static final FunctionDescriptor RpcServerUseProtseqExA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerUseProtseqExA$FUNC() { return RpcServerUseProtseqExA$FUNC_; }

    static final MethodHandle RpcServerUseProtseqExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerUseProtseqExA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerUseProtseqExA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerUseProtseqExA$MH() { return RpcServerUseProtseqExA$MH_; }

    static final FunctionDescriptor RpcServerUseProtseqW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerUseProtseqW$FUNC() { return RpcServerUseProtseqW$FUNC_; }

    static final MethodHandle RpcServerUseProtseqW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerUseProtseqW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcServerUseProtseqW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerUseProtseqW$MH() { return RpcServerUseProtseqW$MH_; }

    static final FunctionDescriptor RpcServerUseProtseqExW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerUseProtseqExW$FUNC() { return RpcServerUseProtseqExW$FUNC_; }

    static final MethodHandle RpcServerUseProtseqExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerUseProtseqExW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerUseProtseqExW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerUseProtseqExW$MH() { return RpcServerUseProtseqExW$MH_; }

    static final FunctionDescriptor RpcServerUseProtseqEpA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerUseProtseqEpA$FUNC() { return RpcServerUseProtseqEpA$FUNC_; }

    static final MethodHandle RpcServerUseProtseqEpA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerUseProtseqEpA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerUseProtseqEpA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerUseProtseqEpA$MH() { return RpcServerUseProtseqEpA$MH_; }

    static final FunctionDescriptor RpcServerUseProtseqEpExA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerUseProtseqEpExA$FUNC() { return RpcServerUseProtseqEpExA$FUNC_; }

    static final MethodHandle RpcServerUseProtseqEpExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerUseProtseqEpExA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerUseProtseqEpExA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerUseProtseqEpExA$MH() { return RpcServerUseProtseqEpExA$MH_; }

    static final FunctionDescriptor RpcServerUseProtseqEpW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerUseProtseqEpW$FUNC() { return RpcServerUseProtseqEpW$FUNC_; }

    static final MethodHandle RpcServerUseProtseqEpW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerUseProtseqEpW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerUseProtseqEpW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerUseProtseqEpW$MH() { return RpcServerUseProtseqEpW$MH_; }

    static final FunctionDescriptor RpcServerUseProtseqEpExW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerUseProtseqEpExW$FUNC() { return RpcServerUseProtseqEpExW$FUNC_; }

    static final MethodHandle RpcServerUseProtseqEpExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerUseProtseqEpExW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerUseProtseqEpExW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerUseProtseqEpExW$MH() { return RpcServerUseProtseqEpExW$MH_; }

    static final FunctionDescriptor RpcServerUseProtseqIfA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerUseProtseqIfA$FUNC() { return RpcServerUseProtseqIfA$FUNC_; }

    static final MethodHandle RpcServerUseProtseqIfA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerUseProtseqIfA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerUseProtseqIfA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerUseProtseqIfA$MH() { return RpcServerUseProtseqIfA$MH_; }

    static final FunctionDescriptor RpcServerUseProtseqIfExA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerUseProtseqIfExA$FUNC() { return RpcServerUseProtseqIfExA$FUNC_; }

    static final MethodHandle RpcServerUseProtseqIfExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerUseProtseqIfExA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerUseProtseqIfExA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerUseProtseqIfExA$MH() { return RpcServerUseProtseqIfExA$MH_; }

    static final FunctionDescriptor RpcServerUseProtseqIfW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerUseProtseqIfW$FUNC() { return RpcServerUseProtseqIfW$FUNC_; }

    static final MethodHandle RpcServerUseProtseqIfW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerUseProtseqIfW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerUseProtseqIfW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerUseProtseqIfW$MH() { return RpcServerUseProtseqIfW$MH_; }

    static final FunctionDescriptor RpcServerUseProtseqIfExW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerUseProtseqIfExW$FUNC() { return RpcServerUseProtseqIfExW$FUNC_; }

    static final MethodHandle RpcServerUseProtseqIfExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerUseProtseqIfExW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerUseProtseqIfExW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerUseProtseqIfExW$MH() { return RpcServerUseProtseqIfExW$MH_; }

    static final FunctionDescriptor RpcServerYield$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerYield$FUNC() { return RpcServerYield$FUNC_; }

    static final MethodHandle RpcServerYield$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerYield",
        "()V",
        RpcServerYield$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerYield$MH() { return RpcServerYield$MH_; }

    static final FunctionDescriptor RpcMgmtStatsVectorFree$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtStatsVectorFree$FUNC() { return RpcMgmtStatsVectorFree$FUNC_; }

    static final MethodHandle RpcMgmtStatsVectorFree$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcMgmtStatsVectorFree",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcMgmtStatsVectorFree$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcMgmtStatsVectorFree$MH() { return RpcMgmtStatsVectorFree$MH_; }

    static final FunctionDescriptor RpcMgmtInqStats$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtInqStats$FUNC() { return RpcMgmtInqStats$FUNC_; }

    static final MethodHandle RpcMgmtInqStats$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcMgmtInqStats",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcMgmtInqStats$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcMgmtInqStats$MH() { return RpcMgmtInqStats$MH_; }

    static final FunctionDescriptor RpcMgmtIsServerListening$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtIsServerListening$FUNC() { return RpcMgmtIsServerListening$FUNC_; }

    static final MethodHandle RpcMgmtIsServerListening$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcMgmtIsServerListening",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcMgmtIsServerListening$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcMgmtIsServerListening$MH() { return RpcMgmtIsServerListening$MH_; }

    static final FunctionDescriptor RpcMgmtStopServerListening$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtStopServerListening$FUNC() { return RpcMgmtStopServerListening$FUNC_; }

    static final MethodHandle RpcMgmtStopServerListening$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcMgmtStopServerListening",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcMgmtStopServerListening$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcMgmtStopServerListening$MH() { return RpcMgmtStopServerListening$MH_; }

    static final FunctionDescriptor RpcMgmtWaitServerListen$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtWaitServerListen$FUNC() { return RpcMgmtWaitServerListen$FUNC_; }

    static final MethodHandle RpcMgmtWaitServerListen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcMgmtWaitServerListen",
        "()I",
        RpcMgmtWaitServerListen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcMgmtWaitServerListen$MH() { return RpcMgmtWaitServerListen$MH_; }

    static final FunctionDescriptor RpcMgmtSetServerStackSize$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtSetServerStackSize$FUNC() { return RpcMgmtSetServerStackSize$FUNC_; }

    static final MethodHandle RpcMgmtSetServerStackSize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcMgmtSetServerStackSize",
        "(I)I",
        RpcMgmtSetServerStackSize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcMgmtSetServerStackSize$MH() { return RpcMgmtSetServerStackSize$MH_; }

    static final FunctionDescriptor RpcSsDontSerializeContext$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor RpcSsDontSerializeContext$FUNC() { return RpcSsDontSerializeContext$FUNC_; }

    static final MethodHandle RpcSsDontSerializeContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcSsDontSerializeContext",
        "()V",
        RpcSsDontSerializeContext$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcSsDontSerializeContext$MH() { return RpcSsDontSerializeContext$MH_; }

    static final FunctionDescriptor RpcMgmtEnableIdleCleanup$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtEnableIdleCleanup$FUNC() { return RpcMgmtEnableIdleCleanup$FUNC_; }

    static final MethodHandle RpcMgmtEnableIdleCleanup$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcMgmtEnableIdleCleanup",
        "()I",
        RpcMgmtEnableIdleCleanup$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcMgmtEnableIdleCleanup$MH() { return RpcMgmtEnableIdleCleanup$MH_; }

    static final FunctionDescriptor RpcMgmtInqIfIds$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtInqIfIds$FUNC() { return RpcMgmtInqIfIds$FUNC_; }

    static final MethodHandle RpcMgmtInqIfIds$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcMgmtInqIfIds",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcMgmtInqIfIds$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcMgmtInqIfIds$MH() { return RpcMgmtInqIfIds$MH_; }

    static final FunctionDescriptor RpcIfIdVectorFree$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcIfIdVectorFree$FUNC() { return RpcIfIdVectorFree$FUNC_; }

    static final MethodHandle RpcIfIdVectorFree$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcIfIdVectorFree",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcIfIdVectorFree$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcIfIdVectorFree$MH() { return RpcIfIdVectorFree$MH_; }

    static final FunctionDescriptor RpcMgmtInqServerPrincNameA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtInqServerPrincNameA$FUNC() { return RpcMgmtInqServerPrincNameA$FUNC_; }

    static final MethodHandle RpcMgmtInqServerPrincNameA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcMgmtInqServerPrincNameA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcMgmtInqServerPrincNameA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcMgmtInqServerPrincNameA$MH() { return RpcMgmtInqServerPrincNameA$MH_; }

    static final FunctionDescriptor RpcMgmtInqServerPrincNameW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtInqServerPrincNameW$FUNC() { return RpcMgmtInqServerPrincNameW$FUNC_; }

    static final MethodHandle RpcMgmtInqServerPrincNameW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcMgmtInqServerPrincNameW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcMgmtInqServerPrincNameW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcMgmtInqServerPrincNameW$MH() { return RpcMgmtInqServerPrincNameW$MH_; }

    static final FunctionDescriptor RpcServerInqDefaultPrincNameA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerInqDefaultPrincNameA$FUNC() { return RpcServerInqDefaultPrincNameA$FUNC_; }

    static final MethodHandle RpcServerInqDefaultPrincNameA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerInqDefaultPrincNameA",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcServerInqDefaultPrincNameA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerInqDefaultPrincNameA$MH() { return RpcServerInqDefaultPrincNameA$MH_; }

    static final FunctionDescriptor RpcServerInqDefaultPrincNameW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerInqDefaultPrincNameW$FUNC() { return RpcServerInqDefaultPrincNameW$FUNC_; }

    static final MethodHandle RpcServerInqDefaultPrincNameW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerInqDefaultPrincNameW",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcServerInqDefaultPrincNameW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerInqDefaultPrincNameW$MH() { return RpcServerInqDefaultPrincNameW$MH_; }

    static final FunctionDescriptor RpcEpResolveBinding$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcEpResolveBinding$FUNC() { return RpcEpResolveBinding$FUNC_; }

    static final MethodHandle RpcEpResolveBinding$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcEpResolveBinding",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcEpResolveBinding$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcEpResolveBinding$MH() { return RpcEpResolveBinding$MH_; }

    static final FunctionDescriptor RpcNsBindingInqEntryNameA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsBindingInqEntryNameA$FUNC() { return RpcNsBindingInqEntryNameA$FUNC_; }

    static final MethodHandle RpcNsBindingInqEntryNameA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsBindingInqEntryNameA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsBindingInqEntryNameA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsBindingInqEntryNameA$MH() { return RpcNsBindingInqEntryNameA$MH_; }

    static final FunctionDescriptor RpcNsBindingInqEntryNameW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcNsBindingInqEntryNameW$FUNC() { return RpcNsBindingInqEntryNameW$FUNC_; }

    static final MethodHandle RpcNsBindingInqEntryNameW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcNsBindingInqEntryNameW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcNsBindingInqEntryNameW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcNsBindingInqEntryNameW$MH() { return RpcNsBindingInqEntryNameW$MH_; }

    static final MemoryLayout _RPC_SECURITY_QOS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Capabilities"),
        C_LONG.withName("IdentityTracking"),
        C_LONG.withName("ImpersonationType")
    ).withName("_RPC_SECURITY_QOS");
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS$struct$LAYOUT() { return _RPC_SECURITY_QOS$struct$LAYOUT_; }

    static final MemoryLayout _RPC_SECURITY_QOS$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS$Version$LAYOUT() { return _RPC_SECURITY_QOS$Version$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS$Version$VH_ = _RPC_SECURITY_QOS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS$Version$VH() { return _RPC_SECURITY_QOS$Version$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS$Capabilities$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS$Capabilities$LAYOUT() { return _RPC_SECURITY_QOS$Capabilities$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS$Capabilities$VH_ = _RPC_SECURITY_QOS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Capabilities"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS$Capabilities$VH() { return _RPC_SECURITY_QOS$Capabilities$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS$IdentityTracking$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS$IdentityTracking$LAYOUT() { return _RPC_SECURITY_QOS$IdentityTracking$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS$IdentityTracking$VH_ = _RPC_SECURITY_QOS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IdentityTracking"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS$IdentityTracking$VH() { return _RPC_SECURITY_QOS$IdentityTracking$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS$ImpersonationType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS$ImpersonationType$LAYOUT() { return _RPC_SECURITY_QOS$ImpersonationType$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS$ImpersonationType$VH_ = _RPC_SECURITY_QOS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImpersonationType"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS$ImpersonationType$VH() { return _RPC_SECURITY_QOS$ImpersonationType$VH_; }

    static final MemoryLayout _SEC_WINNT_AUTH_IDENTITY_W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("User"),
        C_LONG.withName("UserLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("Domain"),
        C_LONG.withName("DomainLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("Password"),
        C_LONG.withName("PasswordLength"),
        C_LONG.withName("Flags")
    ).withName("_SEC_WINNT_AUTH_IDENTITY_W");
    static final jdk.incubator.foreign.MemoryLayout _SEC_WINNT_AUTH_IDENTITY_W$struct$LAYOUT() { return _SEC_WINNT_AUTH_IDENTITY_W$struct$LAYOUT_; }

    static final MemoryLayout _SEC_WINNT_AUTH_IDENTITY_W$User$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SEC_WINNT_AUTH_IDENTITY_W$User$LAYOUT() { return _SEC_WINNT_AUTH_IDENTITY_W$User$LAYOUT_; }

    static final VarHandle _SEC_WINNT_AUTH_IDENTITY_W$User$VH_ = MemoryHandles.asAddressVarHandle(_SEC_WINNT_AUTH_IDENTITY_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("User")));
    static final java.lang.invoke.VarHandle _SEC_WINNT_AUTH_IDENTITY_W$User$VH() { return _SEC_WINNT_AUTH_IDENTITY_W$User$VH_; }

    static final MemoryLayout _SEC_WINNT_AUTH_IDENTITY_W$UserLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SEC_WINNT_AUTH_IDENTITY_W$UserLength$LAYOUT() { return _SEC_WINNT_AUTH_IDENTITY_W$UserLength$LAYOUT_; }

    static final VarHandle _SEC_WINNT_AUTH_IDENTITY_W$UserLength$VH_ = _SEC_WINNT_AUTH_IDENTITY_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("UserLength"));
    static final java.lang.invoke.VarHandle _SEC_WINNT_AUTH_IDENTITY_W$UserLength$VH() { return _SEC_WINNT_AUTH_IDENTITY_W$UserLength$VH_; }

    static final MemoryLayout _SEC_WINNT_AUTH_IDENTITY_W$Domain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SEC_WINNT_AUTH_IDENTITY_W$Domain$LAYOUT() { return _SEC_WINNT_AUTH_IDENTITY_W$Domain$LAYOUT_; }

    static final VarHandle _SEC_WINNT_AUTH_IDENTITY_W$Domain$VH_ = MemoryHandles.asAddressVarHandle(_SEC_WINNT_AUTH_IDENTITY_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Domain")));
    static final java.lang.invoke.VarHandle _SEC_WINNT_AUTH_IDENTITY_W$Domain$VH() { return _SEC_WINNT_AUTH_IDENTITY_W$Domain$VH_; }

    static final MemoryLayout _SEC_WINNT_AUTH_IDENTITY_W$DomainLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SEC_WINNT_AUTH_IDENTITY_W$DomainLength$LAYOUT() { return _SEC_WINNT_AUTH_IDENTITY_W$DomainLength$LAYOUT_; }

    static final VarHandle _SEC_WINNT_AUTH_IDENTITY_W$DomainLength$VH_ = _SEC_WINNT_AUTH_IDENTITY_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DomainLength"));
    static final java.lang.invoke.VarHandle _SEC_WINNT_AUTH_IDENTITY_W$DomainLength$VH() { return _SEC_WINNT_AUTH_IDENTITY_W$DomainLength$VH_; }

    static final MemoryLayout _SEC_WINNT_AUTH_IDENTITY_W$Password$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SEC_WINNT_AUTH_IDENTITY_W$Password$LAYOUT() { return _SEC_WINNT_AUTH_IDENTITY_W$Password$LAYOUT_; }

    static final VarHandle _SEC_WINNT_AUTH_IDENTITY_W$Password$VH_ = MemoryHandles.asAddressVarHandle(_SEC_WINNT_AUTH_IDENTITY_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Password")));
    static final java.lang.invoke.VarHandle _SEC_WINNT_AUTH_IDENTITY_W$Password$VH() { return _SEC_WINNT_AUTH_IDENTITY_W$Password$VH_; }

    static final MemoryLayout _SEC_WINNT_AUTH_IDENTITY_W$PasswordLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SEC_WINNT_AUTH_IDENTITY_W$PasswordLength$LAYOUT() { return _SEC_WINNT_AUTH_IDENTITY_W$PasswordLength$LAYOUT_; }

    static final VarHandle _SEC_WINNT_AUTH_IDENTITY_W$PasswordLength$VH_ = _SEC_WINNT_AUTH_IDENTITY_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PasswordLength"));
    static final java.lang.invoke.VarHandle _SEC_WINNT_AUTH_IDENTITY_W$PasswordLength$VH() { return _SEC_WINNT_AUTH_IDENTITY_W$PasswordLength$VH_; }

    static final MemoryLayout _SEC_WINNT_AUTH_IDENTITY_W$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SEC_WINNT_AUTH_IDENTITY_W$Flags$LAYOUT() { return _SEC_WINNT_AUTH_IDENTITY_W$Flags$LAYOUT_; }

    static final VarHandle _SEC_WINNT_AUTH_IDENTITY_W$Flags$VH_ = _SEC_WINNT_AUTH_IDENTITY_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _SEC_WINNT_AUTH_IDENTITY_W$Flags$VH() { return _SEC_WINNT_AUTH_IDENTITY_W$Flags$VH_; }

    static final MemoryLayout _SEC_WINNT_AUTH_IDENTITY_A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("User"),
        C_LONG.withName("UserLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("Domain"),
        C_LONG.withName("DomainLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("Password"),
        C_LONG.withName("PasswordLength"),
        C_LONG.withName("Flags")
    ).withName("_SEC_WINNT_AUTH_IDENTITY_A");
    static final jdk.incubator.foreign.MemoryLayout _SEC_WINNT_AUTH_IDENTITY_A$struct$LAYOUT() { return _SEC_WINNT_AUTH_IDENTITY_A$struct$LAYOUT_; }

    static final MemoryLayout _SEC_WINNT_AUTH_IDENTITY_A$User$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SEC_WINNT_AUTH_IDENTITY_A$User$LAYOUT() { return _SEC_WINNT_AUTH_IDENTITY_A$User$LAYOUT_; }

    static final VarHandle _SEC_WINNT_AUTH_IDENTITY_A$User$VH_ = MemoryHandles.asAddressVarHandle(_SEC_WINNT_AUTH_IDENTITY_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("User")));
    static final java.lang.invoke.VarHandle _SEC_WINNT_AUTH_IDENTITY_A$User$VH() { return _SEC_WINNT_AUTH_IDENTITY_A$User$VH_; }

    static final MemoryLayout _SEC_WINNT_AUTH_IDENTITY_A$UserLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SEC_WINNT_AUTH_IDENTITY_A$UserLength$LAYOUT() { return _SEC_WINNT_AUTH_IDENTITY_A$UserLength$LAYOUT_; }

    static final VarHandle _SEC_WINNT_AUTH_IDENTITY_A$UserLength$VH_ = _SEC_WINNT_AUTH_IDENTITY_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("UserLength"));
    static final java.lang.invoke.VarHandle _SEC_WINNT_AUTH_IDENTITY_A$UserLength$VH() { return _SEC_WINNT_AUTH_IDENTITY_A$UserLength$VH_; }

    static final MemoryLayout _SEC_WINNT_AUTH_IDENTITY_A$Domain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SEC_WINNT_AUTH_IDENTITY_A$Domain$LAYOUT() { return _SEC_WINNT_AUTH_IDENTITY_A$Domain$LAYOUT_; }

    static final VarHandle _SEC_WINNT_AUTH_IDENTITY_A$Domain$VH_ = MemoryHandles.asAddressVarHandle(_SEC_WINNT_AUTH_IDENTITY_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Domain")));
    static final java.lang.invoke.VarHandle _SEC_WINNT_AUTH_IDENTITY_A$Domain$VH() { return _SEC_WINNT_AUTH_IDENTITY_A$Domain$VH_; }

    static final MemoryLayout _SEC_WINNT_AUTH_IDENTITY_A$DomainLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SEC_WINNT_AUTH_IDENTITY_A$DomainLength$LAYOUT() { return _SEC_WINNT_AUTH_IDENTITY_A$DomainLength$LAYOUT_; }

    static final VarHandle _SEC_WINNT_AUTH_IDENTITY_A$DomainLength$VH_ = _SEC_WINNT_AUTH_IDENTITY_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DomainLength"));
    static final java.lang.invoke.VarHandle _SEC_WINNT_AUTH_IDENTITY_A$DomainLength$VH() { return _SEC_WINNT_AUTH_IDENTITY_A$DomainLength$VH_; }

    static final MemoryLayout _SEC_WINNT_AUTH_IDENTITY_A$Password$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SEC_WINNT_AUTH_IDENTITY_A$Password$LAYOUT() { return _SEC_WINNT_AUTH_IDENTITY_A$Password$LAYOUT_; }

    static final VarHandle _SEC_WINNT_AUTH_IDENTITY_A$Password$VH_ = MemoryHandles.asAddressVarHandle(_SEC_WINNT_AUTH_IDENTITY_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Password")));
    static final java.lang.invoke.VarHandle _SEC_WINNT_AUTH_IDENTITY_A$Password$VH() { return _SEC_WINNT_AUTH_IDENTITY_A$Password$VH_; }

    static final MemoryLayout _SEC_WINNT_AUTH_IDENTITY_A$PasswordLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SEC_WINNT_AUTH_IDENTITY_A$PasswordLength$LAYOUT() { return _SEC_WINNT_AUTH_IDENTITY_A$PasswordLength$LAYOUT_; }

    static final VarHandle _SEC_WINNT_AUTH_IDENTITY_A$PasswordLength$VH_ = _SEC_WINNT_AUTH_IDENTITY_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PasswordLength"));
    static final java.lang.invoke.VarHandle _SEC_WINNT_AUTH_IDENTITY_A$PasswordLength$VH() { return _SEC_WINNT_AUTH_IDENTITY_A$PasswordLength$VH_; }

    static final MemoryLayout _SEC_WINNT_AUTH_IDENTITY_A$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SEC_WINNT_AUTH_IDENTITY_A$Flags$LAYOUT() { return _SEC_WINNT_AUTH_IDENTITY_A$Flags$LAYOUT_; }

    static final VarHandle _SEC_WINNT_AUTH_IDENTITY_A$Flags$VH_ = _SEC_WINNT_AUTH_IDENTITY_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _SEC_WINNT_AUTH_IDENTITY_A$Flags$VH() { return _SEC_WINNT_AUTH_IDENTITY_A$Flags$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("TransportCredentials"),
        C_LONG.withName("Flags"),
        C_LONG.withName("AuthenticationTarget"),
        C_LONG.withName("NumberOfAuthnSchemes"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("AuthnSchemes"),
        C_POINTER.withName("ServerCertificateSubject")
    ).withName("_RPC_HTTP_TRANSPORT_CREDENTIALS_W");
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_W$struct$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_W$struct$LAYOUT_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_W$TransportCredentials$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_W$TransportCredentials$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_W$TransportCredentials$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_W$TransportCredentials$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TransportCredentials")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_W$TransportCredentials$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_W$TransportCredentials$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_W$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_W$Flags$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_W$Flags$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_W$Flags$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_W$Flags$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_W$Flags$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_W$AuthenticationTarget$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_W$AuthenticationTarget$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_W$AuthenticationTarget$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_W$AuthenticationTarget$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthenticationTarget"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_W$AuthenticationTarget$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_W$AuthenticationTarget$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_W$NumberOfAuthnSchemes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_W$NumberOfAuthnSchemes$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_W$NumberOfAuthnSchemes$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_W$NumberOfAuthnSchemes$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfAuthnSchemes"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_W$NumberOfAuthnSchemes$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_W$NumberOfAuthnSchemes$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_W$AuthnSchemes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_W$AuthnSchemes$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_W$AuthnSchemes$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_W$AuthnSchemes$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AuthnSchemes")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_W$AuthnSchemes$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_W$AuthnSchemes$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_W$ServerCertificateSubject$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_W$ServerCertificateSubject$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_W$ServerCertificateSubject$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_W$ServerCertificateSubject$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ServerCertificateSubject")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_W$ServerCertificateSubject$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_W$ServerCertificateSubject$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("TransportCredentials"),
        C_LONG.withName("Flags"),
        C_LONG.withName("AuthenticationTarget"),
        C_LONG.withName("NumberOfAuthnSchemes"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("AuthnSchemes"),
        C_POINTER.withName("ServerCertificateSubject")
    ).withName("_RPC_HTTP_TRANSPORT_CREDENTIALS_A");
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_A$struct$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_A$struct$LAYOUT_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_A$TransportCredentials$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_A$TransportCredentials$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_A$TransportCredentials$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_A$TransportCredentials$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TransportCredentials")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_A$TransportCredentials$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_A$TransportCredentials$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_A$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_A$Flags$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_A$Flags$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_A$Flags$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_A$Flags$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_A$Flags$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_A$AuthenticationTarget$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_A$AuthenticationTarget$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_A$AuthenticationTarget$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_A$AuthenticationTarget$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthenticationTarget"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_A$AuthenticationTarget$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_A$AuthenticationTarget$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_A$NumberOfAuthnSchemes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_A$NumberOfAuthnSchemes$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_A$NumberOfAuthnSchemes$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_A$NumberOfAuthnSchemes$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfAuthnSchemes"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_A$NumberOfAuthnSchemes$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_A$NumberOfAuthnSchemes$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_A$AuthnSchemes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_A$AuthnSchemes$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_A$AuthnSchemes$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_A$AuthnSchemes$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AuthnSchemes")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_A$AuthnSchemes$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_A$AuthnSchemes$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_A$ServerCertificateSubject$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_A$ServerCertificateSubject$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_A$ServerCertificateSubject$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_A$ServerCertificateSubject$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ServerCertificateSubject")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_A$ServerCertificateSubject$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_A$ServerCertificateSubject$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("TransportCredentials"),
        C_LONG.withName("Flags"),
        C_LONG.withName("AuthenticationTarget"),
        C_LONG.withName("NumberOfAuthnSchemes"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("AuthnSchemes"),
        C_POINTER.withName("ServerCertificateSubject"),
        C_POINTER.withName("ProxyCredentials"),
        C_LONG.withName("NumberOfProxyAuthnSchemes"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ProxyAuthnSchemes")
    ).withName("_RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W");
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$struct$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$struct$LAYOUT_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$TransportCredentials$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$TransportCredentials$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$TransportCredentials$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$TransportCredentials$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TransportCredentials")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$TransportCredentials$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$TransportCredentials$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$Flags$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$Flags$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$Flags$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$Flags$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$Flags$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$AuthenticationTarget$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$AuthenticationTarget$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$AuthenticationTarget$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$AuthenticationTarget$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthenticationTarget"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$AuthenticationTarget$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$AuthenticationTarget$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$NumberOfAuthnSchemes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$NumberOfAuthnSchemes$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$NumberOfAuthnSchemes$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$NumberOfAuthnSchemes$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfAuthnSchemes"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$NumberOfAuthnSchemes$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$NumberOfAuthnSchemes$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$AuthnSchemes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$AuthnSchemes$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$AuthnSchemes$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$AuthnSchemes$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AuthnSchemes")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$AuthnSchemes$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$AuthnSchemes$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$ServerCertificateSubject$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$ServerCertificateSubject$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$ServerCertificateSubject$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$ServerCertificateSubject$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ServerCertificateSubject")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$ServerCertificateSubject$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$ServerCertificateSubject$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$ProxyCredentials$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$ProxyCredentials$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$ProxyCredentials$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$ProxyCredentials$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ProxyCredentials")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$ProxyCredentials$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$ProxyCredentials$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$NumberOfProxyAuthnSchemes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$NumberOfProxyAuthnSchemes$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$NumberOfProxyAuthnSchemes$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$NumberOfProxyAuthnSchemes$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfProxyAuthnSchemes"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$NumberOfProxyAuthnSchemes$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$NumberOfProxyAuthnSchemes$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$ProxyAuthnSchemes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$ProxyAuthnSchemes$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$ProxyAuthnSchemes$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$ProxyAuthnSchemes$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ProxyAuthnSchemes")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$ProxyAuthnSchemes$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W$ProxyAuthnSchemes$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("TransportCredentials"),
        C_LONG.withName("Flags"),
        C_LONG.withName("AuthenticationTarget"),
        C_LONG.withName("NumberOfAuthnSchemes"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("AuthnSchemes"),
        C_POINTER.withName("ServerCertificateSubject"),
        C_POINTER.withName("ProxyCredentials"),
        C_LONG.withName("NumberOfProxyAuthnSchemes"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ProxyAuthnSchemes")
    ).withName("_RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A");
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$struct$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$struct$LAYOUT_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$TransportCredentials$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$TransportCredentials$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$TransportCredentials$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$TransportCredentials$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TransportCredentials")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$TransportCredentials$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$TransportCredentials$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$Flags$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$Flags$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$Flags$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$Flags$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$Flags$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$AuthenticationTarget$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$AuthenticationTarget$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$AuthenticationTarget$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$AuthenticationTarget$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthenticationTarget"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$AuthenticationTarget$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$AuthenticationTarget$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$NumberOfAuthnSchemes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$NumberOfAuthnSchemes$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$NumberOfAuthnSchemes$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$NumberOfAuthnSchemes$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfAuthnSchemes"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$NumberOfAuthnSchemes$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$NumberOfAuthnSchemes$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$AuthnSchemes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$AuthnSchemes$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$AuthnSchemes$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$AuthnSchemes$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AuthnSchemes")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$AuthnSchemes$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$AuthnSchemes$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$ServerCertificateSubject$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$ServerCertificateSubject$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$ServerCertificateSubject$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$ServerCertificateSubject$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ServerCertificateSubject")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$ServerCertificateSubject$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$ServerCertificateSubject$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$ProxyCredentials$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$ProxyCredentials$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$ProxyCredentials$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$ProxyCredentials$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ProxyCredentials")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$ProxyCredentials$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$ProxyCredentials$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$NumberOfProxyAuthnSchemes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$NumberOfProxyAuthnSchemes$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$NumberOfProxyAuthnSchemes$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$NumberOfProxyAuthnSchemes$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfProxyAuthnSchemes"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$NumberOfProxyAuthnSchemes$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$NumberOfProxyAuthnSchemes$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$ProxyAuthnSchemes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$ProxyAuthnSchemes$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$ProxyAuthnSchemes$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$ProxyAuthnSchemes$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ProxyAuthnSchemes")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$ProxyAuthnSchemes$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A$ProxyAuthnSchemes$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("TransportCredentials"),
        C_LONG.withName("Flags"),
        C_LONG.withName("AuthenticationTarget"),
        C_LONG.withName("NumberOfAuthnSchemes"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("AuthnSchemes"),
        C_POINTER.withName("ServerCertificateSubject"),
        C_POINTER.withName("ProxyCredentials"),
        C_LONG.withName("NumberOfProxyAuthnSchemes"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ProxyAuthnSchemes")
    ).withName("_RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W");
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$struct$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$struct$LAYOUT_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$TransportCredentials$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$TransportCredentials$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$TransportCredentials$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$TransportCredentials$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TransportCredentials")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$TransportCredentials$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$TransportCredentials$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$Flags$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$Flags$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$Flags$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$Flags$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$Flags$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$AuthenticationTarget$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$AuthenticationTarget$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$AuthenticationTarget$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$AuthenticationTarget$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthenticationTarget"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$AuthenticationTarget$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$AuthenticationTarget$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$NumberOfAuthnSchemes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$NumberOfAuthnSchemes$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$NumberOfAuthnSchemes$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$NumberOfAuthnSchemes$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfAuthnSchemes"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$NumberOfAuthnSchemes$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$NumberOfAuthnSchemes$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$AuthnSchemes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$AuthnSchemes$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$AuthnSchemes$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$AuthnSchemes$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AuthnSchemes")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$AuthnSchemes$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$AuthnSchemes$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$ServerCertificateSubject$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$ServerCertificateSubject$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$ServerCertificateSubject$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$ServerCertificateSubject$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ServerCertificateSubject")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$ServerCertificateSubject$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$ServerCertificateSubject$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$ProxyCredentials$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$ProxyCredentials$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$ProxyCredentials$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$ProxyCredentials$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ProxyCredentials")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$ProxyCredentials$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$ProxyCredentials$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$NumberOfProxyAuthnSchemes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$NumberOfProxyAuthnSchemes$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$NumberOfProxyAuthnSchemes$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$NumberOfProxyAuthnSchemes$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfProxyAuthnSchemes"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$NumberOfProxyAuthnSchemes$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$NumberOfProxyAuthnSchemes$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$ProxyAuthnSchemes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$ProxyAuthnSchemes$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$ProxyAuthnSchemes$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$ProxyAuthnSchemes$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ProxyAuthnSchemes")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$ProxyAuthnSchemes$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W$ProxyAuthnSchemes$VH_; }

}

