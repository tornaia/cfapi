// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$74 extends cfapi_h$constants$73 {

    /* package-private */ cfapi_h$constants$74() {}
    static final MemoryLayout __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$VH() { return __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec", __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IClassFactory$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IClassFactory$LAYOUT() { return IID_IClassFactory$LAYOUT_; }

    static final MemorySegment IID_IClassFactory$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IClassFactory", IID_IClassFactory$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IClassFactory$SEGMENT() { return IID_IClassFactory$SEGMENT_; }

    static final MemoryLayout IClassFactoryVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("CreateInstance"),
        C_POINTER.withName("LockServer")
    ).withName("IClassFactoryVtbl");
    static final jdk.incubator.foreign.MemoryLayout IClassFactoryVtbl$struct$LAYOUT() { return IClassFactoryVtbl$struct$LAYOUT_; }

    static final MemoryLayout IClassFactoryVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IClassFactoryVtbl$QueryInterface$LAYOUT() { return IClassFactoryVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IClassFactoryVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IClassFactoryVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IClassFactoryVtbl$QueryInterface$VH() { return IClassFactoryVtbl$QueryInterface$VH_; }

    static final MemoryLayout IClassFactoryVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IClassFactoryVtbl$AddRef$LAYOUT() { return IClassFactoryVtbl$AddRef$LAYOUT_; }

    static final VarHandle IClassFactoryVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IClassFactoryVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IClassFactoryVtbl$AddRef$VH() { return IClassFactoryVtbl$AddRef$VH_; }

    static final MemoryLayout IClassFactoryVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IClassFactoryVtbl$Release$LAYOUT() { return IClassFactoryVtbl$Release$LAYOUT_; }

    static final VarHandle IClassFactoryVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IClassFactoryVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IClassFactoryVtbl$Release$VH() { return IClassFactoryVtbl$Release$VH_; }

    static final MemoryLayout IClassFactoryVtbl$CreateInstance$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IClassFactoryVtbl$CreateInstance$LAYOUT() { return IClassFactoryVtbl$CreateInstance$LAYOUT_; }

    static final VarHandle IClassFactoryVtbl$CreateInstance$VH_ = MemoryHandles.asAddressVarHandle(IClassFactoryVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CreateInstance")));
    static final java.lang.invoke.VarHandle IClassFactoryVtbl$CreateInstance$VH() { return IClassFactoryVtbl$CreateInstance$VH_; }

    static final MemoryLayout IClassFactoryVtbl$LockServer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IClassFactoryVtbl$LockServer$LAYOUT() { return IClassFactoryVtbl$LockServer$LAYOUT_; }

    static final VarHandle IClassFactoryVtbl$LockServer$VH_ = MemoryHandles.asAddressVarHandle(IClassFactoryVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LockServer")));
    static final java.lang.invoke.VarHandle IClassFactoryVtbl$LockServer$VH() { return IClassFactoryVtbl$LockServer$VH_; }

    static final MemoryLayout IClassFactory$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IClassFactory");
    static final jdk.incubator.foreign.MemoryLayout IClassFactory$struct$LAYOUT() { return IClassFactory$struct$LAYOUT_; }

    static final MemoryLayout IClassFactory$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IClassFactory$lpVtbl$LAYOUT() { return IClassFactory$lpVtbl$LAYOUT_; }

    static final VarHandle IClassFactory$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IClassFactory$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IClassFactory$lpVtbl$VH() { return IClassFactory$lpVtbl$VH_; }

    static final FunctionDescriptor IClassFactory_RemoteCreateInstance_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IClassFactory_RemoteCreateInstance_Proxy$FUNC() { return IClassFactory_RemoteCreateInstance_Proxy$FUNC_; }

    static final MethodHandle IClassFactory_RemoteCreateInstance_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IClassFactory_RemoteCreateInstance_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IClassFactory_RemoteCreateInstance_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IClassFactory_RemoteCreateInstance_Proxy$MH() { return IClassFactory_RemoteCreateInstance_Proxy$MH_; }

    static final FunctionDescriptor IClassFactory_RemoteCreateInstance_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IClassFactory_RemoteCreateInstance_Stub$FUNC() { return IClassFactory_RemoteCreateInstance_Stub$FUNC_; }

    static final MethodHandle IClassFactory_RemoteCreateInstance_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IClassFactory_RemoteCreateInstance_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IClassFactory_RemoteCreateInstance_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IClassFactory_RemoteCreateInstance_Stub$MH() { return IClassFactory_RemoteCreateInstance_Stub$MH_; }

    static final FunctionDescriptor IClassFactory_RemoteLockServer_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor IClassFactory_RemoteLockServer_Proxy$FUNC() { return IClassFactory_RemoteLockServer_Proxy$FUNC_; }

    static final MethodHandle IClassFactory_RemoteLockServer_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IClassFactory_RemoteLockServer_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        IClassFactory_RemoteLockServer_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IClassFactory_RemoteLockServer_Proxy$MH() { return IClassFactory_RemoteLockServer_Proxy$MH_; }

    static final FunctionDescriptor IClassFactory_RemoteLockServer_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IClassFactory_RemoteLockServer_Stub$FUNC() { return IClassFactory_RemoteLockServer_Stub$FUNC_; }

    static final MethodHandle IClassFactory_RemoteLockServer_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IClassFactory_RemoteLockServer_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IClassFactory_RemoteLockServer_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IClassFactory_RemoteLockServer_Stub$MH() { return IClassFactory_RemoteLockServer_Stub$MH_; }

    static final MemoryLayout __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$VH() { return __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec", __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$VH() { return __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec", __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$SEGMENT_; }

    static final FunctionDescriptor IClassFactory_CreateInstance_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IClassFactory_CreateInstance_Proxy$FUNC() { return IClassFactory_CreateInstance_Proxy$FUNC_; }

    static final MethodHandle IClassFactory_CreateInstance_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IClassFactory_CreateInstance_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IClassFactory_CreateInstance_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IClassFactory_CreateInstance_Proxy$MH() { return IClassFactory_CreateInstance_Proxy$MH_; }

    static final FunctionDescriptor IClassFactory_CreateInstance_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IClassFactory_CreateInstance_Stub$FUNC() { return IClassFactory_CreateInstance_Stub$FUNC_; }

    static final MethodHandle IClassFactory_CreateInstance_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IClassFactory_CreateInstance_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IClassFactory_CreateInstance_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IClassFactory_CreateInstance_Stub$MH() { return IClassFactory_CreateInstance_Stub$MH_; }

    static final FunctionDescriptor IClassFactory_LockServer_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor IClassFactory_LockServer_Proxy$FUNC() { return IClassFactory_LockServer_Proxy$FUNC_; }

    static final MethodHandle IClassFactory_LockServer_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IClassFactory_LockServer_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        IClassFactory_LockServer_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IClassFactory_LockServer_Proxy$MH() { return IClassFactory_LockServer_Proxy$MH_; }

    static final FunctionDescriptor IClassFactory_LockServer_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor IClassFactory_LockServer_Stub$FUNC() { return IClassFactory_LockServer_Stub$FUNC_; }

    static final MethodHandle IClassFactory_LockServer_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IClassFactory_LockServer_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        IClassFactory_LockServer_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IClassFactory_LockServer_Stub$MH() { return IClassFactory_LockServer_Stub$MH_; }

    static final MemoryLayout _COSERVERINFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwReserved1"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pwszName"),
        C_POINTER.withName("pAuthInfo"),
        C_LONG.withName("dwReserved2"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_COSERVERINFO");
    static final jdk.incubator.foreign.MemoryLayout _COSERVERINFO$struct$LAYOUT() { return _COSERVERINFO$struct$LAYOUT_; }

    static final MemoryLayout _COSERVERINFO$dwReserved1$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _COSERVERINFO$dwReserved1$LAYOUT() { return _COSERVERINFO$dwReserved1$LAYOUT_; }

    static final VarHandle _COSERVERINFO$dwReserved1$VH_ = _COSERVERINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReserved1"));
    static final java.lang.invoke.VarHandle _COSERVERINFO$dwReserved1$VH() { return _COSERVERINFO$dwReserved1$VH_; }

    static final MemoryLayout _COSERVERINFO$pwszName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _COSERVERINFO$pwszName$LAYOUT() { return _COSERVERINFO$pwszName$LAYOUT_; }

    static final VarHandle _COSERVERINFO$pwszName$VH_ = MemoryHandles.asAddressVarHandle(_COSERVERINFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszName")));
    static final java.lang.invoke.VarHandle _COSERVERINFO$pwszName$VH() { return _COSERVERINFO$pwszName$VH_; }

    static final MemoryLayout _COSERVERINFO$pAuthInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _COSERVERINFO$pAuthInfo$LAYOUT() { return _COSERVERINFO$pAuthInfo$LAYOUT_; }

    static final VarHandle _COSERVERINFO$pAuthInfo$VH_ = MemoryHandles.asAddressVarHandle(_COSERVERINFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pAuthInfo")));
    static final java.lang.invoke.VarHandle _COSERVERINFO$pAuthInfo$VH() { return _COSERVERINFO$pAuthInfo$VH_; }

    static final MemoryLayout _COSERVERINFO$dwReserved2$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _COSERVERINFO$dwReserved2$LAYOUT() { return _COSERVERINFO$dwReserved2$LAYOUT_; }

    static final VarHandle _COSERVERINFO$dwReserved2$VH_ = _COSERVERINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReserved2"));
    static final java.lang.invoke.VarHandle _COSERVERINFO$dwReserved2$VH() { return _COSERVERINFO$dwReserved2$VH_; }

    static final MemoryLayout __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$VH() { return __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec", __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$VH() { return __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec", __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IMarshal$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IMarshal$LAYOUT() { return IID_IMarshal$LAYOUT_; }

    static final MemorySegment IID_IMarshal$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IMarshal", IID_IMarshal$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IMarshal$SEGMENT() { return IID_IMarshal$SEGMENT_; }

    static final MemoryLayout IMarshalVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetUnmarshalClass"),
        C_POINTER.withName("GetMarshalSizeMax"),
        C_POINTER.withName("MarshalInterface"),
        C_POINTER.withName("UnmarshalInterface"),
        C_POINTER.withName("ReleaseMarshalData"),
        C_POINTER.withName("DisconnectObject")
    ).withName("IMarshalVtbl");
    static final jdk.incubator.foreign.MemoryLayout IMarshalVtbl$struct$LAYOUT() { return IMarshalVtbl$struct$LAYOUT_; }

    static final MemoryLayout IMarshalVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMarshalVtbl$QueryInterface$LAYOUT() { return IMarshalVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IMarshalVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IMarshalVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IMarshalVtbl$QueryInterface$VH() { return IMarshalVtbl$QueryInterface$VH_; }

    static final MemoryLayout IMarshalVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMarshalVtbl$AddRef$LAYOUT() { return IMarshalVtbl$AddRef$LAYOUT_; }

    static final VarHandle IMarshalVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IMarshalVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IMarshalVtbl$AddRef$VH() { return IMarshalVtbl$AddRef$VH_; }

    static final MemoryLayout IMarshalVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMarshalVtbl$Release$LAYOUT() { return IMarshalVtbl$Release$LAYOUT_; }

    static final VarHandle IMarshalVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IMarshalVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IMarshalVtbl$Release$VH() { return IMarshalVtbl$Release$VH_; }

    static final MemoryLayout IMarshalVtbl$GetUnmarshalClass$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMarshalVtbl$GetUnmarshalClass$LAYOUT() { return IMarshalVtbl$GetUnmarshalClass$LAYOUT_; }

    static final VarHandle IMarshalVtbl$GetUnmarshalClass$VH_ = MemoryHandles.asAddressVarHandle(IMarshalVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetUnmarshalClass")));
    static final java.lang.invoke.VarHandle IMarshalVtbl$GetUnmarshalClass$VH() { return IMarshalVtbl$GetUnmarshalClass$VH_; }

    static final MemoryLayout IMarshalVtbl$GetMarshalSizeMax$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMarshalVtbl$GetMarshalSizeMax$LAYOUT() { return IMarshalVtbl$GetMarshalSizeMax$LAYOUT_; }

    static final VarHandle IMarshalVtbl$GetMarshalSizeMax$VH_ = MemoryHandles.asAddressVarHandle(IMarshalVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetMarshalSizeMax")));
    static final java.lang.invoke.VarHandle IMarshalVtbl$GetMarshalSizeMax$VH() { return IMarshalVtbl$GetMarshalSizeMax$VH_; }

    static final MemoryLayout IMarshalVtbl$MarshalInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMarshalVtbl$MarshalInterface$LAYOUT() { return IMarshalVtbl$MarshalInterface$LAYOUT_; }

    static final VarHandle IMarshalVtbl$MarshalInterface$VH_ = MemoryHandles.asAddressVarHandle(IMarshalVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MarshalInterface")));
    static final java.lang.invoke.VarHandle IMarshalVtbl$MarshalInterface$VH() { return IMarshalVtbl$MarshalInterface$VH_; }

    static final MemoryLayout IMarshalVtbl$UnmarshalInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMarshalVtbl$UnmarshalInterface$LAYOUT() { return IMarshalVtbl$UnmarshalInterface$LAYOUT_; }

    static final VarHandle IMarshalVtbl$UnmarshalInterface$VH_ = MemoryHandles.asAddressVarHandle(IMarshalVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("UnmarshalInterface")));
    static final java.lang.invoke.VarHandle IMarshalVtbl$UnmarshalInterface$VH() { return IMarshalVtbl$UnmarshalInterface$VH_; }

    static final MemoryLayout IMarshalVtbl$ReleaseMarshalData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMarshalVtbl$ReleaseMarshalData$LAYOUT() { return IMarshalVtbl$ReleaseMarshalData$LAYOUT_; }

    static final VarHandle IMarshalVtbl$ReleaseMarshalData$VH_ = MemoryHandles.asAddressVarHandle(IMarshalVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReleaseMarshalData")));
    static final java.lang.invoke.VarHandle IMarshalVtbl$ReleaseMarshalData$VH() { return IMarshalVtbl$ReleaseMarshalData$VH_; }

    static final MemoryLayout IMarshalVtbl$DisconnectObject$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMarshalVtbl$DisconnectObject$LAYOUT() { return IMarshalVtbl$DisconnectObject$LAYOUT_; }

    static final VarHandle IMarshalVtbl$DisconnectObject$VH_ = MemoryHandles.asAddressVarHandle(IMarshalVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DisconnectObject")));
    static final java.lang.invoke.VarHandle IMarshalVtbl$DisconnectObject$VH() { return IMarshalVtbl$DisconnectObject$VH_; }

    static final MemoryLayout IMarshal$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IMarshal");
    static final jdk.incubator.foreign.MemoryLayout IMarshal$struct$LAYOUT() { return IMarshal$struct$LAYOUT_; }

    static final MemoryLayout IMarshal$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMarshal$lpVtbl$LAYOUT() { return IMarshal$lpVtbl$LAYOUT_; }

    static final VarHandle IMarshal$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IMarshal$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IMarshal$lpVtbl$VH() { return IMarshal$lpVtbl$VH_; }

    static final MemoryLayout IID_INoMarshal$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_INoMarshal$LAYOUT() { return IID_INoMarshal$LAYOUT_; }

    static final MemorySegment IID_INoMarshal$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_INoMarshal", IID_INoMarshal$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_INoMarshal$SEGMENT() { return IID_INoMarshal$SEGMENT_; }

    static final MemoryLayout INoMarshalVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release")
    ).withName("INoMarshalVtbl");
    static final jdk.incubator.foreign.MemoryLayout INoMarshalVtbl$struct$LAYOUT() { return INoMarshalVtbl$struct$LAYOUT_; }

    static final MemoryLayout INoMarshalVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout INoMarshalVtbl$QueryInterface$LAYOUT() { return INoMarshalVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle INoMarshalVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(INoMarshalVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle INoMarshalVtbl$QueryInterface$VH() { return INoMarshalVtbl$QueryInterface$VH_; }

    static final MemoryLayout INoMarshalVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout INoMarshalVtbl$AddRef$LAYOUT() { return INoMarshalVtbl$AddRef$LAYOUT_; }

    static final VarHandle INoMarshalVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(INoMarshalVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle INoMarshalVtbl$AddRef$VH() { return INoMarshalVtbl$AddRef$VH_; }

    static final MemoryLayout INoMarshalVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout INoMarshalVtbl$Release$LAYOUT() { return INoMarshalVtbl$Release$LAYOUT_; }

    static final VarHandle INoMarshalVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(INoMarshalVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle INoMarshalVtbl$Release$VH() { return INoMarshalVtbl$Release$VH_; }

    static final MemoryLayout INoMarshal$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("INoMarshal");
    static final jdk.incubator.foreign.MemoryLayout INoMarshal$struct$LAYOUT() { return INoMarshal$struct$LAYOUT_; }

    static final MemoryLayout INoMarshal$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout INoMarshal$lpVtbl$LAYOUT() { return INoMarshal$lpVtbl$LAYOUT_; }

    static final VarHandle INoMarshal$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(INoMarshal$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle INoMarshal$lpVtbl$VH() { return INoMarshal$lpVtbl$VH_; }

    static final MemoryLayout IID_IAgileObject$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IAgileObject$LAYOUT() { return IID_IAgileObject$LAYOUT_; }

    static final MemorySegment IID_IAgileObject$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IAgileObject", IID_IAgileObject$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IAgileObject$SEGMENT() { return IID_IAgileObject$SEGMENT_; }

    static final MemoryLayout IAgileObjectVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release")
    ).withName("IAgileObjectVtbl");
    static final jdk.incubator.foreign.MemoryLayout IAgileObjectVtbl$struct$LAYOUT() { return IAgileObjectVtbl$struct$LAYOUT_; }

    static final MemoryLayout IAgileObjectVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAgileObjectVtbl$QueryInterface$LAYOUT() { return IAgileObjectVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IAgileObjectVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IAgileObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IAgileObjectVtbl$QueryInterface$VH() { return IAgileObjectVtbl$QueryInterface$VH_; }

    static final MemoryLayout IAgileObjectVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAgileObjectVtbl$AddRef$LAYOUT() { return IAgileObjectVtbl$AddRef$LAYOUT_; }

    static final VarHandle IAgileObjectVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IAgileObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IAgileObjectVtbl$AddRef$VH() { return IAgileObjectVtbl$AddRef$VH_; }

    static final MemoryLayout IAgileObjectVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAgileObjectVtbl$Release$LAYOUT() { return IAgileObjectVtbl$Release$LAYOUT_; }

    static final VarHandle IAgileObjectVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IAgileObjectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IAgileObjectVtbl$Release$VH() { return IAgileObjectVtbl$Release$VH_; }

    static final MemoryLayout IAgileObject$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IAgileObject");
    static final jdk.incubator.foreign.MemoryLayout IAgileObject$struct$LAYOUT() { return IAgileObject$struct$LAYOUT_; }

    static final MemoryLayout IAgileObject$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAgileObject$lpVtbl$LAYOUT() { return IAgileObject$lpVtbl$LAYOUT_; }

    static final VarHandle IAgileObject$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IAgileObject$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IAgileObject$lpVtbl$VH() { return IAgileObject$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$VH() { return __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec", __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$VH() { return __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec", __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$SEGMENT_; }

    static final int ACTIVATIONTYPE_UNCATEGORIZED() { return (int)0L; }

    static final int ACTIVATIONTYPE_FROM_MONIKER() { return (int)1L; }

    static final int ACTIVATIONTYPE_FROM_DATA() { return (int)2L; }

    static final int ACTIVATIONTYPE_FROM_STORAGE() { return (int)4L; }

    static final int ACTIVATIONTYPE_FROM_STREAM() { return (int)8L; }

    static final int ACTIVATIONTYPE_FROM_FILE() { return (int)16L; }

    static final MemoryLayout IID_IActivationFilter$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IActivationFilter$LAYOUT() { return IID_IActivationFilter$LAYOUT_; }

    static final MemorySegment IID_IActivationFilter$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IActivationFilter", IID_IActivationFilter$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IActivationFilter$SEGMENT() { return IID_IActivationFilter$SEGMENT_; }

    static final MemoryLayout IActivationFilterVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("HandleActivation")
    ).withName("IActivationFilterVtbl");
    static final jdk.incubator.foreign.MemoryLayout IActivationFilterVtbl$struct$LAYOUT() { return IActivationFilterVtbl$struct$LAYOUT_; }

    static final MemoryLayout IActivationFilterVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IActivationFilterVtbl$QueryInterface$LAYOUT() { return IActivationFilterVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IActivationFilterVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IActivationFilterVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IActivationFilterVtbl$QueryInterface$VH() { return IActivationFilterVtbl$QueryInterface$VH_; }

    static final MemoryLayout IActivationFilterVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IActivationFilterVtbl$AddRef$LAYOUT() { return IActivationFilterVtbl$AddRef$LAYOUT_; }

    static final VarHandle IActivationFilterVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IActivationFilterVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IActivationFilterVtbl$AddRef$VH() { return IActivationFilterVtbl$AddRef$VH_; }

    static final MemoryLayout IActivationFilterVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IActivationFilterVtbl$Release$LAYOUT() { return IActivationFilterVtbl$Release$LAYOUT_; }

    static final VarHandle IActivationFilterVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IActivationFilterVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IActivationFilterVtbl$Release$VH() { return IActivationFilterVtbl$Release$VH_; }

    static final MemoryLayout IActivationFilterVtbl$HandleActivation$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IActivationFilterVtbl$HandleActivation$LAYOUT() { return IActivationFilterVtbl$HandleActivation$LAYOUT_; }

    static final VarHandle IActivationFilterVtbl$HandleActivation$VH_ = MemoryHandles.asAddressVarHandle(IActivationFilterVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("HandleActivation")));
    static final java.lang.invoke.VarHandle IActivationFilterVtbl$HandleActivation$VH() { return IActivationFilterVtbl$HandleActivation$VH_; }

    static final MemoryLayout IActivationFilter$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IActivationFilter");
    static final jdk.incubator.foreign.MemoryLayout IActivationFilter$struct$LAYOUT() { return IActivationFilter$struct$LAYOUT_; }

    static final MemoryLayout IActivationFilter$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IActivationFilter$lpVtbl$LAYOUT() { return IActivationFilter$lpVtbl$LAYOUT_; }

    static final VarHandle IActivationFilter$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IActivationFilter$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IActivationFilter$lpVtbl$VH() { return IActivationFilter$lpVtbl$VH_; }

    static final MemoryLayout IID_IMarshal2$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IMarshal2$LAYOUT() { return IID_IMarshal2$LAYOUT_; }

    static final MemorySegment IID_IMarshal2$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IMarshal2", IID_IMarshal2$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IMarshal2$SEGMENT() { return IID_IMarshal2$SEGMENT_; }

    static final MemoryLayout IMarshal2Vtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetUnmarshalClass"),
        C_POINTER.withName("GetMarshalSizeMax"),
        C_POINTER.withName("MarshalInterface"),
        C_POINTER.withName("UnmarshalInterface"),
        C_POINTER.withName("ReleaseMarshalData"),
        C_POINTER.withName("DisconnectObject")
    ).withName("IMarshal2Vtbl");
    static final jdk.incubator.foreign.MemoryLayout IMarshal2Vtbl$struct$LAYOUT() { return IMarshal2Vtbl$struct$LAYOUT_; }

    static final MemoryLayout IMarshal2Vtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMarshal2Vtbl$QueryInterface$LAYOUT() { return IMarshal2Vtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IMarshal2Vtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IMarshal2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IMarshal2Vtbl$QueryInterface$VH() { return IMarshal2Vtbl$QueryInterface$VH_; }

    static final MemoryLayout IMarshal2Vtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMarshal2Vtbl$AddRef$LAYOUT() { return IMarshal2Vtbl$AddRef$LAYOUT_; }

    static final VarHandle IMarshal2Vtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IMarshal2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IMarshal2Vtbl$AddRef$VH() { return IMarshal2Vtbl$AddRef$VH_; }

    static final MemoryLayout IMarshal2Vtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMarshal2Vtbl$Release$LAYOUT() { return IMarshal2Vtbl$Release$LAYOUT_; }

    static final VarHandle IMarshal2Vtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IMarshal2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IMarshal2Vtbl$Release$VH() { return IMarshal2Vtbl$Release$VH_; }

    static final MemoryLayout IMarshal2Vtbl$GetUnmarshalClass$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMarshal2Vtbl$GetUnmarshalClass$LAYOUT() { return IMarshal2Vtbl$GetUnmarshalClass$LAYOUT_; }

    static final VarHandle IMarshal2Vtbl$GetUnmarshalClass$VH_ = MemoryHandles.asAddressVarHandle(IMarshal2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetUnmarshalClass")));
    static final java.lang.invoke.VarHandle IMarshal2Vtbl$GetUnmarshalClass$VH() { return IMarshal2Vtbl$GetUnmarshalClass$VH_; }

    static final MemoryLayout IMarshal2Vtbl$GetMarshalSizeMax$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMarshal2Vtbl$GetMarshalSizeMax$LAYOUT() { return IMarshal2Vtbl$GetMarshalSizeMax$LAYOUT_; }

    static final VarHandle IMarshal2Vtbl$GetMarshalSizeMax$VH_ = MemoryHandles.asAddressVarHandle(IMarshal2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetMarshalSizeMax")));
    static final java.lang.invoke.VarHandle IMarshal2Vtbl$GetMarshalSizeMax$VH() { return IMarshal2Vtbl$GetMarshalSizeMax$VH_; }

    static final MemoryLayout IMarshal2Vtbl$MarshalInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMarshal2Vtbl$MarshalInterface$LAYOUT() { return IMarshal2Vtbl$MarshalInterface$LAYOUT_; }

    static final VarHandle IMarshal2Vtbl$MarshalInterface$VH_ = MemoryHandles.asAddressVarHandle(IMarshal2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MarshalInterface")));
    static final java.lang.invoke.VarHandle IMarshal2Vtbl$MarshalInterface$VH() { return IMarshal2Vtbl$MarshalInterface$VH_; }

    static final MemoryLayout IMarshal2Vtbl$UnmarshalInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMarshal2Vtbl$UnmarshalInterface$LAYOUT() { return IMarshal2Vtbl$UnmarshalInterface$LAYOUT_; }

    static final VarHandle IMarshal2Vtbl$UnmarshalInterface$VH_ = MemoryHandles.asAddressVarHandle(IMarshal2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("UnmarshalInterface")));
    static final java.lang.invoke.VarHandle IMarshal2Vtbl$UnmarshalInterface$VH() { return IMarshal2Vtbl$UnmarshalInterface$VH_; }

    static final MemoryLayout IMarshal2Vtbl$ReleaseMarshalData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMarshal2Vtbl$ReleaseMarshalData$LAYOUT() { return IMarshal2Vtbl$ReleaseMarshalData$LAYOUT_; }

    static final VarHandle IMarshal2Vtbl$ReleaseMarshalData$VH_ = MemoryHandles.asAddressVarHandle(IMarshal2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReleaseMarshalData")));
    static final java.lang.invoke.VarHandle IMarshal2Vtbl$ReleaseMarshalData$VH() { return IMarshal2Vtbl$ReleaseMarshalData$VH_; }

    static final MemoryLayout IMarshal2Vtbl$DisconnectObject$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMarshal2Vtbl$DisconnectObject$LAYOUT() { return IMarshal2Vtbl$DisconnectObject$LAYOUT_; }

    static final VarHandle IMarshal2Vtbl$DisconnectObject$VH_ = MemoryHandles.asAddressVarHandle(IMarshal2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DisconnectObject")));
    static final java.lang.invoke.VarHandle IMarshal2Vtbl$DisconnectObject$VH() { return IMarshal2Vtbl$DisconnectObject$VH_; }

    static final MemoryLayout IMarshal2$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IMarshal2");
    static final jdk.incubator.foreign.MemoryLayout IMarshal2$struct$LAYOUT() { return IMarshal2$struct$LAYOUT_; }

    static final MemoryLayout IMarshal2$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMarshal2$lpVtbl$LAYOUT() { return IMarshal2$lpVtbl$LAYOUT_; }

    static final VarHandle IMarshal2$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IMarshal2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IMarshal2$lpVtbl$VH() { return IMarshal2$lpVtbl$VH_; }

    static final MemoryLayout IID_IMalloc$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IMalloc$LAYOUT() { return IID_IMalloc$LAYOUT_; }

    static final MemorySegment IID_IMalloc$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IMalloc", IID_IMalloc$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IMalloc$SEGMENT() { return IID_IMalloc$SEGMENT_; }

    static final MemoryLayout IMallocVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Alloc"),
        C_POINTER.withName("Realloc"),
        C_POINTER.withName("Free"),
        C_POINTER.withName("GetSize"),
        C_POINTER.withName("DidAlloc"),
        C_POINTER.withName("HeapMinimize")
    ).withName("IMallocVtbl");
    static final jdk.incubator.foreign.MemoryLayout IMallocVtbl$struct$LAYOUT() { return IMallocVtbl$struct$LAYOUT_; }

    static final MemoryLayout IMallocVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMallocVtbl$QueryInterface$LAYOUT() { return IMallocVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IMallocVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IMallocVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IMallocVtbl$QueryInterface$VH() { return IMallocVtbl$QueryInterface$VH_; }

    static final MemoryLayout IMallocVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMallocVtbl$AddRef$LAYOUT() { return IMallocVtbl$AddRef$LAYOUT_; }

    static final VarHandle IMallocVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IMallocVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IMallocVtbl$AddRef$VH() { return IMallocVtbl$AddRef$VH_; }

    static final MemoryLayout IMallocVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMallocVtbl$Release$LAYOUT() { return IMallocVtbl$Release$LAYOUT_; }

    static final VarHandle IMallocVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IMallocVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IMallocVtbl$Release$VH() { return IMallocVtbl$Release$VH_; }

    static final MemoryLayout IMallocVtbl$Alloc$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMallocVtbl$Alloc$LAYOUT() { return IMallocVtbl$Alloc$LAYOUT_; }

    static final VarHandle IMallocVtbl$Alloc$VH_ = MemoryHandles.asAddressVarHandle(IMallocVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Alloc")));
    static final java.lang.invoke.VarHandle IMallocVtbl$Alloc$VH() { return IMallocVtbl$Alloc$VH_; }

    static final MemoryLayout IMallocVtbl$Realloc$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMallocVtbl$Realloc$LAYOUT() { return IMallocVtbl$Realloc$LAYOUT_; }

    static final VarHandle IMallocVtbl$Realloc$VH_ = MemoryHandles.asAddressVarHandle(IMallocVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Realloc")));
    static final java.lang.invoke.VarHandle IMallocVtbl$Realloc$VH() { return IMallocVtbl$Realloc$VH_; }

    static final MemoryLayout IMallocVtbl$Free$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMallocVtbl$Free$LAYOUT() { return IMallocVtbl$Free$LAYOUT_; }

    static final VarHandle IMallocVtbl$Free$VH_ = MemoryHandles.asAddressVarHandle(IMallocVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Free")));
    static final java.lang.invoke.VarHandle IMallocVtbl$Free$VH() { return IMallocVtbl$Free$VH_; }

    static final MemoryLayout IMallocVtbl$GetSize$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMallocVtbl$GetSize$LAYOUT() { return IMallocVtbl$GetSize$LAYOUT_; }

    static final VarHandle IMallocVtbl$GetSize$VH_ = MemoryHandles.asAddressVarHandle(IMallocVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetSize")));
    static final java.lang.invoke.VarHandle IMallocVtbl$GetSize$VH() { return IMallocVtbl$GetSize$VH_; }

    static final MemoryLayout IMallocVtbl$DidAlloc$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMallocVtbl$DidAlloc$LAYOUT() { return IMallocVtbl$DidAlloc$LAYOUT_; }

    static final VarHandle IMallocVtbl$DidAlloc$VH_ = MemoryHandles.asAddressVarHandle(IMallocVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DidAlloc")));
    static final java.lang.invoke.VarHandle IMallocVtbl$DidAlloc$VH() { return IMallocVtbl$DidAlloc$VH_; }

    static final MemoryLayout IMallocVtbl$HeapMinimize$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMallocVtbl$HeapMinimize$LAYOUT() { return IMallocVtbl$HeapMinimize$LAYOUT_; }

    static final VarHandle IMallocVtbl$HeapMinimize$VH_ = MemoryHandles.asAddressVarHandle(IMallocVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("HeapMinimize")));
    static final java.lang.invoke.VarHandle IMallocVtbl$HeapMinimize$VH() { return IMallocVtbl$HeapMinimize$VH_; }

    static final MemoryLayout IMalloc$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IMalloc");
    static final jdk.incubator.foreign.MemoryLayout IMalloc$struct$LAYOUT() { return IMalloc$struct$LAYOUT_; }

    static final MemoryLayout IMalloc$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMalloc$lpVtbl$LAYOUT() { return IMalloc$lpVtbl$LAYOUT_; }

    static final VarHandle IMalloc$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IMalloc$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IMalloc$lpVtbl$VH() { return IMalloc$lpVtbl$VH_; }

    static final MemoryLayout IID_IStdMarshalInfo$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IStdMarshalInfo$LAYOUT() { return IID_IStdMarshalInfo$LAYOUT_; }

    static final MemorySegment IID_IStdMarshalInfo$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IStdMarshalInfo", IID_IStdMarshalInfo$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IStdMarshalInfo$SEGMENT() { return IID_IStdMarshalInfo$SEGMENT_; }

    static final MemoryLayout IStdMarshalInfoVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetClassForHandler")
    ).withName("IStdMarshalInfoVtbl");
    static final jdk.incubator.foreign.MemoryLayout IStdMarshalInfoVtbl$struct$LAYOUT() { return IStdMarshalInfoVtbl$struct$LAYOUT_; }

    static final MemoryLayout IStdMarshalInfoVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStdMarshalInfoVtbl$QueryInterface$LAYOUT() { return IStdMarshalInfoVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IStdMarshalInfoVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IStdMarshalInfoVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IStdMarshalInfoVtbl$QueryInterface$VH() { return IStdMarshalInfoVtbl$QueryInterface$VH_; }

    static final MemoryLayout IStdMarshalInfoVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStdMarshalInfoVtbl$AddRef$LAYOUT() { return IStdMarshalInfoVtbl$AddRef$LAYOUT_; }

    static final VarHandle IStdMarshalInfoVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IStdMarshalInfoVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IStdMarshalInfoVtbl$AddRef$VH() { return IStdMarshalInfoVtbl$AddRef$VH_; }

    static final MemoryLayout IStdMarshalInfoVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStdMarshalInfoVtbl$Release$LAYOUT() { return IStdMarshalInfoVtbl$Release$LAYOUT_; }

    static final VarHandle IStdMarshalInfoVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IStdMarshalInfoVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IStdMarshalInfoVtbl$Release$VH() { return IStdMarshalInfoVtbl$Release$VH_; }

    static final MemoryLayout IStdMarshalInfoVtbl$GetClassForHandler$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStdMarshalInfoVtbl$GetClassForHandler$LAYOUT() { return IStdMarshalInfoVtbl$GetClassForHandler$LAYOUT_; }

    static final VarHandle IStdMarshalInfoVtbl$GetClassForHandler$VH_ = MemoryHandles.asAddressVarHandle(IStdMarshalInfoVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetClassForHandler")));
    static final java.lang.invoke.VarHandle IStdMarshalInfoVtbl$GetClassForHandler$VH() { return IStdMarshalInfoVtbl$GetClassForHandler$VH_; }

    static final MemoryLayout IStdMarshalInfo$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IStdMarshalInfo");
    static final jdk.incubator.foreign.MemoryLayout IStdMarshalInfo$struct$LAYOUT() { return IStdMarshalInfo$struct$LAYOUT_; }

    static final MemoryLayout IStdMarshalInfo$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStdMarshalInfo$lpVtbl$LAYOUT() { return IStdMarshalInfo$lpVtbl$LAYOUT_; }

    static final VarHandle IStdMarshalInfo$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IStdMarshalInfo$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IStdMarshalInfo$lpVtbl$VH() { return IStdMarshalInfo$lpVtbl$VH_; }

    static final int EXTCONN_STRONG() { return (int)1L; }

    static final int EXTCONN_WEAK() { return (int)2L; }

    static final int EXTCONN_CALLABLE() { return (int)4L; }

    static final MemoryLayout IID_IExternalConnection$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IExternalConnection$LAYOUT() { return IID_IExternalConnection$LAYOUT_; }

    static final MemorySegment IID_IExternalConnection$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IExternalConnection", IID_IExternalConnection$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IExternalConnection$SEGMENT() { return IID_IExternalConnection$SEGMENT_; }

    static final MemoryLayout IExternalConnectionVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("AddConnection"),
        C_POINTER.withName("ReleaseConnection")
    ).withName("IExternalConnectionVtbl");
    static final jdk.incubator.foreign.MemoryLayout IExternalConnectionVtbl$struct$LAYOUT() { return IExternalConnectionVtbl$struct$LAYOUT_; }

    static final MemoryLayout IExternalConnectionVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IExternalConnectionVtbl$QueryInterface$LAYOUT() { return IExternalConnectionVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IExternalConnectionVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IExternalConnectionVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IExternalConnectionVtbl$QueryInterface$VH() { return IExternalConnectionVtbl$QueryInterface$VH_; }

    static final MemoryLayout IExternalConnectionVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IExternalConnectionVtbl$AddRef$LAYOUT() { return IExternalConnectionVtbl$AddRef$LAYOUT_; }

    static final VarHandle IExternalConnectionVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IExternalConnectionVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IExternalConnectionVtbl$AddRef$VH() { return IExternalConnectionVtbl$AddRef$VH_; }

    static final MemoryLayout IExternalConnectionVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IExternalConnectionVtbl$Release$LAYOUT() { return IExternalConnectionVtbl$Release$LAYOUT_; }

    static final VarHandle IExternalConnectionVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IExternalConnectionVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IExternalConnectionVtbl$Release$VH() { return IExternalConnectionVtbl$Release$VH_; }

    static final MemoryLayout IExternalConnectionVtbl$AddConnection$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IExternalConnectionVtbl$AddConnection$LAYOUT() { return IExternalConnectionVtbl$AddConnection$LAYOUT_; }

    static final VarHandle IExternalConnectionVtbl$AddConnection$VH_ = MemoryHandles.asAddressVarHandle(IExternalConnectionVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddConnection")));
    static final java.lang.invoke.VarHandle IExternalConnectionVtbl$AddConnection$VH() { return IExternalConnectionVtbl$AddConnection$VH_; }

    static final MemoryLayout IExternalConnectionVtbl$ReleaseConnection$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IExternalConnectionVtbl$ReleaseConnection$LAYOUT() { return IExternalConnectionVtbl$ReleaseConnection$LAYOUT_; }

    static final VarHandle IExternalConnectionVtbl$ReleaseConnection$VH_ = MemoryHandles.asAddressVarHandle(IExternalConnectionVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReleaseConnection")));
    static final java.lang.invoke.VarHandle IExternalConnectionVtbl$ReleaseConnection$VH() { return IExternalConnectionVtbl$ReleaseConnection$VH_; }

    static final MemoryLayout IExternalConnection$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IExternalConnection");
    static final jdk.incubator.foreign.MemoryLayout IExternalConnection$struct$LAYOUT() { return IExternalConnection$struct$LAYOUT_; }

    static final MemoryLayout IExternalConnection$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IExternalConnection$lpVtbl$LAYOUT() { return IExternalConnection$lpVtbl$LAYOUT_; }

    static final VarHandle IExternalConnection$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IExternalConnection$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IExternalConnection$lpVtbl$VH() { return IExternalConnection$lpVtbl$VH_; }

    static final MemoryLayout tagMULTI_QI$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pIID"),
        C_POINTER.withName("pItf"),
        C_LONG.withName("hr"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagMULTI_QI");
    static final jdk.incubator.foreign.MemoryLayout tagMULTI_QI$struct$LAYOUT() { return tagMULTI_QI$struct$LAYOUT_; }

    static final MemoryLayout tagMULTI_QI$pIID$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMULTI_QI$pIID$LAYOUT() { return tagMULTI_QI$pIID$LAYOUT_; }

    static final VarHandle tagMULTI_QI$pIID$VH_ = MemoryHandles.asAddressVarHandle(tagMULTI_QI$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pIID")));
    static final java.lang.invoke.VarHandle tagMULTI_QI$pIID$VH() { return tagMULTI_QI$pIID$VH_; }

    static final MemoryLayout tagMULTI_QI$pItf$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagMULTI_QI$pItf$LAYOUT() { return tagMULTI_QI$pItf$LAYOUT_; }

    static final VarHandle tagMULTI_QI$pItf$VH_ = MemoryHandles.asAddressVarHandle(tagMULTI_QI$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pItf")));
    static final java.lang.invoke.VarHandle tagMULTI_QI$pItf$VH() { return tagMULTI_QI$pItf$VH_; }

    static final MemoryLayout tagMULTI_QI$hr$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagMULTI_QI$hr$LAYOUT() { return tagMULTI_QI$hr$LAYOUT_; }

    static final VarHandle tagMULTI_QI$hr$VH_ = tagMULTI_QI$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("hr"));
    static final java.lang.invoke.VarHandle tagMULTI_QI$hr$VH() { return tagMULTI_QI$hr$VH_; }

    static final MemoryLayout __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$VH() { return __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec", __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$VH() { return __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec", __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IMultiQI$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IMultiQI$LAYOUT() { return IID_IMultiQI$LAYOUT_; }

    static final MemorySegment IID_IMultiQI$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IMultiQI", IID_IMultiQI$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IMultiQI$SEGMENT() { return IID_IMultiQI$SEGMENT_; }

    static final MemoryLayout IMultiQIVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("QueryMultipleInterfaces")
    ).withName("IMultiQIVtbl");
    static final jdk.incubator.foreign.MemoryLayout IMultiQIVtbl$struct$LAYOUT() { return IMultiQIVtbl$struct$LAYOUT_; }

    static final MemoryLayout IMultiQIVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMultiQIVtbl$QueryInterface$LAYOUT() { return IMultiQIVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IMultiQIVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IMultiQIVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IMultiQIVtbl$QueryInterface$VH() { return IMultiQIVtbl$QueryInterface$VH_; }

    static final MemoryLayout IMultiQIVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMultiQIVtbl$AddRef$LAYOUT() { return IMultiQIVtbl$AddRef$LAYOUT_; }

    static final VarHandle IMultiQIVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IMultiQIVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IMultiQIVtbl$AddRef$VH() { return IMultiQIVtbl$AddRef$VH_; }

    static final MemoryLayout IMultiQIVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMultiQIVtbl$Release$LAYOUT() { return IMultiQIVtbl$Release$LAYOUT_; }

    static final VarHandle IMultiQIVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IMultiQIVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IMultiQIVtbl$Release$VH() { return IMultiQIVtbl$Release$VH_; }

    static final MemoryLayout IMultiQIVtbl$QueryMultipleInterfaces$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMultiQIVtbl$QueryMultipleInterfaces$LAYOUT() { return IMultiQIVtbl$QueryMultipleInterfaces$LAYOUT_; }

    static final VarHandle IMultiQIVtbl$QueryMultipleInterfaces$VH_ = MemoryHandles.asAddressVarHandle(IMultiQIVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryMultipleInterfaces")));
    static final java.lang.invoke.VarHandle IMultiQIVtbl$QueryMultipleInterfaces$VH() { return IMultiQIVtbl$QueryMultipleInterfaces$VH_; }

    static final MemoryLayout IMultiQI$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IMultiQI");
    static final jdk.incubator.foreign.MemoryLayout IMultiQI$struct$LAYOUT() { return IMultiQI$struct$LAYOUT_; }

    static final MemoryLayout IMultiQI$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IMultiQI$lpVtbl$LAYOUT() { return IMultiQI$lpVtbl$LAYOUT_; }

    static final VarHandle IMultiQI$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IMultiQI$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IMultiQI$lpVtbl$VH() { return IMultiQI$lpVtbl$VH_; }

    static final MemoryLayout IID_AsyncIMultiQI$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_AsyncIMultiQI$LAYOUT() { return IID_AsyncIMultiQI$LAYOUT_; }

    static final MemorySegment IID_AsyncIMultiQI$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_AsyncIMultiQI", IID_AsyncIMultiQI$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_AsyncIMultiQI$SEGMENT() { return IID_AsyncIMultiQI$SEGMENT_; }

    static final MemoryLayout AsyncIMultiQIVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Begin_QueryMultipleInterfaces"),
        C_POINTER.withName("Finish_QueryMultipleInterfaces")
    ).withName("AsyncIMultiQIVtbl");
    static final jdk.incubator.foreign.MemoryLayout AsyncIMultiQIVtbl$struct$LAYOUT() { return AsyncIMultiQIVtbl$struct$LAYOUT_; }

    static final MemoryLayout AsyncIMultiQIVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIMultiQIVtbl$QueryInterface$LAYOUT() { return AsyncIMultiQIVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle AsyncIMultiQIVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(AsyncIMultiQIVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle AsyncIMultiQIVtbl$QueryInterface$VH() { return AsyncIMultiQIVtbl$QueryInterface$VH_; }

    static final MemoryLayout AsyncIMultiQIVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIMultiQIVtbl$AddRef$LAYOUT() { return AsyncIMultiQIVtbl$AddRef$LAYOUT_; }

    static final VarHandle AsyncIMultiQIVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(AsyncIMultiQIVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle AsyncIMultiQIVtbl$AddRef$VH() { return AsyncIMultiQIVtbl$AddRef$VH_; }

    static final MemoryLayout AsyncIMultiQIVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIMultiQIVtbl$Release$LAYOUT() { return AsyncIMultiQIVtbl$Release$LAYOUT_; }

    static final VarHandle AsyncIMultiQIVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(AsyncIMultiQIVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle AsyncIMultiQIVtbl$Release$VH() { return AsyncIMultiQIVtbl$Release$VH_; }

    static final MemoryLayout AsyncIMultiQIVtbl$Begin_QueryMultipleInterfaces$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIMultiQIVtbl$Begin_QueryMultipleInterfaces$LAYOUT() { return AsyncIMultiQIVtbl$Begin_QueryMultipleInterfaces$LAYOUT_; }

    static final VarHandle AsyncIMultiQIVtbl$Begin_QueryMultipleInterfaces$VH_ = MemoryHandles.asAddressVarHandle(AsyncIMultiQIVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Begin_QueryMultipleInterfaces")));
    static final java.lang.invoke.VarHandle AsyncIMultiQIVtbl$Begin_QueryMultipleInterfaces$VH() { return AsyncIMultiQIVtbl$Begin_QueryMultipleInterfaces$VH_; }

    static final MemoryLayout AsyncIMultiQIVtbl$Finish_QueryMultipleInterfaces$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIMultiQIVtbl$Finish_QueryMultipleInterfaces$LAYOUT() { return AsyncIMultiQIVtbl$Finish_QueryMultipleInterfaces$LAYOUT_; }

    static final VarHandle AsyncIMultiQIVtbl$Finish_QueryMultipleInterfaces$VH_ = MemoryHandles.asAddressVarHandle(AsyncIMultiQIVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Finish_QueryMultipleInterfaces")));
    static final java.lang.invoke.VarHandle AsyncIMultiQIVtbl$Finish_QueryMultipleInterfaces$VH() { return AsyncIMultiQIVtbl$Finish_QueryMultipleInterfaces$VH_; }

    static final MemoryLayout AsyncIMultiQI$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("AsyncIMultiQI");
    static final jdk.incubator.foreign.MemoryLayout AsyncIMultiQI$struct$LAYOUT() { return AsyncIMultiQI$struct$LAYOUT_; }

    static final MemoryLayout AsyncIMultiQI$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIMultiQI$lpVtbl$LAYOUT() { return AsyncIMultiQI$lpVtbl$LAYOUT_; }

    static final VarHandle AsyncIMultiQI$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(AsyncIMultiQI$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle AsyncIMultiQI$lpVtbl$VH() { return AsyncIMultiQI$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$VH() { return __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec", __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$VH() { return __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec", __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IInternalUnknown$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IInternalUnknown$LAYOUT() { return IID_IInternalUnknown$LAYOUT_; }

    static final MemorySegment IID_IInternalUnknown$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IInternalUnknown", IID_IInternalUnknown$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IInternalUnknown$SEGMENT() { return IID_IInternalUnknown$SEGMENT_; }

    static final MemoryLayout IInternalUnknownVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("QueryInternalInterface")
    ).withName("IInternalUnknownVtbl");
    static final jdk.incubator.foreign.MemoryLayout IInternalUnknownVtbl$struct$LAYOUT() { return IInternalUnknownVtbl$struct$LAYOUT_; }

    static final MemoryLayout IInternalUnknownVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IInternalUnknownVtbl$QueryInterface$LAYOUT() { return IInternalUnknownVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IInternalUnknownVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IInternalUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IInternalUnknownVtbl$QueryInterface$VH() { return IInternalUnknownVtbl$QueryInterface$VH_; }

    static final MemoryLayout IInternalUnknownVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IInternalUnknownVtbl$AddRef$LAYOUT() { return IInternalUnknownVtbl$AddRef$LAYOUT_; }

    static final VarHandle IInternalUnknownVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IInternalUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IInternalUnknownVtbl$AddRef$VH() { return IInternalUnknownVtbl$AddRef$VH_; }

    static final MemoryLayout IInternalUnknownVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IInternalUnknownVtbl$Release$LAYOUT() { return IInternalUnknownVtbl$Release$LAYOUT_; }

    static final VarHandle IInternalUnknownVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IInternalUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IInternalUnknownVtbl$Release$VH() { return IInternalUnknownVtbl$Release$VH_; }

    static final MemoryLayout IInternalUnknownVtbl$QueryInternalInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IInternalUnknownVtbl$QueryInternalInterface$LAYOUT() { return IInternalUnknownVtbl$QueryInternalInterface$LAYOUT_; }

    static final VarHandle IInternalUnknownVtbl$QueryInternalInterface$VH_ = MemoryHandles.asAddressVarHandle(IInternalUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInternalInterface")));
    static final java.lang.invoke.VarHandle IInternalUnknownVtbl$QueryInternalInterface$VH() { return IInternalUnknownVtbl$QueryInternalInterface$VH_; }

    static final MemoryLayout IInternalUnknown$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IInternalUnknown");
    static final jdk.incubator.foreign.MemoryLayout IInternalUnknown$struct$LAYOUT() { return IInternalUnknown$struct$LAYOUT_; }

    static final MemoryLayout IInternalUnknown$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IInternalUnknown$lpVtbl$LAYOUT() { return IInternalUnknown$lpVtbl$LAYOUT_; }

    static final VarHandle IInternalUnknown$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IInternalUnknown$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IInternalUnknown$lpVtbl$VH() { return IInternalUnknown$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$VH() { return __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec", __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$VH() { return __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec", __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IEnumUnknown$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IEnumUnknown$LAYOUT() { return IID_IEnumUnknown$LAYOUT_; }

    static final MemorySegment IID_IEnumUnknown$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IEnumUnknown", IID_IEnumUnknown$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IEnumUnknown$SEGMENT() { return IID_IEnumUnknown$SEGMENT_; }

    static final MemoryLayout IEnumUnknownVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Next"),
        C_POINTER.withName("Skip"),
        C_POINTER.withName("Reset"),
        C_POINTER.withName("Clone")
    ).withName("IEnumUnknownVtbl");
    static final jdk.incubator.foreign.MemoryLayout IEnumUnknownVtbl$struct$LAYOUT() { return IEnumUnknownVtbl$struct$LAYOUT_; }

    static final MemoryLayout IEnumUnknownVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumUnknownVtbl$QueryInterface$LAYOUT() { return IEnumUnknownVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IEnumUnknownVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IEnumUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IEnumUnknownVtbl$QueryInterface$VH() { return IEnumUnknownVtbl$QueryInterface$VH_; }

    static final MemoryLayout IEnumUnknownVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumUnknownVtbl$AddRef$LAYOUT() { return IEnumUnknownVtbl$AddRef$LAYOUT_; }

    static final VarHandle IEnumUnknownVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IEnumUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IEnumUnknownVtbl$AddRef$VH() { return IEnumUnknownVtbl$AddRef$VH_; }

    static final MemoryLayout IEnumUnknownVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumUnknownVtbl$Release$LAYOUT() { return IEnumUnknownVtbl$Release$LAYOUT_; }

    static final VarHandle IEnumUnknownVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IEnumUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IEnumUnknownVtbl$Release$VH() { return IEnumUnknownVtbl$Release$VH_; }

    static final MemoryLayout IEnumUnknownVtbl$Next$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumUnknownVtbl$Next$LAYOUT() { return IEnumUnknownVtbl$Next$LAYOUT_; }

    static final VarHandle IEnumUnknownVtbl$Next$VH_ = MemoryHandles.asAddressVarHandle(IEnumUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Next")));
    static final java.lang.invoke.VarHandle IEnumUnknownVtbl$Next$VH() { return IEnumUnknownVtbl$Next$VH_; }

    static final MemoryLayout IEnumUnknownVtbl$Skip$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumUnknownVtbl$Skip$LAYOUT() { return IEnumUnknownVtbl$Skip$LAYOUT_; }

    static final VarHandle IEnumUnknownVtbl$Skip$VH_ = MemoryHandles.asAddressVarHandle(IEnumUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Skip")));
    static final java.lang.invoke.VarHandle IEnumUnknownVtbl$Skip$VH() { return IEnumUnknownVtbl$Skip$VH_; }

    static final MemoryLayout IEnumUnknownVtbl$Reset$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumUnknownVtbl$Reset$LAYOUT() { return IEnumUnknownVtbl$Reset$LAYOUT_; }

    static final VarHandle IEnumUnknownVtbl$Reset$VH_ = MemoryHandles.asAddressVarHandle(IEnumUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Reset")));
    static final java.lang.invoke.VarHandle IEnumUnknownVtbl$Reset$VH() { return IEnumUnknownVtbl$Reset$VH_; }

    static final MemoryLayout IEnumUnknownVtbl$Clone$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumUnknownVtbl$Clone$LAYOUT() { return IEnumUnknownVtbl$Clone$LAYOUT_; }

    static final VarHandle IEnumUnknownVtbl$Clone$VH_ = MemoryHandles.asAddressVarHandle(IEnumUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Clone")));
    static final java.lang.invoke.VarHandle IEnumUnknownVtbl$Clone$VH() { return IEnumUnknownVtbl$Clone$VH_; }

    static final MemoryLayout IEnumUnknown$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IEnumUnknown");
    static final jdk.incubator.foreign.MemoryLayout IEnumUnknown$struct$LAYOUT() { return IEnumUnknown$struct$LAYOUT_; }

    static final MemoryLayout IEnumUnknown$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumUnknown$lpVtbl$LAYOUT() { return IEnumUnknown$lpVtbl$LAYOUT_; }

    static final VarHandle IEnumUnknown$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IEnumUnknown$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IEnumUnknown$lpVtbl$VH() { return IEnumUnknown$lpVtbl$VH_; }

    static final FunctionDescriptor IEnumUnknown_RemoteNext_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumUnknown_RemoteNext_Proxy$FUNC() { return IEnumUnknown_RemoteNext_Proxy$FUNC_; }

    static final MethodHandle IEnumUnknown_RemoteNext_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumUnknown_RemoteNext_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IEnumUnknown_RemoteNext_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumUnknown_RemoteNext_Proxy$MH() { return IEnumUnknown_RemoteNext_Proxy$MH_; }

    static final FunctionDescriptor IEnumUnknown_RemoteNext_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumUnknown_RemoteNext_Stub$FUNC() { return IEnumUnknown_RemoteNext_Stub$FUNC_; }

    static final MethodHandle IEnumUnknown_RemoteNext_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumUnknown_RemoteNext_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IEnumUnknown_RemoteNext_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumUnknown_RemoteNext_Stub$MH() { return IEnumUnknown_RemoteNext_Stub$MH_; }

    static final MemoryLayout IID_IEnumString$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IEnumString$LAYOUT() { return IID_IEnumString$LAYOUT_; }

    static final MemorySegment IID_IEnumString$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IEnumString", IID_IEnumString$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IEnumString$SEGMENT() { return IID_IEnumString$SEGMENT_; }

    static final MemoryLayout IEnumStringVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Next"),
        C_POINTER.withName("Skip"),
        C_POINTER.withName("Reset"),
        C_POINTER.withName("Clone")
    ).withName("IEnumStringVtbl");
    static final jdk.incubator.foreign.MemoryLayout IEnumStringVtbl$struct$LAYOUT() { return IEnumStringVtbl$struct$LAYOUT_; }

    static final MemoryLayout IEnumStringVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumStringVtbl$QueryInterface$LAYOUT() { return IEnumStringVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IEnumStringVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IEnumStringVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IEnumStringVtbl$QueryInterface$VH() { return IEnumStringVtbl$QueryInterface$VH_; }

    static final MemoryLayout IEnumStringVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumStringVtbl$AddRef$LAYOUT() { return IEnumStringVtbl$AddRef$LAYOUT_; }

    static final VarHandle IEnumStringVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IEnumStringVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IEnumStringVtbl$AddRef$VH() { return IEnumStringVtbl$AddRef$VH_; }

    static final MemoryLayout IEnumStringVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumStringVtbl$Release$LAYOUT() { return IEnumStringVtbl$Release$LAYOUT_; }

    static final VarHandle IEnumStringVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IEnumStringVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IEnumStringVtbl$Release$VH() { return IEnumStringVtbl$Release$VH_; }

    static final MemoryLayout IEnumStringVtbl$Next$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumStringVtbl$Next$LAYOUT() { return IEnumStringVtbl$Next$LAYOUT_; }

    static final VarHandle IEnumStringVtbl$Next$VH_ = MemoryHandles.asAddressVarHandle(IEnumStringVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Next")));
    static final java.lang.invoke.VarHandle IEnumStringVtbl$Next$VH() { return IEnumStringVtbl$Next$VH_; }

    static final MemoryLayout IEnumStringVtbl$Skip$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumStringVtbl$Skip$LAYOUT() { return IEnumStringVtbl$Skip$LAYOUT_; }

    static final VarHandle IEnumStringVtbl$Skip$VH_ = MemoryHandles.asAddressVarHandle(IEnumStringVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Skip")));
    static final java.lang.invoke.VarHandle IEnumStringVtbl$Skip$VH() { return IEnumStringVtbl$Skip$VH_; }

    static final MemoryLayout IEnumStringVtbl$Reset$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumStringVtbl$Reset$LAYOUT() { return IEnumStringVtbl$Reset$LAYOUT_; }

    static final VarHandle IEnumStringVtbl$Reset$VH_ = MemoryHandles.asAddressVarHandle(IEnumStringVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Reset")));
    static final java.lang.invoke.VarHandle IEnumStringVtbl$Reset$VH() { return IEnumStringVtbl$Reset$VH_; }

    static final MemoryLayout IEnumStringVtbl$Clone$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumStringVtbl$Clone$LAYOUT() { return IEnumStringVtbl$Clone$LAYOUT_; }

    static final VarHandle IEnumStringVtbl$Clone$VH_ = MemoryHandles.asAddressVarHandle(IEnumStringVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Clone")));
    static final java.lang.invoke.VarHandle IEnumStringVtbl$Clone$VH() { return IEnumStringVtbl$Clone$VH_; }

    static final MemoryLayout IEnumString$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IEnumString");
    static final jdk.incubator.foreign.MemoryLayout IEnumString$struct$LAYOUT() { return IEnumString$struct$LAYOUT_; }

    static final MemoryLayout IEnumString$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumString$lpVtbl$LAYOUT() { return IEnumString$lpVtbl$LAYOUT_; }

    static final VarHandle IEnumString$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IEnumString$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IEnumString$lpVtbl$VH() { return IEnumString$lpVtbl$VH_; }

    static final FunctionDescriptor IEnumString_RemoteNext_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumString_RemoteNext_Proxy$FUNC() { return IEnumString_RemoteNext_Proxy$FUNC_; }

    static final MethodHandle IEnumString_RemoteNext_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumString_RemoteNext_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IEnumString_RemoteNext_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumString_RemoteNext_Proxy$MH() { return IEnumString_RemoteNext_Proxy$MH_; }

    static final FunctionDescriptor IEnumString_RemoteNext_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumString_RemoteNext_Stub$FUNC() { return IEnumString_RemoteNext_Stub$FUNC_; }

    static final MethodHandle IEnumString_RemoteNext_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumString_RemoteNext_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IEnumString_RemoteNext_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumString_RemoteNext_Stub$MH() { return IEnumString_RemoteNext_Stub$MH_; }

    static final MemoryLayout IID_ISequentialStream$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_ISequentialStream$LAYOUT() { return IID_ISequentialStream$LAYOUT_; }

    static final MemorySegment IID_ISequentialStream$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ISequentialStream", IID_ISequentialStream$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_ISequentialStream$SEGMENT() { return IID_ISequentialStream$SEGMENT_; }

    static final MemoryLayout ISequentialStreamVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Read"),
        C_POINTER.withName("Write")
    ).withName("ISequentialStreamVtbl");
    static final jdk.incubator.foreign.MemoryLayout ISequentialStreamVtbl$struct$LAYOUT() { return ISequentialStreamVtbl$struct$LAYOUT_; }

    static final MemoryLayout ISequentialStreamVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ISequentialStreamVtbl$QueryInterface$LAYOUT() { return ISequentialStreamVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ISequentialStreamVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ISequentialStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle ISequentialStreamVtbl$QueryInterface$VH() { return ISequentialStreamVtbl$QueryInterface$VH_; }

    static final MemoryLayout ISequentialStreamVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ISequentialStreamVtbl$AddRef$LAYOUT() { return ISequentialStreamVtbl$AddRef$LAYOUT_; }

    static final VarHandle ISequentialStreamVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ISequentialStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle ISequentialStreamVtbl$AddRef$VH() { return ISequentialStreamVtbl$AddRef$VH_; }

    static final MemoryLayout ISequentialStreamVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ISequentialStreamVtbl$Release$LAYOUT() { return ISequentialStreamVtbl$Release$LAYOUT_; }

    static final VarHandle ISequentialStreamVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ISequentialStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle ISequentialStreamVtbl$Release$VH() { return ISequentialStreamVtbl$Release$VH_; }

    static final MemoryLayout ISequentialStreamVtbl$Read$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ISequentialStreamVtbl$Read$LAYOUT() { return ISequentialStreamVtbl$Read$LAYOUT_; }

    static final VarHandle ISequentialStreamVtbl$Read$VH_ = MemoryHandles.asAddressVarHandle(ISequentialStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Read")));
    static final java.lang.invoke.VarHandle ISequentialStreamVtbl$Read$VH() { return ISequentialStreamVtbl$Read$VH_; }

    static final MemoryLayout ISequentialStreamVtbl$Write$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ISequentialStreamVtbl$Write$LAYOUT() { return ISequentialStreamVtbl$Write$LAYOUT_; }

    static final VarHandle ISequentialStreamVtbl$Write$VH_ = MemoryHandles.asAddressVarHandle(ISequentialStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Write")));
    static final java.lang.invoke.VarHandle ISequentialStreamVtbl$Write$VH() { return ISequentialStreamVtbl$Write$VH_; }

    static final MemoryLayout ISequentialStream$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ISequentialStream");
    static final jdk.incubator.foreign.MemoryLayout ISequentialStream$struct$LAYOUT() { return ISequentialStream$struct$LAYOUT_; }

    static final MemoryLayout ISequentialStream$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ISequentialStream$lpVtbl$LAYOUT() { return ISequentialStream$lpVtbl$LAYOUT_; }

    static final VarHandle ISequentialStream$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ISequentialStream$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle ISequentialStream$lpVtbl$VH() { return ISequentialStream$lpVtbl$VH_; }

    static final FunctionDescriptor ISequentialStream_RemoteRead_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ISequentialStream_RemoteRead_Proxy$FUNC() { return ISequentialStream_RemoteRead_Proxy$FUNC_; }

    static final MethodHandle ISequentialStream_RemoteRead_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ISequentialStream_RemoteRead_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ISequentialStream_RemoteRead_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ISequentialStream_RemoteRead_Proxy$MH() { return ISequentialStream_RemoteRead_Proxy$MH_; }

    static final FunctionDescriptor ISequentialStream_RemoteRead_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ISequentialStream_RemoteRead_Stub$FUNC() { return ISequentialStream_RemoteRead_Stub$FUNC_; }

    static final MethodHandle ISequentialStream_RemoteRead_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ISequentialStream_RemoteRead_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        ISequentialStream_RemoteRead_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ISequentialStream_RemoteRead_Stub$MH() { return ISequentialStream_RemoteRead_Stub$MH_; }

    static final FunctionDescriptor ISequentialStream_RemoteWrite_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ISequentialStream_RemoteWrite_Proxy$FUNC() { return ISequentialStream_RemoteWrite_Proxy$FUNC_; }

    static final MethodHandle ISequentialStream_RemoteWrite_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ISequentialStream_RemoteWrite_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ISequentialStream_RemoteWrite_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ISequentialStream_RemoteWrite_Proxy$MH() { return ISequentialStream_RemoteWrite_Proxy$MH_; }

    static final FunctionDescriptor ISequentialStream_RemoteWrite_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ISequentialStream_RemoteWrite_Stub$FUNC() { return ISequentialStream_RemoteWrite_Stub$FUNC_; }

    static final MethodHandle ISequentialStream_RemoteWrite_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ISequentialStream_RemoteWrite_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        ISequentialStream_RemoteWrite_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ISequentialStream_RemoteWrite_Stub$MH() { return ISequentialStream_RemoteWrite_Stub$MH_; }

    static final MemoryLayout tagSTATSTG$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pwcsName"),
        C_LONG.withName("type"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("cbSize"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("mtime"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("ctime"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("atime"),
        C_LONG.withName("grfMode"),
        C_LONG.withName("grfLocksSupported"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("clsid"),
        C_LONG.withName("grfStateBits"),
        C_LONG.withName("reserved")
    ).withName("tagSTATSTG");
    static final jdk.incubator.foreign.MemoryLayout tagSTATSTG$struct$LAYOUT() { return tagSTATSTG$struct$LAYOUT_; }

    static final MemoryLayout tagSTATSTG$pwcsName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagSTATSTG$pwcsName$LAYOUT() { return tagSTATSTG$pwcsName$LAYOUT_; }

    static final VarHandle tagSTATSTG$pwcsName$VH_ = MemoryHandles.asAddressVarHandle(tagSTATSTG$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwcsName")));
    static final java.lang.invoke.VarHandle tagSTATSTG$pwcsName$VH() { return tagSTATSTG$pwcsName$VH_; }

    static final MemoryLayout tagSTATSTG$type$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagSTATSTG$type$LAYOUT() { return tagSTATSTG$type$LAYOUT_; }

    static final VarHandle tagSTATSTG$type$VH_ = tagSTATSTG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("type"));
    static final java.lang.invoke.VarHandle tagSTATSTG$type$VH() { return tagSTATSTG$type$VH_; }

    static final MemoryLayout tagSTATSTG$grfMode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagSTATSTG$grfMode$LAYOUT() { return tagSTATSTG$grfMode$LAYOUT_; }

    static final VarHandle tagSTATSTG$grfMode$VH_ = tagSTATSTG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("grfMode"));
    static final java.lang.invoke.VarHandle tagSTATSTG$grfMode$VH() { return tagSTATSTG$grfMode$VH_; }

    static final MemoryLayout tagSTATSTG$grfLocksSupported$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagSTATSTG$grfLocksSupported$LAYOUT() { return tagSTATSTG$grfLocksSupported$LAYOUT_; }

    static final VarHandle tagSTATSTG$grfLocksSupported$VH_ = tagSTATSTG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("grfLocksSupported"));
    static final java.lang.invoke.VarHandle tagSTATSTG$grfLocksSupported$VH() { return tagSTATSTG$grfLocksSupported$VH_; }

    static final MemoryLayout tagSTATSTG$grfStateBits$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagSTATSTG$grfStateBits$LAYOUT() { return tagSTATSTG$grfStateBits$LAYOUT_; }

    static final VarHandle tagSTATSTG$grfStateBits$VH_ = tagSTATSTG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("grfStateBits"));
    static final java.lang.invoke.VarHandle tagSTATSTG$grfStateBits$VH() { return tagSTATSTG$grfStateBits$VH_; }

    static final MemoryLayout tagSTATSTG$reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagSTATSTG$reserved$LAYOUT() { return tagSTATSTG$reserved$LAYOUT_; }

    static final VarHandle tagSTATSTG$reserved$VH_ = tagSTATSTG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("reserved"));
    static final java.lang.invoke.VarHandle tagSTATSTG$reserved$VH() { return tagSTATSTG$reserved$VH_; }

    static final int STGTY_STORAGE() { return (int)1L; }

    static final int STGTY_STREAM() { return (int)2L; }

    static final int STGTY_LOCKBYTES() { return (int)3L; }

    static final int STGTY_PROPERTY() { return (int)4L; }

    static final int STREAM_SEEK_SET() { return (int)0L; }

    static final int STREAM_SEEK_CUR() { return (int)1L; }

    static final int STREAM_SEEK_END() { return (int)2L; }

    static final int LOCK_WRITE() { return (int)1L; }

    static final int LOCK_EXCLUSIVE() { return (int)2L; }

    static final int LOCK_ONLYONCE() { return (int)4L; }

    static final MemoryLayout IID_IStream$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IStream$LAYOUT() { return IID_IStream$LAYOUT_; }

    static final MemorySegment IID_IStream$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IStream", IID_IStream$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IStream$SEGMENT() { return IID_IStream$SEGMENT_; }

    static final MemoryLayout IStreamVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Read"),
        C_POINTER.withName("Write"),
        C_POINTER.withName("Seek"),
        C_POINTER.withName("SetSize"),
        C_POINTER.withName("CopyTo"),
        C_POINTER.withName("Commit"),
        C_POINTER.withName("Revert"),
        C_POINTER.withName("LockRegion"),
        C_POINTER.withName("UnlockRegion"),
        C_POINTER.withName("Stat"),
        C_POINTER.withName("Clone")
    ).withName("IStreamVtbl");
    static final jdk.incubator.foreign.MemoryLayout IStreamVtbl$struct$LAYOUT() { return IStreamVtbl$struct$LAYOUT_; }

    static final MemoryLayout IStreamVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStreamVtbl$QueryInterface$LAYOUT() { return IStreamVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IStreamVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IStreamVtbl$QueryInterface$VH() { return IStreamVtbl$QueryInterface$VH_; }

    static final MemoryLayout IStreamVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStreamVtbl$AddRef$LAYOUT() { return IStreamVtbl$AddRef$LAYOUT_; }

    static final VarHandle IStreamVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IStreamVtbl$AddRef$VH() { return IStreamVtbl$AddRef$VH_; }

    static final MemoryLayout IStreamVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStreamVtbl$Release$LAYOUT() { return IStreamVtbl$Release$LAYOUT_; }

    static final VarHandle IStreamVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IStreamVtbl$Release$VH() { return IStreamVtbl$Release$VH_; }

    static final MemoryLayout IStreamVtbl$Read$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStreamVtbl$Read$LAYOUT() { return IStreamVtbl$Read$LAYOUT_; }

    static final VarHandle IStreamVtbl$Read$VH_ = MemoryHandles.asAddressVarHandle(IStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Read")));
    static final java.lang.invoke.VarHandle IStreamVtbl$Read$VH() { return IStreamVtbl$Read$VH_; }

    static final MemoryLayout IStreamVtbl$Write$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStreamVtbl$Write$LAYOUT() { return IStreamVtbl$Write$LAYOUT_; }

    static final VarHandle IStreamVtbl$Write$VH_ = MemoryHandles.asAddressVarHandle(IStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Write")));
    static final java.lang.invoke.VarHandle IStreamVtbl$Write$VH() { return IStreamVtbl$Write$VH_; }

    static final MemoryLayout IStreamVtbl$Seek$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStreamVtbl$Seek$LAYOUT() { return IStreamVtbl$Seek$LAYOUT_; }

    static final VarHandle IStreamVtbl$Seek$VH_ = MemoryHandles.asAddressVarHandle(IStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Seek")));
    static final java.lang.invoke.VarHandle IStreamVtbl$Seek$VH() { return IStreamVtbl$Seek$VH_; }

    static final MemoryLayout IStreamVtbl$SetSize$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStreamVtbl$SetSize$LAYOUT() { return IStreamVtbl$SetSize$LAYOUT_; }

    static final VarHandle IStreamVtbl$SetSize$VH_ = MemoryHandles.asAddressVarHandle(IStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetSize")));
    static final java.lang.invoke.VarHandle IStreamVtbl$SetSize$VH() { return IStreamVtbl$SetSize$VH_; }

    static final MemoryLayout IStreamVtbl$CopyTo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStreamVtbl$CopyTo$LAYOUT() { return IStreamVtbl$CopyTo$LAYOUT_; }

    static final VarHandle IStreamVtbl$CopyTo$VH_ = MemoryHandles.asAddressVarHandle(IStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CopyTo")));
    static final java.lang.invoke.VarHandle IStreamVtbl$CopyTo$VH() { return IStreamVtbl$CopyTo$VH_; }

    static final MemoryLayout IStreamVtbl$Commit$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStreamVtbl$Commit$LAYOUT() { return IStreamVtbl$Commit$LAYOUT_; }

    static final VarHandle IStreamVtbl$Commit$VH_ = MemoryHandles.asAddressVarHandle(IStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Commit")));
    static final java.lang.invoke.VarHandle IStreamVtbl$Commit$VH() { return IStreamVtbl$Commit$VH_; }

    static final MemoryLayout IStreamVtbl$Revert$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStreamVtbl$Revert$LAYOUT() { return IStreamVtbl$Revert$LAYOUT_; }

    static final VarHandle IStreamVtbl$Revert$VH_ = MemoryHandles.asAddressVarHandle(IStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Revert")));
    static final java.lang.invoke.VarHandle IStreamVtbl$Revert$VH() { return IStreamVtbl$Revert$VH_; }

    static final MemoryLayout IStreamVtbl$LockRegion$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStreamVtbl$LockRegion$LAYOUT() { return IStreamVtbl$LockRegion$LAYOUT_; }

    static final VarHandle IStreamVtbl$LockRegion$VH_ = MemoryHandles.asAddressVarHandle(IStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LockRegion")));
    static final java.lang.invoke.VarHandle IStreamVtbl$LockRegion$VH() { return IStreamVtbl$LockRegion$VH_; }

    static final MemoryLayout IStreamVtbl$UnlockRegion$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStreamVtbl$UnlockRegion$LAYOUT() { return IStreamVtbl$UnlockRegion$LAYOUT_; }

    static final VarHandle IStreamVtbl$UnlockRegion$VH_ = MemoryHandles.asAddressVarHandle(IStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("UnlockRegion")));
    static final java.lang.invoke.VarHandle IStreamVtbl$UnlockRegion$VH() { return IStreamVtbl$UnlockRegion$VH_; }

    static final MemoryLayout IStreamVtbl$Stat$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStreamVtbl$Stat$LAYOUT() { return IStreamVtbl$Stat$LAYOUT_; }

    static final VarHandle IStreamVtbl$Stat$VH_ = MemoryHandles.asAddressVarHandle(IStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Stat")));
    static final java.lang.invoke.VarHandle IStreamVtbl$Stat$VH() { return IStreamVtbl$Stat$VH_; }

    static final MemoryLayout IStreamVtbl$Clone$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStreamVtbl$Clone$LAYOUT() { return IStreamVtbl$Clone$LAYOUT_; }

    static final VarHandle IStreamVtbl$Clone$VH_ = MemoryHandles.asAddressVarHandle(IStreamVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Clone")));
    static final java.lang.invoke.VarHandle IStreamVtbl$Clone$VH() { return IStreamVtbl$Clone$VH_; }

    static final MemoryLayout IStream$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IStream");
    static final jdk.incubator.foreign.MemoryLayout IStream$struct$LAYOUT() { return IStream$struct$LAYOUT_; }

    static final MemoryLayout IStream$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IStream$lpVtbl$LAYOUT() { return IStream$lpVtbl$LAYOUT_; }

    static final VarHandle IStream$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IStream$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IStream$lpVtbl$VH() { return IStream$lpVtbl$VH_; }

    static final FunctionDescriptor IStream_RemoteSeek_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("_LARGE_INTEGER"),
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IStream_RemoteSeek_Proxy$FUNC() { return IStream_RemoteSeek_Proxy$FUNC_; }

    static final MethodHandle IStream_RemoteSeek_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IStream_RemoteSeek_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;ILjdk/incubator/foreign/MemoryAddress;)I",
        IStream_RemoteSeek_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IStream_RemoteSeek_Proxy$MH() { return IStream_RemoteSeek_Proxy$MH_; }

    static final FunctionDescriptor IStream_RemoteSeek_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IStream_RemoteSeek_Stub$FUNC() { return IStream_RemoteSeek_Stub$FUNC_; }

    static final MethodHandle IStream_RemoteSeek_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IStream_RemoteSeek_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IStream_RemoteSeek_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IStream_RemoteSeek_Stub$MH() { return IStream_RemoteSeek_Stub$MH_; }

    static final FunctionDescriptor IStream_RemoteCopyTo_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("_ULARGE_INTEGER"),
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IStream_RemoteCopyTo_Proxy$FUNC() { return IStream_RemoteCopyTo_Proxy$FUNC_; }

    static final MethodHandle IStream_RemoteCopyTo_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IStream_RemoteCopyTo_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IStream_RemoteCopyTo_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IStream_RemoteCopyTo_Proxy$MH() { return IStream_RemoteCopyTo_Proxy$MH_; }

    static final FunctionDescriptor IStream_RemoteCopyTo_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IStream_RemoteCopyTo_Stub$FUNC() { return IStream_RemoteCopyTo_Stub$FUNC_; }

    static final MethodHandle IStream_RemoteCopyTo_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IStream_RemoteCopyTo_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IStream_RemoteCopyTo_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IStream_RemoteCopyTo_Stub$MH() { return IStream_RemoteCopyTo_Stub$MH_; }

    static final MemoryLayout tagRPCOLEMESSAGE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("reserved1"),
        C_LONG.withName("dataRepresentation"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("Buffer"),
        C_LONG.withName("cbBuffer"),
        C_LONG.withName("iMethod"),
        MemoryLayout.ofSequence(5, C_POINTER).withName("reserved2"),
        C_LONG.withName("rpcFlags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagRPCOLEMESSAGE");
    static final jdk.incubator.foreign.MemoryLayout tagRPCOLEMESSAGE$struct$LAYOUT() { return tagRPCOLEMESSAGE$struct$LAYOUT_; }

    static final MemoryLayout tagRPCOLEMESSAGE$reserved1$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPCOLEMESSAGE$reserved1$LAYOUT() { return tagRPCOLEMESSAGE$reserved1$LAYOUT_; }

    static final VarHandle tagRPCOLEMESSAGE$reserved1$VH_ = MemoryHandles.asAddressVarHandle(tagRPCOLEMESSAGE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("reserved1")));
    static final java.lang.invoke.VarHandle tagRPCOLEMESSAGE$reserved1$VH() { return tagRPCOLEMESSAGE$reserved1$VH_; }

    static final MemoryLayout tagRPCOLEMESSAGE$dataRepresentation$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPCOLEMESSAGE$dataRepresentation$LAYOUT() { return tagRPCOLEMESSAGE$dataRepresentation$LAYOUT_; }

    static final VarHandle tagRPCOLEMESSAGE$dataRepresentation$VH_ = tagRPCOLEMESSAGE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dataRepresentation"));
    static final java.lang.invoke.VarHandle tagRPCOLEMESSAGE$dataRepresentation$VH() { return tagRPCOLEMESSAGE$dataRepresentation$VH_; }

    static final MemoryLayout tagRPCOLEMESSAGE$Buffer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagRPCOLEMESSAGE$Buffer$LAYOUT() { return tagRPCOLEMESSAGE$Buffer$LAYOUT_; }

    static final VarHandle tagRPCOLEMESSAGE$Buffer$VH_ = MemoryHandles.asAddressVarHandle(tagRPCOLEMESSAGE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Buffer")));
    static final java.lang.invoke.VarHandle tagRPCOLEMESSAGE$Buffer$VH() { return tagRPCOLEMESSAGE$Buffer$VH_; }

    static final MemoryLayout tagRPCOLEMESSAGE$cbBuffer$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPCOLEMESSAGE$cbBuffer$LAYOUT() { return tagRPCOLEMESSAGE$cbBuffer$LAYOUT_; }

    static final VarHandle tagRPCOLEMESSAGE$cbBuffer$VH_ = tagRPCOLEMESSAGE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBuffer"));
    static final java.lang.invoke.VarHandle tagRPCOLEMESSAGE$cbBuffer$VH() { return tagRPCOLEMESSAGE$cbBuffer$VH_; }

    static final MemoryLayout tagRPCOLEMESSAGE$iMethod$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPCOLEMESSAGE$iMethod$LAYOUT() { return tagRPCOLEMESSAGE$iMethod$LAYOUT_; }

    static final VarHandle tagRPCOLEMESSAGE$iMethod$VH_ = tagRPCOLEMESSAGE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("iMethod"));
    static final java.lang.invoke.VarHandle tagRPCOLEMESSAGE$iMethod$VH() { return tagRPCOLEMESSAGE$iMethod$VH_; }

    static final MemoryLayout tagRPCOLEMESSAGE$rpcFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRPCOLEMESSAGE$rpcFlags$LAYOUT() { return tagRPCOLEMESSAGE$rpcFlags$LAYOUT_; }

    static final VarHandle tagRPCOLEMESSAGE$rpcFlags$VH_ = tagRPCOLEMESSAGE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("rpcFlags"));
    static final java.lang.invoke.VarHandle tagRPCOLEMESSAGE$rpcFlags$VH() { return tagRPCOLEMESSAGE$rpcFlags$VH_; }

    static final MemoryLayout IID_IRpcChannelBuffer$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IRpcChannelBuffer$LAYOUT() { return IID_IRpcChannelBuffer$LAYOUT_; }

    static final MemorySegment IID_IRpcChannelBuffer$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IRpcChannelBuffer", IID_IRpcChannelBuffer$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IRpcChannelBuffer$SEGMENT() { return IID_IRpcChannelBuffer$SEGMENT_; }

    static final MemoryLayout IRpcChannelBufferVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetBuffer"),
        C_POINTER.withName("SendReceive"),
        C_POINTER.withName("FreeBuffer"),
        C_POINTER.withName("GetDestCtx"),
        C_POINTER.withName("IsConnected")
    ).withName("IRpcChannelBufferVtbl");
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBufferVtbl$struct$LAYOUT() { return IRpcChannelBufferVtbl$struct$LAYOUT_; }

    static final MemoryLayout IRpcChannelBufferVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBufferVtbl$QueryInterface$LAYOUT() { return IRpcChannelBufferVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IRpcChannelBufferVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IRpcChannelBufferVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IRpcChannelBufferVtbl$QueryInterface$VH() { return IRpcChannelBufferVtbl$QueryInterface$VH_; }

    static final MemoryLayout IRpcChannelBufferVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBufferVtbl$AddRef$LAYOUT() { return IRpcChannelBufferVtbl$AddRef$LAYOUT_; }

    static final VarHandle IRpcChannelBufferVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IRpcChannelBufferVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IRpcChannelBufferVtbl$AddRef$VH() { return IRpcChannelBufferVtbl$AddRef$VH_; }

    static final MemoryLayout IRpcChannelBufferVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBufferVtbl$Release$LAYOUT() { return IRpcChannelBufferVtbl$Release$LAYOUT_; }

    static final VarHandle IRpcChannelBufferVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IRpcChannelBufferVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IRpcChannelBufferVtbl$Release$VH() { return IRpcChannelBufferVtbl$Release$VH_; }

    static final MemoryLayout IRpcChannelBufferVtbl$GetBuffer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBufferVtbl$GetBuffer$LAYOUT() { return IRpcChannelBufferVtbl$GetBuffer$LAYOUT_; }

    static final VarHandle IRpcChannelBufferVtbl$GetBuffer$VH_ = MemoryHandles.asAddressVarHandle(IRpcChannelBufferVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetBuffer")));
    static final java.lang.invoke.VarHandle IRpcChannelBufferVtbl$GetBuffer$VH() { return IRpcChannelBufferVtbl$GetBuffer$VH_; }

    static final MemoryLayout IRpcChannelBufferVtbl$SendReceive$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBufferVtbl$SendReceive$LAYOUT() { return IRpcChannelBufferVtbl$SendReceive$LAYOUT_; }

    static final VarHandle IRpcChannelBufferVtbl$SendReceive$VH_ = MemoryHandles.asAddressVarHandle(IRpcChannelBufferVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SendReceive")));
    static final java.lang.invoke.VarHandle IRpcChannelBufferVtbl$SendReceive$VH() { return IRpcChannelBufferVtbl$SendReceive$VH_; }

    static final MemoryLayout IRpcChannelBufferVtbl$FreeBuffer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBufferVtbl$FreeBuffer$LAYOUT() { return IRpcChannelBufferVtbl$FreeBuffer$LAYOUT_; }

    static final VarHandle IRpcChannelBufferVtbl$FreeBuffer$VH_ = MemoryHandles.asAddressVarHandle(IRpcChannelBufferVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("FreeBuffer")));
    static final java.lang.invoke.VarHandle IRpcChannelBufferVtbl$FreeBuffer$VH() { return IRpcChannelBufferVtbl$FreeBuffer$VH_; }

    static final MemoryLayout IRpcChannelBufferVtbl$GetDestCtx$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBufferVtbl$GetDestCtx$LAYOUT() { return IRpcChannelBufferVtbl$GetDestCtx$LAYOUT_; }

    static final VarHandle IRpcChannelBufferVtbl$GetDestCtx$VH_ = MemoryHandles.asAddressVarHandle(IRpcChannelBufferVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDestCtx")));
    static final java.lang.invoke.VarHandle IRpcChannelBufferVtbl$GetDestCtx$VH() { return IRpcChannelBufferVtbl$GetDestCtx$VH_; }

    static final MemoryLayout IRpcChannelBufferVtbl$IsConnected$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBufferVtbl$IsConnected$LAYOUT() { return IRpcChannelBufferVtbl$IsConnected$LAYOUT_; }

    static final VarHandle IRpcChannelBufferVtbl$IsConnected$VH_ = MemoryHandles.asAddressVarHandle(IRpcChannelBufferVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IsConnected")));
    static final java.lang.invoke.VarHandle IRpcChannelBufferVtbl$IsConnected$VH() { return IRpcChannelBufferVtbl$IsConnected$VH_; }

    static final MemoryLayout IRpcChannelBuffer$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IRpcChannelBuffer");
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBuffer$struct$LAYOUT() { return IRpcChannelBuffer$struct$LAYOUT_; }

    static final MemoryLayout IRpcChannelBuffer$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBuffer$lpVtbl$LAYOUT() { return IRpcChannelBuffer$lpVtbl$LAYOUT_; }

    static final VarHandle IRpcChannelBuffer$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IRpcChannelBuffer$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IRpcChannelBuffer$lpVtbl$VH() { return IRpcChannelBuffer$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$VH() { return __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec", __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$VH() { return __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec", __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IRpcChannelBuffer2$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IRpcChannelBuffer2$LAYOUT() { return IID_IRpcChannelBuffer2$LAYOUT_; }

    static final MemorySegment IID_IRpcChannelBuffer2$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IRpcChannelBuffer2", IID_IRpcChannelBuffer2$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IRpcChannelBuffer2$SEGMENT() { return IID_IRpcChannelBuffer2$SEGMENT_; }

    static final MemoryLayout IRpcChannelBuffer2Vtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetBuffer"),
        C_POINTER.withName("SendReceive"),
        C_POINTER.withName("FreeBuffer"),
        C_POINTER.withName("GetDestCtx"),
        C_POINTER.withName("IsConnected"),
        C_POINTER.withName("GetProtocolVersion")
    ).withName("IRpcChannelBuffer2Vtbl");
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBuffer2Vtbl$struct$LAYOUT() { return IRpcChannelBuffer2Vtbl$struct$LAYOUT_; }

    static final MemoryLayout IRpcChannelBuffer2Vtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBuffer2Vtbl$QueryInterface$LAYOUT() { return IRpcChannelBuffer2Vtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IRpcChannelBuffer2Vtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IRpcChannelBuffer2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IRpcChannelBuffer2Vtbl$QueryInterface$VH() { return IRpcChannelBuffer2Vtbl$QueryInterface$VH_; }

    static final MemoryLayout IRpcChannelBuffer2Vtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBuffer2Vtbl$AddRef$LAYOUT() { return IRpcChannelBuffer2Vtbl$AddRef$LAYOUT_; }

    static final VarHandle IRpcChannelBuffer2Vtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IRpcChannelBuffer2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IRpcChannelBuffer2Vtbl$AddRef$VH() { return IRpcChannelBuffer2Vtbl$AddRef$VH_; }

    static final MemoryLayout IRpcChannelBuffer2Vtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBuffer2Vtbl$Release$LAYOUT() { return IRpcChannelBuffer2Vtbl$Release$LAYOUT_; }

    static final VarHandle IRpcChannelBuffer2Vtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IRpcChannelBuffer2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IRpcChannelBuffer2Vtbl$Release$VH() { return IRpcChannelBuffer2Vtbl$Release$VH_; }

    static final MemoryLayout IRpcChannelBuffer2Vtbl$GetBuffer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBuffer2Vtbl$GetBuffer$LAYOUT() { return IRpcChannelBuffer2Vtbl$GetBuffer$LAYOUT_; }

    static final VarHandle IRpcChannelBuffer2Vtbl$GetBuffer$VH_ = MemoryHandles.asAddressVarHandle(IRpcChannelBuffer2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetBuffer")));
    static final java.lang.invoke.VarHandle IRpcChannelBuffer2Vtbl$GetBuffer$VH() { return IRpcChannelBuffer2Vtbl$GetBuffer$VH_; }

    static final MemoryLayout IRpcChannelBuffer2Vtbl$SendReceive$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBuffer2Vtbl$SendReceive$LAYOUT() { return IRpcChannelBuffer2Vtbl$SendReceive$LAYOUT_; }

    static final VarHandle IRpcChannelBuffer2Vtbl$SendReceive$VH_ = MemoryHandles.asAddressVarHandle(IRpcChannelBuffer2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SendReceive")));
    static final java.lang.invoke.VarHandle IRpcChannelBuffer2Vtbl$SendReceive$VH() { return IRpcChannelBuffer2Vtbl$SendReceive$VH_; }

    static final MemoryLayout IRpcChannelBuffer2Vtbl$FreeBuffer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBuffer2Vtbl$FreeBuffer$LAYOUT() { return IRpcChannelBuffer2Vtbl$FreeBuffer$LAYOUT_; }

    static final VarHandle IRpcChannelBuffer2Vtbl$FreeBuffer$VH_ = MemoryHandles.asAddressVarHandle(IRpcChannelBuffer2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("FreeBuffer")));
    static final java.lang.invoke.VarHandle IRpcChannelBuffer2Vtbl$FreeBuffer$VH() { return IRpcChannelBuffer2Vtbl$FreeBuffer$VH_; }

    static final MemoryLayout IRpcChannelBuffer2Vtbl$GetDestCtx$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBuffer2Vtbl$GetDestCtx$LAYOUT() { return IRpcChannelBuffer2Vtbl$GetDestCtx$LAYOUT_; }

    static final VarHandle IRpcChannelBuffer2Vtbl$GetDestCtx$VH_ = MemoryHandles.asAddressVarHandle(IRpcChannelBuffer2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDestCtx")));
    static final java.lang.invoke.VarHandle IRpcChannelBuffer2Vtbl$GetDestCtx$VH() { return IRpcChannelBuffer2Vtbl$GetDestCtx$VH_; }

    static final MemoryLayout IRpcChannelBuffer2Vtbl$IsConnected$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBuffer2Vtbl$IsConnected$LAYOUT() { return IRpcChannelBuffer2Vtbl$IsConnected$LAYOUT_; }

    static final VarHandle IRpcChannelBuffer2Vtbl$IsConnected$VH_ = MemoryHandles.asAddressVarHandle(IRpcChannelBuffer2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IsConnected")));
    static final java.lang.invoke.VarHandle IRpcChannelBuffer2Vtbl$IsConnected$VH() { return IRpcChannelBuffer2Vtbl$IsConnected$VH_; }

    static final MemoryLayout IRpcChannelBuffer2Vtbl$GetProtocolVersion$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBuffer2Vtbl$GetProtocolVersion$LAYOUT() { return IRpcChannelBuffer2Vtbl$GetProtocolVersion$LAYOUT_; }

    static final VarHandle IRpcChannelBuffer2Vtbl$GetProtocolVersion$VH_ = MemoryHandles.asAddressVarHandle(IRpcChannelBuffer2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetProtocolVersion")));
    static final java.lang.invoke.VarHandle IRpcChannelBuffer2Vtbl$GetProtocolVersion$VH() { return IRpcChannelBuffer2Vtbl$GetProtocolVersion$VH_; }

    static final MemoryLayout IRpcChannelBuffer2$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IRpcChannelBuffer2");
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBuffer2$struct$LAYOUT() { return IRpcChannelBuffer2$struct$LAYOUT_; }

    static final MemoryLayout IRpcChannelBuffer2$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IRpcChannelBuffer2$lpVtbl$LAYOUT() { return IRpcChannelBuffer2$lpVtbl$LAYOUT_; }

    static final VarHandle IRpcChannelBuffer2$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IRpcChannelBuffer2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IRpcChannelBuffer2$lpVtbl$VH() { return IRpcChannelBuffer2$lpVtbl$VH_; }

    static final MemoryLayout IID_IAsyncRpcChannelBuffer$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IAsyncRpcChannelBuffer$LAYOUT() { return IID_IAsyncRpcChannelBuffer$LAYOUT_; }

    static final MemorySegment IID_IAsyncRpcChannelBuffer$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IAsyncRpcChannelBuffer", IID_IAsyncRpcChannelBuffer$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IAsyncRpcChannelBuffer$SEGMENT() { return IID_IAsyncRpcChannelBuffer$SEGMENT_; }

    static final MemoryLayout IAsyncRpcChannelBufferVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetBuffer"),
        C_POINTER.withName("SendReceive"),
        C_POINTER.withName("FreeBuffer"),
        C_POINTER.withName("GetDestCtx"),
        C_POINTER.withName("IsConnected"),
        C_POINTER.withName("GetProtocolVersion"),
        C_POINTER.withName("Send"),
        C_POINTER.withName("Receive"),
        C_POINTER.withName("GetDestCtxEx")
    ).withName("IAsyncRpcChannelBufferVtbl");
    static final jdk.incubator.foreign.MemoryLayout IAsyncRpcChannelBufferVtbl$struct$LAYOUT() { return IAsyncRpcChannelBufferVtbl$struct$LAYOUT_; }

    static final MemoryLayout IAsyncRpcChannelBufferVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAsyncRpcChannelBufferVtbl$QueryInterface$LAYOUT() { return IAsyncRpcChannelBufferVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IAsyncRpcChannelBufferVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IAsyncRpcChannelBufferVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IAsyncRpcChannelBufferVtbl$QueryInterface$VH() { return IAsyncRpcChannelBufferVtbl$QueryInterface$VH_; }

    static final MemoryLayout IAsyncRpcChannelBufferVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAsyncRpcChannelBufferVtbl$AddRef$LAYOUT() { return IAsyncRpcChannelBufferVtbl$AddRef$LAYOUT_; }

    static final VarHandle IAsyncRpcChannelBufferVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IAsyncRpcChannelBufferVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IAsyncRpcChannelBufferVtbl$AddRef$VH() { return IAsyncRpcChannelBufferVtbl$AddRef$VH_; }

    static final MemoryLayout IAsyncRpcChannelBufferVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAsyncRpcChannelBufferVtbl$Release$LAYOUT() { return IAsyncRpcChannelBufferVtbl$Release$LAYOUT_; }

    static final VarHandle IAsyncRpcChannelBufferVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IAsyncRpcChannelBufferVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IAsyncRpcChannelBufferVtbl$Release$VH() { return IAsyncRpcChannelBufferVtbl$Release$VH_; }

    static final MemoryLayout IAsyncRpcChannelBufferVtbl$GetBuffer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAsyncRpcChannelBufferVtbl$GetBuffer$LAYOUT() { return IAsyncRpcChannelBufferVtbl$GetBuffer$LAYOUT_; }

    static final VarHandle IAsyncRpcChannelBufferVtbl$GetBuffer$VH_ = MemoryHandles.asAddressVarHandle(IAsyncRpcChannelBufferVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetBuffer")));
    static final java.lang.invoke.VarHandle IAsyncRpcChannelBufferVtbl$GetBuffer$VH() { return IAsyncRpcChannelBufferVtbl$GetBuffer$VH_; }

    static final MemoryLayout IAsyncRpcChannelBufferVtbl$SendReceive$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IAsyncRpcChannelBufferVtbl$SendReceive$LAYOUT() { return IAsyncRpcChannelBufferVtbl$SendReceive$LAYOUT_; }

    static final VarHandle IAsyncRpcChannelBufferVtbl$SendReceive$VH_ = MemoryHandles.asAddressVarHandle(IAsyncRpcChannelBufferVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SendReceive")));
    static final java.lang.invoke.VarHandle IAsyncRpcChannelBufferVtbl$SendReceive$VH() { return IAsyncRpcChannelBufferVtbl$SendReceive$VH_; }

}

