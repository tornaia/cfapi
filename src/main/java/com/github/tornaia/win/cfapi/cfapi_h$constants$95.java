// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$95 extends cfapi_h$constants$94 {

    /* package-private */ cfapi_h$constants$95() {}
    static final MemoryLayout IDataFilterVtbl$DoDecode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataFilterVtbl$DoDecode$LAYOUT() { return IDataFilterVtbl$DoDecode$LAYOUT_; }

    static final VarHandle IDataFilterVtbl$DoDecode$VH_ = MemoryHandles.asAddressVarHandle(IDataFilterVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DoDecode")));
    static final java.lang.invoke.VarHandle IDataFilterVtbl$DoDecode$VH() { return IDataFilterVtbl$DoDecode$VH_; }

    static final MemoryLayout IDataFilterVtbl$SetEncodingLevel$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataFilterVtbl$SetEncodingLevel$LAYOUT() { return IDataFilterVtbl$SetEncodingLevel$LAYOUT_; }

    static final VarHandle IDataFilterVtbl$SetEncodingLevel$VH_ = MemoryHandles.asAddressVarHandle(IDataFilterVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetEncodingLevel")));
    static final java.lang.invoke.VarHandle IDataFilterVtbl$SetEncodingLevel$VH() { return IDataFilterVtbl$SetEncodingLevel$VH_; }

    static final MemoryLayout IDataFilter$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IDataFilter");
    static final jdk.incubator.foreign.MemoryLayout IDataFilter$struct$LAYOUT() { return IDataFilter$struct$LAYOUT_; }

    static final MemoryLayout IDataFilter$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IDataFilter$lpVtbl$LAYOUT() { return IDataFilter$lpVtbl$LAYOUT_; }

    static final VarHandle IDataFilter$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IDataFilter$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IDataFilter$lpVtbl$VH() { return IDataFilter$lpVtbl$VH_; }

    static final MemoryLayout _tagPROTOCOLFILTERDATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pProtocolSink"),
        C_POINTER.withName("pProtocol"),
        C_POINTER.withName("pUnk"),
        C_LONG.withName("dwFilterFlags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_tagPROTOCOLFILTERDATA");
    static final jdk.incubator.foreign.MemoryLayout _tagPROTOCOLFILTERDATA$struct$LAYOUT() { return _tagPROTOCOLFILTERDATA$struct$LAYOUT_; }

    static final MemoryLayout _tagPROTOCOLFILTERDATA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _tagPROTOCOLFILTERDATA$cbSize$LAYOUT() { return _tagPROTOCOLFILTERDATA$cbSize$LAYOUT_; }

    static final VarHandle _tagPROTOCOLFILTERDATA$cbSize$VH_ = _tagPROTOCOLFILTERDATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _tagPROTOCOLFILTERDATA$cbSize$VH() { return _tagPROTOCOLFILTERDATA$cbSize$VH_; }

    static final MemoryLayout _tagPROTOCOLFILTERDATA$pProtocolSink$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _tagPROTOCOLFILTERDATA$pProtocolSink$LAYOUT() { return _tagPROTOCOLFILTERDATA$pProtocolSink$LAYOUT_; }

    static final VarHandle _tagPROTOCOLFILTERDATA$pProtocolSink$VH_ = MemoryHandles.asAddressVarHandle(_tagPROTOCOLFILTERDATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pProtocolSink")));
    static final java.lang.invoke.VarHandle _tagPROTOCOLFILTERDATA$pProtocolSink$VH() { return _tagPROTOCOLFILTERDATA$pProtocolSink$VH_; }

    static final MemoryLayout _tagPROTOCOLFILTERDATA$pProtocol$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _tagPROTOCOLFILTERDATA$pProtocol$LAYOUT() { return _tagPROTOCOLFILTERDATA$pProtocol$LAYOUT_; }

    static final VarHandle _tagPROTOCOLFILTERDATA$pProtocol$VH_ = MemoryHandles.asAddressVarHandle(_tagPROTOCOLFILTERDATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pProtocol")));
    static final java.lang.invoke.VarHandle _tagPROTOCOLFILTERDATA$pProtocol$VH() { return _tagPROTOCOLFILTERDATA$pProtocol$VH_; }

    static final MemoryLayout _tagPROTOCOLFILTERDATA$pUnk$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _tagPROTOCOLFILTERDATA$pUnk$LAYOUT() { return _tagPROTOCOLFILTERDATA$pUnk$LAYOUT_; }

    static final VarHandle _tagPROTOCOLFILTERDATA$pUnk$VH_ = MemoryHandles.asAddressVarHandle(_tagPROTOCOLFILTERDATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pUnk")));
    static final java.lang.invoke.VarHandle _tagPROTOCOLFILTERDATA$pUnk$VH() { return _tagPROTOCOLFILTERDATA$pUnk$VH_; }

    static final MemoryLayout _tagPROTOCOLFILTERDATA$dwFilterFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _tagPROTOCOLFILTERDATA$dwFilterFlags$LAYOUT() { return _tagPROTOCOLFILTERDATA$dwFilterFlags$LAYOUT_; }

    static final VarHandle _tagPROTOCOLFILTERDATA$dwFilterFlags$VH_ = _tagPROTOCOLFILTERDATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFilterFlags"));
    static final java.lang.invoke.VarHandle _tagPROTOCOLFILTERDATA$dwFilterFlags$VH() { return _tagPROTOCOLFILTERDATA$dwFilterFlags$VH_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$VH() { return __MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec", __MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$VH() { return __MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec", __MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout _tagDATAINFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ulTotalSize"),
        C_LONG.withName("ulavrPacketSize"),
        C_LONG.withName("ulConnectSpeed"),
        C_LONG.withName("ulProcessorSpeed")
    ).withName("_tagDATAINFO");
    static final jdk.incubator.foreign.MemoryLayout _tagDATAINFO$struct$LAYOUT() { return _tagDATAINFO$struct$LAYOUT_; }

    static final MemoryLayout _tagDATAINFO$ulTotalSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _tagDATAINFO$ulTotalSize$LAYOUT() { return _tagDATAINFO$ulTotalSize$LAYOUT_; }

    static final VarHandle _tagDATAINFO$ulTotalSize$VH_ = _tagDATAINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulTotalSize"));
    static final java.lang.invoke.VarHandle _tagDATAINFO$ulTotalSize$VH() { return _tagDATAINFO$ulTotalSize$VH_; }

    static final MemoryLayout _tagDATAINFO$ulavrPacketSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _tagDATAINFO$ulavrPacketSize$LAYOUT() { return _tagDATAINFO$ulavrPacketSize$LAYOUT_; }

    static final VarHandle _tagDATAINFO$ulavrPacketSize$VH_ = _tagDATAINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulavrPacketSize"));
    static final java.lang.invoke.VarHandle _tagDATAINFO$ulavrPacketSize$VH() { return _tagDATAINFO$ulavrPacketSize$VH_; }

    static final MemoryLayout _tagDATAINFO$ulConnectSpeed$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _tagDATAINFO$ulConnectSpeed$LAYOUT() { return _tagDATAINFO$ulConnectSpeed$LAYOUT_; }

    static final VarHandle _tagDATAINFO$ulConnectSpeed$VH_ = _tagDATAINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulConnectSpeed"));
    static final java.lang.invoke.VarHandle _tagDATAINFO$ulConnectSpeed$VH() { return _tagDATAINFO$ulConnectSpeed$VH_; }

    static final MemoryLayout _tagDATAINFO$ulProcessorSpeed$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _tagDATAINFO$ulProcessorSpeed$LAYOUT() { return _tagDATAINFO$ulProcessorSpeed$LAYOUT_; }

    static final VarHandle _tagDATAINFO$ulProcessorSpeed$VH_ = _tagDATAINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulProcessorSpeed"));
    static final java.lang.invoke.VarHandle _tagDATAINFO$ulProcessorSpeed$VH() { return _tagDATAINFO$ulProcessorSpeed$VH_; }

    static final MemoryLayout IID_IEncodingFilterFactory$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IEncodingFilterFactory$LAYOUT() { return IID_IEncodingFilterFactory$LAYOUT_; }

    static final MemorySegment IID_IEncodingFilterFactory$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IEncodingFilterFactory", IID_IEncodingFilterFactory$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IEncodingFilterFactory$SEGMENT() { return IID_IEncodingFilterFactory$SEGMENT_; }

    static final MemoryLayout IEncodingFilterFactoryVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("FindBestFilter"),
        C_POINTER.withName("GetDefaultFilter")
    ).withName("IEncodingFilterFactoryVtbl");
    static final jdk.incubator.foreign.MemoryLayout IEncodingFilterFactoryVtbl$struct$LAYOUT() { return IEncodingFilterFactoryVtbl$struct$LAYOUT_; }

    static final MemoryLayout IEncodingFilterFactoryVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEncodingFilterFactoryVtbl$QueryInterface$LAYOUT() { return IEncodingFilterFactoryVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IEncodingFilterFactoryVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IEncodingFilterFactoryVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IEncodingFilterFactoryVtbl$QueryInterface$VH() { return IEncodingFilterFactoryVtbl$QueryInterface$VH_; }

    static final MemoryLayout IEncodingFilterFactoryVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEncodingFilterFactoryVtbl$AddRef$LAYOUT() { return IEncodingFilterFactoryVtbl$AddRef$LAYOUT_; }

    static final VarHandle IEncodingFilterFactoryVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IEncodingFilterFactoryVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IEncodingFilterFactoryVtbl$AddRef$VH() { return IEncodingFilterFactoryVtbl$AddRef$VH_; }

    static final MemoryLayout IEncodingFilterFactoryVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEncodingFilterFactoryVtbl$Release$LAYOUT() { return IEncodingFilterFactoryVtbl$Release$LAYOUT_; }

    static final VarHandle IEncodingFilterFactoryVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IEncodingFilterFactoryVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IEncodingFilterFactoryVtbl$Release$VH() { return IEncodingFilterFactoryVtbl$Release$VH_; }

    static final MemoryLayout IEncodingFilterFactoryVtbl$FindBestFilter$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEncodingFilterFactoryVtbl$FindBestFilter$LAYOUT() { return IEncodingFilterFactoryVtbl$FindBestFilter$LAYOUT_; }

    static final VarHandle IEncodingFilterFactoryVtbl$FindBestFilter$VH_ = MemoryHandles.asAddressVarHandle(IEncodingFilterFactoryVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("FindBestFilter")));
    static final java.lang.invoke.VarHandle IEncodingFilterFactoryVtbl$FindBestFilter$VH() { return IEncodingFilterFactoryVtbl$FindBestFilter$VH_; }

    static final MemoryLayout IEncodingFilterFactoryVtbl$GetDefaultFilter$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEncodingFilterFactoryVtbl$GetDefaultFilter$LAYOUT() { return IEncodingFilterFactoryVtbl$GetDefaultFilter$LAYOUT_; }

    static final VarHandle IEncodingFilterFactoryVtbl$GetDefaultFilter$VH_ = MemoryHandles.asAddressVarHandle(IEncodingFilterFactoryVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDefaultFilter")));
    static final java.lang.invoke.VarHandle IEncodingFilterFactoryVtbl$GetDefaultFilter$VH() { return IEncodingFilterFactoryVtbl$GetDefaultFilter$VH_; }

    static final MemoryLayout IEncodingFilterFactory$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IEncodingFilterFactory");
    static final jdk.incubator.foreign.MemoryLayout IEncodingFilterFactory$struct$LAYOUT() { return IEncodingFilterFactory$struct$LAYOUT_; }

    static final MemoryLayout IEncodingFilterFactory$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEncodingFilterFactory$lpVtbl$LAYOUT() { return IEncodingFilterFactory$lpVtbl$LAYOUT_; }

    static final VarHandle IEncodingFilterFactory$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IEncodingFilterFactory$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IEncodingFilterFactory$lpVtbl$VH() { return IEncodingFilterFactory$lpVtbl$VH_; }

    static final FunctionDescriptor IsLoggingEnabledA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IsLoggingEnabledA$FUNC() { return IsLoggingEnabledA$FUNC_; }

    static final MethodHandle IsLoggingEnabledA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IsLoggingEnabledA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        IsLoggingEnabledA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IsLoggingEnabledA$MH() { return IsLoggingEnabledA$MH_; }

    static final FunctionDescriptor IsLoggingEnabledW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IsLoggingEnabledW$FUNC() { return IsLoggingEnabledW$FUNC_; }

    static final MethodHandle IsLoggingEnabledW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IsLoggingEnabledW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        IsLoggingEnabledW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IsLoggingEnabledW$MH() { return IsLoggingEnabledW$MH_; }

    static final MemoryLayout _tagHIT_LOGGING_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwStructSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpszLoggedUrlName"),
        MemoryLayout.ofStruct(
            C_SHORT.withName("wYear"),
            C_SHORT.withName("wMonth"),
            C_SHORT.withName("wDayOfWeek"),
            C_SHORT.withName("wDay"),
            C_SHORT.withName("wHour"),
            C_SHORT.withName("wMinute"),
            C_SHORT.withName("wSecond"),
            C_SHORT.withName("wMilliseconds")
        ).withName("StartTime"),
        MemoryLayout.ofStruct(
            C_SHORT.withName("wYear"),
            C_SHORT.withName("wMonth"),
            C_SHORT.withName("wDayOfWeek"),
            C_SHORT.withName("wDay"),
            C_SHORT.withName("wHour"),
            C_SHORT.withName("wMinute"),
            C_SHORT.withName("wSecond"),
            C_SHORT.withName("wMilliseconds")
        ).withName("EndTime"),
        C_POINTER.withName("lpszExtendedInfo")
    ).withName("_tagHIT_LOGGING_INFO");
    static final jdk.incubator.foreign.MemoryLayout _tagHIT_LOGGING_INFO$struct$LAYOUT() { return _tagHIT_LOGGING_INFO$struct$LAYOUT_; }

    static final MemoryLayout _tagHIT_LOGGING_INFO$dwStructSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _tagHIT_LOGGING_INFO$dwStructSize$LAYOUT() { return _tagHIT_LOGGING_INFO$dwStructSize$LAYOUT_; }

    static final VarHandle _tagHIT_LOGGING_INFO$dwStructSize$VH_ = _tagHIT_LOGGING_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStructSize"));
    static final java.lang.invoke.VarHandle _tagHIT_LOGGING_INFO$dwStructSize$VH() { return _tagHIT_LOGGING_INFO$dwStructSize$VH_; }

    static final MemoryLayout _tagHIT_LOGGING_INFO$lpszLoggedUrlName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _tagHIT_LOGGING_INFO$lpszLoggedUrlName$LAYOUT() { return _tagHIT_LOGGING_INFO$lpszLoggedUrlName$LAYOUT_; }

    static final VarHandle _tagHIT_LOGGING_INFO$lpszLoggedUrlName$VH_ = MemoryHandles.asAddressVarHandle(_tagHIT_LOGGING_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszLoggedUrlName")));
    static final java.lang.invoke.VarHandle _tagHIT_LOGGING_INFO$lpszLoggedUrlName$VH() { return _tagHIT_LOGGING_INFO$lpszLoggedUrlName$VH_; }

    static final MemoryLayout _tagHIT_LOGGING_INFO$lpszExtendedInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _tagHIT_LOGGING_INFO$lpszExtendedInfo$LAYOUT() { return _tagHIT_LOGGING_INFO$lpszExtendedInfo$LAYOUT_; }

    static final VarHandle _tagHIT_LOGGING_INFO$lpszExtendedInfo$VH_ = MemoryHandles.asAddressVarHandle(_tagHIT_LOGGING_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszExtendedInfo")));
    static final java.lang.invoke.VarHandle _tagHIT_LOGGING_INFO$lpszExtendedInfo$VH() { return _tagHIT_LOGGING_INFO$lpszExtendedInfo$VH_; }

    static final FunctionDescriptor WriteHitLogging$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WriteHitLogging$FUNC() { return WriteHitLogging$FUNC_; }

    static final MethodHandle WriteHitLogging$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WriteHitLogging",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        WriteHitLogging$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WriteHitLogging$MH() { return WriteHitLogging$MH_; }

    static final MemoryLayout CONFIRMSAFETY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("clsid"),
        C_POINTER.withName("pUnk"),
        C_LONG.withName("dwFlags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("CONFIRMSAFETY");
    static final jdk.incubator.foreign.MemoryLayout CONFIRMSAFETY$struct$LAYOUT() { return CONFIRMSAFETY$struct$LAYOUT_; }

    static final MemoryLayout CONFIRMSAFETY$pUnk$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout CONFIRMSAFETY$pUnk$LAYOUT() { return CONFIRMSAFETY$pUnk$LAYOUT_; }

    static final VarHandle CONFIRMSAFETY$pUnk$VH_ = MemoryHandles.asAddressVarHandle(CONFIRMSAFETY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pUnk")));
    static final java.lang.invoke.VarHandle CONFIRMSAFETY$pUnk$VH() { return CONFIRMSAFETY$pUnk$VH_; }

    static final MemoryLayout CONFIRMSAFETY$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout CONFIRMSAFETY$dwFlags$LAYOUT() { return CONFIRMSAFETY$dwFlags$LAYOUT_; }

    static final VarHandle CONFIRMSAFETY$dwFlags$VH_ = CONFIRMSAFETY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle CONFIRMSAFETY$dwFlags$VH() { return CONFIRMSAFETY$dwFlags$VH_; }

    static final MemoryLayout GUID_CUSTOM_CONFIRMOBJECTSAFETY$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout GUID_CUSTOM_CONFIRMOBJECTSAFETY$LAYOUT() { return GUID_CUSTOM_CONFIRMOBJECTSAFETY$LAYOUT_; }

    static final MemorySegment GUID_CUSTOM_CONFIRMOBJECTSAFETY$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "GUID_CUSTOM_CONFIRMOBJECTSAFETY", GUID_CUSTOM_CONFIRMOBJECTSAFETY$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment GUID_CUSTOM_CONFIRMOBJECTSAFETY$SEGMENT() { return GUID_CUSTOM_CONFIRMOBJECTSAFETY$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$VH() { return __MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec", __MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$VH() { return __MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec", __MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IWrappedProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IWrappedProtocol$LAYOUT() { return IID_IWrappedProtocol$LAYOUT_; }

    static final MemorySegment IID_IWrappedProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IWrappedProtocol", IID_IWrappedProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IWrappedProtocol$SEGMENT() { return IID_IWrappedProtocol$SEGMENT_; }

    static final MemoryLayout IWrappedProtocolVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetWrapperCode")
    ).withName("IWrappedProtocolVtbl");
    static final jdk.incubator.foreign.MemoryLayout IWrappedProtocolVtbl$struct$LAYOUT() { return IWrappedProtocolVtbl$struct$LAYOUT_; }

    static final MemoryLayout IWrappedProtocolVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWrappedProtocolVtbl$QueryInterface$LAYOUT() { return IWrappedProtocolVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IWrappedProtocolVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IWrappedProtocolVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IWrappedProtocolVtbl$QueryInterface$VH() { return IWrappedProtocolVtbl$QueryInterface$VH_; }

    static final MemoryLayout IWrappedProtocolVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWrappedProtocolVtbl$AddRef$LAYOUT() { return IWrappedProtocolVtbl$AddRef$LAYOUT_; }

    static final VarHandle IWrappedProtocolVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IWrappedProtocolVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IWrappedProtocolVtbl$AddRef$VH() { return IWrappedProtocolVtbl$AddRef$VH_; }

    static final MemoryLayout IWrappedProtocolVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWrappedProtocolVtbl$Release$LAYOUT() { return IWrappedProtocolVtbl$Release$LAYOUT_; }

    static final VarHandle IWrappedProtocolVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IWrappedProtocolVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IWrappedProtocolVtbl$Release$VH() { return IWrappedProtocolVtbl$Release$VH_; }

    static final MemoryLayout IWrappedProtocolVtbl$GetWrapperCode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWrappedProtocolVtbl$GetWrapperCode$LAYOUT() { return IWrappedProtocolVtbl$GetWrapperCode$LAYOUT_; }

    static final VarHandle IWrappedProtocolVtbl$GetWrapperCode$VH_ = MemoryHandles.asAddressVarHandle(IWrappedProtocolVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetWrapperCode")));
    static final java.lang.invoke.VarHandle IWrappedProtocolVtbl$GetWrapperCode$VH() { return IWrappedProtocolVtbl$GetWrapperCode$VH_; }

    static final MemoryLayout IWrappedProtocol$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IWrappedProtocol");
    static final jdk.incubator.foreign.MemoryLayout IWrappedProtocol$struct$LAYOUT() { return IWrappedProtocol$struct$LAYOUT_; }

    static final MemoryLayout IWrappedProtocol$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IWrappedProtocol$lpVtbl$LAYOUT() { return IWrappedProtocol$lpVtbl$LAYOUT_; }

    static final VarHandle IWrappedProtocol$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IWrappedProtocol$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IWrappedProtocol$lpVtbl$VH() { return IWrappedProtocol$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$VH() { return __MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec", __MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$VH() { return __MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec", __MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$SEGMENT_; }

    static final int BINDHANDLETYPES_APPCACHE() { return (int)0L; }

    static final int BINDHANDLETYPES_DEPENDENCY() { return (int)1L; }

    static final int BINDHANDLETYPES_COUNT() { return (int)2L; }

    static final MemoryLayout IID_IGetBindHandle$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IGetBindHandle$LAYOUT() { return IID_IGetBindHandle$LAYOUT_; }

    static final MemorySegment IID_IGetBindHandle$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IGetBindHandle", IID_IGetBindHandle$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IGetBindHandle$SEGMENT() { return IID_IGetBindHandle$SEGMENT_; }

    static final MemoryLayout IGetBindHandleVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetBindHandle")
    ).withName("IGetBindHandleVtbl");
    static final jdk.incubator.foreign.MemoryLayout IGetBindHandleVtbl$struct$LAYOUT() { return IGetBindHandleVtbl$struct$LAYOUT_; }

    static final MemoryLayout IGetBindHandleVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IGetBindHandleVtbl$QueryInterface$LAYOUT() { return IGetBindHandleVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IGetBindHandleVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IGetBindHandleVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IGetBindHandleVtbl$QueryInterface$VH() { return IGetBindHandleVtbl$QueryInterface$VH_; }

    static final MemoryLayout IGetBindHandleVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IGetBindHandleVtbl$AddRef$LAYOUT() { return IGetBindHandleVtbl$AddRef$LAYOUT_; }

    static final VarHandle IGetBindHandleVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IGetBindHandleVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IGetBindHandleVtbl$AddRef$VH() { return IGetBindHandleVtbl$AddRef$VH_; }

    static final MemoryLayout IGetBindHandleVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IGetBindHandleVtbl$Release$LAYOUT() { return IGetBindHandleVtbl$Release$LAYOUT_; }

    static final VarHandle IGetBindHandleVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IGetBindHandleVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IGetBindHandleVtbl$Release$VH() { return IGetBindHandleVtbl$Release$VH_; }

    static final MemoryLayout IGetBindHandleVtbl$GetBindHandle$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IGetBindHandleVtbl$GetBindHandle$LAYOUT() { return IGetBindHandleVtbl$GetBindHandle$LAYOUT_; }

    static final VarHandle IGetBindHandleVtbl$GetBindHandle$VH_ = MemoryHandles.asAddressVarHandle(IGetBindHandleVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetBindHandle")));
    static final java.lang.invoke.VarHandle IGetBindHandleVtbl$GetBindHandle$VH() { return IGetBindHandleVtbl$GetBindHandle$VH_; }

    static final MemoryLayout IGetBindHandle$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IGetBindHandle");
    static final jdk.incubator.foreign.MemoryLayout IGetBindHandle$struct$LAYOUT() { return IGetBindHandle$struct$LAYOUT_; }

    static final MemoryLayout IGetBindHandle$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IGetBindHandle$lpVtbl$LAYOUT() { return IGetBindHandle$lpVtbl$LAYOUT_; }

    static final VarHandle IGetBindHandle$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IGetBindHandle$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IGetBindHandle$lpVtbl$VH() { return IGetBindHandle$lpVtbl$VH_; }

    static final MemoryLayout _tagPROTOCOL_ARGUMENT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("szMethod"),
        C_POINTER.withName("szTargetUrl")
    ).withName("_tagPROTOCOL_ARGUMENT");
    static final jdk.incubator.foreign.MemoryLayout _tagPROTOCOL_ARGUMENT$struct$LAYOUT() { return _tagPROTOCOL_ARGUMENT$struct$LAYOUT_; }

    static final MemoryLayout _tagPROTOCOL_ARGUMENT$szMethod$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _tagPROTOCOL_ARGUMENT$szMethod$LAYOUT() { return _tagPROTOCOL_ARGUMENT$szMethod$LAYOUT_; }

    static final VarHandle _tagPROTOCOL_ARGUMENT$szMethod$VH_ = MemoryHandles.asAddressVarHandle(_tagPROTOCOL_ARGUMENT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("szMethod")));
    static final java.lang.invoke.VarHandle _tagPROTOCOL_ARGUMENT$szMethod$VH() { return _tagPROTOCOL_ARGUMENT$szMethod$VH_; }

    static final MemoryLayout _tagPROTOCOL_ARGUMENT$szTargetUrl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _tagPROTOCOL_ARGUMENT$szTargetUrl$LAYOUT() { return _tagPROTOCOL_ARGUMENT$szTargetUrl$LAYOUT_; }

    static final VarHandle _tagPROTOCOL_ARGUMENT$szTargetUrl$VH_ = MemoryHandles.asAddressVarHandle(_tagPROTOCOL_ARGUMENT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("szTargetUrl")));
    static final java.lang.invoke.VarHandle _tagPROTOCOL_ARGUMENT$szTargetUrl$VH() { return _tagPROTOCOL_ARGUMENT$szTargetUrl$VH_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$VH() { return __MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec", __MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$VH() { return __MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec", __MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IBindCallbackRedirect$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IBindCallbackRedirect$LAYOUT() { return IID_IBindCallbackRedirect$LAYOUT_; }

    static final MemorySegment IID_IBindCallbackRedirect$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IBindCallbackRedirect", IID_IBindCallbackRedirect$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IBindCallbackRedirect$SEGMENT() { return IID_IBindCallbackRedirect$SEGMENT_; }

    static final MemoryLayout IBindCallbackRedirectVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Redirect")
    ).withName("IBindCallbackRedirectVtbl");
    static final jdk.incubator.foreign.MemoryLayout IBindCallbackRedirectVtbl$struct$LAYOUT() { return IBindCallbackRedirectVtbl$struct$LAYOUT_; }

    static final MemoryLayout IBindCallbackRedirectVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBindCallbackRedirectVtbl$QueryInterface$LAYOUT() { return IBindCallbackRedirectVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IBindCallbackRedirectVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IBindCallbackRedirectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IBindCallbackRedirectVtbl$QueryInterface$VH() { return IBindCallbackRedirectVtbl$QueryInterface$VH_; }

    static final MemoryLayout IBindCallbackRedirectVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBindCallbackRedirectVtbl$AddRef$LAYOUT() { return IBindCallbackRedirectVtbl$AddRef$LAYOUT_; }

    static final VarHandle IBindCallbackRedirectVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IBindCallbackRedirectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IBindCallbackRedirectVtbl$AddRef$VH() { return IBindCallbackRedirectVtbl$AddRef$VH_; }

    static final MemoryLayout IBindCallbackRedirectVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBindCallbackRedirectVtbl$Release$LAYOUT() { return IBindCallbackRedirectVtbl$Release$LAYOUT_; }

    static final VarHandle IBindCallbackRedirectVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IBindCallbackRedirectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IBindCallbackRedirectVtbl$Release$VH() { return IBindCallbackRedirectVtbl$Release$VH_; }

    static final MemoryLayout IBindCallbackRedirectVtbl$Redirect$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBindCallbackRedirectVtbl$Redirect$LAYOUT() { return IBindCallbackRedirectVtbl$Redirect$LAYOUT_; }

    static final VarHandle IBindCallbackRedirectVtbl$Redirect$VH_ = MemoryHandles.asAddressVarHandle(IBindCallbackRedirectVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Redirect")));
    static final java.lang.invoke.VarHandle IBindCallbackRedirectVtbl$Redirect$VH() { return IBindCallbackRedirectVtbl$Redirect$VH_; }

    static final MemoryLayout IBindCallbackRedirect$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IBindCallbackRedirect");
    static final jdk.incubator.foreign.MemoryLayout IBindCallbackRedirect$struct$LAYOUT() { return IBindCallbackRedirect$struct$LAYOUT_; }

    static final MemoryLayout IBindCallbackRedirect$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBindCallbackRedirect$lpVtbl$LAYOUT() { return IBindCallbackRedirect$lpVtbl$LAYOUT_; }

    static final VarHandle IBindCallbackRedirect$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IBindCallbackRedirect$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IBindCallbackRedirect$lpVtbl$VH() { return IBindCallbackRedirect$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$VH() { return __MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec", __MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$VH() { return __MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec", __MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IBindHttpSecurity$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IBindHttpSecurity$LAYOUT() { return IID_IBindHttpSecurity$LAYOUT_; }

    static final MemorySegment IID_IBindHttpSecurity$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IBindHttpSecurity", IID_IBindHttpSecurity$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IBindHttpSecurity$SEGMENT() { return IID_IBindHttpSecurity$SEGMENT_; }

    static final MemoryLayout IBindHttpSecurityVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetIgnoreCertMask")
    ).withName("IBindHttpSecurityVtbl");
    static final jdk.incubator.foreign.MemoryLayout IBindHttpSecurityVtbl$struct$LAYOUT() { return IBindHttpSecurityVtbl$struct$LAYOUT_; }

    static final MemoryLayout IBindHttpSecurityVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBindHttpSecurityVtbl$QueryInterface$LAYOUT() { return IBindHttpSecurityVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IBindHttpSecurityVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IBindHttpSecurityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IBindHttpSecurityVtbl$QueryInterface$VH() { return IBindHttpSecurityVtbl$QueryInterface$VH_; }

    static final MemoryLayout IBindHttpSecurityVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBindHttpSecurityVtbl$AddRef$LAYOUT() { return IBindHttpSecurityVtbl$AddRef$LAYOUT_; }

    static final VarHandle IBindHttpSecurityVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IBindHttpSecurityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IBindHttpSecurityVtbl$AddRef$VH() { return IBindHttpSecurityVtbl$AddRef$VH_; }

    static final MemoryLayout IBindHttpSecurityVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBindHttpSecurityVtbl$Release$LAYOUT() { return IBindHttpSecurityVtbl$Release$LAYOUT_; }

    static final VarHandle IBindHttpSecurityVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IBindHttpSecurityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IBindHttpSecurityVtbl$Release$VH() { return IBindHttpSecurityVtbl$Release$VH_; }

    static final MemoryLayout IBindHttpSecurityVtbl$GetIgnoreCertMask$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBindHttpSecurityVtbl$GetIgnoreCertMask$LAYOUT() { return IBindHttpSecurityVtbl$GetIgnoreCertMask$LAYOUT_; }

    static final VarHandle IBindHttpSecurityVtbl$GetIgnoreCertMask$VH_ = MemoryHandles.asAddressVarHandle(IBindHttpSecurityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetIgnoreCertMask")));
    static final java.lang.invoke.VarHandle IBindHttpSecurityVtbl$GetIgnoreCertMask$VH() { return IBindHttpSecurityVtbl$GetIgnoreCertMask$VH_; }

    static final MemoryLayout IBindHttpSecurity$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IBindHttpSecurity");
    static final jdk.incubator.foreign.MemoryLayout IBindHttpSecurity$struct$LAYOUT() { return IBindHttpSecurity$struct$LAYOUT_; }

    static final MemoryLayout IBindHttpSecurity$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IBindHttpSecurity$lpVtbl$LAYOUT() { return IBindHttpSecurity$lpVtbl$LAYOUT_; }

    static final VarHandle IBindHttpSecurity$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IBindHttpSecurity$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IBindHttpSecurity$lpVtbl$VH() { return IBindHttpSecurity$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$VH() { return __MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec", __MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$VH() { return __MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec", __MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$SEGMENT_; }

    static final FunctionDescriptor IBinding_GetBindResult_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IBinding_GetBindResult_Proxy$FUNC() { return IBinding_GetBindResult_Proxy$FUNC_; }

    static final MethodHandle IBinding_GetBindResult_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IBinding_GetBindResult_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IBinding_GetBindResult_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IBinding_GetBindResult_Proxy$MH() { return IBinding_GetBindResult_Proxy$MH_; }

    static final FunctionDescriptor IBinding_GetBindResult_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor IBinding_GetBindResult_Stub$FUNC() { return IBinding_GetBindResult_Stub$FUNC_; }

    static final MethodHandle IBinding_GetBindResult_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IBinding_GetBindResult_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        IBinding_GetBindResult_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IBinding_GetBindResult_Stub$MH() { return IBinding_GetBindResult_Stub$MH_; }

    static final FunctionDescriptor IBindStatusCallback_GetBindInfo_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IBindStatusCallback_GetBindInfo_Proxy$FUNC() { return IBindStatusCallback_GetBindInfo_Proxy$FUNC_; }

    static final MethodHandle IBindStatusCallback_GetBindInfo_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IBindStatusCallback_GetBindInfo_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IBindStatusCallback_GetBindInfo_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IBindStatusCallback_GetBindInfo_Proxy$MH() { return IBindStatusCallback_GetBindInfo_Proxy$MH_; }

    static final FunctionDescriptor IBindStatusCallback_GetBindInfo_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IBindStatusCallback_GetBindInfo_Stub$FUNC() { return IBindStatusCallback_GetBindInfo_Stub$FUNC_; }

    static final MethodHandle IBindStatusCallback_GetBindInfo_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IBindStatusCallback_GetBindInfo_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IBindStatusCallback_GetBindInfo_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IBindStatusCallback_GetBindInfo_Stub$MH() { return IBindStatusCallback_GetBindInfo_Stub$MH_; }

    static final FunctionDescriptor IBindStatusCallback_OnDataAvailable_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IBindStatusCallback_OnDataAvailable_Proxy$FUNC() { return IBindStatusCallback_OnDataAvailable_Proxy$FUNC_; }

    static final MethodHandle IBindStatusCallback_OnDataAvailable_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IBindStatusCallback_OnDataAvailable_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IBindStatusCallback_OnDataAvailable_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IBindStatusCallback_OnDataAvailable_Proxy$MH() { return IBindStatusCallback_OnDataAvailable_Proxy$MH_; }

    static final FunctionDescriptor IBindStatusCallback_OnDataAvailable_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IBindStatusCallback_OnDataAvailable_Stub$FUNC() { return IBindStatusCallback_OnDataAvailable_Stub$FUNC_; }

    static final MethodHandle IBindStatusCallback_OnDataAvailable_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IBindStatusCallback_OnDataAvailable_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IBindStatusCallback_OnDataAvailable_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IBindStatusCallback_OnDataAvailable_Stub$MH() { return IBindStatusCallback_OnDataAvailable_Stub$MH_; }

    static final FunctionDescriptor IBindStatusCallbackEx_GetBindInfoEx_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IBindStatusCallbackEx_GetBindInfoEx_Proxy$FUNC() { return IBindStatusCallbackEx_GetBindInfoEx_Proxy$FUNC_; }

    static final MethodHandle IBindStatusCallbackEx_GetBindInfoEx_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IBindStatusCallbackEx_GetBindInfoEx_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IBindStatusCallbackEx_GetBindInfoEx_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IBindStatusCallbackEx_GetBindInfoEx_Proxy$MH() { return IBindStatusCallbackEx_GetBindInfoEx_Proxy$MH_; }

    static final FunctionDescriptor IBindStatusCallbackEx_GetBindInfoEx_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IBindStatusCallbackEx_GetBindInfoEx_Stub$FUNC() { return IBindStatusCallbackEx_GetBindInfoEx_Stub$FUNC_; }

    static final MethodHandle IBindStatusCallbackEx_GetBindInfoEx_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IBindStatusCallbackEx_GetBindInfoEx_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IBindStatusCallbackEx_GetBindInfoEx_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IBindStatusCallbackEx_GetBindInfoEx_Stub$MH() { return IBindStatusCallbackEx_GetBindInfoEx_Stub$MH_; }

    static final FunctionDescriptor IWinInetInfo_QueryOption_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IWinInetInfo_QueryOption_Proxy$FUNC() { return IWinInetInfo_QueryOption_Proxy$FUNC_; }

    static final MethodHandle IWinInetInfo_QueryOption_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IWinInetInfo_QueryOption_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IWinInetInfo_QueryOption_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IWinInetInfo_QueryOption_Proxy$MH() { return IWinInetInfo_QueryOption_Proxy$MH_; }

    static final FunctionDescriptor IWinInetInfo_QueryOption_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IWinInetInfo_QueryOption_Stub$FUNC() { return IWinInetInfo_QueryOption_Stub$FUNC_; }

    static final MethodHandle IWinInetInfo_QueryOption_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IWinInetInfo_QueryOption_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IWinInetInfo_QueryOption_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IWinInetInfo_QueryOption_Stub$MH() { return IWinInetInfo_QueryOption_Stub$MH_; }

    static final FunctionDescriptor IWinInetHttpInfo_QueryInfo_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IWinInetHttpInfo_QueryInfo_Proxy$FUNC() { return IWinInetHttpInfo_QueryInfo_Proxy$FUNC_; }

    static final MethodHandle IWinInetHttpInfo_QueryInfo_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IWinInetHttpInfo_QueryInfo_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IWinInetHttpInfo_QueryInfo_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IWinInetHttpInfo_QueryInfo_Proxy$MH() { return IWinInetHttpInfo_QueryInfo_Proxy$MH_; }

    static final FunctionDescriptor IWinInetHttpInfo_QueryInfo_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IWinInetHttpInfo_QueryInfo_Stub$FUNC() { return IWinInetHttpInfo_QueryInfo_Stub$FUNC_; }

    static final MethodHandle IWinInetHttpInfo_QueryInfo_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IWinInetHttpInfo_QueryInfo_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IWinInetHttpInfo_QueryInfo_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IWinInetHttpInfo_QueryInfo_Stub$MH() { return IWinInetHttpInfo_QueryInfo_Stub$MH_; }

    static final FunctionDescriptor IBindHost_MonikerBindToStorage_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IBindHost_MonikerBindToStorage_Proxy$FUNC() { return IBindHost_MonikerBindToStorage_Proxy$FUNC_; }

    static final MethodHandle IBindHost_MonikerBindToStorage_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IBindHost_MonikerBindToStorage_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IBindHost_MonikerBindToStorage_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IBindHost_MonikerBindToStorage_Proxy$MH() { return IBindHost_MonikerBindToStorage_Proxy$MH_; }

    static final FunctionDescriptor IBindHost_MonikerBindToStorage_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IBindHost_MonikerBindToStorage_Stub$FUNC() { return IBindHost_MonikerBindToStorage_Stub$FUNC_; }

    static final MethodHandle IBindHost_MonikerBindToStorage_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IBindHost_MonikerBindToStorage_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IBindHost_MonikerBindToStorage_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IBindHost_MonikerBindToStorage_Stub$MH() { return IBindHost_MonikerBindToStorage_Stub$MH_; }

    static final FunctionDescriptor IBindHost_MonikerBindToObject_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IBindHost_MonikerBindToObject_Proxy$FUNC() { return IBindHost_MonikerBindToObject_Proxy$FUNC_; }

    static final MethodHandle IBindHost_MonikerBindToObject_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IBindHost_MonikerBindToObject_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IBindHost_MonikerBindToObject_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IBindHost_MonikerBindToObject_Proxy$MH() { return IBindHost_MonikerBindToObject_Proxy$MH_; }

    static final FunctionDescriptor IBindHost_MonikerBindToObject_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IBindHost_MonikerBindToObject_Stub$FUNC() { return IBindHost_MonikerBindToObject_Stub$FUNC_; }

    static final MethodHandle IBindHost_MonikerBindToObject_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IBindHost_MonikerBindToObject_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IBindHost_MonikerBindToObject_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IBindHost_MonikerBindToObject_Stub$MH() { return IBindHost_MonikerBindToObject_Stub$MH_; }

    static final int PIDMSI_STATUS_NORMAL() { return (int)0L; }

    static final int PIDMSI_STATUS_NEW() { return (int)1L; }

    static final int PIDMSI_STATUS_PRELIM() { return (int)2L; }

    static final int PIDMSI_STATUS_DRAFT() { return (int)3L; }

    static final int PIDMSI_STATUS_INPROGRESS() { return (int)4L; }

    static final int PIDMSI_STATUS_EDIT() { return (int)5L; }

    static final int PIDMSI_STATUS_REVIEW() { return (int)6L; }

    static final int PIDMSI_STATUS_PROOF() { return (int)7L; }

    static final int PIDMSI_STATUS_FINAL() { return (int)8L; }

    static final int PIDMSI_STATUS_OTHER() { return (int)32767L; }

    static final MemoryLayout tagSERIALIZEDPROPERTYVALUE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwType"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("rgb"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("tagSERIALIZEDPROPERTYVALUE");
    static final jdk.incubator.foreign.MemoryLayout tagSERIALIZEDPROPERTYVALUE$struct$LAYOUT() { return tagSERIALIZEDPROPERTYVALUE$struct$LAYOUT_; }

    static final MemoryLayout tagSERIALIZEDPROPERTYVALUE$dwType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagSERIALIZEDPROPERTYVALUE$dwType$LAYOUT() { return tagSERIALIZEDPROPERTYVALUE$dwType$LAYOUT_; }

    static final VarHandle tagSERIALIZEDPROPERTYVALUE$dwType$VH_ = tagSERIALIZEDPROPERTYVALUE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwType"));
    static final java.lang.invoke.VarHandle tagSERIALIZEDPROPERTYVALUE$dwType$VH() { return tagSERIALIZEDPROPERTYVALUE$dwType$VH_; }

    static final FunctionDescriptor StgConvertVariantToProperty$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_SHORT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor StgConvertVariantToProperty$FUNC() { return StgConvertVariantToProperty$FUNC_; }

    static final MethodHandle StgConvertVariantToProperty$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "StgConvertVariantToProperty",
        "(Ljdk/incubator/foreign/MemoryAddress;SLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IBLjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        StgConvertVariantToProperty$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle StgConvertVariantToProperty$MH() { return StgConvertVariantToProperty$MH_; }

    static final MemoryLayout __MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$VH() { return __MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_propidl_0000_0004_v0_0_c_ifspec", __MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$VH() { return __MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_propidl_0000_0004_v0_0_s_ifspec", __MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$SEGMENT_; }

    static final FunctionDescriptor CreateStdProgressIndicator$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CreateStdProgressIndicator$FUNC() { return CreateStdProgressIndicator$FUNC_; }

    static final MethodHandle CreateStdProgressIndicator$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateStdProgressIndicator",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CreateStdProgressIndicator$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CreateStdProgressIndicator$MH() { return CreateStdProgressIndicator$MH_; }

    static final MemoryLayout IID_StdOle$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_StdOle$LAYOUT() { return IID_StdOle$LAYOUT_; }

    static final MemorySegment IID_StdOle$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_StdOle", IID_StdOle$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_StdOle$SEGMENT() { return IID_StdOle$SEGMENT_; }

    static final FunctionDescriptor SysAllocString$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SysAllocString$FUNC() { return SysAllocString$FUNC_; }

    static final MethodHandle SysAllocString$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SysAllocString",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        SysAllocString$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SysAllocString$MH() { return SysAllocString$MH_; }

    static final FunctionDescriptor SysReAllocString$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SysReAllocString$FUNC() { return SysReAllocString$FUNC_; }

    static final MethodHandle SysReAllocString$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SysReAllocString",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SysReAllocString$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SysReAllocString$MH() { return SysReAllocString$MH_; }

    static final FunctionDescriptor SysAllocStringLen$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor SysAllocStringLen$FUNC() { return SysAllocStringLen$FUNC_; }

    static final MethodHandle SysAllocStringLen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SysAllocStringLen",
        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        SysAllocStringLen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SysAllocStringLen$MH() { return SysAllocStringLen$MH_; }

    static final FunctionDescriptor SysReAllocStringLen$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor SysReAllocStringLen$FUNC() { return SysReAllocStringLen$FUNC_; }

    static final MethodHandle SysReAllocStringLen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SysReAllocStringLen",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        SysReAllocStringLen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SysReAllocStringLen$MH() { return SysReAllocStringLen$MH_; }

    static final FunctionDescriptor SysAddRefString$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SysAddRefString$FUNC() { return SysAddRefString$FUNC_; }

    static final MethodHandle SysAddRefString$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SysAddRefString",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SysAddRefString$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SysAddRefString$MH() { return SysAddRefString$MH_; }

    static final FunctionDescriptor SysReleaseString$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SysReleaseString$FUNC() { return SysReleaseString$FUNC_; }

    static final MethodHandle SysReleaseString$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SysReleaseString",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        SysReleaseString$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SysReleaseString$MH() { return SysReleaseString$MH_; }

    static final FunctionDescriptor SysFreeString$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SysFreeString$FUNC() { return SysFreeString$FUNC_; }

    static final MethodHandle SysFreeString$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SysFreeString",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        SysFreeString$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SysFreeString$MH() { return SysFreeString$MH_; }

    static final FunctionDescriptor SysStringLen$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SysStringLen$FUNC() { return SysStringLen$FUNC_; }

    static final MethodHandle SysStringLen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SysStringLen",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SysStringLen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SysStringLen$MH() { return SysStringLen$MH_; }

    static final FunctionDescriptor SysStringByteLen$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SysStringByteLen$FUNC() { return SysStringByteLen$FUNC_; }

    static final MethodHandle SysStringByteLen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SysStringByteLen",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SysStringByteLen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SysStringByteLen$MH() { return SysStringByteLen$MH_; }

    static final FunctionDescriptor SysAllocStringByteLen$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor SysAllocStringByteLen$FUNC() { return SysAllocStringByteLen$FUNC_; }

    static final MethodHandle SysAllocStringByteLen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SysAllocStringByteLen",
        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        SysAllocStringByteLen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SysAllocStringByteLen$MH() { return SysAllocStringByteLen$MH_; }

    static final FunctionDescriptor DosDateTimeToVariantTime$FUNC_ = FunctionDescriptor.of(C_INT,
        C_SHORT,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DosDateTimeToVariantTime$FUNC() { return DosDateTimeToVariantTime$FUNC_; }

    static final MethodHandle DosDateTimeToVariantTime$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DosDateTimeToVariantTime",
        "(SSLjdk/incubator/foreign/MemoryAddress;)I",
        DosDateTimeToVariantTime$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DosDateTimeToVariantTime$MH() { return DosDateTimeToVariantTime$MH_; }

    static final FunctionDescriptor VariantTimeToDosDateTime$FUNC_ = FunctionDescriptor.of(C_INT,
        C_DOUBLE,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VariantTimeToDosDateTime$FUNC() { return VariantTimeToDosDateTime$FUNC_; }

    static final MethodHandle VariantTimeToDosDateTime$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VariantTimeToDosDateTime",
        "(DLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        VariantTimeToDosDateTime$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VariantTimeToDosDateTime$MH() { return VariantTimeToDosDateTime$MH_; }

    static final FunctionDescriptor SystemTimeToVariantTime$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SystemTimeToVariantTime$FUNC() { return SystemTimeToVariantTime$FUNC_; }

    static final MethodHandle SystemTimeToVariantTime$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SystemTimeToVariantTime",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SystemTimeToVariantTime$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SystemTimeToVariantTime$MH() { return SystemTimeToVariantTime$MH_; }

    static final FunctionDescriptor VariantTimeToSystemTime$FUNC_ = FunctionDescriptor.of(C_INT,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VariantTimeToSystemTime$FUNC() { return VariantTimeToSystemTime$FUNC_; }

    static final MethodHandle VariantTimeToSystemTime$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VariantTimeToSystemTime",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VariantTimeToSystemTime$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VariantTimeToSystemTime$MH() { return VariantTimeToSystemTime$MH_; }

    static final FunctionDescriptor SafeArrayAllocDescriptor$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayAllocDescriptor$FUNC() { return SafeArrayAllocDescriptor$FUNC_; }

    static final MethodHandle SafeArrayAllocDescriptor$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayAllocDescriptor",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayAllocDescriptor$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayAllocDescriptor$MH() { return SafeArrayAllocDescriptor$MH_; }

    static final FunctionDescriptor SafeArrayAllocDescriptorEx$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayAllocDescriptorEx$FUNC() { return SafeArrayAllocDescriptorEx$FUNC_; }

    static final MethodHandle SafeArrayAllocDescriptorEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayAllocDescriptorEx",
        "(SILjdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayAllocDescriptorEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayAllocDescriptorEx$MH() { return SafeArrayAllocDescriptorEx$MH_; }

    static final FunctionDescriptor SafeArrayAllocData$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayAllocData$FUNC() { return SafeArrayAllocData$FUNC_; }

    static final MethodHandle SafeArrayAllocData$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayAllocData",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayAllocData$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayAllocData$MH() { return SafeArrayAllocData$MH_; }

    static final FunctionDescriptor SafeArrayCreate$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_SHORT,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayCreate$FUNC() { return SafeArrayCreate$FUNC_; }

    static final MethodHandle SafeArrayCreate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayCreate",
        "(SILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        SafeArrayCreate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayCreate$MH() { return SafeArrayCreate$MH_; }

    static final FunctionDescriptor SafeArrayCreateEx$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_SHORT,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayCreateEx$FUNC() { return SafeArrayCreateEx$FUNC_; }

    static final MethodHandle SafeArrayCreateEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayCreateEx",
        "(SILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        SafeArrayCreateEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayCreateEx$MH() { return SafeArrayCreateEx$MH_; }

    static final FunctionDescriptor SafeArrayCopyData$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayCopyData$FUNC() { return SafeArrayCopyData$FUNC_; }

    static final MethodHandle SafeArrayCopyData$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayCopyData",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayCopyData$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayCopyData$MH() { return SafeArrayCopyData$MH_; }

    static final FunctionDescriptor SafeArrayReleaseDescriptor$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayReleaseDescriptor$FUNC() { return SafeArrayReleaseDescriptor$FUNC_; }

    static final MethodHandle SafeArrayReleaseDescriptor$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayReleaseDescriptor",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        SafeArrayReleaseDescriptor$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayReleaseDescriptor$MH() { return SafeArrayReleaseDescriptor$MH_; }

    static final FunctionDescriptor SafeArrayDestroyDescriptor$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayDestroyDescriptor$FUNC() { return SafeArrayDestroyDescriptor$FUNC_; }

    static final MethodHandle SafeArrayDestroyDescriptor$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayDestroyDescriptor",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayDestroyDescriptor$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayDestroyDescriptor$MH() { return SafeArrayDestroyDescriptor$MH_; }

    static final FunctionDescriptor SafeArrayReleaseData$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayReleaseData$FUNC() { return SafeArrayReleaseData$FUNC_; }

    static final MethodHandle SafeArrayReleaseData$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayReleaseData",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        SafeArrayReleaseData$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayReleaseData$MH() { return SafeArrayReleaseData$MH_; }

    static final FunctionDescriptor SafeArrayDestroyData$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayDestroyData$FUNC() { return SafeArrayDestroyData$FUNC_; }

    static final MethodHandle SafeArrayDestroyData$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayDestroyData",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayDestroyData$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayDestroyData$MH() { return SafeArrayDestroyData$MH_; }

    static final FunctionDescriptor SafeArrayAddRef$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayAddRef$FUNC() { return SafeArrayAddRef$FUNC_; }

    static final MethodHandle SafeArrayAddRef$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayAddRef",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayAddRef$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayAddRef$MH() { return SafeArrayAddRef$MH_; }

    static final FunctionDescriptor SafeArrayDestroy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayDestroy$FUNC() { return SafeArrayDestroy$FUNC_; }

    static final MethodHandle SafeArrayDestroy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayDestroy",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayDestroy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayDestroy$MH() { return SafeArrayDestroy$MH_; }

    static final FunctionDescriptor SafeArrayRedim$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayRedim$FUNC() { return SafeArrayRedim$FUNC_; }

    static final MethodHandle SafeArrayRedim$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayRedim",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayRedim$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayRedim$MH() { return SafeArrayRedim$MH_; }

    static final FunctionDescriptor SafeArrayGetDim$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayGetDim$FUNC() { return SafeArrayGetDim$FUNC_; }

    static final MethodHandle SafeArrayGetDim$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayGetDim",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayGetDim$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayGetDim$MH() { return SafeArrayGetDim$MH_; }

    static final FunctionDescriptor SafeArrayGetElemsize$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayGetElemsize$FUNC() { return SafeArrayGetElemsize$FUNC_; }

    static final MethodHandle SafeArrayGetElemsize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayGetElemsize",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayGetElemsize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayGetElemsize$MH() { return SafeArrayGetElemsize$MH_; }

    static final FunctionDescriptor SafeArrayGetUBound$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayGetUBound$FUNC() { return SafeArrayGetUBound$FUNC_; }

    static final MethodHandle SafeArrayGetUBound$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayGetUBound",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayGetUBound$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayGetUBound$MH() { return SafeArrayGetUBound$MH_; }

    static final FunctionDescriptor SafeArrayGetLBound$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayGetLBound$FUNC() { return SafeArrayGetLBound$FUNC_; }

    static final MethodHandle SafeArrayGetLBound$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayGetLBound",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayGetLBound$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayGetLBound$MH() { return SafeArrayGetLBound$MH_; }

    static final FunctionDescriptor SafeArrayLock$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayLock$FUNC() { return SafeArrayLock$FUNC_; }

    static final MethodHandle SafeArrayLock$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayLock",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayLock$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayLock$MH() { return SafeArrayLock$MH_; }

    static final FunctionDescriptor SafeArrayUnlock$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayUnlock$FUNC() { return SafeArrayUnlock$FUNC_; }

    static final MethodHandle SafeArrayUnlock$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayUnlock",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayUnlock$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayUnlock$MH() { return SafeArrayUnlock$MH_; }

    static final FunctionDescriptor SafeArrayAccessData$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayAccessData$FUNC() { return SafeArrayAccessData$FUNC_; }

    static final MethodHandle SafeArrayAccessData$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayAccessData",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayAccessData$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayAccessData$MH() { return SafeArrayAccessData$MH_; }

    static final FunctionDescriptor SafeArrayUnaccessData$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayUnaccessData$FUNC() { return SafeArrayUnaccessData$FUNC_; }

    static final MethodHandle SafeArrayUnaccessData$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayUnaccessData",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayUnaccessData$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayUnaccessData$MH() { return SafeArrayUnaccessData$MH_; }

    static final FunctionDescriptor SafeArrayGetElement$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayGetElement$FUNC() { return SafeArrayGetElement$FUNC_; }

    static final MethodHandle SafeArrayGetElement$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayGetElement",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayGetElement$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayGetElement$MH() { return SafeArrayGetElement$MH_; }

    static final FunctionDescriptor SafeArrayPutElement$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayPutElement$FUNC() { return SafeArrayPutElement$FUNC_; }

    static final MethodHandle SafeArrayPutElement$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayPutElement",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayPutElement$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayPutElement$MH() { return SafeArrayPutElement$MH_; }

    static final FunctionDescriptor SafeArrayCopy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayCopy$FUNC() { return SafeArrayCopy$FUNC_; }

    static final MethodHandle SafeArrayCopy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayCopy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayCopy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayCopy$MH() { return SafeArrayCopy$MH_; }

    static final FunctionDescriptor SafeArrayPtrOfIndex$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayPtrOfIndex$FUNC() { return SafeArrayPtrOfIndex$FUNC_; }

    static final MethodHandle SafeArrayPtrOfIndex$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayPtrOfIndex",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayPtrOfIndex$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayPtrOfIndex$MH() { return SafeArrayPtrOfIndex$MH_; }

    static final FunctionDescriptor SafeArraySetRecordInfo$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArraySetRecordInfo$FUNC() { return SafeArraySetRecordInfo$FUNC_; }

    static final MethodHandle SafeArraySetRecordInfo$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArraySetRecordInfo",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArraySetRecordInfo$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArraySetRecordInfo$MH() { return SafeArraySetRecordInfo$MH_; }

    static final FunctionDescriptor SafeArrayGetRecordInfo$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayGetRecordInfo$FUNC() { return SafeArrayGetRecordInfo$FUNC_; }

    static final MethodHandle SafeArrayGetRecordInfo$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayGetRecordInfo",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayGetRecordInfo$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayGetRecordInfo$MH() { return SafeArrayGetRecordInfo$MH_; }

    static final FunctionDescriptor SafeArraySetIID$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArraySetIID$FUNC() { return SafeArraySetIID$FUNC_; }

    static final MethodHandle SafeArraySetIID$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArraySetIID",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArraySetIID$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArraySetIID$MH() { return SafeArraySetIID$MH_; }

    static final FunctionDescriptor SafeArrayGetIID$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayGetIID$FUNC() { return SafeArrayGetIID$FUNC_; }

    static final MethodHandle SafeArrayGetIID$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayGetIID",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayGetIID$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayGetIID$MH() { return SafeArrayGetIID$MH_; }

    static final FunctionDescriptor SafeArrayGetVartype$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayGetVartype$FUNC() { return SafeArrayGetVartype$FUNC_; }

    static final MethodHandle SafeArrayGetVartype$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayGetVartype",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SafeArrayGetVartype$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayGetVartype$MH() { return SafeArrayGetVartype$MH_; }

    static final FunctionDescriptor SafeArrayCreateVector$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_SHORT,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayCreateVector$FUNC() { return SafeArrayCreateVector$FUNC_; }

    static final MethodHandle SafeArrayCreateVector$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayCreateVector",
        "(SII)Ljdk/incubator/foreign/MemoryAddress;",
        SafeArrayCreateVector$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayCreateVector$MH() { return SafeArrayCreateVector$MH_; }

    static final FunctionDescriptor SafeArrayCreateVectorEx$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_SHORT,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SafeArrayCreateVectorEx$FUNC() { return SafeArrayCreateVectorEx$FUNC_; }

    static final MethodHandle SafeArrayCreateVectorEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SafeArrayCreateVectorEx",
        "(SIILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        SafeArrayCreateVectorEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SafeArrayCreateVectorEx$MH() { return SafeArrayCreateVectorEx$MH_; }

    static final FunctionDescriptor VariantInit$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VariantInit$FUNC() { return VariantInit$FUNC_; }

    static final MethodHandle VariantInit$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VariantInit",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        VariantInit$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VariantInit$MH() { return VariantInit$MH_; }

    static final FunctionDescriptor VariantClear$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VariantClear$FUNC() { return VariantClear$FUNC_; }

    static final MethodHandle VariantClear$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VariantClear",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        VariantClear$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VariantClear$MH() { return VariantClear$MH_; }

    static final FunctionDescriptor VariantCopy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VariantCopy$FUNC() { return VariantCopy$FUNC_; }

    static final MethodHandle VariantCopy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VariantCopy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        VariantCopy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VariantCopy$MH() { return VariantCopy$MH_; }

    static final FunctionDescriptor VariantCopyInd$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VariantCopyInd$FUNC() { return VariantCopyInd$FUNC_; }

    static final MethodHandle VariantCopyInd$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VariantCopyInd",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        VariantCopyInd$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VariantCopyInd$MH() { return VariantCopyInd$MH_; }

    static final FunctionDescriptor VariantChangeType$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_SHORT,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor VariantChangeType$FUNC() { return VariantChangeType$FUNC_; }

    static final MethodHandle VariantChangeType$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VariantChangeType",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;SS)I",
        VariantChangeType$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VariantChangeType$MH() { return VariantChangeType$MH_; }

    static final FunctionDescriptor VariantChangeTypeEx$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_SHORT,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor VariantChangeTypeEx$FUNC() { return VariantChangeTypeEx$FUNC_; }

    static final MethodHandle VariantChangeTypeEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VariantChangeTypeEx",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ISS)I",
        VariantChangeTypeEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VariantChangeTypeEx$MH() { return VariantChangeTypeEx$MH_; }

    static final FunctionDescriptor VectorFromBstr$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VectorFromBstr$FUNC() { return VectorFromBstr$FUNC_; }

    static final MethodHandle VectorFromBstr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VectorFromBstr",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        VectorFromBstr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VectorFromBstr$MH() { return VectorFromBstr$MH_; }

    static final FunctionDescriptor BstrFromVector$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor BstrFromVector$FUNC() { return BstrFromVector$FUNC_; }

    static final MethodHandle BstrFromVector$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "BstrFromVector",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        BstrFromVector$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle BstrFromVector$MH() { return BstrFromVector$MH_; }

    static final FunctionDescriptor VarUI1FromI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI1FromI2$FUNC() { return VarUI1FromI2$FUNC_; }

    static final MethodHandle VarUI1FromI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI1FromI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI1FromI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI1FromI2$MH() { return VarUI1FromI2$MH_; }

    static final FunctionDescriptor VarUI1FromI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI1FromI4$FUNC() { return VarUI1FromI4$FUNC_; }

    static final MethodHandle VarUI1FromI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI1FromI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarUI1FromI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI1FromI4$MH() { return VarUI1FromI4$MH_; }

    static final FunctionDescriptor VarUI1FromI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI1FromI8$FUNC() { return VarUI1FromI8$FUNC_; }

    static final MethodHandle VarUI1FromI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI1FromI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI1FromI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI1FromI8$MH() { return VarUI1FromI8$MH_; }

    static final FunctionDescriptor VarUI1FromR4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_FLOAT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI1FromR4$FUNC() { return VarUI1FromR4$FUNC_; }

    static final MethodHandle VarUI1FromR4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI1FromR4",
        "(FLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI1FromR4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI1FromR4$MH() { return VarUI1FromR4$MH_; }

    static final FunctionDescriptor VarUI1FromR8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI1FromR8$FUNC() { return VarUI1FromR8$FUNC_; }

    static final MethodHandle VarUI1FromR8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI1FromR8",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI1FromR8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI1FromR8$MH() { return VarUI1FromR8$MH_; }

    static final FunctionDescriptor VarUI1FromCy$FUNC_ = FunctionDescriptor.of(C_LONG,
        MemoryLayout.ofUnion(
            C_LONG.withName("Lo"),
            C_LONG.withName("Hi"),
            C_LONGLONG.withName("int64")
        ).withName("tagCY"),
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI1FromCy$FUNC() { return VarUI1FromCy$FUNC_; }

    static final MethodHandle VarUI1FromCy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI1FromCy",
        "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarUI1FromCy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI1FromCy$MH() { return VarUI1FromCy$MH_; }

    static final FunctionDescriptor VarUI1FromDate$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI1FromDate$FUNC() { return VarUI1FromDate$FUNC_; }

    static final MethodHandle VarUI1FromDate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI1FromDate",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI1FromDate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI1FromDate$MH() { return VarUI1FromDate$MH_; }

    static final FunctionDescriptor VarUI1FromStr$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI1FromStr$FUNC() { return VarUI1FromStr$FUNC_; }

    static final MethodHandle VarUI1FromStr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI1FromStr",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        VarUI1FromStr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI1FromStr$MH() { return VarUI1FromStr$MH_; }

    static final FunctionDescriptor VarUI1FromDisp$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI1FromDisp$FUNC() { return VarUI1FromDisp$FUNC_; }

    static final MethodHandle VarUI1FromDisp$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI1FromDisp",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        VarUI1FromDisp$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI1FromDisp$MH() { return VarUI1FromDisp$MH_; }

    static final FunctionDescriptor VarUI1FromBool$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI1FromBool$FUNC() { return VarUI1FromBool$FUNC_; }

    static final MethodHandle VarUI1FromBool$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI1FromBool",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI1FromBool$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI1FromBool$MH() { return VarUI1FromBool$MH_; }

    static final FunctionDescriptor VarUI1FromI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI1FromI1$FUNC() { return VarUI1FromI1$FUNC_; }

    static final MethodHandle VarUI1FromI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI1FromI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI1FromI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI1FromI1$MH() { return VarUI1FromI1$MH_; }

    static final FunctionDescriptor VarUI1FromUI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI1FromUI2$FUNC() { return VarUI1FromUI2$FUNC_; }

    static final MethodHandle VarUI1FromUI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI1FromUI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI1FromUI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI1FromUI2$MH() { return VarUI1FromUI2$MH_; }

    static final FunctionDescriptor VarUI1FromUI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI1FromUI4$FUNC() { return VarUI1FromUI4$FUNC_; }

    static final MethodHandle VarUI1FromUI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI1FromUI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarUI1FromUI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI1FromUI4$MH() { return VarUI1FromUI4$MH_; }

    static final FunctionDescriptor VarUI1FromUI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI1FromUI8$FUNC() { return VarUI1FromUI8$FUNC_; }

    static final MethodHandle VarUI1FromUI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI1FromUI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI1FromUI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI1FromUI8$MH() { return VarUI1FromUI8$MH_; }

    static final FunctionDescriptor VarUI1FromDec$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI1FromDec$FUNC() { return VarUI1FromDec$FUNC_; }

    static final MethodHandle VarUI1FromDec$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI1FromDec",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarUI1FromDec$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI1FromDec$MH() { return VarUI1FromDec$MH_; }

    static final FunctionDescriptor VarI2FromUI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI2FromUI1$FUNC() { return VarI2FromUI1$FUNC_; }

    static final MethodHandle VarI2FromUI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI2FromUI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarI2FromUI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI2FromUI1$MH() { return VarI2FromUI1$MH_; }

    static final FunctionDescriptor VarI2FromI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI2FromI4$FUNC() { return VarI2FromI4$FUNC_; }

    static final MethodHandle VarI2FromI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI2FromI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarI2FromI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI2FromI4$MH() { return VarI2FromI4$MH_; }

    static final FunctionDescriptor VarI2FromI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI2FromI8$FUNC() { return VarI2FromI8$FUNC_; }

    static final MethodHandle VarI2FromI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI2FromI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarI2FromI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI2FromI8$MH() { return VarI2FromI8$MH_; }

    static final FunctionDescriptor VarI2FromR4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_FLOAT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI2FromR4$FUNC() { return VarI2FromR4$FUNC_; }

    static final MethodHandle VarI2FromR4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI2FromR4",
        "(FLjdk/incubator/foreign/MemoryAddress;)I",
        VarI2FromR4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI2FromR4$MH() { return VarI2FromR4$MH_; }

    static final FunctionDescriptor VarI2FromR8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI2FromR8$FUNC() { return VarI2FromR8$FUNC_; }

    static final MethodHandle VarI2FromR8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI2FromR8",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarI2FromR8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI2FromR8$MH() { return VarI2FromR8$MH_; }

    static final FunctionDescriptor VarI2FromCy$FUNC_ = FunctionDescriptor.of(C_LONG,
        MemoryLayout.ofUnion(
            C_LONG.withName("Lo"),
            C_LONG.withName("Hi"),
            C_LONGLONG.withName("int64")
        ).withName("tagCY"),
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI2FromCy$FUNC() { return VarI2FromCy$FUNC_; }

    static final MethodHandle VarI2FromCy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI2FromCy",
        "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarI2FromCy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI2FromCy$MH() { return VarI2FromCy$MH_; }

    static final FunctionDescriptor VarI2FromDate$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI2FromDate$FUNC() { return VarI2FromDate$FUNC_; }

    static final MethodHandle VarI2FromDate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI2FromDate",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarI2FromDate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI2FromDate$MH() { return VarI2FromDate$MH_; }

    static final FunctionDescriptor VarI2FromStr$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI2FromStr$FUNC() { return VarI2FromStr$FUNC_; }

    static final MethodHandle VarI2FromStr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI2FromStr",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        VarI2FromStr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI2FromStr$MH() { return VarI2FromStr$MH_; }

    static final FunctionDescriptor VarI2FromDisp$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI2FromDisp$FUNC() { return VarI2FromDisp$FUNC_; }

    static final MethodHandle VarI2FromDisp$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI2FromDisp",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        VarI2FromDisp$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI2FromDisp$MH() { return VarI2FromDisp$MH_; }

    static final FunctionDescriptor VarI2FromBool$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI2FromBool$FUNC() { return VarI2FromBool$FUNC_; }

    static final MethodHandle VarI2FromBool$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI2FromBool",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarI2FromBool$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI2FromBool$MH() { return VarI2FromBool$MH_; }

    static final FunctionDescriptor VarI2FromI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI2FromI1$FUNC() { return VarI2FromI1$FUNC_; }

    static final MethodHandle VarI2FromI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI2FromI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarI2FromI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI2FromI1$MH() { return VarI2FromI1$MH_; }

    static final FunctionDescriptor VarI2FromUI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI2FromUI2$FUNC() { return VarI2FromUI2$FUNC_; }

    static final MethodHandle VarI2FromUI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI2FromUI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarI2FromUI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI2FromUI2$MH() { return VarI2FromUI2$MH_; }

    static final FunctionDescriptor VarI2FromUI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI2FromUI4$FUNC() { return VarI2FromUI4$FUNC_; }

    static final MethodHandle VarI2FromUI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI2FromUI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarI2FromUI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI2FromUI4$MH() { return VarI2FromUI4$MH_; }

    static final FunctionDescriptor VarI2FromUI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI2FromUI8$FUNC() { return VarI2FromUI8$FUNC_; }

    static final MethodHandle VarI2FromUI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI2FromUI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarI2FromUI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI2FromUI8$MH() { return VarI2FromUI8$MH_; }

    static final FunctionDescriptor VarI2FromDec$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI2FromDec$FUNC() { return VarI2FromDec$FUNC_; }

    static final MethodHandle VarI2FromDec$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI2FromDec",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarI2FromDec$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI2FromDec$MH() { return VarI2FromDec$MH_; }

    static final FunctionDescriptor VarI4FromUI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI4FromUI1$FUNC() { return VarI4FromUI1$FUNC_; }

    static final MethodHandle VarI4FromUI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI4FromUI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarI4FromUI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI4FromUI1$MH() { return VarI4FromUI1$MH_; }

    static final FunctionDescriptor VarI4FromI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI4FromI2$FUNC() { return VarI4FromI2$FUNC_; }

    static final MethodHandle VarI4FromI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI4FromI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarI4FromI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI4FromI2$MH() { return VarI4FromI2$MH_; }

    static final FunctionDescriptor VarI4FromI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI4FromI8$FUNC() { return VarI4FromI8$FUNC_; }

    static final MethodHandle VarI4FromI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI4FromI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarI4FromI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI4FromI8$MH() { return VarI4FromI8$MH_; }

    static final FunctionDescriptor VarI4FromR4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_FLOAT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI4FromR4$FUNC() { return VarI4FromR4$FUNC_; }

    static final MethodHandle VarI4FromR4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI4FromR4",
        "(FLjdk/incubator/foreign/MemoryAddress;)I",
        VarI4FromR4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI4FromR4$MH() { return VarI4FromR4$MH_; }

    static final FunctionDescriptor VarI4FromR8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI4FromR8$FUNC() { return VarI4FromR8$FUNC_; }

    static final MethodHandle VarI4FromR8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI4FromR8",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarI4FromR8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI4FromR8$MH() { return VarI4FromR8$MH_; }

    static final FunctionDescriptor VarI4FromCy$FUNC_ = FunctionDescriptor.of(C_LONG,
        MemoryLayout.ofUnion(
            C_LONG.withName("Lo"),
            C_LONG.withName("Hi"),
            C_LONGLONG.withName("int64")
        ).withName("tagCY"),
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI4FromCy$FUNC() { return VarI4FromCy$FUNC_; }

    static final MethodHandle VarI4FromCy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI4FromCy",
        "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarI4FromCy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI4FromCy$MH() { return VarI4FromCy$MH_; }

    static final FunctionDescriptor VarI4FromDate$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI4FromDate$FUNC() { return VarI4FromDate$FUNC_; }

    static final MethodHandle VarI4FromDate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI4FromDate",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarI4FromDate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI4FromDate$MH() { return VarI4FromDate$MH_; }

    static final FunctionDescriptor VarI4FromStr$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI4FromStr$FUNC() { return VarI4FromStr$FUNC_; }

    static final MethodHandle VarI4FromStr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI4FromStr",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        VarI4FromStr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI4FromStr$MH() { return VarI4FromStr$MH_; }

    static final FunctionDescriptor VarI4FromDisp$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI4FromDisp$FUNC() { return VarI4FromDisp$FUNC_; }

    static final MethodHandle VarI4FromDisp$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI4FromDisp",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        VarI4FromDisp$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI4FromDisp$MH() { return VarI4FromDisp$MH_; }

    static final FunctionDescriptor VarI4FromBool$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI4FromBool$FUNC() { return VarI4FromBool$FUNC_; }

    static final MethodHandle VarI4FromBool$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI4FromBool",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarI4FromBool$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI4FromBool$MH() { return VarI4FromBool$MH_; }

    static final FunctionDescriptor VarI4FromI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI4FromI1$FUNC() { return VarI4FromI1$FUNC_; }

    static final MethodHandle VarI4FromI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI4FromI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarI4FromI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI4FromI1$MH() { return VarI4FromI1$MH_; }

    static final FunctionDescriptor VarI4FromUI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI4FromUI2$FUNC() { return VarI4FromUI2$FUNC_; }

    static final MethodHandle VarI4FromUI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI4FromUI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarI4FromUI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI4FromUI2$MH() { return VarI4FromUI2$MH_; }

    static final FunctionDescriptor VarI4FromUI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI4FromUI4$FUNC() { return VarI4FromUI4$FUNC_; }

    static final MethodHandle VarI4FromUI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI4FromUI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarI4FromUI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI4FromUI4$MH() { return VarI4FromUI4$MH_; }

    static final FunctionDescriptor VarI4FromUI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI4FromUI8$FUNC() { return VarI4FromUI8$FUNC_; }

    static final MethodHandle VarI4FromUI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI4FromUI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarI4FromUI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI4FromUI8$MH() { return VarI4FromUI8$MH_; }

    static final FunctionDescriptor VarI4FromDec$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI4FromDec$FUNC() { return VarI4FromDec$FUNC_; }

    static final MethodHandle VarI4FromDec$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI4FromDec",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarI4FromDec$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI4FromDec$MH() { return VarI4FromDec$MH_; }

    static final FunctionDescriptor VarI8FromUI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI8FromUI1$FUNC() { return VarI8FromUI1$FUNC_; }

    static final MethodHandle VarI8FromUI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI8FromUI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarI8FromUI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI8FromUI1$MH() { return VarI8FromUI1$MH_; }

    static final FunctionDescriptor VarI8FromI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI8FromI2$FUNC() { return VarI8FromI2$FUNC_; }

    static final MethodHandle VarI8FromI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI8FromI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarI8FromI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI8FromI2$MH() { return VarI8FromI2$MH_; }

    static final FunctionDescriptor VarI8FromR4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_FLOAT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI8FromR4$FUNC() { return VarI8FromR4$FUNC_; }

    static final MethodHandle VarI8FromR4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI8FromR4",
        "(FLjdk/incubator/foreign/MemoryAddress;)I",
        VarI8FromR4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI8FromR4$MH() { return VarI8FromR4$MH_; }

    static final FunctionDescriptor VarI8FromR8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI8FromR8$FUNC() { return VarI8FromR8$FUNC_; }

    static final MethodHandle VarI8FromR8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI8FromR8",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarI8FromR8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI8FromR8$MH() { return VarI8FromR8$MH_; }

    static final FunctionDescriptor VarI8FromCy$FUNC_ = FunctionDescriptor.of(C_LONG,
        MemoryLayout.ofUnion(
            C_LONG.withName("Lo"),
            C_LONG.withName("Hi"),
            C_LONGLONG.withName("int64")
        ).withName("tagCY"),
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI8FromCy$FUNC() { return VarI8FromCy$FUNC_; }

    static final MethodHandle VarI8FromCy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI8FromCy",
        "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarI8FromCy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI8FromCy$MH() { return VarI8FromCy$MH_; }

    static final FunctionDescriptor VarI8FromDate$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI8FromDate$FUNC() { return VarI8FromDate$FUNC_; }

    static final MethodHandle VarI8FromDate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI8FromDate",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarI8FromDate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI8FromDate$MH() { return VarI8FromDate$MH_; }

    static final FunctionDescriptor VarI8FromStr$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI8FromStr$FUNC() { return VarI8FromStr$FUNC_; }

    static final MethodHandle VarI8FromStr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI8FromStr",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        VarI8FromStr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI8FromStr$MH() { return VarI8FromStr$MH_; }

    static final FunctionDescriptor VarI8FromDisp$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI8FromDisp$FUNC() { return VarI8FromDisp$FUNC_; }

    static final MethodHandle VarI8FromDisp$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI8FromDisp",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        VarI8FromDisp$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI8FromDisp$MH() { return VarI8FromDisp$MH_; }

    static final FunctionDescriptor VarI8FromBool$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI8FromBool$FUNC() { return VarI8FromBool$FUNC_; }

    static final MethodHandle VarI8FromBool$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI8FromBool",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarI8FromBool$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI8FromBool$MH() { return VarI8FromBool$MH_; }

    static final FunctionDescriptor VarI8FromI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI8FromI1$FUNC() { return VarI8FromI1$FUNC_; }

    static final MethodHandle VarI8FromI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI8FromI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarI8FromI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI8FromI1$MH() { return VarI8FromI1$MH_; }

    static final FunctionDescriptor VarI8FromUI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI8FromUI2$FUNC() { return VarI8FromUI2$FUNC_; }

    static final MethodHandle VarI8FromUI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI8FromUI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarI8FromUI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI8FromUI2$MH() { return VarI8FromUI2$MH_; }

    static final FunctionDescriptor VarI8FromUI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI8FromUI4$FUNC() { return VarI8FromUI4$FUNC_; }

    static final MethodHandle VarI8FromUI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI8FromUI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarI8FromUI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI8FromUI4$MH() { return VarI8FromUI4$MH_; }

    static final FunctionDescriptor VarI8FromUI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI8FromUI8$FUNC() { return VarI8FromUI8$FUNC_; }

    static final MethodHandle VarI8FromUI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI8FromUI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarI8FromUI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI8FromUI8$MH() { return VarI8FromUI8$MH_; }

    static final FunctionDescriptor VarI8FromDec$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI8FromDec$FUNC() { return VarI8FromDec$FUNC_; }

    static final MethodHandle VarI8FromDec$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI8FromDec",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarI8FromDec$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI8FromDec$MH() { return VarI8FromDec$MH_; }

    static final FunctionDescriptor VarR4FromUI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR4FromUI1$FUNC() { return VarR4FromUI1$FUNC_; }

    static final MethodHandle VarR4FromUI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR4FromUI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarR4FromUI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR4FromUI1$MH() { return VarR4FromUI1$MH_; }

    static final FunctionDescriptor VarR4FromI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR4FromI2$FUNC() { return VarR4FromI2$FUNC_; }

    static final MethodHandle VarR4FromI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR4FromI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarR4FromI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR4FromI2$MH() { return VarR4FromI2$MH_; }

    static final FunctionDescriptor VarR4FromI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR4FromI4$FUNC() { return VarR4FromI4$FUNC_; }

    static final MethodHandle VarR4FromI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR4FromI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarR4FromI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR4FromI4$MH() { return VarR4FromI4$MH_; }

    static final FunctionDescriptor VarR4FromI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR4FromI8$FUNC() { return VarR4FromI8$FUNC_; }

    static final MethodHandle VarR4FromI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR4FromI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarR4FromI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR4FromI8$MH() { return VarR4FromI8$MH_; }

    static final FunctionDescriptor VarR4FromR8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR4FromR8$FUNC() { return VarR4FromR8$FUNC_; }

    static final MethodHandle VarR4FromR8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR4FromR8",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarR4FromR8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR4FromR8$MH() { return VarR4FromR8$MH_; }

    static final FunctionDescriptor VarR4FromCy$FUNC_ = FunctionDescriptor.of(C_LONG,
        MemoryLayout.ofUnion(
            C_LONG.withName("Lo"),
            C_LONG.withName("Hi"),
            C_LONGLONG.withName("int64")
        ).withName("tagCY"),
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR4FromCy$FUNC() { return VarR4FromCy$FUNC_; }

    static final MethodHandle VarR4FromCy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR4FromCy",
        "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarR4FromCy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR4FromCy$MH() { return VarR4FromCy$MH_; }

    static final FunctionDescriptor VarR4FromDate$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR4FromDate$FUNC() { return VarR4FromDate$FUNC_; }

    static final MethodHandle VarR4FromDate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR4FromDate",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarR4FromDate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR4FromDate$MH() { return VarR4FromDate$MH_; }

    static final FunctionDescriptor VarR4FromStr$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR4FromStr$FUNC() { return VarR4FromStr$FUNC_; }

    static final MethodHandle VarR4FromStr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR4FromStr",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        VarR4FromStr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR4FromStr$MH() { return VarR4FromStr$MH_; }

    static final FunctionDescriptor VarR4FromDisp$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR4FromDisp$FUNC() { return VarR4FromDisp$FUNC_; }

    static final MethodHandle VarR4FromDisp$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR4FromDisp",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        VarR4FromDisp$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR4FromDisp$MH() { return VarR4FromDisp$MH_; }

    static final FunctionDescriptor VarR4FromBool$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR4FromBool$FUNC() { return VarR4FromBool$FUNC_; }

    static final MethodHandle VarR4FromBool$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR4FromBool",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarR4FromBool$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR4FromBool$MH() { return VarR4FromBool$MH_; }

    static final FunctionDescriptor VarR4FromI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR4FromI1$FUNC() { return VarR4FromI1$FUNC_; }

    static final MethodHandle VarR4FromI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR4FromI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarR4FromI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR4FromI1$MH() { return VarR4FromI1$MH_; }

    static final FunctionDescriptor VarR4FromUI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR4FromUI2$FUNC() { return VarR4FromUI2$FUNC_; }

    static final MethodHandle VarR4FromUI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR4FromUI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarR4FromUI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR4FromUI2$MH() { return VarR4FromUI2$MH_; }

    static final FunctionDescriptor VarR4FromUI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR4FromUI4$FUNC() { return VarR4FromUI4$FUNC_; }

    static final MethodHandle VarR4FromUI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR4FromUI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarR4FromUI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR4FromUI4$MH() { return VarR4FromUI4$MH_; }

    static final FunctionDescriptor VarR4FromUI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR4FromUI8$FUNC() { return VarR4FromUI8$FUNC_; }

    static final MethodHandle VarR4FromUI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR4FromUI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarR4FromUI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR4FromUI8$MH() { return VarR4FromUI8$MH_; }

    static final FunctionDescriptor VarR4FromDec$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR4FromDec$FUNC() { return VarR4FromDec$FUNC_; }

    static final MethodHandle VarR4FromDec$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR4FromDec",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarR4FromDec$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR4FromDec$MH() { return VarR4FromDec$MH_; }

    static final FunctionDescriptor VarR8FromUI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR8FromUI1$FUNC() { return VarR8FromUI1$FUNC_; }

    static final MethodHandle VarR8FromUI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR8FromUI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarR8FromUI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR8FromUI1$MH() { return VarR8FromUI1$MH_; }

    static final FunctionDescriptor VarR8FromI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR8FromI2$FUNC() { return VarR8FromI2$FUNC_; }

    static final MethodHandle VarR8FromI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR8FromI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarR8FromI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR8FromI2$MH() { return VarR8FromI2$MH_; }

    static final FunctionDescriptor VarR8FromI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR8FromI4$FUNC() { return VarR8FromI4$FUNC_; }

    static final MethodHandle VarR8FromI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR8FromI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarR8FromI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR8FromI4$MH() { return VarR8FromI4$MH_; }

    static final FunctionDescriptor VarR8FromI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR8FromI8$FUNC() { return VarR8FromI8$FUNC_; }

    static final MethodHandle VarR8FromI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR8FromI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarR8FromI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR8FromI8$MH() { return VarR8FromI8$MH_; }

    static final FunctionDescriptor VarR8FromR4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_FLOAT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR8FromR4$FUNC() { return VarR8FromR4$FUNC_; }

    static final MethodHandle VarR8FromR4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR8FromR4",
        "(FLjdk/incubator/foreign/MemoryAddress;)I",
        VarR8FromR4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR8FromR4$MH() { return VarR8FromR4$MH_; }

    static final FunctionDescriptor VarR8FromCy$FUNC_ = FunctionDescriptor.of(C_LONG,
        MemoryLayout.ofUnion(
            C_LONG.withName("Lo"),
            C_LONG.withName("Hi"),
            C_LONGLONG.withName("int64")
        ).withName("tagCY"),
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR8FromCy$FUNC() { return VarR8FromCy$FUNC_; }

    static final MethodHandle VarR8FromCy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR8FromCy",
        "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarR8FromCy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR8FromCy$MH() { return VarR8FromCy$MH_; }

    static final FunctionDescriptor VarR8FromDate$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR8FromDate$FUNC() { return VarR8FromDate$FUNC_; }

    static final MethodHandle VarR8FromDate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR8FromDate",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarR8FromDate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR8FromDate$MH() { return VarR8FromDate$MH_; }

    static final FunctionDescriptor VarR8FromStr$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR8FromStr$FUNC() { return VarR8FromStr$FUNC_; }

    static final MethodHandle VarR8FromStr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR8FromStr",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        VarR8FromStr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR8FromStr$MH() { return VarR8FromStr$MH_; }

    static final FunctionDescriptor VarR8FromDisp$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR8FromDisp$FUNC() { return VarR8FromDisp$FUNC_; }

    static final MethodHandle VarR8FromDisp$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR8FromDisp",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        VarR8FromDisp$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR8FromDisp$MH() { return VarR8FromDisp$MH_; }

    static final FunctionDescriptor VarR8FromBool$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR8FromBool$FUNC() { return VarR8FromBool$FUNC_; }

    static final MethodHandle VarR8FromBool$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR8FromBool",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarR8FromBool$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR8FromBool$MH() { return VarR8FromBool$MH_; }

    static final FunctionDescriptor VarR8FromI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR8FromI1$FUNC() { return VarR8FromI1$FUNC_; }

    static final MethodHandle VarR8FromI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR8FromI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarR8FromI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR8FromI1$MH() { return VarR8FromI1$MH_; }

    static final FunctionDescriptor VarR8FromUI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR8FromUI2$FUNC() { return VarR8FromUI2$FUNC_; }

    static final MethodHandle VarR8FromUI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR8FromUI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarR8FromUI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR8FromUI2$MH() { return VarR8FromUI2$MH_; }

    static final FunctionDescriptor VarR8FromUI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR8FromUI4$FUNC() { return VarR8FromUI4$FUNC_; }

    static final MethodHandle VarR8FromUI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR8FromUI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarR8FromUI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR8FromUI4$MH() { return VarR8FromUI4$MH_; }

    static final FunctionDescriptor VarR8FromUI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR8FromUI8$FUNC() { return VarR8FromUI8$FUNC_; }

    static final MethodHandle VarR8FromUI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR8FromUI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarR8FromUI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR8FromUI8$MH() { return VarR8FromUI8$MH_; }

    static final FunctionDescriptor VarR8FromDec$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarR8FromDec$FUNC() { return VarR8FromDec$FUNC_; }

    static final MethodHandle VarR8FromDec$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarR8FromDec",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarR8FromDec$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarR8FromDec$MH() { return VarR8FromDec$MH_; }

    static final FunctionDescriptor VarDateFromUI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDateFromUI1$FUNC() { return VarDateFromUI1$FUNC_; }

    static final MethodHandle VarDateFromUI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDateFromUI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarDateFromUI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDateFromUI1$MH() { return VarDateFromUI1$MH_; }

    static final FunctionDescriptor VarDateFromI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDateFromI2$FUNC() { return VarDateFromI2$FUNC_; }

    static final MethodHandle VarDateFromI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDateFromI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarDateFromI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDateFromI2$MH() { return VarDateFromI2$MH_; }

    static final FunctionDescriptor VarDateFromI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDateFromI4$FUNC() { return VarDateFromI4$FUNC_; }

    static final MethodHandle VarDateFromI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDateFromI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarDateFromI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDateFromI4$MH() { return VarDateFromI4$MH_; }

    static final FunctionDescriptor VarDateFromI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDateFromI8$FUNC() { return VarDateFromI8$FUNC_; }

    static final MethodHandle VarDateFromI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDateFromI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarDateFromI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDateFromI8$MH() { return VarDateFromI8$MH_; }

    static final FunctionDescriptor VarDateFromR4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_FLOAT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDateFromR4$FUNC() { return VarDateFromR4$FUNC_; }

    static final MethodHandle VarDateFromR4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDateFromR4",
        "(FLjdk/incubator/foreign/MemoryAddress;)I",
        VarDateFromR4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDateFromR4$MH() { return VarDateFromR4$MH_; }

    static final FunctionDescriptor VarDateFromR8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDateFromR8$FUNC() { return VarDateFromR8$FUNC_; }

    static final MethodHandle VarDateFromR8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDateFromR8",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarDateFromR8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDateFromR8$MH() { return VarDateFromR8$MH_; }

    static final FunctionDescriptor VarDateFromCy$FUNC_ = FunctionDescriptor.of(C_LONG,
        MemoryLayout.ofUnion(
            C_LONG.withName("Lo"),
            C_LONG.withName("Hi"),
            C_LONGLONG.withName("int64")
        ).withName("tagCY"),
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDateFromCy$FUNC() { return VarDateFromCy$FUNC_; }

    static final MethodHandle VarDateFromCy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDateFromCy",
        "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarDateFromCy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDateFromCy$MH() { return VarDateFromCy$MH_; }

    static final FunctionDescriptor VarDateFromStr$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDateFromStr$FUNC() { return VarDateFromStr$FUNC_; }

    static final MethodHandle VarDateFromStr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDateFromStr",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        VarDateFromStr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDateFromStr$MH() { return VarDateFromStr$MH_; }

    static final FunctionDescriptor VarDateFromDisp$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDateFromDisp$FUNC() { return VarDateFromDisp$FUNC_; }

    static final MethodHandle VarDateFromDisp$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDateFromDisp",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        VarDateFromDisp$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDateFromDisp$MH() { return VarDateFromDisp$MH_; }

    static final FunctionDescriptor VarDateFromBool$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDateFromBool$FUNC() { return VarDateFromBool$FUNC_; }

    static final MethodHandle VarDateFromBool$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDateFromBool",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarDateFromBool$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDateFromBool$MH() { return VarDateFromBool$MH_; }

    static final FunctionDescriptor VarDateFromI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDateFromI1$FUNC() { return VarDateFromI1$FUNC_; }

    static final MethodHandle VarDateFromI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDateFromI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarDateFromI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDateFromI1$MH() { return VarDateFromI1$MH_; }

    static final FunctionDescriptor VarDateFromUI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDateFromUI2$FUNC() { return VarDateFromUI2$FUNC_; }

    static final MethodHandle VarDateFromUI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDateFromUI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarDateFromUI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDateFromUI2$MH() { return VarDateFromUI2$MH_; }

    static final FunctionDescriptor VarDateFromUI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDateFromUI4$FUNC() { return VarDateFromUI4$FUNC_; }

    static final MethodHandle VarDateFromUI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDateFromUI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarDateFromUI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDateFromUI4$MH() { return VarDateFromUI4$MH_; }

    static final FunctionDescriptor VarDateFromUI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDateFromUI8$FUNC() { return VarDateFromUI8$FUNC_; }

    static final MethodHandle VarDateFromUI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDateFromUI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarDateFromUI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDateFromUI8$MH() { return VarDateFromUI8$MH_; }

    static final FunctionDescriptor VarDateFromDec$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDateFromDec$FUNC() { return VarDateFromDec$FUNC_; }

    static final MethodHandle VarDateFromDec$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDateFromDec",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarDateFromDec$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDateFromDec$MH() { return VarDateFromDec$MH_; }

    static final FunctionDescriptor VarCyFromUI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarCyFromUI1$FUNC() { return VarCyFromUI1$FUNC_; }

    static final MethodHandle VarCyFromUI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarCyFromUI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarCyFromUI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarCyFromUI1$MH() { return VarCyFromUI1$MH_; }

    static final FunctionDescriptor VarCyFromI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarCyFromI2$FUNC() { return VarCyFromI2$FUNC_; }

    static final MethodHandle VarCyFromI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarCyFromI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarCyFromI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarCyFromI2$MH() { return VarCyFromI2$MH_; }

    static final FunctionDescriptor VarCyFromI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarCyFromI4$FUNC() { return VarCyFromI4$FUNC_; }

    static final MethodHandle VarCyFromI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarCyFromI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarCyFromI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarCyFromI4$MH() { return VarCyFromI4$MH_; }

    static final FunctionDescriptor VarCyFromI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarCyFromI8$FUNC() { return VarCyFromI8$FUNC_; }

    static final MethodHandle VarCyFromI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarCyFromI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarCyFromI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarCyFromI8$MH() { return VarCyFromI8$MH_; }

    static final FunctionDescriptor VarCyFromR4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_FLOAT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarCyFromR4$FUNC() { return VarCyFromR4$FUNC_; }

    static final MethodHandle VarCyFromR4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarCyFromR4",
        "(FLjdk/incubator/foreign/MemoryAddress;)I",
        VarCyFromR4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarCyFromR4$MH() { return VarCyFromR4$MH_; }

    static final FunctionDescriptor VarCyFromR8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarCyFromR8$FUNC() { return VarCyFromR8$FUNC_; }

    static final MethodHandle VarCyFromR8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarCyFromR8",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarCyFromR8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarCyFromR8$MH() { return VarCyFromR8$MH_; }

    static final FunctionDescriptor VarCyFromDate$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarCyFromDate$FUNC() { return VarCyFromDate$FUNC_; }

    static final MethodHandle VarCyFromDate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarCyFromDate",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarCyFromDate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarCyFromDate$MH() { return VarCyFromDate$MH_; }

    static final FunctionDescriptor VarCyFromStr$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarCyFromStr$FUNC() { return VarCyFromStr$FUNC_; }

    static final MethodHandle VarCyFromStr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarCyFromStr",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        VarCyFromStr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarCyFromStr$MH() { return VarCyFromStr$MH_; }

    static final FunctionDescriptor VarCyFromDisp$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarCyFromDisp$FUNC() { return VarCyFromDisp$FUNC_; }

    static final MethodHandle VarCyFromDisp$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarCyFromDisp",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        VarCyFromDisp$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarCyFromDisp$MH() { return VarCyFromDisp$MH_; }

    static final FunctionDescriptor VarCyFromBool$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarCyFromBool$FUNC() { return VarCyFromBool$FUNC_; }

    static final MethodHandle VarCyFromBool$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarCyFromBool",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarCyFromBool$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarCyFromBool$MH() { return VarCyFromBool$MH_; }

    static final FunctionDescriptor VarCyFromI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarCyFromI1$FUNC() { return VarCyFromI1$FUNC_; }

    static final MethodHandle VarCyFromI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarCyFromI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarCyFromI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarCyFromI1$MH() { return VarCyFromI1$MH_; }

    static final FunctionDescriptor VarCyFromUI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarCyFromUI2$FUNC() { return VarCyFromUI2$FUNC_; }

    static final MethodHandle VarCyFromUI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarCyFromUI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarCyFromUI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarCyFromUI2$MH() { return VarCyFromUI2$MH_; }

    static final FunctionDescriptor VarCyFromUI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarCyFromUI4$FUNC() { return VarCyFromUI4$FUNC_; }

    static final MethodHandle VarCyFromUI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarCyFromUI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarCyFromUI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarCyFromUI4$MH() { return VarCyFromUI4$MH_; }

    static final FunctionDescriptor VarCyFromUI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarCyFromUI8$FUNC() { return VarCyFromUI8$FUNC_; }

    static final MethodHandle VarCyFromUI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarCyFromUI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarCyFromUI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarCyFromUI8$MH() { return VarCyFromUI8$MH_; }

    static final FunctionDescriptor VarCyFromDec$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarCyFromDec$FUNC() { return VarCyFromDec$FUNC_; }

    static final MethodHandle VarCyFromDec$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarCyFromDec",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarCyFromDec$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarCyFromDec$MH() { return VarCyFromDec$MH_; }

    static final FunctionDescriptor VarBstrFromUI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBstrFromUI1$FUNC() { return VarBstrFromUI1$FUNC_; }

    static final MethodHandle VarBstrFromUI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBstrFromUI1",
        "(BIILjdk/incubator/foreign/MemoryAddress;)I",
        VarBstrFromUI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBstrFromUI1$MH() { return VarBstrFromUI1$MH_; }

    static final FunctionDescriptor VarBstrFromI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBstrFromI2$FUNC() { return VarBstrFromI2$FUNC_; }

    static final MethodHandle VarBstrFromI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBstrFromI2",
        "(SIILjdk/incubator/foreign/MemoryAddress;)I",
        VarBstrFromI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBstrFromI2$MH() { return VarBstrFromI2$MH_; }

    static final FunctionDescriptor VarBstrFromI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBstrFromI4$FUNC() { return VarBstrFromI4$FUNC_; }

    static final MethodHandle VarBstrFromI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBstrFromI4",
        "(IIILjdk/incubator/foreign/MemoryAddress;)I",
        VarBstrFromI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBstrFromI4$MH() { return VarBstrFromI4$MH_; }

    static final FunctionDescriptor VarBstrFromI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBstrFromI8$FUNC() { return VarBstrFromI8$FUNC_; }

    static final MethodHandle VarBstrFromI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBstrFromI8",
        "(JIILjdk/incubator/foreign/MemoryAddress;)I",
        VarBstrFromI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBstrFromI8$MH() { return VarBstrFromI8$MH_; }

    static final FunctionDescriptor VarBstrFromR4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_FLOAT,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBstrFromR4$FUNC() { return VarBstrFromR4$FUNC_; }

    static final MethodHandle VarBstrFromR4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBstrFromR4",
        "(FIILjdk/incubator/foreign/MemoryAddress;)I",
        VarBstrFromR4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBstrFromR4$MH() { return VarBstrFromR4$MH_; }

    static final FunctionDescriptor VarBstrFromR8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBstrFromR8$FUNC() { return VarBstrFromR8$FUNC_; }

    static final MethodHandle VarBstrFromR8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBstrFromR8",
        "(DIILjdk/incubator/foreign/MemoryAddress;)I",
        VarBstrFromR8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBstrFromR8$MH() { return VarBstrFromR8$MH_; }

    static final FunctionDescriptor VarBstrFromCy$FUNC_ = FunctionDescriptor.of(C_LONG,
        MemoryLayout.ofUnion(
            C_LONG.withName("Lo"),
            C_LONG.withName("Hi"),
            C_LONGLONG.withName("int64")
        ).withName("tagCY"),
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBstrFromCy$FUNC() { return VarBstrFromCy$FUNC_; }

    static final MethodHandle VarBstrFromCy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBstrFromCy",
        "(Ljdk/incubator/foreign/MemorySegment;IILjdk/incubator/foreign/MemoryAddress;)I",
        VarBstrFromCy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBstrFromCy$MH() { return VarBstrFromCy$MH_; }

    static final FunctionDescriptor VarBstrFromDate$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBstrFromDate$FUNC() { return VarBstrFromDate$FUNC_; }

    static final MethodHandle VarBstrFromDate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBstrFromDate",
        "(DIILjdk/incubator/foreign/MemoryAddress;)I",
        VarBstrFromDate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBstrFromDate$MH() { return VarBstrFromDate$MH_; }

    static final FunctionDescriptor VarBstrFromDisp$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBstrFromDisp$FUNC() { return VarBstrFromDisp$FUNC_; }

    static final MethodHandle VarBstrFromDisp$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBstrFromDisp",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        VarBstrFromDisp$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBstrFromDisp$MH() { return VarBstrFromDisp$MH_; }

    static final FunctionDescriptor VarBstrFromBool$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBstrFromBool$FUNC() { return VarBstrFromBool$FUNC_; }

    static final MethodHandle VarBstrFromBool$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBstrFromBool",
        "(SIILjdk/incubator/foreign/MemoryAddress;)I",
        VarBstrFromBool$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBstrFromBool$MH() { return VarBstrFromBool$MH_; }

    static final FunctionDescriptor VarBstrFromI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBstrFromI1$FUNC() { return VarBstrFromI1$FUNC_; }

    static final MethodHandle VarBstrFromI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBstrFromI1",
        "(BIILjdk/incubator/foreign/MemoryAddress;)I",
        VarBstrFromI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBstrFromI1$MH() { return VarBstrFromI1$MH_; }

    static final FunctionDescriptor VarBstrFromUI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBstrFromUI2$FUNC() { return VarBstrFromUI2$FUNC_; }

    static final MethodHandle VarBstrFromUI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBstrFromUI2",
        "(SIILjdk/incubator/foreign/MemoryAddress;)I",
        VarBstrFromUI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBstrFromUI2$MH() { return VarBstrFromUI2$MH_; }

    static final FunctionDescriptor VarBstrFromUI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBstrFromUI4$FUNC() { return VarBstrFromUI4$FUNC_; }

    static final MethodHandle VarBstrFromUI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBstrFromUI4",
        "(IIILjdk/incubator/foreign/MemoryAddress;)I",
        VarBstrFromUI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBstrFromUI4$MH() { return VarBstrFromUI4$MH_; }

    static final FunctionDescriptor VarBstrFromUI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBstrFromUI8$FUNC() { return VarBstrFromUI8$FUNC_; }

    static final MethodHandle VarBstrFromUI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBstrFromUI8",
        "(JIILjdk/incubator/foreign/MemoryAddress;)I",
        VarBstrFromUI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBstrFromUI8$MH() { return VarBstrFromUI8$MH_; }

    static final FunctionDescriptor VarBstrFromDec$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBstrFromDec$FUNC() { return VarBstrFromDec$FUNC_; }

    static final MethodHandle VarBstrFromDec$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBstrFromDec",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        VarBstrFromDec$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBstrFromDec$MH() { return VarBstrFromDec$MH_; }

    static final FunctionDescriptor VarBoolFromUI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBoolFromUI1$FUNC() { return VarBoolFromUI1$FUNC_; }

    static final MethodHandle VarBoolFromUI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBoolFromUI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarBoolFromUI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBoolFromUI1$MH() { return VarBoolFromUI1$MH_; }

    static final FunctionDescriptor VarBoolFromI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBoolFromI2$FUNC() { return VarBoolFromI2$FUNC_; }

    static final MethodHandle VarBoolFromI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBoolFromI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarBoolFromI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBoolFromI2$MH() { return VarBoolFromI2$MH_; }

    static final FunctionDescriptor VarBoolFromI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBoolFromI4$FUNC() { return VarBoolFromI4$FUNC_; }

    static final MethodHandle VarBoolFromI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBoolFromI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarBoolFromI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBoolFromI4$MH() { return VarBoolFromI4$MH_; }

    static final FunctionDescriptor VarBoolFromI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBoolFromI8$FUNC() { return VarBoolFromI8$FUNC_; }

    static final MethodHandle VarBoolFromI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBoolFromI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarBoolFromI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBoolFromI8$MH() { return VarBoolFromI8$MH_; }

    static final FunctionDescriptor VarBoolFromR4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_FLOAT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBoolFromR4$FUNC() { return VarBoolFromR4$FUNC_; }

    static final MethodHandle VarBoolFromR4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBoolFromR4",
        "(FLjdk/incubator/foreign/MemoryAddress;)I",
        VarBoolFromR4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBoolFromR4$MH() { return VarBoolFromR4$MH_; }

    static final FunctionDescriptor VarBoolFromR8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBoolFromR8$FUNC() { return VarBoolFromR8$FUNC_; }

    static final MethodHandle VarBoolFromR8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBoolFromR8",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarBoolFromR8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBoolFromR8$MH() { return VarBoolFromR8$MH_; }

    static final FunctionDescriptor VarBoolFromDate$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBoolFromDate$FUNC() { return VarBoolFromDate$FUNC_; }

    static final MethodHandle VarBoolFromDate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBoolFromDate",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarBoolFromDate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBoolFromDate$MH() { return VarBoolFromDate$MH_; }

    static final FunctionDescriptor VarBoolFromCy$FUNC_ = FunctionDescriptor.of(C_LONG,
        MemoryLayout.ofUnion(
            C_LONG.withName("Lo"),
            C_LONG.withName("Hi"),
            C_LONGLONG.withName("int64")
        ).withName("tagCY"),
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBoolFromCy$FUNC() { return VarBoolFromCy$FUNC_; }

    static final MethodHandle VarBoolFromCy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBoolFromCy",
        "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarBoolFromCy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBoolFromCy$MH() { return VarBoolFromCy$MH_; }

    static final FunctionDescriptor VarBoolFromStr$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBoolFromStr$FUNC() { return VarBoolFromStr$FUNC_; }

    static final MethodHandle VarBoolFromStr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBoolFromStr",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        VarBoolFromStr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBoolFromStr$MH() { return VarBoolFromStr$MH_; }

    static final FunctionDescriptor VarBoolFromDisp$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBoolFromDisp$FUNC() { return VarBoolFromDisp$FUNC_; }

    static final MethodHandle VarBoolFromDisp$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBoolFromDisp",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        VarBoolFromDisp$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBoolFromDisp$MH() { return VarBoolFromDisp$MH_; }

    static final FunctionDescriptor VarBoolFromI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBoolFromI1$FUNC() { return VarBoolFromI1$FUNC_; }

    static final MethodHandle VarBoolFromI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBoolFromI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarBoolFromI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBoolFromI1$MH() { return VarBoolFromI1$MH_; }

    static final FunctionDescriptor VarBoolFromUI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBoolFromUI2$FUNC() { return VarBoolFromUI2$FUNC_; }

    static final MethodHandle VarBoolFromUI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBoolFromUI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarBoolFromUI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBoolFromUI2$MH() { return VarBoolFromUI2$MH_; }

    static final FunctionDescriptor VarBoolFromUI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBoolFromUI4$FUNC() { return VarBoolFromUI4$FUNC_; }

    static final MethodHandle VarBoolFromUI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBoolFromUI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarBoolFromUI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBoolFromUI4$MH() { return VarBoolFromUI4$MH_; }

    static final FunctionDescriptor VarBoolFromUI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBoolFromUI8$FUNC() { return VarBoolFromUI8$FUNC_; }

    static final MethodHandle VarBoolFromUI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBoolFromUI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarBoolFromUI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBoolFromUI8$MH() { return VarBoolFromUI8$MH_; }

    static final FunctionDescriptor VarBoolFromDec$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarBoolFromDec$FUNC() { return VarBoolFromDec$FUNC_; }

    static final MethodHandle VarBoolFromDec$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarBoolFromDec",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarBoolFromDec$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarBoolFromDec$MH() { return VarBoolFromDec$MH_; }

    static final FunctionDescriptor VarI1FromUI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI1FromUI1$FUNC() { return VarI1FromUI1$FUNC_; }

    static final MethodHandle VarI1FromUI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI1FromUI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarI1FromUI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI1FromUI1$MH() { return VarI1FromUI1$MH_; }

    static final FunctionDescriptor VarI1FromI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI1FromI2$FUNC() { return VarI1FromI2$FUNC_; }

    static final MethodHandle VarI1FromI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI1FromI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarI1FromI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI1FromI2$MH() { return VarI1FromI2$MH_; }

    static final FunctionDescriptor VarI1FromI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI1FromI4$FUNC() { return VarI1FromI4$FUNC_; }

    static final MethodHandle VarI1FromI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI1FromI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarI1FromI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI1FromI4$MH() { return VarI1FromI4$MH_; }

    static final FunctionDescriptor VarI1FromI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI1FromI8$FUNC() { return VarI1FromI8$FUNC_; }

    static final MethodHandle VarI1FromI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI1FromI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarI1FromI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI1FromI8$MH() { return VarI1FromI8$MH_; }

    static final FunctionDescriptor VarI1FromR4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_FLOAT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI1FromR4$FUNC() { return VarI1FromR4$FUNC_; }

    static final MethodHandle VarI1FromR4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI1FromR4",
        "(FLjdk/incubator/foreign/MemoryAddress;)I",
        VarI1FromR4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI1FromR4$MH() { return VarI1FromR4$MH_; }

    static final FunctionDescriptor VarI1FromR8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI1FromR8$FUNC() { return VarI1FromR8$FUNC_; }

    static final MethodHandle VarI1FromR8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI1FromR8",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarI1FromR8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI1FromR8$MH() { return VarI1FromR8$MH_; }

    static final FunctionDescriptor VarI1FromDate$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI1FromDate$FUNC() { return VarI1FromDate$FUNC_; }

    static final MethodHandle VarI1FromDate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI1FromDate",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarI1FromDate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI1FromDate$MH() { return VarI1FromDate$MH_; }

    static final FunctionDescriptor VarI1FromCy$FUNC_ = FunctionDescriptor.of(C_LONG,
        MemoryLayout.ofUnion(
            C_LONG.withName("Lo"),
            C_LONG.withName("Hi"),
            C_LONGLONG.withName("int64")
        ).withName("tagCY"),
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI1FromCy$FUNC() { return VarI1FromCy$FUNC_; }

    static final MethodHandle VarI1FromCy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI1FromCy",
        "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarI1FromCy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI1FromCy$MH() { return VarI1FromCy$MH_; }

    static final FunctionDescriptor VarI1FromStr$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI1FromStr$FUNC() { return VarI1FromStr$FUNC_; }

    static final MethodHandle VarI1FromStr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI1FromStr",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        VarI1FromStr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI1FromStr$MH() { return VarI1FromStr$MH_; }

    static final FunctionDescriptor VarI1FromDisp$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI1FromDisp$FUNC() { return VarI1FromDisp$FUNC_; }

    static final MethodHandle VarI1FromDisp$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI1FromDisp",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        VarI1FromDisp$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI1FromDisp$MH() { return VarI1FromDisp$MH_; }

    static final FunctionDescriptor VarI1FromBool$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI1FromBool$FUNC() { return VarI1FromBool$FUNC_; }

    static final MethodHandle VarI1FromBool$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI1FromBool",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarI1FromBool$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI1FromBool$MH() { return VarI1FromBool$MH_; }

    static final FunctionDescriptor VarI1FromUI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI1FromUI2$FUNC() { return VarI1FromUI2$FUNC_; }

    static final MethodHandle VarI1FromUI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI1FromUI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarI1FromUI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI1FromUI2$MH() { return VarI1FromUI2$MH_; }

    static final FunctionDescriptor VarI1FromUI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI1FromUI4$FUNC() { return VarI1FromUI4$FUNC_; }

    static final MethodHandle VarI1FromUI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI1FromUI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarI1FromUI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI1FromUI4$MH() { return VarI1FromUI4$MH_; }

    static final FunctionDescriptor VarI1FromUI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI1FromUI8$FUNC() { return VarI1FromUI8$FUNC_; }

    static final MethodHandle VarI1FromUI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI1FromUI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarI1FromUI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI1FromUI8$MH() { return VarI1FromUI8$MH_; }

    static final FunctionDescriptor VarI1FromDec$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarI1FromDec$FUNC() { return VarI1FromDec$FUNC_; }

    static final MethodHandle VarI1FromDec$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarI1FromDec",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarI1FromDec$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarI1FromDec$MH() { return VarI1FromDec$MH_; }

    static final FunctionDescriptor VarUI2FromUI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI2FromUI1$FUNC() { return VarUI2FromUI1$FUNC_; }

    static final MethodHandle VarUI2FromUI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI2FromUI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI2FromUI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI2FromUI1$MH() { return VarUI2FromUI1$MH_; }

    static final FunctionDescriptor VarUI2FromI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI2FromI2$FUNC() { return VarUI2FromI2$FUNC_; }

    static final MethodHandle VarUI2FromI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI2FromI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI2FromI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI2FromI2$MH() { return VarUI2FromI2$MH_; }

    static final FunctionDescriptor VarUI2FromI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI2FromI4$FUNC() { return VarUI2FromI4$FUNC_; }

    static final MethodHandle VarUI2FromI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI2FromI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarUI2FromI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI2FromI4$MH() { return VarUI2FromI4$MH_; }

    static final FunctionDescriptor VarUI2FromI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI2FromI8$FUNC() { return VarUI2FromI8$FUNC_; }

    static final MethodHandle VarUI2FromI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI2FromI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI2FromI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI2FromI8$MH() { return VarUI2FromI8$MH_; }

    static final FunctionDescriptor VarUI2FromR4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_FLOAT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI2FromR4$FUNC() { return VarUI2FromR4$FUNC_; }

    static final MethodHandle VarUI2FromR4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI2FromR4",
        "(FLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI2FromR4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI2FromR4$MH() { return VarUI2FromR4$MH_; }

    static final FunctionDescriptor VarUI2FromR8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI2FromR8$FUNC() { return VarUI2FromR8$FUNC_; }

    static final MethodHandle VarUI2FromR8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI2FromR8",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI2FromR8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI2FromR8$MH() { return VarUI2FromR8$MH_; }

    static final FunctionDescriptor VarUI2FromDate$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI2FromDate$FUNC() { return VarUI2FromDate$FUNC_; }

    static final MethodHandle VarUI2FromDate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI2FromDate",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI2FromDate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI2FromDate$MH() { return VarUI2FromDate$MH_; }

    static final FunctionDescriptor VarUI2FromCy$FUNC_ = FunctionDescriptor.of(C_LONG,
        MemoryLayout.ofUnion(
            C_LONG.withName("Lo"),
            C_LONG.withName("Hi"),
            C_LONGLONG.withName("int64")
        ).withName("tagCY"),
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI2FromCy$FUNC() { return VarUI2FromCy$FUNC_; }

    static final MethodHandle VarUI2FromCy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI2FromCy",
        "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarUI2FromCy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI2FromCy$MH() { return VarUI2FromCy$MH_; }

    static final FunctionDescriptor VarUI2FromStr$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI2FromStr$FUNC() { return VarUI2FromStr$FUNC_; }

    static final MethodHandle VarUI2FromStr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI2FromStr",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        VarUI2FromStr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI2FromStr$MH() { return VarUI2FromStr$MH_; }

    static final FunctionDescriptor VarUI2FromDisp$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI2FromDisp$FUNC() { return VarUI2FromDisp$FUNC_; }

    static final MethodHandle VarUI2FromDisp$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI2FromDisp",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        VarUI2FromDisp$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI2FromDisp$MH() { return VarUI2FromDisp$MH_; }

    static final FunctionDescriptor VarUI2FromBool$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI2FromBool$FUNC() { return VarUI2FromBool$FUNC_; }

    static final MethodHandle VarUI2FromBool$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI2FromBool",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI2FromBool$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI2FromBool$MH() { return VarUI2FromBool$MH_; }

    static final FunctionDescriptor VarUI2FromI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI2FromI1$FUNC() { return VarUI2FromI1$FUNC_; }

    static final MethodHandle VarUI2FromI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI2FromI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI2FromI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI2FromI1$MH() { return VarUI2FromI1$MH_; }

    static final FunctionDescriptor VarUI2FromUI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI2FromUI4$FUNC() { return VarUI2FromUI4$FUNC_; }

    static final MethodHandle VarUI2FromUI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI2FromUI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarUI2FromUI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI2FromUI4$MH() { return VarUI2FromUI4$MH_; }

    static final FunctionDescriptor VarUI2FromUI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI2FromUI8$FUNC() { return VarUI2FromUI8$FUNC_; }

    static final MethodHandle VarUI2FromUI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI2FromUI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI2FromUI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI2FromUI8$MH() { return VarUI2FromUI8$MH_; }

    static final FunctionDescriptor VarUI2FromDec$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI2FromDec$FUNC() { return VarUI2FromDec$FUNC_; }

    static final MethodHandle VarUI2FromDec$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI2FromDec",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarUI2FromDec$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI2FromDec$MH() { return VarUI2FromDec$MH_; }

    static final FunctionDescriptor VarUI4FromUI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI4FromUI1$FUNC() { return VarUI4FromUI1$FUNC_; }

    static final MethodHandle VarUI4FromUI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI4FromUI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI4FromUI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI4FromUI1$MH() { return VarUI4FromUI1$MH_; }

    static final FunctionDescriptor VarUI4FromI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI4FromI2$FUNC() { return VarUI4FromI2$FUNC_; }

    static final MethodHandle VarUI4FromI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI4FromI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI4FromI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI4FromI2$MH() { return VarUI4FromI2$MH_; }

    static final FunctionDescriptor VarUI4FromI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI4FromI4$FUNC() { return VarUI4FromI4$FUNC_; }

    static final MethodHandle VarUI4FromI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI4FromI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarUI4FromI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI4FromI4$MH() { return VarUI4FromI4$MH_; }

    static final FunctionDescriptor VarUI4FromI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI4FromI8$FUNC() { return VarUI4FromI8$FUNC_; }

    static final MethodHandle VarUI4FromI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI4FromI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI4FromI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI4FromI8$MH() { return VarUI4FromI8$MH_; }

    static final FunctionDescriptor VarUI4FromR4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_FLOAT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI4FromR4$FUNC() { return VarUI4FromR4$FUNC_; }

    static final MethodHandle VarUI4FromR4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI4FromR4",
        "(FLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI4FromR4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI4FromR4$MH() { return VarUI4FromR4$MH_; }

    static final FunctionDescriptor VarUI4FromR8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI4FromR8$FUNC() { return VarUI4FromR8$FUNC_; }

    static final MethodHandle VarUI4FromR8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI4FromR8",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI4FromR8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI4FromR8$MH() { return VarUI4FromR8$MH_; }

    static final FunctionDescriptor VarUI4FromDate$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI4FromDate$FUNC() { return VarUI4FromDate$FUNC_; }

    static final MethodHandle VarUI4FromDate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI4FromDate",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI4FromDate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI4FromDate$MH() { return VarUI4FromDate$MH_; }

    static final FunctionDescriptor VarUI4FromCy$FUNC_ = FunctionDescriptor.of(C_LONG,
        MemoryLayout.ofUnion(
            C_LONG.withName("Lo"),
            C_LONG.withName("Hi"),
            C_LONGLONG.withName("int64")
        ).withName("tagCY"),
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI4FromCy$FUNC() { return VarUI4FromCy$FUNC_; }

    static final MethodHandle VarUI4FromCy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI4FromCy",
        "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarUI4FromCy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI4FromCy$MH() { return VarUI4FromCy$MH_; }

    static final FunctionDescriptor VarUI4FromStr$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI4FromStr$FUNC() { return VarUI4FromStr$FUNC_; }

    static final MethodHandle VarUI4FromStr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI4FromStr",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        VarUI4FromStr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI4FromStr$MH() { return VarUI4FromStr$MH_; }

    static final FunctionDescriptor VarUI4FromDisp$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI4FromDisp$FUNC() { return VarUI4FromDisp$FUNC_; }

    static final MethodHandle VarUI4FromDisp$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI4FromDisp",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        VarUI4FromDisp$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI4FromDisp$MH() { return VarUI4FromDisp$MH_; }

    static final FunctionDescriptor VarUI4FromBool$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI4FromBool$FUNC() { return VarUI4FromBool$FUNC_; }

    static final MethodHandle VarUI4FromBool$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI4FromBool",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI4FromBool$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI4FromBool$MH() { return VarUI4FromBool$MH_; }

    static final FunctionDescriptor VarUI4FromI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI4FromI1$FUNC() { return VarUI4FromI1$FUNC_; }

    static final MethodHandle VarUI4FromI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI4FromI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI4FromI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI4FromI1$MH() { return VarUI4FromI1$MH_; }

    static final FunctionDescriptor VarUI4FromUI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI4FromUI2$FUNC() { return VarUI4FromUI2$FUNC_; }

    static final MethodHandle VarUI4FromUI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI4FromUI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI4FromUI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI4FromUI2$MH() { return VarUI4FromUI2$MH_; }

    static final FunctionDescriptor VarUI4FromUI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI4FromUI8$FUNC() { return VarUI4FromUI8$FUNC_; }

    static final MethodHandle VarUI4FromUI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI4FromUI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI4FromUI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI4FromUI8$MH() { return VarUI4FromUI8$MH_; }

    static final FunctionDescriptor VarUI4FromDec$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI4FromDec$FUNC() { return VarUI4FromDec$FUNC_; }

    static final MethodHandle VarUI4FromDec$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI4FromDec",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarUI4FromDec$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI4FromDec$MH() { return VarUI4FromDec$MH_; }

    static final FunctionDescriptor VarUI8FromUI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI8FromUI1$FUNC() { return VarUI8FromUI1$FUNC_; }

    static final MethodHandle VarUI8FromUI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI8FromUI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI8FromUI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI8FromUI1$MH() { return VarUI8FromUI1$MH_; }

    static final FunctionDescriptor VarUI8FromI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI8FromI2$FUNC() { return VarUI8FromI2$FUNC_; }

    static final MethodHandle VarUI8FromI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI8FromI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI8FromI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI8FromI2$MH() { return VarUI8FromI2$MH_; }

    static final FunctionDescriptor VarUI8FromI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI8FromI4$FUNC() { return VarUI8FromI4$FUNC_; }

    static final MethodHandle VarUI8FromI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI8FromI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarUI8FromI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI8FromI4$MH() { return VarUI8FromI4$MH_; }

    static final FunctionDescriptor VarUI8FromI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI8FromI8$FUNC() { return VarUI8FromI8$FUNC_; }

    static final MethodHandle VarUI8FromI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI8FromI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI8FromI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI8FromI8$MH() { return VarUI8FromI8$MH_; }

    static final FunctionDescriptor VarUI8FromR4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_FLOAT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI8FromR4$FUNC() { return VarUI8FromR4$FUNC_; }

    static final MethodHandle VarUI8FromR4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI8FromR4",
        "(FLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI8FromR4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI8FromR4$MH() { return VarUI8FromR4$MH_; }

    static final FunctionDescriptor VarUI8FromR8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI8FromR8$FUNC() { return VarUI8FromR8$FUNC_; }

    static final MethodHandle VarUI8FromR8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI8FromR8",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI8FromR8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI8FromR8$MH() { return VarUI8FromR8$MH_; }

    static final FunctionDescriptor VarUI8FromCy$FUNC_ = FunctionDescriptor.of(C_LONG,
        MemoryLayout.ofUnion(
            C_LONG.withName("Lo"),
            C_LONG.withName("Hi"),
            C_LONGLONG.withName("int64")
        ).withName("tagCY"),
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI8FromCy$FUNC() { return VarUI8FromCy$FUNC_; }

    static final MethodHandle VarUI8FromCy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI8FromCy",
        "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarUI8FromCy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI8FromCy$MH() { return VarUI8FromCy$MH_; }

    static final FunctionDescriptor VarUI8FromDate$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI8FromDate$FUNC() { return VarUI8FromDate$FUNC_; }

    static final MethodHandle VarUI8FromDate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI8FromDate",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI8FromDate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI8FromDate$MH() { return VarUI8FromDate$MH_; }

    static final FunctionDescriptor VarUI8FromStr$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI8FromStr$FUNC() { return VarUI8FromStr$FUNC_; }

    static final MethodHandle VarUI8FromStr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI8FromStr",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        VarUI8FromStr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI8FromStr$MH() { return VarUI8FromStr$MH_; }

    static final FunctionDescriptor VarUI8FromDisp$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI8FromDisp$FUNC() { return VarUI8FromDisp$FUNC_; }

    static final MethodHandle VarUI8FromDisp$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI8FromDisp",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        VarUI8FromDisp$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI8FromDisp$MH() { return VarUI8FromDisp$MH_; }

    static final FunctionDescriptor VarUI8FromBool$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI8FromBool$FUNC() { return VarUI8FromBool$FUNC_; }

    static final MethodHandle VarUI8FromBool$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI8FromBool",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI8FromBool$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI8FromBool$MH() { return VarUI8FromBool$MH_; }

    static final FunctionDescriptor VarUI8FromI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI8FromI1$FUNC() { return VarUI8FromI1$FUNC_; }

    static final MethodHandle VarUI8FromI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI8FromI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI8FromI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI8FromI1$MH() { return VarUI8FromI1$MH_; }

    static final FunctionDescriptor VarUI8FromUI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI8FromUI2$FUNC() { return VarUI8FromUI2$FUNC_; }

    static final MethodHandle VarUI8FromUI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI8FromUI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarUI8FromUI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI8FromUI2$MH() { return VarUI8FromUI2$MH_; }

    static final FunctionDescriptor VarUI8FromUI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI8FromUI4$FUNC() { return VarUI8FromUI4$FUNC_; }

    static final MethodHandle VarUI8FromUI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI8FromUI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarUI8FromUI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI8FromUI4$MH() { return VarUI8FromUI4$MH_; }

    static final FunctionDescriptor VarUI8FromDec$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarUI8FromDec$FUNC() { return VarUI8FromDec$FUNC_; }

    static final MethodHandle VarUI8FromDec$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarUI8FromDec",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarUI8FromDec$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarUI8FromDec$MH() { return VarUI8FromDec$MH_; }

    static final FunctionDescriptor VarDecFromUI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDecFromUI1$FUNC() { return VarDecFromUI1$FUNC_; }

    static final MethodHandle VarDecFromUI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDecFromUI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarDecFromUI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDecFromUI1$MH() { return VarDecFromUI1$MH_; }

    static final FunctionDescriptor VarDecFromI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDecFromI2$FUNC() { return VarDecFromI2$FUNC_; }

    static final MethodHandle VarDecFromI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDecFromI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarDecFromI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDecFromI2$MH() { return VarDecFromI2$MH_; }

    static final FunctionDescriptor VarDecFromI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDecFromI4$FUNC() { return VarDecFromI4$FUNC_; }

    static final MethodHandle VarDecFromI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDecFromI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarDecFromI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDecFromI4$MH() { return VarDecFromI4$MH_; }

    static final FunctionDescriptor VarDecFromI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDecFromI8$FUNC() { return VarDecFromI8$FUNC_; }

    static final MethodHandle VarDecFromI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDecFromI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarDecFromI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDecFromI8$MH() { return VarDecFromI8$MH_; }

    static final FunctionDescriptor VarDecFromR4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_FLOAT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDecFromR4$FUNC() { return VarDecFromR4$FUNC_; }

    static final MethodHandle VarDecFromR4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDecFromR4",
        "(FLjdk/incubator/foreign/MemoryAddress;)I",
        VarDecFromR4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDecFromR4$MH() { return VarDecFromR4$MH_; }

    static final FunctionDescriptor VarDecFromR8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDecFromR8$FUNC() { return VarDecFromR8$FUNC_; }

    static final MethodHandle VarDecFromR8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDecFromR8",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarDecFromR8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDecFromR8$MH() { return VarDecFromR8$MH_; }

    static final FunctionDescriptor VarDecFromDate$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDecFromDate$FUNC() { return VarDecFromDate$FUNC_; }

    static final MethodHandle VarDecFromDate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDecFromDate",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        VarDecFromDate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDecFromDate$MH() { return VarDecFromDate$MH_; }

    static final FunctionDescriptor VarDecFromCy$FUNC_ = FunctionDescriptor.of(C_LONG,
        MemoryLayout.ofUnion(
            C_LONG.withName("Lo"),
            C_LONG.withName("Hi"),
            C_LONGLONG.withName("int64")
        ).withName("tagCY"),
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDecFromCy$FUNC() { return VarDecFromCy$FUNC_; }

    static final MethodHandle VarDecFromCy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDecFromCy",
        "(Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarDecFromCy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDecFromCy$MH() { return VarDecFromCy$MH_; }

    static final FunctionDescriptor VarDecFromStr$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDecFromStr$FUNC() { return VarDecFromStr$FUNC_; }

    static final MethodHandle VarDecFromStr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDecFromStr",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        VarDecFromStr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDecFromStr$MH() { return VarDecFromStr$MH_; }

    static final FunctionDescriptor VarDecFromDisp$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDecFromDisp$FUNC() { return VarDecFromDisp$FUNC_; }

    static final MethodHandle VarDecFromDisp$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDecFromDisp",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        VarDecFromDisp$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDecFromDisp$MH() { return VarDecFromDisp$MH_; }

    static final FunctionDescriptor VarDecFromBool$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDecFromBool$FUNC() { return VarDecFromBool$FUNC_; }

    static final MethodHandle VarDecFromBool$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDecFromBool",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarDecFromBool$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDecFromBool$MH() { return VarDecFromBool$MH_; }

    static final FunctionDescriptor VarDecFromI1$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDecFromI1$FUNC() { return VarDecFromI1$FUNC_; }

    static final MethodHandle VarDecFromI1$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDecFromI1",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        VarDecFromI1$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDecFromI1$MH() { return VarDecFromI1$MH_; }

    static final FunctionDescriptor VarDecFromUI2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDecFromUI2$FUNC() { return VarDecFromUI2$FUNC_; }

    static final MethodHandle VarDecFromUI2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDecFromUI2",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        VarDecFromUI2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDecFromUI2$MH() { return VarDecFromUI2$MH_; }

    static final FunctionDescriptor VarDecFromUI4$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDecFromUI4$FUNC() { return VarDecFromUI4$FUNC_; }

    static final MethodHandle VarDecFromUI4$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDecFromUI4",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        VarDecFromUI4$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDecFromUI4$MH() { return VarDecFromUI4$MH_; }

    static final FunctionDescriptor VarDecFromUI8$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarDecFromUI8$FUNC() { return VarDecFromUI8$FUNC_; }

    static final MethodHandle VarDecFromUI8$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarDecFromUI8",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        VarDecFromUI8$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarDecFromUI8$MH() { return VarDecFromUI8$MH_; }

    static final MemoryLayout NUMPARSE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("cDig"),
        C_LONG.withName("dwInFlags"),
        C_LONG.withName("dwOutFlags"),
        C_INT.withName("cchUsed"),
        C_INT.withName("nBaseShift"),
        C_INT.withName("nPwr10")
    );
    static final jdk.incubator.foreign.MemoryLayout NUMPARSE$struct$LAYOUT() { return NUMPARSE$struct$LAYOUT_; }

    static final MemoryLayout NUMPARSE$cDig$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout NUMPARSE$cDig$LAYOUT() { return NUMPARSE$cDig$LAYOUT_; }

    static final VarHandle NUMPARSE$cDig$VH_ = NUMPARSE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cDig"));
    static final java.lang.invoke.VarHandle NUMPARSE$cDig$VH() { return NUMPARSE$cDig$VH_; }

    static final MemoryLayout NUMPARSE$dwInFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout NUMPARSE$dwInFlags$LAYOUT() { return NUMPARSE$dwInFlags$LAYOUT_; }

    static final VarHandle NUMPARSE$dwInFlags$VH_ = NUMPARSE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwInFlags"));
    static final java.lang.invoke.VarHandle NUMPARSE$dwInFlags$VH() { return NUMPARSE$dwInFlags$VH_; }

    static final MemoryLayout NUMPARSE$dwOutFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout NUMPARSE$dwOutFlags$LAYOUT() { return NUMPARSE$dwOutFlags$LAYOUT_; }

    static final VarHandle NUMPARSE$dwOutFlags$VH_ = NUMPARSE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwOutFlags"));
    static final java.lang.invoke.VarHandle NUMPARSE$dwOutFlags$VH() { return NUMPARSE$dwOutFlags$VH_; }

    static final MemoryLayout NUMPARSE$cchUsed$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout NUMPARSE$cchUsed$LAYOUT() { return NUMPARSE$cchUsed$LAYOUT_; }

    static final VarHandle NUMPARSE$cchUsed$VH_ = NUMPARSE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cchUsed"));
    static final java.lang.invoke.VarHandle NUMPARSE$cchUsed$VH() { return NUMPARSE$cchUsed$VH_; }

    static final MemoryLayout NUMPARSE$nBaseShift$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout NUMPARSE$nBaseShift$LAYOUT() { return NUMPARSE$nBaseShift$LAYOUT_; }

    static final VarHandle NUMPARSE$nBaseShift$VH_ = NUMPARSE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nBaseShift"));
    static final java.lang.invoke.VarHandle NUMPARSE$nBaseShift$VH() { return NUMPARSE$nBaseShift$VH_; }

    static final MemoryLayout NUMPARSE$nPwr10$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout NUMPARSE$nPwr10$LAYOUT() { return NUMPARSE$nPwr10$LAYOUT_; }

    static final VarHandle NUMPARSE$nPwr10$VH_ = NUMPARSE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nPwr10"));
    static final java.lang.invoke.VarHandle NUMPARSE$nPwr10$VH() { return NUMPARSE$nPwr10$VH_; }

    static final FunctionDescriptor VarParseNumFromStr$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarParseNumFromStr$FUNC() { return VarParseNumFromStr$FUNC_; }

    static final MethodHandle VarParseNumFromStr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarParseNumFromStr",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarParseNumFromStr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarParseNumFromStr$MH() { return VarParseNumFromStr$MH_; }

    static final FunctionDescriptor VarNumFromParseNum$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarNumFromParseNum$FUNC() { return VarNumFromParseNum$FUNC_; }

    static final MethodHandle VarNumFromParseNum$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarNumFromParseNum",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        VarNumFromParseNum$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarNumFromParseNum$MH() { return VarNumFromParseNum$MH_; }

    static final FunctionDescriptor VarAdd$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VarAdd$FUNC() { return VarAdd$FUNC_; }

    static final MethodHandle VarAdd$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VarAdd",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        VarAdd$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VarAdd$MH() { return VarAdd$MH_; }

}

