// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$22 extends cfapi_h$21 {

    /* package-private */ cfapi_h$22() {}
    public static @C("int") int CsvFsDiskConnectivityMdsNodeOnly() {
        return cfapi_h$constants$66.CsvFsDiskConnectivityMdsNodeOnly();
    }
    public static @C("int") int CsvFsDiskConnectivitySubsetOfNodes() {
        return cfapi_h$constants$66.CsvFsDiskConnectivitySubsetOfNodes();
    }
    public static @C("int") int CsvFsDiskConnectivityAllNodes() {
        return cfapi_h$constants$66.CsvFsDiskConnectivityAllNodes();
    }
    public static @C("int") int StorageReserveIdNone() {
        return cfapi_h$constants$66.StorageReserveIdNone();
    }
    public static @C("int") int StorageReserveIdHard() {
        return cfapi_h$constants$66.StorageReserveIdHard();
    }
    public static @C("int") int StorageReserveIdSoft() {
        return cfapi_h$constants$66.StorageReserveIdSoft();
    }
    public static @C("int") int StorageReserveIdUpdateScratch() {
        return cfapi_h$constants$66.StorageReserveIdUpdateScratch();
    }
    public static @C("int") int StorageReserveIdMax() {
        return cfapi_h$constants$66.StorageReserveIdMax();
    }
    public static @C("int") int QUERY_FILE_LAYOUT_FILTER_TYPE_NONE() {
        return cfapi_h$constants$66.QUERY_FILE_LAYOUT_FILTER_TYPE_NONE();
    }
    public static @C("int") int QUERY_FILE_LAYOUT_FILTER_TYPE_CLUSTERS() {
        return cfapi_h$constants$66.QUERY_FILE_LAYOUT_FILTER_TYPE_CLUSTERS();
    }
    public static @C("int") int QUERY_FILE_LAYOUT_FILTER_TYPE_FILEID() {
        return cfapi_h$constants$66.QUERY_FILE_LAYOUT_FILTER_TYPE_FILEID();
    }
    public static @C("int") int QUERY_FILE_LAYOUT_FILTER_TYPE_STORAGE_RESERVE_ID() {
        return cfapi_h$constants$66.QUERY_FILE_LAYOUT_FILTER_TYPE_STORAGE_RESERVE_ID();
    }
    public static @C("int") int QUERY_FILE_LAYOUT_NUM_FILTER_TYPES() {
        return cfapi_h$constants$66.QUERY_FILE_LAYOUT_NUM_FILTER_TYPES();
    }
    public static @C("int") int FileStorageTierMediaTypeUnspecified() {
        return cfapi_h$constants$67.FileStorageTierMediaTypeUnspecified();
    }
    public static @C("int") int FileStorageTierMediaTypeDisk() {
        return cfapi_h$constants$67.FileStorageTierMediaTypeDisk();
    }
    public static @C("int") int FileStorageTierMediaTypeSsd() {
        return cfapi_h$constants$67.FileStorageTierMediaTypeSsd();
    }
    public static @C("int") int FileStorageTierMediaTypeScm() {
        return cfapi_h$constants$67.FileStorageTierMediaTypeScm();
    }
    public static @C("int") int FileStorageTierMediaTypeMax() {
        return cfapi_h$constants$67.FileStorageTierMediaTypeMax();
    }
    public static @C("int") int FileStorageTierClassUnspecified() {
        return cfapi_h$constants$67.FileStorageTierClassUnspecified();
    }
    public static @C("int") int FileStorageTierClassCapacity() {
        return cfapi_h$constants$67.FileStorageTierClassCapacity();
    }
    public static @C("int") int FileStorageTierClassPerformance() {
        return cfapi_h$constants$67.FileStorageTierClassPerformance();
    }
    public static @C("int") int FileStorageTierClassMax() {
        return cfapi_h$constants$67.FileStorageTierClassMax();
    }
    public static @C("int") int SmrGcStateInactive() {
        return cfapi_h$constants$67.SmrGcStateInactive();
    }
    public static @C("int") int SmrGcStatePaused() {
        return cfapi_h$constants$67.SmrGcStatePaused();
    }
    public static @C("int") int SmrGcStateActive() {
        return cfapi_h$constants$67.SmrGcStateActive();
    }
    public static @C("int") int SmrGcStateActiveFullSpeed() {
        return cfapi_h$constants$67.SmrGcStateActiveFullSpeed();
    }
    public static @C("int") int SmrGcActionStart() {
        return cfapi_h$constants$67.SmrGcActionStart();
    }
    public static @C("int") int SmrGcActionStartFullSpeed() {
        return cfapi_h$constants$67.SmrGcActionStartFullSpeed();
    }
    public static @C("int") int SmrGcActionPause() {
        return cfapi_h$constants$67.SmrGcActionPause();
    }
    public static @C("int") int SmrGcActionStop() {
        return cfapi_h$constants$67.SmrGcActionStop();
    }
    public static @C("int") int SmrGcMethodCompaction() {
        return cfapi_h$constants$67.SmrGcMethodCompaction();
    }
    public static @C("int") int SmrGcMethodCompression() {
        return cfapi_h$constants$67.SmrGcMethodCompression();
    }
    public static @C("int") int SmrGcMethodRotation() {
        return cfapi_h$constants$67.SmrGcMethodRotation();
    }
    public static @C("int") int VirtualStorageBehaviorUndefined() {
        return cfapi_h$constants$67.VirtualStorageBehaviorUndefined();
    }
    public static @C("int") int VirtualStorageBehaviorCacheWriteThrough() {
        return cfapi_h$constants$67.VirtualStorageBehaviorCacheWriteThrough();
    }
    public static @C("int") int VirtualStorageBehaviorCacheWriteBack() {
        return cfapi_h$constants$67.VirtualStorageBehaviorCacheWriteBack();
    }
    public static  MemorySegment GUID_DEVINTERFACE_SMARTCARD_READER$SEGMENT() {
        return cfapi_h$constants$68.GUID_DEVINTERFACE_SMARTCARD_READER$SEGMENT();
    }
    public static  MemorySegment g_rgSCardT0Pci$SEGMENT() {
        return cfapi_h$constants$68.g_rgSCardT0Pci$SEGMENT();
    }
    public static  MemorySegment g_rgSCardT1Pci$SEGMENT() {
        return cfapi_h$constants$68.g_rgSCardT1Pci$SEGMENT();
    }
    public static  MemorySegment g_rgSCardRawPci$SEGMENT() {
        return cfapi_h$constants$68.g_rgSCardRawPci$SEGMENT();
    }
    public static  MethodHandle SCardEstablishContext$MH() {
        return cfapi_h$constants$68.SCardEstablishContext$MH();
    }
    public static @C("LONG") int SCardEstablishContext (@C("DWORD") int dwScope, @C("LPCVOID") Addressable pvReserved1, @C("LPCVOID") Addressable pvReserved2, @C("LPSCARDCONTEXT") Addressable phContext) {
        try {
            return (int)cfapi_h$constants$68.SCardEstablishContext$MH().invokeExact(dwScope, pvReserved1.address(), pvReserved2.address(), phContext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardReleaseContext$MH() {
        return cfapi_h$constants$68.SCardReleaseContext$MH();
    }
    public static @C("LONG") int SCardReleaseContext (@C("SCARDCONTEXT") long hContext) {
        try {
            return (int)cfapi_h$constants$68.SCardReleaseContext$MH().invokeExact(hContext);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardIsValidContext$MH() {
        return cfapi_h$constants$68.SCardIsValidContext$MH();
    }
    public static @C("LONG") int SCardIsValidContext (@C("SCARDCONTEXT") long hContext) {
        try {
            return (int)cfapi_h$constants$68.SCardIsValidContext$MH().invokeExact(hContext);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardListReaderGroupsA$MH() {
        return cfapi_h$constants$68.SCardListReaderGroupsA$MH();
    }
    public static @C("LONG") int SCardListReaderGroupsA (@C("SCARDCONTEXT") long hContext, @C("LPSTR") Addressable mszGroups, @C("LPDWORD") Addressable pcchGroups) {
        try {
            return (int)cfapi_h$constants$68.SCardListReaderGroupsA$MH().invokeExact(hContext, mszGroups.address(), pcchGroups.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardListReaderGroupsW$MH() {
        return cfapi_h$constants$68.SCardListReaderGroupsW$MH();
    }
    public static @C("LONG") int SCardListReaderGroupsW (@C("SCARDCONTEXT") long hContext, @C("LPWSTR") Addressable mszGroups, @C("LPDWORD") Addressable pcchGroups) {
        try {
            return (int)cfapi_h$constants$68.SCardListReaderGroupsW$MH().invokeExact(hContext, mszGroups.address(), pcchGroups.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardListReadersA$MH() {
        return cfapi_h$constants$68.SCardListReadersA$MH();
    }
    public static @C("LONG") int SCardListReadersA (@C("SCARDCONTEXT") long hContext, @C("LPCSTR") Addressable mszGroups, @C("LPSTR") Addressable mszReaders, @C("LPDWORD") Addressable pcchReaders) {
        try {
            return (int)cfapi_h$constants$68.SCardListReadersA$MH().invokeExact(hContext, mszGroups.address(), mszReaders.address(), pcchReaders.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardListReadersW$MH() {
        return cfapi_h$constants$68.SCardListReadersW$MH();
    }
    public static @C("LONG") int SCardListReadersW (@C("SCARDCONTEXT") long hContext, @C("LPCWSTR") Addressable mszGroups, @C("LPWSTR") Addressable mszReaders, @C("LPDWORD") Addressable pcchReaders) {
        try {
            return (int)cfapi_h$constants$68.SCardListReadersW$MH().invokeExact(hContext, mszGroups.address(), mszReaders.address(), pcchReaders.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardListCardsA$MH() {
        return cfapi_h$constants$68.SCardListCardsA$MH();
    }
    public static @C("LONG") int SCardListCardsA (@C("SCARDCONTEXT") long hContext, @C("LPCBYTE") Addressable pbAtr, @C("LPCGUID") Addressable rgquidInterfaces, @C("DWORD") int cguidInterfaceCount, @C("CHAR*") Addressable mszCards, @C("LPDWORD") Addressable pcchCards) {
        try {
            return (int)cfapi_h$constants$68.SCardListCardsA$MH().invokeExact(hContext, pbAtr.address(), rgquidInterfaces.address(), cguidInterfaceCount, mszCards.address(), pcchCards.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardListCardsW$MH() {
        return cfapi_h$constants$68.SCardListCardsW$MH();
    }
    public static @C("LONG") int SCardListCardsW (@C("SCARDCONTEXT") long hContext, @C("LPCBYTE") Addressable pbAtr, @C("LPCGUID") Addressable rgquidInterfaces, @C("DWORD") int cguidInterfaceCount, @C("WCHAR*") Addressable mszCards, @C("LPDWORD") Addressable pcchCards) {
        try {
            return (int)cfapi_h$constants$68.SCardListCardsW$MH().invokeExact(hContext, pbAtr.address(), rgquidInterfaces.address(), cguidInterfaceCount, mszCards.address(), pcchCards.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardListInterfacesA$MH() {
        return cfapi_h$constants$68.SCardListInterfacesA$MH();
    }
    public static @C("LONG") int SCardListInterfacesA (@C("SCARDCONTEXT") long hContext, @C("LPCSTR") Addressable szCard, @C("LPGUID") Addressable pguidInterfaces, @C("LPDWORD") Addressable pcguidInterfaces) {
        try {
            return (int)cfapi_h$constants$68.SCardListInterfacesA$MH().invokeExact(hContext, szCard.address(), pguidInterfaces.address(), pcguidInterfaces.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardListInterfacesW$MH() {
        return cfapi_h$constants$68.SCardListInterfacesW$MH();
    }
    public static @C("LONG") int SCardListInterfacesW (@C("SCARDCONTEXT") long hContext, @C("LPCWSTR") Addressable szCard, @C("LPGUID") Addressable pguidInterfaces, @C("LPDWORD") Addressable pcguidInterfaces) {
        try {
            return (int)cfapi_h$constants$68.SCardListInterfacesW$MH().invokeExact(hContext, szCard.address(), pguidInterfaces.address(), pcguidInterfaces.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardGetProviderIdA$MH() {
        return cfapi_h$constants$68.SCardGetProviderIdA$MH();
    }
    public static @C("LONG") int SCardGetProviderIdA (@C("SCARDCONTEXT") long hContext, @C("LPCSTR") Addressable szCard, @C("LPGUID") Addressable pguidProviderId) {
        try {
            return (int)cfapi_h$constants$68.SCardGetProviderIdA$MH().invokeExact(hContext, szCard.address(), pguidProviderId.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardGetProviderIdW$MH() {
        return cfapi_h$constants$68.SCardGetProviderIdW$MH();
    }
    public static @C("LONG") int SCardGetProviderIdW (@C("SCARDCONTEXT") long hContext, @C("LPCWSTR") Addressable szCard, @C("LPGUID") Addressable pguidProviderId) {
        try {
            return (int)cfapi_h$constants$68.SCardGetProviderIdW$MH().invokeExact(hContext, szCard.address(), pguidProviderId.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardGetCardTypeProviderNameA$MH() {
        return cfapi_h$constants$68.SCardGetCardTypeProviderNameA$MH();
    }
    public static @C("LONG") int SCardGetCardTypeProviderNameA (@C("SCARDCONTEXT") long hContext, @C("LPCSTR") Addressable szCardName, @C("DWORD") int dwProviderId, @C("CHAR*") Addressable szProvider, @C("LPDWORD") Addressable pcchProvider) {
        try {
            return (int)cfapi_h$constants$68.SCardGetCardTypeProviderNameA$MH().invokeExact(hContext, szCardName.address(), dwProviderId, szProvider.address(), pcchProvider.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardGetCardTypeProviderNameW$MH() {
        return cfapi_h$constants$68.SCardGetCardTypeProviderNameW$MH();
    }
    public static @C("LONG") int SCardGetCardTypeProviderNameW (@C("SCARDCONTEXT") long hContext, @C("LPCWSTR") Addressable szCardName, @C("DWORD") int dwProviderId, @C("WCHAR*") Addressable szProvider, @C("LPDWORD") Addressable pcchProvider) {
        try {
            return (int)cfapi_h$constants$68.SCardGetCardTypeProviderNameW$MH().invokeExact(hContext, szCardName.address(), dwProviderId, szProvider.address(), pcchProvider.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardIntroduceReaderGroupA$MH() {
        return cfapi_h$constants$68.SCardIntroduceReaderGroupA$MH();
    }
    public static @C("LONG") int SCardIntroduceReaderGroupA (@C("SCARDCONTEXT") long hContext, @C("LPCSTR") Addressable szGroupName) {
        try {
            return (int)cfapi_h$constants$68.SCardIntroduceReaderGroupA$MH().invokeExact(hContext, szGroupName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardIntroduceReaderGroupW$MH() {
        return cfapi_h$constants$68.SCardIntroduceReaderGroupW$MH();
    }
    public static @C("LONG") int SCardIntroduceReaderGroupW (@C("SCARDCONTEXT") long hContext, @C("LPCWSTR") Addressable szGroupName) {
        try {
            return (int)cfapi_h$constants$68.SCardIntroduceReaderGroupW$MH().invokeExact(hContext, szGroupName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardForgetReaderGroupA$MH() {
        return cfapi_h$constants$68.SCardForgetReaderGroupA$MH();
    }
    public static @C("LONG") int SCardForgetReaderGroupA (@C("SCARDCONTEXT") long hContext, @C("LPCSTR") Addressable szGroupName) {
        try {
            return (int)cfapi_h$constants$68.SCardForgetReaderGroupA$MH().invokeExact(hContext, szGroupName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardForgetReaderGroupW$MH() {
        return cfapi_h$constants$68.SCardForgetReaderGroupW$MH();
    }
    public static @C("LONG") int SCardForgetReaderGroupW (@C("SCARDCONTEXT") long hContext, @C("LPCWSTR") Addressable szGroupName) {
        try {
            return (int)cfapi_h$constants$68.SCardForgetReaderGroupW$MH().invokeExact(hContext, szGroupName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardIntroduceReaderA$MH() {
        return cfapi_h$constants$68.SCardIntroduceReaderA$MH();
    }
    public static @C("LONG") int SCardIntroduceReaderA (@C("SCARDCONTEXT") long hContext, @C("LPCSTR") Addressable szReaderName, @C("LPCSTR") Addressable szDeviceName) {
        try {
            return (int)cfapi_h$constants$68.SCardIntroduceReaderA$MH().invokeExact(hContext, szReaderName.address(), szDeviceName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardIntroduceReaderW$MH() {
        return cfapi_h$constants$68.SCardIntroduceReaderW$MH();
    }
    public static @C("LONG") int SCardIntroduceReaderW (@C("SCARDCONTEXT") long hContext, @C("LPCWSTR") Addressable szReaderName, @C("LPCWSTR") Addressable szDeviceName) {
        try {
            return (int)cfapi_h$constants$68.SCardIntroduceReaderW$MH().invokeExact(hContext, szReaderName.address(), szDeviceName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardForgetReaderA$MH() {
        return cfapi_h$constants$68.SCardForgetReaderA$MH();
    }
    public static @C("LONG") int SCardForgetReaderA (@C("SCARDCONTEXT") long hContext, @C("LPCSTR") Addressable szReaderName) {
        try {
            return (int)cfapi_h$constants$68.SCardForgetReaderA$MH().invokeExact(hContext, szReaderName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardForgetReaderW$MH() {
        return cfapi_h$constants$68.SCardForgetReaderW$MH();
    }
    public static @C("LONG") int SCardForgetReaderW (@C("SCARDCONTEXT") long hContext, @C("LPCWSTR") Addressable szReaderName) {
        try {
            return (int)cfapi_h$constants$68.SCardForgetReaderW$MH().invokeExact(hContext, szReaderName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardAddReaderToGroupA$MH() {
        return cfapi_h$constants$68.SCardAddReaderToGroupA$MH();
    }
    public static @C("LONG") int SCardAddReaderToGroupA (@C("SCARDCONTEXT") long hContext, @C("LPCSTR") Addressable szReaderName, @C("LPCSTR") Addressable szGroupName) {
        try {
            return (int)cfapi_h$constants$68.SCardAddReaderToGroupA$MH().invokeExact(hContext, szReaderName.address(), szGroupName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardAddReaderToGroupW$MH() {
        return cfapi_h$constants$68.SCardAddReaderToGroupW$MH();
    }
    public static @C("LONG") int SCardAddReaderToGroupW (@C("SCARDCONTEXT") long hContext, @C("LPCWSTR") Addressable szReaderName, @C("LPCWSTR") Addressable szGroupName) {
        try {
            return (int)cfapi_h$constants$68.SCardAddReaderToGroupW$MH().invokeExact(hContext, szReaderName.address(), szGroupName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardRemoveReaderFromGroupA$MH() {
        return cfapi_h$constants$68.SCardRemoveReaderFromGroupA$MH();
    }
    public static @C("LONG") int SCardRemoveReaderFromGroupA (@C("SCARDCONTEXT") long hContext, @C("LPCSTR") Addressable szReaderName, @C("LPCSTR") Addressable szGroupName) {
        try {
            return (int)cfapi_h$constants$68.SCardRemoveReaderFromGroupA$MH().invokeExact(hContext, szReaderName.address(), szGroupName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardRemoveReaderFromGroupW$MH() {
        return cfapi_h$constants$68.SCardRemoveReaderFromGroupW$MH();
    }
    public static @C("LONG") int SCardRemoveReaderFromGroupW (@C("SCARDCONTEXT") long hContext, @C("LPCWSTR") Addressable szReaderName, @C("LPCWSTR") Addressable szGroupName) {
        try {
            return (int)cfapi_h$constants$68.SCardRemoveReaderFromGroupW$MH().invokeExact(hContext, szReaderName.address(), szGroupName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardIntroduceCardTypeA$MH() {
        return cfapi_h$constants$68.SCardIntroduceCardTypeA$MH();
    }
    public static @C("LONG") int SCardIntroduceCardTypeA (@C("SCARDCONTEXT") long hContext, @C("LPCSTR") Addressable szCardName, @C("LPCGUID") Addressable pguidPrimaryProvider, @C("LPCGUID") Addressable rgguidInterfaces, @C("DWORD") int dwInterfaceCount, @C("LPCBYTE") Addressable pbAtr, @C("LPCBYTE") Addressable pbAtrMask, @C("DWORD") int cbAtrLen) {
        try {
            return (int)cfapi_h$constants$68.SCardIntroduceCardTypeA$MH().invokeExact(hContext, szCardName.address(), pguidPrimaryProvider.address(), rgguidInterfaces.address(), dwInterfaceCount, pbAtr.address(), pbAtrMask.address(), cbAtrLen);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardIntroduceCardTypeW$MH() {
        return cfapi_h$constants$68.SCardIntroduceCardTypeW$MH();
    }
    public static @C("LONG") int SCardIntroduceCardTypeW (@C("SCARDCONTEXT") long hContext, @C("LPCWSTR") Addressable szCardName, @C("LPCGUID") Addressable pguidPrimaryProvider, @C("LPCGUID") Addressable rgguidInterfaces, @C("DWORD") int dwInterfaceCount, @C("LPCBYTE") Addressable pbAtr, @C("LPCBYTE") Addressable pbAtrMask, @C("DWORD") int cbAtrLen) {
        try {
            return (int)cfapi_h$constants$68.SCardIntroduceCardTypeW$MH().invokeExact(hContext, szCardName.address(), pguidPrimaryProvider.address(), rgguidInterfaces.address(), dwInterfaceCount, pbAtr.address(), pbAtrMask.address(), cbAtrLen);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardSetCardTypeProviderNameA$MH() {
        return cfapi_h$constants$68.SCardSetCardTypeProviderNameA$MH();
    }
    public static @C("LONG") int SCardSetCardTypeProviderNameA (@C("SCARDCONTEXT") long hContext, @C("LPCSTR") Addressable szCardName, @C("DWORD") int dwProviderId, @C("LPCSTR") Addressable szProvider) {
        try {
            return (int)cfapi_h$constants$68.SCardSetCardTypeProviderNameA$MH().invokeExact(hContext, szCardName.address(), dwProviderId, szProvider.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardSetCardTypeProviderNameW$MH() {
        return cfapi_h$constants$68.SCardSetCardTypeProviderNameW$MH();
    }
    public static @C("LONG") int SCardSetCardTypeProviderNameW (@C("SCARDCONTEXT") long hContext, @C("LPCWSTR") Addressable szCardName, @C("DWORD") int dwProviderId, @C("LPCWSTR") Addressable szProvider) {
        try {
            return (int)cfapi_h$constants$68.SCardSetCardTypeProviderNameW$MH().invokeExact(hContext, szCardName.address(), dwProviderId, szProvider.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardForgetCardTypeA$MH() {
        return cfapi_h$constants$68.SCardForgetCardTypeA$MH();
    }
    public static @C("LONG") int SCardForgetCardTypeA (@C("SCARDCONTEXT") long hContext, @C("LPCSTR") Addressable szCardName) {
        try {
            return (int)cfapi_h$constants$68.SCardForgetCardTypeA$MH().invokeExact(hContext, szCardName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardForgetCardTypeW$MH() {
        return cfapi_h$constants$68.SCardForgetCardTypeW$MH();
    }
    public static @C("LONG") int SCardForgetCardTypeW (@C("SCARDCONTEXT") long hContext, @C("LPCWSTR") Addressable szCardName) {
        try {
            return (int)cfapi_h$constants$68.SCardForgetCardTypeW$MH().invokeExact(hContext, szCardName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardFreeMemory$MH() {
        return cfapi_h$constants$68.SCardFreeMemory$MH();
    }
    public static @C("LONG") int SCardFreeMemory (@C("SCARDCONTEXT") long hContext, @C("LPCVOID") Addressable pvMem) {
        try {
            return (int)cfapi_h$constants$68.SCardFreeMemory$MH().invokeExact(hContext, pvMem.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardAccessStartedEvent$MH() {
        return cfapi_h$constants$68.SCardAccessStartedEvent$MH();
    }
    public static @C("HANDLE") MemoryAddress SCardAccessStartedEvent () {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$68.SCardAccessStartedEvent$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardReleaseStartedEvent$MH() {
        return cfapi_h$constants$68.SCardReleaseStartedEvent$MH();
    }
    public static void SCardReleaseStartedEvent () {
        try {
            cfapi_h$constants$68.SCardReleaseStartedEvent$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardLocateCardsA$MH() {
        return cfapi_h$constants$68.SCardLocateCardsA$MH();
    }
    public static @C("LONG") int SCardLocateCardsA (@C("SCARDCONTEXT") long hContext, @C("LPCSTR") Addressable mszCards, @C("LPSCARD_READERSTATEA") Addressable rgReaderStates, @C("DWORD") int cReaders) {
        try {
            return (int)cfapi_h$constants$68.SCardLocateCardsA$MH().invokeExact(hContext, mszCards.address(), rgReaderStates.address(), cReaders);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardLocateCardsW$MH() {
        return cfapi_h$constants$68.SCardLocateCardsW$MH();
    }
    public static @C("LONG") int SCardLocateCardsW (@C("SCARDCONTEXT") long hContext, @C("LPCWSTR") Addressable mszCards, @C("LPSCARD_READERSTATEW") Addressable rgReaderStates, @C("DWORD") int cReaders) {
        try {
            return (int)cfapi_h$constants$68.SCardLocateCardsW$MH().invokeExact(hContext, mszCards.address(), rgReaderStates.address(), cReaders);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardLocateCardsByATRA$MH() {
        return cfapi_h$constants$68.SCardLocateCardsByATRA$MH();
    }
    public static @C("LONG") int SCardLocateCardsByATRA (@C("SCARDCONTEXT") long hContext, @C("LPSCARD_ATRMASK") Addressable rgAtrMasks, @C("DWORD") int cAtrs, @C("LPSCARD_READERSTATEA") Addressable rgReaderStates, @C("DWORD") int cReaders) {
        try {
            return (int)cfapi_h$constants$68.SCardLocateCardsByATRA$MH().invokeExact(hContext, rgAtrMasks.address(), cAtrs, rgReaderStates.address(), cReaders);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardLocateCardsByATRW$MH() {
        return cfapi_h$constants$68.SCardLocateCardsByATRW$MH();
    }
    public static @C("LONG") int SCardLocateCardsByATRW (@C("SCARDCONTEXT") long hContext, @C("LPSCARD_ATRMASK") Addressable rgAtrMasks, @C("DWORD") int cAtrs, @C("LPSCARD_READERSTATEW") Addressable rgReaderStates, @C("DWORD") int cReaders) {
        try {
            return (int)cfapi_h$constants$68.SCardLocateCardsByATRW$MH().invokeExact(hContext, rgAtrMasks.address(), cAtrs, rgReaderStates.address(), cReaders);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardGetStatusChangeA$MH() {
        return cfapi_h$constants$68.SCardGetStatusChangeA$MH();
    }
    public static @C("LONG") int SCardGetStatusChangeA (@C("SCARDCONTEXT") long hContext, @C("DWORD") int dwTimeout, @C("LPSCARD_READERSTATEA") Addressable rgReaderStates, @C("DWORD") int cReaders) {
        try {
            return (int)cfapi_h$constants$68.SCardGetStatusChangeA$MH().invokeExact(hContext, dwTimeout, rgReaderStates.address(), cReaders);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardGetStatusChangeW$MH() {
        return cfapi_h$constants$68.SCardGetStatusChangeW$MH();
    }
    public static @C("LONG") int SCardGetStatusChangeW (@C("SCARDCONTEXT") long hContext, @C("DWORD") int dwTimeout, @C("LPSCARD_READERSTATEW") Addressable rgReaderStates, @C("DWORD") int cReaders) {
        try {
            return (int)cfapi_h$constants$68.SCardGetStatusChangeW$MH().invokeExact(hContext, dwTimeout, rgReaderStates.address(), cReaders);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardCancel$MH() {
        return cfapi_h$constants$68.SCardCancel$MH();
    }
    public static @C("LONG") int SCardCancel (@C("SCARDCONTEXT") long hContext) {
        try {
            return (int)cfapi_h$constants$68.SCardCancel$MH().invokeExact(hContext);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardConnectA$MH() {
        return cfapi_h$constants$68.SCardConnectA$MH();
    }
    public static @C("LONG") int SCardConnectA (@C("SCARDCONTEXT") long hContext, @C("LPCSTR") Addressable szReader, @C("DWORD") int dwShareMode, @C("DWORD") int dwPreferredProtocols, @C("LPSCARDHANDLE") Addressable phCard, @C("LPDWORD") Addressable pdwActiveProtocol) {
        try {
            return (int)cfapi_h$constants$68.SCardConnectA$MH().invokeExact(hContext, szReader.address(), dwShareMode, dwPreferredProtocols, phCard.address(), pdwActiveProtocol.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardConnectW$MH() {
        return cfapi_h$constants$68.SCardConnectW$MH();
    }
    public static @C("LONG") int SCardConnectW (@C("SCARDCONTEXT") long hContext, @C("LPCWSTR") Addressable szReader, @C("DWORD") int dwShareMode, @C("DWORD") int dwPreferredProtocols, @C("LPSCARDHANDLE") Addressable phCard, @C("LPDWORD") Addressable pdwActiveProtocol) {
        try {
            return (int)cfapi_h$constants$68.SCardConnectW$MH().invokeExact(hContext, szReader.address(), dwShareMode, dwPreferredProtocols, phCard.address(), pdwActiveProtocol.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardReconnect$MH() {
        return cfapi_h$constants$68.SCardReconnect$MH();
    }
    public static @C("LONG") int SCardReconnect (@C("SCARDHANDLE") long hCard, @C("DWORD") int dwShareMode, @C("DWORD") int dwPreferredProtocols, @C("DWORD") int dwInitialization, @C("LPDWORD") Addressable pdwActiveProtocol) {
        try {
            return (int)cfapi_h$constants$68.SCardReconnect$MH().invokeExact(hCard, dwShareMode, dwPreferredProtocols, dwInitialization, pdwActiveProtocol.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardDisconnect$MH() {
        return cfapi_h$constants$68.SCardDisconnect$MH();
    }
    public static @C("LONG") int SCardDisconnect (@C("SCARDHANDLE") long hCard, @C("DWORD") int dwDisposition) {
        try {
            return (int)cfapi_h$constants$68.SCardDisconnect$MH().invokeExact(hCard, dwDisposition);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardBeginTransaction$MH() {
        return cfapi_h$constants$68.SCardBeginTransaction$MH();
    }
    public static @C("LONG") int SCardBeginTransaction (@C("SCARDHANDLE") long hCard) {
        try {
            return (int)cfapi_h$constants$68.SCardBeginTransaction$MH().invokeExact(hCard);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardEndTransaction$MH() {
        return cfapi_h$constants$68.SCardEndTransaction$MH();
    }
    public static @C("LONG") int SCardEndTransaction (@C("SCARDHANDLE") long hCard, @C("DWORD") int dwDisposition) {
        try {
            return (int)cfapi_h$constants$68.SCardEndTransaction$MH().invokeExact(hCard, dwDisposition);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardCancelTransaction$MH() {
        return cfapi_h$constants$68.SCardCancelTransaction$MH();
    }
    public static @C("LONG") int SCardCancelTransaction (@C("SCARDHANDLE") long hCard) {
        try {
            return (int)cfapi_h$constants$68.SCardCancelTransaction$MH().invokeExact(hCard);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardState$MH() {
        return cfapi_h$constants$68.SCardState$MH();
    }
    public static @C("LONG") int SCardState (@C("SCARDHANDLE") long hCard, @C("LPDWORD") Addressable pdwState, @C("LPDWORD") Addressable pdwProtocol, @C("LPBYTE") Addressable pbAtr, @C("LPDWORD") Addressable pcbAtrLen) {
        try {
            return (int)cfapi_h$constants$68.SCardState$MH().invokeExact(hCard, pdwState.address(), pdwProtocol.address(), pbAtr.address(), pcbAtrLen.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardStatusA$MH() {
        return cfapi_h$constants$68.SCardStatusA$MH();
    }
    public static @C("LONG") int SCardStatusA (@C("SCARDHANDLE") long hCard, @C("LPSTR") Addressable mszReaderNames, @C("LPDWORD") Addressable pcchReaderLen, @C("LPDWORD") Addressable pdwState, @C("LPDWORD") Addressable pdwProtocol, @C("LPBYTE") Addressable pbAtr, @C("LPDWORD") Addressable pcbAtrLen) {
        try {
            return (int)cfapi_h$constants$68.SCardStatusA$MH().invokeExact(hCard, mszReaderNames.address(), pcchReaderLen.address(), pdwState.address(), pdwProtocol.address(), pbAtr.address(), pcbAtrLen.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardStatusW$MH() {
        return cfapi_h$constants$68.SCardStatusW$MH();
    }
    public static @C("LONG") int SCardStatusW (@C("SCARDHANDLE") long hCard, @C("LPWSTR") Addressable mszReaderNames, @C("LPDWORD") Addressable pcchReaderLen, @C("LPDWORD") Addressable pdwState, @C("LPDWORD") Addressable pdwProtocol, @C("LPBYTE") Addressable pbAtr, @C("LPDWORD") Addressable pcbAtrLen) {
        try {
            return (int)cfapi_h$constants$68.SCardStatusW$MH().invokeExact(hCard, mszReaderNames.address(), pcchReaderLen.address(), pdwState.address(), pdwProtocol.address(), pbAtr.address(), pcbAtrLen.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardTransmit$MH() {
        return cfapi_h$constants$68.SCardTransmit$MH();
    }
    public static @C("LONG") int SCardTransmit (@C("SCARDHANDLE") long hCard, @C("LPCSCARD_IO_REQUEST") Addressable pioSendPci, @C("LPCBYTE") Addressable pbSendBuffer, @C("DWORD") int cbSendLength, @C("LPSCARD_IO_REQUEST") Addressable pioRecvPci, @C("LPBYTE") Addressable pbRecvBuffer, @C("LPDWORD") Addressable pcbRecvLength) {
        try {
            return (int)cfapi_h$constants$68.SCardTransmit$MH().invokeExact(hCard, pioSendPci.address(), pbSendBuffer.address(), cbSendLength, pioRecvPci.address(), pbRecvBuffer.address(), pcbRecvLength.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardGetTransmitCount$MH() {
        return cfapi_h$constants$68.SCardGetTransmitCount$MH();
    }
    public static @C("LONG") int SCardGetTransmitCount (@C("SCARDHANDLE") long hCard, @C("LPDWORD") Addressable pcTransmitCount) {
        try {
            return (int)cfapi_h$constants$68.SCardGetTransmitCount$MH().invokeExact(hCard, pcTransmitCount.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardControl$MH() {
        return cfapi_h$constants$68.SCardControl$MH();
    }
    public static @C("LONG") int SCardControl (@C("SCARDHANDLE") long hCard, @C("DWORD") int dwControlCode, @C("LPCVOID") Addressable lpInBuffer, @C("DWORD") int cbInBufferSize, @C("LPVOID") Addressable lpOutBuffer, @C("DWORD") int cbOutBufferSize, @C("LPDWORD") Addressable lpBytesReturned) {
        try {
            return (int)cfapi_h$constants$68.SCardControl$MH().invokeExact(hCard, dwControlCode, lpInBuffer.address(), cbInBufferSize, lpOutBuffer.address(), cbOutBufferSize, lpBytesReturned.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardGetAttrib$MH() {
        return cfapi_h$constants$68.SCardGetAttrib$MH();
    }
    public static @C("LONG") int SCardGetAttrib (@C("SCARDHANDLE") long hCard, @C("DWORD") int dwAttrId, @C("LPBYTE") Addressable pbAttr, @C("LPDWORD") Addressable pcbAttrLen) {
        try {
            return (int)cfapi_h$constants$68.SCardGetAttrib$MH().invokeExact(hCard, dwAttrId, pbAttr.address(), pcbAttrLen.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardSetAttrib$MH() {
        return cfapi_h$constants$68.SCardSetAttrib$MH();
    }
    public static @C("LONG") int SCardSetAttrib (@C("SCARDHANDLE") long hCard, @C("DWORD") int dwAttrId, @C("LPCBYTE") Addressable pbAttr, @C("DWORD") int cbAttrLen) {
        try {
            return (int)cfapi_h$constants$68.SCardSetAttrib$MH().invokeExact(hCard, dwAttrId, pbAttr.address(), cbAttrLen);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int RSR_MATCH_TYPE_READER_AND_CONTAINER() {
        return cfapi_h$constants$68.RSR_MATCH_TYPE_READER_AND_CONTAINER();
    }
    public static @C("int") int RSR_MATCH_TYPE_SERIAL_NUMBER() {
        return cfapi_h$constants$68.RSR_MATCH_TYPE_SERIAL_NUMBER();
    }
    public static @C("int") int RSR_MATCH_TYPE_ALL_CARDS() {
        return cfapi_h$constants$68.RSR_MATCH_TYPE_ALL_CARDS();
    }
    public static  MethodHandle SCardUIDlgSelectCardA$MH() {
        return cfapi_h$constants$68.SCardUIDlgSelectCardA$MH();
    }
    public static @C("LONG") int SCardUIDlgSelectCardA (@C("LPOPENCARDNAME_EXA") Addressable x0) {
        try {
            return (int)cfapi_h$constants$68.SCardUIDlgSelectCardA$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardUIDlgSelectCardW$MH() {
        return cfapi_h$constants$69.SCardUIDlgSelectCardW$MH();
    }
    public static @C("LONG") int SCardUIDlgSelectCardW (@C("LPOPENCARDNAME_EXW") Addressable x0) {
        try {
            return (int)cfapi_h$constants$69.SCardUIDlgSelectCardW$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetOpenCardNameA$MH() {
        return cfapi_h$constants$69.GetOpenCardNameA$MH();
    }
    public static @C("LONG") int GetOpenCardNameA (@C("LPOPENCARDNAMEA") Addressable x0) {
        try {
            return (int)cfapi_h$constants$69.GetOpenCardNameA$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetOpenCardNameW$MH() {
        return cfapi_h$constants$69.GetOpenCardNameW$MH();
    }
    public static @C("LONG") int GetOpenCardNameW (@C("LPOPENCARDNAMEW") Addressable x0) {
        try {
            return (int)cfapi_h$constants$69.GetOpenCardNameW$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardDlgExtendedError$MH() {
        return cfapi_h$constants$69.SCardDlgExtendedError$MH();
    }
    public static @C("LONG") int SCardDlgExtendedError () {
        try {
            return (int)cfapi_h$constants$69.SCardDlgExtendedError$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardReadCacheA$MH() {
        return cfapi_h$constants$69.SCardReadCacheA$MH();
    }
    public static @C("LONG") int SCardReadCacheA (@C("SCARDCONTEXT") long hContext, @C("UUID*") Addressable CardIdentifier, @C("DWORD") int FreshnessCounter, @C("LPSTR") Addressable LookupName, @C("PBYTE") Addressable Data, @C("DWORD*") Addressable DataLen) {
        try {
            return (int)cfapi_h$constants$69.SCardReadCacheA$MH().invokeExact(hContext, CardIdentifier.address(), FreshnessCounter, LookupName.address(), Data.address(), DataLen.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardReadCacheW$MH() {
        return cfapi_h$constants$69.SCardReadCacheW$MH();
    }
    public static @C("LONG") int SCardReadCacheW (@C("SCARDCONTEXT") long hContext, @C("UUID*") Addressable CardIdentifier, @C("DWORD") int FreshnessCounter, @C("LPWSTR") Addressable LookupName, @C("PBYTE") Addressable Data, @C("DWORD*") Addressable DataLen) {
        try {
            return (int)cfapi_h$constants$69.SCardReadCacheW$MH().invokeExact(hContext, CardIdentifier.address(), FreshnessCounter, LookupName.address(), Data.address(), DataLen.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardWriteCacheA$MH() {
        return cfapi_h$constants$69.SCardWriteCacheA$MH();
    }
    public static @C("LONG") int SCardWriteCacheA (@C("SCARDCONTEXT") long hContext, @C("UUID*") Addressable CardIdentifier, @C("DWORD") int FreshnessCounter, @C("LPSTR") Addressable LookupName, @C("PBYTE") Addressable Data, @C("DWORD") int DataLen) {
        try {
            return (int)cfapi_h$constants$69.SCardWriteCacheA$MH().invokeExact(hContext, CardIdentifier.address(), FreshnessCounter, LookupName.address(), Data.address(), DataLen);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardWriteCacheW$MH() {
        return cfapi_h$constants$69.SCardWriteCacheW$MH();
    }
    public static @C("LONG") int SCardWriteCacheW (@C("SCARDCONTEXT") long hContext, @C("UUID*") Addressable CardIdentifier, @C("DWORD") int FreshnessCounter, @C("LPWSTR") Addressable LookupName, @C("PBYTE") Addressable Data, @C("DWORD") int DataLen) {
        try {
            return (int)cfapi_h$constants$69.SCardWriteCacheW$MH().invokeExact(hContext, CardIdentifier.address(), FreshnessCounter, LookupName.address(), Data.address(), DataLen);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardGetReaderIconA$MH() {
        return cfapi_h$constants$69.SCardGetReaderIconA$MH();
    }
    public static @C("LONG") int SCardGetReaderIconA (@C("SCARDCONTEXT") long hContext, @C("LPCSTR") Addressable szReaderName, @C("LPBYTE") Addressable pbIcon, @C("LPDWORD") Addressable pcbIcon) {
        try {
            return (int)cfapi_h$constants$69.SCardGetReaderIconA$MH().invokeExact(hContext, szReaderName.address(), pbIcon.address(), pcbIcon.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardGetReaderIconW$MH() {
        return cfapi_h$constants$69.SCardGetReaderIconW$MH();
    }
    public static @C("LONG") int SCardGetReaderIconW (@C("SCARDCONTEXT") long hContext, @C("LPCWSTR") Addressable szReaderName, @C("LPBYTE") Addressable pbIcon, @C("LPDWORD") Addressable pcbIcon) {
        try {
            return (int)cfapi_h$constants$69.SCardGetReaderIconW$MH().invokeExact(hContext, szReaderName.address(), pbIcon.address(), pcbIcon.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardGetDeviceTypeIdA$MH() {
        return cfapi_h$constants$69.SCardGetDeviceTypeIdA$MH();
    }
    public static @C("LONG") int SCardGetDeviceTypeIdA (@C("SCARDCONTEXT") long hContext, @C("LPCSTR") Addressable szReaderName, @C("LPDWORD") Addressable pdwDeviceTypeId) {
        try {
            return (int)cfapi_h$constants$69.SCardGetDeviceTypeIdA$MH().invokeExact(hContext, szReaderName.address(), pdwDeviceTypeId.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardGetDeviceTypeIdW$MH() {
        return cfapi_h$constants$69.SCardGetDeviceTypeIdW$MH();
    }
    public static @C("LONG") int SCardGetDeviceTypeIdW (@C("SCARDCONTEXT") long hContext, @C("LPCWSTR") Addressable szReaderName, @C("LPDWORD") Addressable pdwDeviceTypeId) {
        try {
            return (int)cfapi_h$constants$69.SCardGetDeviceTypeIdW$MH().invokeExact(hContext, szReaderName.address(), pdwDeviceTypeId.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardGetReaderDeviceInstanceIdA$MH() {
        return cfapi_h$constants$69.SCardGetReaderDeviceInstanceIdA$MH();
    }
    public static @C("LONG") int SCardGetReaderDeviceInstanceIdA (@C("SCARDCONTEXT") long hContext, @C("LPCSTR") Addressable szReaderName, @C("LPSTR") Addressable szDeviceInstanceId, @C("LPDWORD") Addressable pcchDeviceInstanceId) {
        try {
            return (int)cfapi_h$constants$69.SCardGetReaderDeviceInstanceIdA$MH().invokeExact(hContext, szReaderName.address(), szDeviceInstanceId.address(), pcchDeviceInstanceId.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardGetReaderDeviceInstanceIdW$MH() {
        return cfapi_h$constants$69.SCardGetReaderDeviceInstanceIdW$MH();
    }
    public static @C("LONG") int SCardGetReaderDeviceInstanceIdW (@C("SCARDCONTEXT") long hContext, @C("LPCWSTR") Addressable szReaderName, @C("LPWSTR") Addressable szDeviceInstanceId, @C("LPDWORD") Addressable pcchDeviceInstanceId) {
        try {
            return (int)cfapi_h$constants$69.SCardGetReaderDeviceInstanceIdW$MH().invokeExact(hContext, szReaderName.address(), szDeviceInstanceId.address(), pcchDeviceInstanceId.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardListReadersWithDeviceInstanceIdA$MH() {
        return cfapi_h$constants$69.SCardListReadersWithDeviceInstanceIdA$MH();
    }
    public static @C("LONG") int SCardListReadersWithDeviceInstanceIdA (@C("SCARDCONTEXT") long hContext, @C("LPCSTR") Addressable szDeviceInstanceId, @C("LPSTR") Addressable mszReaders, @C("LPDWORD") Addressable pcchReaders) {
        try {
            return (int)cfapi_h$constants$69.SCardListReadersWithDeviceInstanceIdA$MH().invokeExact(hContext, szDeviceInstanceId.address(), mszReaders.address(), pcchReaders.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardListReadersWithDeviceInstanceIdW$MH() {
        return cfapi_h$constants$69.SCardListReadersWithDeviceInstanceIdW$MH();
    }
    public static @C("LONG") int SCardListReadersWithDeviceInstanceIdW (@C("SCARDCONTEXT") long hContext, @C("LPCWSTR") Addressable szDeviceInstanceId, @C("LPWSTR") Addressable mszReaders, @C("LPDWORD") Addressable pcchReaders) {
        try {
            return (int)cfapi_h$constants$69.SCardListReadersWithDeviceInstanceIdW$MH().invokeExact(hContext, szDeviceInstanceId.address(), mszReaders.address(), pcchReaders.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SCardAudit$MH() {
        return cfapi_h$constants$69.SCardAudit$MH();
    }
    public static @C("LONG") int SCardAudit (@C("SCARDCONTEXT") long hContext, @C("DWORD") int dwEvent) {
        try {
            return (int)cfapi_h$constants$69.SCardAudit$MH().invokeExact(hContext, dwEvent);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle CreatePropertySheetPageA$MH() {
        return cfapi_h$constants$70.CreatePropertySheetPageA$MH();
    }
    public static @C("HPROPSHEETPAGE") MemoryAddress CreatePropertySheetPageA (@C("LPCPROPSHEETPAGEA") Addressable constPropSheetPagePointer) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$70.CreatePropertySheetPageA$MH().invokeExact(constPropSheetPagePointer.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle CreatePropertySheetPageW$MH() {
        return cfapi_h$constants$70.CreatePropertySheetPageW$MH();
    }
    public static @C("HPROPSHEETPAGE") MemoryAddress CreatePropertySheetPageW (@C("LPCPROPSHEETPAGEW") Addressable constPropSheetPagePointer) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$70.CreatePropertySheetPageW$MH().invokeExact(constPropSheetPagePointer.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DestroyPropertySheetPage$MH() {
        return cfapi_h$constants$70.DestroyPropertySheetPage$MH();
    }
    public static @C("BOOL") int DestroyPropertySheetPage (@C("HPROPSHEETPAGE") Addressable x0) {
        try {
            return (int)cfapi_h$constants$70.DestroyPropertySheetPage$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle PropertySheetA$MH() {
        return cfapi_h$constants$70.PropertySheetA$MH();
    }
    public static @C("INT_PTR") long PropertySheetA (@C("LPCPROPSHEETHEADERA") Addressable x0) {
        try {
            return (long)cfapi_h$constants$70.PropertySheetA$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle PropertySheetW$MH() {
        return cfapi_h$constants$70.PropertySheetW$MH();
    }
    public static @C("INT_PTR") long PropertySheetW (@C("LPCPROPSHEETHEADERW") Addressable x0) {
        try {
            return (long)cfapi_h$constants$70.PropertySheetW$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumPrintersA$MH() {
        return cfapi_h$constants$72.EnumPrintersA$MH();
    }
    public static @C("BOOL") int EnumPrintersA (@C("DWORD") int Flags, @C("LPSTR") Addressable Name, @C("DWORD") int Level, @C("LPBYTE") Addressable pPrinterEnum, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded, @C("LPDWORD") Addressable pcReturned) {
        try {
            return (int)cfapi_h$constants$72.EnumPrintersA$MH().invokeExact(Flags, Name.address(), Level, pPrinterEnum.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumPrintersW$MH() {
        return cfapi_h$constants$72.EnumPrintersW$MH();
    }
    public static @C("BOOL") int EnumPrintersW (@C("DWORD") int Flags, @C("LPWSTR") Addressable Name, @C("DWORD") int Level, @C("LPBYTE") Addressable pPrinterEnum, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded, @C("LPDWORD") Addressable pcReturned) {
        try {
            return (int)cfapi_h$constants$72.EnumPrintersW$MH().invokeExact(Flags, Name.address(), Level, pPrinterEnum.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetSpoolFileHandle$MH() {
        return cfapi_h$constants$72.GetSpoolFileHandle$MH();
    }
    public static @C("HANDLE") MemoryAddress GetSpoolFileHandle (@C("HANDLE") Addressable hPrinter) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$72.GetSpoolFileHandle$MH().invokeExact(hPrinter.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle CommitSpoolData$MH() {
        return cfapi_h$constants$72.CommitSpoolData$MH();
    }
    public static @C("HANDLE") MemoryAddress CommitSpoolData (@C("HANDLE") Addressable hPrinter, @C("HANDLE") Addressable hSpoolFile, @C("DWORD") int cbCommit) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$72.CommitSpoolData$MH().invokeExact(hPrinter.address(), hSpoolFile.address(), cbCommit);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle CloseSpoolFileHandle$MH() {
        return cfapi_h$constants$72.CloseSpoolFileHandle$MH();
    }
    public static @C("BOOL") int CloseSpoolFileHandle (@C("HANDLE") Addressable hPrinter, @C("HANDLE") Addressable hSpoolFile) {
        try {
            return (int)cfapi_h$constants$72.CloseSpoolFileHandle$MH().invokeExact(hPrinter.address(), hSpoolFile.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OpenPrinterA$MH() {
        return cfapi_h$constants$72.OpenPrinterA$MH();
    }
    public static @C("BOOL") int OpenPrinterA (@C("LPSTR") Addressable pPrinterName, @C("LPHANDLE") Addressable phPrinter, @C("LPPRINTER_DEFAULTSA") Addressable pDefault) {
        try {
            return (int)cfapi_h$constants$72.OpenPrinterA$MH().invokeExact(pPrinterName.address(), phPrinter.address(), pDefault.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OpenPrinterW$MH() {
        return cfapi_h$constants$72.OpenPrinterW$MH();
    }
    public static @C("BOOL") int OpenPrinterW (@C("LPWSTR") Addressable pPrinterName, @C("LPHANDLE") Addressable phPrinter, @C("LPPRINTER_DEFAULTSW") Addressable pDefault) {
        try {
            return (int)cfapi_h$constants$72.OpenPrinterW$MH().invokeExact(pPrinterName.address(), phPrinter.address(), pDefault.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ResetPrinterA$MH() {
        return cfapi_h$constants$72.ResetPrinterA$MH();
    }
    public static @C("BOOL") int ResetPrinterA (@C("HANDLE") Addressable hPrinter, @C("LPPRINTER_DEFAULTSA") Addressable pDefault) {
        try {
            return (int)cfapi_h$constants$72.ResetPrinterA$MH().invokeExact(hPrinter.address(), pDefault.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ResetPrinterW$MH() {
        return cfapi_h$constants$72.ResetPrinterW$MH();
    }
    public static @C("BOOL") int ResetPrinterW (@C("HANDLE") Addressable hPrinter, @C("LPPRINTER_DEFAULTSW") Addressable pDefault) {
        try {
            return (int)cfapi_h$constants$72.ResetPrinterW$MH().invokeExact(hPrinter.address(), pDefault.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SetJobA$MH() {
        return cfapi_h$constants$72.SetJobA$MH();
    }
    public static @C("BOOL") int SetJobA (@C("HANDLE") Addressable hPrinter, @C("DWORD") int JobId, @C("DWORD") int Level, @C("LPBYTE") Addressable pJob, @C("DWORD") int Command) {
        try {
            return (int)cfapi_h$constants$72.SetJobA$MH().invokeExact(hPrinter.address(), JobId, Level, pJob.address(), Command);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SetJobW$MH() {
        return cfapi_h$constants$72.SetJobW$MH();
    }
    public static @C("BOOL") int SetJobW (@C("HANDLE") Addressable hPrinter, @C("DWORD") int JobId, @C("DWORD") int Level, @C("LPBYTE") Addressable pJob, @C("DWORD") int Command) {
        try {
            return (int)cfapi_h$constants$72.SetJobW$MH().invokeExact(hPrinter.address(), JobId, Level, pJob.address(), Command);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetJobA$MH() {
        return cfapi_h$constants$72.GetJobA$MH();
    }
    public static @C("BOOL") int GetJobA (@C("HANDLE") Addressable hPrinter, @C("DWORD") int JobId, @C("DWORD") int Level, @C("LPBYTE") Addressable pJob, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded) {
        try {
            return (int)cfapi_h$constants$72.GetJobA$MH().invokeExact(hPrinter.address(), JobId, Level, pJob.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetJobW$MH() {
        return cfapi_h$constants$72.GetJobW$MH();
    }
    public static @C("BOOL") int GetJobW (@C("HANDLE") Addressable hPrinter, @C("DWORD") int JobId, @C("DWORD") int Level, @C("LPBYTE") Addressable pJob, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded) {
        try {
            return (int)cfapi_h$constants$72.GetJobW$MH().invokeExact(hPrinter.address(), JobId, Level, pJob.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumJobsA$MH() {
        return cfapi_h$constants$72.EnumJobsA$MH();
    }
    public static @C("BOOL") int EnumJobsA (@C("HANDLE") Addressable hPrinter, @C("DWORD") int FirstJob, @C("DWORD") int NoJobs, @C("DWORD") int Level, @C("LPBYTE") Addressable pJob, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded, @C("LPDWORD") Addressable pcReturned) {
        try {
            return (int)cfapi_h$constants$72.EnumJobsA$MH().invokeExact(hPrinter.address(), FirstJob, NoJobs, Level, pJob.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumJobsW$MH() {
        return cfapi_h$constants$72.EnumJobsW$MH();
    }
    public static @C("BOOL") int EnumJobsW (@C("HANDLE") Addressable hPrinter, @C("DWORD") int FirstJob, @C("DWORD") int NoJobs, @C("DWORD") int Level, @C("LPBYTE") Addressable pJob, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded, @C("LPDWORD") Addressable pcReturned) {
        try {
            return (int)cfapi_h$constants$72.EnumJobsW$MH().invokeExact(hPrinter.address(), FirstJob, NoJobs, Level, pJob.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddPrinterA$MH() {
        return cfapi_h$constants$72.AddPrinterA$MH();
    }
    public static @C("HANDLE") MemoryAddress AddPrinterA (@C("LPSTR") Addressable pName, @C("DWORD") int Level, @C("LPBYTE") Addressable pPrinter) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$72.AddPrinterA$MH().invokeExact(pName.address(), Level, pPrinter.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddPrinterW$MH() {
        return cfapi_h$constants$72.AddPrinterW$MH();
    }
    public static @C("HANDLE") MemoryAddress AddPrinterW (@C("LPWSTR") Addressable pName, @C("DWORD") int Level, @C("LPBYTE") Addressable pPrinter) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$72.AddPrinterW$MH().invokeExact(pName.address(), Level, pPrinter.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePrinter$MH() {
        return cfapi_h$constants$72.DeletePrinter$MH();
    }
    public static @C("BOOL") int DeletePrinter (@C("HANDLE") Addressable hPrinter) {
        try {
            return (int)cfapi_h$constants$72.DeletePrinter$MH().invokeExact(hPrinter.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SetPrinterA$MH() {
        return cfapi_h$constants$72.SetPrinterA$MH();
    }
    public static @C("BOOL") int SetPrinterA (@C("HANDLE") Addressable hPrinter, @C("DWORD") int Level, @C("LPBYTE") Addressable pPrinter, @C("DWORD") int Command) {
        try {
            return (int)cfapi_h$constants$72.SetPrinterA$MH().invokeExact(hPrinter.address(), Level, pPrinter.address(), Command);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SetPrinterW$MH() {
        return cfapi_h$constants$72.SetPrinterW$MH();
    }
    public static @C("BOOL") int SetPrinterW (@C("HANDLE") Addressable hPrinter, @C("DWORD") int Level, @C("LPBYTE") Addressable pPrinter, @C("DWORD") int Command) {
        try {
            return (int)cfapi_h$constants$72.SetPrinterW$MH().invokeExact(hPrinter.address(), Level, pPrinter.address(), Command);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetPrinterA$MH() {
        return cfapi_h$constants$72.GetPrinterA$MH();
    }
    public static @C("BOOL") int GetPrinterA (@C("HANDLE") Addressable hPrinter, @C("DWORD") int Level, @C("LPBYTE") Addressable pPrinter, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded) {
        try {
            return (int)cfapi_h$constants$72.GetPrinterA$MH().invokeExact(hPrinter.address(), Level, pPrinter.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetPrinterW$MH() {
        return cfapi_h$constants$72.GetPrinterW$MH();
    }
    public static @C("BOOL") int GetPrinterW (@C("HANDLE") Addressable hPrinter, @C("DWORD") int Level, @C("LPBYTE") Addressable pPrinter, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded) {
        try {
            return (int)cfapi_h$constants$72.GetPrinterW$MH().invokeExact(hPrinter.address(), Level, pPrinter.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddPrinterDriverA$MH() {
        return cfapi_h$constants$72.AddPrinterDriverA$MH();
    }
    public static @C("BOOL") int AddPrinterDriverA (@C("LPSTR") Addressable pName, @C("DWORD") int Level, @C("LPBYTE") Addressable pDriverInfo) {
        try {
            return (int)cfapi_h$constants$72.AddPrinterDriverA$MH().invokeExact(pName.address(), Level, pDriverInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddPrinterDriverW$MH() {
        return cfapi_h$constants$72.AddPrinterDriverW$MH();
    }
    public static @C("BOOL") int AddPrinterDriverW (@C("LPWSTR") Addressable pName, @C("DWORD") int Level, @C("LPBYTE") Addressable pDriverInfo) {
        try {
            return (int)cfapi_h$constants$72.AddPrinterDriverW$MH().invokeExact(pName.address(), Level, pDriverInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddPrinterDriverExA$MH() {
        return cfapi_h$constants$72.AddPrinterDriverExA$MH();
    }
    public static @C("BOOL") int AddPrinterDriverExA (@C("LPSTR") Addressable pName, @C("DWORD") int Level, @C("PBYTE") Addressable lpbDriverInfo, @C("DWORD") int dwFileCopyFlags) {
        try {
            return (int)cfapi_h$constants$72.AddPrinterDriverExA$MH().invokeExact(pName.address(), Level, lpbDriverInfo.address(), dwFileCopyFlags);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddPrinterDriverExW$MH() {
        return cfapi_h$constants$72.AddPrinterDriverExW$MH();
    }
    public static @C("BOOL") int AddPrinterDriverExW (@C("LPWSTR") Addressable pName, @C("DWORD") int Level, @C("PBYTE") Addressable lpbDriverInfo, @C("DWORD") int dwFileCopyFlags) {
        try {
            return (int)cfapi_h$constants$72.AddPrinterDriverExW$MH().invokeExact(pName.address(), Level, lpbDriverInfo.address(), dwFileCopyFlags);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumPrinterDriversA$MH() {
        return cfapi_h$constants$72.EnumPrinterDriversA$MH();
    }
    public static @C("BOOL") int EnumPrinterDriversA (@C("LPSTR") Addressable pName, @C("LPSTR") Addressable pEnvironment, @C("DWORD") int Level, @C("LPBYTE") Addressable pDriverInfo, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded, @C("LPDWORD") Addressable pcReturned) {
        try {
            return (int)cfapi_h$constants$72.EnumPrinterDriversA$MH().invokeExact(pName.address(), pEnvironment.address(), Level, pDriverInfo.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumPrinterDriversW$MH() {
        return cfapi_h$constants$72.EnumPrinterDriversW$MH();
    }
    public static @C("BOOL") int EnumPrinterDriversW (@C("LPWSTR") Addressable pName, @C("LPWSTR") Addressable pEnvironment, @C("DWORD") int Level, @C("LPBYTE") Addressable pDriverInfo, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded, @C("LPDWORD") Addressable pcReturned) {
        try {
            return (int)cfapi_h$constants$72.EnumPrinterDriversW$MH().invokeExact(pName.address(), pEnvironment.address(), Level, pDriverInfo.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetPrinterDriverA$MH() {
        return cfapi_h$constants$72.GetPrinterDriverA$MH();
    }
    public static @C("BOOL") int GetPrinterDriverA (@C("HANDLE") Addressable hPrinter, @C("LPSTR") Addressable pEnvironment, @C("DWORD") int Level, @C("LPBYTE") Addressable pDriverInfo, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded) {
        try {
            return (int)cfapi_h$constants$72.GetPrinterDriverA$MH().invokeExact(hPrinter.address(), pEnvironment.address(), Level, pDriverInfo.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetPrinterDriverW$MH() {
        return cfapi_h$constants$72.GetPrinterDriverW$MH();
    }
    public static @C("BOOL") int GetPrinterDriverW (@C("HANDLE") Addressable hPrinter, @C("LPWSTR") Addressable pEnvironment, @C("DWORD") int Level, @C("LPBYTE") Addressable pDriverInfo, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded) {
        try {
            return (int)cfapi_h$constants$72.GetPrinterDriverW$MH().invokeExact(hPrinter.address(), pEnvironment.address(), Level, pDriverInfo.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetPrinterDriverDirectoryA$MH() {
        return cfapi_h$constants$72.GetPrinterDriverDirectoryA$MH();
    }
    public static @C("BOOL") int GetPrinterDriverDirectoryA (@C("LPSTR") Addressable pName, @C("LPSTR") Addressable pEnvironment, @C("DWORD") int Level, @C("LPBYTE") Addressable pDriverDirectory, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded) {
        try {
            return (int)cfapi_h$constants$72.GetPrinterDriverDirectoryA$MH().invokeExact(pName.address(), pEnvironment.address(), Level, pDriverDirectory.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetPrinterDriverDirectoryW$MH() {
        return cfapi_h$constants$72.GetPrinterDriverDirectoryW$MH();
    }
    public static @C("BOOL") int GetPrinterDriverDirectoryW (@C("LPWSTR") Addressable pName, @C("LPWSTR") Addressable pEnvironment, @C("DWORD") int Level, @C("LPBYTE") Addressable pDriverDirectory, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded) {
        try {
            return (int)cfapi_h$constants$72.GetPrinterDriverDirectoryW$MH().invokeExact(pName.address(), pEnvironment.address(), Level, pDriverDirectory.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePrinterDriverA$MH() {
        return cfapi_h$constants$72.DeletePrinterDriverA$MH();
    }
    public static @C("BOOL") int DeletePrinterDriverA (@C("LPSTR") Addressable pName, @C("LPSTR") Addressable pEnvironment, @C("LPSTR") Addressable pDriverName) {
        try {
            return (int)cfapi_h$constants$72.DeletePrinterDriverA$MH().invokeExact(pName.address(), pEnvironment.address(), pDriverName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePrinterDriverW$MH() {
        return cfapi_h$constants$72.DeletePrinterDriverW$MH();
    }
    public static @C("BOOL") int DeletePrinterDriverW (@C("LPWSTR") Addressable pName, @C("LPWSTR") Addressable pEnvironment, @C("LPWSTR") Addressable pDriverName) {
        try {
            return (int)cfapi_h$constants$72.DeletePrinterDriverW$MH().invokeExact(pName.address(), pEnvironment.address(), pDriverName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePrinterDriverExA$MH() {
        return cfapi_h$constants$72.DeletePrinterDriverExA$MH();
    }
    public static @C("BOOL") int DeletePrinterDriverExA (@C("LPSTR") Addressable pName, @C("LPSTR") Addressable pEnvironment, @C("LPSTR") Addressable pDriverName, @C("DWORD") int dwDeleteFlag, @C("DWORD") int dwVersionFlag) {
        try {
            return (int)cfapi_h$constants$72.DeletePrinterDriverExA$MH().invokeExact(pName.address(), pEnvironment.address(), pDriverName.address(), dwDeleteFlag, dwVersionFlag);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePrinterDriverExW$MH() {
        return cfapi_h$constants$72.DeletePrinterDriverExW$MH();
    }
    public static @C("BOOL") int DeletePrinterDriverExW (@C("LPWSTR") Addressable pName, @C("LPWSTR") Addressable pEnvironment, @C("LPWSTR") Addressable pDriverName, @C("DWORD") int dwDeleteFlag, @C("DWORD") int dwVersionFlag) {
        try {
            return (int)cfapi_h$constants$72.DeletePrinterDriverExW$MH().invokeExact(pName.address(), pEnvironment.address(), pDriverName.address(), dwDeleteFlag, dwVersionFlag);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddPrintProcessorA$MH() {
        return cfapi_h$constants$72.AddPrintProcessorA$MH();
    }
    public static @C("BOOL") int AddPrintProcessorA (@C("LPSTR") Addressable pName, @C("LPSTR") Addressable pEnvironment, @C("LPSTR") Addressable pPathName, @C("LPSTR") Addressable pPrintProcessorName) {
        try {
            return (int)cfapi_h$constants$72.AddPrintProcessorA$MH().invokeExact(pName.address(), pEnvironment.address(), pPathName.address(), pPrintProcessorName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddPrintProcessorW$MH() {
        return cfapi_h$constants$72.AddPrintProcessorW$MH();
    }
    public static @C("BOOL") int AddPrintProcessorW (@C("LPWSTR") Addressable pName, @C("LPWSTR") Addressable pEnvironment, @C("LPWSTR") Addressable pPathName, @C("LPWSTR") Addressable pPrintProcessorName) {
        try {
            return (int)cfapi_h$constants$72.AddPrintProcessorW$MH().invokeExact(pName.address(), pEnvironment.address(), pPathName.address(), pPrintProcessorName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumPrintProcessorsA$MH() {
        return cfapi_h$constants$72.EnumPrintProcessorsA$MH();
    }
    public static @C("BOOL") int EnumPrintProcessorsA (@C("LPSTR") Addressable pName, @C("LPSTR") Addressable pEnvironment, @C("DWORD") int Level, @C("LPBYTE") Addressable pPrintProcessorInfo, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded, @C("LPDWORD") Addressable pcReturned) {
        try {
            return (int)cfapi_h$constants$72.EnumPrintProcessorsA$MH().invokeExact(pName.address(), pEnvironment.address(), Level, pPrintProcessorInfo.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumPrintProcessorsW$MH() {
        return cfapi_h$constants$72.EnumPrintProcessorsW$MH();
    }
    public static @C("BOOL") int EnumPrintProcessorsW (@C("LPWSTR") Addressable pName, @C("LPWSTR") Addressable pEnvironment, @C("DWORD") int Level, @C("LPBYTE") Addressable pPrintProcessorInfo, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded, @C("LPDWORD") Addressable pcReturned) {
        try {
            return (int)cfapi_h$constants$72.EnumPrintProcessorsW$MH().invokeExact(pName.address(), pEnvironment.address(), Level, pPrintProcessorInfo.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetPrintProcessorDirectoryA$MH() {
        return cfapi_h$constants$72.GetPrintProcessorDirectoryA$MH();
    }
    public static @C("BOOL") int GetPrintProcessorDirectoryA (@C("LPSTR") Addressable pName, @C("LPSTR") Addressable pEnvironment, @C("DWORD") int Level, @C("LPBYTE") Addressable pPrintProcessorInfo, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded) {
        try {
            return (int)cfapi_h$constants$72.GetPrintProcessorDirectoryA$MH().invokeExact(pName.address(), pEnvironment.address(), Level, pPrintProcessorInfo.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetPrintProcessorDirectoryW$MH() {
        return cfapi_h$constants$72.GetPrintProcessorDirectoryW$MH();
    }
    public static @C("BOOL") int GetPrintProcessorDirectoryW (@C("LPWSTR") Addressable pName, @C("LPWSTR") Addressable pEnvironment, @C("DWORD") int Level, @C("LPBYTE") Addressable pPrintProcessorInfo, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded) {
        try {
            return (int)cfapi_h$constants$72.GetPrintProcessorDirectoryW$MH().invokeExact(pName.address(), pEnvironment.address(), Level, pPrintProcessorInfo.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumPrintProcessorDatatypesA$MH() {
        return cfapi_h$constants$72.EnumPrintProcessorDatatypesA$MH();
    }
    public static @C("BOOL") int EnumPrintProcessorDatatypesA (@C("LPSTR") Addressable pName, @C("LPSTR") Addressable pPrintProcessorName, @C("DWORD") int Level, @C("LPBYTE") Addressable pDatatypes, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded, @C("LPDWORD") Addressable pcReturned) {
        try {
            return (int)cfapi_h$constants$72.EnumPrintProcessorDatatypesA$MH().invokeExact(pName.address(), pPrintProcessorName.address(), Level, pDatatypes.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumPrintProcessorDatatypesW$MH() {
        return cfapi_h$constants$72.EnumPrintProcessorDatatypesW$MH();
    }
    public static @C("BOOL") int EnumPrintProcessorDatatypesW (@C("LPWSTR") Addressable pName, @C("LPWSTR") Addressable pPrintProcessorName, @C("DWORD") int Level, @C("LPBYTE") Addressable pDatatypes, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded, @C("LPDWORD") Addressable pcReturned) {
        try {
            return (int)cfapi_h$constants$72.EnumPrintProcessorDatatypesW$MH().invokeExact(pName.address(), pPrintProcessorName.address(), Level, pDatatypes.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePrintProcessorA$MH() {
        return cfapi_h$constants$72.DeletePrintProcessorA$MH();
    }
    public static @C("BOOL") int DeletePrintProcessorA (@C("LPSTR") Addressable pName, @C("LPSTR") Addressable pEnvironment, @C("LPSTR") Addressable pPrintProcessorName) {
        try {
            return (int)cfapi_h$constants$72.DeletePrintProcessorA$MH().invokeExact(pName.address(), pEnvironment.address(), pPrintProcessorName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePrintProcessorW$MH() {
        return cfapi_h$constants$72.DeletePrintProcessorW$MH();
    }
    public static @C("BOOL") int DeletePrintProcessorW (@C("LPWSTR") Addressable pName, @C("LPWSTR") Addressable pEnvironment, @C("LPWSTR") Addressable pPrintProcessorName) {
        try {
            return (int)cfapi_h$constants$72.DeletePrintProcessorW$MH().invokeExact(pName.address(), pEnvironment.address(), pPrintProcessorName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle StartDocPrinterA$MH() {
        return cfapi_h$constants$72.StartDocPrinterA$MH();
    }
    public static @C("DWORD") int StartDocPrinterA (@C("HANDLE") Addressable hPrinter, @C("DWORD") int Level, @C("LPBYTE") Addressable pDocInfo) {
        try {
            return (int)cfapi_h$constants$72.StartDocPrinterA$MH().invokeExact(hPrinter.address(), Level, pDocInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle StartDocPrinterW$MH() {
        return cfapi_h$constants$72.StartDocPrinterW$MH();
    }
    public static @C("DWORD") int StartDocPrinterW (@C("HANDLE") Addressable hPrinter, @C("DWORD") int Level, @C("LPBYTE") Addressable pDocInfo) {
        try {
            return (int)cfapi_h$constants$72.StartDocPrinterW$MH().invokeExact(hPrinter.address(), Level, pDocInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle StartPagePrinter$MH() {
        return cfapi_h$constants$72.StartPagePrinter$MH();
    }
    public static @C("BOOL") int StartPagePrinter (@C("HANDLE") Addressable hPrinter) {
        try {
            return (int)cfapi_h$constants$72.StartPagePrinter$MH().invokeExact(hPrinter.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle WritePrinter$MH() {
        return cfapi_h$constants$72.WritePrinter$MH();
    }
    public static @C("BOOL") int WritePrinter (@C("HANDLE") Addressable hPrinter, @C("LPVOID") Addressable pBuf, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcWritten) {
        try {
            return (int)cfapi_h$constants$72.WritePrinter$MH().invokeExact(hPrinter.address(), pBuf.address(), cbBuf, pcWritten.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle FlushPrinter$MH() {
        return cfapi_h$constants$72.FlushPrinter$MH();
    }
    public static @C("BOOL") int FlushPrinter (@C("HANDLE") Addressable hPrinter, @C("LPVOID") Addressable pBuf, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcWritten, @C("DWORD") int cSleep) {
        try {
            return (int)cfapi_h$constants$72.FlushPrinter$MH().invokeExact(hPrinter.address(), pBuf.address(), cbBuf, pcWritten.address(), cSleep);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EndPagePrinter$MH() {
        return cfapi_h$constants$72.EndPagePrinter$MH();
    }
    public static @C("BOOL") int EndPagePrinter (@C("HANDLE") Addressable hPrinter) {
        try {
            return (int)cfapi_h$constants$72.EndPagePrinter$MH().invokeExact(hPrinter.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AbortPrinter$MH() {
        return cfapi_h$constants$72.AbortPrinter$MH();
    }
    public static @C("BOOL") int AbortPrinter (@C("HANDLE") Addressable hPrinter) {
        try {
            return (int)cfapi_h$constants$72.AbortPrinter$MH().invokeExact(hPrinter.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ReadPrinter$MH() {
        return cfapi_h$constants$72.ReadPrinter$MH();
    }
    public static @C("BOOL") int ReadPrinter (@C("HANDLE") Addressable hPrinter, @C("LPVOID") Addressable pBuf, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pNoBytesRead) {
        try {
            return (int)cfapi_h$constants$72.ReadPrinter$MH().invokeExact(hPrinter.address(), pBuf.address(), cbBuf, pNoBytesRead.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EndDocPrinter$MH() {
        return cfapi_h$constants$72.EndDocPrinter$MH();
    }
    public static @C("BOOL") int EndDocPrinter (@C("HANDLE") Addressable hPrinter) {
        try {
            return (int)cfapi_h$constants$72.EndDocPrinter$MH().invokeExact(hPrinter.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddJobA$MH() {
        return cfapi_h$constants$72.AddJobA$MH();
    }
    public static @C("BOOL") int AddJobA (@C("HANDLE") Addressable hPrinter, @C("DWORD") int Level, @C("LPBYTE") Addressable pData, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded) {
        try {
            return (int)cfapi_h$constants$72.AddJobA$MH().invokeExact(hPrinter.address(), Level, pData.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddJobW$MH() {
        return cfapi_h$constants$72.AddJobW$MH();
    }
    public static @C("BOOL") int AddJobW (@C("HANDLE") Addressable hPrinter, @C("DWORD") int Level, @C("LPBYTE") Addressable pData, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded) {
        try {
            return (int)cfapi_h$constants$72.AddJobW$MH().invokeExact(hPrinter.address(), Level, pData.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ScheduleJob$MH() {
        return cfapi_h$constants$72.ScheduleJob$MH();
    }
    public static @C("BOOL") int ScheduleJob (@C("HANDLE") Addressable hPrinter, @C("DWORD") int JobId) {
        try {
            return (int)cfapi_h$constants$72.ScheduleJob$MH().invokeExact(hPrinter.address(), JobId);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle PrinterProperties$MH() {
        return cfapi_h$constants$72.PrinterProperties$MH();
    }
    public static @C("BOOL") int PrinterProperties (@C("HWND") Addressable hWnd, @C("HANDLE") Addressable hPrinter) {
        try {
            return (int)cfapi_h$constants$72.PrinterProperties$MH().invokeExact(hWnd.address(), hPrinter.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DocumentPropertiesA$MH() {
        return cfapi_h$constants$72.DocumentPropertiesA$MH();
    }
    public static @C("LONG") int DocumentPropertiesA (@C("HWND") Addressable hWnd, @C("HANDLE") Addressable hPrinter, @C("LPSTR") Addressable pDeviceName, @C("PDEVMODEA") Addressable pDevModeOutput, @C("PDEVMODEA") Addressable pDevModeInput, @C("DWORD") int fMode) {
        try {
            return (int)cfapi_h$constants$72.DocumentPropertiesA$MH().invokeExact(hWnd.address(), hPrinter.address(), pDeviceName.address(), pDevModeOutput.address(), pDevModeInput.address(), fMode);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DocumentPropertiesW$MH() {
        return cfapi_h$constants$72.DocumentPropertiesW$MH();
    }
    public static @C("LONG") int DocumentPropertiesW (@C("HWND") Addressable hWnd, @C("HANDLE") Addressable hPrinter, @C("LPWSTR") Addressable pDeviceName, @C("PDEVMODEW") Addressable pDevModeOutput, @C("PDEVMODEW") Addressable pDevModeInput, @C("DWORD") int fMode) {
        try {
            return (int)cfapi_h$constants$72.DocumentPropertiesW$MH().invokeExact(hWnd.address(), hPrinter.address(), pDeviceName.address(), pDevModeOutput.address(), pDevModeInput.address(), fMode);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AdvancedDocumentPropertiesA$MH() {
        return cfapi_h$constants$72.AdvancedDocumentPropertiesA$MH();
    }
    public static @C("LONG") int AdvancedDocumentPropertiesA (@C("HWND") Addressable hWnd, @C("HANDLE") Addressable hPrinter, @C("LPSTR") Addressable pDeviceName, @C("PDEVMODEA") Addressable pDevModeOutput, @C("PDEVMODEA") Addressable pDevModeInput) {
        try {
            return (int)cfapi_h$constants$72.AdvancedDocumentPropertiesA$MH().invokeExact(hWnd.address(), hPrinter.address(), pDeviceName.address(), pDevModeOutput.address(), pDevModeInput.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AdvancedDocumentPropertiesW$MH() {
        return cfapi_h$constants$72.AdvancedDocumentPropertiesW$MH();
    }
    public static @C("LONG") int AdvancedDocumentPropertiesW (@C("HWND") Addressable hWnd, @C("HANDLE") Addressable hPrinter, @C("LPWSTR") Addressable pDeviceName, @C("PDEVMODEW") Addressable pDevModeOutput, @C("PDEVMODEW") Addressable pDevModeInput) {
        try {
            return (int)cfapi_h$constants$72.AdvancedDocumentPropertiesW$MH().invokeExact(hWnd.address(), hPrinter.address(), pDeviceName.address(), pDevModeOutput.address(), pDevModeInput.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ExtDeviceMode$MH() {
        return cfapi_h$constants$72.ExtDeviceMode$MH();
    }
    public static @C("LONG") int ExtDeviceMode (@C("HWND") Addressable hWnd, @C("HANDLE") Addressable hInst, @C("LPDEVMODEA") Addressable pDevModeOutput, @C("LPSTR") Addressable pDeviceName, @C("LPSTR") Addressable pPort, @C("LPDEVMODEA") Addressable pDevModeInput, @C("LPSTR") Addressable pProfile, @C("DWORD") int fMode) {
        try {
            return (int)cfapi_h$constants$72.ExtDeviceMode$MH().invokeExact(hWnd.address(), hInst.address(), pDevModeOutput.address(), pDeviceName.address(), pPort.address(), pDevModeInput.address(), pProfile.address(), fMode);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetPrinterDataA$MH() {
        return cfapi_h$constants$72.GetPrinterDataA$MH();
    }
    public static @C("DWORD") int GetPrinterDataA (@C("HANDLE") Addressable hPrinter, @C("LPSTR") Addressable pValueName, @C("LPDWORD") Addressable pType, @C("LPBYTE") Addressable pData, @C("DWORD") int nSize, @C("LPDWORD") Addressable pcbNeeded) {
        try {
            return (int)cfapi_h$constants$72.GetPrinterDataA$MH().invokeExact(hPrinter.address(), pValueName.address(), pType.address(), pData.address(), nSize, pcbNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetPrinterDataW$MH() {
        return cfapi_h$constants$72.GetPrinterDataW$MH();
    }
    public static @C("DWORD") int GetPrinterDataW (@C("HANDLE") Addressable hPrinter, @C("LPWSTR") Addressable pValueName, @C("LPDWORD") Addressable pType, @C("LPBYTE") Addressable pData, @C("DWORD") int nSize, @C("LPDWORD") Addressable pcbNeeded) {
        try {
            return (int)cfapi_h$constants$72.GetPrinterDataW$MH().invokeExact(hPrinter.address(), pValueName.address(), pType.address(), pData.address(), nSize, pcbNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetPrinterDataExA$MH() {
        return cfapi_h$constants$72.GetPrinterDataExA$MH();
    }
    public static @C("DWORD") int GetPrinterDataExA (@C("HANDLE") Addressable hPrinter, @C("LPCSTR") Addressable pKeyName, @C("LPCSTR") Addressable pValueName, @C("LPDWORD") Addressable pType, @C("LPBYTE") Addressable pData, @C("DWORD") int nSize, @C("LPDWORD") Addressable pcbNeeded) {
        try {
            return (int)cfapi_h$constants$72.GetPrinterDataExA$MH().invokeExact(hPrinter.address(), pKeyName.address(), pValueName.address(), pType.address(), pData.address(), nSize, pcbNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetPrinterDataExW$MH() {
        return cfapi_h$constants$72.GetPrinterDataExW$MH();
    }
    public static @C("DWORD") int GetPrinterDataExW (@C("HANDLE") Addressable hPrinter, @C("LPCWSTR") Addressable pKeyName, @C("LPCWSTR") Addressable pValueName, @C("LPDWORD") Addressable pType, @C("LPBYTE") Addressable pData, @C("DWORD") int nSize, @C("LPDWORD") Addressable pcbNeeded) {
        try {
            return (int)cfapi_h$constants$72.GetPrinterDataExW$MH().invokeExact(hPrinter.address(), pKeyName.address(), pValueName.address(), pType.address(), pData.address(), nSize, pcbNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumPrinterDataA$MH() {
        return cfapi_h$constants$72.EnumPrinterDataA$MH();
    }
    public static @C("DWORD") int EnumPrinterDataA (@C("HANDLE") Addressable hPrinter, @C("DWORD") int dwIndex, @C("LPSTR") Addressable pValueName, @C("DWORD") int cbValueName, @C("LPDWORD") Addressable pcbValueName, @C("LPDWORD") Addressable pType, @C("LPBYTE") Addressable pData, @C("DWORD") int cbData, @C("LPDWORD") Addressable pcbData) {
        try {
            return (int)cfapi_h$constants$72.EnumPrinterDataA$MH().invokeExact(hPrinter.address(), dwIndex, pValueName.address(), cbValueName, pcbValueName.address(), pType.address(), pData.address(), cbData, pcbData.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumPrinterDataW$MH() {
        return cfapi_h$constants$72.EnumPrinterDataW$MH();
    }
    public static @C("DWORD") int EnumPrinterDataW (@C("HANDLE") Addressable hPrinter, @C("DWORD") int dwIndex, @C("LPWSTR") Addressable pValueName, @C("DWORD") int cbValueName, @C("LPDWORD") Addressable pcbValueName, @C("LPDWORD") Addressable pType, @C("LPBYTE") Addressable pData, @C("DWORD") int cbData, @C("LPDWORD") Addressable pcbData) {
        try {
            return (int)cfapi_h$constants$72.EnumPrinterDataW$MH().invokeExact(hPrinter.address(), dwIndex, pValueName.address(), cbValueName, pcbValueName.address(), pType.address(), pData.address(), cbData, pcbData.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumPrinterDataExA$MH() {
        return cfapi_h$constants$72.EnumPrinterDataExA$MH();
    }
    public static @C("DWORD") int EnumPrinterDataExA (@C("HANDLE") Addressable hPrinter, @C("LPCSTR") Addressable pKeyName, @C("LPBYTE") Addressable pEnumValues, @C("DWORD") int cbEnumValues, @C("LPDWORD") Addressable pcbEnumValues, @C("LPDWORD") Addressable pnEnumValues) {
        try {
            return (int)cfapi_h$constants$72.EnumPrinterDataExA$MH().invokeExact(hPrinter.address(), pKeyName.address(), pEnumValues.address(), cbEnumValues, pcbEnumValues.address(), pnEnumValues.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumPrinterDataExW$MH() {
        return cfapi_h$constants$72.EnumPrinterDataExW$MH();
    }
    public static @C("DWORD") int EnumPrinterDataExW (@C("HANDLE") Addressable hPrinter, @C("LPCWSTR") Addressable pKeyName, @C("LPBYTE") Addressable pEnumValues, @C("DWORD") int cbEnumValues, @C("LPDWORD") Addressable pcbEnumValues, @C("LPDWORD") Addressable pnEnumValues) {
        try {
            return (int)cfapi_h$constants$72.EnumPrinterDataExW$MH().invokeExact(hPrinter.address(), pKeyName.address(), pEnumValues.address(), cbEnumValues, pcbEnumValues.address(), pnEnumValues.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumPrinterKeyA$MH() {
        return cfapi_h$constants$72.EnumPrinterKeyA$MH();
    }
    public static @C("DWORD") int EnumPrinterKeyA (@C("HANDLE") Addressable hPrinter, @C("LPCSTR") Addressable pKeyName, @C("LPSTR") Addressable pSubkey, @C("DWORD") int cbSubkey, @C("LPDWORD") Addressable pcbSubkey) {
        try {
            return (int)cfapi_h$constants$72.EnumPrinterKeyA$MH().invokeExact(hPrinter.address(), pKeyName.address(), pSubkey.address(), cbSubkey, pcbSubkey.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumPrinterKeyW$MH() {
        return cfapi_h$constants$72.EnumPrinterKeyW$MH();
    }
    public static @C("DWORD") int EnumPrinterKeyW (@C("HANDLE") Addressable hPrinter, @C("LPCWSTR") Addressable pKeyName, @C("LPWSTR") Addressable pSubkey, @C("DWORD") int cbSubkey, @C("LPDWORD") Addressable pcbSubkey) {
        try {
            return (int)cfapi_h$constants$72.EnumPrinterKeyW$MH().invokeExact(hPrinter.address(), pKeyName.address(), pSubkey.address(), cbSubkey, pcbSubkey.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SetPrinterDataA$MH() {
        return cfapi_h$constants$72.SetPrinterDataA$MH();
    }
    public static @C("DWORD") int SetPrinterDataA (@C("HANDLE") Addressable hPrinter, @C("LPSTR") Addressable pValueName, @C("DWORD") int Type, @C("LPBYTE") Addressable pData, @C("DWORD") int cbData) {
        try {
            return (int)cfapi_h$constants$72.SetPrinterDataA$MH().invokeExact(hPrinter.address(), pValueName.address(), Type, pData.address(), cbData);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SetPrinterDataW$MH() {
        return cfapi_h$constants$72.SetPrinterDataW$MH();
    }
    public static @C("DWORD") int SetPrinterDataW (@C("HANDLE") Addressable hPrinter, @C("LPWSTR") Addressable pValueName, @C("DWORD") int Type, @C("LPBYTE") Addressable pData, @C("DWORD") int cbData) {
        try {
            return (int)cfapi_h$constants$72.SetPrinterDataW$MH().invokeExact(hPrinter.address(), pValueName.address(), Type, pData.address(), cbData);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SetPrinterDataExA$MH() {
        return cfapi_h$constants$72.SetPrinterDataExA$MH();
    }
    public static @C("DWORD") int SetPrinterDataExA (@C("HANDLE") Addressable hPrinter, @C("LPCSTR") Addressable pKeyName, @C("LPCSTR") Addressable pValueName, @C("DWORD") int Type, @C("LPBYTE") Addressable pData, @C("DWORD") int cbData) {
        try {
            return (int)cfapi_h$constants$72.SetPrinterDataExA$MH().invokeExact(hPrinter.address(), pKeyName.address(), pValueName.address(), Type, pData.address(), cbData);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SetPrinterDataExW$MH() {
        return cfapi_h$constants$72.SetPrinterDataExW$MH();
    }
    public static @C("DWORD") int SetPrinterDataExW (@C("HANDLE") Addressable hPrinter, @C("LPCWSTR") Addressable pKeyName, @C("LPCWSTR") Addressable pValueName, @C("DWORD") int Type, @C("LPBYTE") Addressable pData, @C("DWORD") int cbData) {
        try {
            return (int)cfapi_h$constants$72.SetPrinterDataExW$MH().invokeExact(hPrinter.address(), pKeyName.address(), pValueName.address(), Type, pData.address(), cbData);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePrinterDataA$MH() {
        return cfapi_h$constants$72.DeletePrinterDataA$MH();
    }
    public static @C("DWORD") int DeletePrinterDataA (@C("HANDLE") Addressable hPrinter, @C("LPSTR") Addressable pValueName) {
        try {
            return (int)cfapi_h$constants$72.DeletePrinterDataA$MH().invokeExact(hPrinter.address(), pValueName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePrinterDataW$MH() {
        return cfapi_h$constants$72.DeletePrinterDataW$MH();
    }
    public static @C("DWORD") int DeletePrinterDataW (@C("HANDLE") Addressable hPrinter, @C("LPWSTR") Addressable pValueName) {
        try {
            return (int)cfapi_h$constants$72.DeletePrinterDataW$MH().invokeExact(hPrinter.address(), pValueName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePrinterDataExA$MH() {
        return cfapi_h$constants$72.DeletePrinterDataExA$MH();
    }
    public static @C("DWORD") int DeletePrinterDataExA (@C("HANDLE") Addressable hPrinter, @C("LPCSTR") Addressable pKeyName, @C("LPCSTR") Addressable pValueName) {
        try {
            return (int)cfapi_h$constants$72.DeletePrinterDataExA$MH().invokeExact(hPrinter.address(), pKeyName.address(), pValueName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePrinterDataExW$MH() {
        return cfapi_h$constants$72.DeletePrinterDataExW$MH();
    }
    public static @C("DWORD") int DeletePrinterDataExW (@C("HANDLE") Addressable hPrinter, @C("LPCWSTR") Addressable pKeyName, @C("LPCWSTR") Addressable pValueName) {
        try {
            return (int)cfapi_h$constants$72.DeletePrinterDataExW$MH().invokeExact(hPrinter.address(), pKeyName.address(), pValueName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePrinterKeyA$MH() {
        return cfapi_h$constants$72.DeletePrinterKeyA$MH();
    }
    public static @C("DWORD") int DeletePrinterKeyA (@C("HANDLE") Addressable hPrinter, @C("LPCSTR") Addressable pKeyName) {
        try {
            return (int)cfapi_h$constants$72.DeletePrinterKeyA$MH().invokeExact(hPrinter.address(), pKeyName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePrinterKeyW$MH() {
        return cfapi_h$constants$72.DeletePrinterKeyW$MH();
    }
    public static @C("DWORD") int DeletePrinterKeyW (@C("HANDLE") Addressable hPrinter, @C("LPCWSTR") Addressable pKeyName) {
        try {
            return (int)cfapi_h$constants$72.DeletePrinterKeyW$MH().invokeExact(hPrinter.address(), pKeyName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int BIDI_NULL() {
        return cfapi_h$constants$72.BIDI_NULL();
    }
    public static @C("int") int BIDI_INT() {
        return cfapi_h$constants$72.BIDI_INT();
    }
    public static @C("int") int BIDI_FLOAT() {
        return cfapi_h$constants$72.BIDI_FLOAT();
    }
    public static @C("int") int BIDI_BOOL() {
        return cfapi_h$constants$72.BIDI_BOOL();
    }
    public static @C("int") int BIDI_STRING() {
        return cfapi_h$constants$72.BIDI_STRING();
    }
    public static @C("int") int BIDI_TEXT() {
        return cfapi_h$constants$72.BIDI_TEXT();
    }
    public static @C("int") int BIDI_ENUM() {
        return cfapi_h$constants$72.BIDI_ENUM();
    }
    public static @C("int") int BIDI_BLOB() {
        return cfapi_h$constants$72.BIDI_BLOB();
    }
    public static  MethodHandle WaitForPrinterChange$MH() {
        return cfapi_h$constants$73.WaitForPrinterChange$MH();
    }
    public static @C("DWORD") int WaitForPrinterChange (@C("HANDLE") Addressable hPrinter, @C("DWORD") int Flags) {
        try {
            return (int)cfapi_h$constants$73.WaitForPrinterChange$MH().invokeExact(hPrinter.address(), Flags);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle FindFirstPrinterChangeNotification$MH() {
        return cfapi_h$constants$73.FindFirstPrinterChangeNotification$MH();
    }
    public static @C("HANDLE") MemoryAddress FindFirstPrinterChangeNotification (@C("HANDLE") Addressable hPrinter, @C("DWORD") int fdwFilter, @C("DWORD") int fdwOptions, @C("PVOID") Addressable pPrinterNotifyOptions) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73.FindFirstPrinterChangeNotification$MH().invokeExact(hPrinter.address(), fdwFilter, fdwOptions, pPrinterNotifyOptions.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle FindNextPrinterChangeNotification$MH() {
        return cfapi_h$constants$73.FindNextPrinterChangeNotification$MH();
    }
    public static @C("BOOL") int FindNextPrinterChangeNotification (@C("HANDLE") Addressable hChange, @C("PDWORD") Addressable pdwChange, @C("LPVOID") Addressable pvReserved, @C("LPVOID*") Addressable ppPrinterNotifyInfo) {
        try {
            return (int)cfapi_h$constants$73.FindNextPrinterChangeNotification$MH().invokeExact(hChange.address(), pdwChange.address(), pvReserved.address(), ppPrinterNotifyInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle FreePrinterNotifyInfo$MH() {
        return cfapi_h$constants$73.FreePrinterNotifyInfo$MH();
    }
    public static @C("BOOL") int FreePrinterNotifyInfo (@C("PPRINTER_NOTIFY_INFO") Addressable pPrinterNotifyInfo) {
        try {
            return (int)cfapi_h$constants$73.FreePrinterNotifyInfo$MH().invokeExact(pPrinterNotifyInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle FindClosePrinterChangeNotification$MH() {
        return cfapi_h$constants$73.FindClosePrinterChangeNotification$MH();
    }
    public static @C("BOOL") int FindClosePrinterChangeNotification (@C("HANDLE") Addressable hChange) {
        try {
            return (int)cfapi_h$constants$73.FindClosePrinterChangeNotification$MH().invokeExact(hChange.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle PrinterMessageBoxA$MH() {
        return cfapi_h$constants$73.PrinterMessageBoxA$MH();
    }
    public static @C("DWORD") int PrinterMessageBoxA (@C("HANDLE") Addressable hPrinter, @C("DWORD") int Error, @C("HWND") Addressable hWnd, @C("LPSTR") Addressable pText, @C("LPSTR") Addressable pCaption, @C("DWORD") int dwType) {
        try {
            return (int)cfapi_h$constants$73.PrinterMessageBoxA$MH().invokeExact(hPrinter.address(), Error, hWnd.address(), pText.address(), pCaption.address(), dwType);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle PrinterMessageBoxW$MH() {
        return cfapi_h$constants$73.PrinterMessageBoxW$MH();
    }
    public static @C("DWORD") int PrinterMessageBoxW (@C("HANDLE") Addressable hPrinter, @C("DWORD") int Error, @C("HWND") Addressable hWnd, @C("LPWSTR") Addressable pText, @C("LPWSTR") Addressable pCaption, @C("DWORD") int dwType) {
        try {
            return (int)cfapi_h$constants$73.PrinterMessageBoxW$MH().invokeExact(hPrinter.address(), Error, hWnd.address(), pText.address(), pCaption.address(), dwType);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ClosePrinter$MH() {
        return cfapi_h$constants$73.ClosePrinter$MH();
    }
    public static @C("BOOL") int ClosePrinter (@C("HANDLE") Addressable hPrinter) {
        try {
            return (int)cfapi_h$constants$73.ClosePrinter$MH().invokeExact(hPrinter.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddFormA$MH() {
        return cfapi_h$constants$73.AddFormA$MH();
    }
    public static @C("BOOL") int AddFormA (@C("HANDLE") Addressable hPrinter, @C("DWORD") int Level, @C("LPBYTE") Addressable pForm) {
        try {
            return (int)cfapi_h$constants$73.AddFormA$MH().invokeExact(hPrinter.address(), Level, pForm.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddFormW$MH() {
        return cfapi_h$constants$73.AddFormW$MH();
    }
    public static @C("BOOL") int AddFormW (@C("HANDLE") Addressable hPrinter, @C("DWORD") int Level, @C("LPBYTE") Addressable pForm) {
        try {
            return (int)cfapi_h$constants$73.AddFormW$MH().invokeExact(hPrinter.address(), Level, pForm.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeleteFormA$MH() {
        return cfapi_h$constants$73.DeleteFormA$MH();
    }
    public static @C("BOOL") int DeleteFormA (@C("HANDLE") Addressable hPrinter, @C("LPSTR") Addressable pFormName) {
        try {
            return (int)cfapi_h$constants$73.DeleteFormA$MH().invokeExact(hPrinter.address(), pFormName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeleteFormW$MH() {
        return cfapi_h$constants$73.DeleteFormW$MH();
    }
    public static @C("BOOL") int DeleteFormW (@C("HANDLE") Addressable hPrinter, @C("LPWSTR") Addressable pFormName) {
        try {
            return (int)cfapi_h$constants$73.DeleteFormW$MH().invokeExact(hPrinter.address(), pFormName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetFormA$MH() {
        return cfapi_h$constants$73.GetFormA$MH();
    }
    public static @C("BOOL") int GetFormA (@C("HANDLE") Addressable hPrinter, @C("LPSTR") Addressable pFormName, @C("DWORD") int Level, @C("LPBYTE") Addressable pForm, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded) {
        try {
            return (int)cfapi_h$constants$73.GetFormA$MH().invokeExact(hPrinter.address(), pFormName.address(), Level, pForm.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetFormW$MH() {
        return cfapi_h$constants$73.GetFormW$MH();
    }
    public static @C("BOOL") int GetFormW (@C("HANDLE") Addressable hPrinter, @C("LPWSTR") Addressable pFormName, @C("DWORD") int Level, @C("LPBYTE") Addressable pForm, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded) {
        try {
            return (int)cfapi_h$constants$73.GetFormW$MH().invokeExact(hPrinter.address(), pFormName.address(), Level, pForm.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SetFormA$MH() {
        return cfapi_h$constants$73.SetFormA$MH();
    }
    public static @C("BOOL") int SetFormA (@C("HANDLE") Addressable hPrinter, @C("LPSTR") Addressable pFormName, @C("DWORD") int Level, @C("LPBYTE") Addressable pForm) {
        try {
            return (int)cfapi_h$constants$73.SetFormA$MH().invokeExact(hPrinter.address(), pFormName.address(), Level, pForm.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SetFormW$MH() {
        return cfapi_h$constants$73.SetFormW$MH();
    }
    public static @C("BOOL") int SetFormW (@C("HANDLE") Addressable hPrinter, @C("LPWSTR") Addressable pFormName, @C("DWORD") int Level, @C("LPBYTE") Addressable pForm) {
        try {
            return (int)cfapi_h$constants$73.SetFormW$MH().invokeExact(hPrinter.address(), pFormName.address(), Level, pForm.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumFormsA$MH() {
        return cfapi_h$constants$73.EnumFormsA$MH();
    }
    public static @C("BOOL") int EnumFormsA (@C("HANDLE") Addressable hPrinter, @C("DWORD") int Level, @C("LPBYTE") Addressable pForm, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded, @C("LPDWORD") Addressable pcReturned) {
        try {
            return (int)cfapi_h$constants$73.EnumFormsA$MH().invokeExact(hPrinter.address(), Level, pForm.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumFormsW$MH() {
        return cfapi_h$constants$73.EnumFormsW$MH();
    }
    public static @C("BOOL") int EnumFormsW (@C("HANDLE") Addressable hPrinter, @C("DWORD") int Level, @C("LPBYTE") Addressable pForm, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded, @C("LPDWORD") Addressable pcReturned) {
        try {
            return (int)cfapi_h$constants$73.EnumFormsW$MH().invokeExact(hPrinter.address(), Level, pForm.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumMonitorsA$MH() {
        return cfapi_h$constants$73.EnumMonitorsA$MH();
    }
    public static @C("BOOL") int EnumMonitorsA (@C("LPSTR") Addressable pName, @C("DWORD") int Level, @C("LPBYTE") Addressable pMonitor, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded, @C("LPDWORD") Addressable pcReturned) {
        try {
            return (int)cfapi_h$constants$73.EnumMonitorsA$MH().invokeExact(pName.address(), Level, pMonitor.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumMonitorsW$MH() {
        return cfapi_h$constants$73.EnumMonitorsW$MH();
    }
    public static @C("BOOL") int EnumMonitorsW (@C("LPWSTR") Addressable pName, @C("DWORD") int Level, @C("LPBYTE") Addressable pMonitor, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded, @C("LPDWORD") Addressable pcReturned) {
        try {
            return (int)cfapi_h$constants$73.EnumMonitorsW$MH().invokeExact(pName.address(), Level, pMonitor.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddMonitorA$MH() {
        return cfapi_h$constants$73.AddMonitorA$MH();
    }
    public static @C("BOOL") int AddMonitorA (@C("LPSTR") Addressable pName, @C("DWORD") int Level, @C("LPBYTE") Addressable pMonitors) {
        try {
            return (int)cfapi_h$constants$73.AddMonitorA$MH().invokeExact(pName.address(), Level, pMonitors.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddMonitorW$MH() {
        return cfapi_h$constants$73.AddMonitorW$MH();
    }
    public static @C("BOOL") int AddMonitorW (@C("LPWSTR") Addressable pName, @C("DWORD") int Level, @C("LPBYTE") Addressable pMonitors) {
        try {
            return (int)cfapi_h$constants$73.AddMonitorW$MH().invokeExact(pName.address(), Level, pMonitors.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeleteMonitorA$MH() {
        return cfapi_h$constants$73.DeleteMonitorA$MH();
    }
    public static @C("BOOL") int DeleteMonitorA (@C("LPSTR") Addressable pName, @C("LPSTR") Addressable pEnvironment, @C("LPSTR") Addressable pMonitorName) {
        try {
            return (int)cfapi_h$constants$73.DeleteMonitorA$MH().invokeExact(pName.address(), pEnvironment.address(), pMonitorName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeleteMonitorW$MH() {
        return cfapi_h$constants$73.DeleteMonitorW$MH();
    }
    public static @C("BOOL") int DeleteMonitorW (@C("LPWSTR") Addressable pName, @C("LPWSTR") Addressable pEnvironment, @C("LPWSTR") Addressable pMonitorName) {
        try {
            return (int)cfapi_h$constants$73.DeleteMonitorW$MH().invokeExact(pName.address(), pEnvironment.address(), pMonitorName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumPortsA$MH() {
        return cfapi_h$constants$73.EnumPortsA$MH();
    }
    public static @C("BOOL") int EnumPortsA (@C("LPSTR") Addressable pName, @C("DWORD") int Level, @C("LPBYTE") Addressable pPort, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded, @C("LPDWORD") Addressable pcReturned) {
        try {
            return (int)cfapi_h$constants$73.EnumPortsA$MH().invokeExact(pName.address(), Level, pPort.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumPortsW$MH() {
        return cfapi_h$constants$73.EnumPortsW$MH();
    }
    public static @C("BOOL") int EnumPortsW (@C("LPWSTR") Addressable pName, @C("DWORD") int Level, @C("LPBYTE") Addressable pPort, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded, @C("LPDWORD") Addressable pcReturned) {
        try {
            return (int)cfapi_h$constants$73.EnumPortsW$MH().invokeExact(pName.address(), Level, pPort.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddPortA$MH() {
        return cfapi_h$constants$73.AddPortA$MH();
    }
    public static @C("BOOL") int AddPortA (@C("LPSTR") Addressable pName, @C("HWND") Addressable hWnd, @C("LPSTR") Addressable pMonitorName) {
        try {
            return (int)cfapi_h$constants$73.AddPortA$MH().invokeExact(pName.address(), hWnd.address(), pMonitorName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddPortW$MH() {
        return cfapi_h$constants$73.AddPortW$MH();
    }
    public static @C("BOOL") int AddPortW (@C("LPWSTR") Addressable pName, @C("HWND") Addressable hWnd, @C("LPWSTR") Addressable pMonitorName) {
        try {
            return (int)cfapi_h$constants$73.AddPortW$MH().invokeExact(pName.address(), hWnd.address(), pMonitorName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ConfigurePortA$MH() {
        return cfapi_h$constants$73.ConfigurePortA$MH();
    }
    public static @C("BOOL") int ConfigurePortA (@C("LPSTR") Addressable pName, @C("HWND") Addressable hWnd, @C("LPSTR") Addressable pPortName) {
        try {
            return (int)cfapi_h$constants$73.ConfigurePortA$MH().invokeExact(pName.address(), hWnd.address(), pPortName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ConfigurePortW$MH() {
        return cfapi_h$constants$73.ConfigurePortW$MH();
    }
    public static @C("BOOL") int ConfigurePortW (@C("LPWSTR") Addressable pName, @C("HWND") Addressable hWnd, @C("LPWSTR") Addressable pPortName) {
        try {
            return (int)cfapi_h$constants$73.ConfigurePortW$MH().invokeExact(pName.address(), hWnd.address(), pPortName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePortA$MH() {
        return cfapi_h$constants$73.DeletePortA$MH();
    }
    public static @C("BOOL") int DeletePortA (@C("LPSTR") Addressable pName, @C("HWND") Addressable hWnd, @C("LPSTR") Addressable pPortName) {
        try {
            return (int)cfapi_h$constants$73.DeletePortA$MH().invokeExact(pName.address(), hWnd.address(), pPortName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePortW$MH() {
        return cfapi_h$constants$73.DeletePortW$MH();
    }
    public static @C("BOOL") int DeletePortW (@C("LPWSTR") Addressable pName, @C("HWND") Addressable hWnd, @C("LPWSTR") Addressable pPortName) {
        try {
            return (int)cfapi_h$constants$73.DeletePortW$MH().invokeExact(pName.address(), hWnd.address(), pPortName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle XcvDataW$MH() {
        return cfapi_h$constants$73.XcvDataW$MH();
    }
    public static @C("BOOL") int XcvDataW (@C("HANDLE") Addressable hXcv, @C("PCWSTR") Addressable pszDataName, @C("PBYTE") Addressable pInputData, @C("DWORD") int cbInputData, @C("PBYTE") Addressable pOutputData, @C("DWORD") int cbOutputData, @C("PDWORD") Addressable pcbOutputNeeded, @C("PDWORD") Addressable pdwStatus) {
        try {
            return (int)cfapi_h$constants$73.XcvDataW$MH().invokeExact(hXcv.address(), pszDataName.address(), pInputData.address(), cbInputData, pOutputData.address(), cbOutputData, pcbOutputNeeded.address(), pdwStatus.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetDefaultPrinterA$MH() {
        return cfapi_h$constants$73.GetDefaultPrinterA$MH();
    }
    public static @C("BOOL") int GetDefaultPrinterA (@C("LPSTR") Addressable pszBuffer, @C("LPDWORD") Addressable pcchBuffer) {
        try {
            return (int)cfapi_h$constants$73.GetDefaultPrinterA$MH().invokeExact(pszBuffer.address(), pcchBuffer.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetDefaultPrinterW$MH() {
        return cfapi_h$constants$73.GetDefaultPrinterW$MH();
    }
    public static @C("BOOL") int GetDefaultPrinterW (@C("LPWSTR") Addressable pszBuffer, @C("LPDWORD") Addressable pcchBuffer) {
        try {
            return (int)cfapi_h$constants$73.GetDefaultPrinterW$MH().invokeExact(pszBuffer.address(), pcchBuffer.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SetDefaultPrinterA$MH() {
        return cfapi_h$constants$73.SetDefaultPrinterA$MH();
    }
    public static @C("BOOL") int SetDefaultPrinterA (@C("LPCSTR") Addressable pszPrinter) {
        try {
            return (int)cfapi_h$constants$73.SetDefaultPrinterA$MH().invokeExact(pszPrinter.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SetDefaultPrinterW$MH() {
        return cfapi_h$constants$73.SetDefaultPrinterW$MH();
    }
    public static @C("BOOL") int SetDefaultPrinterW (@C("LPCWSTR") Addressable pszPrinter) {
        try {
            return (int)cfapi_h$constants$73.SetDefaultPrinterW$MH().invokeExact(pszPrinter.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SetPortA$MH() {
        return cfapi_h$constants$73.SetPortA$MH();
    }
    public static @C("BOOL") int SetPortA (@C("LPSTR") Addressable pName, @C("LPSTR") Addressable pPortName, @C("DWORD") int dwLevel, @C("LPBYTE") Addressable pPortInfo) {
        try {
            return (int)cfapi_h$constants$73.SetPortA$MH().invokeExact(pName.address(), pPortName.address(), dwLevel, pPortInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SetPortW$MH() {
        return cfapi_h$constants$73.SetPortW$MH();
    }
    public static @C("BOOL") int SetPortW (@C("LPWSTR") Addressable pName, @C("LPWSTR") Addressable pPortName, @C("DWORD") int dwLevel, @C("LPBYTE") Addressable pPortInfo) {
        try {
            return (int)cfapi_h$constants$73.SetPortW$MH().invokeExact(pName.address(), pPortName.address(), dwLevel, pPortInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddPrinterConnectionA$MH() {
        return cfapi_h$constants$73.AddPrinterConnectionA$MH();
    }
    public static @C("BOOL") int AddPrinterConnectionA (@C("LPSTR") Addressable pName) {
        try {
            return (int)cfapi_h$constants$73.AddPrinterConnectionA$MH().invokeExact(pName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddPrinterConnectionW$MH() {
        return cfapi_h$constants$73.AddPrinterConnectionW$MH();
    }
    public static @C("BOOL") int AddPrinterConnectionW (@C("LPWSTR") Addressable pName) {
        try {
            return (int)cfapi_h$constants$73.AddPrinterConnectionW$MH().invokeExact(pName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePrinterConnectionA$MH() {
        return cfapi_h$constants$73.DeletePrinterConnectionA$MH();
    }
    public static @C("BOOL") int DeletePrinterConnectionA (@C("LPSTR") Addressable pName) {
        try {
            return (int)cfapi_h$constants$73.DeletePrinterConnectionA$MH().invokeExact(pName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePrinterConnectionW$MH() {
        return cfapi_h$constants$73.DeletePrinterConnectionW$MH();
    }
    public static @C("BOOL") int DeletePrinterConnectionW (@C("LPWSTR") Addressable pName) {
        try {
            return (int)cfapi_h$constants$73.DeletePrinterConnectionW$MH().invokeExact(pName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ConnectToPrinterDlg$MH() {
        return cfapi_h$constants$73.ConnectToPrinterDlg$MH();
    }
    public static @C("HANDLE") MemoryAddress ConnectToPrinterDlg (@C("HWND") Addressable hwnd, @C("DWORD") int Flags) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73.ConnectToPrinterDlg$MH().invokeExact(hwnd.address(), Flags);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddPrintProvidorA$MH() {
        return cfapi_h$constants$73.AddPrintProvidorA$MH();
    }
    public static @C("BOOL") int AddPrintProvidorA (@C("LPSTR") Addressable pName, @C("DWORD") int Level, @C("LPBYTE") Addressable pProvidorInfo) {
        try {
            return (int)cfapi_h$constants$73.AddPrintProvidorA$MH().invokeExact(pName.address(), Level, pProvidorInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddPrintProvidorW$MH() {
        return cfapi_h$constants$73.AddPrintProvidorW$MH();
    }
    public static @C("BOOL") int AddPrintProvidorW (@C("LPWSTR") Addressable pName, @C("DWORD") int Level, @C("LPBYTE") Addressable pProvidorInfo) {
        try {
            return (int)cfapi_h$constants$73.AddPrintProvidorW$MH().invokeExact(pName.address(), Level, pProvidorInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePrintProvidorA$MH() {
        return cfapi_h$constants$73.DeletePrintProvidorA$MH();
    }
    public static @C("BOOL") int DeletePrintProvidorA (@C("LPSTR") Addressable pName, @C("LPSTR") Addressable pEnvironment, @C("LPSTR") Addressable pPrintProvidorName) {
        try {
            return (int)cfapi_h$constants$73.DeletePrintProvidorA$MH().invokeExact(pName.address(), pEnvironment.address(), pPrintProvidorName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePrintProvidorW$MH() {
        return cfapi_h$constants$73.DeletePrintProvidorW$MH();
    }
    public static @C("BOOL") int DeletePrintProvidorW (@C("LPWSTR") Addressable pName, @C("LPWSTR") Addressable pEnvironment, @C("LPWSTR") Addressable pPrintProvidorName) {
        try {
            return (int)cfapi_h$constants$73.DeletePrintProvidorW$MH().invokeExact(pName.address(), pEnvironment.address(), pPrintProvidorName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle IsValidDevmodeA$MH() {
        return cfapi_h$constants$73.IsValidDevmodeA$MH();
    }
    public static @C("BOOL") int IsValidDevmodeA (@C("PDEVMODEA") Addressable pDevmode, @C("size_t") long DevmodeSize) {
        try {
            return (int)cfapi_h$constants$73.IsValidDevmodeA$MH().invokeExact(pDevmode.address(), DevmodeSize);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle IsValidDevmodeW$MH() {
        return cfapi_h$constants$73.IsValidDevmodeW$MH();
    }
    public static @C("BOOL") int IsValidDevmodeW (@C("PDEVMODEW") Addressable pDevmode, @C("size_t") long DevmodeSize) {
        try {
            return (int)cfapi_h$constants$73.IsValidDevmodeW$MH().invokeExact(pDevmode.address(), DevmodeSize);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int PRINTER_OPTION_NO_CACHE() {
        return cfapi_h$constants$73.PRINTER_OPTION_NO_CACHE();
    }
    public static @C("int") int PRINTER_OPTION_CACHE() {
        return cfapi_h$constants$73.PRINTER_OPTION_CACHE();
    }
    public static @C("int") int PRINTER_OPTION_CLIENT_CHANGE() {
        return cfapi_h$constants$73.PRINTER_OPTION_CLIENT_CHANGE();
    }
    public static @C("int") int PRINTER_OPTION_NO_CLIENT_DATA() {
        return cfapi_h$constants$73.PRINTER_OPTION_NO_CLIENT_DATA();
    }
    public static  MethodHandle OpenPrinter2A$MH() {
        return cfapi_h$constants$73.OpenPrinter2A$MH();
    }
    public static @C("BOOL") int OpenPrinter2A (@C("LPCSTR") Addressable pPrinterName, @C("LPHANDLE") Addressable phPrinter, @C("PPRINTER_DEFAULTSA") Addressable pDefault, @C("PPRINTER_OPTIONSA") Addressable pOptions) {
        try {
            return (int)cfapi_h$constants$73.OpenPrinter2A$MH().invokeExact(pPrinterName.address(), phPrinter.address(), pDefault.address(), pOptions.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle OpenPrinter2W$MH() {
        return cfapi_h$constants$73.OpenPrinter2W$MH();
    }
    public static @C("BOOL") int OpenPrinter2W (@C("LPCWSTR") Addressable pPrinterName, @C("LPHANDLE") Addressable phPrinter, @C("PPRINTER_DEFAULTSW") Addressable pDefault, @C("PPRINTER_OPTIONSW") Addressable pOptions) {
        try {
            return (int)cfapi_h$constants$73.OpenPrinter2W$MH().invokeExact(pPrinterName.address(), phPrinter.address(), pDefault.address(), pOptions.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddPrinterConnection2A$MH() {
        return cfapi_h$constants$73.AddPrinterConnection2A$MH();
    }
    public static @C("BOOL") int AddPrinterConnection2A (@C("HWND") Addressable hWnd, @C("LPCSTR") Addressable pszName, @C("DWORD") int dwLevel, @C("PVOID") Addressable pConnectionInfo) {
        try {
            return (int)cfapi_h$constants$73.AddPrinterConnection2A$MH().invokeExact(hWnd.address(), pszName.address(), dwLevel, pConnectionInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle AddPrinterConnection2W$MH() {
        return cfapi_h$constants$73.AddPrinterConnection2W$MH();
    }
    public static @C("BOOL") int AddPrinterConnection2W (@C("HWND") Addressable hWnd, @C("LPCWSTR") Addressable pszName, @C("DWORD") int dwLevel, @C("PVOID") Addressable pConnectionInfo) {
        try {
            return (int)cfapi_h$constants$73.AddPrinterConnection2W$MH().invokeExact(hWnd.address(), pszName.address(), dwLevel, pConnectionInfo.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle InstallPrinterDriverFromPackageA$MH() {
        return cfapi_h$constants$73.InstallPrinterDriverFromPackageA$MH();
    }
    public static @C("HRESULT") int InstallPrinterDriverFromPackageA (@C("LPCSTR") Addressable pszServer, @C("LPCSTR") Addressable pszInfPath, @C("LPCSTR") Addressable pszDriverName, @C("LPCSTR") Addressable pszEnvironment, @C("DWORD") int dwFlags) {
        try {
            return (int)cfapi_h$constants$73.InstallPrinterDriverFromPackageA$MH().invokeExact(pszServer.address(), pszInfPath.address(), pszDriverName.address(), pszEnvironment.address(), dwFlags);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle InstallPrinterDriverFromPackageW$MH() {
        return cfapi_h$constants$73.InstallPrinterDriverFromPackageW$MH();
    }
    public static @C("HRESULT") int InstallPrinterDriverFromPackageW (@C("LPCWSTR") Addressable pszServer, @C("LPCWSTR") Addressable pszInfPath, @C("LPCWSTR") Addressable pszDriverName, @C("LPCWSTR") Addressable pszEnvironment, @C("DWORD") int dwFlags) {
        try {
            return (int)cfapi_h$constants$73.InstallPrinterDriverFromPackageW$MH().invokeExact(pszServer.address(), pszInfPath.address(), pszDriverName.address(), pszEnvironment.address(), dwFlags);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle UploadPrinterDriverPackageA$MH() {
        return cfapi_h$constants$73.UploadPrinterDriverPackageA$MH();
    }
    public static @C("HRESULT") int UploadPrinterDriverPackageA (@C("LPCSTR") Addressable pszServer, @C("LPCSTR") Addressable pszInfPath, @C("LPCSTR") Addressable pszEnvironment, @C("DWORD") int dwFlags, @C("HWND") Addressable hwnd, @C("LPSTR") Addressable pszDestInfPath, @C("PULONG") Addressable pcchDestInfPath) {
        try {
            return (int)cfapi_h$constants$73.UploadPrinterDriverPackageA$MH().invokeExact(pszServer.address(), pszInfPath.address(), pszEnvironment.address(), dwFlags, hwnd.address(), pszDestInfPath.address(), pcchDestInfPath.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle UploadPrinterDriverPackageW$MH() {
        return cfapi_h$constants$73.UploadPrinterDriverPackageW$MH();
    }
    public static @C("HRESULT") int UploadPrinterDriverPackageW (@C("LPCWSTR") Addressable pszServer, @C("LPCWSTR") Addressable pszInfPath, @C("LPCWSTR") Addressable pszEnvironment, @C("DWORD") int dwFlags, @C("HWND") Addressable hwnd, @C("LPWSTR") Addressable pszDestInfPath, @C("PULONG") Addressable pcchDestInfPath) {
        try {
            return (int)cfapi_h$constants$73.UploadPrinterDriverPackageW$MH().invokeExact(pszServer.address(), pszInfPath.address(), pszEnvironment.address(), dwFlags, hwnd.address(), pszDestInfPath.address(), pcchDestInfPath.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetCorePrinterDriversA$MH() {
        return cfapi_h$constants$73.GetCorePrinterDriversA$MH();
    }
    public static @C("HRESULT") int GetCorePrinterDriversA (@C("LPCSTR") Addressable pszServer, @C("LPCSTR") Addressable pszEnvironment, @C("LPCSTR") Addressable pszzCoreDriverDependencies, @C("DWORD") int cCorePrinterDrivers, @C("PCORE_PRINTER_DRIVERA") Addressable pCorePrinterDrivers) {
        try {
            return (int)cfapi_h$constants$73.GetCorePrinterDriversA$MH().invokeExact(pszServer.address(), pszEnvironment.address(), pszzCoreDriverDependencies.address(), cCorePrinterDrivers, pCorePrinterDrivers.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetCorePrinterDriversW$MH() {
        return cfapi_h$constants$73.GetCorePrinterDriversW$MH();
    }
    public static @C("HRESULT") int GetCorePrinterDriversW (@C("LPCWSTR") Addressable pszServer, @C("LPCWSTR") Addressable pszEnvironment, @C("LPCWSTR") Addressable pszzCoreDriverDependencies, @C("DWORD") int cCorePrinterDrivers, @C("PCORE_PRINTER_DRIVERW") Addressable pCorePrinterDrivers) {
        try {
            return (int)cfapi_h$constants$73.GetCorePrinterDriversW$MH().invokeExact(pszServer.address(), pszEnvironment.address(), pszzCoreDriverDependencies.address(), cCorePrinterDrivers, pCorePrinterDrivers.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle CorePrinterDriverInstalledA$MH() {
        return cfapi_h$constants$73.CorePrinterDriverInstalledA$MH();
    }
    public static @C("HRESULT") int CorePrinterDriverInstalledA (@C("LPCSTR") Addressable pszServer, @C("LPCSTR") Addressable pszEnvironment, @C("GUID") MemorySegment CoreDriverGUID, @C("FILETIME") MemorySegment ftDriverDate, @C("DWORDLONG") long dwlDriverVersion, @C("BOOL*") Addressable pbDriverInstalled) {
        try {
            return (int)cfapi_h$constants$73.CorePrinterDriverInstalledA$MH().invokeExact(pszServer.address(), pszEnvironment.address(), CoreDriverGUID, ftDriverDate, dwlDriverVersion, pbDriverInstalled.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle CorePrinterDriverInstalledW$MH() {
        return cfapi_h$constants$73.CorePrinterDriverInstalledW$MH();
    }
    public static @C("HRESULT") int CorePrinterDriverInstalledW (@C("LPCWSTR") Addressable pszServer, @C("LPCWSTR") Addressable pszEnvironment, @C("GUID") MemorySegment CoreDriverGUID, @C("FILETIME") MemorySegment ftDriverDate, @C("DWORDLONG") long dwlDriverVersion, @C("BOOL*") Addressable pbDriverInstalled) {
        try {
            return (int)cfapi_h$constants$73.CorePrinterDriverInstalledW$MH().invokeExact(pszServer.address(), pszEnvironment.address(), CoreDriverGUID, ftDriverDate, dwlDriverVersion, pbDriverInstalled.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetPrinterDriverPackagePathA$MH() {
        return cfapi_h$constants$73.GetPrinterDriverPackagePathA$MH();
    }
    public static @C("HRESULT") int GetPrinterDriverPackagePathA (@C("LPCSTR") Addressable pszServer, @C("LPCSTR") Addressable pszEnvironment, @C("LPCSTR") Addressable pszLanguage, @C("LPCSTR") Addressable pszPackageID, @C("LPSTR") Addressable pszDriverPackageCab, @C("DWORD") int cchDriverPackageCab, @C("LPDWORD") Addressable pcchRequiredSize) {
        try {
            return (int)cfapi_h$constants$73.GetPrinterDriverPackagePathA$MH().invokeExact(pszServer.address(), pszEnvironment.address(), pszLanguage.address(), pszPackageID.address(), pszDriverPackageCab.address(), cchDriverPackageCab, pcchRequiredSize.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetPrinterDriverPackagePathW$MH() {
        return cfapi_h$constants$73.GetPrinterDriverPackagePathW$MH();
    }
    public static @C("HRESULT") int GetPrinterDriverPackagePathW (@C("LPCWSTR") Addressable pszServer, @C("LPCWSTR") Addressable pszEnvironment, @C("LPCWSTR") Addressable pszLanguage, @C("LPCWSTR") Addressable pszPackageID, @C("LPWSTR") Addressable pszDriverPackageCab, @C("DWORD") int cchDriverPackageCab, @C("LPDWORD") Addressable pcchRequiredSize) {
        try {
            return (int)cfapi_h$constants$73.GetPrinterDriverPackagePathW$MH().invokeExact(pszServer.address(), pszEnvironment.address(), pszLanguage.address(), pszPackageID.address(), pszDriverPackageCab.address(), cchDriverPackageCab, pcchRequiredSize.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePrinterDriverPackageA$MH() {
        return cfapi_h$constants$73.DeletePrinterDriverPackageA$MH();
    }
    public static @C("HRESULT") int DeletePrinterDriverPackageA (@C("LPCSTR") Addressable pszServer, @C("LPCSTR") Addressable pszInfPath, @C("LPCSTR") Addressable pszEnvironment) {
        try {
            return (int)cfapi_h$constants$73.DeletePrinterDriverPackageA$MH().invokeExact(pszServer.address(), pszInfPath.address(), pszEnvironment.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeletePrinterDriverPackageW$MH() {
        return cfapi_h$constants$73.DeletePrinterDriverPackageW$MH();
    }
    public static @C("HRESULT") int DeletePrinterDriverPackageW (@C("LPCWSTR") Addressable pszServer, @C("LPCWSTR") Addressable pszInfPath, @C("LPCWSTR") Addressable pszEnvironment) {
        try {
            return (int)cfapi_h$constants$73.DeletePrinterDriverPackageW$MH().invokeExact(pszServer.address(), pszInfPath.address(), pszEnvironment.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int kPropertyTypeString() {
        return cfapi_h$constants$73.kPropertyTypeString();
    }
    public static @C("int") int kPropertyTypeInt32() {
        return cfapi_h$constants$73.kPropertyTypeInt32();
    }
    public static @C("int") int kPropertyTypeInt64() {
        return cfapi_h$constants$73.kPropertyTypeInt64();
    }
    public static @C("int") int kPropertyTypeByte() {
        return cfapi_h$constants$73.kPropertyTypeByte();
    }
    public static @C("int") int kPropertyTypeTime() {
        return cfapi_h$constants$73.kPropertyTypeTime();
    }
    public static @C("int") int kPropertyTypeDevMode() {
        return cfapi_h$constants$73.kPropertyTypeDevMode();
    }
    public static @C("int") int kPropertyTypeSD() {
        return cfapi_h$constants$73.kPropertyTypeSD();
    }
    public static @C("int") int kPropertyTypeNotificationReply() {
        return cfapi_h$constants$73.kPropertyTypeNotificationReply();
    }
    public static @C("int") int kPropertyTypeNotificationOptions() {
        return cfapi_h$constants$73.kPropertyTypeNotificationOptions();
    }
    public static @C("int") int kPropertyTypeBuffer() {
        return cfapi_h$constants$73.kPropertyTypeBuffer();
    }
    public static @C("int") int kAddingDocumentSequence() {
        return cfapi_h$constants$73.kAddingDocumentSequence();
    }
    public static @C("int") int kDocumentSequenceAdded() {
        return cfapi_h$constants$73.kDocumentSequenceAdded();
    }
    public static @C("int") int kAddingFixedDocument() {
        return cfapi_h$constants$73.kAddingFixedDocument();
    }
    public static @C("int") int kFixedDocumentAdded() {
        return cfapi_h$constants$73.kFixedDocumentAdded();
    }
    public static @C("int") int kAddingFixedPage() {
        return cfapi_h$constants$73.kAddingFixedPage();
    }
    public static @C("int") int kFixedPageAdded() {
        return cfapi_h$constants$73.kFixedPageAdded();
    }
    public static @C("int") int kResourceAdded() {
        return cfapi_h$constants$73.kResourceAdded();
    }
    public static @C("int") int kFontAdded() {
        return cfapi_h$constants$73.kFontAdded();
    }
    public static @C("int") int kImageAdded() {
        return cfapi_h$constants$73.kImageAdded();
    }
    public static @C("int") int kXpsDocumentCommitted() {
        return cfapi_h$constants$73.kXpsDocumentCommitted();
    }
    public static @C("int") int kJobProduction() {
        return cfapi_h$constants$73.kJobProduction();
    }
    public static @C("int") int kJobConsumption() {
        return cfapi_h$constants$73.kJobConsumption();
    }
    public static  MethodHandle ReportJobProcessingProgress$MH() {
        return cfapi_h$constants$73.ReportJobProcessingProgress$MH();
    }
    public static @C("HRESULT") int ReportJobProcessingProgress (@C("HANDLE") Addressable printerHandle, @C("ULONG") int jobId, @C("EPrintXPSJobOperation") int jobOperation, @C("EPrintXPSJobProgress") int jobProgress) {
        try {
            return (int)cfapi_h$constants$73.ReportJobProcessingProgress$MH().invokeExact(printerHandle.address(), jobId, jobOperation, jobProgress);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetPrinterDriver2A$MH() {
        return cfapi_h$constants$73.GetPrinterDriver2A$MH();
    }
    public static @C("BOOL") int GetPrinterDriver2A (@C("HWND") Addressable hWnd, @C("HANDLE") Addressable hPrinter, @C("LPSTR") Addressable pEnvironment, @C("DWORD") int Level, @C("LPBYTE") Addressable pDriverInfo, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded) {
        try {
            return (int)cfapi_h$constants$73.GetPrinterDriver2A$MH().invokeExact(hWnd.address(), hPrinter.address(), pEnvironment.address(), Level, pDriverInfo.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetPrinterDriver2W$MH() {
        return cfapi_h$constants$73.GetPrinterDriver2W$MH();
    }
    public static @C("BOOL") int GetPrinterDriver2W (@C("HWND") Addressable hWnd, @C("HANDLE") Addressable hPrinter, @C("LPWSTR") Addressable pEnvironment, @C("DWORD") int Level, @C("LPBYTE") Addressable pDriverInfo, @C("DWORD") int cbBuf, @C("LPDWORD") Addressable pcbNeeded) {
        try {
            return (int)cfapi_h$constants$73.GetPrinterDriver2W$MH().invokeExact(hWnd.address(), hPrinter.address(), pEnvironment.address(), Level, pDriverInfo.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int PRINT_EXECUTION_CONTEXT_APPLICATION() {
        return cfapi_h$constants$73.PRINT_EXECUTION_CONTEXT_APPLICATION();
    }
    public static @C("int") int PRINT_EXECUTION_CONTEXT_SPOOLER_SERVICE() {
        return cfapi_h$constants$73.PRINT_EXECUTION_CONTEXT_SPOOLER_SERVICE();
    }
    public static @C("int") int PRINT_EXECUTION_CONTEXT_SPOOLER_ISOLATION_HOST() {
        return cfapi_h$constants$73.PRINT_EXECUTION_CONTEXT_SPOOLER_ISOLATION_HOST();
    }
    public static @C("int") int PRINT_EXECUTION_CONTEXT_FILTER_PIPELINE() {
        return cfapi_h$constants$73.PRINT_EXECUTION_CONTEXT_FILTER_PIPELINE();
    }
    public static @C("int") int PRINT_EXECUTION_CONTEXT_WOW64() {
        return cfapi_h$constants$73.PRINT_EXECUTION_CONTEXT_WOW64();
    }
    public static  MethodHandle GetPrintExecutionData$MH() {
        return cfapi_h$constants$73.GetPrintExecutionData$MH();
    }
    public static @C("BOOL") int GetPrintExecutionData (@C("PRINT_EXECUTION_DATA*") Addressable pData) {
        try {
            return (int)cfapi_h$constants$73.GetPrintExecutionData$MH().invokeExact(pData.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetJobNamedPropertyValue$MH() {
        return cfapi_h$constants$73.GetJobNamedPropertyValue$MH();
    }
    public static @C("DWORD") int GetJobNamedPropertyValue (@C("HANDLE") Addressable hPrinter, @C("DWORD") int JobId, @C("PCWSTR") Addressable pszName, @C("PrintPropertyValue*") Addressable pValue) {
        try {
            return (int)cfapi_h$constants$73.GetJobNamedPropertyValue$MH().invokeExact(hPrinter.address(), JobId, pszName.address(), pValue.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle FreePrintPropertyValue$MH() {
        return cfapi_h$constants$73.FreePrintPropertyValue$MH();
    }
    public static void FreePrintPropertyValue (@C("PrintPropertyValue*") Addressable pValue) {
        try {
            cfapi_h$constants$73.FreePrintPropertyValue$MH().invokeExact(pValue.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle FreePrintNamedPropertyArray$MH() {
        return cfapi_h$constants$73.FreePrintNamedPropertyArray$MH();
    }
    public static void FreePrintNamedPropertyArray (@C("DWORD") int cProperties, @C("PrintNamedProperty**") Addressable ppProperties) {
        try {
            cfapi_h$constants$73.FreePrintNamedPropertyArray$MH().invokeExact(cProperties, ppProperties.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle SetJobNamedProperty$MH() {
        return cfapi_h$constants$73.SetJobNamedProperty$MH();
    }
    public static @C("DWORD") int SetJobNamedProperty (@C("HANDLE") Addressable hPrinter, @C("DWORD") int JobId, @C("const PrintNamedProperty*") Addressable pProperty) {
        try {
            return (int)cfapi_h$constants$73.SetJobNamedProperty$MH().invokeExact(hPrinter.address(), JobId, pProperty.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle DeleteJobNamedProperty$MH() {
        return cfapi_h$constants$73.DeleteJobNamedProperty$MH();
    }
    public static @C("DWORD") int DeleteJobNamedProperty (@C("HANDLE") Addressable hPrinter, @C("DWORD") int JobId, @C("PCWSTR") Addressable pszName) {
        try {
            return (int)cfapi_h$constants$73.DeleteJobNamedProperty$MH().invokeExact(hPrinter.address(), JobId, pszName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle EnumJobNamedProperties$MH() {
        return cfapi_h$constants$73.EnumJobNamedProperties$MH();
    }
    public static @C("DWORD") int EnumJobNamedProperties (@C("HANDLE") Addressable hPrinter, @C("DWORD") int JobId, @C("DWORD*") Addressable pcProperties, @C("PrintNamedProperty**") Addressable ppProperties) {
        try {
            return (int)cfapi_h$constants$73.EnumJobNamedProperties$MH().invokeExact(hPrinter.address(), JobId, pcProperties.address(), ppProperties.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle GetPrintOutputInfo$MH() {
        return cfapi_h$constants$73.GetPrintOutputInfo$MH();
    }
    public static @C("HRESULT") int GetPrintOutputInfo (@C("HWND") Addressable hWnd, @C("PCWSTR") Addressable pszPrinter, @C("HANDLE*") Addressable phFile, @C("PWSTR*") Addressable ppszOutputFile) {
        try {
            return (int)cfapi_h$constants$73.GetPrintOutputInfo$MH().invokeExact(hWnd.address(), pszPrinter.address(), phFile.address(), ppszOutputFile.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _calloc_base$MH() {
        return cfapi_h$constants$73._calloc_base$MH();
    }
    public static @C("void*") MemoryAddress _calloc_base (@C("size_t") long _Count, @C("size_t") long _Size) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._calloc_base$MH().invokeExact(_Count, _Size);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle calloc$MH() {
        return cfapi_h$constants$73.calloc$MH();
    }
    public static @C("void*") MemoryAddress calloc (@C("size_t") long _Count, @C("size_t") long _Size) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73.calloc$MH().invokeExact(_Count, _Size);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _callnewh$MH() {
        return cfapi_h$constants$73._callnewh$MH();
    }
    public static @C("int") int _callnewh (@C("size_t") long _Size) {
        try {
            return (int)cfapi_h$constants$73._callnewh$MH().invokeExact(_Size);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _expand$MH() {
        return cfapi_h$constants$73._expand$MH();
    }
    public static @C("void*") MemoryAddress _expand (@C("void*") Addressable _Block, @C("size_t") long _Size) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._expand$MH().invokeExact(_Block.address(), _Size);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _free_base$MH() {
        return cfapi_h$constants$73._free_base$MH();
    }
    public static void _free_base (@C("void*") Addressable _Block) {
        try {
            cfapi_h$constants$73._free_base$MH().invokeExact(_Block.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle free$MH() {
        return cfapi_h$constants$73.free$MH();
    }
    public static void free (@C("void*") Addressable _Block) {
        try {
            cfapi_h$constants$73.free$MH().invokeExact(_Block.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _malloc_base$MH() {
        return cfapi_h$constants$73._malloc_base$MH();
    }
    public static @C("void*") MemoryAddress _malloc_base (@C("size_t") long _Size) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._malloc_base$MH().invokeExact(_Size);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle malloc$MH() {
        return cfapi_h$constants$73.malloc$MH();
    }
    public static @C("void*") MemoryAddress malloc (@C("size_t") long _Size) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73.malloc$MH().invokeExact(_Size);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _msize_base$MH() {
        return cfapi_h$constants$73._msize_base$MH();
    }
    public static @C("size_t") long _msize_base (@C("void*") Addressable _Block) {
        try {
            return (long)cfapi_h$constants$73._msize_base$MH().invokeExact(_Block.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _msize$MH() {
        return cfapi_h$constants$73._msize$MH();
    }
    public static @C("size_t") long _msize (@C("void*") Addressable _Block) {
        try {
            return (long)cfapi_h$constants$73._msize$MH().invokeExact(_Block.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _realloc_base$MH() {
        return cfapi_h$constants$73._realloc_base$MH();
    }
    public static @C("void*") MemoryAddress _realloc_base (@C("void*") Addressable _Block, @C("size_t") long _Size) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._realloc_base$MH().invokeExact(_Block.address(), _Size);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle realloc$MH() {
        return cfapi_h$constants$73.realloc$MH();
    }
    public static @C("void*") MemoryAddress realloc (@C("void*") Addressable _Block, @C("size_t") long _Size) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73.realloc$MH().invokeExact(_Block.address(), _Size);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _recalloc_base$MH() {
        return cfapi_h$constants$73._recalloc_base$MH();
    }
    public static @C("void*") MemoryAddress _recalloc_base (@C("void*") Addressable _Block, @C("size_t") long _Count, @C("size_t") long _Size) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._recalloc_base$MH().invokeExact(_Block.address(), _Count, _Size);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _recalloc$MH() {
        return cfapi_h$constants$73._recalloc$MH();
    }
    public static @C("void*") MemoryAddress _recalloc (@C("void*") Addressable _Block, @C("size_t") long _Count, @C("size_t") long _Size) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._recalloc$MH().invokeExact(_Block.address(), _Count, _Size);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _aligned_free$MH() {
        return cfapi_h$constants$73._aligned_free$MH();
    }
    public static void _aligned_free (@C("void*") Addressable _Block) {
        try {
            cfapi_h$constants$73._aligned_free$MH().invokeExact(_Block.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _aligned_malloc$MH() {
        return cfapi_h$constants$73._aligned_malloc$MH();
    }
    public static @C("void*") MemoryAddress _aligned_malloc (@C("size_t") long _Size, @C("size_t") long _Alignment) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._aligned_malloc$MH().invokeExact(_Size, _Alignment);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _aligned_offset_malloc$MH() {
        return cfapi_h$constants$73._aligned_offset_malloc$MH();
    }
    public static @C("void*") MemoryAddress _aligned_offset_malloc (@C("size_t") long _Size, @C("size_t") long _Alignment, @C("size_t") long _Offset) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._aligned_offset_malloc$MH().invokeExact(_Size, _Alignment, _Offset);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _aligned_msize$MH() {
        return cfapi_h$constants$73._aligned_msize$MH();
    }
    public static @C("size_t") long _aligned_msize (@C("void*") Addressable _Block, @C("size_t") long _Alignment, @C("size_t") long _Offset) {
        try {
            return (long)cfapi_h$constants$73._aligned_msize$MH().invokeExact(_Block.address(), _Alignment, _Offset);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _aligned_offset_realloc$MH() {
        return cfapi_h$constants$73._aligned_offset_realloc$MH();
    }
    public static @C("void*") MemoryAddress _aligned_offset_realloc (@C("void*") Addressable _Block, @C("size_t") long _Size, @C("size_t") long _Alignment, @C("size_t") long _Offset) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._aligned_offset_realloc$MH().invokeExact(_Block.address(), _Size, _Alignment, _Offset);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _aligned_offset_recalloc$MH() {
        return cfapi_h$constants$73._aligned_offset_recalloc$MH();
    }
    public static @C("void*") MemoryAddress _aligned_offset_recalloc (@C("void*") Addressable _Block, @C("size_t") long _Count, @C("size_t") long _Size, @C("size_t") long _Alignment, @C("size_t") long _Offset) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._aligned_offset_recalloc$MH().invokeExact(_Block.address(), _Count, _Size, _Alignment, _Offset);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _aligned_realloc$MH() {
        return cfapi_h$constants$73._aligned_realloc$MH();
    }
    public static @C("void*") MemoryAddress _aligned_realloc (@C("void*") Addressable _Block, @C("size_t") long _Size, @C("size_t") long _Alignment) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._aligned_realloc$MH().invokeExact(_Block.address(), _Size, _Alignment);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _aligned_recalloc$MH() {
        return cfapi_h$constants$73._aligned_recalloc$MH();
    }
    public static @C("void*") MemoryAddress _aligned_recalloc (@C("void*") Addressable _Block, @C("size_t") long _Count, @C("size_t") long _Size, @C("size_t") long _Alignment) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._aligned_recalloc$MH().invokeExact(_Block.address(), _Count, _Size, _Alignment);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("long long") ValueLayout ptrdiff_t = C_LONGLONG;
    public static @C("double") ValueLayout max_align_t = C_DOUBLE;
    public static  MethodHandle bsearch_s$MH() {
        return cfapi_h$constants$73.bsearch_s$MH();
    }
    public static @C("void*") MemoryAddress bsearch_s (@C("void*") Addressable _Key, @C("void*") Addressable _Base, @C("rsize_t") long _NumOfElements, @C("rsize_t") long _SizeOfElements, @C("_CoreCrtSecureSearchSortCompareFunction") Addressable _CompareFunction, @C("void*") Addressable _Context) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73.bsearch_s$MH().invokeExact(_Key.address(), _Base.address(), _NumOfElements, _SizeOfElements, _CompareFunction.address(), _Context.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle qsort_s$MH() {
        return cfapi_h$constants$73.qsort_s$MH();
    }
    public static void qsort_s (@C("void*") Addressable _Base, @C("rsize_t") long _NumOfElements, @C("rsize_t") long _SizeOfElements, @C("_CoreCrtSecureSearchSortCompareFunction") Addressable _CompareFunction, @C("void*") Addressable _Context) {
        try {
            cfapi_h$constants$73.qsort_s$MH().invokeExact(_Base.address(), _NumOfElements, _SizeOfElements, _CompareFunction.address(), _Context.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle bsearch$MH() {
        return cfapi_h$constants$73.bsearch$MH();
    }
    public static @C("void*") MemoryAddress bsearch (@C("void*") Addressable _Key, @C("void*") Addressable _Base, @C("size_t") long _NumOfElements, @C("size_t") long _SizeOfElements, @C("_CoreCrtNonSecureSearchSortCompareFunction") Addressable _CompareFunction) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73.bsearch$MH().invokeExact(_Key.address(), _Base.address(), _NumOfElements, _SizeOfElements, _CompareFunction.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle qsort$MH() {
        return cfapi_h$constants$73.qsort$MH();
    }
    public static void qsort (@C("void*") Addressable _Base, @C("size_t") long _NumOfElements, @C("size_t") long _SizeOfElements, @C("_CoreCrtNonSecureSearchSortCompareFunction") Addressable _CompareFunction) {
        try {
            cfapi_h$constants$73.qsort$MH().invokeExact(_Base.address(), _NumOfElements, _SizeOfElements, _CompareFunction.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _lfind_s$MH() {
        return cfapi_h$constants$73._lfind_s$MH();
    }
    public static @C("void*") MemoryAddress _lfind_s (@C("void*") Addressable _Key, @C("void*") Addressable _Base, @C("unsigned int*") Addressable _NumOfElements, @C("size_t") long _SizeOfElements, @C("_CoreCrtSecureSearchSortCompareFunction") Addressable _CompareFunction, @C("void*") Addressable _Context) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._lfind_s$MH().invokeExact(_Key.address(), _Base.address(), _NumOfElements.address(), _SizeOfElements, _CompareFunction.address(), _Context.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _lfind$MH() {
        return cfapi_h$constants$73._lfind$MH();
    }
    public static @C("void*") MemoryAddress _lfind (@C("void*") Addressable _Key, @C("void*") Addressable _Base, @C("unsigned int*") Addressable _NumOfElements, @C("unsigned int") int _SizeOfElements, @C("_CoreCrtNonSecureSearchSortCompareFunction") Addressable _CompareFunction) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._lfind$MH().invokeExact(_Key.address(), _Base.address(), _NumOfElements.address(), _SizeOfElements, _CompareFunction.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _lsearch_s$MH() {
        return cfapi_h$constants$73._lsearch_s$MH();
    }
    public static @C("void*") MemoryAddress _lsearch_s (@C("void*") Addressable _Key, @C("void*") Addressable _Base, @C("unsigned int*") Addressable _NumOfElements, @C("size_t") long _SizeOfElements, @C("_CoreCrtSecureSearchSortCompareFunction") Addressable _CompareFunction, @C("void*") Addressable _Context) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._lsearch_s$MH().invokeExact(_Key.address(), _Base.address(), _NumOfElements.address(), _SizeOfElements, _CompareFunction.address(), _Context.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _lsearch$MH() {
        return cfapi_h$constants$73._lsearch$MH();
    }
    public static @C("void*") MemoryAddress _lsearch (@C("void*") Addressable _Key, @C("void*") Addressable _Base, @C("unsigned int*") Addressable _NumOfElements, @C("unsigned int") int _SizeOfElements, @C("_CoreCrtNonSecureSearchSortCompareFunction") Addressable _CompareFunction) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._lsearch$MH().invokeExact(_Key.address(), _Base.address(), _NumOfElements.address(), _SizeOfElements, _CompareFunction.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle lfind$MH() {
        return cfapi_h$constants$73.lfind$MH();
    }
    public static @C("void*") MemoryAddress lfind (@C("void*") Addressable _Key, @C("void*") Addressable _Base, @C("unsigned int*") Addressable _NumOfElements, @C("unsigned int") int _SizeOfElements, @C("_CoreCrtNonSecureSearchSortCompareFunction") Addressable _CompareFunction) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73.lfind$MH().invokeExact(_Key.address(), _Base.address(), _NumOfElements.address(), _SizeOfElements, _CompareFunction.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle lsearch$MH() {
        return cfapi_h$constants$73.lsearch$MH();
    }
    public static @C("void*") MemoryAddress lsearch (@C("void*") Addressable _Key, @C("void*") Addressable _Base, @C("unsigned int*") Addressable _NumOfElements, @C("unsigned int") int _SizeOfElements, @C("_CoreCrtNonSecureSearchSortCompareFunction") Addressable _CompareFunction) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73.lsearch$MH().invokeExact(_Key.address(), _Base.address(), _NumOfElements.address(), _SizeOfElements, _CompareFunction.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _itow_s$MH() {
        return cfapi_h$constants$73._itow_s$MH();
    }
    public static @C("errno_t") int _itow_s (@C("int") int _Value, @C("wchar_t*") Addressable _Buffer, @C("size_t") long _BufferCount, @C("int") int _Radix) {
        try {
            return (int)cfapi_h$constants$73._itow_s$MH().invokeExact(_Value, _Buffer.address(), _BufferCount, _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _itow$MH() {
        return cfapi_h$constants$73._itow$MH();
    }
    public static @C("wchar_t*") MemoryAddress _itow (@C("int") int _Value, @C("wchar_t*") Addressable _Buffer, @C("int") int _Radix) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._itow$MH().invokeExact(_Value, _Buffer.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _ltow_s$MH() {
        return cfapi_h$constants$73._ltow_s$MH();
    }
    public static @C("errno_t") int _ltow_s (@C("long") int _Value, @C("wchar_t*") Addressable _Buffer, @C("size_t") long _BufferCount, @C("int") int _Radix) {
        try {
            return (int)cfapi_h$constants$73._ltow_s$MH().invokeExact(_Value, _Buffer.address(), _BufferCount, _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _ltow$MH() {
        return cfapi_h$constants$73._ltow$MH();
    }
    public static @C("wchar_t*") MemoryAddress _ltow (@C("long") int _Value, @C("wchar_t*") Addressable _Buffer, @C("int") int _Radix) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._ltow$MH().invokeExact(_Value, _Buffer.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _ultow_s$MH() {
        return cfapi_h$constants$73._ultow_s$MH();
    }
    public static @C("errno_t") int _ultow_s (@C("unsigned long") int _Value, @C("wchar_t*") Addressable _Buffer, @C("size_t") long _BufferCount, @C("int") int _Radix) {
        try {
            return (int)cfapi_h$constants$73._ultow_s$MH().invokeExact(_Value, _Buffer.address(), _BufferCount, _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _ultow$MH() {
        return cfapi_h$constants$73._ultow$MH();
    }
    public static @C("wchar_t*") MemoryAddress _ultow (@C("unsigned long") int _Value, @C("wchar_t*") Addressable _Buffer, @C("int") int _Radix) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._ultow$MH().invokeExact(_Value, _Buffer.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle wcstod$MH() {
        return cfapi_h$constants$73.wcstod$MH();
    }
    public static @C("double") double wcstod (@C("const wchar_t*") Addressable _String, @C("wchar_t**") Addressable _EndPtr) {
        try {
            return (double)cfapi_h$constants$73.wcstod$MH().invokeExact(_String.address(), _EndPtr.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wcstod_l$MH() {
        return cfapi_h$constants$73._wcstod_l$MH();
    }
    public static @C("double") double _wcstod_l (@C("const wchar_t*") Addressable _String, @C("wchar_t**") Addressable _EndPtr, @C("_locale_t") Addressable _Locale) {
        try {
            return (double)cfapi_h$constants$73._wcstod_l$MH().invokeExact(_String.address(), _EndPtr.address(), _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle wcstol$MH() {
        return cfapi_h$constants$73.wcstol$MH();
    }
    public static @C("long") int wcstol (@C("const wchar_t*") Addressable _String, @C("wchar_t**") Addressable _EndPtr, @C("int") int _Radix) {
        try {
            return (int)cfapi_h$constants$73.wcstol$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wcstol_l$MH() {
        return cfapi_h$constants$73._wcstol_l$MH();
    }
    public static @C("long") int _wcstol_l (@C("const wchar_t*") Addressable _String, @C("wchar_t**") Addressable _EndPtr, @C("int") int _Radix, @C("_locale_t") Addressable _Locale) {
        try {
            return (int)cfapi_h$constants$73._wcstol_l$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle wcstoll$MH() {
        return cfapi_h$constants$73.wcstoll$MH();
    }
    public static @C("long long") long wcstoll (@C("const wchar_t*") Addressable _String, @C("wchar_t**") Addressable _EndPtr, @C("int") int _Radix) {
        try {
            return (long)cfapi_h$constants$73.wcstoll$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wcstoll_l$MH() {
        return cfapi_h$constants$73._wcstoll_l$MH();
    }
    public static @C("long long") long _wcstoll_l (@C("const wchar_t*") Addressable _String, @C("wchar_t**") Addressable _EndPtr, @C("int") int _Radix, @C("_locale_t") Addressable _Locale) {
        try {
            return (long)cfapi_h$constants$73._wcstoll_l$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle wcstoul$MH() {
        return cfapi_h$constants$73.wcstoul$MH();
    }
    public static @C("unsigned long") int wcstoul (@C("const wchar_t*") Addressable _String, @C("wchar_t**") Addressable _EndPtr, @C("int") int _Radix) {
        try {
            return (int)cfapi_h$constants$73.wcstoul$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wcstoul_l$MH() {
        return cfapi_h$constants$73._wcstoul_l$MH();
    }
    public static @C("unsigned long") int _wcstoul_l (@C("const wchar_t*") Addressable _String, @C("wchar_t**") Addressable _EndPtr, @C("int") int _Radix, @C("_locale_t") Addressable _Locale) {
        try {
            return (int)cfapi_h$constants$73._wcstoul_l$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle wcstoull$MH() {
        return cfapi_h$constants$73.wcstoull$MH();
    }
    public static @C("unsigned long long") long wcstoull (@C("const wchar_t*") Addressable _String, @C("wchar_t**") Addressable _EndPtr, @C("int") int _Radix) {
        try {
            return (long)cfapi_h$constants$73.wcstoull$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wcstoull_l$MH() {
        return cfapi_h$constants$73._wcstoull_l$MH();
    }
    public static @C("unsigned long long") long _wcstoull_l (@C("const wchar_t*") Addressable _String, @C("wchar_t**") Addressable _EndPtr, @C("int") int _Radix, @C("_locale_t") Addressable _Locale) {
        try {
            return (long)cfapi_h$constants$73._wcstoull_l$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle wcstold$MH() {
        return cfapi_h$constants$73.wcstold$MH();
    }
    public static @C("long double") double wcstold (@C("const wchar_t*") Addressable _String, @C("wchar_t**") Addressable _EndPtr) {
        try {
            return (double)cfapi_h$constants$73.wcstold$MH().invokeExact(_String.address(), _EndPtr.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wcstold_l$MH() {
        return cfapi_h$constants$73._wcstold_l$MH();
    }
    public static @C("long double") double _wcstold_l (@C("const wchar_t*") Addressable _String, @C("wchar_t**") Addressable _EndPtr, @C("_locale_t") Addressable _Locale) {
        try {
            return (double)cfapi_h$constants$73._wcstold_l$MH().invokeExact(_String.address(), _EndPtr.address(), _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle wcstof$MH() {
        return cfapi_h$constants$73.wcstof$MH();
    }
    public static @C("float") float wcstof (@C("const wchar_t*") Addressable _String, @C("wchar_t**") Addressable _EndPtr) {
        try {
            return (float)cfapi_h$constants$73.wcstof$MH().invokeExact(_String.address(), _EndPtr.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wcstof_l$MH() {
        return cfapi_h$constants$73._wcstof_l$MH();
    }
    public static @C("float") float _wcstof_l (@C("const wchar_t*") Addressable _String, @C("wchar_t**") Addressable _EndPtr, @C("_locale_t") Addressable _Locale) {
        try {
            return (float)cfapi_h$constants$73._wcstof_l$MH().invokeExact(_String.address(), _EndPtr.address(), _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wtof$MH() {
        return cfapi_h$constants$73._wtof$MH();
    }
    public static @C("double") double _wtof (@C("const wchar_t*") Addressable _String) {
        try {
            return (double)cfapi_h$constants$73._wtof$MH().invokeExact(_String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wtof_l$MH() {
        return cfapi_h$constants$73._wtof_l$MH();
    }
    public static @C("double") double _wtof_l (@C("const wchar_t*") Addressable _String, @C("_locale_t") Addressable _Locale) {
        try {
            return (double)cfapi_h$constants$73._wtof_l$MH().invokeExact(_String.address(), _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wtoi$MH() {
        return cfapi_h$constants$73._wtoi$MH();
    }
    public static @C("int") int _wtoi (@C("const wchar_t*") Addressable _String) {
        try {
            return (int)cfapi_h$constants$73._wtoi$MH().invokeExact(_String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wtoi_l$MH() {
        return cfapi_h$constants$73._wtoi_l$MH();
    }
    public static @C("int") int _wtoi_l (@C("const wchar_t*") Addressable _String, @C("_locale_t") Addressable _Locale) {
        try {
            return (int)cfapi_h$constants$73._wtoi_l$MH().invokeExact(_String.address(), _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wtol$MH() {
        return cfapi_h$constants$73._wtol$MH();
    }
    public static @C("long") int _wtol (@C("const wchar_t*") Addressable _String) {
        try {
            return (int)cfapi_h$constants$73._wtol$MH().invokeExact(_String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wtol_l$MH() {
        return cfapi_h$constants$73._wtol_l$MH();
    }
    public static @C("long") int _wtol_l (@C("const wchar_t*") Addressable _String, @C("_locale_t") Addressable _Locale) {
        try {
            return (int)cfapi_h$constants$73._wtol_l$MH().invokeExact(_String.address(), _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wtoll$MH() {
        return cfapi_h$constants$73._wtoll$MH();
    }
    public static @C("long long") long _wtoll (@C("const wchar_t*") Addressable _String) {
        try {
            return (long)cfapi_h$constants$73._wtoll$MH().invokeExact(_String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wtoll_l$MH() {
        return cfapi_h$constants$73._wtoll_l$MH();
    }
    public static @C("long long") long _wtoll_l (@C("const wchar_t*") Addressable _String, @C("_locale_t") Addressable _Locale) {
        try {
            return (long)cfapi_h$constants$73._wtoll_l$MH().invokeExact(_String.address(), _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _i64tow_s$MH() {
        return cfapi_h$constants$73._i64tow_s$MH();
    }
    public static @C("errno_t") int _i64tow_s (@C("long long") long _Value, @C("wchar_t*") Addressable _Buffer, @C("size_t") long _BufferCount, @C("int") int _Radix) {
        try {
            return (int)cfapi_h$constants$73._i64tow_s$MH().invokeExact(_Value, _Buffer.address(), _BufferCount, _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _i64tow$MH() {
        return cfapi_h$constants$73._i64tow$MH();
    }
    public static @C("wchar_t*") MemoryAddress _i64tow (@C("long long") long _Value, @C("wchar_t*") Addressable _Buffer, @C("int") int _Radix) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._i64tow$MH().invokeExact(_Value, _Buffer.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _ui64tow_s$MH() {
        return cfapi_h$constants$73._ui64tow_s$MH();
    }
    public static @C("errno_t") int _ui64tow_s (@C("unsigned long long") long _Value, @C("wchar_t*") Addressable _Buffer, @C("size_t") long _BufferCount, @C("int") int _Radix) {
        try {
            return (int)cfapi_h$constants$73._ui64tow_s$MH().invokeExact(_Value, _Buffer.address(), _BufferCount, _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _ui64tow$MH() {
        return cfapi_h$constants$73._ui64tow$MH();
    }
    public static @C("wchar_t*") MemoryAddress _ui64tow (@C("unsigned long long") long _Value, @C("wchar_t*") Addressable _Buffer, @C("int") int _Radix) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._ui64tow$MH().invokeExact(_Value, _Buffer.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wtoi64$MH() {
        return cfapi_h$constants$73._wtoi64$MH();
    }
    public static @C("long long") long _wtoi64 (@C("const wchar_t*") Addressable _String) {
        try {
            return (long)cfapi_h$constants$73._wtoi64$MH().invokeExact(_String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wtoi64_l$MH() {
        return cfapi_h$constants$73._wtoi64_l$MH();
    }
    public static @C("long long") long _wtoi64_l (@C("const wchar_t*") Addressable _String, @C("_locale_t") Addressable _Locale) {
        try {
            return (long)cfapi_h$constants$73._wtoi64_l$MH().invokeExact(_String.address(), _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wcstoi64$MH() {
        return cfapi_h$constants$73._wcstoi64$MH();
    }
    public static @C("long long") long _wcstoi64 (@C("const wchar_t*") Addressable _String, @C("wchar_t**") Addressable _EndPtr, @C("int") int _Radix) {
        try {
            return (long)cfapi_h$constants$73._wcstoi64$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wcstoi64_l$MH() {
        return cfapi_h$constants$73._wcstoi64_l$MH();
    }
    public static @C("long long") long _wcstoi64_l (@C("const wchar_t*") Addressable _String, @C("wchar_t**") Addressable _EndPtr, @C("int") int _Radix, @C("_locale_t") Addressable _Locale) {
        try {
            return (long)cfapi_h$constants$73._wcstoi64_l$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wcstoui64$MH() {
        return cfapi_h$constants$73._wcstoui64$MH();
    }
    public static @C("unsigned long long") long _wcstoui64 (@C("const wchar_t*") Addressable _String, @C("wchar_t**") Addressable _EndPtr, @C("int") int _Radix) {
        try {
            return (long)cfapi_h$constants$73._wcstoui64$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wcstoui64_l$MH() {
        return cfapi_h$constants$73._wcstoui64_l$MH();
    }
    public static @C("unsigned long long") long _wcstoui64_l (@C("const wchar_t*") Addressable _String, @C("wchar_t**") Addressable _EndPtr, @C("int") int _Radix, @C("_locale_t") Addressable _Locale) {
        try {
            return (long)cfapi_h$constants$73._wcstoui64_l$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wfullpath$MH() {
        return cfapi_h$constants$73._wfullpath$MH();
    }
    public static @C("wchar_t*") MemoryAddress _wfullpath (@C("wchar_t*") Addressable _Buffer, @C("const wchar_t*") Addressable _Path, @C("size_t") long _BufferCount) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._wfullpath$MH().invokeExact(_Buffer.address(), _Path.address(), _BufferCount);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wmakepath_s$MH() {
        return cfapi_h$constants$73._wmakepath_s$MH();
    }
    public static @C("errno_t") int _wmakepath_s (@C("wchar_t*") Addressable _Buffer, @C("size_t") long _BufferCount, @C("const wchar_t*") Addressable _Drive, @C("const wchar_t*") Addressable _Dir, @C("const wchar_t*") Addressable _Filename, @C("const wchar_t*") Addressable _Ext) {
        try {
            return (int)cfapi_h$constants$73._wmakepath_s$MH().invokeExact(_Buffer.address(), _BufferCount, _Drive.address(), _Dir.address(), _Filename.address(), _Ext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wmakepath$MH() {
        return cfapi_h$constants$73._wmakepath$MH();
    }
    public static void _wmakepath (@C("wchar_t*") Addressable _Buffer, @C("const wchar_t*") Addressable _Drive, @C("const wchar_t*") Addressable _Dir, @C("const wchar_t*") Addressable _Filename, @C("const wchar_t*") Addressable _Ext) {
        try {
            cfapi_h$constants$73._wmakepath$MH().invokeExact(_Buffer.address(), _Drive.address(), _Dir.address(), _Filename.address(), _Ext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wperror$MH() {
        return cfapi_h$constants$73._wperror$MH();
    }
    public static void _wperror (@C("const wchar_t*") Addressable _ErrorMessage) {
        try {
            cfapi_h$constants$73._wperror$MH().invokeExact(_ErrorMessage.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wsplitpath$MH() {
        return cfapi_h$constants$73._wsplitpath$MH();
    }
    public static void _wsplitpath (@C("const wchar_t*") Addressable _FullPath, @C("wchar_t*") Addressable _Drive, @C("wchar_t*") Addressable _Dir, @C("wchar_t*") Addressable _Filename, @C("wchar_t*") Addressable _Ext) {
        try {
            cfapi_h$constants$73._wsplitpath$MH().invokeExact(_FullPath.address(), _Drive.address(), _Dir.address(), _Filename.address(), _Ext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wsplitpath_s$MH() {
        return cfapi_h$constants$73._wsplitpath_s$MH();
    }
    public static @C("errno_t") int _wsplitpath_s (@C("const wchar_t*") Addressable _FullPath, @C("wchar_t*") Addressable _Drive, @C("size_t") long _DriveCount, @C("wchar_t*") Addressable _Dir, @C("size_t") long _DirCount, @C("wchar_t*") Addressable _Filename, @C("size_t") long _FilenameCount, @C("wchar_t*") Addressable _Ext, @C("size_t") long _ExtCount) {
        try {
            return (int)cfapi_h$constants$73._wsplitpath_s$MH().invokeExact(_FullPath.address(), _Drive.address(), _DriveCount, _Dir.address(), _DirCount, _Filename.address(), _FilenameCount, _Ext.address(), _ExtCount);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wdupenv_s$MH() {
        return cfapi_h$constants$73._wdupenv_s$MH();
    }
    public static @C("errno_t") int _wdupenv_s (@C("wchar_t**") Addressable _Buffer, @C("size_t*") Addressable _BufferCount, @C("const wchar_t*") Addressable _VarName) {
        try {
            return (int)cfapi_h$constants$73._wdupenv_s$MH().invokeExact(_Buffer.address(), _BufferCount.address(), _VarName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wgetenv$MH() {
        return cfapi_h$constants$73._wgetenv$MH();
    }
    public static @C("wchar_t*") MemoryAddress _wgetenv (@C("const wchar_t*") Addressable _VarName) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._wgetenv$MH().invokeExact(_VarName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wgetenv_s$MH() {
        return cfapi_h$constants$73._wgetenv_s$MH();
    }
    public static @C("errno_t") int _wgetenv_s (@C("size_t*") Addressable _RequiredCount, @C("wchar_t*") Addressable _Buffer, @C("size_t") long _BufferCount, @C("const wchar_t*") Addressable _VarName) {
        try {
            return (int)cfapi_h$constants$73._wgetenv_s$MH().invokeExact(_RequiredCount.address(), _Buffer.address(), _BufferCount, _VarName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wputenv$MH() {
        return cfapi_h$constants$73._wputenv$MH();
    }
    public static @C("int") int _wputenv (@C("const wchar_t*") Addressable _EnvString) {
        try {
            return (int)cfapi_h$constants$73._wputenv$MH().invokeExact(_EnvString.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wputenv_s$MH() {
        return cfapi_h$constants$73._wputenv_s$MH();
    }
    public static @C("errno_t") int _wputenv_s (@C("const wchar_t*") Addressable _Name, @C("const wchar_t*") Addressable _Value) {
        try {
            return (int)cfapi_h$constants$73._wputenv_s$MH().invokeExact(_Name.address(), _Value.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wsearchenv_s$MH() {
        return cfapi_h$constants$73._wsearchenv_s$MH();
    }
    public static @C("errno_t") int _wsearchenv_s (@C("const wchar_t*") Addressable _Filename, @C("const wchar_t*") Addressable _VarName, @C("wchar_t*") Addressable _Buffer, @C("size_t") long _BufferCount) {
        try {
            return (int)cfapi_h$constants$73._wsearchenv_s$MH().invokeExact(_Filename.address(), _VarName.address(), _Buffer.address(), _BufferCount);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wsearchenv$MH() {
        return cfapi_h$constants$73._wsearchenv$MH();
    }
    public static void _wsearchenv (@C("const wchar_t*") Addressable _Filename, @C("const wchar_t*") Addressable _VarName, @C("wchar_t*") Addressable _ResultPath) {
        try {
            cfapi_h$constants$73._wsearchenv$MH().invokeExact(_Filename.address(), _VarName.address(), _ResultPath.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wsystem$MH() {
        return cfapi_h$constants$73._wsystem$MH();
    }
    public static @C("int") int _wsystem (@C("const wchar_t*") Addressable _Command) {
        try {
            return (int)cfapi_h$constants$73._wsystem$MH().invokeExact(_Command.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _swab$MH() {
        return cfapi_h$constants$73._swab$MH();
    }
    public static void _swab (@C("char*") Addressable _Buf1, @C("char*") Addressable _Buf2, @C("int") int _SizeInBytes) {
        try {
            cfapi_h$constants$73._swab$MH().invokeExact(_Buf1.address(), _Buf2.address(), _SizeInBytes);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle exit$MH() {
        return cfapi_h$constants$73.exit$MH();
    }
    public static void exit (@C("int") int _Code) {
        try {
            cfapi_h$constants$73.exit$MH().invokeExact(_Code);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _exit$MH() {
        return cfapi_h$constants$73._exit$MH();
    }
    public static void _exit (@C("int") int _Code) {
        try {
            cfapi_h$constants$73._exit$MH().invokeExact(_Code);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _Exit$MH() {
        return cfapi_h$constants$73._Exit$MH();
    }
    public static void _Exit (@C("int") int _Code) {
        try {
            cfapi_h$constants$73._Exit$MH().invokeExact(_Code);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle quick_exit$MH() {
        return cfapi_h$constants$73.quick_exit$MH();
    }
    public static void quick_exit (@C("int") int _Code) {
        try {
            cfapi_h$constants$73.quick_exit$MH().invokeExact(_Code);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle abort$MH() {
        return cfapi_h$constants$73.abort$MH();
    }
    public static void abort () {
        try {
            cfapi_h$constants$73.abort$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _set_abort_behavior$MH() {
        return cfapi_h$constants$73._set_abort_behavior$MH();
    }
    public static @C("unsigned int") int _set_abort_behavior (@C("unsigned int") int _Flags, @C("unsigned int") int _Mask) {
        try {
            return (int)cfapi_h$constants$73._set_abort_behavior$MH().invokeExact(_Flags, _Mask);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle atexit$MH() {
        return cfapi_h$constants$73.atexit$MH();
    }
    public static @C("int") int atexit (@C("void(*)()") Addressable x0) {
        try {
            return (int)cfapi_h$constants$73.atexit$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _onexit$MH() {
        return cfapi_h$constants$73._onexit$MH();
    }
    public static @C("_onexit_t") MemoryAddress _onexit (@C("_onexit_t") Addressable _Func) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._onexit$MH().invokeExact(_Func.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle at_quick_exit$MH() {
        return cfapi_h$constants$73.at_quick_exit$MH();
    }
    public static @C("int") int at_quick_exit (@C("void(*)()") Addressable x0) {
        try {
            return (int)cfapi_h$constants$73.at_quick_exit$MH().invokeExact(x0.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _set_purecall_handler$MH() {
        return cfapi_h$constants$73._set_purecall_handler$MH();
    }
    public static @C("_purecall_handler") MemoryAddress _set_purecall_handler (@C("_purecall_handler") Addressable _Handler) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._set_purecall_handler$MH().invokeExact(_Handler.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _get_purecall_handler$MH() {
        return cfapi_h$constants$73._get_purecall_handler$MH();
    }
    public static @C("_purecall_handler") MemoryAddress _get_purecall_handler () {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._get_purecall_handler$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _set_invalid_parameter_handler$MH() {
        return cfapi_h$constants$73._set_invalid_parameter_handler$MH();
    }
    public static @C("_invalid_parameter_handler") MemoryAddress _set_invalid_parameter_handler (@C("_invalid_parameter_handler") Addressable _Handler) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._set_invalid_parameter_handler$MH().invokeExact(_Handler.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _get_invalid_parameter_handler$MH() {
        return cfapi_h$constants$73._get_invalid_parameter_handler$MH();
    }
    public static @C("_invalid_parameter_handler") MemoryAddress _get_invalid_parameter_handler () {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._get_invalid_parameter_handler$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _set_thread_local_invalid_parameter_handler$MH() {
        return cfapi_h$constants$73._set_thread_local_invalid_parameter_handler$MH();
    }
    public static @C("_invalid_parameter_handler") MemoryAddress _set_thread_local_invalid_parameter_handler (@C("_invalid_parameter_handler") Addressable _Handler) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._set_thread_local_invalid_parameter_handler$MH().invokeExact(_Handler.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _get_thread_local_invalid_parameter_handler$MH() {
        return cfapi_h$constants$73._get_thread_local_invalid_parameter_handler$MH();
    }
    public static @C("_invalid_parameter_handler") MemoryAddress _get_thread_local_invalid_parameter_handler () {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._get_thread_local_invalid_parameter_handler$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _set_error_mode$MH() {
        return cfapi_h$constants$73._set_error_mode$MH();
    }
    public static @C("int") int _set_error_mode (@C("int") int _Mode) {
        try {
            return (int)cfapi_h$constants$73._set_error_mode$MH().invokeExact(_Mode);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle __sys_errlist$MH() {
        return cfapi_h$constants$73.__sys_errlist$MH();
    }
    public static @C("char**") MemoryAddress __sys_errlist () {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73.__sys_errlist$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle __sys_nerr$MH() {
        return cfapi_h$constants$73.__sys_nerr$MH();
    }
    public static @C("int*") MemoryAddress __sys_nerr () {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73.__sys_nerr$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle perror$MH() {
        return cfapi_h$constants$73.perror$MH();
    }
    public static void perror (@C("char*") Addressable _ErrMsg) {
        try {
            cfapi_h$constants$73.perror$MH().invokeExact(_ErrMsg.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle __p__pgmptr$MH() {
        return cfapi_h$constants$73.__p__pgmptr$MH();
    }
    public static @C("char**") MemoryAddress __p__pgmptr () {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73.__p__pgmptr$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle __p__wpgmptr$MH() {
        return cfapi_h$constants$73.__p__wpgmptr$MH();
    }
    public static @C("wchar_t**") MemoryAddress __p__wpgmptr () {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73.__p__wpgmptr$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle __p__fmode$MH() {
        return cfapi_h$constants$73.__p__fmode$MH();
    }
    public static @C("int*") MemoryAddress __p__fmode () {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73.__p__fmode$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _get_pgmptr$MH() {
        return cfapi_h$constants$73._get_pgmptr$MH();
    }
    public static @C("errno_t") int _get_pgmptr (@C("char**") Addressable _Value) {
        try {
            return (int)cfapi_h$constants$73._get_pgmptr$MH().invokeExact(_Value.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _get_wpgmptr$MH() {
        return cfapi_h$constants$73._get_wpgmptr$MH();
    }
    public static @C("errno_t") int _get_wpgmptr (@C("wchar_t**") Addressable _Value) {
        try {
            return (int)cfapi_h$constants$73._get_wpgmptr$MH().invokeExact(_Value.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _set_fmode$MH() {
        return cfapi_h$constants$73._set_fmode$MH();
    }
    public static @C("errno_t") int _set_fmode (@C("int") int _Mode) {
        try {
            return (int)cfapi_h$constants$73._set_fmode$MH().invokeExact(_Mode);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _get_fmode$MH() {
        return cfapi_h$constants$73._get_fmode$MH();
    }
    public static @C("errno_t") int _get_fmode (@C("int*") Addressable _PMode) {
        try {
            return (int)cfapi_h$constants$73._get_fmode$MH().invokeExact(_PMode.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle abs$MH() {
        return cfapi_h$constants$73.abs$MH();
    }
    public static @C("int") int abs (@C("int") int _Number) {
        try {
            return (int)cfapi_h$constants$73.abs$MH().invokeExact(_Number);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle labs$MH() {
        return cfapi_h$constants$73.labs$MH();
    }
    public static @C("long") int labs (@C("long") int _Number) {
        try {
            return (int)cfapi_h$constants$73.labs$MH().invokeExact(_Number);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle llabs$MH() {
        return cfapi_h$constants$73.llabs$MH();
    }
    public static @C("long long") long llabs (@C("long long") long _Number) {
        try {
            return (long)cfapi_h$constants$73.llabs$MH().invokeExact(_Number);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _abs64$MH() {
        return cfapi_h$constants$73._abs64$MH();
    }
    public static @C("long long") long _abs64 (@C("long long") long _Number) {
        try {
            return (long)cfapi_h$constants$73._abs64$MH().invokeExact(_Number);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _byteswap_ushort$MH() {
        return cfapi_h$constants$73._byteswap_ushort$MH();
    }
    public static @C("unsigned short") short _byteswap_ushort (@C("unsigned short") short _Number) {
        try {
            return (short)cfapi_h$constants$73._byteswap_ushort$MH().invokeExact(_Number);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _byteswap_ulong$MH() {
        return cfapi_h$constants$73._byteswap_ulong$MH();
    }
    public static @C("unsigned long") int _byteswap_ulong (@C("unsigned long") int _Number) {
        try {
            return (int)cfapi_h$constants$73._byteswap_ulong$MH().invokeExact(_Number);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _byteswap_uint64$MH() {
        return cfapi_h$constants$73._byteswap_uint64$MH();
    }
    public static @C("unsigned long long") long _byteswap_uint64 (@C("unsigned long long") long _Number) {
        try {
            return (long)cfapi_h$constants$73._byteswap_uint64$MH().invokeExact(_Number);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle div$MH() {
        return cfapi_h$constants$73.div$MH();
    }
    public static @C("div_t") MemorySegment div (@C("int") int _Numerator, @C("int") int _Denominator) {
        try {
            return (jdk.incubator.foreign.MemorySegment)cfapi_h$constants$73.div$MH().invokeExact(_Numerator, _Denominator);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ldiv$MH() {
        return cfapi_h$constants$73.ldiv$MH();
    }
    public static @C("ldiv_t") MemorySegment ldiv (@C("long") int _Numerator, @C("long") int _Denominator) {
        try {
            return (jdk.incubator.foreign.MemorySegment)cfapi_h$constants$73.ldiv$MH().invokeExact(_Numerator, _Denominator);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle lldiv$MH() {
        return cfapi_h$constants$73.lldiv$MH();
    }
    public static @C("lldiv_t") MemorySegment lldiv (@C("long long") long _Numerator, @C("long long") long _Denominator) {
        try {
            return (jdk.incubator.foreign.MemorySegment)cfapi_h$constants$73.lldiv$MH().invokeExact(_Numerator, _Denominator);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _lrotl$MH() {
        return cfapi_h$constants$73._lrotl$MH();
    }
    public static @C("unsigned long") int _lrotl (@C("unsigned long") int _Value, @C("int") int _Shift) {
        try {
            return (int)cfapi_h$constants$73._lrotl$MH().invokeExact(_Value, _Shift);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _lrotr$MH() {
        return cfapi_h$constants$73._lrotr$MH();
    }
    public static @C("unsigned long") int _lrotr (@C("unsigned long") int _Value, @C("int") int _Shift) {
        try {
            return (int)cfapi_h$constants$73._lrotr$MH().invokeExact(_Value, _Shift);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle srand$MH() {
        return cfapi_h$constants$73.srand$MH();
    }
    public static void srand (@C("unsigned int") int _Seed) {
        try {
            cfapi_h$constants$73.srand$MH().invokeExact(_Seed);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle rand$MH() {
        return cfapi_h$constants$73.rand$MH();
    }
    public static @C("int") int rand () {
        try {
            return (int)cfapi_h$constants$73.rand$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle atof$MH() {
        return cfapi_h$constants$73.atof$MH();
    }
    public static @C("double") double atof (@C("char*") Addressable _String) {
        try {
            return (double)cfapi_h$constants$73.atof$MH().invokeExact(_String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle atoi$MH() {
        return cfapi_h$constants$73.atoi$MH();
    }
    public static @C("int") int atoi (@C("char*") Addressable _String) {
        try {
            return (int)cfapi_h$constants$73.atoi$MH().invokeExact(_String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle atol$MH() {
        return cfapi_h$constants$73.atol$MH();
    }
    public static @C("long") int atol (@C("char*") Addressable _String) {
        try {
            return (int)cfapi_h$constants$73.atol$MH().invokeExact(_String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle atoll$MH() {
        return cfapi_h$constants$73.atoll$MH();
    }
    public static @C("long long") long atoll (@C("char*") Addressable _String) {
        try {
            return (long)cfapi_h$constants$73.atoll$MH().invokeExact(_String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _atoi64$MH() {
        return cfapi_h$constants$73._atoi64$MH();
    }
    public static @C("long long") long _atoi64 (@C("char*") Addressable _String) {
        try {
            return (long)cfapi_h$constants$73._atoi64$MH().invokeExact(_String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _atof_l$MH() {
        return cfapi_h$constants$73._atof_l$MH();
    }
    public static @C("double") double _atof_l (@C("char*") Addressable _String, @C("_locale_t") Addressable _Locale) {
        try {
            return (double)cfapi_h$constants$73._atof_l$MH().invokeExact(_String.address(), _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _atoi_l$MH() {
        return cfapi_h$constants$73._atoi_l$MH();
    }
    public static @C("int") int _atoi_l (@C("char*") Addressable _String, @C("_locale_t") Addressable _Locale) {
        try {
            return (int)cfapi_h$constants$73._atoi_l$MH().invokeExact(_String.address(), _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _atol_l$MH() {
        return cfapi_h$constants$73._atol_l$MH();
    }
    public static @C("long") int _atol_l (@C("char*") Addressable _String, @C("_locale_t") Addressable _Locale) {
        try {
            return (int)cfapi_h$constants$73._atol_l$MH().invokeExact(_String.address(), _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _atoll_l$MH() {
        return cfapi_h$constants$73._atoll_l$MH();
    }
    public static @C("long long") long _atoll_l (@C("char*") Addressable _String, @C("_locale_t") Addressable _Locale) {
        try {
            return (long)cfapi_h$constants$73._atoll_l$MH().invokeExact(_String.address(), _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _atoi64_l$MH() {
        return cfapi_h$constants$73._atoi64_l$MH();
    }
    public static @C("long long") long _atoi64_l (@C("char*") Addressable _String, @C("_locale_t") Addressable _Locale) {
        try {
            return (long)cfapi_h$constants$73._atoi64_l$MH().invokeExact(_String.address(), _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _atoflt$MH() {
        return cfapi_h$constants$73._atoflt$MH();
    }
    public static @C("int") int _atoflt (@C("_CRT_FLOAT*") Addressable _Result, @C("char*") Addressable _String) {
        try {
            return (int)cfapi_h$constants$73._atoflt$MH().invokeExact(_Result.address(), _String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _atodbl$MH() {
        return cfapi_h$constants$73._atodbl$MH();
    }
    public static @C("int") int _atodbl (@C("_CRT_DOUBLE*") Addressable _Result, @C("char*") Addressable _String) {
        try {
            return (int)cfapi_h$constants$73._atodbl$MH().invokeExact(_Result.address(), _String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _atoldbl$MH() {
        return cfapi_h$constants$73._atoldbl$MH();
    }
    public static @C("int") int _atoldbl (@C("_LDOUBLE*") Addressable _Result, @C("char*") Addressable _String) {
        try {
            return (int)cfapi_h$constants$73._atoldbl$MH().invokeExact(_Result.address(), _String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _atoflt_l$MH() {
        return cfapi_h$constants$73._atoflt_l$MH();
    }
    public static @C("int") int _atoflt_l (@C("_CRT_FLOAT*") Addressable _Result, @C("char*") Addressable _String, @C("_locale_t") Addressable _Locale) {
        try {
            return (int)cfapi_h$constants$73._atoflt_l$MH().invokeExact(_Result.address(), _String.address(), _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _atodbl_l$MH() {
        return cfapi_h$constants$73._atodbl_l$MH();
    }
    public static @C("int") int _atodbl_l (@C("_CRT_DOUBLE*") Addressable _Result, @C("char*") Addressable _String, @C("_locale_t") Addressable _Locale) {
        try {
            return (int)cfapi_h$constants$73._atodbl_l$MH().invokeExact(_Result.address(), _String.address(), _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _atoldbl_l$MH() {
        return cfapi_h$constants$73._atoldbl_l$MH();
    }
    public static @C("int") int _atoldbl_l (@C("_LDOUBLE*") Addressable _Result, @C("char*") Addressable _String, @C("_locale_t") Addressable _Locale) {
        try {
            return (int)cfapi_h$constants$73._atoldbl_l$MH().invokeExact(_Result.address(), _String.address(), _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle strtof$MH() {
        return cfapi_h$constants$73.strtof$MH();
    }
    public static @C("float") float strtof (@C("char*") Addressable _String, @C("char**") Addressable _EndPtr) {
        try {
            return (float)cfapi_h$constants$73.strtof$MH().invokeExact(_String.address(), _EndPtr.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _strtof_l$MH() {
        return cfapi_h$constants$73._strtof_l$MH();
    }
    public static @C("float") float _strtof_l (@C("char*") Addressable _String, @C("char**") Addressable _EndPtr, @C("_locale_t") Addressable _Locale) {
        try {
            return (float)cfapi_h$constants$73._strtof_l$MH().invokeExact(_String.address(), _EndPtr.address(), _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle strtod$MH() {
        return cfapi_h$constants$73.strtod$MH();
    }
    public static @C("double") double strtod (@C("char*") Addressable _String, @C("char**") Addressable _EndPtr) {
        try {
            return (double)cfapi_h$constants$73.strtod$MH().invokeExact(_String.address(), _EndPtr.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _strtod_l$MH() {
        return cfapi_h$constants$73._strtod_l$MH();
    }
    public static @C("double") double _strtod_l (@C("char*") Addressable _String, @C("char**") Addressable _EndPtr, @C("_locale_t") Addressable _Locale) {
        try {
            return (double)cfapi_h$constants$73._strtod_l$MH().invokeExact(_String.address(), _EndPtr.address(), _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle strtold$MH() {
        return cfapi_h$constants$73.strtold$MH();
    }
    public static @C("long double") double strtold (@C("char*") Addressable _String, @C("char**") Addressable _EndPtr) {
        try {
            return (double)cfapi_h$constants$73.strtold$MH().invokeExact(_String.address(), _EndPtr.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _strtold_l$MH() {
        return cfapi_h$constants$73._strtold_l$MH();
    }
    public static @C("long double") double _strtold_l (@C("char*") Addressable _String, @C("char**") Addressable _EndPtr, @C("_locale_t") Addressable _Locale) {
        try {
            return (double)cfapi_h$constants$73._strtold_l$MH().invokeExact(_String.address(), _EndPtr.address(), _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle strtol$MH() {
        return cfapi_h$constants$73.strtol$MH();
    }
    public static @C("long") int strtol (@C("char*") Addressable _String, @C("char**") Addressable _EndPtr, @C("int") int _Radix) {
        try {
            return (int)cfapi_h$constants$73.strtol$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _strtol_l$MH() {
        return cfapi_h$constants$73._strtol_l$MH();
    }
    public static @C("long") int _strtol_l (@C("char*") Addressable _String, @C("char**") Addressable _EndPtr, @C("int") int _Radix, @C("_locale_t") Addressable _Locale) {
        try {
            return (int)cfapi_h$constants$73._strtol_l$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle strtoll$MH() {
        return cfapi_h$constants$73.strtoll$MH();
    }
    public static @C("long long") long strtoll (@C("char*") Addressable _String, @C("char**") Addressable _EndPtr, @C("int") int _Radix) {
        try {
            return (long)cfapi_h$constants$73.strtoll$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _strtoll_l$MH() {
        return cfapi_h$constants$73._strtoll_l$MH();
    }
    public static @C("long long") long _strtoll_l (@C("char*") Addressable _String, @C("char**") Addressable _EndPtr, @C("int") int _Radix, @C("_locale_t") Addressable _Locale) {
        try {
            return (long)cfapi_h$constants$73._strtoll_l$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle strtoul$MH() {
        return cfapi_h$constants$73.strtoul$MH();
    }
    public static @C("unsigned long") int strtoul (@C("char*") Addressable _String, @C("char**") Addressable _EndPtr, @C("int") int _Radix) {
        try {
            return (int)cfapi_h$constants$73.strtoul$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _strtoul_l$MH() {
        return cfapi_h$constants$73._strtoul_l$MH();
    }
    public static @C("unsigned long") int _strtoul_l (@C("char*") Addressable _String, @C("char**") Addressable _EndPtr, @C("int") int _Radix, @C("_locale_t") Addressable _Locale) {
        try {
            return (int)cfapi_h$constants$73._strtoul_l$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle strtoull$MH() {
        return cfapi_h$constants$73.strtoull$MH();
    }
    public static @C("unsigned long long") long strtoull (@C("char*") Addressable _String, @C("char**") Addressable _EndPtr, @C("int") int _Radix) {
        try {
            return (long)cfapi_h$constants$73.strtoull$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _strtoull_l$MH() {
        return cfapi_h$constants$73._strtoull_l$MH();
    }
    public static @C("unsigned long long") long _strtoull_l (@C("char*") Addressable _String, @C("char**") Addressable _EndPtr, @C("int") int _Radix, @C("_locale_t") Addressable _Locale) {
        try {
            return (long)cfapi_h$constants$73._strtoull_l$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _strtoi64$MH() {
        return cfapi_h$constants$73._strtoi64$MH();
    }
    public static @C("long long") long _strtoi64 (@C("char*") Addressable _String, @C("char**") Addressable _EndPtr, @C("int") int _Radix) {
        try {
            return (long)cfapi_h$constants$73._strtoi64$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _strtoi64_l$MH() {
        return cfapi_h$constants$73._strtoi64_l$MH();
    }
    public static @C("long long") long _strtoi64_l (@C("char*") Addressable _String, @C("char**") Addressable _EndPtr, @C("int") int _Radix, @C("_locale_t") Addressable _Locale) {
        try {
            return (long)cfapi_h$constants$73._strtoi64_l$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _strtoui64$MH() {
        return cfapi_h$constants$73._strtoui64$MH();
    }
    public static @C("unsigned long long") long _strtoui64 (@C("char*") Addressable _String, @C("char**") Addressable _EndPtr, @C("int") int _Radix) {
        try {
            return (long)cfapi_h$constants$73._strtoui64$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _strtoui64_l$MH() {
        return cfapi_h$constants$73._strtoui64_l$MH();
    }
    public static @C("unsigned long long") long _strtoui64_l (@C("char*") Addressable _String, @C("char**") Addressable _EndPtr, @C("int") int _Radix, @C("_locale_t") Addressable _Locale) {
        try {
            return (long)cfapi_h$constants$73._strtoui64_l$MH().invokeExact(_String.address(), _EndPtr.address(), _Radix, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _itoa_s$MH() {
        return cfapi_h$constants$73._itoa_s$MH();
    }
    public static @C("errno_t") int _itoa_s (@C("int") int _Value, @C("char*") Addressable _Buffer, @C("size_t") long _BufferCount, @C("int") int _Radix) {
        try {
            return (int)cfapi_h$constants$73._itoa_s$MH().invokeExact(_Value, _Buffer.address(), _BufferCount, _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _itoa$MH() {
        return cfapi_h$constants$73._itoa$MH();
    }
    public static @C("char*") MemoryAddress _itoa (@C("int") int _Value, @C("char*") Addressable _Buffer, @C("int") int _Radix) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._itoa$MH().invokeExact(_Value, _Buffer.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _ltoa_s$MH() {
        return cfapi_h$constants$73._ltoa_s$MH();
    }
    public static @C("errno_t") int _ltoa_s (@C("long") int _Value, @C("char*") Addressable _Buffer, @C("size_t") long _BufferCount, @C("int") int _Radix) {
        try {
            return (int)cfapi_h$constants$73._ltoa_s$MH().invokeExact(_Value, _Buffer.address(), _BufferCount, _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _ltoa$MH() {
        return cfapi_h$constants$73._ltoa$MH();
    }
    public static @C("char*") MemoryAddress _ltoa (@C("long") int _Value, @C("char*") Addressable _Buffer, @C("int") int _Radix) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._ltoa$MH().invokeExact(_Value, _Buffer.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _ultoa_s$MH() {
        return cfapi_h$constants$73._ultoa_s$MH();
    }
    public static @C("errno_t") int _ultoa_s (@C("unsigned long") int _Value, @C("char*") Addressable _Buffer, @C("size_t") long _BufferCount, @C("int") int _Radix) {
        try {
            return (int)cfapi_h$constants$73._ultoa_s$MH().invokeExact(_Value, _Buffer.address(), _BufferCount, _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _ultoa$MH() {
        return cfapi_h$constants$73._ultoa$MH();
    }
    public static @C("char*") MemoryAddress _ultoa (@C("unsigned long") int _Value, @C("char*") Addressable _Buffer, @C("int") int _Radix) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._ultoa$MH().invokeExact(_Value, _Buffer.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _i64toa_s$MH() {
        return cfapi_h$constants$73._i64toa_s$MH();
    }
    public static @C("errno_t") int _i64toa_s (@C("long long") long _Value, @C("char*") Addressable _Buffer, @C("size_t") long _BufferCount, @C("int") int _Radix) {
        try {
            return (int)cfapi_h$constants$73._i64toa_s$MH().invokeExact(_Value, _Buffer.address(), _BufferCount, _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _i64toa$MH() {
        return cfapi_h$constants$73._i64toa$MH();
    }
    public static @C("char*") MemoryAddress _i64toa (@C("long long") long _Value, @C("char*") Addressable _Buffer, @C("int") int _Radix) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._i64toa$MH().invokeExact(_Value, _Buffer.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _ui64toa_s$MH() {
        return cfapi_h$constants$73._ui64toa_s$MH();
    }
    public static @C("errno_t") int _ui64toa_s (@C("unsigned long long") long _Value, @C("char*") Addressable _Buffer, @C("size_t") long _BufferCount, @C("int") int _Radix) {
        try {
            return (int)cfapi_h$constants$73._ui64toa_s$MH().invokeExact(_Value, _Buffer.address(), _BufferCount, _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _ui64toa$MH() {
        return cfapi_h$constants$73._ui64toa$MH();
    }
    public static @C("char*") MemoryAddress _ui64toa (@C("unsigned long long") long _Value, @C("char*") Addressable _Buffer, @C("int") int _Radix) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._ui64toa$MH().invokeExact(_Value, _Buffer.address(), _Radix);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _ecvt_s$MH() {
        return cfapi_h$constants$73._ecvt_s$MH();
    }
    public static @C("errno_t") int _ecvt_s (@C("char*") Addressable _Buffer, @C("size_t") long _BufferCount, @C("double") double _Value, @C("int") int _DigitCount, @C("int*") Addressable _PtDec, @C("int*") Addressable _PtSign) {
        try {
            return (int)cfapi_h$constants$73._ecvt_s$MH().invokeExact(_Buffer.address(), _BufferCount, _Value, _DigitCount, _PtDec.address(), _PtSign.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _ecvt$MH() {
        return cfapi_h$constants$73._ecvt$MH();
    }
    public static @C("char*") MemoryAddress _ecvt (@C("double") double _Value, @C("int") int _DigitCount, @C("int*") Addressable _PtDec, @C("int*") Addressable _PtSign) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._ecvt$MH().invokeExact(_Value, _DigitCount, _PtDec.address(), _PtSign.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _fcvt_s$MH() {
        return cfapi_h$constants$73._fcvt_s$MH();
    }
    public static @C("errno_t") int _fcvt_s (@C("char*") Addressable _Buffer, @C("size_t") long _BufferCount, @C("double") double _Value, @C("int") int _FractionalDigitCount, @C("int*") Addressable _PtDec, @C("int*") Addressable _PtSign) {
        try {
            return (int)cfapi_h$constants$73._fcvt_s$MH().invokeExact(_Buffer.address(), _BufferCount, _Value, _FractionalDigitCount, _PtDec.address(), _PtSign.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _fcvt$MH() {
        return cfapi_h$constants$73._fcvt$MH();
    }
    public static @C("char*") MemoryAddress _fcvt (@C("double") double _Value, @C("int") int _FractionalDigitCount, @C("int*") Addressable _PtDec, @C("int*") Addressable _PtSign) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._fcvt$MH().invokeExact(_Value, _FractionalDigitCount, _PtDec.address(), _PtSign.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _gcvt_s$MH() {
        return cfapi_h$constants$73._gcvt_s$MH();
    }
    public static @C("errno_t") int _gcvt_s (@C("char*") Addressable _Buffer, @C("size_t") long _BufferCount, @C("double") double _Value, @C("int") int _DigitCount) {
        try {
            return (int)cfapi_h$constants$73._gcvt_s$MH().invokeExact(_Buffer.address(), _BufferCount, _Value, _DigitCount);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _gcvt$MH() {
        return cfapi_h$constants$73._gcvt$MH();
    }
    public static @C("char*") MemoryAddress _gcvt (@C("double") double _Value, @C("int") int _DigitCount, @C("char*") Addressable _Buffer) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._gcvt$MH().invokeExact(_Value, _DigitCount, _Buffer.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle mblen$MH() {
        return cfapi_h$constants$73.mblen$MH();
    }
    public static @C("int") int mblen (@C("char*") Addressable _Ch, @C("size_t") long _MaxCount) {
        try {
            return (int)cfapi_h$constants$73.mblen$MH().invokeExact(_Ch.address(), _MaxCount);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _mblen_l$MH() {
        return cfapi_h$constants$73._mblen_l$MH();
    }
    public static @C("int") int _mblen_l (@C("char*") Addressable _Ch, @C("size_t") long _MaxCount, @C("_locale_t") Addressable _Locale) {
        try {
            return (int)cfapi_h$constants$73._mblen_l$MH().invokeExact(_Ch.address(), _MaxCount, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _mbstrlen$MH() {
        return cfapi_h$constants$73._mbstrlen$MH();
    }
    public static @C("size_t") long _mbstrlen (@C("char*") Addressable _String) {
        try {
            return (long)cfapi_h$constants$73._mbstrlen$MH().invokeExact(_String.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _mbstrlen_l$MH() {
        return cfapi_h$constants$73._mbstrlen_l$MH();
    }
    public static @C("size_t") long _mbstrlen_l (@C("char*") Addressable _String, @C("_locale_t") Addressable _Locale) {
        try {
            return (long)cfapi_h$constants$73._mbstrlen_l$MH().invokeExact(_String.address(), _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _mbstrnlen$MH() {
        return cfapi_h$constants$73._mbstrnlen$MH();
    }
    public static @C("size_t") long _mbstrnlen (@C("char*") Addressable _String, @C("size_t") long _MaxCount) {
        try {
            return (long)cfapi_h$constants$73._mbstrnlen$MH().invokeExact(_String.address(), _MaxCount);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _mbstrnlen_l$MH() {
        return cfapi_h$constants$73._mbstrnlen_l$MH();
    }
    public static @C("size_t") long _mbstrnlen_l (@C("char*") Addressable _String, @C("size_t") long _MaxCount, @C("_locale_t") Addressable _Locale) {
        try {
            return (long)cfapi_h$constants$73._mbstrnlen_l$MH().invokeExact(_String.address(), _MaxCount, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle mbtowc$MH() {
        return cfapi_h$constants$73.mbtowc$MH();
    }
    public static @C("int") int mbtowc (@C("wchar_t*") Addressable _DstCh, @C("char*") Addressable _SrcCh, @C("size_t") long _SrcSizeInBytes) {
        try {
            return (int)cfapi_h$constants$73.mbtowc$MH().invokeExact(_DstCh.address(), _SrcCh.address(), _SrcSizeInBytes);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _mbtowc_l$MH() {
        return cfapi_h$constants$73._mbtowc_l$MH();
    }
    public static @C("int") int _mbtowc_l (@C("wchar_t*") Addressable _DstCh, @C("char*") Addressable _SrcCh, @C("size_t") long _SrcSizeInBytes, @C("_locale_t") Addressable _Locale) {
        try {
            return (int)cfapi_h$constants$73._mbtowc_l$MH().invokeExact(_DstCh.address(), _SrcCh.address(), _SrcSizeInBytes, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle mbstowcs_s$MH() {
        return cfapi_h$constants$73.mbstowcs_s$MH();
    }
    public static @C("errno_t") int mbstowcs_s (@C("size_t*") Addressable _PtNumOfCharConverted, @C("wchar_t*") Addressable _DstBuf, @C("size_t") long _SizeInWords, @C("char*") Addressable _SrcBuf, @C("size_t") long _MaxCount) {
        try {
            return (int)cfapi_h$constants$73.mbstowcs_s$MH().invokeExact(_PtNumOfCharConverted.address(), _DstBuf.address(), _SizeInWords, _SrcBuf.address(), _MaxCount);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle mbstowcs$MH() {
        return cfapi_h$constants$73.mbstowcs$MH();
    }
    public static @C("size_t") long mbstowcs (@C("wchar_t*") Addressable _Dest, @C("char*") Addressable _Source, @C("size_t") long _MaxCount) {
        try {
            return (long)cfapi_h$constants$73.mbstowcs$MH().invokeExact(_Dest.address(), _Source.address(), _MaxCount);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _mbstowcs_s_l$MH() {
        return cfapi_h$constants$73._mbstowcs_s_l$MH();
    }
    public static @C("errno_t") int _mbstowcs_s_l (@C("size_t*") Addressable _PtNumOfCharConverted, @C("wchar_t*") Addressable _DstBuf, @C("size_t") long _SizeInWords, @C("char*") Addressable _SrcBuf, @C("size_t") long _MaxCount, @C("_locale_t") Addressable _Locale) {
        try {
            return (int)cfapi_h$constants$73._mbstowcs_s_l$MH().invokeExact(_PtNumOfCharConverted.address(), _DstBuf.address(), _SizeInWords, _SrcBuf.address(), _MaxCount, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _mbstowcs_l$MH() {
        return cfapi_h$constants$73._mbstowcs_l$MH();
    }
    public static @C("size_t") long _mbstowcs_l (@C("wchar_t*") Addressable _Dest, @C("char*") Addressable _Source, @C("size_t") long _MaxCount, @C("_locale_t") Addressable _Locale) {
        try {
            return (long)cfapi_h$constants$73._mbstowcs_l$MH().invokeExact(_Dest.address(), _Source.address(), _MaxCount, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle wctomb$MH() {
        return cfapi_h$constants$73.wctomb$MH();
    }
    public static @C("int") int wctomb (@C("char*") Addressable _MbCh, @C("wchar_t") short _WCh) {
        try {
            return (int)cfapi_h$constants$73.wctomb$MH().invokeExact(_MbCh.address(), _WCh);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wctomb_l$MH() {
        return cfapi_h$constants$73._wctomb_l$MH();
    }
    public static @C("int") int _wctomb_l (@C("char*") Addressable _MbCh, @C("wchar_t") short _WCh, @C("_locale_t") Addressable _Locale) {
        try {
            return (int)cfapi_h$constants$73._wctomb_l$MH().invokeExact(_MbCh.address(), _WCh, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle wctomb_s$MH() {
        return cfapi_h$constants$73.wctomb_s$MH();
    }
    public static @C("errno_t") int wctomb_s (@C("int*") Addressable _SizeConverted, @C("char*") Addressable _MbCh, @C("rsize_t") long _SizeInBytes, @C("wchar_t") short _WCh) {
        try {
            return (int)cfapi_h$constants$73.wctomb_s$MH().invokeExact(_SizeConverted.address(), _MbCh.address(), _SizeInBytes, _WCh);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wctomb_s_l$MH() {
        return cfapi_h$constants$73._wctomb_s_l$MH();
    }
    public static @C("errno_t") int _wctomb_s_l (@C("int*") Addressable _SizeConverted, @C("char*") Addressable _MbCh, @C("size_t") long _SizeInBytes, @C("wchar_t") short _WCh, @C("_locale_t") Addressable _Locale) {
        try {
            return (int)cfapi_h$constants$73._wctomb_s_l$MH().invokeExact(_SizeConverted.address(), _MbCh.address(), _SizeInBytes, _WCh, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle wcstombs_s$MH() {
        return cfapi_h$constants$73.wcstombs_s$MH();
    }
    public static @C("errno_t") int wcstombs_s (@C("size_t*") Addressable _PtNumOfCharConverted, @C("char*") Addressable _Dst, @C("size_t") long _DstSizeInBytes, @C("const wchar_t*") Addressable _Src, @C("size_t") long _MaxCountInBytes) {
        try {
            return (int)cfapi_h$constants$73.wcstombs_s$MH().invokeExact(_PtNumOfCharConverted.address(), _Dst.address(), _DstSizeInBytes, _Src.address(), _MaxCountInBytes);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle wcstombs$MH() {
        return cfapi_h$constants$73.wcstombs$MH();
    }
    public static @C("size_t") long wcstombs (@C("char*") Addressable _Dest, @C("const wchar_t*") Addressable _Source, @C("size_t") long _MaxCount) {
        try {
            return (long)cfapi_h$constants$73.wcstombs$MH().invokeExact(_Dest.address(), _Source.address(), _MaxCount);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wcstombs_s_l$MH() {
        return cfapi_h$constants$73._wcstombs_s_l$MH();
    }
    public static @C("errno_t") int _wcstombs_s_l (@C("size_t*") Addressable _PtNumOfCharConverted, @C("char*") Addressable _Dst, @C("size_t") long _DstSizeInBytes, @C("const wchar_t*") Addressable _Src, @C("size_t") long _MaxCountInBytes, @C("_locale_t") Addressable _Locale) {
        try {
            return (int)cfapi_h$constants$73._wcstombs_s_l$MH().invokeExact(_PtNumOfCharConverted.address(), _Dst.address(), _DstSizeInBytes, _Src.address(), _MaxCountInBytes, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _wcstombs_l$MH() {
        return cfapi_h$constants$73._wcstombs_l$MH();
    }
    public static @C("size_t") long _wcstombs_l (@C("char*") Addressable _Dest, @C("const wchar_t*") Addressable _Source, @C("size_t") long _MaxCount, @C("_locale_t") Addressable _Locale) {
        try {
            return (long)cfapi_h$constants$73._wcstombs_l$MH().invokeExact(_Dest.address(), _Source.address(), _MaxCount, _Locale.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _fullpath$MH() {
        return cfapi_h$constants$73._fullpath$MH();
    }
    public static @C("char*") MemoryAddress _fullpath (@C("char*") Addressable _Buffer, @C("char*") Addressable _Path, @C("size_t") long _BufferCount) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73._fullpath$MH().invokeExact(_Buffer.address(), _Path.address(), _BufferCount);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _makepath_s$MH() {
        return cfapi_h$constants$73._makepath_s$MH();
    }
    public static @C("errno_t") int _makepath_s (@C("char*") Addressable _Buffer, @C("size_t") long _BufferCount, @C("char*") Addressable _Drive, @C("char*") Addressable _Dir, @C("char*") Addressable _Filename, @C("char*") Addressable _Ext) {
        try {
            return (int)cfapi_h$constants$73._makepath_s$MH().invokeExact(_Buffer.address(), _BufferCount, _Drive.address(), _Dir.address(), _Filename.address(), _Ext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _makepath$MH() {
        return cfapi_h$constants$73._makepath$MH();
    }
    public static void _makepath (@C("char*") Addressable _Buffer, @C("char*") Addressable _Drive, @C("char*") Addressable _Dir, @C("char*") Addressable _Filename, @C("char*") Addressable _Ext) {
        try {
            cfapi_h$constants$73._makepath$MH().invokeExact(_Buffer.address(), _Drive.address(), _Dir.address(), _Filename.address(), _Ext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _splitpath$MH() {
        return cfapi_h$constants$73._splitpath$MH();
    }
    public static void _splitpath (@C("char*") Addressable _FullPath, @C("char*") Addressable _Drive, @C("char*") Addressable _Dir, @C("char*") Addressable _Filename, @C("char*") Addressable _Ext) {
        try {
            cfapi_h$constants$73._splitpath$MH().invokeExact(_FullPath.address(), _Drive.address(), _Dir.address(), _Filename.address(), _Ext.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _splitpath_s$MH() {
        return cfapi_h$constants$73._splitpath_s$MH();
    }
    public static @C("errno_t") int _splitpath_s (@C("char*") Addressable _FullPath, @C("char*") Addressable _Drive, @C("size_t") long _DriveCount, @C("char*") Addressable _Dir, @C("size_t") long _DirCount, @C("char*") Addressable _Filename, @C("size_t") long _FilenameCount, @C("char*") Addressable _Ext, @C("size_t") long _ExtCount) {
        try {
            return (int)cfapi_h$constants$73._splitpath_s$MH().invokeExact(_FullPath.address(), _Drive.address(), _DriveCount, _Dir.address(), _DirCount, _Filename.address(), _FilenameCount, _Ext.address(), _ExtCount);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle getenv_s$MH() {
        return cfapi_h$constants$73.getenv_s$MH();
    }
    public static @C("errno_t") int getenv_s (@C("size_t*") Addressable _RequiredCount, @C("char*") Addressable _Buffer, @C("rsize_t") long _BufferCount, @C("char*") Addressable _VarName) {
        try {
            return (int)cfapi_h$constants$73.getenv_s$MH().invokeExact(_RequiredCount.address(), _Buffer.address(), _BufferCount, _VarName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle __p___argc$MH() {
        return cfapi_h$constants$73.__p___argc$MH();
    }
    public static @C("int*") MemoryAddress __p___argc () {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73.__p___argc$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle __p___argv$MH() {
        return cfapi_h$constants$73.__p___argv$MH();
    }
    public static @C("char***") MemoryAddress __p___argv () {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73.__p___argv$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle __p___wargv$MH() {
        return cfapi_h$constants$73.__p___wargv$MH();
    }
    public static @C("wchar_t***") MemoryAddress __p___wargv () {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73.__p___wargv$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle __p__environ$MH() {
        return cfapi_h$constants$73.__p__environ$MH();
    }
    public static @C("char***") MemoryAddress __p__environ () {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73.__p__environ$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle __p__wenviron$MH() {
        return cfapi_h$constants$73.__p__wenviron$MH();
    }
    public static @C("wchar_t***") MemoryAddress __p__wenviron () {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73.__p__wenviron$MH().invokeExact();
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle getenv$MH() {
        return cfapi_h$constants$73.getenv$MH();
    }
    public static @C("char*") MemoryAddress getenv (@C("char*") Addressable _VarName) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)cfapi_h$constants$73.getenv$MH().invokeExact(_VarName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _dupenv_s$MH() {
        return cfapi_h$constants$73._dupenv_s$MH();
    }
    public static @C("errno_t") int _dupenv_s (@C("char**") Addressable _Buffer, @C("size_t*") Addressable _BufferCount, @C("char*") Addressable _VarName) {
        try {
            return (int)cfapi_h$constants$73._dupenv_s$MH().invokeExact(_Buffer.address(), _BufferCount.address(), _VarName.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle system$MH() {
        return cfapi_h$constants$73.system$MH();
    }
    public static @C("int") int system (@C("char*") Addressable _Command) {
        try {
            return (int)cfapi_h$constants$73.system$MH().invokeExact(_Command.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _putenv$MH() {
        return cfapi_h$constants$73._putenv$MH();
    }
    public static @C("int") int _putenv (@C("char*") Addressable _EnvString) {
        try {
            return (int)cfapi_h$constants$73._putenv$MH().invokeExact(_EnvString.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _putenv_s$MH() {
        return cfapi_h$constants$73._putenv_s$MH();
    }
    public static @C("errno_t") int _putenv_s (@C("char*") Addressable _Name, @C("char*") Addressable _Value) {
        try {
            return (int)cfapi_h$constants$73._putenv_s$MH().invokeExact(_Name.address(), _Value.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _searchenv_s$MH() {
        return cfapi_h$constants$73._searchenv_s$MH();
    }
    public static @C("errno_t") int _searchenv_s (@C("char*") Addressable _Filename, @C("char*") Addressable _VarName, @C("char*") Addressable _Buffer, @C("size_t") long _BufferCount) {
        try {
            return (int)cfapi_h$constants$73._searchenv_s$MH().invokeExact(_Filename.address(), _VarName.address(), _Buffer.address(), _BufferCount);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _searchenv$MH() {
        return cfapi_h$constants$73._searchenv$MH();
    }
    public static void _searchenv (@C("char*") Addressable _Filename, @C("char*") Addressable _VarName, @C("char*") Addressable _Buffer) {
        try {
            cfapi_h$constants$73._searchenv$MH().invokeExact(_Filename.address(), _VarName.address(), _Buffer.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _seterrormode$MH() {
        return cfapi_h$constants$73._seterrormode$MH();
    }
    public static void _seterrormode (@C("int") int _Mode) {
        try {
            cfapi_h$constants$73._seterrormode$MH().invokeExact(_Mode);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _beep$MH() {
        return cfapi_h$constants$73._beep$MH();
    }
    public static void _beep (@C("unsigned int") int _Frequency, @C("unsigned int") int _Duration) {
        try {
            cfapi_h$constants$73._beep$MH().invokeExact(_Frequency, _Duration);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle _sleep$MH() {
        return cfapi_h$constants$73._sleep$MH();
    }
    public static void _sleep (@C("unsigned long") int _Duration) {
        try {
            cfapi_h$constants$73._sleep$MH().invokeExact(_Duration);
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ecvt$MH() {
        return cfapi_h$constants$73.ecvt$MH();
    }
}


