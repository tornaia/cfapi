// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$60 extends cfapi_h$constants$59 {

    /* package-private */ cfapi_h$constants$60() {}
    static final MemoryLayout _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$Size$LAYOUT() { return _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$Size$VH_ = _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$Size$VH() { return _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$CriticalTemperature$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$CriticalTemperature$LAYOUT() { return _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$CriticalTemperature$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$CriticalTemperature$VH_ = _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("CriticalTemperature"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$CriticalTemperature$VH() { return _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$CriticalTemperature$VH_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$WarningTemperature$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$WarningTemperature$LAYOUT() { return _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$WarningTemperature$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$WarningTemperature$VH_ = _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("WarningTemperature"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$WarningTemperature$VH() { return _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$WarningTemperature$VH_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$InfoCount$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$InfoCount$LAYOUT() { return _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$InfoCount$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$InfoCount$VH_ = _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("InfoCount"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$InfoCount$VH() { return _STORAGE_TEMPERATURE_DATA_DESCRIPTOR$InfoCount$VH_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_THRESHOLD$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_SHORT.withName("Flags"),
        C_SHORT.withName("Index"),
        C_SHORT.withName("Threshold"),
        C_CHAR.withName("OverThreshold"),
        C_CHAR.withName("Reserved")
    ).withName("_STORAGE_TEMPERATURE_THRESHOLD");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_THRESHOLD$struct$LAYOUT() { return _STORAGE_TEMPERATURE_THRESHOLD$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_THRESHOLD$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_THRESHOLD$Version$LAYOUT() { return _STORAGE_TEMPERATURE_THRESHOLD$Version$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_THRESHOLD$Version$VH_ = _STORAGE_TEMPERATURE_THRESHOLD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_THRESHOLD$Version$VH() { return _STORAGE_TEMPERATURE_THRESHOLD$Version$VH_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_THRESHOLD$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_THRESHOLD$Size$LAYOUT() { return _STORAGE_TEMPERATURE_THRESHOLD$Size$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_THRESHOLD$Size$VH_ = _STORAGE_TEMPERATURE_THRESHOLD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_THRESHOLD$Size$VH() { return _STORAGE_TEMPERATURE_THRESHOLD$Size$VH_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_THRESHOLD$Flags$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_THRESHOLD$Flags$LAYOUT() { return _STORAGE_TEMPERATURE_THRESHOLD$Flags$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_THRESHOLD$Flags$VH_ = _STORAGE_TEMPERATURE_THRESHOLD$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_THRESHOLD$Flags$VH() { return _STORAGE_TEMPERATURE_THRESHOLD$Flags$VH_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_THRESHOLD$Index$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_THRESHOLD$Index$LAYOUT() { return _STORAGE_TEMPERATURE_THRESHOLD$Index$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_THRESHOLD$Index$VH_ = _STORAGE_TEMPERATURE_THRESHOLD$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Index"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_THRESHOLD$Index$VH() { return _STORAGE_TEMPERATURE_THRESHOLD$Index$VH_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_THRESHOLD$Threshold$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_THRESHOLD$Threshold$LAYOUT() { return _STORAGE_TEMPERATURE_THRESHOLD$Threshold$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_THRESHOLD$Threshold$VH_ = _STORAGE_TEMPERATURE_THRESHOLD$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Threshold"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_THRESHOLD$Threshold$VH() { return _STORAGE_TEMPERATURE_THRESHOLD$Threshold$VH_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_THRESHOLD$OverThreshold$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_THRESHOLD$OverThreshold$LAYOUT() { return _STORAGE_TEMPERATURE_THRESHOLD$OverThreshold$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_THRESHOLD$OverThreshold$VH_ = _STORAGE_TEMPERATURE_THRESHOLD$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("OverThreshold"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_THRESHOLD$OverThreshold$VH() { return _STORAGE_TEMPERATURE_THRESHOLD$OverThreshold$VH_; }

    static final MemoryLayout _STORAGE_TEMPERATURE_THRESHOLD$Reserved$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TEMPERATURE_THRESHOLD$Reserved$LAYOUT() { return _STORAGE_TEMPERATURE_THRESHOLD$Reserved$LAYOUT_; }

    static final VarHandle _STORAGE_TEMPERATURE_THRESHOLD$Reserved$VH_ = _STORAGE_TEMPERATURE_THRESHOLD$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _STORAGE_TEMPERATURE_THRESHOLD$Reserved$VH() { return _STORAGE_TEMPERATURE_THRESHOLD$Reserved$VH_; }

    static final int FormFactorUnknown() { return (int)0L; }

    static final int FormFactor3_5() { return (int)1L; }

    static final int FormFactor2_5() { return (int)2L; }

    static final int FormFactor1_8() { return (int)3L; }

    static final int FormFactor1_8Less() { return (int)4L; }

    static final int FormFactorEmbedded() { return (int)5L; }

    static final int FormFactorMemoryCard() { return (int)6L; }

    static final int FormFactormSata() { return (int)7L; }

    static final int FormFactorM_2() { return (int)8L; }

    static final int FormFactorPCIeBoard() { return (int)9L; }

    static final int FormFactorDimm() { return (int)10L; }

    static final int HealthStatusUnknown() { return (int)0L; }

    static final int HealthStatusNormal() { return (int)1L; }

    static final int HealthStatusThrottled() { return (int)2L; }

    static final int HealthStatusWarning() { return (int)3L; }

    static final int HealthStatusDisabled() { return (int)4L; }

    static final int HealthStatusFailed() { return (int)5L; }

    static final MemoryLayout _STORAGE_SPEC_VERSION$union$LAYOUT_ = MemoryLayout.ofUnion(
        MemoryLayout.ofUnion(
            C_CHAR.withName("SubMinor"),
            C_CHAR.withName("Minor"),
            C_SHORT.withName("AsUshort")
        ).withName("MinorVersion"),
        C_SHORT.withName("MajorVersion"),
        C_LONG.withName("AsUlong")
    ).withName("_STORAGE_SPEC_VERSION");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_SPEC_VERSION$union$LAYOUT() { return _STORAGE_SPEC_VERSION$union$LAYOUT_; }

    static final MemoryLayout _STORAGE_SPEC_VERSION$MinorVersion$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_CHAR.withName("SubMinor"),
        C_CHAR.withName("Minor"),
        C_SHORT.withName("AsUshort")
    );
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_SPEC_VERSION$MinorVersion$union$LAYOUT() { return _STORAGE_SPEC_VERSION$MinorVersion$union$LAYOUT_; }

    static final MemoryLayout _STORAGE_SPEC_VERSION$MinorVersion$SubMinor$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_SPEC_VERSION$MinorVersion$SubMinor$LAYOUT() { return _STORAGE_SPEC_VERSION$MinorVersion$SubMinor$LAYOUT_; }

    static final VarHandle _STORAGE_SPEC_VERSION$MinorVersion$SubMinor$VH_ = _STORAGE_SPEC_VERSION$MinorVersion$union$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("SubMinor"));
    static final java.lang.invoke.VarHandle _STORAGE_SPEC_VERSION$MinorVersion$SubMinor$VH() { return _STORAGE_SPEC_VERSION$MinorVersion$SubMinor$VH_; }

    static final MemoryLayout _STORAGE_SPEC_VERSION$MinorVersion$Minor$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_SPEC_VERSION$MinorVersion$Minor$LAYOUT() { return _STORAGE_SPEC_VERSION$MinorVersion$Minor$LAYOUT_; }

    static final VarHandle _STORAGE_SPEC_VERSION$MinorVersion$Minor$VH_ = _STORAGE_SPEC_VERSION$MinorVersion$union$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Minor"));
    static final java.lang.invoke.VarHandle _STORAGE_SPEC_VERSION$MinorVersion$Minor$VH() { return _STORAGE_SPEC_VERSION$MinorVersion$Minor$VH_; }

    static final MemoryLayout _STORAGE_SPEC_VERSION$MinorVersion$AsUshort$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_SPEC_VERSION$MinorVersion$AsUshort$LAYOUT() { return _STORAGE_SPEC_VERSION$MinorVersion$AsUshort$LAYOUT_; }

    static final VarHandle _STORAGE_SPEC_VERSION$MinorVersion$AsUshort$VH_ = _STORAGE_SPEC_VERSION$MinorVersion$union$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AsUshort"));
    static final java.lang.invoke.VarHandle _STORAGE_SPEC_VERSION$MinorVersion$AsUshort$VH() { return _STORAGE_SPEC_VERSION$MinorVersion$AsUshort$VH_; }

    static final MemoryLayout _STORAGE_SPEC_VERSION$MajorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_SPEC_VERSION$MajorVersion$LAYOUT() { return _STORAGE_SPEC_VERSION$MajorVersion$LAYOUT_; }

    static final VarHandle _STORAGE_SPEC_VERSION$MajorVersion$VH_ = _STORAGE_SPEC_VERSION$union$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MajorVersion"));
    static final java.lang.invoke.VarHandle _STORAGE_SPEC_VERSION$MajorVersion$VH() { return _STORAGE_SPEC_VERSION$MajorVersion$VH_; }

    static final MemoryLayout _STORAGE_SPEC_VERSION$AsUlong$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_SPEC_VERSION$AsUlong$LAYOUT() { return _STORAGE_SPEC_VERSION$AsUlong$LAYOUT_; }

    static final VarHandle _STORAGE_SPEC_VERSION$AsUlong$VH_ = _STORAGE_SPEC_VERSION$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AsUlong"));
    static final java.lang.invoke.VarHandle _STORAGE_SPEC_VERSION$AsUlong$VH() { return _STORAGE_SPEC_VERSION$AsUlong$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_DEVICE_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("DeviceId"),
        C_LONG.withName("Role"),
        C_INT.withName("HealthStatus"),
        C_INT.withName("CommandProtocol"),
        MemoryLayout.ofUnion(
            MemoryLayout.ofUnion(
                C_CHAR.withName("SubMinor"),
                C_CHAR.withName("Minor"),
                C_SHORT.withName("AsUshort")
            ).withName("MinorVersion"),
            C_SHORT.withName("MajorVersion"),
            C_LONG.withName("AsUlong")
        ).withName("SpecVersion"),
        C_INT.withName("FormFactor"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Vendor"),
        MemoryLayout.ofSequence(40, C_CHAR).withName("Model"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("FirmwareRevision"),
        C_LONGLONG.withName("Capacity"),
        MemoryLayout.ofSequence(32, C_CHAR).withName("PhysicalLocation"),
        MemoryLayout.ofSequence(2, C_LONG).withName("Reserved")
    ).withName("_STORAGE_PHYSICAL_DEVICE_DATA");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_DEVICE_DATA$struct$LAYOUT() { return _STORAGE_PHYSICAL_DEVICE_DATA$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_PHYSICAL_DEVICE_DATA$DeviceId$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_DEVICE_DATA$DeviceId$LAYOUT() { return _STORAGE_PHYSICAL_DEVICE_DATA$DeviceId$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_DEVICE_DATA$DeviceId$VH_ = _STORAGE_PHYSICAL_DEVICE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DeviceId"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_DEVICE_DATA$DeviceId$VH() { return _STORAGE_PHYSICAL_DEVICE_DATA$DeviceId$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_DEVICE_DATA$Role$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_DEVICE_DATA$Role$LAYOUT() { return _STORAGE_PHYSICAL_DEVICE_DATA$Role$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_DEVICE_DATA$Role$VH_ = _STORAGE_PHYSICAL_DEVICE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Role"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_DEVICE_DATA$Role$VH() { return _STORAGE_PHYSICAL_DEVICE_DATA$Role$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_DEVICE_DATA$HealthStatus$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_DEVICE_DATA$HealthStatus$LAYOUT() { return _STORAGE_PHYSICAL_DEVICE_DATA$HealthStatus$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_DEVICE_DATA$HealthStatus$VH_ = _STORAGE_PHYSICAL_DEVICE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("HealthStatus"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_DEVICE_DATA$HealthStatus$VH() { return _STORAGE_PHYSICAL_DEVICE_DATA$HealthStatus$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_DEVICE_DATA$CommandProtocol$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_DEVICE_DATA$CommandProtocol$LAYOUT() { return _STORAGE_PHYSICAL_DEVICE_DATA$CommandProtocol$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_DEVICE_DATA$CommandProtocol$VH_ = _STORAGE_PHYSICAL_DEVICE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CommandProtocol"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_DEVICE_DATA$CommandProtocol$VH() { return _STORAGE_PHYSICAL_DEVICE_DATA$CommandProtocol$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_DEVICE_DATA$FormFactor$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_DEVICE_DATA$FormFactor$LAYOUT() { return _STORAGE_PHYSICAL_DEVICE_DATA$FormFactor$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_DEVICE_DATA$FormFactor$VH_ = _STORAGE_PHYSICAL_DEVICE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FormFactor"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_DEVICE_DATA$FormFactor$VH() { return _STORAGE_PHYSICAL_DEVICE_DATA$FormFactor$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_DEVICE_DATA$Capacity$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_DEVICE_DATA$Capacity$LAYOUT() { return _STORAGE_PHYSICAL_DEVICE_DATA$Capacity$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_DEVICE_DATA$Capacity$VH_ = _STORAGE_PHYSICAL_DEVICE_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Capacity"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_DEVICE_DATA$Capacity$VH() { return _STORAGE_PHYSICAL_DEVICE_DATA$Capacity$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_ADAPTER_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("AdapterId"),
        C_INT.withName("HealthStatus"),
        C_INT.withName("CommandProtocol"),
        MemoryLayout.ofUnion(
            MemoryLayout.ofUnion(
                C_CHAR.withName("SubMinor"),
                C_CHAR.withName("Minor"),
                C_SHORT.withName("AsUshort")
            ).withName("MinorVersion"),
            C_SHORT.withName("MajorVersion"),
            C_LONG.withName("AsUlong")
        ).withName("SpecVersion"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Vendor"),
        MemoryLayout.ofSequence(40, C_CHAR).withName("Model"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("FirmwareRevision"),
        MemoryLayout.ofSequence(32, C_CHAR).withName("PhysicalLocation"),
        C_CHAR.withName("ExpanderConnected"),
        MemoryLayout.ofSequence(3, C_CHAR).withName("Reserved0"),
        MemoryLayout.ofSequence(3, C_LONG).withName("Reserved1")
    ).withName("_STORAGE_PHYSICAL_ADAPTER_DATA");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_ADAPTER_DATA$struct$LAYOUT() { return _STORAGE_PHYSICAL_ADAPTER_DATA$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_PHYSICAL_ADAPTER_DATA$AdapterId$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_ADAPTER_DATA$AdapterId$LAYOUT() { return _STORAGE_PHYSICAL_ADAPTER_DATA$AdapterId$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_ADAPTER_DATA$AdapterId$VH_ = _STORAGE_PHYSICAL_ADAPTER_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AdapterId"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_ADAPTER_DATA$AdapterId$VH() { return _STORAGE_PHYSICAL_ADAPTER_DATA$AdapterId$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_ADAPTER_DATA$HealthStatus$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_ADAPTER_DATA$HealthStatus$LAYOUT() { return _STORAGE_PHYSICAL_ADAPTER_DATA$HealthStatus$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_ADAPTER_DATA$HealthStatus$VH_ = _STORAGE_PHYSICAL_ADAPTER_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("HealthStatus"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_ADAPTER_DATA$HealthStatus$VH() { return _STORAGE_PHYSICAL_ADAPTER_DATA$HealthStatus$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_ADAPTER_DATA$CommandProtocol$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_ADAPTER_DATA$CommandProtocol$LAYOUT() { return _STORAGE_PHYSICAL_ADAPTER_DATA$CommandProtocol$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_ADAPTER_DATA$CommandProtocol$VH_ = _STORAGE_PHYSICAL_ADAPTER_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CommandProtocol"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_ADAPTER_DATA$CommandProtocol$VH() { return _STORAGE_PHYSICAL_ADAPTER_DATA$CommandProtocol$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_ADAPTER_DATA$ExpanderConnected$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_ADAPTER_DATA$ExpanderConnected$LAYOUT() { return _STORAGE_PHYSICAL_ADAPTER_DATA$ExpanderConnected$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_ADAPTER_DATA$ExpanderConnected$VH_ = _STORAGE_PHYSICAL_ADAPTER_DATA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ExpanderConnected"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_ADAPTER_DATA$ExpanderConnected$VH() { return _STORAGE_PHYSICAL_ADAPTER_DATA$ExpanderConnected$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_NODE_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("NodeId"),
        C_LONG.withName("AdapterCount"),
        C_LONG.withName("AdapterDataLength"),
        C_LONG.withName("AdapterDataOffset"),
        C_LONG.withName("DeviceCount"),
        C_LONG.withName("DeviceDataLength"),
        C_LONG.withName("DeviceDataOffset"),
        MemoryLayout.ofSequence(3, C_LONG).withName("Reserved")
    ).withName("_STORAGE_PHYSICAL_NODE_DATA");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_NODE_DATA$struct$LAYOUT() { return _STORAGE_PHYSICAL_NODE_DATA$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_PHYSICAL_NODE_DATA$NodeId$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_NODE_DATA$NodeId$LAYOUT() { return _STORAGE_PHYSICAL_NODE_DATA$NodeId$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_NODE_DATA$NodeId$VH_ = _STORAGE_PHYSICAL_NODE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NodeId"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_NODE_DATA$NodeId$VH() { return _STORAGE_PHYSICAL_NODE_DATA$NodeId$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_NODE_DATA$AdapterCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_NODE_DATA$AdapterCount$LAYOUT() { return _STORAGE_PHYSICAL_NODE_DATA$AdapterCount$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_NODE_DATA$AdapterCount$VH_ = _STORAGE_PHYSICAL_NODE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AdapterCount"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_NODE_DATA$AdapterCount$VH() { return _STORAGE_PHYSICAL_NODE_DATA$AdapterCount$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_NODE_DATA$AdapterDataLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_NODE_DATA$AdapterDataLength$LAYOUT() { return _STORAGE_PHYSICAL_NODE_DATA$AdapterDataLength$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_NODE_DATA$AdapterDataLength$VH_ = _STORAGE_PHYSICAL_NODE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AdapterDataLength"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_NODE_DATA$AdapterDataLength$VH() { return _STORAGE_PHYSICAL_NODE_DATA$AdapterDataLength$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_NODE_DATA$AdapterDataOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_NODE_DATA$AdapterDataOffset$LAYOUT() { return _STORAGE_PHYSICAL_NODE_DATA$AdapterDataOffset$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_NODE_DATA$AdapterDataOffset$VH_ = _STORAGE_PHYSICAL_NODE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AdapterDataOffset"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_NODE_DATA$AdapterDataOffset$VH() { return _STORAGE_PHYSICAL_NODE_DATA$AdapterDataOffset$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_NODE_DATA$DeviceCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_NODE_DATA$DeviceCount$LAYOUT() { return _STORAGE_PHYSICAL_NODE_DATA$DeviceCount$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_NODE_DATA$DeviceCount$VH_ = _STORAGE_PHYSICAL_NODE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DeviceCount"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_NODE_DATA$DeviceCount$VH() { return _STORAGE_PHYSICAL_NODE_DATA$DeviceCount$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_NODE_DATA$DeviceDataLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_NODE_DATA$DeviceDataLength$LAYOUT() { return _STORAGE_PHYSICAL_NODE_DATA$DeviceDataLength$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_NODE_DATA$DeviceDataLength$VH_ = _STORAGE_PHYSICAL_NODE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DeviceDataLength"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_NODE_DATA$DeviceDataLength$VH() { return _STORAGE_PHYSICAL_NODE_DATA$DeviceDataLength$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_NODE_DATA$DeviceDataOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_NODE_DATA$DeviceDataOffset$LAYOUT() { return _STORAGE_PHYSICAL_NODE_DATA$DeviceDataOffset$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_NODE_DATA$DeviceDataOffset$VH_ = _STORAGE_PHYSICAL_NODE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DeviceDataOffset"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_NODE_DATA$DeviceDataOffset$VH() { return _STORAGE_PHYSICAL_NODE_DATA$DeviceDataOffset$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("NodeCount"),
        C_LONG.withName("Reserved"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONG.withName("NodeId"),
            C_LONG.withName("AdapterCount"),
            C_LONG.withName("AdapterDataLength"),
            C_LONG.withName("AdapterDataOffset"),
            C_LONG.withName("DeviceCount"),
            C_LONG.withName("DeviceDataLength"),
            C_LONG.withName("DeviceDataOffset"),
            MemoryLayout.ofSequence(3, C_LONG).withName("Reserved")
        ).withName("_STORAGE_PHYSICAL_NODE_DATA")).withName("Node")
    ).withName("_STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$struct$LAYOUT() { return _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$Version$LAYOUT() { return _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$Version$VH_ = _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$Version$VH() { return _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$Size$LAYOUT() { return _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$Size$VH_ = _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$Size$VH() { return _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$NodeCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$NodeCount$LAYOUT() { return _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$NodeCount$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$NodeCount$VH_ = _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NodeCount"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$NodeCount$VH() { return _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$NodeCount$VH_; }

    static final MemoryLayout _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$Reserved$LAYOUT() { return _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$Reserved$LAYOUT_; }

    static final VarHandle _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$Reserved$VH_ = _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$Reserved$VH() { return _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR$Reserved$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("LunMaxIoCount"),
        C_LONG.withName("AdapterMaxIoCount")
    ).withName("_STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$struct$LAYOUT() { return _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$Version$LAYOUT() { return _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$Version$VH_ = _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$Version$VH() { return _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$Size$LAYOUT() { return _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$Size$VH_ = _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$Size$VH() { return _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$LunMaxIoCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$LunMaxIoCount$LAYOUT() { return _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$LunMaxIoCount$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$LunMaxIoCount$VH_ = _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LunMaxIoCount"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$LunMaxIoCount$VH() { return _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$LunMaxIoCount$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$AdapterMaxIoCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$AdapterMaxIoCount$LAYOUT() { return _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$AdapterMaxIoCount$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$AdapterMaxIoCount$VH_ = _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AdapterMaxIoCount"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$AdapterMaxIoCount$VH() { return _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR$AdapterMaxIoCount$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONGLONG.withName("Attributes")
    ).withName("_STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$struct$LAYOUT() { return _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$Version$LAYOUT() { return _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$Version$VH_ = _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$Version$VH() { return _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$Size$LAYOUT() { return _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$Size$VH_ = _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$Size$VH() { return _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$Attributes$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$Attributes$LAYOUT() { return _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$Attributes$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$Attributes$VH_ = _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Attributes"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$Attributes$VH() { return _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR$Attributes$VH_; }

    static final int DiskHealthUnknown() { return (int)0L; }

    static final int DiskHealthUnhealthy() { return (int)1L; }

    static final int DiskHealthWarning() { return (int)2L; }

    static final int DiskHealthHealthy() { return (int)3L; }

    static final int DiskHealthMax() { return (int)4L; }

    static final int DiskOpStatusNone() { return (int)0L; }

    static final int DiskOpStatusUnknown() { return (int)1L; }

    static final int DiskOpStatusOk() { return (int)2L; }

    static final int DiskOpStatusPredictingFailure() { return (int)3L; }

    static final int DiskOpStatusInService() { return (int)4L; }

    static final int DiskOpStatusHardwareError() { return (int)5L; }

    static final int DiskOpStatusNotUsable() { return (int)6L; }

    static final int DiskOpStatusTransientError() { return (int)7L; }

    static final int DiskOpStatusMissing() { return (int)8L; }

    static final int DiskOpReasonUnknown() { return (int)0L; }

    static final int DiskOpReasonScsiSenseCode() { return (int)1L; }

    static final int DiskOpReasonMedia() { return (int)2L; }

    static final int DiskOpReasonIo() { return (int)3L; }

    static final int DiskOpReasonThresholdExceeded() { return (int)4L; }

    static final int DiskOpReasonLostData() { return (int)5L; }

    static final int DiskOpReasonEnergySource() { return (int)6L; }

    static final int DiskOpReasonConfiguration() { return (int)7L; }

    static final int DiskOpReasonDeviceController() { return (int)8L; }

    static final int DiskOpReasonMediaController() { return (int)9L; }

    static final int DiskOpReasonComponent() { return (int)10L; }

    static final int DiskOpReasonNVDIMM_N() { return (int)11L; }

    static final int DiskOpReasonBackgroundOperation() { return (int)12L; }

    static final int DiskOpReasonInvalidFirmware() { return (int)13L; }

    static final int DiskOpReasonHealthCheck() { return (int)14L; }

    static final int DiskOpReasonLostDataPersistence() { return (int)15L; }

    static final int DiskOpReasonDisabledByPlatform() { return (int)16L; }

    static final int DiskOpReasonLostWritePersistence() { return (int)17L; }

    static final int DiskOpReasonDataPersistenceLossImminent() { return (int)18L; }

    static final int DiskOpReasonWritePersistenceLossImminent() { return (int)19L; }

    static final int DiskOpReasonMax() { return (int)20L; }

    static final MemoryLayout _STORAGE_OPERATIONAL_REASON$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_INT.withName("Reason"),
        MemoryLayout.ofUnion(
            MemoryLayout.ofStruct(
                C_CHAR.withName("SenseKey"),
                C_CHAR.withName("ASC"),
                C_CHAR.withName("ASCQ"),
                C_CHAR.withName("Reserved")
            ).withName("ScsiSenseKey"),
            MemoryLayout.ofStruct(
                C_CHAR.withName("CriticalHealth"),
                MemoryLayout.ofSequence(2, C_CHAR).withName("ModuleHealth"),
                C_CHAR.withName("ErrorThresholdStatus")
            ).withName("NVDIMM_N"),
            C_LONG.withName("AsUlong")
        ).withName("RawBytes")
    ).withName("_STORAGE_OPERATIONAL_REASON");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OPERATIONAL_REASON$struct$LAYOUT() { return _STORAGE_OPERATIONAL_REASON$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_OPERATIONAL_REASON$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OPERATIONAL_REASON$Version$LAYOUT() { return _STORAGE_OPERATIONAL_REASON$Version$LAYOUT_; }

    static final VarHandle _STORAGE_OPERATIONAL_REASON$Version$VH_ = _STORAGE_OPERATIONAL_REASON$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_OPERATIONAL_REASON$Version$VH() { return _STORAGE_OPERATIONAL_REASON$Version$VH_; }

    static final MemoryLayout _STORAGE_OPERATIONAL_REASON$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OPERATIONAL_REASON$Size$LAYOUT() { return _STORAGE_OPERATIONAL_REASON$Size$LAYOUT_; }

    static final VarHandle _STORAGE_OPERATIONAL_REASON$Size$VH_ = _STORAGE_OPERATIONAL_REASON$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_OPERATIONAL_REASON$Size$VH() { return _STORAGE_OPERATIONAL_REASON$Size$VH_; }

    static final MemoryLayout _STORAGE_OPERATIONAL_REASON$Reason$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OPERATIONAL_REASON$Reason$LAYOUT() { return _STORAGE_OPERATIONAL_REASON$Reason$LAYOUT_; }

    static final VarHandle _STORAGE_OPERATIONAL_REASON$Reason$VH_ = _STORAGE_OPERATIONAL_REASON$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reason"));
    static final java.lang.invoke.VarHandle _STORAGE_OPERATIONAL_REASON$Reason$VH() { return _STORAGE_OPERATIONAL_REASON$Reason$VH_; }

    static final MemoryLayout _STORAGE_OPERATIONAL_REASON$RawBytes$union$LAYOUT_ = MemoryLayout.ofUnion(
        MemoryLayout.ofStruct(
            C_CHAR.withName("SenseKey"),
            C_CHAR.withName("ASC"),
            C_CHAR.withName("ASCQ"),
            C_CHAR.withName("Reserved")
        ).withName("ScsiSenseKey"),
        MemoryLayout.ofStruct(
            C_CHAR.withName("CriticalHealth"),
            MemoryLayout.ofSequence(2, C_CHAR).withName("ModuleHealth"),
            C_CHAR.withName("ErrorThresholdStatus")
        ).withName("NVDIMM_N"),
        C_LONG.withName("AsUlong")
    );
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OPERATIONAL_REASON$RawBytes$union$LAYOUT() { return _STORAGE_OPERATIONAL_REASON$RawBytes$union$LAYOUT_; }

    static final MemoryLayout _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("SenseKey"),
        C_CHAR.withName("ASC"),
        C_CHAR.withName("ASCQ"),
        C_CHAR.withName("Reserved")
    );
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$struct$LAYOUT() { return _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$SenseKey$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$SenseKey$LAYOUT() { return _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$SenseKey$LAYOUT_; }

    static final VarHandle _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$SenseKey$VH_ = _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("SenseKey"));
    static final java.lang.invoke.VarHandle _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$SenseKey$VH() { return _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$SenseKey$VH_; }

    static final MemoryLayout _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$ASC$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$ASC$LAYOUT() { return _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$ASC$LAYOUT_; }

    static final VarHandle _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$ASC$VH_ = _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ASC"));
    static final java.lang.invoke.VarHandle _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$ASC$VH() { return _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$ASC$VH_; }

    static final MemoryLayout _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$ASCQ$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$ASCQ$LAYOUT() { return _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$ASCQ$LAYOUT_; }

    static final VarHandle _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$ASCQ$VH_ = _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ASCQ"));
    static final java.lang.invoke.VarHandle _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$ASCQ$VH() { return _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$ASCQ$VH_; }

    static final MemoryLayout _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$Reserved$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$Reserved$LAYOUT() { return _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$Reserved$LAYOUT_; }

    static final VarHandle _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$Reserved$VH_ = _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$Reserved$VH() { return _STORAGE_OPERATIONAL_REASON$RawBytes$ScsiSenseKey$Reserved$VH_; }

    static final MemoryLayout _STORAGE_OPERATIONAL_REASON$RawBytes$NVDIMM_N$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("CriticalHealth"),
        MemoryLayout.ofSequence(2, C_CHAR).withName("ModuleHealth"),
        C_CHAR.withName("ErrorThresholdStatus")
    );
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OPERATIONAL_REASON$RawBytes$NVDIMM_N$struct$LAYOUT() { return _STORAGE_OPERATIONAL_REASON$RawBytes$NVDIMM_N$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_OPERATIONAL_REASON$RawBytes$NVDIMM_N$CriticalHealth$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OPERATIONAL_REASON$RawBytes$NVDIMM_N$CriticalHealth$LAYOUT() { return _STORAGE_OPERATIONAL_REASON$RawBytes$NVDIMM_N$CriticalHealth$LAYOUT_; }

    static final VarHandle _STORAGE_OPERATIONAL_REASON$RawBytes$NVDIMM_N$CriticalHealth$VH_ = _STORAGE_OPERATIONAL_REASON$RawBytes$NVDIMM_N$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("CriticalHealth"));
    static final java.lang.invoke.VarHandle _STORAGE_OPERATIONAL_REASON$RawBytes$NVDIMM_N$CriticalHealth$VH() { return _STORAGE_OPERATIONAL_REASON$RawBytes$NVDIMM_N$CriticalHealth$VH_; }

    static final MemoryLayout _STORAGE_OPERATIONAL_REASON$RawBytes$NVDIMM_N$ErrorThresholdStatus$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OPERATIONAL_REASON$RawBytes$NVDIMM_N$ErrorThresholdStatus$LAYOUT() { return _STORAGE_OPERATIONAL_REASON$RawBytes$NVDIMM_N$ErrorThresholdStatus$LAYOUT_; }

    static final VarHandle _STORAGE_OPERATIONAL_REASON$RawBytes$NVDIMM_N$ErrorThresholdStatus$VH_ = _STORAGE_OPERATIONAL_REASON$RawBytes$NVDIMM_N$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ErrorThresholdStatus"));
    static final java.lang.invoke.VarHandle _STORAGE_OPERATIONAL_REASON$RawBytes$NVDIMM_N$ErrorThresholdStatus$VH() { return _STORAGE_OPERATIONAL_REASON$RawBytes$NVDIMM_N$ErrorThresholdStatus$VH_; }

    static final MemoryLayout _STORAGE_OPERATIONAL_REASON$RawBytes$AsUlong$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OPERATIONAL_REASON$RawBytes$AsUlong$LAYOUT() { return _STORAGE_OPERATIONAL_REASON$RawBytes$AsUlong$LAYOUT_; }

    static final VarHandle _STORAGE_OPERATIONAL_REASON$RawBytes$AsUlong$VH_ = _STORAGE_OPERATIONAL_REASON$RawBytes$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AsUlong"));
    static final java.lang.invoke.VarHandle _STORAGE_OPERATIONAL_REASON$RawBytes$AsUlong$VH() { return _STORAGE_OPERATIONAL_REASON$RawBytes$AsUlong$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_MANAGEMENT_STATUS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_INT.withName("Health"),
        C_LONG.withName("NumberOfOperationalStatus"),
        C_LONG.withName("NumberOfAdditionalReasons"),
        MemoryLayout.ofSequence(16, C_INT).withName("OperationalStatus"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONG.withName("Version"),
            C_LONG.withName("Size"),
            C_INT.withName("Reason"),
            MemoryLayout.ofUnion(
                MemoryLayout.ofStruct(
                    C_CHAR.withName("SenseKey"),
                    C_CHAR.withName("ASC"),
                    C_CHAR.withName("ASCQ"),
                    C_CHAR.withName("Reserved")
                ).withName("ScsiSenseKey"),
                MemoryLayout.ofStruct(
                    C_CHAR.withName("CriticalHealth"),
                    MemoryLayout.ofSequence(2, C_CHAR).withName("ModuleHealth"),
                    C_CHAR.withName("ErrorThresholdStatus")
                ).withName("NVDIMM_N"),
                C_LONG.withName("AsUlong")
            ).withName("RawBytes")
        ).withName("_STORAGE_OPERATIONAL_REASON")).withName("AdditionalReasons")
    ).withName("_STORAGE_DEVICE_MANAGEMENT_STATUS");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_MANAGEMENT_STATUS$struct$LAYOUT() { return _STORAGE_DEVICE_MANAGEMENT_STATUS$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_DEVICE_MANAGEMENT_STATUS$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_MANAGEMENT_STATUS$Version$LAYOUT() { return _STORAGE_DEVICE_MANAGEMENT_STATUS$Version$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_MANAGEMENT_STATUS$Version$VH_ = _STORAGE_DEVICE_MANAGEMENT_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_MANAGEMENT_STATUS$Version$VH() { return _STORAGE_DEVICE_MANAGEMENT_STATUS$Version$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_MANAGEMENT_STATUS$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_MANAGEMENT_STATUS$Size$LAYOUT() { return _STORAGE_DEVICE_MANAGEMENT_STATUS$Size$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_MANAGEMENT_STATUS$Size$VH_ = _STORAGE_DEVICE_MANAGEMENT_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_MANAGEMENT_STATUS$Size$VH() { return _STORAGE_DEVICE_MANAGEMENT_STATUS$Size$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_MANAGEMENT_STATUS$Health$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_MANAGEMENT_STATUS$Health$LAYOUT() { return _STORAGE_DEVICE_MANAGEMENT_STATUS$Health$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_MANAGEMENT_STATUS$Health$VH_ = _STORAGE_DEVICE_MANAGEMENT_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Health"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_MANAGEMENT_STATUS$Health$VH() { return _STORAGE_DEVICE_MANAGEMENT_STATUS$Health$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_MANAGEMENT_STATUS$NumberOfOperationalStatus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_MANAGEMENT_STATUS$NumberOfOperationalStatus$LAYOUT() { return _STORAGE_DEVICE_MANAGEMENT_STATUS$NumberOfOperationalStatus$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_MANAGEMENT_STATUS$NumberOfOperationalStatus$VH_ = _STORAGE_DEVICE_MANAGEMENT_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfOperationalStatus"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_MANAGEMENT_STATUS$NumberOfOperationalStatus$VH() { return _STORAGE_DEVICE_MANAGEMENT_STATUS$NumberOfOperationalStatus$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_MANAGEMENT_STATUS$NumberOfAdditionalReasons$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_MANAGEMENT_STATUS$NumberOfAdditionalReasons$LAYOUT() { return _STORAGE_DEVICE_MANAGEMENT_STATUS$NumberOfAdditionalReasons$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_MANAGEMENT_STATUS$NumberOfAdditionalReasons$VH_ = _STORAGE_DEVICE_MANAGEMENT_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfAdditionalReasons"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_MANAGEMENT_STATUS$NumberOfAdditionalReasons$VH() { return _STORAGE_DEVICE_MANAGEMENT_STATUS$NumberOfAdditionalReasons$VH_; }

    static final MemoryLayout _STORAGE_ADAPTER_SERIAL_NUMBER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        MemoryLayout.ofSequence(128, C_SHORT).withName("SerialNumber")
    ).withName("_STORAGE_ADAPTER_SERIAL_NUMBER");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ADAPTER_SERIAL_NUMBER$struct$LAYOUT() { return _STORAGE_ADAPTER_SERIAL_NUMBER$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_ADAPTER_SERIAL_NUMBER$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ADAPTER_SERIAL_NUMBER$Version$LAYOUT() { return _STORAGE_ADAPTER_SERIAL_NUMBER$Version$LAYOUT_; }

    static final VarHandle _STORAGE_ADAPTER_SERIAL_NUMBER$Version$VH_ = _STORAGE_ADAPTER_SERIAL_NUMBER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_ADAPTER_SERIAL_NUMBER$Version$VH() { return _STORAGE_ADAPTER_SERIAL_NUMBER$Version$VH_; }

    static final MemoryLayout _STORAGE_ADAPTER_SERIAL_NUMBER$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ADAPTER_SERIAL_NUMBER$Size$LAYOUT() { return _STORAGE_ADAPTER_SERIAL_NUMBER$Size$LAYOUT_; }

    static final VarHandle _STORAGE_ADAPTER_SERIAL_NUMBER$Size$VH_ = _STORAGE_ADAPTER_SERIAL_NUMBER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_ADAPTER_SERIAL_NUMBER$Size$VH() { return _STORAGE_ADAPTER_SERIAL_NUMBER$Size$VH_; }

    static final int ZonedDeviceTypeUnknown() { return (int)0L; }

    static final int ZonedDeviceTypeHostManaged() { return (int)1L; }

    static final int ZonedDeviceTypeHostAware() { return (int)2L; }

    static final int ZonedDeviceTypeDeviceManaged() { return (int)3L; }

    static final int ZoneTypeUnknown() { return (int)0L; }

    static final int ZoneTypeConventional() { return (int)1L; }

    static final int ZoneTypeSequentialWriteRequired() { return (int)2L; }

    static final int ZoneTypeSequentialWritePreferred() { return (int)3L; }

    static final int ZoneTypeMax() { return (int)4L; }

    static final MemoryLayout _STORAGE_ZONE_GROUP$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ZoneCount"),
        C_INT.withName("ZoneType"),
        C_LONGLONG.withName("ZoneSize")
    ).withName("_STORAGE_ZONE_GROUP");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONE_GROUP$struct$LAYOUT() { return _STORAGE_ZONE_GROUP$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_ZONE_GROUP$ZoneCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONE_GROUP$ZoneCount$LAYOUT() { return _STORAGE_ZONE_GROUP$ZoneCount$LAYOUT_; }

    static final VarHandle _STORAGE_ZONE_GROUP$ZoneCount$VH_ = _STORAGE_ZONE_GROUP$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ZoneCount"));
    static final java.lang.invoke.VarHandle _STORAGE_ZONE_GROUP$ZoneCount$VH() { return _STORAGE_ZONE_GROUP$ZoneCount$VH_; }

    static final MemoryLayout _STORAGE_ZONE_GROUP$ZoneType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONE_GROUP$ZoneType$LAYOUT() { return _STORAGE_ZONE_GROUP$ZoneType$LAYOUT_; }

    static final VarHandle _STORAGE_ZONE_GROUP$ZoneType$VH_ = _STORAGE_ZONE_GROUP$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ZoneType"));
    static final java.lang.invoke.VarHandle _STORAGE_ZONE_GROUP$ZoneType$VH() { return _STORAGE_ZONE_GROUP$ZoneType$VH_; }

    static final MemoryLayout _STORAGE_ZONE_GROUP$ZoneSize$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONE_GROUP$ZoneSize$LAYOUT() { return _STORAGE_ZONE_GROUP$ZoneSize$LAYOUT_; }

    static final VarHandle _STORAGE_ZONE_GROUP$ZoneSize$VH_ = _STORAGE_ZONE_GROUP$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ZoneSize"));
    static final java.lang.invoke.VarHandle _STORAGE_ZONE_GROUP$ZoneSize$VH() { return _STORAGE_ZONE_GROUP$ZoneSize$VH_; }

    static final MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_INT.withName("DeviceType"),
        C_LONG.withName("ZoneCount"),
        MemoryLayout.ofUnion(
            MemoryLayout.ofStruct(
                C_LONG.withName("MaxOpenZoneCount"),
                C_CHAR.withName("UnrestrictedRead"),
                MemoryLayout.ofSequence(3, C_CHAR).withName("Reserved")
            ).withName("SequentialRequiredZone"),
            MemoryLayout.ofStruct(
                C_LONG.withName("OptimalOpenZoneCount"),
                C_LONG.withName("Reserved")
            ).withName("SequentialPreferredZone")
        ).withName("ZoneAttributes"),
        C_LONG.withName("ZoneGroupCount"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONG.withName("ZoneCount"),
            C_INT.withName("ZoneType"),
            C_LONGLONG.withName("ZoneSize")
        ).withName("_STORAGE_ZONE_GROUP")).withName("ZoneGroup")
    ).withName("_STORAGE_ZONED_DEVICE_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$struct$LAYOUT() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$Version$LAYOUT() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _STORAGE_ZONED_DEVICE_DESCRIPTOR$Version$VH_ = _STORAGE_ZONED_DEVICE_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_ZONED_DEVICE_DESCRIPTOR$Version$VH() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$Size$LAYOUT() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _STORAGE_ZONED_DEVICE_DESCRIPTOR$Size$VH_ = _STORAGE_ZONED_DEVICE_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_ZONED_DEVICE_DESCRIPTOR$Size$VH() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$DeviceType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$DeviceType$LAYOUT() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$DeviceType$LAYOUT_; }

    static final VarHandle _STORAGE_ZONED_DEVICE_DESCRIPTOR$DeviceType$VH_ = _STORAGE_ZONED_DEVICE_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DeviceType"));
    static final java.lang.invoke.VarHandle _STORAGE_ZONED_DEVICE_DESCRIPTOR$DeviceType$VH() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$DeviceType$VH_; }

    static final MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneCount$LAYOUT() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneCount$LAYOUT_; }

    static final VarHandle _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneCount$VH_ = _STORAGE_ZONED_DEVICE_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ZoneCount"));
    static final java.lang.invoke.VarHandle _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneCount$VH() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneCount$VH_; }

    static final MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$union$LAYOUT_ = MemoryLayout.ofUnion(
        MemoryLayout.ofStruct(
            C_LONG.withName("MaxOpenZoneCount"),
            C_CHAR.withName("UnrestrictedRead"),
            MemoryLayout.ofSequence(3, C_CHAR).withName("Reserved")
        ).withName("SequentialRequiredZone"),
        MemoryLayout.ofStruct(
            C_LONG.withName("OptimalOpenZoneCount"),
            C_LONG.withName("Reserved")
        ).withName("SequentialPreferredZone")
    );
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$union$LAYOUT() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$union$LAYOUT_; }

    static final MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialRequiredZone$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("MaxOpenZoneCount"),
        C_CHAR.withName("UnrestrictedRead"),
        MemoryLayout.ofSequence(3, C_CHAR).withName("Reserved")
    );
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialRequiredZone$struct$LAYOUT() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialRequiredZone$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialRequiredZone$MaxOpenZoneCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialRequiredZone$MaxOpenZoneCount$LAYOUT() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialRequiredZone$MaxOpenZoneCount$LAYOUT_; }

    static final VarHandle _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialRequiredZone$MaxOpenZoneCount$VH_ = _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialRequiredZone$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaxOpenZoneCount"));
    static final java.lang.invoke.VarHandle _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialRequiredZone$MaxOpenZoneCount$VH() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialRequiredZone$MaxOpenZoneCount$VH_; }

    static final MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialRequiredZone$UnrestrictedRead$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialRequiredZone$UnrestrictedRead$LAYOUT() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialRequiredZone$UnrestrictedRead$LAYOUT_; }

    static final VarHandle _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialRequiredZone$UnrestrictedRead$VH_ = _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialRequiredZone$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("UnrestrictedRead"));
    static final java.lang.invoke.VarHandle _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialRequiredZone$UnrestrictedRead$VH() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialRequiredZone$UnrestrictedRead$VH_; }

    static final MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialPreferredZone$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("OptimalOpenZoneCount"),
        C_LONG.withName("Reserved")
    );
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialPreferredZone$struct$LAYOUT() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialPreferredZone$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialPreferredZone$OptimalOpenZoneCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialPreferredZone$OptimalOpenZoneCount$LAYOUT() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialPreferredZone$OptimalOpenZoneCount$LAYOUT_; }

    static final VarHandle _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialPreferredZone$OptimalOpenZoneCount$VH_ = _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialPreferredZone$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OptimalOpenZoneCount"));
    static final java.lang.invoke.VarHandle _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialPreferredZone$OptimalOpenZoneCount$VH() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialPreferredZone$OptimalOpenZoneCount$VH_; }

    static final MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialPreferredZone$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialPreferredZone$Reserved$LAYOUT() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialPreferredZone$Reserved$LAYOUT_; }

    static final VarHandle _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialPreferredZone$Reserved$VH_ = _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialPreferredZone$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialPreferredZone$Reserved$VH() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneAttributes$SequentialPreferredZone$Reserved$VH_; }

    static final MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneGroupCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneGroupCount$LAYOUT() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneGroupCount$LAYOUT_; }

    static final VarHandle _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneGroupCount$VH_ = _STORAGE_ZONED_DEVICE_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ZoneGroupCount"));
    static final java.lang.invoke.VarHandle _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneGroupCount$VH() { return _STORAGE_ZONED_DEVICE_DESCRIPTOR$ZoneGroupCount$VH_; }

    static final MemoryLayout _DEVICE_LOCATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Socket"),
        C_LONG.withName("Slot"),
        C_LONG.withName("Adapter"),
        C_LONG.withName("Port"),
        C_LONG.withName("Channel"),
        C_LONG.withName("Device"),
        C_LONG.withName("Target"),
        C_LONG.withName("Lun")
    ).withName("_DEVICE_LOCATION");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_LOCATION$struct$LAYOUT() { return _DEVICE_LOCATION$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_LOCATION$Socket$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_LOCATION$Socket$LAYOUT() { return _DEVICE_LOCATION$Socket$LAYOUT_; }

    static final VarHandle _DEVICE_LOCATION$Socket$VH_ = _DEVICE_LOCATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Socket"));
    static final java.lang.invoke.VarHandle _DEVICE_LOCATION$Socket$VH() { return _DEVICE_LOCATION$Socket$VH_; }

    static final MemoryLayout _DEVICE_LOCATION$Slot$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_LOCATION$Slot$LAYOUT() { return _DEVICE_LOCATION$Slot$LAYOUT_; }

    static final VarHandle _DEVICE_LOCATION$Slot$VH_ = _DEVICE_LOCATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Slot"));
    static final java.lang.invoke.VarHandle _DEVICE_LOCATION$Slot$VH() { return _DEVICE_LOCATION$Slot$VH_; }

    static final MemoryLayout _DEVICE_LOCATION$Adapter$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_LOCATION$Adapter$LAYOUT() { return _DEVICE_LOCATION$Adapter$LAYOUT_; }

    static final VarHandle _DEVICE_LOCATION$Adapter$VH_ = _DEVICE_LOCATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Adapter"));
    static final java.lang.invoke.VarHandle _DEVICE_LOCATION$Adapter$VH() { return _DEVICE_LOCATION$Adapter$VH_; }

    static final MemoryLayout _DEVICE_LOCATION$Port$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_LOCATION$Port$LAYOUT() { return _DEVICE_LOCATION$Port$LAYOUT_; }

    static final VarHandle _DEVICE_LOCATION$Port$VH_ = _DEVICE_LOCATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Port"));
    static final java.lang.invoke.VarHandle _DEVICE_LOCATION$Port$VH() { return _DEVICE_LOCATION$Port$VH_; }

    static final MemoryLayout _DEVICE_LOCATION$Channel$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_LOCATION$Channel$LAYOUT() { return _DEVICE_LOCATION$Channel$LAYOUT_; }

    static final VarHandle _DEVICE_LOCATION$Channel$VH_ = _DEVICE_LOCATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Channel"));
    static final java.lang.invoke.VarHandle _DEVICE_LOCATION$Channel$VH() { return _DEVICE_LOCATION$Channel$VH_; }

    static final MemoryLayout _DEVICE_LOCATION$Device$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_LOCATION$Device$LAYOUT() { return _DEVICE_LOCATION$Device$LAYOUT_; }

    static final VarHandle _DEVICE_LOCATION$Device$VH_ = _DEVICE_LOCATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Device"));
    static final java.lang.invoke.VarHandle _DEVICE_LOCATION$Device$VH() { return _DEVICE_LOCATION$Device$VH_; }

    static final MemoryLayout _DEVICE_LOCATION$Target$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_LOCATION$Target$LAYOUT() { return _DEVICE_LOCATION$Target$LAYOUT_; }

    static final VarHandle _DEVICE_LOCATION$Target$VH_ = _DEVICE_LOCATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Target"));
    static final java.lang.invoke.VarHandle _DEVICE_LOCATION$Target$VH() { return _DEVICE_LOCATION$Target$VH_; }

    static final MemoryLayout _DEVICE_LOCATION$Lun$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_LOCATION$Lun$LAYOUT() { return _DEVICE_LOCATION$Lun$LAYOUT_; }

    static final VarHandle _DEVICE_LOCATION$Lun$VH_ = _DEVICE_LOCATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Lun"));
    static final java.lang.invoke.VarHandle _DEVICE_LOCATION$Lun$VH() { return _DEVICE_LOCATION$Lun$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_LOCATION_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Socket"),
            C_LONG.withName("Slot"),
            C_LONG.withName("Adapter"),
            C_LONG.withName("Port"),
            C_LONG.withName("Channel"),
            C_LONG.withName("Device"),
            C_LONG.withName("Target"),
            C_LONG.withName("Lun")
        ).withName("Location"),
        C_LONG.withName("StringOffset")
    ).withName("_STORAGE_DEVICE_LOCATION_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_LOCATION_DESCRIPTOR$struct$LAYOUT() { return _STORAGE_DEVICE_LOCATION_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_DEVICE_LOCATION_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_LOCATION_DESCRIPTOR$Version$LAYOUT() { return _STORAGE_DEVICE_LOCATION_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_LOCATION_DESCRIPTOR$Version$VH_ = _STORAGE_DEVICE_LOCATION_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_LOCATION_DESCRIPTOR$Version$VH() { return _STORAGE_DEVICE_LOCATION_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_LOCATION_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_LOCATION_DESCRIPTOR$Size$LAYOUT() { return _STORAGE_DEVICE_LOCATION_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_LOCATION_DESCRIPTOR$Size$VH_ = _STORAGE_DEVICE_LOCATION_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_LOCATION_DESCRIPTOR$Size$VH() { return _STORAGE_DEVICE_LOCATION_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_LOCATION_DESCRIPTOR$StringOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_LOCATION_DESCRIPTOR$StringOffset$LAYOUT() { return _STORAGE_DEVICE_LOCATION_DESCRIPTOR$StringOffset$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_LOCATION_DESCRIPTOR$StringOffset$VH_ = _STORAGE_DEVICE_LOCATION_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StringOffset"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_LOCATION_DESCRIPTOR$StringOffset$VH() { return _STORAGE_DEVICE_LOCATION_DESCRIPTOR$StringOffset$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_NUMA_PROPERTY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("NumaNode")
    ).withName("_STORAGE_DEVICE_NUMA_PROPERTY");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_NUMA_PROPERTY$struct$LAYOUT() { return _STORAGE_DEVICE_NUMA_PROPERTY$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_DEVICE_NUMA_PROPERTY$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_NUMA_PROPERTY$Version$LAYOUT() { return _STORAGE_DEVICE_NUMA_PROPERTY$Version$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_NUMA_PROPERTY$Version$VH_ = _STORAGE_DEVICE_NUMA_PROPERTY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_NUMA_PROPERTY$Version$VH() { return _STORAGE_DEVICE_NUMA_PROPERTY$Version$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_NUMA_PROPERTY$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_NUMA_PROPERTY$Size$LAYOUT() { return _STORAGE_DEVICE_NUMA_PROPERTY$Size$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_NUMA_PROPERTY$Size$VH_ = _STORAGE_DEVICE_NUMA_PROPERTY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_NUMA_PROPERTY$Size$VH() { return _STORAGE_DEVICE_NUMA_PROPERTY$Size$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_NUMA_PROPERTY$NumaNode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_NUMA_PROPERTY$NumaNode$LAYOUT() { return _STORAGE_DEVICE_NUMA_PROPERTY$NumaNode$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_NUMA_PROPERTY$NumaNode$VH_ = _STORAGE_DEVICE_NUMA_PROPERTY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumaNode"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_NUMA_PROPERTY$NumaNode$VH() { return _STORAGE_DEVICE_NUMA_PROPERTY$NumaNode$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("UnsafeShutdownCount")
    ).withName("_STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$struct$LAYOUT() { return _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$Version$LAYOUT() { return _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$Version$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$Version$VH_ = _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$Version$VH() { return _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$Version$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$Size$LAYOUT() { return _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$Size$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$Size$VH_ = _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$Size$VH() { return _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$Size$VH_; }

    static final MemoryLayout _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$UnsafeShutdownCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$UnsafeShutdownCount$LAYOUT() { return _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$UnsafeShutdownCount$LAYOUT_; }

    static final VarHandle _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$UnsafeShutdownCount$VH_ = _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("UnsafeShutdownCount"));
    static final java.lang.invoke.VarHandle _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$UnsafeShutdownCount$VH() { return _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT$UnsafeShutdownCount$VH_; }

    static final MemoryLayout _STORAGE_HW_ENDURANCE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ValidFields"),
        C_LONG.withName("GroupId"),
        MemoryLayout.ofStruct(
            C_INT
        ).withName("Flags"),
        C_LONG.withName("LifePercentage"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("BytesReadCount"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("ByteWriteCount")
    ).withName("_STORAGE_HW_ENDURANCE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_ENDURANCE_INFO$struct$LAYOUT() { return _STORAGE_HW_ENDURANCE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_HW_ENDURANCE_INFO$ValidFields$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_ENDURANCE_INFO$ValidFields$LAYOUT() { return _STORAGE_HW_ENDURANCE_INFO$ValidFields$LAYOUT_; }

    static final VarHandle _STORAGE_HW_ENDURANCE_INFO$ValidFields$VH_ = _STORAGE_HW_ENDURANCE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ValidFields"));
    static final java.lang.invoke.VarHandle _STORAGE_HW_ENDURANCE_INFO$ValidFields$VH() { return _STORAGE_HW_ENDURANCE_INFO$ValidFields$VH_; }

    static final MemoryLayout _STORAGE_HW_ENDURANCE_INFO$GroupId$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_ENDURANCE_INFO$GroupId$LAYOUT() { return _STORAGE_HW_ENDURANCE_INFO$GroupId$LAYOUT_; }

    static final VarHandle _STORAGE_HW_ENDURANCE_INFO$GroupId$VH_ = _STORAGE_HW_ENDURANCE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GroupId"));
    static final java.lang.invoke.VarHandle _STORAGE_HW_ENDURANCE_INFO$GroupId$VH() { return _STORAGE_HW_ENDURANCE_INFO$GroupId$VH_; }

    static final MemoryLayout _STORAGE_HW_ENDURANCE_INFO$Flags$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT
    );
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_ENDURANCE_INFO$Flags$struct$LAYOUT() { return _STORAGE_HW_ENDURANCE_INFO$Flags$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_HW_ENDURANCE_INFO$LifePercentage$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_ENDURANCE_INFO$LifePercentage$LAYOUT() { return _STORAGE_HW_ENDURANCE_INFO$LifePercentage$LAYOUT_; }

    static final VarHandle _STORAGE_HW_ENDURANCE_INFO$LifePercentage$VH_ = _STORAGE_HW_ENDURANCE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LifePercentage"));
    static final java.lang.invoke.VarHandle _STORAGE_HW_ENDURANCE_INFO$LifePercentage$VH() { return _STORAGE_HW_ENDURANCE_INFO$LifePercentage$VH_; }

    static final MemoryLayout _STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        MemoryLayout.ofStruct(
            C_LONG.withName("ValidFields"),
            C_LONG.withName("GroupId"),
            MemoryLayout.ofStruct(
                C_INT
            ).withName("Flags"),
            C_LONG.withName("LifePercentage"),
            MemoryLayout.ofSequence(16, C_CHAR).withName("BytesReadCount"),
            MemoryLayout.ofSequence(16, C_CHAR).withName("ByteWriteCount")
        ).withName("EnduranceInfo")
    ).withName("_STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR$struct$LAYOUT() { return _STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR$Version$LAYOUT() { return _STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR$Version$LAYOUT_; }

    static final VarHandle _STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR$Version$VH_ = _STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR$Version$VH() { return _STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR$Version$VH_; }

    static final MemoryLayout _STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR$Size$LAYOUT() { return _STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR$Size$LAYOUT_; }

    static final VarHandle _STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR$Size$VH_ = _STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR$Size$VH() { return _STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR$Size$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_RANGE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("StartingOffset"),
        C_LONGLONG.withName("LengthInBytes")
    ).withName("_DEVICE_DATA_SET_RANGE");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_RANGE$struct$LAYOUT() { return _DEVICE_DATA_SET_RANGE$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DATA_SET_RANGE$StartingOffset$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_RANGE$StartingOffset$LAYOUT() { return _DEVICE_DATA_SET_RANGE$StartingOffset$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_RANGE$StartingOffset$VH_ = _DEVICE_DATA_SET_RANGE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("StartingOffset"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_RANGE$StartingOffset$VH() { return _DEVICE_DATA_SET_RANGE$StartingOffset$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_RANGE$LengthInBytes$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_RANGE$LengthInBytes$LAYOUT() { return _DEVICE_DATA_SET_RANGE$LengthInBytes$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_RANGE$LengthInBytes$VH_ = _DEVICE_DATA_SET_RANGE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LengthInBytes"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_RANGE$LengthInBytes$VH() { return _DEVICE_DATA_SET_RANGE$LengthInBytes$VH_; }

    static final MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        C_LONG.withName("Action"),
        C_LONG.withName("Flags"),
        C_LONG.withName("ParameterBlockOffset"),
        C_LONG.withName("ParameterBlockLength"),
        C_LONG.withName("DataSetRangesOffset"),
        C_LONG.withName("DataSetRangesLength")
    ).withName("_DEVICE_MANAGE_DATA_SET_ATTRIBUTES");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$struct$LAYOUT() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$Size$LAYOUT() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$Size$LAYOUT_; }

    static final VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$Size$VH_ = _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$Size$VH() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$Size$VH_; }

    static final MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$Action$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$Action$LAYOUT() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$Action$LAYOUT_; }

    static final VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$Action$VH_ = _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Action"));
    static final java.lang.invoke.VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$Action$VH() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$Action$VH_; }

    static final MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$Flags$LAYOUT() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$Flags$LAYOUT_; }

    static final VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$Flags$VH_ = _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$Flags$VH() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$Flags$VH_; }

    static final MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$ParameterBlockOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$ParameterBlockOffset$LAYOUT() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$ParameterBlockOffset$LAYOUT_; }

    static final VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$ParameterBlockOffset$VH_ = _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ParameterBlockOffset"));
    static final java.lang.invoke.VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$ParameterBlockOffset$VH() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$ParameterBlockOffset$VH_; }

    static final MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$ParameterBlockLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$ParameterBlockLength$LAYOUT() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$ParameterBlockLength$LAYOUT_; }

    static final VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$ParameterBlockLength$VH_ = _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ParameterBlockLength"));
    static final java.lang.invoke.VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$ParameterBlockLength$VH() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$ParameterBlockLength$VH_; }

    static final MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$DataSetRangesOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$DataSetRangesOffset$LAYOUT() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$DataSetRangesOffset$LAYOUT_; }

    static final VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$DataSetRangesOffset$VH_ = _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DataSetRangesOffset"));
    static final java.lang.invoke.VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$DataSetRangesOffset$VH() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$DataSetRangesOffset$VH_; }

    static final MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$DataSetRangesLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$DataSetRangesLength$LAYOUT() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$DataSetRangesLength$LAYOUT_; }

    static final VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$DataSetRangesLength$VH_ = _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DataSetRangesLength"));
    static final java.lang.invoke.VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$DataSetRangesLength$VH() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES$DataSetRangesLength$VH_; }

    static final MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        C_LONG.withName("Action"),
        C_LONG.withName("Flags"),
        C_LONG.withName("OperationStatus"),
        C_LONG.withName("ExtendedError"),
        C_LONG.withName("TargetDetailedError"),
        C_LONG.withName("ReservedStatus"),
        C_LONG.withName("OutputBlockOffset"),
        C_LONG.withName("OutputBlockLength")
    ).withName("_DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$struct$LAYOUT() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$Size$LAYOUT() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$Size$LAYOUT_; }

    static final VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$Size$VH_ = _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$Size$VH() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$Size$VH_; }

    static final MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$Action$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$Action$LAYOUT() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$Action$LAYOUT_; }

    static final VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$Action$VH_ = _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Action"));
    static final java.lang.invoke.VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$Action$VH() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$Action$VH_; }

    static final MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$Flags$LAYOUT() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$Flags$LAYOUT_; }

    static final VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$Flags$VH_ = _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$Flags$VH() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$Flags$VH_; }

    static final MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$OperationStatus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$OperationStatus$LAYOUT() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$OperationStatus$LAYOUT_; }

    static final VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$OperationStatus$VH_ = _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OperationStatus"));
    static final java.lang.invoke.VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$OperationStatus$VH() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$OperationStatus$VH_; }

    static final MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$ExtendedError$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$ExtendedError$LAYOUT() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$ExtendedError$LAYOUT_; }

    static final VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$ExtendedError$VH_ = _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ExtendedError"));
    static final java.lang.invoke.VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$ExtendedError$VH() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$ExtendedError$VH_; }

    static final MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$TargetDetailedError$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$TargetDetailedError$LAYOUT() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$TargetDetailedError$LAYOUT_; }

    static final VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$TargetDetailedError$VH_ = _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TargetDetailedError"));
    static final java.lang.invoke.VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$TargetDetailedError$VH() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$TargetDetailedError$VH_; }

    static final MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$ReservedStatus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$ReservedStatus$LAYOUT() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$ReservedStatus$LAYOUT_; }

    static final VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$ReservedStatus$VH_ = _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ReservedStatus"));
    static final java.lang.invoke.VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$ReservedStatus$VH() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$ReservedStatus$VH_; }

    static final MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$OutputBlockOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$OutputBlockOffset$LAYOUT() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$OutputBlockOffset$LAYOUT_; }

    static final VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$OutputBlockOffset$VH_ = _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OutputBlockOffset"));
    static final java.lang.invoke.VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$OutputBlockOffset$VH() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$OutputBlockOffset$VH_; }

    static final MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$OutputBlockLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$OutputBlockLength$LAYOUT() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$OutputBlockLength$LAYOUT_; }

    static final VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$OutputBlockLength$VH_ = _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OutputBlockLength"));
    static final java.lang.invoke.VarHandle _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$OutputBlockLength$VH() { return _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT$OutputBlockLength$VH_; }

    static final MemoryLayout _DEVICE_DSM_DEFINITION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Action"),
        C_CHAR.withName("SingleRange"),
        MemoryLayout.ofPaddingBits(24),
        C_LONG.withName("ParameterBlockAlignment"),
        C_LONG.withName("ParameterBlockLength"),
        C_CHAR.withName("HasOutput"),
        MemoryLayout.ofPaddingBits(24),
        C_LONG.withName("OutputBlockAlignment"),
        C_LONG.withName("OutputBlockLength")
    ).withName("_DEVICE_DSM_DEFINITION");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_DEFINITION$struct$LAYOUT() { return _DEVICE_DSM_DEFINITION$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DSM_DEFINITION$Action$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_DEFINITION$Action$LAYOUT() { return _DEVICE_DSM_DEFINITION$Action$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_DEFINITION$Action$VH_ = _DEVICE_DSM_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Action"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_DEFINITION$Action$VH() { return _DEVICE_DSM_DEFINITION$Action$VH_; }

    static final MemoryLayout _DEVICE_DSM_DEFINITION$SingleRange$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_DEFINITION$SingleRange$LAYOUT() { return _DEVICE_DSM_DEFINITION$SingleRange$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_DEFINITION$SingleRange$VH_ = _DEVICE_DSM_DEFINITION$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("SingleRange"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_DEFINITION$SingleRange$VH() { return _DEVICE_DSM_DEFINITION$SingleRange$VH_; }

    static final MemoryLayout _DEVICE_DSM_DEFINITION$ParameterBlockAlignment$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_DEFINITION$ParameterBlockAlignment$LAYOUT() { return _DEVICE_DSM_DEFINITION$ParameterBlockAlignment$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_DEFINITION$ParameterBlockAlignment$VH_ = _DEVICE_DSM_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ParameterBlockAlignment"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_DEFINITION$ParameterBlockAlignment$VH() { return _DEVICE_DSM_DEFINITION$ParameterBlockAlignment$VH_; }

    static final MemoryLayout _DEVICE_DSM_DEFINITION$ParameterBlockLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_DEFINITION$ParameterBlockLength$LAYOUT() { return _DEVICE_DSM_DEFINITION$ParameterBlockLength$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_DEFINITION$ParameterBlockLength$VH_ = _DEVICE_DSM_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ParameterBlockLength"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_DEFINITION$ParameterBlockLength$VH() { return _DEVICE_DSM_DEFINITION$ParameterBlockLength$VH_; }

    static final MemoryLayout _DEVICE_DSM_DEFINITION$HasOutput$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_DEFINITION$HasOutput$LAYOUT() { return _DEVICE_DSM_DEFINITION$HasOutput$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_DEFINITION$HasOutput$VH_ = _DEVICE_DSM_DEFINITION$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("HasOutput"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_DEFINITION$HasOutput$VH() { return _DEVICE_DSM_DEFINITION$HasOutput$VH_; }

    static final MemoryLayout _DEVICE_DSM_DEFINITION$OutputBlockAlignment$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_DEFINITION$OutputBlockAlignment$LAYOUT() { return _DEVICE_DSM_DEFINITION$OutputBlockAlignment$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_DEFINITION$OutputBlockAlignment$VH_ = _DEVICE_DSM_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OutputBlockAlignment"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_DEFINITION$OutputBlockAlignment$VH() { return _DEVICE_DSM_DEFINITION$OutputBlockAlignment$VH_; }

    static final MemoryLayout _DEVICE_DSM_DEFINITION$OutputBlockLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_DEFINITION$OutputBlockLength$LAYOUT() { return _DEVICE_DSM_DEFINITION$OutputBlockLength$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_DEFINITION$OutputBlockLength$VH_ = _DEVICE_DSM_DEFINITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OutputBlockLength"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_DEFINITION$OutputBlockLength$VH() { return _DEVICE_DSM_DEFINITION$OutputBlockLength$VH_; }

    static final MemoryLayout _DEVICE_DSM_NOTIFICATION_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        C_LONG.withName("Flags"),
        C_LONG.withName("NumFileTypeIDs"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("_GUID")).withName("FileTypeID")
    ).withName("_DEVICE_DSM_NOTIFICATION_PARAMETERS");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_NOTIFICATION_PARAMETERS$struct$LAYOUT() { return _DEVICE_DSM_NOTIFICATION_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DSM_NOTIFICATION_PARAMETERS$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_NOTIFICATION_PARAMETERS$Size$LAYOUT() { return _DEVICE_DSM_NOTIFICATION_PARAMETERS$Size$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_NOTIFICATION_PARAMETERS$Size$VH_ = _DEVICE_DSM_NOTIFICATION_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_NOTIFICATION_PARAMETERS$Size$VH() { return _DEVICE_DSM_NOTIFICATION_PARAMETERS$Size$VH_; }

    static final MemoryLayout _DEVICE_DSM_NOTIFICATION_PARAMETERS$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_NOTIFICATION_PARAMETERS$Flags$LAYOUT() { return _DEVICE_DSM_NOTIFICATION_PARAMETERS$Flags$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_NOTIFICATION_PARAMETERS$Flags$VH_ = _DEVICE_DSM_NOTIFICATION_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_NOTIFICATION_PARAMETERS$Flags$VH() { return _DEVICE_DSM_NOTIFICATION_PARAMETERS$Flags$VH_; }

    static final MemoryLayout _DEVICE_DSM_NOTIFICATION_PARAMETERS$NumFileTypeIDs$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_NOTIFICATION_PARAMETERS$NumFileTypeIDs$LAYOUT() { return _DEVICE_DSM_NOTIFICATION_PARAMETERS$NumFileTypeIDs$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_NOTIFICATION_PARAMETERS$NumFileTypeIDs$VH_ = _DEVICE_DSM_NOTIFICATION_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumFileTypeIDs"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_NOTIFICATION_PARAMETERS$NumFileTypeIDs$VH() { return _DEVICE_DSM_NOTIFICATION_PARAMETERS$NumFileTypeIDs$VH_; }

    static final MemoryLayout _STORAGE_OFFLOAD_TOKEN$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(4, C_CHAR).withName("TokenType"),
        MemoryLayout.ofSequence(2, C_CHAR).withName("Reserved"),
        MemoryLayout.ofSequence(2, C_CHAR).withName("TokenIdLength"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(504, C_CHAR).withName("Reserved2")
        ).withName("StorageOffloadZeroDataToken"),
        MemoryLayout.ofSequence(504, C_CHAR).withName("Token")
    ).withName("_STORAGE_OFFLOAD_TOKEN");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OFFLOAD_TOKEN$struct$LAYOUT() { return _STORAGE_OFFLOAD_TOKEN$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_OFFLOAD_TOKEN$StorageOffloadZeroDataToken$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(504, C_CHAR).withName("Reserved2")
    );
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OFFLOAD_TOKEN$StorageOffloadZeroDataToken$struct$LAYOUT() { return _STORAGE_OFFLOAD_TOKEN$StorageOffloadZeroDataToken$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DSM_OFFLOAD_READ_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        C_LONG.withName("TimeToLive"),
        MemoryLayout.ofSequence(2, C_LONG).withName("Reserved")
    ).withName("_DEVICE_DSM_OFFLOAD_READ_PARAMETERS");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_OFFLOAD_READ_PARAMETERS$struct$LAYOUT() { return _DEVICE_DSM_OFFLOAD_READ_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DSM_OFFLOAD_READ_PARAMETERS$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_OFFLOAD_READ_PARAMETERS$Flags$LAYOUT() { return _DEVICE_DSM_OFFLOAD_READ_PARAMETERS$Flags$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_OFFLOAD_READ_PARAMETERS$Flags$VH_ = _DEVICE_DSM_OFFLOAD_READ_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_OFFLOAD_READ_PARAMETERS$Flags$VH() { return _DEVICE_DSM_OFFLOAD_READ_PARAMETERS$Flags$VH_; }

    static final MemoryLayout _DEVICE_DSM_OFFLOAD_READ_PARAMETERS$TimeToLive$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_OFFLOAD_READ_PARAMETERS$TimeToLive$LAYOUT() { return _DEVICE_DSM_OFFLOAD_READ_PARAMETERS$TimeToLive$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_OFFLOAD_READ_PARAMETERS$TimeToLive$VH_ = _DEVICE_DSM_OFFLOAD_READ_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TimeToLive"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_OFFLOAD_READ_PARAMETERS$TimeToLive$VH() { return _DEVICE_DSM_OFFLOAD_READ_PARAMETERS$TimeToLive$VH_; }

    static final MemoryLayout _STORAGE_OFFLOAD_READ_OUTPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("OffloadReadFlags"),
        C_LONG.withName("Reserved"),
        C_LONGLONG.withName("LengthProtected"),
        C_LONG.withName("TokenLength"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(4, C_CHAR).withName("TokenType"),
            MemoryLayout.ofSequence(2, C_CHAR).withName("Reserved"),
            MemoryLayout.ofSequence(2, C_CHAR).withName("TokenIdLength"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(504, C_CHAR).withName("Reserved2")
            ).withName("StorageOffloadZeroDataToken"),
            MemoryLayout.ofSequence(504, C_CHAR).withName("Token")
        ).withName("Token"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_STORAGE_OFFLOAD_READ_OUTPUT");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OFFLOAD_READ_OUTPUT$struct$LAYOUT() { return _STORAGE_OFFLOAD_READ_OUTPUT$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_OFFLOAD_READ_OUTPUT$OffloadReadFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OFFLOAD_READ_OUTPUT$OffloadReadFlags$LAYOUT() { return _STORAGE_OFFLOAD_READ_OUTPUT$OffloadReadFlags$LAYOUT_; }

    static final VarHandle _STORAGE_OFFLOAD_READ_OUTPUT$OffloadReadFlags$VH_ = _STORAGE_OFFLOAD_READ_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OffloadReadFlags"));
    static final java.lang.invoke.VarHandle _STORAGE_OFFLOAD_READ_OUTPUT$OffloadReadFlags$VH() { return _STORAGE_OFFLOAD_READ_OUTPUT$OffloadReadFlags$VH_; }

    static final MemoryLayout _STORAGE_OFFLOAD_READ_OUTPUT$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OFFLOAD_READ_OUTPUT$Reserved$LAYOUT() { return _STORAGE_OFFLOAD_READ_OUTPUT$Reserved$LAYOUT_; }

    static final VarHandle _STORAGE_OFFLOAD_READ_OUTPUT$Reserved$VH_ = _STORAGE_OFFLOAD_READ_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _STORAGE_OFFLOAD_READ_OUTPUT$Reserved$VH() { return _STORAGE_OFFLOAD_READ_OUTPUT$Reserved$VH_; }

    static final MemoryLayout _STORAGE_OFFLOAD_READ_OUTPUT$LengthProtected$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OFFLOAD_READ_OUTPUT$LengthProtected$LAYOUT() { return _STORAGE_OFFLOAD_READ_OUTPUT$LengthProtected$LAYOUT_; }

    static final VarHandle _STORAGE_OFFLOAD_READ_OUTPUT$LengthProtected$VH_ = _STORAGE_OFFLOAD_READ_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LengthProtected"));
    static final java.lang.invoke.VarHandle _STORAGE_OFFLOAD_READ_OUTPUT$LengthProtected$VH() { return _STORAGE_OFFLOAD_READ_OUTPUT$LengthProtected$VH_; }

    static final MemoryLayout _STORAGE_OFFLOAD_READ_OUTPUT$TokenLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OFFLOAD_READ_OUTPUT$TokenLength$LAYOUT() { return _STORAGE_OFFLOAD_READ_OUTPUT$TokenLength$LAYOUT_; }

    static final VarHandle _STORAGE_OFFLOAD_READ_OUTPUT$TokenLength$VH_ = _STORAGE_OFFLOAD_READ_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TokenLength"));
    static final java.lang.invoke.VarHandle _STORAGE_OFFLOAD_READ_OUTPUT$TokenLength$VH() { return _STORAGE_OFFLOAD_READ_OUTPUT$TokenLength$VH_; }

    static final MemoryLayout _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        C_LONG.withName("Reserved"),
        C_LONGLONG.withName("TokenOffset"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(4, C_CHAR).withName("TokenType"),
            MemoryLayout.ofSequence(2, C_CHAR).withName("Reserved"),
            MemoryLayout.ofSequence(2, C_CHAR).withName("TokenIdLength"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(504, C_CHAR).withName("Reserved2")
            ).withName("StorageOffloadZeroDataToken"),
            MemoryLayout.ofSequence(504, C_CHAR).withName("Token")
        ).withName("Token")
    ).withName("_DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$struct$LAYOUT() { return _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$Flags$LAYOUT() { return _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$Flags$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$Flags$VH_ = _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$Flags$VH() { return _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$Flags$VH_; }

    static final MemoryLayout _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$Reserved$LAYOUT() { return _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$Reserved$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$Reserved$VH_ = _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$Reserved$VH() { return _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$Reserved$VH_; }

    static final MemoryLayout _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$TokenOffset$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$TokenOffset$LAYOUT() { return _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$TokenOffset$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$TokenOffset$VH_ = _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TokenOffset"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$TokenOffset$VH() { return _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS$TokenOffset$VH_; }

    static final MemoryLayout _STORAGE_OFFLOAD_WRITE_OUTPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("OffloadWriteFlags"),
        C_LONG.withName("Reserved"),
        C_LONGLONG.withName("LengthCopied")
    ).withName("_STORAGE_OFFLOAD_WRITE_OUTPUT");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OFFLOAD_WRITE_OUTPUT$struct$LAYOUT() { return _STORAGE_OFFLOAD_WRITE_OUTPUT$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_OFFLOAD_WRITE_OUTPUT$OffloadWriteFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OFFLOAD_WRITE_OUTPUT$OffloadWriteFlags$LAYOUT() { return _STORAGE_OFFLOAD_WRITE_OUTPUT$OffloadWriteFlags$LAYOUT_; }

    static final VarHandle _STORAGE_OFFLOAD_WRITE_OUTPUT$OffloadWriteFlags$VH_ = _STORAGE_OFFLOAD_WRITE_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OffloadWriteFlags"));
    static final java.lang.invoke.VarHandle _STORAGE_OFFLOAD_WRITE_OUTPUT$OffloadWriteFlags$VH() { return _STORAGE_OFFLOAD_WRITE_OUTPUT$OffloadWriteFlags$VH_; }

    static final MemoryLayout _STORAGE_OFFLOAD_WRITE_OUTPUT$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OFFLOAD_WRITE_OUTPUT$Reserved$LAYOUT() { return _STORAGE_OFFLOAD_WRITE_OUTPUT$Reserved$LAYOUT_; }

    static final VarHandle _STORAGE_OFFLOAD_WRITE_OUTPUT$Reserved$VH_ = _STORAGE_OFFLOAD_WRITE_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _STORAGE_OFFLOAD_WRITE_OUTPUT$Reserved$VH() { return _STORAGE_OFFLOAD_WRITE_OUTPUT$Reserved$VH_; }

    static final MemoryLayout _STORAGE_OFFLOAD_WRITE_OUTPUT$LengthCopied$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_OFFLOAD_WRITE_OUTPUT$LengthCopied$LAYOUT() { return _STORAGE_OFFLOAD_WRITE_OUTPUT$LengthCopied$LAYOUT_; }

    static final VarHandle _STORAGE_OFFLOAD_WRITE_OUTPUT$LengthCopied$VH_ = _STORAGE_OFFLOAD_WRITE_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LengthCopied"));
    static final java.lang.invoke.VarHandle _STORAGE_OFFLOAD_WRITE_OUTPUT$LengthCopied$VH() { return _STORAGE_OFFLOAD_WRITE_OUTPUT$LengthCopied$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("Flags"),
        C_LONG.withName("OutputVersion")
    ).withName("_DEVICE_DATA_SET_LBP_STATE_PARAMETERS");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$struct$LAYOUT() { return _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$Version$LAYOUT() { return _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$Version$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$Version$VH_ = _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$Version$VH() { return _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$Version$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$Size$LAYOUT() { return _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$Size$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$Size$VH_ = _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$Size$VH() { return _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$Size$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$Flags$LAYOUT() { return _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$Flags$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$Flags$VH_ = _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$Flags$VH() { return _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$Flags$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$OutputVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$OutputVersion$LAYOUT() { return _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$OutputVersion$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$OutputVersion$VH_ = _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OutputVersion"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$OutputVersion$VH() { return _DEVICE_DATA_SET_LBP_STATE_PARAMETERS$OutputVersion$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        C_LONG.withName("Version"),
        C_LONGLONG.withName("SlabSizeInBytes"),
        C_LONG.withName("SlabOffsetDeltaInBytes"),
        C_LONG.withName("SlabAllocationBitMapBitCount"),
        C_LONG.withName("SlabAllocationBitMapLength"),
        MemoryLayout.ofSequence(1, C_LONG).withName("SlabAllocationBitMap")
    ).withName("_DEVICE_DATA_SET_LB_PROVISIONING_STATE");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE$struct$LAYOUT() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE$Size$LAYOUT() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE$Size$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE$Size$VH_ = _DEVICE_DATA_SET_LB_PROVISIONING_STATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE$Size$VH() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE$Size$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE$Version$LAYOUT() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE$Version$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE$Version$VH_ = _DEVICE_DATA_SET_LB_PROVISIONING_STATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE$Version$VH() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE$Version$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabSizeInBytes$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabSizeInBytes$LAYOUT() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabSizeInBytes$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabSizeInBytes$VH_ = _DEVICE_DATA_SET_LB_PROVISIONING_STATE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SlabSizeInBytes"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabSizeInBytes$VH() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabSizeInBytes$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabOffsetDeltaInBytes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabOffsetDeltaInBytes$LAYOUT() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabOffsetDeltaInBytes$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabOffsetDeltaInBytes$VH_ = _DEVICE_DATA_SET_LB_PROVISIONING_STATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SlabOffsetDeltaInBytes"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabOffsetDeltaInBytes$VH() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabOffsetDeltaInBytes$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabAllocationBitMapBitCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabAllocationBitMapBitCount$LAYOUT() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabAllocationBitMapBitCount$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabAllocationBitMapBitCount$VH_ = _DEVICE_DATA_SET_LB_PROVISIONING_STATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SlabAllocationBitMapBitCount"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabAllocationBitMapBitCount$VH() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabAllocationBitMapBitCount$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabAllocationBitMapLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabAllocationBitMapLength$LAYOUT() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabAllocationBitMapLength$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabAllocationBitMapLength$VH_ = _DEVICE_DATA_SET_LB_PROVISIONING_STATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SlabAllocationBitMapLength"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabAllocationBitMapLength$VH() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE$SlabAllocationBitMapLength$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        C_LONG.withName("Version"),
        C_LONGLONG.withName("SlabSizeInBytes"),
        C_LONGLONG.withName("SlabOffsetDeltaInBytes"),
        C_LONG.withName("SlabAllocationBitMapBitCount"),
        C_LONG.withName("SlabAllocationBitMapLength"),
        MemoryLayout.ofSequence(1, C_LONG).withName("SlabAllocationBitMap"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$struct$LAYOUT() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$Size$LAYOUT() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$Size$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$Size$VH_ = _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$Size$VH() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$Size$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$Version$LAYOUT() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$Version$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$Version$VH_ = _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$Version$VH() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$Version$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabSizeInBytes$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabSizeInBytes$LAYOUT() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabSizeInBytes$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabSizeInBytes$VH_ = _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SlabSizeInBytes"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabSizeInBytes$VH() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabSizeInBytes$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabOffsetDeltaInBytes$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabOffsetDeltaInBytes$LAYOUT() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabOffsetDeltaInBytes$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabOffsetDeltaInBytes$VH_ = _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SlabOffsetDeltaInBytes"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabOffsetDeltaInBytes$VH() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabOffsetDeltaInBytes$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabAllocationBitMapBitCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabAllocationBitMapBitCount$LAYOUT() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabAllocationBitMapBitCount$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabAllocationBitMapBitCount$VH_ = _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SlabAllocationBitMapBitCount"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabAllocationBitMapBitCount$VH() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabAllocationBitMapBitCount$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabAllocationBitMapLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabAllocationBitMapLength$LAYOUT() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabAllocationBitMapLength$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabAllocationBitMapLength$VH_ = _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SlabAllocationBitMapLength"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabAllocationBitMapLength$VH() { return _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2$SlabAllocationBitMapLength$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_REPAIR_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("NumberOfRepairCopies"),
        C_LONG.withName("SourceCopy"),
        MemoryLayout.ofSequence(1, C_LONG).withName("RepairCopies")
    ).withName("_DEVICE_DATA_SET_REPAIR_PARAMETERS");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_REPAIR_PARAMETERS$struct$LAYOUT() { return _DEVICE_DATA_SET_REPAIR_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DATA_SET_REPAIR_PARAMETERS$NumberOfRepairCopies$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_REPAIR_PARAMETERS$NumberOfRepairCopies$LAYOUT() { return _DEVICE_DATA_SET_REPAIR_PARAMETERS$NumberOfRepairCopies$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_REPAIR_PARAMETERS$NumberOfRepairCopies$VH_ = _DEVICE_DATA_SET_REPAIR_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfRepairCopies"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_REPAIR_PARAMETERS$NumberOfRepairCopies$VH() { return _DEVICE_DATA_SET_REPAIR_PARAMETERS$NumberOfRepairCopies$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_REPAIR_PARAMETERS$SourceCopy$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_REPAIR_PARAMETERS$SourceCopy$LAYOUT() { return _DEVICE_DATA_SET_REPAIR_PARAMETERS$SourceCopy$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_REPAIR_PARAMETERS$SourceCopy$VH_ = _DEVICE_DATA_SET_REPAIR_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SourceCopy"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_REPAIR_PARAMETERS$SourceCopy$VH() { return _DEVICE_DATA_SET_REPAIR_PARAMETERS$SourceCopy$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_REPAIR_OUTPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("StartingOffset"),
            C_LONGLONG.withName("LengthInBytes")
        ).withName("ParityExtent")
    ).withName("_DEVICE_DATA_SET_REPAIR_OUTPUT");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_REPAIR_OUTPUT$struct$LAYOUT() { return _DEVICE_DATA_SET_REPAIR_OUTPUT$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DATA_SET_SCRUB_OUTPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("BytesProcessed"),
        C_LONGLONG.withName("BytesRepaired"),
        C_LONGLONG.withName("BytesFailed")
    ).withName("_DEVICE_DATA_SET_SCRUB_OUTPUT");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_SCRUB_OUTPUT$struct$LAYOUT() { return _DEVICE_DATA_SET_SCRUB_OUTPUT$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DATA_SET_SCRUB_OUTPUT$BytesProcessed$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_SCRUB_OUTPUT$BytesProcessed$LAYOUT() { return _DEVICE_DATA_SET_SCRUB_OUTPUT$BytesProcessed$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_SCRUB_OUTPUT$BytesProcessed$VH_ = _DEVICE_DATA_SET_SCRUB_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("BytesProcessed"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_SCRUB_OUTPUT$BytesProcessed$VH() { return _DEVICE_DATA_SET_SCRUB_OUTPUT$BytesProcessed$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_SCRUB_OUTPUT$BytesRepaired$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_SCRUB_OUTPUT$BytesRepaired$LAYOUT() { return _DEVICE_DATA_SET_SCRUB_OUTPUT$BytesRepaired$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_SCRUB_OUTPUT$BytesRepaired$VH_ = _DEVICE_DATA_SET_SCRUB_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("BytesRepaired"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_SCRUB_OUTPUT$BytesRepaired$VH() { return _DEVICE_DATA_SET_SCRUB_OUTPUT$BytesRepaired$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_SCRUB_OUTPUT$BytesFailed$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_SCRUB_OUTPUT$BytesFailed$LAYOUT() { return _DEVICE_DATA_SET_SCRUB_OUTPUT$BytesFailed$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_SCRUB_OUTPUT$BytesFailed$VH_ = _DEVICE_DATA_SET_SCRUB_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("BytesFailed"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_SCRUB_OUTPUT$BytesFailed$VH() { return _DEVICE_DATA_SET_SCRUB_OUTPUT$BytesFailed$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("BytesProcessed"),
        C_LONGLONG.withName("BytesRepaired"),
        C_LONGLONG.withName("BytesFailed"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("StartingOffset"),
            C_LONGLONG.withName("LengthInBytes")
        ).withName("ParityExtent")
    ).withName("_DEVICE_DATA_SET_SCRUB_EX_OUTPUT");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$struct$LAYOUT() { return _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$BytesProcessed$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$BytesProcessed$LAYOUT() { return _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$BytesProcessed$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$BytesProcessed$VH_ = _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("BytesProcessed"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$BytesProcessed$VH() { return _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$BytesProcessed$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$BytesRepaired$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$BytesRepaired$LAYOUT() { return _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$BytesRepaired$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$BytesRepaired$VH_ = _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("BytesRepaired"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$BytesRepaired$VH() { return _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$BytesRepaired$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$BytesFailed$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$BytesFailed$LAYOUT() { return _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$BytesFailed$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$BytesFailed$VH_ = _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("BytesFailed"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$BytesFailed$VH() { return _DEVICE_DATA_SET_SCRUB_EX_OUTPUT$BytesFailed$VH_; }

    static final MemoryLayout _DEVICE_DSM_TIERING_QUERY_INPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("Flags"),
        C_LONG.withName("NumberOfTierIds"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("_GUID")).withName("TierIds")
    ).withName("_DEVICE_DSM_TIERING_QUERY_INPUT");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_TIERING_QUERY_INPUT$struct$LAYOUT() { return _DEVICE_DSM_TIERING_QUERY_INPUT$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DSM_TIERING_QUERY_INPUT$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_TIERING_QUERY_INPUT$Version$LAYOUT() { return _DEVICE_DSM_TIERING_QUERY_INPUT$Version$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_TIERING_QUERY_INPUT$Version$VH_ = _DEVICE_DSM_TIERING_QUERY_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_TIERING_QUERY_INPUT$Version$VH() { return _DEVICE_DSM_TIERING_QUERY_INPUT$Version$VH_; }

    static final MemoryLayout _DEVICE_DSM_TIERING_QUERY_INPUT$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_TIERING_QUERY_INPUT$Size$LAYOUT() { return _DEVICE_DSM_TIERING_QUERY_INPUT$Size$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_TIERING_QUERY_INPUT$Size$VH_ = _DEVICE_DSM_TIERING_QUERY_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_TIERING_QUERY_INPUT$Size$VH() { return _DEVICE_DSM_TIERING_QUERY_INPUT$Size$VH_; }

    static final MemoryLayout _DEVICE_DSM_TIERING_QUERY_INPUT$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_TIERING_QUERY_INPUT$Flags$LAYOUT() { return _DEVICE_DSM_TIERING_QUERY_INPUT$Flags$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_TIERING_QUERY_INPUT$Flags$VH_ = _DEVICE_DSM_TIERING_QUERY_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_TIERING_QUERY_INPUT$Flags$VH() { return _DEVICE_DSM_TIERING_QUERY_INPUT$Flags$VH_; }

    static final MemoryLayout _DEVICE_DSM_TIERING_QUERY_INPUT$NumberOfTierIds$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_TIERING_QUERY_INPUT$NumberOfTierIds$LAYOUT() { return _DEVICE_DSM_TIERING_QUERY_INPUT$NumberOfTierIds$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_TIERING_QUERY_INPUT$NumberOfTierIds$VH_ = _DEVICE_DSM_TIERING_QUERY_INPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfTierIds"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_TIERING_QUERY_INPUT$NumberOfTierIds$VH() { return _DEVICE_DSM_TIERING_QUERY_INPUT$NumberOfTierIds$VH_; }

    static final MemoryLayout _STORAGE_TIER_REGION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("TierId"),
        C_LONGLONG.withName("Offset"),
        C_LONGLONG.withName("Length")
    ).withName("_STORAGE_TIER_REGION");
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TIER_REGION$struct$LAYOUT() { return _STORAGE_TIER_REGION$struct$LAYOUT_; }

    static final MemoryLayout _STORAGE_TIER_REGION$Offset$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TIER_REGION$Offset$LAYOUT() { return _STORAGE_TIER_REGION$Offset$LAYOUT_; }

    static final VarHandle _STORAGE_TIER_REGION$Offset$VH_ = _STORAGE_TIER_REGION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Offset"));
    static final java.lang.invoke.VarHandle _STORAGE_TIER_REGION$Offset$VH() { return _STORAGE_TIER_REGION$Offset$VH_; }

    static final MemoryLayout _STORAGE_TIER_REGION$Length$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _STORAGE_TIER_REGION$Length$LAYOUT() { return _STORAGE_TIER_REGION$Length$LAYOUT_; }

    static final VarHandle _STORAGE_TIER_REGION$Length$VH_ = _STORAGE_TIER_REGION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Length"));
    static final java.lang.invoke.VarHandle _STORAGE_TIER_REGION$Length$VH() { return _STORAGE_TIER_REGION$Length$VH_; }

    static final MemoryLayout _DEVICE_DSM_TIERING_QUERY_OUTPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("Flags"),
        C_LONG.withName("Reserved"),
        C_LONGLONG.withName("Alignment"),
        C_LONG.withName("TotalNumberOfRegions"),
        C_LONG.withName("NumberOfRegionsReturned"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
            ).withName("TierId"),
            C_LONGLONG.withName("Offset"),
            C_LONGLONG.withName("Length")
        ).withName("_STORAGE_TIER_REGION")).withName("Regions")
    ).withName("_DEVICE_DSM_TIERING_QUERY_OUTPUT");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_TIERING_QUERY_OUTPUT$struct$LAYOUT() { return _DEVICE_DSM_TIERING_QUERY_OUTPUT$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DSM_TIERING_QUERY_OUTPUT$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_TIERING_QUERY_OUTPUT$Version$LAYOUT() { return _DEVICE_DSM_TIERING_QUERY_OUTPUT$Version$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_TIERING_QUERY_OUTPUT$Version$VH_ = _DEVICE_DSM_TIERING_QUERY_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_TIERING_QUERY_OUTPUT$Version$VH() { return _DEVICE_DSM_TIERING_QUERY_OUTPUT$Version$VH_; }

    static final MemoryLayout _DEVICE_DSM_TIERING_QUERY_OUTPUT$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_TIERING_QUERY_OUTPUT$Size$LAYOUT() { return _DEVICE_DSM_TIERING_QUERY_OUTPUT$Size$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_TIERING_QUERY_OUTPUT$Size$VH_ = _DEVICE_DSM_TIERING_QUERY_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_TIERING_QUERY_OUTPUT$Size$VH() { return _DEVICE_DSM_TIERING_QUERY_OUTPUT$Size$VH_; }

    static final MemoryLayout _DEVICE_DSM_TIERING_QUERY_OUTPUT$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_TIERING_QUERY_OUTPUT$Flags$LAYOUT() { return _DEVICE_DSM_TIERING_QUERY_OUTPUT$Flags$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_TIERING_QUERY_OUTPUT$Flags$VH_ = _DEVICE_DSM_TIERING_QUERY_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_TIERING_QUERY_OUTPUT$Flags$VH() { return _DEVICE_DSM_TIERING_QUERY_OUTPUT$Flags$VH_; }

    static final MemoryLayout _DEVICE_DSM_TIERING_QUERY_OUTPUT$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_TIERING_QUERY_OUTPUT$Reserved$LAYOUT() { return _DEVICE_DSM_TIERING_QUERY_OUTPUT$Reserved$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_TIERING_QUERY_OUTPUT$Reserved$VH_ = _DEVICE_DSM_TIERING_QUERY_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_TIERING_QUERY_OUTPUT$Reserved$VH() { return _DEVICE_DSM_TIERING_QUERY_OUTPUT$Reserved$VH_; }

    static final MemoryLayout _DEVICE_DSM_TIERING_QUERY_OUTPUT$Alignment$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_TIERING_QUERY_OUTPUT$Alignment$LAYOUT() { return _DEVICE_DSM_TIERING_QUERY_OUTPUT$Alignment$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_TIERING_QUERY_OUTPUT$Alignment$VH_ = _DEVICE_DSM_TIERING_QUERY_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Alignment"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_TIERING_QUERY_OUTPUT$Alignment$VH() { return _DEVICE_DSM_TIERING_QUERY_OUTPUT$Alignment$VH_; }

    static final MemoryLayout _DEVICE_DSM_TIERING_QUERY_OUTPUT$TotalNumberOfRegions$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_TIERING_QUERY_OUTPUT$TotalNumberOfRegions$LAYOUT() { return _DEVICE_DSM_TIERING_QUERY_OUTPUT$TotalNumberOfRegions$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_TIERING_QUERY_OUTPUT$TotalNumberOfRegions$VH_ = _DEVICE_DSM_TIERING_QUERY_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TotalNumberOfRegions"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_TIERING_QUERY_OUTPUT$TotalNumberOfRegions$VH() { return _DEVICE_DSM_TIERING_QUERY_OUTPUT$TotalNumberOfRegions$VH_; }

    static final MemoryLayout _DEVICE_DSM_TIERING_QUERY_OUTPUT$NumberOfRegionsReturned$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_TIERING_QUERY_OUTPUT$NumberOfRegionsReturned$LAYOUT() { return _DEVICE_DSM_TIERING_QUERY_OUTPUT$NumberOfRegionsReturned$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_TIERING_QUERY_OUTPUT$NumberOfRegionsReturned$VH_ = _DEVICE_DSM_TIERING_QUERY_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfRegionsReturned"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_TIERING_QUERY_OUTPUT$NumberOfRegionsReturned$VH() { return _DEVICE_DSM_TIERING_QUERY_OUTPUT$NumberOfRegionsReturned$VH_; }

    static final MemoryLayout _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        C_CHAR.withName("TargetPriority"),
        MemoryLayout.ofSequence(3, C_CHAR).withName("Reserved")
    ).withName("_DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS$struct$LAYOUT() { return _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS$Size$LAYOUT() { return _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS$Size$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS$Size$VH_ = _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS$Size$VH() { return _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS$Size$VH_; }

    static final MemoryLayout _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS$TargetPriority$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS$TargetPriority$LAYOUT() { return _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS$TargetPriority$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS$TargetPriority$VH_ = _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("TargetPriority"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS$TargetPriority$VH() { return _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS$TargetPriority$VH_; }

    static final MemoryLayout _DEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("TopologyRangeBytes"),
        MemoryLayout.ofSequence(16, C_CHAR).withName("TopologyId")
    ).withName("_DEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT$struct$LAYOUT() { return _DEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT$TopologyRangeBytes$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT$TopologyRangeBytes$LAYOUT() { return _DEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT$TopologyRangeBytes$LAYOUT_; }

    static final VarHandle _DEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT$TopologyRangeBytes$VH_ = _DEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TopologyRangeBytes"));
    static final java.lang.invoke.VarHandle _DEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT$TopologyRangeBytes$VH() { return _DEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT$TopologyRangeBytes$VH_; }

    static final MemoryLayout _DEVICE_STORAGE_ADDRESS_RANGE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("StartAddress"),
        C_LONGLONG.withName("LengthInBytes")
    ).withName("_DEVICE_STORAGE_ADDRESS_RANGE");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_STORAGE_ADDRESS_RANGE$struct$LAYOUT() { return _DEVICE_STORAGE_ADDRESS_RANGE$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_STORAGE_ADDRESS_RANGE$StartAddress$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_STORAGE_ADDRESS_RANGE$StartAddress$LAYOUT() { return _DEVICE_STORAGE_ADDRESS_RANGE$StartAddress$LAYOUT_; }

    static final VarHandle _DEVICE_STORAGE_ADDRESS_RANGE$StartAddress$VH_ = _DEVICE_STORAGE_ADDRESS_RANGE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("StartAddress"));
    static final java.lang.invoke.VarHandle _DEVICE_STORAGE_ADDRESS_RANGE$StartAddress$VH() { return _DEVICE_STORAGE_ADDRESS_RANGE$StartAddress$VH_; }

    static final MemoryLayout _DEVICE_STORAGE_ADDRESS_RANGE$LengthInBytes$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_STORAGE_ADDRESS_RANGE$LengthInBytes$LAYOUT() { return _DEVICE_STORAGE_ADDRESS_RANGE$LengthInBytes$LAYOUT_; }

    static final VarHandle _DEVICE_STORAGE_ADDRESS_RANGE$LengthInBytes$VH_ = _DEVICE_STORAGE_ADDRESS_RANGE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LengthInBytes"));
    static final java.lang.invoke.VarHandle _DEVICE_STORAGE_ADDRESS_RANGE$LengthInBytes$VH() { return _DEVICE_STORAGE_ADDRESS_RANGE$LengthInBytes$VH_; }

    static final MemoryLayout _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Flags"),
        C_LONG.withName("TotalNumberOfRanges"),
        C_LONG.withName("NumberOfRangesReturned"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONGLONG.withName("StartAddress"),
            C_LONGLONG.withName("LengthInBytes")
        ).withName("_DEVICE_STORAGE_ADDRESS_RANGE")).withName("Ranges")
    ).withName("_DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT");
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$struct$LAYOUT() { return _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$struct$LAYOUT_; }

    static final MemoryLayout _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$Version$LAYOUT() { return _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$Version$LAYOUT_; }

    static final VarHandle _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$Version$VH_ = _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$Version$VH() { return _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT$Version$VH_; }

}

