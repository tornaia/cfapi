// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$73 extends cfapi_h$constants$72 {

    /* package-private */ cfapi_h$constants$73() {}
    static final FunctionDescriptor WaitForPrinterChange$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor WaitForPrinterChange$FUNC() { return WaitForPrinterChange$FUNC_; }

    static final MethodHandle WaitForPrinterChange$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WaitForPrinterChange",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        WaitForPrinterChange$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WaitForPrinterChange$MH() { return WaitForPrinterChange$MH_; }

    static final FunctionDescriptor FindFirstPrinterChangeNotification$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FindFirstPrinterChangeNotification$FUNC() { return FindFirstPrinterChangeNotification$FUNC_; }

    static final MethodHandle FindFirstPrinterChangeNotification$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FindFirstPrinterChangeNotification",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        FindFirstPrinterChangeNotification$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FindFirstPrinterChangeNotification$MH() { return FindFirstPrinterChangeNotification$MH_; }

    static final FunctionDescriptor FindNextPrinterChangeNotification$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FindNextPrinterChangeNotification$FUNC() { return FindNextPrinterChangeNotification$FUNC_; }

    static final MethodHandle FindNextPrinterChangeNotification$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FindNextPrinterChangeNotification",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        FindNextPrinterChangeNotification$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FindNextPrinterChangeNotification$MH() { return FindNextPrinterChangeNotification$MH_; }

    static final FunctionDescriptor FreePrinterNotifyInfo$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FreePrinterNotifyInfo$FUNC() { return FreePrinterNotifyInfo$FUNC_; }

    static final MethodHandle FreePrinterNotifyInfo$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FreePrinterNotifyInfo",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        FreePrinterNotifyInfo$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FreePrinterNotifyInfo$MH() { return FreePrinterNotifyInfo$MH_; }

    static final FunctionDescriptor FindClosePrinterChangeNotification$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FindClosePrinterChangeNotification$FUNC() { return FindClosePrinterChangeNotification$FUNC_; }

    static final MethodHandle FindClosePrinterChangeNotification$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FindClosePrinterChangeNotification",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        FindClosePrinterChangeNotification$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FindClosePrinterChangeNotification$MH() { return FindClosePrinterChangeNotification$MH_; }

    static final FunctionDescriptor PrinterMessageBoxA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor PrinterMessageBoxA$FUNC() { return PrinterMessageBoxA$FUNC_; }

    static final MethodHandle PrinterMessageBoxA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "PrinterMessageBoxA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        PrinterMessageBoxA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle PrinterMessageBoxA$MH() { return PrinterMessageBoxA$MH_; }

    static final FunctionDescriptor PrinterMessageBoxW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor PrinterMessageBoxW$FUNC() { return PrinterMessageBoxW$FUNC_; }

    static final MethodHandle PrinterMessageBoxW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "PrinterMessageBoxW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        PrinterMessageBoxW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle PrinterMessageBoxW$MH() { return PrinterMessageBoxW$MH_; }

    static final FunctionDescriptor ClosePrinter$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ClosePrinter$FUNC() { return ClosePrinter$FUNC_; }

    static final MethodHandle ClosePrinter$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ClosePrinter",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ClosePrinter$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ClosePrinter$MH() { return ClosePrinter$MH_; }

    static final FunctionDescriptor AddFormA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddFormA$FUNC() { return AddFormA$FUNC_; }

    static final MethodHandle AddFormA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddFormA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        AddFormA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddFormA$MH() { return AddFormA$MH_; }

    static final FunctionDescriptor AddFormW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddFormW$FUNC() { return AddFormW$FUNC_; }

    static final MethodHandle AddFormW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddFormW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        AddFormW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddFormW$MH() { return AddFormW$MH_; }

    static final FunctionDescriptor DeleteFormA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeleteFormA$FUNC() { return DeleteFormA$FUNC_; }

    static final MethodHandle DeleteFormA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeleteFormA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DeleteFormA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeleteFormA$MH() { return DeleteFormA$MH_; }

    static final FunctionDescriptor DeleteFormW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeleteFormW$FUNC() { return DeleteFormW$FUNC_; }

    static final MethodHandle DeleteFormW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeleteFormW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DeleteFormW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeleteFormW$MH() { return DeleteFormW$MH_; }

    static final FunctionDescriptor GetFormA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetFormA$FUNC() { return GetFormA$FUNC_; }

    static final MethodHandle GetFormA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetFormA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetFormA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetFormA$MH() { return GetFormA$MH_; }

    static final FunctionDescriptor GetFormW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetFormW$FUNC() { return GetFormW$FUNC_; }

    static final MethodHandle GetFormW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetFormW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetFormW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetFormW$MH() { return GetFormW$MH_; }

    static final FunctionDescriptor SetFormA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SetFormA$FUNC() { return SetFormA$FUNC_; }

    static final MethodHandle SetFormA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetFormA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        SetFormA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SetFormA$MH() { return SetFormA$MH_; }

    static final FunctionDescriptor SetFormW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SetFormW$FUNC() { return SetFormW$FUNC_; }

    static final MethodHandle SetFormW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetFormW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        SetFormW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SetFormW$MH() { return SetFormW$MH_; }

    static final FunctionDescriptor EnumFormsA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumFormsA$FUNC() { return EnumFormsA$FUNC_; }

    static final MethodHandle EnumFormsA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumFormsA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumFormsA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumFormsA$MH() { return EnumFormsA$MH_; }

    static final FunctionDescriptor EnumFormsW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumFormsW$FUNC() { return EnumFormsW$FUNC_; }

    static final MethodHandle EnumFormsW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumFormsW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumFormsW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumFormsW$MH() { return EnumFormsW$MH_; }

    static final FunctionDescriptor EnumMonitorsA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumMonitorsA$FUNC() { return EnumMonitorsA$FUNC_; }

    static final MethodHandle EnumMonitorsA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumMonitorsA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumMonitorsA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumMonitorsA$MH() { return EnumMonitorsA$MH_; }

    static final FunctionDescriptor EnumMonitorsW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumMonitorsW$FUNC() { return EnumMonitorsW$FUNC_; }

    static final MethodHandle EnumMonitorsW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumMonitorsW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumMonitorsW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumMonitorsW$MH() { return EnumMonitorsW$MH_; }

    static final FunctionDescriptor AddMonitorA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddMonitorA$FUNC() { return AddMonitorA$FUNC_; }

    static final MethodHandle AddMonitorA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddMonitorA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        AddMonitorA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddMonitorA$MH() { return AddMonitorA$MH_; }

    static final FunctionDescriptor AddMonitorW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddMonitorW$FUNC() { return AddMonitorW$FUNC_; }

    static final MethodHandle AddMonitorW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddMonitorW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        AddMonitorW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddMonitorW$MH() { return AddMonitorW$MH_; }

    static final FunctionDescriptor DeleteMonitorA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeleteMonitorA$FUNC() { return DeleteMonitorA$FUNC_; }

    static final MethodHandle DeleteMonitorA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeleteMonitorA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DeleteMonitorA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeleteMonitorA$MH() { return DeleteMonitorA$MH_; }

    static final FunctionDescriptor DeleteMonitorW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeleteMonitorW$FUNC() { return DeleteMonitorW$FUNC_; }

    static final MethodHandle DeleteMonitorW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeleteMonitorW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DeleteMonitorW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeleteMonitorW$MH() { return DeleteMonitorW$MH_; }

    static final FunctionDescriptor EnumPortsA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumPortsA$FUNC() { return EnumPortsA$FUNC_; }

    static final MethodHandle EnumPortsA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumPortsA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumPortsA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumPortsA$MH() { return EnumPortsA$MH_; }

    static final FunctionDescriptor EnumPortsW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumPortsW$FUNC() { return EnumPortsW$FUNC_; }

    static final MethodHandle EnumPortsW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumPortsW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumPortsW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumPortsW$MH() { return EnumPortsW$MH_; }

    static final FunctionDescriptor AddPortA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddPortA$FUNC() { return AddPortA$FUNC_; }

    static final MethodHandle AddPortA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddPortA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        AddPortA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddPortA$MH() { return AddPortA$MH_; }

    static final FunctionDescriptor AddPortW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddPortW$FUNC() { return AddPortW$FUNC_; }

    static final MethodHandle AddPortW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddPortW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        AddPortW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddPortW$MH() { return AddPortW$MH_; }

    static final FunctionDescriptor ConfigurePortA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ConfigurePortA$FUNC() { return ConfigurePortA$FUNC_; }

    static final MethodHandle ConfigurePortA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ConfigurePortA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ConfigurePortA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ConfigurePortA$MH() { return ConfigurePortA$MH_; }

    static final FunctionDescriptor ConfigurePortW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ConfigurePortW$FUNC() { return ConfigurePortW$FUNC_; }

    static final MethodHandle ConfigurePortW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ConfigurePortW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ConfigurePortW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ConfigurePortW$MH() { return ConfigurePortW$MH_; }

    static final FunctionDescriptor DeletePortA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePortA$FUNC() { return DeletePortA$FUNC_; }

    static final MethodHandle DeletePortA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePortA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DeletePortA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePortA$MH() { return DeletePortA$MH_; }

    static final FunctionDescriptor DeletePortW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePortW$FUNC() { return DeletePortW$FUNC_; }

    static final MethodHandle DeletePortW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePortW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DeletePortW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePortW$MH() { return DeletePortW$MH_; }

    static final FunctionDescriptor XcvDataW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor XcvDataW$FUNC() { return XcvDataW$FUNC_; }

    static final MethodHandle XcvDataW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "XcvDataW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        XcvDataW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle XcvDataW$MH() { return XcvDataW$MH_; }

    static final FunctionDescriptor GetDefaultPrinterA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetDefaultPrinterA$FUNC() { return GetDefaultPrinterA$FUNC_; }

    static final MethodHandle GetDefaultPrinterA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetDefaultPrinterA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        GetDefaultPrinterA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetDefaultPrinterA$MH() { return GetDefaultPrinterA$MH_; }

    static final FunctionDescriptor GetDefaultPrinterW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetDefaultPrinterW$FUNC() { return GetDefaultPrinterW$FUNC_; }

    static final MethodHandle GetDefaultPrinterW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetDefaultPrinterW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        GetDefaultPrinterW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetDefaultPrinterW$MH() { return GetDefaultPrinterW$MH_; }

    static final FunctionDescriptor SetDefaultPrinterA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SetDefaultPrinterA$FUNC() { return SetDefaultPrinterA$FUNC_; }

    static final MethodHandle SetDefaultPrinterA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetDefaultPrinterA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SetDefaultPrinterA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SetDefaultPrinterA$MH() { return SetDefaultPrinterA$MH_; }

    static final FunctionDescriptor SetDefaultPrinterW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SetDefaultPrinterW$FUNC() { return SetDefaultPrinterW$FUNC_; }

    static final MethodHandle SetDefaultPrinterW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetDefaultPrinterW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        SetDefaultPrinterW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SetDefaultPrinterW$MH() { return SetDefaultPrinterW$MH_; }

    static final FunctionDescriptor SetPortA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SetPortA$FUNC() { return SetPortA$FUNC_; }

    static final MethodHandle SetPortA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetPortA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        SetPortA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SetPortA$MH() { return SetPortA$MH_; }

    static final FunctionDescriptor SetPortW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SetPortW$FUNC() { return SetPortW$FUNC_; }

    static final MethodHandle SetPortW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetPortW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        SetPortW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SetPortW$MH() { return SetPortW$MH_; }

    static final FunctionDescriptor AddPrinterConnectionA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddPrinterConnectionA$FUNC() { return AddPrinterConnectionA$FUNC_; }

    static final MethodHandle AddPrinterConnectionA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddPrinterConnectionA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        AddPrinterConnectionA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddPrinterConnectionA$MH() { return AddPrinterConnectionA$MH_; }

    static final FunctionDescriptor AddPrinterConnectionW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddPrinterConnectionW$FUNC() { return AddPrinterConnectionW$FUNC_; }

    static final MethodHandle AddPrinterConnectionW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddPrinterConnectionW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        AddPrinterConnectionW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddPrinterConnectionW$MH() { return AddPrinterConnectionW$MH_; }

    static final FunctionDescriptor DeletePrinterConnectionA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePrinterConnectionA$FUNC() { return DeletePrinterConnectionA$FUNC_; }

    static final MethodHandle DeletePrinterConnectionA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePrinterConnectionA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        DeletePrinterConnectionA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePrinterConnectionA$MH() { return DeletePrinterConnectionA$MH_; }

    static final FunctionDescriptor DeletePrinterConnectionW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePrinterConnectionW$FUNC() { return DeletePrinterConnectionW$FUNC_; }

    static final MethodHandle DeletePrinterConnectionW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePrinterConnectionW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        DeletePrinterConnectionW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePrinterConnectionW$MH() { return DeletePrinterConnectionW$MH_; }

    static final FunctionDescriptor ConnectToPrinterDlg$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor ConnectToPrinterDlg$FUNC() { return ConnectToPrinterDlg$FUNC_; }

    static final MethodHandle ConnectToPrinterDlg$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ConnectToPrinterDlg",
        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        ConnectToPrinterDlg$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ConnectToPrinterDlg$MH() { return ConnectToPrinterDlg$MH_; }

    static final MemoryLayout _PROVIDOR_INFO_1A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pName"),
        C_POINTER.withName("pEnvironment"),
        C_POINTER.withName("pDLLName")
    ).withName("_PROVIDOR_INFO_1A");
    static final jdk.incubator.foreign.MemoryLayout _PROVIDOR_INFO_1A$struct$LAYOUT() { return _PROVIDOR_INFO_1A$struct$LAYOUT_; }

    static final MemoryLayout _PROVIDOR_INFO_1A$pName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PROVIDOR_INFO_1A$pName$LAYOUT() { return _PROVIDOR_INFO_1A$pName$LAYOUT_; }

    static final VarHandle _PROVIDOR_INFO_1A$pName$VH_ = MemoryHandles.asAddressVarHandle(_PROVIDOR_INFO_1A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pName")));
    static final java.lang.invoke.VarHandle _PROVIDOR_INFO_1A$pName$VH() { return _PROVIDOR_INFO_1A$pName$VH_; }

    static final MemoryLayout _PROVIDOR_INFO_1A$pEnvironment$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PROVIDOR_INFO_1A$pEnvironment$LAYOUT() { return _PROVIDOR_INFO_1A$pEnvironment$LAYOUT_; }

    static final VarHandle _PROVIDOR_INFO_1A$pEnvironment$VH_ = MemoryHandles.asAddressVarHandle(_PROVIDOR_INFO_1A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pEnvironment")));
    static final java.lang.invoke.VarHandle _PROVIDOR_INFO_1A$pEnvironment$VH() { return _PROVIDOR_INFO_1A$pEnvironment$VH_; }

    static final MemoryLayout _PROVIDOR_INFO_1A$pDLLName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PROVIDOR_INFO_1A$pDLLName$LAYOUT() { return _PROVIDOR_INFO_1A$pDLLName$LAYOUT_; }

    static final VarHandle _PROVIDOR_INFO_1A$pDLLName$VH_ = MemoryHandles.asAddressVarHandle(_PROVIDOR_INFO_1A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDLLName")));
    static final java.lang.invoke.VarHandle _PROVIDOR_INFO_1A$pDLLName$VH() { return _PROVIDOR_INFO_1A$pDLLName$VH_; }

    static final MemoryLayout _PROVIDOR_INFO_1W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pName"),
        C_POINTER.withName("pEnvironment"),
        C_POINTER.withName("pDLLName")
    ).withName("_PROVIDOR_INFO_1W");
    static final jdk.incubator.foreign.MemoryLayout _PROVIDOR_INFO_1W$struct$LAYOUT() { return _PROVIDOR_INFO_1W$struct$LAYOUT_; }

    static final MemoryLayout _PROVIDOR_INFO_1W$pName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PROVIDOR_INFO_1W$pName$LAYOUT() { return _PROVIDOR_INFO_1W$pName$LAYOUT_; }

    static final VarHandle _PROVIDOR_INFO_1W$pName$VH_ = MemoryHandles.asAddressVarHandle(_PROVIDOR_INFO_1W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pName")));
    static final java.lang.invoke.VarHandle _PROVIDOR_INFO_1W$pName$VH() { return _PROVIDOR_INFO_1W$pName$VH_; }

    static final MemoryLayout _PROVIDOR_INFO_1W$pEnvironment$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PROVIDOR_INFO_1W$pEnvironment$LAYOUT() { return _PROVIDOR_INFO_1W$pEnvironment$LAYOUT_; }

    static final VarHandle _PROVIDOR_INFO_1W$pEnvironment$VH_ = MemoryHandles.asAddressVarHandle(_PROVIDOR_INFO_1W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pEnvironment")));
    static final java.lang.invoke.VarHandle _PROVIDOR_INFO_1W$pEnvironment$VH() { return _PROVIDOR_INFO_1W$pEnvironment$VH_; }

    static final MemoryLayout _PROVIDOR_INFO_1W$pDLLName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PROVIDOR_INFO_1W$pDLLName$LAYOUT() { return _PROVIDOR_INFO_1W$pDLLName$LAYOUT_; }

    static final VarHandle _PROVIDOR_INFO_1W$pDLLName$VH_ = MemoryHandles.asAddressVarHandle(_PROVIDOR_INFO_1W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDLLName")));
    static final java.lang.invoke.VarHandle _PROVIDOR_INFO_1W$pDLLName$VH() { return _PROVIDOR_INFO_1W$pDLLName$VH_; }

    static final MemoryLayout _PROVIDOR_INFO_2A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pOrder")
    ).withName("_PROVIDOR_INFO_2A");
    static final jdk.incubator.foreign.MemoryLayout _PROVIDOR_INFO_2A$struct$LAYOUT() { return _PROVIDOR_INFO_2A$struct$LAYOUT_; }

    static final MemoryLayout _PROVIDOR_INFO_2A$pOrder$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PROVIDOR_INFO_2A$pOrder$LAYOUT() { return _PROVIDOR_INFO_2A$pOrder$LAYOUT_; }

    static final VarHandle _PROVIDOR_INFO_2A$pOrder$VH_ = MemoryHandles.asAddressVarHandle(_PROVIDOR_INFO_2A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pOrder")));
    static final java.lang.invoke.VarHandle _PROVIDOR_INFO_2A$pOrder$VH() { return _PROVIDOR_INFO_2A$pOrder$VH_; }

    static final MemoryLayout _PROVIDOR_INFO_2W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pOrder")
    ).withName("_PROVIDOR_INFO_2W");
    static final jdk.incubator.foreign.MemoryLayout _PROVIDOR_INFO_2W$struct$LAYOUT() { return _PROVIDOR_INFO_2W$struct$LAYOUT_; }

    static final MemoryLayout _PROVIDOR_INFO_2W$pOrder$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PROVIDOR_INFO_2W$pOrder$LAYOUT() { return _PROVIDOR_INFO_2W$pOrder$LAYOUT_; }

    static final VarHandle _PROVIDOR_INFO_2W$pOrder$VH_ = MemoryHandles.asAddressVarHandle(_PROVIDOR_INFO_2W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pOrder")));
    static final java.lang.invoke.VarHandle _PROVIDOR_INFO_2W$pOrder$VH() { return _PROVIDOR_INFO_2W$pOrder$VH_; }

    static final FunctionDescriptor AddPrintProvidorA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddPrintProvidorA$FUNC() { return AddPrintProvidorA$FUNC_; }

    static final MethodHandle AddPrintProvidorA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddPrintProvidorA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        AddPrintProvidorA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddPrintProvidorA$MH() { return AddPrintProvidorA$MH_; }

    static final FunctionDescriptor AddPrintProvidorW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddPrintProvidorW$FUNC() { return AddPrintProvidorW$FUNC_; }

    static final MethodHandle AddPrintProvidorW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddPrintProvidorW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        AddPrintProvidorW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddPrintProvidorW$MH() { return AddPrintProvidorW$MH_; }

    static final FunctionDescriptor DeletePrintProvidorA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePrintProvidorA$FUNC() { return DeletePrintProvidorA$FUNC_; }

    static final MethodHandle DeletePrintProvidorA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePrintProvidorA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DeletePrintProvidorA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePrintProvidorA$MH() { return DeletePrintProvidorA$MH_; }

    static final FunctionDescriptor DeletePrintProvidorW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePrintProvidorW$FUNC() { return DeletePrintProvidorW$FUNC_; }

    static final MethodHandle DeletePrintProvidorW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePrintProvidorW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DeletePrintProvidorW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePrintProvidorW$MH() { return DeletePrintProvidorW$MH_; }

    static final FunctionDescriptor IsValidDevmodeA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor IsValidDevmodeA$FUNC() { return IsValidDevmodeA$FUNC_; }

    static final MethodHandle IsValidDevmodeA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IsValidDevmodeA",
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        IsValidDevmodeA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IsValidDevmodeA$MH() { return IsValidDevmodeA$MH_; }

    static final FunctionDescriptor IsValidDevmodeW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor IsValidDevmodeW$FUNC() { return IsValidDevmodeW$FUNC_; }

    static final MethodHandle IsValidDevmodeW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IsValidDevmodeW",
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        IsValidDevmodeW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IsValidDevmodeW$MH() { return IsValidDevmodeW$MH_; }

    static final int PRINTER_OPTION_NO_CACHE() { return (int)1L; }

    static final int PRINTER_OPTION_CACHE() { return (int)2L; }

    static final int PRINTER_OPTION_CLIENT_CHANGE() { return (int)4L; }

    static final int PRINTER_OPTION_NO_CLIENT_DATA() { return (int)8L; }

    static final MemoryLayout _PRINTER_OPTIONSA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("cbSize"),
        C_LONG.withName("dwFlags")
    ).withName("_PRINTER_OPTIONSA");
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_OPTIONSA$struct$LAYOUT() { return _PRINTER_OPTIONSA$struct$LAYOUT_; }

    static final MemoryLayout _PRINTER_OPTIONSA$cbSize$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_OPTIONSA$cbSize$LAYOUT() { return _PRINTER_OPTIONSA$cbSize$LAYOUT_; }

    static final VarHandle _PRINTER_OPTIONSA$cbSize$VH_ = _PRINTER_OPTIONSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _PRINTER_OPTIONSA$cbSize$VH() { return _PRINTER_OPTIONSA$cbSize$VH_; }

    static final MemoryLayout _PRINTER_OPTIONSA$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_OPTIONSA$dwFlags$LAYOUT() { return _PRINTER_OPTIONSA$dwFlags$LAYOUT_; }

    static final VarHandle _PRINTER_OPTIONSA$dwFlags$VH_ = _PRINTER_OPTIONSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _PRINTER_OPTIONSA$dwFlags$VH() { return _PRINTER_OPTIONSA$dwFlags$VH_; }

    static final MemoryLayout _PRINTER_OPTIONSW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("cbSize"),
        C_LONG.withName("dwFlags")
    ).withName("_PRINTER_OPTIONSW");
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_OPTIONSW$struct$LAYOUT() { return _PRINTER_OPTIONSW$struct$LAYOUT_; }

    static final MemoryLayout _PRINTER_OPTIONSW$cbSize$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_OPTIONSW$cbSize$LAYOUT() { return _PRINTER_OPTIONSW$cbSize$LAYOUT_; }

    static final VarHandle _PRINTER_OPTIONSW$cbSize$VH_ = _PRINTER_OPTIONSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle _PRINTER_OPTIONSW$cbSize$VH() { return _PRINTER_OPTIONSW$cbSize$VH_; }

    static final MemoryLayout _PRINTER_OPTIONSW$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_OPTIONSW$dwFlags$LAYOUT() { return _PRINTER_OPTIONSW$dwFlags$LAYOUT_; }

    static final VarHandle _PRINTER_OPTIONSW$dwFlags$VH_ = _PRINTER_OPTIONSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _PRINTER_OPTIONSW$dwFlags$VH() { return _PRINTER_OPTIONSW$dwFlags$VH_; }

    static final FunctionDescriptor OpenPrinter2A$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor OpenPrinter2A$FUNC() { return OpenPrinter2A$FUNC_; }

    static final MethodHandle OpenPrinter2A$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "OpenPrinter2A",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        OpenPrinter2A$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle OpenPrinter2A$MH() { return OpenPrinter2A$MH_; }

    static final FunctionDescriptor OpenPrinter2W$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor OpenPrinter2W$FUNC() { return OpenPrinter2W$FUNC_; }

    static final MethodHandle OpenPrinter2W$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "OpenPrinter2W",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        OpenPrinter2W$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle OpenPrinter2W$MH() { return OpenPrinter2W$MH_; }

    static final MemoryLayout _PRINTER_CONNECTION_INFO_1A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwFlags"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pszDriverName")
    ).withName("_PRINTER_CONNECTION_INFO_1A");
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_CONNECTION_INFO_1A$struct$LAYOUT() { return _PRINTER_CONNECTION_INFO_1A$struct$LAYOUT_; }

    static final MemoryLayout _PRINTER_CONNECTION_INFO_1A$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_CONNECTION_INFO_1A$dwFlags$LAYOUT() { return _PRINTER_CONNECTION_INFO_1A$dwFlags$LAYOUT_; }

    static final VarHandle _PRINTER_CONNECTION_INFO_1A$dwFlags$VH_ = _PRINTER_CONNECTION_INFO_1A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _PRINTER_CONNECTION_INFO_1A$dwFlags$VH() { return _PRINTER_CONNECTION_INFO_1A$dwFlags$VH_; }

    static final MemoryLayout _PRINTER_CONNECTION_INFO_1A$pszDriverName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_CONNECTION_INFO_1A$pszDriverName$LAYOUT() { return _PRINTER_CONNECTION_INFO_1A$pszDriverName$LAYOUT_; }

    static final VarHandle _PRINTER_CONNECTION_INFO_1A$pszDriverName$VH_ = MemoryHandles.asAddressVarHandle(_PRINTER_CONNECTION_INFO_1A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszDriverName")));
    static final java.lang.invoke.VarHandle _PRINTER_CONNECTION_INFO_1A$pszDriverName$VH() { return _PRINTER_CONNECTION_INFO_1A$pszDriverName$VH_; }

    static final MemoryLayout _PRINTER_CONNECTION_INFO_1W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwFlags"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pszDriverName")
    ).withName("_PRINTER_CONNECTION_INFO_1W");
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_CONNECTION_INFO_1W$struct$LAYOUT() { return _PRINTER_CONNECTION_INFO_1W$struct$LAYOUT_; }

    static final MemoryLayout _PRINTER_CONNECTION_INFO_1W$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_CONNECTION_INFO_1W$dwFlags$LAYOUT() { return _PRINTER_CONNECTION_INFO_1W$dwFlags$LAYOUT_; }

    static final VarHandle _PRINTER_CONNECTION_INFO_1W$dwFlags$VH_ = _PRINTER_CONNECTION_INFO_1W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _PRINTER_CONNECTION_INFO_1W$dwFlags$VH() { return _PRINTER_CONNECTION_INFO_1W$dwFlags$VH_; }

    static final MemoryLayout _PRINTER_CONNECTION_INFO_1W$pszDriverName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PRINTER_CONNECTION_INFO_1W$pszDriverName$LAYOUT() { return _PRINTER_CONNECTION_INFO_1W$pszDriverName$LAYOUT_; }

    static final VarHandle _PRINTER_CONNECTION_INFO_1W$pszDriverName$VH_ = MemoryHandles.asAddressVarHandle(_PRINTER_CONNECTION_INFO_1W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszDriverName")));
    static final java.lang.invoke.VarHandle _PRINTER_CONNECTION_INFO_1W$pszDriverName$VH() { return _PRINTER_CONNECTION_INFO_1W$pszDriverName$VH_; }

    static final FunctionDescriptor AddPrinterConnection2A$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddPrinterConnection2A$FUNC() { return AddPrinterConnection2A$FUNC_; }

    static final MethodHandle AddPrinterConnection2A$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddPrinterConnection2A",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        AddPrinterConnection2A$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddPrinterConnection2A$MH() { return AddPrinterConnection2A$MH_; }

    static final FunctionDescriptor AddPrinterConnection2W$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddPrinterConnection2W$FUNC() { return AddPrinterConnection2W$FUNC_; }

    static final MethodHandle AddPrinterConnection2W$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddPrinterConnection2W",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        AddPrinterConnection2W$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddPrinterConnection2W$MH() { return AddPrinterConnection2W$MH_; }

    static final FunctionDescriptor InstallPrinterDriverFromPackageA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor InstallPrinterDriverFromPackageA$FUNC() { return InstallPrinterDriverFromPackageA$FUNC_; }

    static final MethodHandle InstallPrinterDriverFromPackageA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "InstallPrinterDriverFromPackageA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        InstallPrinterDriverFromPackageA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle InstallPrinterDriverFromPackageA$MH() { return InstallPrinterDriverFromPackageA$MH_; }

    static final FunctionDescriptor InstallPrinterDriverFromPackageW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor InstallPrinterDriverFromPackageW$FUNC() { return InstallPrinterDriverFromPackageW$FUNC_; }

    static final MethodHandle InstallPrinterDriverFromPackageW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "InstallPrinterDriverFromPackageW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        InstallPrinterDriverFromPackageW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle InstallPrinterDriverFromPackageW$MH() { return InstallPrinterDriverFromPackageW$MH_; }

    static final FunctionDescriptor UploadPrinterDriverPackageA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor UploadPrinterDriverPackageA$FUNC() { return UploadPrinterDriverPackageA$FUNC_; }

    static final MethodHandle UploadPrinterDriverPackageA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "UploadPrinterDriverPackageA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        UploadPrinterDriverPackageA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle UploadPrinterDriverPackageA$MH() { return UploadPrinterDriverPackageA$MH_; }

    static final FunctionDescriptor UploadPrinterDriverPackageW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor UploadPrinterDriverPackageW$FUNC() { return UploadPrinterDriverPackageW$FUNC_; }

    static final MethodHandle UploadPrinterDriverPackageW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "UploadPrinterDriverPackageW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        UploadPrinterDriverPackageW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle UploadPrinterDriverPackageW$MH() { return UploadPrinterDriverPackageW$MH_; }

    static final MemoryLayout _CORE_PRINTER_DRIVERA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("CoreDriverGUID"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("ftDriverDate"),
        C_LONGLONG.withName("dwlDriverVersion"),
        MemoryLayout.ofSequence(260, C_CHAR).withName("szPackageID"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_CORE_PRINTER_DRIVERA");
    static final jdk.incubator.foreign.MemoryLayout _CORE_PRINTER_DRIVERA$struct$LAYOUT() { return _CORE_PRINTER_DRIVERA$struct$LAYOUT_; }

    static final MemoryLayout _CORE_PRINTER_DRIVERA$dwlDriverVersion$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CORE_PRINTER_DRIVERA$dwlDriverVersion$LAYOUT() { return _CORE_PRINTER_DRIVERA$dwlDriverVersion$LAYOUT_; }

    static final VarHandle _CORE_PRINTER_DRIVERA$dwlDriverVersion$VH_ = _CORE_PRINTER_DRIVERA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwlDriverVersion"));
    static final java.lang.invoke.VarHandle _CORE_PRINTER_DRIVERA$dwlDriverVersion$VH() { return _CORE_PRINTER_DRIVERA$dwlDriverVersion$VH_; }

    static final MemoryLayout _CORE_PRINTER_DRIVERW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("CoreDriverGUID"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("ftDriverDate"),
        C_LONGLONG.withName("dwlDriverVersion"),
        MemoryLayout.ofSequence(260, C_SHORT).withName("szPackageID")
    ).withName("_CORE_PRINTER_DRIVERW");
    static final jdk.incubator.foreign.MemoryLayout _CORE_PRINTER_DRIVERW$struct$LAYOUT() { return _CORE_PRINTER_DRIVERW$struct$LAYOUT_; }

    static final MemoryLayout _CORE_PRINTER_DRIVERW$dwlDriverVersion$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _CORE_PRINTER_DRIVERW$dwlDriverVersion$LAYOUT() { return _CORE_PRINTER_DRIVERW$dwlDriverVersion$LAYOUT_; }

    static final VarHandle _CORE_PRINTER_DRIVERW$dwlDriverVersion$VH_ = _CORE_PRINTER_DRIVERW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("dwlDriverVersion"));
    static final java.lang.invoke.VarHandle _CORE_PRINTER_DRIVERW$dwlDriverVersion$VH() { return _CORE_PRINTER_DRIVERW$dwlDriverVersion$VH_; }

    static final FunctionDescriptor GetCorePrinterDriversA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetCorePrinterDriversA$FUNC() { return GetCorePrinterDriversA$FUNC_; }

    static final MethodHandle GetCorePrinterDriversA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetCorePrinterDriversA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetCorePrinterDriversA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetCorePrinterDriversA$MH() { return GetCorePrinterDriversA$MH_; }

    static final FunctionDescriptor GetCorePrinterDriversW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetCorePrinterDriversW$FUNC() { return GetCorePrinterDriversW$FUNC_; }

    static final MethodHandle GetCorePrinterDriversW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetCorePrinterDriversW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetCorePrinterDriversW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetCorePrinterDriversW$MH() { return GetCorePrinterDriversW$MH_; }

    static final FunctionDescriptor CorePrinterDriverInstalledA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("_GUID"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("_FILETIME"),
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CorePrinterDriverInstalledA$FUNC() { return CorePrinterDriverInstalledA$FUNC_; }

    static final MethodHandle CorePrinterDriverInstalledA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CorePrinterDriverInstalledA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemorySegment;JLjdk/incubator/foreign/MemoryAddress;)I",
        CorePrinterDriverInstalledA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CorePrinterDriverInstalledA$MH() { return CorePrinterDriverInstalledA$MH_; }

    static final FunctionDescriptor CorePrinterDriverInstalledW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("_GUID"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("_FILETIME"),
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CorePrinterDriverInstalledW$FUNC() { return CorePrinterDriverInstalledW$FUNC_; }

    static final MethodHandle CorePrinterDriverInstalledW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CorePrinterDriverInstalledW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemorySegment;JLjdk/incubator/foreign/MemoryAddress;)I",
        CorePrinterDriverInstalledW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CorePrinterDriverInstalledW$MH() { return CorePrinterDriverInstalledW$MH_; }

    static final FunctionDescriptor GetPrinterDriverPackagePathA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetPrinterDriverPackagePathA$FUNC() { return GetPrinterDriverPackagePathA$FUNC_; }

    static final MethodHandle GetPrinterDriverPackagePathA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetPrinterDriverPackagePathA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetPrinterDriverPackagePathA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetPrinterDriverPackagePathA$MH() { return GetPrinterDriverPackagePathA$MH_; }

    static final FunctionDescriptor GetPrinterDriverPackagePathW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetPrinterDriverPackagePathW$FUNC() { return GetPrinterDriverPackagePathW$FUNC_; }

    static final MethodHandle GetPrinterDriverPackagePathW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetPrinterDriverPackagePathW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetPrinterDriverPackagePathW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetPrinterDriverPackagePathW$MH() { return GetPrinterDriverPackagePathW$MH_; }

    static final FunctionDescriptor DeletePrinterDriverPackageA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePrinterDriverPackageA$FUNC() { return DeletePrinterDriverPackageA$FUNC_; }

    static final MethodHandle DeletePrinterDriverPackageA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePrinterDriverPackageA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DeletePrinterDriverPackageA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePrinterDriverPackageA$MH() { return DeletePrinterDriverPackageA$MH_; }

    static final FunctionDescriptor DeletePrinterDriverPackageW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeletePrinterDriverPackageW$FUNC() { return DeletePrinterDriverPackageW$FUNC_; }

    static final MethodHandle DeletePrinterDriverPackageW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeletePrinterDriverPackageW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        DeletePrinterDriverPackageW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeletePrinterDriverPackageW$MH() { return DeletePrinterDriverPackageW$MH_; }

    static final int kPropertyTypeString() { return (int)1L; }

    static final int kPropertyTypeInt32() { return (int)2L; }

    static final int kPropertyTypeInt64() { return (int)3L; }

    static final int kPropertyTypeByte() { return (int)4L; }

    static final int kPropertyTypeTime() { return (int)5L; }

    static final int kPropertyTypeDevMode() { return (int)6L; }

    static final int kPropertyTypeSD() { return (int)7L; }

    static final int kPropertyTypeNotificationReply() { return (int)8L; }

    static final int kPropertyTypeNotificationOptions() { return (int)9L; }

    static final int kPropertyTypeBuffer() { return (int)10L; }

    static final int kAddingDocumentSequence() { return (int)0L; }

    static final int kDocumentSequenceAdded() { return (int)1L; }

    static final int kAddingFixedDocument() { return (int)2L; }

    static final int kFixedDocumentAdded() { return (int)3L; }

    static final int kAddingFixedPage() { return (int)4L; }

    static final int kFixedPageAdded() { return (int)5L; }

    static final int kResourceAdded() { return (int)6L; }

    static final int kFontAdded() { return (int)7L; }

    static final int kImageAdded() { return (int)8L; }

    static final int kXpsDocumentCommitted() { return (int)9L; }

    static final int kJobProduction() { return (int)1L; }

    static final int kJobConsumption() { return (int)2L; }

    static final MemoryLayout PrintPropertyValue$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("ePropertyType"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_CHAR.withName("propertyByte"),
            C_POINTER.withName("propertyString"),
            C_LONG.withName("propertyInt32"),
            C_LONGLONG.withName("propertyInt64"),
            MemoryLayout.ofStruct(
                C_LONG.withName("cbBuf"),
                MemoryLayout.ofPaddingBits(32),
                C_POINTER.withName("pBuf")
            ).withName("propertyBlob")
        ).withName("value")
    );
    static final jdk.incubator.foreign.MemoryLayout PrintPropertyValue$struct$LAYOUT() { return PrintPropertyValue$struct$LAYOUT_; }

    static final MemoryLayout PrintPropertyValue$ePropertyType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout PrintPropertyValue$ePropertyType$LAYOUT() { return PrintPropertyValue$ePropertyType$LAYOUT_; }

    static final VarHandle PrintPropertyValue$ePropertyType$VH_ = PrintPropertyValue$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ePropertyType"));
    static final java.lang.invoke.VarHandle PrintPropertyValue$ePropertyType$VH() { return PrintPropertyValue$ePropertyType$VH_; }

    static final MemoryLayout PrintPropertyValue$value$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_CHAR.withName("propertyByte"),
        C_POINTER.withName("propertyString"),
        C_LONG.withName("propertyInt32"),
        C_LONGLONG.withName("propertyInt64"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbBuf"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pBuf")
        ).withName("propertyBlob")
    );
    static final jdk.incubator.foreign.MemoryLayout PrintPropertyValue$value$union$LAYOUT() { return PrintPropertyValue$value$union$LAYOUT_; }

    static final MemoryLayout PrintPropertyValue$value$propertyByte$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout PrintPropertyValue$value$propertyByte$LAYOUT() { return PrintPropertyValue$value$propertyByte$LAYOUT_; }

    static final VarHandle PrintPropertyValue$value$propertyByte$VH_ = PrintPropertyValue$value$union$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("propertyByte"));
    static final java.lang.invoke.VarHandle PrintPropertyValue$value$propertyByte$VH() { return PrintPropertyValue$value$propertyByte$VH_; }

    static final MemoryLayout PrintPropertyValue$value$propertyString$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout PrintPropertyValue$value$propertyString$LAYOUT() { return PrintPropertyValue$value$propertyString$LAYOUT_; }

    static final VarHandle PrintPropertyValue$value$propertyString$VH_ = MemoryHandles.asAddressVarHandle(PrintPropertyValue$value$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("propertyString")));
    static final java.lang.invoke.VarHandle PrintPropertyValue$value$propertyString$VH() { return PrintPropertyValue$value$propertyString$VH_; }

    static final MemoryLayout PrintPropertyValue$value$propertyInt32$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout PrintPropertyValue$value$propertyInt32$LAYOUT() { return PrintPropertyValue$value$propertyInt32$LAYOUT_; }

    static final VarHandle PrintPropertyValue$value$propertyInt32$VH_ = PrintPropertyValue$value$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("propertyInt32"));
    static final java.lang.invoke.VarHandle PrintPropertyValue$value$propertyInt32$VH() { return PrintPropertyValue$value$propertyInt32$VH_; }

    static final MemoryLayout PrintPropertyValue$value$propertyInt64$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout PrintPropertyValue$value$propertyInt64$LAYOUT() { return PrintPropertyValue$value$propertyInt64$LAYOUT_; }

    static final VarHandle PrintPropertyValue$value$propertyInt64$VH_ = PrintPropertyValue$value$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("propertyInt64"));
    static final java.lang.invoke.VarHandle PrintPropertyValue$value$propertyInt64$VH() { return PrintPropertyValue$value$propertyInt64$VH_; }

    static final MemoryLayout PrintPropertyValue$value$propertyBlob$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbBuf"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pBuf")
    );
    static final jdk.incubator.foreign.MemoryLayout PrintPropertyValue$value$propertyBlob$struct$LAYOUT() { return PrintPropertyValue$value$propertyBlob$struct$LAYOUT_; }

    static final MemoryLayout PrintPropertyValue$value$propertyBlob$cbBuf$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout PrintPropertyValue$value$propertyBlob$cbBuf$LAYOUT() { return PrintPropertyValue$value$propertyBlob$cbBuf$LAYOUT_; }

    static final VarHandle PrintPropertyValue$value$propertyBlob$cbBuf$VH_ = PrintPropertyValue$value$propertyBlob$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbBuf"));
    static final java.lang.invoke.VarHandle PrintPropertyValue$value$propertyBlob$cbBuf$VH() { return PrintPropertyValue$value$propertyBlob$cbBuf$VH_; }

    static final MemoryLayout PrintPropertyValue$value$propertyBlob$pBuf$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout PrintPropertyValue$value$propertyBlob$pBuf$LAYOUT() { return PrintPropertyValue$value$propertyBlob$pBuf$LAYOUT_; }

    static final VarHandle PrintPropertyValue$value$propertyBlob$pBuf$VH_ = MemoryHandles.asAddressVarHandle(PrintPropertyValue$value$propertyBlob$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pBuf")));
    static final java.lang.invoke.VarHandle PrintPropertyValue$value$propertyBlob$pBuf$VH() { return PrintPropertyValue$value$propertyBlob$pBuf$VH_; }

    static final MemoryLayout PrintNamedProperty$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("propertyName"),
        MemoryLayout.ofStruct(
            C_INT.withName("ePropertyType"),
            MemoryLayout.ofPaddingBits(32),
            MemoryLayout.ofUnion(
                C_CHAR.withName("propertyByte"),
                C_POINTER.withName("propertyString"),
                C_LONG.withName("propertyInt32"),
                C_LONGLONG.withName("propertyInt64"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("cbBuf"),
                    MemoryLayout.ofPaddingBits(32),
                    C_POINTER.withName("pBuf")
                ).withName("propertyBlob")
            ).withName("value")
        ).withName("propertyValue")
    );
    static final jdk.incubator.foreign.MemoryLayout PrintNamedProperty$struct$LAYOUT() { return PrintNamedProperty$struct$LAYOUT_; }

    static final MemoryLayout PrintNamedProperty$propertyName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout PrintNamedProperty$propertyName$LAYOUT() { return PrintNamedProperty$propertyName$LAYOUT_; }

    static final VarHandle PrintNamedProperty$propertyName$VH_ = MemoryHandles.asAddressVarHandle(PrintNamedProperty$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("propertyName")));
    static final java.lang.invoke.VarHandle PrintNamedProperty$propertyName$VH() { return PrintNamedProperty$propertyName$VH_; }

    static final MemoryLayout PrintPropertiesCollection$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("numberOfProperties"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("propertiesCollection")
    );
    static final jdk.incubator.foreign.MemoryLayout PrintPropertiesCollection$struct$LAYOUT() { return PrintPropertiesCollection$struct$LAYOUT_; }

    static final MemoryLayout PrintPropertiesCollection$numberOfProperties$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout PrintPropertiesCollection$numberOfProperties$LAYOUT() { return PrintPropertiesCollection$numberOfProperties$LAYOUT_; }

    static final VarHandle PrintPropertiesCollection$numberOfProperties$VH_ = PrintPropertiesCollection$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("numberOfProperties"));
    static final java.lang.invoke.VarHandle PrintPropertiesCollection$numberOfProperties$VH() { return PrintPropertiesCollection$numberOfProperties$VH_; }

    static final MemoryLayout PrintPropertiesCollection$propertiesCollection$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout PrintPropertiesCollection$propertiesCollection$LAYOUT() { return PrintPropertiesCollection$propertiesCollection$LAYOUT_; }

    static final VarHandle PrintPropertiesCollection$propertiesCollection$VH_ = MemoryHandles.asAddressVarHandle(PrintPropertiesCollection$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("propertiesCollection")));
    static final java.lang.invoke.VarHandle PrintPropertiesCollection$propertiesCollection$VH() { return PrintPropertiesCollection$propertiesCollection$VH_; }

    static final FunctionDescriptor ReportJobProcessingProgress$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReportJobProcessingProgress$FUNC() { return ReportJobProcessingProgress$FUNC_; }

    static final MethodHandle ReportJobProcessingProgress$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReportJobProcessingProgress",
        "(Ljdk/incubator/foreign/MemoryAddress;III)I",
        ReportJobProcessingProgress$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReportJobProcessingProgress$MH() { return ReportJobProcessingProgress$MH_; }

    static final FunctionDescriptor GetPrinterDriver2A$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetPrinterDriver2A$FUNC() { return GetPrinterDriver2A$FUNC_; }

    static final MethodHandle GetPrinterDriver2A$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetPrinterDriver2A",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetPrinterDriver2A$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetPrinterDriver2A$MH() { return GetPrinterDriver2A$MH_; }

    static final FunctionDescriptor GetPrinterDriver2W$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetPrinterDriver2W$FUNC() { return GetPrinterDriver2W$FUNC_; }

    static final MethodHandle GetPrinterDriver2W$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetPrinterDriver2W",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetPrinterDriver2W$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetPrinterDriver2W$MH() { return GetPrinterDriver2W$MH_; }

    static final int PRINT_EXECUTION_CONTEXT_APPLICATION() { return (int)0L; }

    static final int PRINT_EXECUTION_CONTEXT_SPOOLER_SERVICE() { return (int)1L; }

    static final int PRINT_EXECUTION_CONTEXT_SPOOLER_ISOLATION_HOST() { return (int)2L; }

    static final int PRINT_EXECUTION_CONTEXT_FILTER_PIPELINE() { return (int)3L; }

    static final int PRINT_EXECUTION_CONTEXT_WOW64() { return (int)4L; }

    static final MemoryLayout PRINT_EXECUTION_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("context"),
        C_LONG.withName("clientAppPID")
    );
    static final jdk.incubator.foreign.MemoryLayout PRINT_EXECUTION_DATA$struct$LAYOUT() { return PRINT_EXECUTION_DATA$struct$LAYOUT_; }

    static final MemoryLayout PRINT_EXECUTION_DATA$context$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout PRINT_EXECUTION_DATA$context$LAYOUT() { return PRINT_EXECUTION_DATA$context$LAYOUT_; }

    static final VarHandle PRINT_EXECUTION_DATA$context$VH_ = PRINT_EXECUTION_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("context"));
    static final java.lang.invoke.VarHandle PRINT_EXECUTION_DATA$context$VH() { return PRINT_EXECUTION_DATA$context$VH_; }

    static final MemoryLayout PRINT_EXECUTION_DATA$clientAppPID$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout PRINT_EXECUTION_DATA$clientAppPID$LAYOUT() { return PRINT_EXECUTION_DATA$clientAppPID$LAYOUT_; }

    static final VarHandle PRINT_EXECUTION_DATA$clientAppPID$VH_ = PRINT_EXECUTION_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("clientAppPID"));
    static final java.lang.invoke.VarHandle PRINT_EXECUTION_DATA$clientAppPID$VH() { return PRINT_EXECUTION_DATA$clientAppPID$VH_; }

    static final FunctionDescriptor GetPrintExecutionData$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetPrintExecutionData$FUNC() { return GetPrintExecutionData$FUNC_; }

    static final MethodHandle GetPrintExecutionData$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetPrintExecutionData",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        GetPrintExecutionData$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetPrintExecutionData$MH() { return GetPrintExecutionData$MH_; }

    static final FunctionDescriptor GetJobNamedPropertyValue$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetJobNamedPropertyValue$FUNC() { return GetJobNamedPropertyValue$FUNC_; }

    static final MethodHandle GetJobNamedPropertyValue$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetJobNamedPropertyValue",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        GetJobNamedPropertyValue$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetJobNamedPropertyValue$MH() { return GetJobNamedPropertyValue$MH_; }

    static final FunctionDescriptor FreePrintPropertyValue$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FreePrintPropertyValue$FUNC() { return FreePrintPropertyValue$FUNC_; }

    static final MethodHandle FreePrintPropertyValue$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FreePrintPropertyValue",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        FreePrintPropertyValue$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FreePrintPropertyValue$MH() { return FreePrintPropertyValue$MH_; }

    static final FunctionDescriptor FreePrintNamedPropertyArray$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FreePrintNamedPropertyArray$FUNC() { return FreePrintNamedPropertyArray$FUNC_; }

    static final MethodHandle FreePrintNamedPropertyArray$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FreePrintNamedPropertyArray",
        "(ILjdk/incubator/foreign/MemoryAddress;)V",
        FreePrintNamedPropertyArray$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FreePrintNamedPropertyArray$MH() { return FreePrintNamedPropertyArray$MH_; }

    static final FunctionDescriptor SetJobNamedProperty$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SetJobNamedProperty$FUNC() { return SetJobNamedProperty$FUNC_; }

    static final MethodHandle SetJobNamedProperty$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetJobNamedProperty",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        SetJobNamedProperty$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SetJobNamedProperty$MH() { return SetJobNamedProperty$MH_; }

    static final FunctionDescriptor DeleteJobNamedProperty$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeleteJobNamedProperty$FUNC() { return DeleteJobNamedProperty$FUNC_; }

    static final MethodHandle DeleteJobNamedProperty$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeleteJobNamedProperty",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        DeleteJobNamedProperty$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeleteJobNamedProperty$MH() { return DeleteJobNamedProperty$MH_; }

    static final FunctionDescriptor EnumJobNamedProperties$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumJobNamedProperties$FUNC() { return EnumJobNamedProperties$FUNC_; }

    static final MethodHandle EnumJobNamedProperties$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumJobNamedProperties",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumJobNamedProperties$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumJobNamedProperties$MH() { return EnumJobNamedProperties$MH_; }

    static final FunctionDescriptor GetPrintOutputInfo$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetPrintOutputInfo$FUNC() { return GetPrintOutputInfo$FUNC_; }

    static final MethodHandle GetPrintOutputInfo$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetPrintOutputInfo",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        GetPrintOutputInfo$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetPrintOutputInfo$MH() { return GetPrintOutputInfo$MH_; }

    static final FunctionDescriptor _calloc_base$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _calloc_base$FUNC() { return _calloc_base$FUNC_; }

    static final MethodHandle _calloc_base$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_calloc_base",
        "(JJ)Ljdk/incubator/foreign/MemoryAddress;",
        _calloc_base$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _calloc_base$MH() { return _calloc_base$MH_; }

    static final FunctionDescriptor calloc$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor calloc$FUNC() { return calloc$FUNC_; }

    static final MethodHandle calloc$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "calloc",
        "(JJ)Ljdk/incubator/foreign/MemoryAddress;",
        calloc$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle calloc$MH() { return calloc$MH_; }

    static final FunctionDescriptor _callnewh$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _callnewh$FUNC() { return _callnewh$FUNC_; }

    static final MethodHandle _callnewh$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_callnewh",
        "(J)I",
        _callnewh$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _callnewh$MH() { return _callnewh$MH_; }

    static final FunctionDescriptor _expand$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _expand$FUNC() { return _expand$FUNC_; }

    static final MethodHandle _expand$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_expand",
        "(Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
        _expand$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _expand$MH() { return _expand$MH_; }

    static final FunctionDescriptor _free_base$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _free_base$FUNC() { return _free_base$FUNC_; }

    static final MethodHandle _free_base$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_free_base",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        _free_base$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _free_base$MH() { return _free_base$MH_; }

    static final FunctionDescriptor free$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor free$FUNC() { return free$FUNC_; }

    static final MethodHandle free$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "free",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        free$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle free$MH() { return free$MH_; }

    static final FunctionDescriptor _malloc_base$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _malloc_base$FUNC() { return _malloc_base$FUNC_; }

    static final MethodHandle _malloc_base$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_malloc_base",
        "(J)Ljdk/incubator/foreign/MemoryAddress;",
        _malloc_base$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _malloc_base$MH() { return _malloc_base$MH_; }

    static final FunctionDescriptor malloc$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor malloc$FUNC() { return malloc$FUNC_; }

    static final MethodHandle malloc$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "malloc",
        "(J)Ljdk/incubator/foreign/MemoryAddress;",
        malloc$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle malloc$MH() { return malloc$MH_; }

    static final FunctionDescriptor _msize_base$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _msize_base$FUNC() { return _msize_base$FUNC_; }

    static final MethodHandle _msize_base$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_msize_base",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        _msize_base$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _msize_base$MH() { return _msize_base$MH_; }

    static final FunctionDescriptor _msize$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _msize$FUNC() { return _msize$FUNC_; }

    static final MethodHandle _msize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_msize",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        _msize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _msize$MH() { return _msize$MH_; }

    static final FunctionDescriptor _realloc_base$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _realloc_base$FUNC() { return _realloc_base$FUNC_; }

    static final MethodHandle _realloc_base$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_realloc_base",
        "(Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
        _realloc_base$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _realloc_base$MH() { return _realloc_base$MH_; }

    static final FunctionDescriptor realloc$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor realloc$FUNC() { return realloc$FUNC_; }

    static final MethodHandle realloc$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "realloc",
        "(Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
        realloc$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle realloc$MH() { return realloc$MH_; }

    static final FunctionDescriptor _recalloc_base$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _recalloc_base$FUNC() { return _recalloc_base$FUNC_; }

    static final MethodHandle _recalloc_base$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_recalloc_base",
        "(Ljdk/incubator/foreign/MemoryAddress;JJ)Ljdk/incubator/foreign/MemoryAddress;",
        _recalloc_base$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _recalloc_base$MH() { return _recalloc_base$MH_; }

    static final FunctionDescriptor _recalloc$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _recalloc$FUNC() { return _recalloc$FUNC_; }

    static final MethodHandle _recalloc$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_recalloc",
        "(Ljdk/incubator/foreign/MemoryAddress;JJ)Ljdk/incubator/foreign/MemoryAddress;",
        _recalloc$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _recalloc$MH() { return _recalloc$MH_; }

    static final FunctionDescriptor _aligned_free$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _aligned_free$FUNC() { return _aligned_free$FUNC_; }

    static final MethodHandle _aligned_free$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_aligned_free",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        _aligned_free$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _aligned_free$MH() { return _aligned_free$MH_; }

    static final FunctionDescriptor _aligned_malloc$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _aligned_malloc$FUNC() { return _aligned_malloc$FUNC_; }

    static final MethodHandle _aligned_malloc$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_aligned_malloc",
        "(JJ)Ljdk/incubator/foreign/MemoryAddress;",
        _aligned_malloc$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _aligned_malloc$MH() { return _aligned_malloc$MH_; }

    static final FunctionDescriptor _aligned_offset_malloc$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONGLONG,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _aligned_offset_malloc$FUNC() { return _aligned_offset_malloc$FUNC_; }

    static final MethodHandle _aligned_offset_malloc$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_aligned_offset_malloc",
        "(JJJ)Ljdk/incubator/foreign/MemoryAddress;",
        _aligned_offset_malloc$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _aligned_offset_malloc$MH() { return _aligned_offset_malloc$MH_; }

    static final FunctionDescriptor _aligned_msize$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _aligned_msize$FUNC() { return _aligned_msize$FUNC_; }

    static final MethodHandle _aligned_msize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_aligned_msize",
        "(Ljdk/incubator/foreign/MemoryAddress;JJ)J",
        _aligned_msize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _aligned_msize$MH() { return _aligned_msize$MH_; }

    static final FunctionDescriptor _aligned_offset_realloc$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _aligned_offset_realloc$FUNC() { return _aligned_offset_realloc$FUNC_; }

    static final MethodHandle _aligned_offset_realloc$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_aligned_offset_realloc",
        "(Ljdk/incubator/foreign/MemoryAddress;JJJ)Ljdk/incubator/foreign/MemoryAddress;",
        _aligned_offset_realloc$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _aligned_offset_realloc$MH() { return _aligned_offset_realloc$MH_; }

    static final FunctionDescriptor _aligned_offset_recalloc$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_LONGLONG,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _aligned_offset_recalloc$FUNC() { return _aligned_offset_recalloc$FUNC_; }

    static final MethodHandle _aligned_offset_recalloc$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_aligned_offset_recalloc",
        "(Ljdk/incubator/foreign/MemoryAddress;JJJJ)Ljdk/incubator/foreign/MemoryAddress;",
        _aligned_offset_recalloc$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _aligned_offset_recalloc$MH() { return _aligned_offset_recalloc$MH_; }

    static final FunctionDescriptor _aligned_realloc$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _aligned_realloc$FUNC() { return _aligned_realloc$FUNC_; }

    static final MethodHandle _aligned_realloc$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_aligned_realloc",
        "(Ljdk/incubator/foreign/MemoryAddress;JJ)Ljdk/incubator/foreign/MemoryAddress;",
        _aligned_realloc$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _aligned_realloc$MH() { return _aligned_realloc$MH_; }

    static final FunctionDescriptor _aligned_recalloc$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _aligned_recalloc$FUNC() { return _aligned_recalloc$FUNC_; }

    static final MethodHandle _aligned_recalloc$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_aligned_recalloc",
        "(Ljdk/incubator/foreign/MemoryAddress;JJJ)Ljdk/incubator/foreign/MemoryAddress;",
        _aligned_recalloc$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _aligned_recalloc$MH() { return _aligned_recalloc$MH_; }

    static final FunctionDescriptor bsearch_s$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor bsearch_s$FUNC() { return bsearch_s$FUNC_; }

    static final MethodHandle bsearch_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "bsearch_s",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JJLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        bsearch_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle bsearch_s$MH() { return bsearch_s$MH_; }

    static final FunctionDescriptor bsearch_s$_CompareFunction$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor bsearch_s$_CompareFunction$FUNC() { return bsearch_s$_CompareFunction$FUNC_; }

    static final FunctionDescriptor qsort_s$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONGLONG,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor qsort_s$FUNC() { return qsort_s$FUNC_; }

    static final MethodHandle qsort_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "qsort_s",
        "(Ljdk/incubator/foreign/MemoryAddress;JJLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        qsort_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle qsort_s$MH() { return qsort_s$MH_; }

    static final FunctionDescriptor qsort_s$_CompareFunction$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor qsort_s$_CompareFunction$FUNC() { return qsort_s$_CompareFunction$FUNC_; }

    static final FunctionDescriptor bsearch$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor bsearch$FUNC() { return bsearch$FUNC_; }

    static final MethodHandle bsearch$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "bsearch",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JJLjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        bsearch$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle bsearch$MH() { return bsearch$MH_; }

    static final FunctionDescriptor bsearch$_CompareFunction$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor bsearch$_CompareFunction$FUNC() { return bsearch$_CompareFunction$FUNC_; }

    static final FunctionDescriptor qsort$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONGLONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor qsort$FUNC() { return qsort$FUNC_; }

    static final MethodHandle qsort$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "qsort",
        "(Ljdk/incubator/foreign/MemoryAddress;JJLjdk/incubator/foreign/MemoryAddress;)V",
        qsort$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle qsort$MH() { return qsort$MH_; }

    static final FunctionDescriptor qsort$_CompareFunction$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor qsort$_CompareFunction$FUNC() { return qsort$_CompareFunction$FUNC_; }

    static final FunctionDescriptor _lfind_s$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _lfind_s$FUNC() { return _lfind_s$FUNC_; }

    static final MethodHandle _lfind_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_lfind_s",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        _lfind_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _lfind_s$MH() { return _lfind_s$MH_; }

    static final FunctionDescriptor _lfind_s$_CompareFunction$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _lfind_s$_CompareFunction$FUNC() { return _lfind_s$_CompareFunction$FUNC_; }

    static final FunctionDescriptor _lfind$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _lfind$FUNC() { return _lfind$FUNC_; }

    static final MethodHandle _lfind$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_lfind",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        _lfind$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _lfind$MH() { return _lfind$MH_; }

    static final FunctionDescriptor _lfind$_CompareFunction$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _lfind$_CompareFunction$FUNC() { return _lfind$_CompareFunction$FUNC_; }

    static final FunctionDescriptor _lsearch_s$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _lsearch_s$FUNC() { return _lsearch_s$FUNC_; }

    static final MethodHandle _lsearch_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_lsearch_s",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        _lsearch_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _lsearch_s$MH() { return _lsearch_s$MH_; }

    static final FunctionDescriptor _lsearch_s$_CompareFunction$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _lsearch_s$_CompareFunction$FUNC() { return _lsearch_s$_CompareFunction$FUNC_; }

    static final FunctionDescriptor _lsearch$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _lsearch$FUNC() { return _lsearch$FUNC_; }

    static final MethodHandle _lsearch$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_lsearch",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        _lsearch$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _lsearch$MH() { return _lsearch$MH_; }

    static final FunctionDescriptor _lsearch$_CompareFunction$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _lsearch$_CompareFunction$FUNC() { return _lsearch$_CompareFunction$FUNC_; }

    static final FunctionDescriptor lfind$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor lfind$FUNC() { return lfind$FUNC_; }

    static final MethodHandle lfind$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "lfind",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        lfind$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle lfind$MH() { return lfind$MH_; }

    static final FunctionDescriptor lfind$_CompareFunction$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor lfind$_CompareFunction$FUNC() { return lfind$_CompareFunction$FUNC_; }

    static final FunctionDescriptor lsearch$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor lsearch$FUNC() { return lsearch$FUNC_; }

    static final MethodHandle lsearch$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "lsearch",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        lsearch$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle lsearch$MH() { return lsearch$MH_; }

    static final FunctionDescriptor lsearch$_CompareFunction$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor lsearch$_CompareFunction$FUNC() { return lsearch$_CompareFunction$FUNC_; }

    static final FunctionDescriptor _itow_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_LONGLONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _itow_s$FUNC() { return _itow_s$FUNC_; }

    static final MethodHandle _itow_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_itow_s",
        "(ILjdk/incubator/foreign/MemoryAddress;JI)I",
        _itow_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _itow_s$MH() { return _itow_s$MH_; }

    static final FunctionDescriptor _itow$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _itow$FUNC() { return _itow$FUNC_; }

    static final MethodHandle _itow$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_itow",
        "(ILjdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        _itow$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _itow$MH() { return _itow$MH_; }

    static final FunctionDescriptor _ltow_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_LONGLONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _ltow_s$FUNC() { return _ltow_s$FUNC_; }

    static final MethodHandle _ltow_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_ltow_s",
        "(ILjdk/incubator/foreign/MemoryAddress;JI)I",
        _ltow_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _ltow_s$MH() { return _ltow_s$MH_; }

    static final FunctionDescriptor _ltow$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _ltow$FUNC() { return _ltow$FUNC_; }

    static final MethodHandle _ltow$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_ltow",
        "(ILjdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        _ltow$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _ltow$MH() { return _ltow$MH_; }

    static final FunctionDescriptor _ultow_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_LONGLONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _ultow_s$FUNC() { return _ultow_s$FUNC_; }

    static final MethodHandle _ultow_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_ultow_s",
        "(ILjdk/incubator/foreign/MemoryAddress;JI)I",
        _ultow_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _ultow_s$MH() { return _ultow_s$MH_; }

    static final FunctionDescriptor _ultow$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _ultow$FUNC() { return _ultow$FUNC_; }

    static final MethodHandle _ultow$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_ultow",
        "(ILjdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        _ultow$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _ultow$MH() { return _ultow$MH_; }

    static final FunctionDescriptor wcstod$FUNC_ = FunctionDescriptor.of(C_DOUBLE,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor wcstod$FUNC() { return wcstod$FUNC_; }

    static final MethodHandle wcstod$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wcstod",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)D",
        wcstod$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle wcstod$MH() { return wcstod$MH_; }

    static final FunctionDescriptor _wcstod_l$FUNC_ = FunctionDescriptor.of(C_DOUBLE,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wcstod_l$FUNC() { return _wcstod_l$FUNC_; }

    static final MethodHandle _wcstod_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wcstod_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)D",
        _wcstod_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wcstod_l$MH() { return _wcstod_l$MH_; }

    static final FunctionDescriptor wcstol$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor wcstol$FUNC() { return wcstol$FUNC_; }

    static final MethodHandle wcstol$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wcstol",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        wcstol$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle wcstol$MH() { return wcstol$MH_; }

    static final FunctionDescriptor _wcstol_l$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wcstol_l$FUNC() { return _wcstol_l$FUNC_; }

    static final MethodHandle _wcstol_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wcstol_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        _wcstol_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wcstol_l$MH() { return _wcstol_l$MH_; }

    static final FunctionDescriptor wcstoll$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor wcstoll$FUNC() { return wcstoll$FUNC_; }

    static final MethodHandle wcstoll$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wcstoll",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)J",
        wcstoll$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle wcstoll$MH() { return wcstoll$MH_; }

    static final FunctionDescriptor _wcstoll_l$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wcstoll_l$FUNC() { return _wcstoll_l$FUNC_; }

    static final MethodHandle _wcstoll_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wcstoll_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)J",
        _wcstoll_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wcstoll_l$MH() { return _wcstoll_l$MH_; }

    static final FunctionDescriptor wcstoul$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor wcstoul$FUNC() { return wcstoul$FUNC_; }

    static final MethodHandle wcstoul$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wcstoul",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        wcstoul$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle wcstoul$MH() { return wcstoul$MH_; }

    static final FunctionDescriptor _wcstoul_l$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wcstoul_l$FUNC() { return _wcstoul_l$FUNC_; }

    static final MethodHandle _wcstoul_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wcstoul_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        _wcstoul_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wcstoul_l$MH() { return _wcstoul_l$MH_; }

    static final FunctionDescriptor wcstoull$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor wcstoull$FUNC() { return wcstoull$FUNC_; }

    static final MethodHandle wcstoull$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wcstoull",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)J",
        wcstoull$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle wcstoull$MH() { return wcstoull$MH_; }

    static final FunctionDescriptor _wcstoull_l$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wcstoull_l$FUNC() { return _wcstoull_l$FUNC_; }

    static final MethodHandle _wcstoull_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wcstoull_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)J",
        _wcstoull_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wcstoull_l$MH() { return _wcstoull_l$MH_; }

    static final FunctionDescriptor wcstold$FUNC_ = FunctionDescriptor.of(C_LONGDOUBLE,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor wcstold$FUNC() { return wcstold$FUNC_; }

    static final MethodHandle wcstold$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wcstold",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)D",
        wcstold$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle wcstold$MH() { return wcstold$MH_; }

    static final FunctionDescriptor _wcstold_l$FUNC_ = FunctionDescriptor.of(C_LONGDOUBLE,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wcstold_l$FUNC() { return _wcstold_l$FUNC_; }

    static final MethodHandle _wcstold_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wcstold_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)D",
        _wcstold_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wcstold_l$MH() { return _wcstold_l$MH_; }

    static final FunctionDescriptor wcstof$FUNC_ = FunctionDescriptor.of(C_FLOAT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor wcstof$FUNC() { return wcstof$FUNC_; }

    static final MethodHandle wcstof$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wcstof",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)F",
        wcstof$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle wcstof$MH() { return wcstof$MH_; }

    static final FunctionDescriptor _wcstof_l$FUNC_ = FunctionDescriptor.of(C_FLOAT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wcstof_l$FUNC() { return _wcstof_l$FUNC_; }

    static final MethodHandle _wcstof_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wcstof_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)F",
        _wcstof_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wcstof_l$MH() { return _wcstof_l$MH_; }

    static final FunctionDescriptor _wtof$FUNC_ = FunctionDescriptor.of(C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wtof$FUNC() { return _wtof$FUNC_; }

    static final MethodHandle _wtof$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wtof",
        "(Ljdk/incubator/foreign/MemoryAddress;)D",
        _wtof$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wtof$MH() { return _wtof$MH_; }

    static final FunctionDescriptor _wtof_l$FUNC_ = FunctionDescriptor.of(C_DOUBLE,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wtof_l$FUNC() { return _wtof_l$FUNC_; }

    static final MethodHandle _wtof_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wtof_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)D",
        _wtof_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wtof_l$MH() { return _wtof_l$MH_; }

    static final FunctionDescriptor _wtoi$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wtoi$FUNC() { return _wtoi$FUNC_; }

    static final MethodHandle _wtoi$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wtoi",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        _wtoi$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wtoi$MH() { return _wtoi$MH_; }

    static final FunctionDescriptor _wtoi_l$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wtoi_l$FUNC() { return _wtoi_l$FUNC_; }

    static final MethodHandle _wtoi_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wtoi_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        _wtoi_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wtoi_l$MH() { return _wtoi_l$MH_; }

    static final FunctionDescriptor _wtol$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wtol$FUNC() { return _wtol$FUNC_; }

    static final MethodHandle _wtol$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wtol",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        _wtol$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wtol$MH() { return _wtol$MH_; }

    static final FunctionDescriptor _wtol_l$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wtol_l$FUNC() { return _wtol_l$FUNC_; }

    static final MethodHandle _wtol_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wtol_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        _wtol_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wtol_l$MH() { return _wtol_l$MH_; }

    static final FunctionDescriptor _wtoll$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wtoll$FUNC() { return _wtoll$FUNC_; }

    static final MethodHandle _wtoll$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wtoll",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        _wtoll$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wtoll$MH() { return _wtoll$MH_; }

    static final FunctionDescriptor _wtoll_l$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wtoll_l$FUNC() { return _wtoll_l$FUNC_; }

    static final MethodHandle _wtoll_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wtoll_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)J",
        _wtoll_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wtoll_l$MH() { return _wtoll_l$MH_; }

    static final FunctionDescriptor _i64tow_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_LONGLONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _i64tow_s$FUNC() { return _i64tow_s$FUNC_; }

    static final MethodHandle _i64tow_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_i64tow_s",
        "(JLjdk/incubator/foreign/MemoryAddress;JI)I",
        _i64tow_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _i64tow_s$MH() { return _i64tow_s$MH_; }

    static final FunctionDescriptor _i64tow$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _i64tow$FUNC() { return _i64tow$FUNC_; }

    static final MethodHandle _i64tow$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_i64tow",
        "(JLjdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        _i64tow$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _i64tow$MH() { return _i64tow$MH_; }

    static final FunctionDescriptor _ui64tow_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_LONGLONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _ui64tow_s$FUNC() { return _ui64tow_s$FUNC_; }

    static final MethodHandle _ui64tow_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_ui64tow_s",
        "(JLjdk/incubator/foreign/MemoryAddress;JI)I",
        _ui64tow_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _ui64tow_s$MH() { return _ui64tow_s$MH_; }

    static final FunctionDescriptor _ui64tow$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _ui64tow$FUNC() { return _ui64tow$FUNC_; }

    static final MethodHandle _ui64tow$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_ui64tow",
        "(JLjdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        _ui64tow$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _ui64tow$MH() { return _ui64tow$MH_; }

    static final FunctionDescriptor _wtoi64$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wtoi64$FUNC() { return _wtoi64$FUNC_; }

    static final MethodHandle _wtoi64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wtoi64",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        _wtoi64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wtoi64$MH() { return _wtoi64$MH_; }

    static final FunctionDescriptor _wtoi64_l$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wtoi64_l$FUNC() { return _wtoi64_l$FUNC_; }

    static final MethodHandle _wtoi64_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wtoi64_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)J",
        _wtoi64_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wtoi64_l$MH() { return _wtoi64_l$MH_; }

    static final FunctionDescriptor _wcstoi64$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wcstoi64$FUNC() { return _wcstoi64$FUNC_; }

    static final MethodHandle _wcstoi64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wcstoi64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)J",
        _wcstoi64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wcstoi64$MH() { return _wcstoi64$MH_; }

    static final FunctionDescriptor _wcstoi64_l$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wcstoi64_l$FUNC() { return _wcstoi64_l$FUNC_; }

    static final MethodHandle _wcstoi64_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wcstoi64_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)J",
        _wcstoi64_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wcstoi64_l$MH() { return _wcstoi64_l$MH_; }

    static final FunctionDescriptor _wcstoui64$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wcstoui64$FUNC() { return _wcstoui64$FUNC_; }

    static final MethodHandle _wcstoui64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wcstoui64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)J",
        _wcstoui64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wcstoui64$MH() { return _wcstoui64$MH_; }

    static final FunctionDescriptor _wcstoui64_l$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wcstoui64_l$FUNC() { return _wcstoui64_l$FUNC_; }

    static final MethodHandle _wcstoui64_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wcstoui64_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)J",
        _wcstoui64_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wcstoui64_l$MH() { return _wcstoui64_l$MH_; }

    static final FunctionDescriptor _wfullpath$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wfullpath$FUNC() { return _wfullpath$FUNC_; }

    static final MethodHandle _wfullpath$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wfullpath",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
        _wfullpath$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wfullpath$MH() { return _wfullpath$MH_; }

    static final FunctionDescriptor _wmakepath_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wmakepath_s$FUNC() { return _wmakepath_s$FUNC_; }

    static final MethodHandle _wmakepath_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wmakepath_s",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        _wmakepath_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wmakepath_s$MH() { return _wmakepath_s$MH_; }

    static final FunctionDescriptor _wmakepath$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wmakepath$FUNC() { return _wmakepath$FUNC_; }

    static final MethodHandle _wmakepath$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wmakepath",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        _wmakepath$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wmakepath$MH() { return _wmakepath$MH_; }

    static final FunctionDescriptor _wperror$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wperror$FUNC() { return _wperror$FUNC_; }

    static final MethodHandle _wperror$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wperror",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        _wperror$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wperror$MH() { return _wperror$MH_; }

    static final FunctionDescriptor _wsplitpath$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wsplitpath$FUNC() { return _wsplitpath$FUNC_; }

    static final MethodHandle _wsplitpath$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wsplitpath",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        _wsplitpath$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wsplitpath$MH() { return _wsplitpath$MH_; }

    static final FunctionDescriptor _wsplitpath_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wsplitpath_s$FUNC() { return _wsplitpath_s$FUNC_; }

    static final MethodHandle _wsplitpath_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wsplitpath_s",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;J)I",
        _wsplitpath_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wsplitpath_s$MH() { return _wsplitpath_s$MH_; }

    static final FunctionDescriptor _wdupenv_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wdupenv_s$FUNC() { return _wdupenv_s$FUNC_; }

    static final MethodHandle _wdupenv_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wdupenv_s",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        _wdupenv_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wdupenv_s$MH() { return _wdupenv_s$MH_; }

    static final FunctionDescriptor _wgetenv$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wgetenv$FUNC() { return _wgetenv$FUNC_; }

    static final MethodHandle _wgetenv$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wgetenv",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        _wgetenv$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wgetenv$MH() { return _wgetenv$MH_; }

    static final FunctionDescriptor _wgetenv_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wgetenv_s$FUNC() { return _wgetenv_s$FUNC_; }

    static final MethodHandle _wgetenv_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wgetenv_s",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        _wgetenv_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wgetenv_s$MH() { return _wgetenv_s$MH_; }

    static final FunctionDescriptor _wputenv$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wputenv$FUNC() { return _wputenv$FUNC_; }

    static final MethodHandle _wputenv$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wputenv",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        _wputenv$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wputenv$MH() { return _wputenv$MH_; }

    static final FunctionDescriptor _wputenv_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wputenv_s$FUNC() { return _wputenv_s$FUNC_; }

    static final MethodHandle _wputenv_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wputenv_s",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        _wputenv_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wputenv_s$MH() { return _wputenv_s$MH_; }

    static final FunctionDescriptor _wsearchenv_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wsearchenv_s$FUNC() { return _wsearchenv_s$FUNC_; }

    static final MethodHandle _wsearchenv_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wsearchenv_s",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        _wsearchenv_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wsearchenv_s$MH() { return _wsearchenv_s$MH_; }

    static final FunctionDescriptor _wsearchenv$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wsearchenv$FUNC() { return _wsearchenv$FUNC_; }

    static final MethodHandle _wsearchenv$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wsearchenv",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        _wsearchenv$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wsearchenv$MH() { return _wsearchenv$MH_; }

    static final FunctionDescriptor _wsystem$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wsystem$FUNC() { return _wsystem$FUNC_; }

    static final MethodHandle _wsystem$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wsystem",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        _wsystem$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wsystem$MH() { return _wsystem$MH_; }

    static final FunctionDescriptor _swab$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _swab$FUNC() { return _swab$FUNC_; }

    static final MethodHandle _swab$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_swab",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)V",
        _swab$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _swab$MH() { return _swab$MH_; }

    static final FunctionDescriptor exit$FUNC_ = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor exit$FUNC() { return exit$FUNC_; }

    static final MethodHandle exit$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "exit",
        "(I)V",
        exit$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle exit$MH() { return exit$MH_; }

    static final FunctionDescriptor _exit$FUNC_ = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _exit$FUNC() { return _exit$FUNC_; }

    static final MethodHandle _exit$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_exit",
        "(I)V",
        _exit$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _exit$MH() { return _exit$MH_; }

    static final FunctionDescriptor _Exit$FUNC_ = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _Exit$FUNC() { return _Exit$FUNC_; }

    static final MethodHandle _Exit$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_Exit",
        "(I)V",
        _Exit$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _Exit$MH() { return _Exit$MH_; }

    static final FunctionDescriptor quick_exit$FUNC_ = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor quick_exit$FUNC() { return quick_exit$FUNC_; }

    static final MethodHandle quick_exit$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "quick_exit",
        "(I)V",
        quick_exit$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle quick_exit$MH() { return quick_exit$MH_; }

    static final FunctionDescriptor abort$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor abort$FUNC() { return abort$FUNC_; }

    static final MethodHandle abort$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "abort",
        "()V",
        abort$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle abort$MH() { return abort$MH_; }

    static final FunctionDescriptor _set_abort_behavior$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _set_abort_behavior$FUNC() { return _set_abort_behavior$FUNC_; }

    static final MethodHandle _set_abort_behavior$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_set_abort_behavior",
        "(II)I",
        _set_abort_behavior$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _set_abort_behavior$MH() { return _set_abort_behavior$MH_; }

    static final FunctionDescriptor atexit$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor atexit$FUNC() { return atexit$FUNC_; }

    static final MethodHandle atexit$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "atexit",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        atexit$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle atexit$MH() { return atexit$MH_; }

    static final FunctionDescriptor atexit$x0$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor atexit$x0$FUNC() { return atexit$x0$FUNC_; }

    static final FunctionDescriptor _onexit$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _onexit$FUNC() { return _onexit$FUNC_; }

    static final MethodHandle _onexit$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_onexit",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        _onexit$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _onexit$MH() { return _onexit$MH_; }

    static final FunctionDescriptor _onexit$_Func$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor _onexit$_Func$FUNC() { return _onexit$_Func$FUNC_; }

    static final FunctionDescriptor at_quick_exit$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor at_quick_exit$FUNC() { return at_quick_exit$FUNC_; }

    static final MethodHandle at_quick_exit$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "at_quick_exit",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        at_quick_exit$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle at_quick_exit$MH() { return at_quick_exit$MH_; }

    static final FunctionDescriptor at_quick_exit$x0$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor at_quick_exit$x0$FUNC() { return at_quick_exit$x0$FUNC_; }

    static final FunctionDescriptor _set_purecall_handler$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _set_purecall_handler$FUNC() { return _set_purecall_handler$FUNC_; }

    static final MethodHandle _set_purecall_handler$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_set_purecall_handler",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        _set_purecall_handler$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _set_purecall_handler$MH() { return _set_purecall_handler$MH_; }

    static final FunctionDescriptor _set_purecall_handler$_Handler$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor _set_purecall_handler$_Handler$FUNC() { return _set_purecall_handler$_Handler$FUNC_; }

    static final FunctionDescriptor _get_purecall_handler$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor _get_purecall_handler$FUNC() { return _get_purecall_handler$FUNC_; }

    static final MethodHandle _get_purecall_handler$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_get_purecall_handler",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        _get_purecall_handler$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _get_purecall_handler$MH() { return _get_purecall_handler$MH_; }

    static final FunctionDescriptor _set_invalid_parameter_handler$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _set_invalid_parameter_handler$FUNC() { return _set_invalid_parameter_handler$FUNC_; }

    static final MethodHandle _set_invalid_parameter_handler$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_set_invalid_parameter_handler",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        _set_invalid_parameter_handler$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _set_invalid_parameter_handler$MH() { return _set_invalid_parameter_handler$MH_; }

    static final FunctionDescriptor _set_invalid_parameter_handler$_Handler$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _set_invalid_parameter_handler$_Handler$FUNC() { return _set_invalid_parameter_handler$_Handler$FUNC_; }

    static final FunctionDescriptor _get_invalid_parameter_handler$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor _get_invalid_parameter_handler$FUNC() { return _get_invalid_parameter_handler$FUNC_; }

    static final MethodHandle _get_invalid_parameter_handler$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_get_invalid_parameter_handler",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        _get_invalid_parameter_handler$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _get_invalid_parameter_handler$MH() { return _get_invalid_parameter_handler$MH_; }

    static final FunctionDescriptor _set_thread_local_invalid_parameter_handler$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _set_thread_local_invalid_parameter_handler$FUNC() { return _set_thread_local_invalid_parameter_handler$FUNC_; }

    static final MethodHandle _set_thread_local_invalid_parameter_handler$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_set_thread_local_invalid_parameter_handler",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        _set_thread_local_invalid_parameter_handler$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _set_thread_local_invalid_parameter_handler$MH() { return _set_thread_local_invalid_parameter_handler$MH_; }

    static final FunctionDescriptor _set_thread_local_invalid_parameter_handler$_Handler$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _set_thread_local_invalid_parameter_handler$_Handler$FUNC() { return _set_thread_local_invalid_parameter_handler$_Handler$FUNC_; }

    static final FunctionDescriptor _get_thread_local_invalid_parameter_handler$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor _get_thread_local_invalid_parameter_handler$FUNC() { return _get_thread_local_invalid_parameter_handler$FUNC_; }

    static final MethodHandle _get_thread_local_invalid_parameter_handler$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_get_thread_local_invalid_parameter_handler",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        _get_thread_local_invalid_parameter_handler$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _get_thread_local_invalid_parameter_handler$MH() { return _get_thread_local_invalid_parameter_handler$MH_; }

    static final FunctionDescriptor _set_error_mode$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _set_error_mode$FUNC() { return _set_error_mode$FUNC_; }

    static final MethodHandle _set_error_mode$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_set_error_mode",
        "(I)I",
        _set_error_mode$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _set_error_mode$MH() { return _set_error_mode$MH_; }

    static final FunctionDescriptor __sys_errlist$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor __sys_errlist$FUNC() { return __sys_errlist$FUNC_; }

    static final MethodHandle __sys_errlist$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__sys_errlist",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        __sys_errlist$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __sys_errlist$MH() { return __sys_errlist$MH_; }

    static final FunctionDescriptor __sys_nerr$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor __sys_nerr$FUNC() { return __sys_nerr$FUNC_; }

    static final MethodHandle __sys_nerr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__sys_nerr",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        __sys_nerr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __sys_nerr$MH() { return __sys_nerr$MH_; }

    static final FunctionDescriptor perror$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor perror$FUNC() { return perror$FUNC_; }

    static final MethodHandle perror$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "perror",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        perror$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle perror$MH() { return perror$MH_; }

    static final FunctionDescriptor __p__pgmptr$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor __p__pgmptr$FUNC() { return __p__pgmptr$FUNC_; }

    static final MethodHandle __p__pgmptr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__p__pgmptr",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        __p__pgmptr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __p__pgmptr$MH() { return __p__pgmptr$MH_; }

    static final FunctionDescriptor __p__wpgmptr$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor __p__wpgmptr$FUNC() { return __p__wpgmptr$FUNC_; }

    static final MethodHandle __p__wpgmptr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__p__wpgmptr",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        __p__wpgmptr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __p__wpgmptr$MH() { return __p__wpgmptr$MH_; }

    static final FunctionDescriptor __p__fmode$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor __p__fmode$FUNC() { return __p__fmode$FUNC_; }

    static final MethodHandle __p__fmode$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__p__fmode",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        __p__fmode$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __p__fmode$MH() { return __p__fmode$MH_; }

    static final FunctionDescriptor _get_pgmptr$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _get_pgmptr$FUNC() { return _get_pgmptr$FUNC_; }

    static final MethodHandle _get_pgmptr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_get_pgmptr",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        _get_pgmptr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _get_pgmptr$MH() { return _get_pgmptr$MH_; }

    static final FunctionDescriptor _get_wpgmptr$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _get_wpgmptr$FUNC() { return _get_wpgmptr$FUNC_; }

    static final MethodHandle _get_wpgmptr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_get_wpgmptr",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        _get_wpgmptr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _get_wpgmptr$MH() { return _get_wpgmptr$MH_; }

    static final FunctionDescriptor _set_fmode$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _set_fmode$FUNC() { return _set_fmode$FUNC_; }

    static final MethodHandle _set_fmode$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_set_fmode",
        "(I)I",
        _set_fmode$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _set_fmode$MH() { return _set_fmode$MH_; }

    static final FunctionDescriptor _get_fmode$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _get_fmode$FUNC() { return _get_fmode$FUNC_; }

    static final MethodHandle _get_fmode$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_get_fmode",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        _get_fmode$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _get_fmode$MH() { return _get_fmode$MH_; }

    static final MemoryLayout _div_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("quot"),
        C_INT.withName("rem")
    ).withName("_div_t");
    static final jdk.incubator.foreign.MemoryLayout _div_t$struct$LAYOUT() { return _div_t$struct$LAYOUT_; }

    static final MemoryLayout _div_t$quot$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _div_t$quot$LAYOUT() { return _div_t$quot$LAYOUT_; }

    static final VarHandle _div_t$quot$VH_ = _div_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("quot"));
    static final java.lang.invoke.VarHandle _div_t$quot$VH() { return _div_t$quot$VH_; }

    static final MemoryLayout _div_t$rem$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _div_t$rem$LAYOUT() { return _div_t$rem$LAYOUT_; }

    static final VarHandle _div_t$rem$VH_ = _div_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("rem"));
    static final java.lang.invoke.VarHandle _div_t$rem$VH() { return _div_t$rem$VH_; }

    static final MemoryLayout _ldiv_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("quot"),
        C_LONG.withName("rem")
    ).withName("_ldiv_t");
    static final jdk.incubator.foreign.MemoryLayout _ldiv_t$struct$LAYOUT() { return _ldiv_t$struct$LAYOUT_; }

    static final MemoryLayout _ldiv_t$quot$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ldiv_t$quot$LAYOUT() { return _ldiv_t$quot$LAYOUT_; }

    static final VarHandle _ldiv_t$quot$VH_ = _ldiv_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("quot"));
    static final java.lang.invoke.VarHandle _ldiv_t$quot$VH() { return _ldiv_t$quot$VH_; }

    static final MemoryLayout _ldiv_t$rem$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ldiv_t$rem$LAYOUT() { return _ldiv_t$rem$LAYOUT_; }

    static final VarHandle _ldiv_t$rem$VH_ = _ldiv_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("rem"));
    static final java.lang.invoke.VarHandle _ldiv_t$rem$VH() { return _ldiv_t$rem$VH_; }

    static final MemoryLayout _lldiv_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("quot"),
        C_LONGLONG.withName("rem")
    ).withName("_lldiv_t");
    static final jdk.incubator.foreign.MemoryLayout _lldiv_t$struct$LAYOUT() { return _lldiv_t$struct$LAYOUT_; }

    static final MemoryLayout _lldiv_t$quot$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _lldiv_t$quot$LAYOUT() { return _lldiv_t$quot$LAYOUT_; }

    static final VarHandle _lldiv_t$quot$VH_ = _lldiv_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("quot"));
    static final java.lang.invoke.VarHandle _lldiv_t$quot$VH() { return _lldiv_t$quot$VH_; }

    static final MemoryLayout _lldiv_t$rem$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _lldiv_t$rem$LAYOUT() { return _lldiv_t$rem$LAYOUT_; }

    static final VarHandle _lldiv_t$rem$VH_ = _lldiv_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("rem"));
    static final java.lang.invoke.VarHandle _lldiv_t$rem$VH() { return _lldiv_t$rem$VH_; }

    static final FunctionDescriptor abs$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor abs$FUNC() { return abs$FUNC_; }

    static final MethodHandle abs$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "abs",
        "(I)I",
        abs$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle abs$MH() { return abs$MH_; }

    static final FunctionDescriptor labs$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor labs$FUNC() { return labs$FUNC_; }

    static final MethodHandle labs$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "labs",
        "(I)I",
        labs$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle labs$MH() { return labs$MH_; }

    static final FunctionDescriptor llabs$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor llabs$FUNC() { return llabs$FUNC_; }

    static final MethodHandle llabs$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "llabs",
        "(J)J",
        llabs$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle llabs$MH() { return llabs$MH_; }

    static final FunctionDescriptor _abs64$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _abs64$FUNC() { return _abs64$FUNC_; }

    static final MethodHandle _abs64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_abs64",
        "(J)J",
        _abs64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _abs64$MH() { return _abs64$MH_; }

    static final FunctionDescriptor _byteswap_ushort$FUNC_ = FunctionDescriptor.of(C_SHORT,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _byteswap_ushort$FUNC() { return _byteswap_ushort$FUNC_; }

    static final MethodHandle _byteswap_ushort$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_byteswap_ushort",
        "(S)S",
        _byteswap_ushort$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _byteswap_ushort$MH() { return _byteswap_ushort$MH_; }

    static final FunctionDescriptor _byteswap_ulong$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _byteswap_ulong$FUNC() { return _byteswap_ulong$FUNC_; }

    static final MethodHandle _byteswap_ulong$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_byteswap_ulong",
        "(I)I",
        _byteswap_ulong$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _byteswap_ulong$MH() { return _byteswap_ulong$MH_; }

    static final FunctionDescriptor _byteswap_uint64$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _byteswap_uint64$FUNC() { return _byteswap_uint64$FUNC_; }

    static final MethodHandle _byteswap_uint64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_byteswap_uint64",
        "(J)J",
        _byteswap_uint64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _byteswap_uint64$MH() { return _byteswap_uint64$MH_; }

    static final FunctionDescriptor div$FUNC_ = FunctionDescriptor.of(MemoryLayout.ofStruct(
        C_INT.withName("quot"),
        C_INT.withName("rem")
    ).withName("_div_t"),
        C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor div$FUNC() { return div$FUNC_; }

    static final MethodHandle div$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "div",
        "(II)Ljdk/incubator/foreign/MemorySegment;",
        div$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle div$MH() { return div$MH_; }

    static final FunctionDescriptor ldiv$FUNC_ = FunctionDescriptor.of(MemoryLayout.ofStruct(
        C_LONG.withName("quot"),
        C_LONG.withName("rem")
    ).withName("_ldiv_t"),
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor ldiv$FUNC() { return ldiv$FUNC_; }

    static final MethodHandle ldiv$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ldiv",
        "(II)Ljdk/incubator/foreign/MemorySegment;",
        ldiv$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ldiv$MH() { return ldiv$MH_; }

    static final FunctionDescriptor lldiv$FUNC_ = FunctionDescriptor.of(MemoryLayout.ofStruct(
        C_LONGLONG.withName("quot"),
        C_LONGLONG.withName("rem")
    ).withName("_lldiv_t"),
        C_LONGLONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor lldiv$FUNC() { return lldiv$FUNC_; }

    static final MethodHandle lldiv$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "lldiv",
        "(JJ)Ljdk/incubator/foreign/MemorySegment;",
        lldiv$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle lldiv$MH() { return lldiv$MH_; }

    static final FunctionDescriptor _lrotl$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _lrotl$FUNC() { return _lrotl$FUNC_; }

    static final MethodHandle _lrotl$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_lrotl",
        "(II)I",
        _lrotl$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _lrotl$MH() { return _lrotl$MH_; }

    static final FunctionDescriptor _lrotr$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _lrotr$FUNC() { return _lrotr$FUNC_; }

    static final MethodHandle _lrotr$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_lrotr",
        "(II)I",
        _lrotr$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _lrotr$MH() { return _lrotr$MH_; }

    static final FunctionDescriptor srand$FUNC_ = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor srand$FUNC() { return srand$FUNC_; }

    static final MethodHandle srand$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "srand",
        "(I)V",
        srand$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle srand$MH() { return srand$MH_; }

    static final FunctionDescriptor rand$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor rand$FUNC() { return rand$FUNC_; }

    static final MethodHandle rand$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "rand",
        "()I",
        rand$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle rand$MH() { return rand$MH_; }

    static final MemoryLayout _LDOUBLE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(10, C_CHAR).withName("ld")
    );
    static final jdk.incubator.foreign.MemoryLayout _LDOUBLE$struct$LAYOUT() { return _LDOUBLE$struct$LAYOUT_; }

    static final MemoryLayout _CRT_DOUBLE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_DOUBLE.withName("x")
    );
    static final jdk.incubator.foreign.MemoryLayout _CRT_DOUBLE$struct$LAYOUT() { return _CRT_DOUBLE$struct$LAYOUT_; }

    static final MemoryLayout _CRT_DOUBLE$x$LAYOUT_ = C_DOUBLE;
    static final jdk.incubator.foreign.MemoryLayout _CRT_DOUBLE$x$LAYOUT() { return _CRT_DOUBLE$x$LAYOUT_; }

    static final VarHandle _CRT_DOUBLE$x$VH_ = _CRT_DOUBLE$struct$LAYOUT_.varHandle(double.class, MemoryLayout.PathElement.groupElement("x"));
    static final java.lang.invoke.VarHandle _CRT_DOUBLE$x$VH() { return _CRT_DOUBLE$x$VH_; }

    static final MemoryLayout _CRT_FLOAT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_FLOAT.withName("f")
    );
    static final jdk.incubator.foreign.MemoryLayout _CRT_FLOAT$struct$LAYOUT() { return _CRT_FLOAT$struct$LAYOUT_; }

    static final MemoryLayout _CRT_FLOAT$f$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout _CRT_FLOAT$f$LAYOUT() { return _CRT_FLOAT$f$LAYOUT_; }

    static final VarHandle _CRT_FLOAT$f$VH_ = _CRT_FLOAT$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("f"));
    static final java.lang.invoke.VarHandle _CRT_FLOAT$f$VH() { return _CRT_FLOAT$f$VH_; }

    static final MemoryLayout _LONGDOUBLE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGDOUBLE.withName("x")
    );
    static final jdk.incubator.foreign.MemoryLayout _LONGDOUBLE$struct$LAYOUT() { return _LONGDOUBLE$struct$LAYOUT_; }

    static final MemoryLayout _LONGDOUBLE$x$LAYOUT_ = C_LONGDOUBLE;
    static final jdk.incubator.foreign.MemoryLayout _LONGDOUBLE$x$LAYOUT() { return _LONGDOUBLE$x$LAYOUT_; }

    static final VarHandle _LONGDOUBLE$x$VH_ = _LONGDOUBLE$struct$LAYOUT_.varHandle(double.class, MemoryLayout.PathElement.groupElement("x"));
    static final java.lang.invoke.VarHandle _LONGDOUBLE$x$VH() { return _LONGDOUBLE$x$VH_; }

    static final MemoryLayout _LDBL12$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(12, C_CHAR).withName("ld12")
    );
    static final jdk.incubator.foreign.MemoryLayout _LDBL12$struct$LAYOUT() { return _LDBL12$struct$LAYOUT_; }

    static final FunctionDescriptor atof$FUNC_ = FunctionDescriptor.of(C_DOUBLE,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor atof$FUNC() { return atof$FUNC_; }

    static final MethodHandle atof$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "atof",
        "(Ljdk/incubator/foreign/MemoryAddress;)D",
        atof$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle atof$MH() { return atof$MH_; }

    static final FunctionDescriptor atoi$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor atoi$FUNC() { return atoi$FUNC_; }

    static final MethodHandle atoi$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "atoi",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        atoi$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle atoi$MH() { return atoi$MH_; }

    static final FunctionDescriptor atol$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor atol$FUNC() { return atol$FUNC_; }

    static final MethodHandle atol$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "atol",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        atol$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle atol$MH() { return atol$MH_; }

    static final FunctionDescriptor atoll$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor atoll$FUNC() { return atoll$FUNC_; }

    static final MethodHandle atoll$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "atoll",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        atoll$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle atoll$MH() { return atoll$MH_; }

    static final FunctionDescriptor _atoi64$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _atoi64$FUNC() { return _atoi64$FUNC_; }

    static final MethodHandle _atoi64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_atoi64",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        _atoi64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _atoi64$MH() { return _atoi64$MH_; }

    static final FunctionDescriptor _atof_l$FUNC_ = FunctionDescriptor.of(C_DOUBLE,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _atof_l$FUNC() { return _atof_l$FUNC_; }

    static final MethodHandle _atof_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_atof_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)D",
        _atof_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _atof_l$MH() { return _atof_l$MH_; }

    static final FunctionDescriptor _atoi_l$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _atoi_l$FUNC() { return _atoi_l$FUNC_; }

    static final MethodHandle _atoi_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_atoi_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        _atoi_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _atoi_l$MH() { return _atoi_l$MH_; }

    static final FunctionDescriptor _atol_l$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _atol_l$FUNC() { return _atol_l$FUNC_; }

    static final MethodHandle _atol_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_atol_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        _atol_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _atol_l$MH() { return _atol_l$MH_; }

    static final FunctionDescriptor _atoll_l$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _atoll_l$FUNC() { return _atoll_l$FUNC_; }

    static final MethodHandle _atoll_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_atoll_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)J",
        _atoll_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _atoll_l$MH() { return _atoll_l$MH_; }

    static final FunctionDescriptor _atoi64_l$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _atoi64_l$FUNC() { return _atoi64_l$FUNC_; }

    static final MethodHandle _atoi64_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_atoi64_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)J",
        _atoi64_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _atoi64_l$MH() { return _atoi64_l$MH_; }

    static final FunctionDescriptor _atoflt$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _atoflt$FUNC() { return _atoflt$FUNC_; }

    static final MethodHandle _atoflt$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_atoflt",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        _atoflt$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _atoflt$MH() { return _atoflt$MH_; }

    static final FunctionDescriptor _atodbl$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _atodbl$FUNC() { return _atodbl$FUNC_; }

    static final MethodHandle _atodbl$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_atodbl",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        _atodbl$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _atodbl$MH() { return _atodbl$MH_; }

    static final FunctionDescriptor _atoldbl$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _atoldbl$FUNC() { return _atoldbl$FUNC_; }

    static final MethodHandle _atoldbl$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_atoldbl",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        _atoldbl$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _atoldbl$MH() { return _atoldbl$MH_; }

    static final FunctionDescriptor _atoflt_l$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _atoflt_l$FUNC() { return _atoflt_l$FUNC_; }

    static final MethodHandle _atoflt_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_atoflt_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        _atoflt_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _atoflt_l$MH() { return _atoflt_l$MH_; }

    static final FunctionDescriptor _atodbl_l$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _atodbl_l$FUNC() { return _atodbl_l$FUNC_; }

    static final MethodHandle _atodbl_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_atodbl_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        _atodbl_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _atodbl_l$MH() { return _atodbl_l$MH_; }

    static final FunctionDescriptor _atoldbl_l$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _atoldbl_l$FUNC() { return _atoldbl_l$FUNC_; }

    static final MethodHandle _atoldbl_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_atoldbl_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        _atoldbl_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _atoldbl_l$MH() { return _atoldbl_l$MH_; }

    static final FunctionDescriptor strtof$FUNC_ = FunctionDescriptor.of(C_FLOAT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor strtof$FUNC() { return strtof$FUNC_; }

    static final MethodHandle strtof$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "strtof",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)F",
        strtof$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle strtof$MH() { return strtof$MH_; }

    static final FunctionDescriptor _strtof_l$FUNC_ = FunctionDescriptor.of(C_FLOAT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _strtof_l$FUNC() { return _strtof_l$FUNC_; }

    static final MethodHandle _strtof_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_strtof_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)F",
        _strtof_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _strtof_l$MH() { return _strtof_l$MH_; }

    static final FunctionDescriptor strtod$FUNC_ = FunctionDescriptor.of(C_DOUBLE,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor strtod$FUNC() { return strtod$FUNC_; }

    static final MethodHandle strtod$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "strtod",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)D",
        strtod$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle strtod$MH() { return strtod$MH_; }

    static final FunctionDescriptor _strtod_l$FUNC_ = FunctionDescriptor.of(C_DOUBLE,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _strtod_l$FUNC() { return _strtod_l$FUNC_; }

    static final MethodHandle _strtod_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_strtod_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)D",
        _strtod_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _strtod_l$MH() { return _strtod_l$MH_; }

    static final FunctionDescriptor strtold$FUNC_ = FunctionDescriptor.of(C_LONGDOUBLE,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor strtold$FUNC() { return strtold$FUNC_; }

    static final MethodHandle strtold$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "strtold",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)D",
        strtold$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle strtold$MH() { return strtold$MH_; }

    static final FunctionDescriptor _strtold_l$FUNC_ = FunctionDescriptor.of(C_LONGDOUBLE,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _strtold_l$FUNC() { return _strtold_l$FUNC_; }

    static final MethodHandle _strtold_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_strtold_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)D",
        _strtold_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _strtold_l$MH() { return _strtold_l$MH_; }

    static final FunctionDescriptor strtol$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor strtol$FUNC() { return strtol$FUNC_; }

    static final MethodHandle strtol$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "strtol",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        strtol$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle strtol$MH() { return strtol$MH_; }

    static final FunctionDescriptor _strtol_l$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _strtol_l$FUNC() { return _strtol_l$FUNC_; }

    static final MethodHandle _strtol_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_strtol_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        _strtol_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _strtol_l$MH() { return _strtol_l$MH_; }

    static final FunctionDescriptor strtoll$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor strtoll$FUNC() { return strtoll$FUNC_; }

    static final MethodHandle strtoll$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "strtoll",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)J",
        strtoll$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle strtoll$MH() { return strtoll$MH_; }

    static final FunctionDescriptor _strtoll_l$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _strtoll_l$FUNC() { return _strtoll_l$FUNC_; }

    static final MethodHandle _strtoll_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_strtoll_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)J",
        _strtoll_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _strtoll_l$MH() { return _strtoll_l$MH_; }

    static final FunctionDescriptor strtoul$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor strtoul$FUNC() { return strtoul$FUNC_; }

    static final MethodHandle strtoul$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "strtoul",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        strtoul$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle strtoul$MH() { return strtoul$MH_; }

    static final FunctionDescriptor _strtoul_l$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _strtoul_l$FUNC() { return _strtoul_l$FUNC_; }

    static final MethodHandle _strtoul_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_strtoul_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        _strtoul_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _strtoul_l$MH() { return _strtoul_l$MH_; }

    static final FunctionDescriptor strtoull$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor strtoull$FUNC() { return strtoull$FUNC_; }

    static final MethodHandle strtoull$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "strtoull",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)J",
        strtoull$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle strtoull$MH() { return strtoull$MH_; }

    static final FunctionDescriptor _strtoull_l$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _strtoull_l$FUNC() { return _strtoull_l$FUNC_; }

    static final MethodHandle _strtoull_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_strtoull_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)J",
        _strtoull_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _strtoull_l$MH() { return _strtoull_l$MH_; }

    static final FunctionDescriptor _strtoi64$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _strtoi64$FUNC() { return _strtoi64$FUNC_; }

    static final MethodHandle _strtoi64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_strtoi64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)J",
        _strtoi64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _strtoi64$MH() { return _strtoi64$MH_; }

    static final FunctionDescriptor _strtoi64_l$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _strtoi64_l$FUNC() { return _strtoi64_l$FUNC_; }

    static final MethodHandle _strtoi64_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_strtoi64_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)J",
        _strtoi64_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _strtoi64_l$MH() { return _strtoi64_l$MH_; }

    static final FunctionDescriptor _strtoui64$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _strtoui64$FUNC() { return _strtoui64$FUNC_; }

    static final MethodHandle _strtoui64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_strtoui64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)J",
        _strtoui64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _strtoui64$MH() { return _strtoui64$MH_; }

    static final FunctionDescriptor _strtoui64_l$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _strtoui64_l$FUNC() { return _strtoui64_l$FUNC_; }

    static final MethodHandle _strtoui64_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_strtoui64_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)J",
        _strtoui64_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _strtoui64_l$MH() { return _strtoui64_l$MH_; }

    static final FunctionDescriptor _itoa_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_LONGLONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _itoa_s$FUNC() { return _itoa_s$FUNC_; }

    static final MethodHandle _itoa_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_itoa_s",
        "(ILjdk/incubator/foreign/MemoryAddress;JI)I",
        _itoa_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _itoa_s$MH() { return _itoa_s$MH_; }

    static final FunctionDescriptor _itoa$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _itoa$FUNC() { return _itoa$FUNC_; }

    static final MethodHandle _itoa$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_itoa",
        "(ILjdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        _itoa$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _itoa$MH() { return _itoa$MH_; }

    static final FunctionDescriptor _ltoa_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_LONGLONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _ltoa_s$FUNC() { return _ltoa_s$FUNC_; }

    static final MethodHandle _ltoa_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_ltoa_s",
        "(ILjdk/incubator/foreign/MemoryAddress;JI)I",
        _ltoa_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _ltoa_s$MH() { return _ltoa_s$MH_; }

    static final FunctionDescriptor _ltoa$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _ltoa$FUNC() { return _ltoa$FUNC_; }

    static final MethodHandle _ltoa$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_ltoa",
        "(ILjdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        _ltoa$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _ltoa$MH() { return _ltoa$MH_; }

    static final FunctionDescriptor _ultoa_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_LONGLONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _ultoa_s$FUNC() { return _ultoa_s$FUNC_; }

    static final MethodHandle _ultoa_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_ultoa_s",
        "(ILjdk/incubator/foreign/MemoryAddress;JI)I",
        _ultoa_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _ultoa_s$MH() { return _ultoa_s$MH_; }

    static final FunctionDescriptor _ultoa$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _ultoa$FUNC() { return _ultoa$FUNC_; }

    static final MethodHandle _ultoa$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_ultoa",
        "(ILjdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        _ultoa$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _ultoa$MH() { return _ultoa$MH_; }

    static final FunctionDescriptor _i64toa_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_LONGLONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _i64toa_s$FUNC() { return _i64toa_s$FUNC_; }

    static final MethodHandle _i64toa_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_i64toa_s",
        "(JLjdk/incubator/foreign/MemoryAddress;JI)I",
        _i64toa_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _i64toa_s$MH() { return _i64toa_s$MH_; }

    static final FunctionDescriptor _i64toa$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _i64toa$FUNC() { return _i64toa$FUNC_; }

    static final MethodHandle _i64toa$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_i64toa",
        "(JLjdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        _i64toa$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _i64toa$MH() { return _i64toa$MH_; }

    static final FunctionDescriptor _ui64toa_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONGLONG,
        C_POINTER,
        C_LONGLONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _ui64toa_s$FUNC() { return _ui64toa_s$FUNC_; }

    static final MethodHandle _ui64toa_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_ui64toa_s",
        "(JLjdk/incubator/foreign/MemoryAddress;JI)I",
        _ui64toa_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _ui64toa_s$MH() { return _ui64toa_s$MH_; }

    static final FunctionDescriptor _ui64toa$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _ui64toa$FUNC() { return _ui64toa$FUNC_; }

    static final MethodHandle _ui64toa$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_ui64toa",
        "(JLjdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        _ui64toa$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _ui64toa$MH() { return _ui64toa$MH_; }

    static final FunctionDescriptor _ecvt_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONGLONG,
        C_DOUBLE,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _ecvt_s$FUNC() { return _ecvt_s$FUNC_; }

    static final MethodHandle _ecvt_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_ecvt_s",
        "(Ljdk/incubator/foreign/MemoryAddress;JDILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        _ecvt_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _ecvt_s$MH() { return _ecvt_s$MH_; }

    static final FunctionDescriptor _ecvt$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_DOUBLE,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _ecvt$FUNC() { return _ecvt$FUNC_; }

    static final MethodHandle _ecvt$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_ecvt",
        "(DILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        _ecvt$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _ecvt$MH() { return _ecvt$MH_; }

    static final FunctionDescriptor _fcvt_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONGLONG,
        C_DOUBLE,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _fcvt_s$FUNC() { return _fcvt_s$FUNC_; }

    static final MethodHandle _fcvt_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_fcvt_s",
        "(Ljdk/incubator/foreign/MemoryAddress;JDILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        _fcvt_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _fcvt_s$MH() { return _fcvt_s$MH_; }

    static final FunctionDescriptor _fcvt$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_DOUBLE,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _fcvt$FUNC() { return _fcvt$FUNC_; }

    static final MethodHandle _fcvt$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_fcvt",
        "(DILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        _fcvt$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _fcvt$MH() { return _fcvt$MH_; }

    static final FunctionDescriptor _gcvt_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONGLONG,
        C_DOUBLE,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _gcvt_s$FUNC() { return _gcvt_s$FUNC_; }

    static final MethodHandle _gcvt_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_gcvt_s",
        "(Ljdk/incubator/foreign/MemoryAddress;JDI)I",
        _gcvt_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _gcvt_s$MH() { return _gcvt_s$MH_; }

    static final FunctionDescriptor _gcvt$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_DOUBLE,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _gcvt$FUNC() { return _gcvt$FUNC_; }

    static final MethodHandle _gcvt$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_gcvt",
        "(DILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        _gcvt$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _gcvt$MH() { return _gcvt$MH_; }

    static final FunctionDescriptor mblen$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor mblen$FUNC() { return mblen$FUNC_; }

    static final MethodHandle mblen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "mblen",
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        mblen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle mblen$MH() { return mblen$MH_; }

    static final FunctionDescriptor _mblen_l$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _mblen_l$FUNC() { return _mblen_l$FUNC_; }

    static final MethodHandle _mblen_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_mblen_l",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        _mblen_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _mblen_l$MH() { return _mblen_l$MH_; }

    static final FunctionDescriptor _mbstrlen$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _mbstrlen$FUNC() { return _mbstrlen$FUNC_; }

    static final MethodHandle _mbstrlen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_mbstrlen",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        _mbstrlen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _mbstrlen$MH() { return _mbstrlen$MH_; }

    static final FunctionDescriptor _mbstrlen_l$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _mbstrlen_l$FUNC() { return _mbstrlen_l$FUNC_; }

    static final MethodHandle _mbstrlen_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_mbstrlen_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)J",
        _mbstrlen_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _mbstrlen_l$MH() { return _mbstrlen_l$MH_; }

    static final FunctionDescriptor _mbstrnlen$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _mbstrnlen$FUNC() { return _mbstrnlen$FUNC_; }

    static final MethodHandle _mbstrnlen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_mbstrnlen",
        "(Ljdk/incubator/foreign/MemoryAddress;J)J",
        _mbstrnlen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _mbstrnlen$MH() { return _mbstrnlen$MH_; }

    static final FunctionDescriptor _mbstrnlen_l$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _mbstrnlen_l$FUNC() { return _mbstrnlen_l$FUNC_; }

    static final MethodHandle _mbstrnlen_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_mbstrnlen_l",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)J",
        _mbstrnlen_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _mbstrnlen_l$MH() { return _mbstrnlen_l$MH_; }

    static final FunctionDescriptor mbtowc$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor mbtowc$FUNC() { return mbtowc$FUNC_; }

    static final MethodHandle mbtowc$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "mbtowc",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        mbtowc$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle mbtowc$MH() { return mbtowc$MH_; }

    static final FunctionDescriptor _mbtowc_l$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _mbtowc_l$FUNC() { return _mbtowc_l$FUNC_; }

    static final MethodHandle _mbtowc_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_mbtowc_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        _mbtowc_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _mbtowc_l$MH() { return _mbtowc_l$MH_; }

    static final FunctionDescriptor mbstowcs_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor mbstowcs_s$FUNC() { return mbstowcs_s$FUNC_; }

    static final MethodHandle mbstowcs_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "mbstowcs_s",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;J)I",
        mbstowcs_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle mbstowcs_s$MH() { return mbstowcs_s$MH_; }

    static final FunctionDescriptor mbstowcs$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor mbstowcs$FUNC() { return mbstowcs$FUNC_; }

    static final MethodHandle mbstowcs$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "mbstowcs",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)J",
        mbstowcs$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle mbstowcs$MH() { return mbstowcs$MH_; }

    static final FunctionDescriptor _mbstowcs_s_l$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _mbstowcs_s_l$FUNC() { return _mbstowcs_s_l$FUNC_; }

    static final MethodHandle _mbstowcs_s_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_mbstowcs_s_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        _mbstowcs_s_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _mbstowcs_s_l$MH() { return _mbstowcs_s_l$MH_; }

    static final FunctionDescriptor _mbstowcs_l$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _mbstowcs_l$FUNC() { return _mbstowcs_l$FUNC_; }

    static final MethodHandle _mbstowcs_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_mbstowcs_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)J",
        _mbstowcs_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _mbstowcs_l$MH() { return _mbstowcs_l$MH_; }

    static final FunctionDescriptor wctomb$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor wctomb$FUNC() { return wctomb$FUNC_; }

    static final MethodHandle wctomb$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wctomb",
        "(Ljdk/incubator/foreign/MemoryAddress;S)I",
        wctomb$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle wctomb$MH() { return wctomb$MH_; }

    static final FunctionDescriptor _wctomb_l$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wctomb_l$FUNC() { return _wctomb_l$FUNC_; }

    static final MethodHandle _wctomb_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wctomb_l",
        "(Ljdk/incubator/foreign/MemoryAddress;SLjdk/incubator/foreign/MemoryAddress;)I",
        _wctomb_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wctomb_l$MH() { return _wctomb_l$MH_; }

    static final FunctionDescriptor wctomb_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor wctomb_s$FUNC() { return wctomb_s$FUNC_; }

    static final MethodHandle wctomb_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wctomb_s",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JS)I",
        wctomb_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle wctomb_s$MH() { return wctomb_s$MH_; }

    static final FunctionDescriptor _wctomb_s_l$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wctomb_s_l$FUNC() { return _wctomb_s_l$FUNC_; }

    static final MethodHandle _wctomb_s_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wctomb_s_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JSLjdk/incubator/foreign/MemoryAddress;)I",
        _wctomb_s_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wctomb_s_l$MH() { return _wctomb_s_l$MH_; }

    static final FunctionDescriptor wcstombs_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor wcstombs_s$FUNC() { return wcstombs_s$FUNC_; }

    static final MethodHandle wcstombs_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wcstombs_s",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;J)I",
        wcstombs_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle wcstombs_s$MH() { return wcstombs_s$MH_; }

    static final FunctionDescriptor wcstombs$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor wcstombs$FUNC() { return wcstombs$FUNC_; }

    static final MethodHandle wcstombs$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "wcstombs",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)J",
        wcstombs$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle wcstombs$MH() { return wcstombs$MH_; }

    static final FunctionDescriptor _wcstombs_s_l$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wcstombs_s_l$FUNC() { return _wcstombs_s_l$FUNC_; }

    static final MethodHandle _wcstombs_s_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wcstombs_s_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        _wcstombs_s_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wcstombs_s_l$MH() { return _wcstombs_s_l$MH_; }

    static final FunctionDescriptor _wcstombs_l$FUNC_ = FunctionDescriptor.of(C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _wcstombs_l$FUNC() { return _wcstombs_l$FUNC_; }

    static final MethodHandle _wcstombs_l$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_wcstombs_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)J",
        _wcstombs_l$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _wcstombs_l$MH() { return _wcstombs_l$MH_; }

    static final FunctionDescriptor _fullpath$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _fullpath$FUNC() { return _fullpath$FUNC_; }

    static final MethodHandle _fullpath$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_fullpath",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
        _fullpath$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _fullpath$MH() { return _fullpath$MH_; }

    static final FunctionDescriptor _makepath_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _makepath_s$FUNC() { return _makepath_s$FUNC_; }

    static final MethodHandle _makepath_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_makepath_s",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        _makepath_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _makepath_s$MH() { return _makepath_s$MH_; }

    static final FunctionDescriptor _makepath$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _makepath$FUNC() { return _makepath$FUNC_; }

    static final MethodHandle _makepath$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_makepath",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        _makepath$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _makepath$MH() { return _makepath$MH_; }

    static final FunctionDescriptor _splitpath$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _splitpath$FUNC() { return _splitpath$FUNC_; }

    static final MethodHandle _splitpath$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_splitpath",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        _splitpath$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _splitpath$MH() { return _splitpath$MH_; }

    static final FunctionDescriptor _splitpath_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_LONGLONG,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _splitpath_s$FUNC() { return _splitpath_s$FUNC_; }

    static final MethodHandle _splitpath_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_splitpath_s",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;J)I",
        _splitpath_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _splitpath_s$MH() { return _splitpath_s$MH_; }

    static final FunctionDescriptor getenv_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor getenv_s$FUNC() { return getenv_s$FUNC_; }

    static final MethodHandle getenv_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "getenv_s",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        getenv_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle getenv_s$MH() { return getenv_s$MH_; }

    static final FunctionDescriptor __p___argc$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor __p___argc$FUNC() { return __p___argc$FUNC_; }

    static final MethodHandle __p___argc$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__p___argc",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        __p___argc$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __p___argc$MH() { return __p___argc$MH_; }

    static final FunctionDescriptor __p___argv$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor __p___argv$FUNC() { return __p___argv$FUNC_; }

    static final MethodHandle __p___argv$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__p___argv",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        __p___argv$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __p___argv$MH() { return __p___argv$MH_; }

    static final FunctionDescriptor __p___wargv$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor __p___wargv$FUNC() { return __p___wargv$FUNC_; }

    static final MethodHandle __p___wargv$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__p___wargv",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        __p___wargv$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __p___wargv$MH() { return __p___wargv$MH_; }

    static final FunctionDescriptor __p__environ$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor __p__environ$FUNC() { return __p__environ$FUNC_; }

    static final MethodHandle __p__environ$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__p__environ",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        __p__environ$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __p__environ$MH() { return __p__environ$MH_; }

    static final FunctionDescriptor __p__wenviron$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor __p__wenviron$FUNC() { return __p__wenviron$FUNC_; }

    static final MethodHandle __p__wenviron$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__p__wenviron",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        __p__wenviron$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __p__wenviron$MH() { return __p__wenviron$MH_; }

    static final FunctionDescriptor getenv$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor getenv$FUNC() { return getenv$FUNC_; }

    static final MethodHandle getenv$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "getenv",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        getenv$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle getenv$MH() { return getenv$MH_; }

    static final FunctionDescriptor _dupenv_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _dupenv_s$FUNC() { return _dupenv_s$FUNC_; }

    static final MethodHandle _dupenv_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_dupenv_s",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        _dupenv_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _dupenv_s$MH() { return _dupenv_s$MH_; }

    static final FunctionDescriptor system$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor system$FUNC() { return system$FUNC_; }

    static final MethodHandle system$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "system",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        system$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle system$MH() { return system$MH_; }

    static final FunctionDescriptor _putenv$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _putenv$FUNC() { return _putenv$FUNC_; }

    static final MethodHandle _putenv$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_putenv",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        _putenv$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _putenv$MH() { return _putenv$MH_; }

    static final FunctionDescriptor _putenv_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _putenv_s$FUNC() { return _putenv_s$FUNC_; }

    static final MethodHandle _putenv_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_putenv_s",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        _putenv_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _putenv_s$MH() { return _putenv_s$MH_; }

    static final FunctionDescriptor _searchenv_s$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _searchenv_s$FUNC() { return _searchenv_s$FUNC_; }

    static final MethodHandle _searchenv_s$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_searchenv_s",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        _searchenv_s$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _searchenv_s$MH() { return _searchenv_s$MH_; }

    static final FunctionDescriptor _searchenv$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor _searchenv$FUNC() { return _searchenv$FUNC_; }

    static final MethodHandle _searchenv$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_searchenv",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        _searchenv$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _searchenv$MH() { return _searchenv$MH_; }

    static final FunctionDescriptor _seterrormode$FUNC_ = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _seterrormode$FUNC() { return _seterrormode$FUNC_; }

    static final MethodHandle _seterrormode$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_seterrormode",
        "(I)V",
        _seterrormode$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _seterrormode$MH() { return _seterrormode$MH_; }

    static final FunctionDescriptor _beep$FUNC_ = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor _beep$FUNC() { return _beep$FUNC_; }

    static final MethodHandle _beep$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_beep",
        "(II)V",
        _beep$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _beep$MH() { return _beep$MH_; }

    static final FunctionDescriptor _sleep$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor _sleep$FUNC() { return _sleep$FUNC_; }

    static final MethodHandle _sleep$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "_sleep",
        "(I)V",
        _sleep$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle _sleep$MH() { return _sleep$MH_; }

    static final FunctionDescriptor ecvt$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_DOUBLE,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ecvt$FUNC() { return ecvt$FUNC_; }

    static final MethodHandle ecvt$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ecvt",
        "(DILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        ecvt$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ecvt$MH() { return ecvt$MH_; }

    static final FunctionDescriptor fcvt$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_DOUBLE,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor fcvt$FUNC() { return fcvt$FUNC_; }

    static final MethodHandle fcvt$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "fcvt",
        "(DILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        fcvt$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle fcvt$MH() { return fcvt$MH_; }

    static final FunctionDescriptor gcvt$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_DOUBLE,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor gcvt$FUNC() { return gcvt$FUNC_; }

    static final MethodHandle gcvt$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "gcvt",
        "(DILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        gcvt$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle gcvt$MH() { return gcvt$MH_; }

    static final FunctionDescriptor itoa$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor itoa$FUNC() { return itoa$FUNC_; }

    static final MethodHandle itoa$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "itoa",
        "(ILjdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        itoa$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle itoa$MH() { return itoa$MH_; }

    static final FunctionDescriptor ltoa$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor ltoa$FUNC() { return ltoa$FUNC_; }

    static final MethodHandle ltoa$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ltoa",
        "(ILjdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        ltoa$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ltoa$MH() { return ltoa$MH_; }

    static final FunctionDescriptor swab$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor swab$FUNC() { return swab$FUNC_; }

    static final MethodHandle swab$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "swab",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)V",
        swab$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle swab$MH() { return swab$MH_; }

    static final FunctionDescriptor ultoa$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor ultoa$FUNC() { return ultoa$FUNC_; }

    static final MethodHandle ultoa$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ultoa",
        "(ILjdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        ultoa$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ultoa$MH() { return ultoa$MH_; }

    static final FunctionDescriptor putenv$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor putenv$FUNC() { return putenv$FUNC_; }

    static final MethodHandle putenv$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "putenv",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        putenv$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle putenv$MH() { return putenv$MH_; }

    static final FunctionDescriptor onexit$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor onexit$FUNC() { return onexit$FUNC_; }

    static final MethodHandle onexit$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "onexit",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        onexit$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle onexit$MH() { return onexit$MH_; }

    static final FunctionDescriptor onexit$_Func$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor onexit$_Func$FUNC() { return onexit$_Func$FUNC_; }

    static final int REGCLS_SINGLEUSE() { return (int)0L; }

    static final int REGCLS_MULTIPLEUSE() { return (int)1L; }

    static final int REGCLS_MULTI_SEPARATE() { return (int)2L; }

    static final int REGCLS_SUSPENDED() { return (int)4L; }

    static final int REGCLS_SURROGATE() { return (int)8L; }

    static final int REGCLS_AGILE() { return (int)16L; }

    static final int COINITBASE_MULTITHREADED() { return (int)0L; }

    static final MemoryLayout __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$VH() { return __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec", __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$VH() { return __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec", __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IUnknown$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IUnknown$LAYOUT() { return IID_IUnknown$LAYOUT_; }

    static final MemorySegment IID_IUnknown$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IUnknown", IID_IUnknown$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IUnknown$SEGMENT() { return IID_IUnknown$SEGMENT_; }

    static final MemoryLayout IUnknownVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release")
    ).withName("IUnknownVtbl");
    static final jdk.incubator.foreign.MemoryLayout IUnknownVtbl$struct$LAYOUT() { return IUnknownVtbl$struct$LAYOUT_; }

    static final MemoryLayout IUnknownVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUnknownVtbl$QueryInterface$LAYOUT() { return IUnknownVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IUnknownVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IUnknownVtbl$QueryInterface$VH() { return IUnknownVtbl$QueryInterface$VH_; }

    static final MemoryLayout IUnknownVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUnknownVtbl$AddRef$LAYOUT() { return IUnknownVtbl$AddRef$LAYOUT_; }

    static final VarHandle IUnknownVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IUnknownVtbl$AddRef$VH() { return IUnknownVtbl$AddRef$VH_; }

    static final MemoryLayout IUnknownVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUnknownVtbl$Release$LAYOUT() { return IUnknownVtbl$Release$LAYOUT_; }

    static final VarHandle IUnknownVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IUnknownVtbl$Release$VH() { return IUnknownVtbl$Release$VH_; }

    static final MemoryLayout IUnknown$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IUnknown");
    static final jdk.incubator.foreign.MemoryLayout IUnknown$struct$LAYOUT() { return IUnknown$struct$LAYOUT_; }

    static final MemoryLayout IUnknown$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IUnknown$lpVtbl$LAYOUT() { return IUnknown$lpVtbl$LAYOUT_; }

    static final VarHandle IUnknown$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IUnknown$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IUnknown$lpVtbl$VH() { return IUnknown$lpVtbl$VH_; }

    static final FunctionDescriptor IUnknown_QueryInterface_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IUnknown_QueryInterface_Proxy$FUNC() { return IUnknown_QueryInterface_Proxy$FUNC_; }

    static final MethodHandle IUnknown_QueryInterface_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IUnknown_QueryInterface_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IUnknown_QueryInterface_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IUnknown_QueryInterface_Proxy$MH() { return IUnknown_QueryInterface_Proxy$MH_; }

    static final FunctionDescriptor IUnknown_QueryInterface_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IUnknown_QueryInterface_Stub$FUNC() { return IUnknown_QueryInterface_Stub$FUNC_; }

    static final MethodHandle IUnknown_QueryInterface_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IUnknown_QueryInterface_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IUnknown_QueryInterface_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IUnknown_QueryInterface_Stub$MH() { return IUnknown_QueryInterface_Stub$MH_; }

    static final FunctionDescriptor IUnknown_AddRef_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IUnknown_AddRef_Proxy$FUNC() { return IUnknown_AddRef_Proxy$FUNC_; }

    static final MethodHandle IUnknown_AddRef_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IUnknown_AddRef_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        IUnknown_AddRef_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IUnknown_AddRef_Proxy$MH() { return IUnknown_AddRef_Proxy$MH_; }

    static final FunctionDescriptor IUnknown_AddRef_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IUnknown_AddRef_Stub$FUNC() { return IUnknown_AddRef_Stub$FUNC_; }

    static final MethodHandle IUnknown_AddRef_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IUnknown_AddRef_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IUnknown_AddRef_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IUnknown_AddRef_Stub$MH() { return IUnknown_AddRef_Stub$MH_; }

    static final FunctionDescriptor IUnknown_Release_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IUnknown_Release_Proxy$FUNC() { return IUnknown_Release_Proxy$FUNC_; }

    static final MethodHandle IUnknown_Release_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IUnknown_Release_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        IUnknown_Release_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IUnknown_Release_Proxy$MH() { return IUnknown_Release_Proxy$MH_; }

    static final FunctionDescriptor IUnknown_Release_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IUnknown_Release_Stub$FUNC() { return IUnknown_Release_Stub$FUNC_; }

    static final MethodHandle IUnknown_Release_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IUnknown_Release_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IUnknown_Release_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IUnknown_Release_Stub$MH() { return IUnknown_Release_Stub$MH_; }

    static final MemoryLayout __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$VH() { return __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec", __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$VH() { return __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec", __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_AsyncIUnknown$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_AsyncIUnknown$LAYOUT() { return IID_AsyncIUnknown$LAYOUT_; }

    static final MemorySegment IID_AsyncIUnknown$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_AsyncIUnknown", IID_AsyncIUnknown$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_AsyncIUnknown$SEGMENT() { return IID_AsyncIUnknown$SEGMENT_; }

    static final MemoryLayout AsyncIUnknownVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Begin_QueryInterface"),
        C_POINTER.withName("Finish_QueryInterface"),
        C_POINTER.withName("Begin_AddRef"),
        C_POINTER.withName("Finish_AddRef"),
        C_POINTER.withName("Begin_Release"),
        C_POINTER.withName("Finish_Release")
    ).withName("AsyncIUnknownVtbl");
    static final jdk.incubator.foreign.MemoryLayout AsyncIUnknownVtbl$struct$LAYOUT() { return AsyncIUnknownVtbl$struct$LAYOUT_; }

    static final MemoryLayout AsyncIUnknownVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIUnknownVtbl$QueryInterface$LAYOUT() { return AsyncIUnknownVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle AsyncIUnknownVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(AsyncIUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle AsyncIUnknownVtbl$QueryInterface$VH() { return AsyncIUnknownVtbl$QueryInterface$VH_; }

    static final MemoryLayout AsyncIUnknownVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIUnknownVtbl$AddRef$LAYOUT() { return AsyncIUnknownVtbl$AddRef$LAYOUT_; }

    static final VarHandle AsyncIUnknownVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(AsyncIUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle AsyncIUnknownVtbl$AddRef$VH() { return AsyncIUnknownVtbl$AddRef$VH_; }

    static final MemoryLayout AsyncIUnknownVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIUnknownVtbl$Release$LAYOUT() { return AsyncIUnknownVtbl$Release$LAYOUT_; }

    static final VarHandle AsyncIUnknownVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(AsyncIUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle AsyncIUnknownVtbl$Release$VH() { return AsyncIUnknownVtbl$Release$VH_; }

    static final MemoryLayout AsyncIUnknownVtbl$Begin_QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIUnknownVtbl$Begin_QueryInterface$LAYOUT() { return AsyncIUnknownVtbl$Begin_QueryInterface$LAYOUT_; }

    static final VarHandle AsyncIUnknownVtbl$Begin_QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(AsyncIUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Begin_QueryInterface")));
    static final java.lang.invoke.VarHandle AsyncIUnknownVtbl$Begin_QueryInterface$VH() { return AsyncIUnknownVtbl$Begin_QueryInterface$VH_; }

    static final MemoryLayout AsyncIUnknownVtbl$Finish_QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIUnknownVtbl$Finish_QueryInterface$LAYOUT() { return AsyncIUnknownVtbl$Finish_QueryInterface$LAYOUT_; }

    static final VarHandle AsyncIUnknownVtbl$Finish_QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(AsyncIUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Finish_QueryInterface")));
    static final java.lang.invoke.VarHandle AsyncIUnknownVtbl$Finish_QueryInterface$VH() { return AsyncIUnknownVtbl$Finish_QueryInterface$VH_; }

    static final MemoryLayout AsyncIUnknownVtbl$Begin_AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIUnknownVtbl$Begin_AddRef$LAYOUT() { return AsyncIUnknownVtbl$Begin_AddRef$LAYOUT_; }

    static final VarHandle AsyncIUnknownVtbl$Begin_AddRef$VH_ = MemoryHandles.asAddressVarHandle(AsyncIUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Begin_AddRef")));
    static final java.lang.invoke.VarHandle AsyncIUnknownVtbl$Begin_AddRef$VH() { return AsyncIUnknownVtbl$Begin_AddRef$VH_; }

    static final MemoryLayout AsyncIUnknownVtbl$Finish_AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIUnknownVtbl$Finish_AddRef$LAYOUT() { return AsyncIUnknownVtbl$Finish_AddRef$LAYOUT_; }

    static final VarHandle AsyncIUnknownVtbl$Finish_AddRef$VH_ = MemoryHandles.asAddressVarHandle(AsyncIUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Finish_AddRef")));
    static final java.lang.invoke.VarHandle AsyncIUnknownVtbl$Finish_AddRef$VH() { return AsyncIUnknownVtbl$Finish_AddRef$VH_; }

    static final MemoryLayout AsyncIUnknownVtbl$Begin_Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIUnknownVtbl$Begin_Release$LAYOUT() { return AsyncIUnknownVtbl$Begin_Release$LAYOUT_; }

    static final VarHandle AsyncIUnknownVtbl$Begin_Release$VH_ = MemoryHandles.asAddressVarHandle(AsyncIUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Begin_Release")));
    static final java.lang.invoke.VarHandle AsyncIUnknownVtbl$Begin_Release$VH() { return AsyncIUnknownVtbl$Begin_Release$VH_; }

    static final MemoryLayout AsyncIUnknownVtbl$Finish_Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIUnknownVtbl$Finish_Release$LAYOUT() { return AsyncIUnknownVtbl$Finish_Release$LAYOUT_; }

    static final VarHandle AsyncIUnknownVtbl$Finish_Release$VH_ = MemoryHandles.asAddressVarHandle(AsyncIUnknownVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Finish_Release")));
    static final java.lang.invoke.VarHandle AsyncIUnknownVtbl$Finish_Release$VH() { return AsyncIUnknownVtbl$Finish_Release$VH_; }

    static final MemoryLayout AsyncIUnknown$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("AsyncIUnknown");
    static final jdk.incubator.foreign.MemoryLayout AsyncIUnknown$struct$LAYOUT() { return AsyncIUnknown$struct$LAYOUT_; }

    static final MemoryLayout AsyncIUnknown$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout AsyncIUnknown$lpVtbl$LAYOUT() { return AsyncIUnknown$lpVtbl$LAYOUT_; }

    static final VarHandle AsyncIUnknown$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(AsyncIUnknown$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle AsyncIUnknown$lpVtbl$VH() { return AsyncIUnknown$lpVtbl$VH_; }

    static final MemoryLayout __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$VH() { return __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec", __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$SEGMENT_; }

}

