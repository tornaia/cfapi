// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$90 extends cfapi_h$constants$89 {

    /* package-private */ cfapi_h$constants$90() {}
    static final MemoryLayout IXTLRuntimeVtbl$put_dataType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$put_dataType$LAYOUT() { return IXTLRuntimeVtbl$put_dataType$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$put_dataType$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_dataType")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$put_dataType$VH() { return IXTLRuntimeVtbl$put_dataType$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_xml$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_xml$LAYOUT() { return IXTLRuntimeVtbl$get_xml$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_xml$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_xml")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_xml$VH() { return IXTLRuntimeVtbl$get_xml$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$transformNode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$transformNode$LAYOUT() { return IXTLRuntimeVtbl$transformNode$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$transformNode$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("transformNode")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$transformNode$VH() { return IXTLRuntimeVtbl$transformNode$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$selectNodes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$selectNodes$LAYOUT() { return IXTLRuntimeVtbl$selectNodes$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$selectNodes$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("selectNodes")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$selectNodes$VH() { return IXTLRuntimeVtbl$selectNodes$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$selectSingleNode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$selectSingleNode$LAYOUT() { return IXTLRuntimeVtbl$selectSingleNode$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$selectSingleNode$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("selectSingleNode")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$selectSingleNode$VH() { return IXTLRuntimeVtbl$selectSingleNode$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_parsed$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_parsed$LAYOUT() { return IXTLRuntimeVtbl$get_parsed$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_parsed$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_parsed")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_parsed$VH() { return IXTLRuntimeVtbl$get_parsed$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_namespaceURI$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_namespaceURI$LAYOUT() { return IXTLRuntimeVtbl$get_namespaceURI$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_namespaceURI$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_namespaceURI")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_namespaceURI$VH() { return IXTLRuntimeVtbl$get_namespaceURI$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_prefix$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_prefix$LAYOUT() { return IXTLRuntimeVtbl$get_prefix$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_prefix$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_prefix")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_prefix$VH() { return IXTLRuntimeVtbl$get_prefix$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_baseName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_baseName$LAYOUT() { return IXTLRuntimeVtbl$get_baseName$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_baseName$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_baseName")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_baseName$VH() { return IXTLRuntimeVtbl$get_baseName$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$transformNodeToObject$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$transformNodeToObject$LAYOUT() { return IXTLRuntimeVtbl$transformNodeToObject$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$transformNodeToObject$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("transformNodeToObject")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$transformNodeToObject$VH() { return IXTLRuntimeVtbl$transformNodeToObject$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$uniqueID$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$uniqueID$LAYOUT() { return IXTLRuntimeVtbl$uniqueID$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$uniqueID$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("uniqueID")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$uniqueID$VH() { return IXTLRuntimeVtbl$uniqueID$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$depth$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$depth$LAYOUT() { return IXTLRuntimeVtbl$depth$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$depth$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("depth")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$depth$VH() { return IXTLRuntimeVtbl$depth$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$childNumber$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$childNumber$LAYOUT() { return IXTLRuntimeVtbl$childNumber$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$childNumber$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("childNumber")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$childNumber$VH() { return IXTLRuntimeVtbl$childNumber$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$ancestorChildNumber$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$ancestorChildNumber$LAYOUT() { return IXTLRuntimeVtbl$ancestorChildNumber$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$ancestorChildNumber$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ancestorChildNumber")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$ancestorChildNumber$VH() { return IXTLRuntimeVtbl$ancestorChildNumber$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$absoluteChildNumber$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$absoluteChildNumber$LAYOUT() { return IXTLRuntimeVtbl$absoluteChildNumber$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$absoluteChildNumber$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("absoluteChildNumber")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$absoluteChildNumber$VH() { return IXTLRuntimeVtbl$absoluteChildNumber$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$formatIndex$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$formatIndex$LAYOUT() { return IXTLRuntimeVtbl$formatIndex$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$formatIndex$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("formatIndex")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$formatIndex$VH() { return IXTLRuntimeVtbl$formatIndex$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$formatNumber$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$formatNumber$LAYOUT() { return IXTLRuntimeVtbl$formatNumber$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$formatNumber$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("formatNumber")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$formatNumber$VH() { return IXTLRuntimeVtbl$formatNumber$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$formatDate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$formatDate$LAYOUT() { return IXTLRuntimeVtbl$formatDate$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$formatDate$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("formatDate")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$formatDate$VH() { return IXTLRuntimeVtbl$formatDate$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$formatTime$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$formatTime$LAYOUT() { return IXTLRuntimeVtbl$formatTime$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$formatTime$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("formatTime")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$formatTime$VH() { return IXTLRuntimeVtbl$formatTime$VH_; }

    static final MemoryLayout IXTLRuntime$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IXTLRuntime");
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntime$struct$LAYOUT() { return IXTLRuntime$struct$LAYOUT_; }

    static final MemoryLayout IXTLRuntime$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntime$lpVtbl$LAYOUT() { return IXTLRuntime$lpVtbl$LAYOUT_; }

    static final VarHandle IXTLRuntime$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntime$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IXTLRuntime$lpVtbl$VH() { return IXTLRuntime$lpVtbl$VH_; }

    static final MemoryLayout DIID_XMLDOMDocumentEvents$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout DIID_XMLDOMDocumentEvents$LAYOUT() { return DIID_XMLDOMDocumentEvents$LAYOUT_; }

    static final MemorySegment DIID_XMLDOMDocumentEvents$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "DIID_XMLDOMDocumentEvents", DIID_XMLDOMDocumentEvents$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment DIID_XMLDOMDocumentEvents$SEGMENT() { return DIID_XMLDOMDocumentEvents$SEGMENT_; }

    static final MemoryLayout XMLDOMDocumentEventsVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetTypeInfoCount"),
        C_POINTER.withName("GetTypeInfo"),
        C_POINTER.withName("GetIDsOfNames"),
        C_POINTER.withName("Invoke")
    ).withName("XMLDOMDocumentEventsVtbl");
    static final jdk.incubator.foreign.MemoryLayout XMLDOMDocumentEventsVtbl$struct$LAYOUT() { return XMLDOMDocumentEventsVtbl$struct$LAYOUT_; }

    static final MemoryLayout XMLDOMDocumentEventsVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout XMLDOMDocumentEventsVtbl$QueryInterface$LAYOUT() { return XMLDOMDocumentEventsVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle XMLDOMDocumentEventsVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(XMLDOMDocumentEventsVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle XMLDOMDocumentEventsVtbl$QueryInterface$VH() { return XMLDOMDocumentEventsVtbl$QueryInterface$VH_; }

    static final MemoryLayout XMLDOMDocumentEventsVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout XMLDOMDocumentEventsVtbl$AddRef$LAYOUT() { return XMLDOMDocumentEventsVtbl$AddRef$LAYOUT_; }

    static final VarHandle XMLDOMDocumentEventsVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(XMLDOMDocumentEventsVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle XMLDOMDocumentEventsVtbl$AddRef$VH() { return XMLDOMDocumentEventsVtbl$AddRef$VH_; }

    static final MemoryLayout XMLDOMDocumentEventsVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout XMLDOMDocumentEventsVtbl$Release$LAYOUT() { return XMLDOMDocumentEventsVtbl$Release$LAYOUT_; }

    static final VarHandle XMLDOMDocumentEventsVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(XMLDOMDocumentEventsVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle XMLDOMDocumentEventsVtbl$Release$VH() { return XMLDOMDocumentEventsVtbl$Release$VH_; }

    static final MemoryLayout XMLDOMDocumentEventsVtbl$GetTypeInfoCount$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout XMLDOMDocumentEventsVtbl$GetTypeInfoCount$LAYOUT() { return XMLDOMDocumentEventsVtbl$GetTypeInfoCount$LAYOUT_; }

    static final VarHandle XMLDOMDocumentEventsVtbl$GetTypeInfoCount$VH_ = MemoryHandles.asAddressVarHandle(XMLDOMDocumentEventsVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfoCount")));
    static final java.lang.invoke.VarHandle XMLDOMDocumentEventsVtbl$GetTypeInfoCount$VH() { return XMLDOMDocumentEventsVtbl$GetTypeInfoCount$VH_; }

    static final MemoryLayout XMLDOMDocumentEventsVtbl$GetTypeInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout XMLDOMDocumentEventsVtbl$GetTypeInfo$LAYOUT() { return XMLDOMDocumentEventsVtbl$GetTypeInfo$LAYOUT_; }

    static final VarHandle XMLDOMDocumentEventsVtbl$GetTypeInfo$VH_ = MemoryHandles.asAddressVarHandle(XMLDOMDocumentEventsVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfo")));
    static final java.lang.invoke.VarHandle XMLDOMDocumentEventsVtbl$GetTypeInfo$VH() { return XMLDOMDocumentEventsVtbl$GetTypeInfo$VH_; }

    static final MemoryLayout XMLDOMDocumentEventsVtbl$GetIDsOfNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout XMLDOMDocumentEventsVtbl$GetIDsOfNames$LAYOUT() { return XMLDOMDocumentEventsVtbl$GetIDsOfNames$LAYOUT_; }

    static final VarHandle XMLDOMDocumentEventsVtbl$GetIDsOfNames$VH_ = MemoryHandles.asAddressVarHandle(XMLDOMDocumentEventsVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetIDsOfNames")));
    static final java.lang.invoke.VarHandle XMLDOMDocumentEventsVtbl$GetIDsOfNames$VH() { return XMLDOMDocumentEventsVtbl$GetIDsOfNames$VH_; }

    static final MemoryLayout XMLDOMDocumentEventsVtbl$Invoke$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout XMLDOMDocumentEventsVtbl$Invoke$LAYOUT() { return XMLDOMDocumentEventsVtbl$Invoke$LAYOUT_; }

    static final VarHandle XMLDOMDocumentEventsVtbl$Invoke$VH_ = MemoryHandles.asAddressVarHandle(XMLDOMDocumentEventsVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Invoke")));
    static final java.lang.invoke.VarHandle XMLDOMDocumentEventsVtbl$Invoke$VH() { return XMLDOMDocumentEventsVtbl$Invoke$VH_; }

    static final MemoryLayout XMLDOMDocumentEvents$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("XMLDOMDocumentEvents");
    static final jdk.incubator.foreign.MemoryLayout XMLDOMDocumentEvents$struct$LAYOUT() { return XMLDOMDocumentEvents$struct$LAYOUT_; }

    static final MemoryLayout XMLDOMDocumentEvents$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout XMLDOMDocumentEvents$lpVtbl$LAYOUT() { return XMLDOMDocumentEvents$lpVtbl$LAYOUT_; }

    static final VarHandle XMLDOMDocumentEvents$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(XMLDOMDocumentEvents$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle XMLDOMDocumentEvents$lpVtbl$VH() { return XMLDOMDocumentEvents$lpVtbl$VH_; }

    static final MemoryLayout CLSID_DOMDocument$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_DOMDocument$LAYOUT() { return CLSID_DOMDocument$LAYOUT_; }

    static final MemorySegment CLSID_DOMDocument$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_DOMDocument", CLSID_DOMDocument$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_DOMDocument$SEGMENT() { return CLSID_DOMDocument$SEGMENT_; }

    static final MemoryLayout CLSID_DOMFreeThreadedDocument$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_DOMFreeThreadedDocument$LAYOUT() { return CLSID_DOMFreeThreadedDocument$LAYOUT_; }

    static final MemorySegment CLSID_DOMFreeThreadedDocument$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_DOMFreeThreadedDocument", CLSID_DOMFreeThreadedDocument$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_DOMFreeThreadedDocument$SEGMENT() { return CLSID_DOMFreeThreadedDocument$SEGMENT_; }

    static final MemoryLayout IID_IXMLHttpRequest$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IXMLHttpRequest$LAYOUT() { return IID_IXMLHttpRequest$LAYOUT_; }

    static final MemorySegment IID_IXMLHttpRequest$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IXMLHttpRequest", IID_IXMLHttpRequest$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IXMLHttpRequest$SEGMENT() { return IID_IXMLHttpRequest$SEGMENT_; }

    static final MemoryLayout IXMLHttpRequestVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetTypeInfoCount"),
        C_POINTER.withName("GetTypeInfo"),
        C_POINTER.withName("GetIDsOfNames"),
        C_POINTER.withName("Invoke"),
        C_POINTER.withName("open"),
        C_POINTER.withName("setRequestHeader"),
        C_POINTER.withName("getResponseHeader"),
        C_POINTER.withName("getAllResponseHeaders"),
        C_POINTER.withName("send"),
        C_POINTER.withName("abort"),
        C_POINTER.withName("get_status"),
        C_POINTER.withName("get_statusText"),
        C_POINTER.withName("get_responseXML"),
        C_POINTER.withName("get_responseText"),
        C_POINTER.withName("get_responseBody"),
        C_POINTER.withName("get_responseStream"),
        C_POINTER.withName("get_readyState"),
        C_POINTER.withName("put_onreadystatechange")
    ).withName("IXMLHttpRequestVtbl");
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$struct$LAYOUT() { return IXMLHttpRequestVtbl$struct$LAYOUT_; }

    static final MemoryLayout IXMLHttpRequestVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$QueryInterface$LAYOUT() { return IXMLHttpRequestVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$QueryInterface$VH() { return IXMLHttpRequestVtbl$QueryInterface$VH_; }

    static final MemoryLayout IXMLHttpRequestVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$AddRef$LAYOUT() { return IXMLHttpRequestVtbl$AddRef$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$AddRef$VH() { return IXMLHttpRequestVtbl$AddRef$VH_; }

    static final MemoryLayout IXMLHttpRequestVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$Release$LAYOUT() { return IXMLHttpRequestVtbl$Release$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$Release$VH() { return IXMLHttpRequestVtbl$Release$VH_; }

    static final MemoryLayout IXMLHttpRequestVtbl$GetTypeInfoCount$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$GetTypeInfoCount$LAYOUT() { return IXMLHttpRequestVtbl$GetTypeInfoCount$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$GetTypeInfoCount$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfoCount")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$GetTypeInfoCount$VH() { return IXMLHttpRequestVtbl$GetTypeInfoCount$VH_; }

    static final MemoryLayout IXMLHttpRequestVtbl$GetTypeInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$GetTypeInfo$LAYOUT() { return IXMLHttpRequestVtbl$GetTypeInfo$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$GetTypeInfo$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfo")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$GetTypeInfo$VH() { return IXMLHttpRequestVtbl$GetTypeInfo$VH_; }

    static final MemoryLayout IXMLHttpRequestVtbl$GetIDsOfNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$GetIDsOfNames$LAYOUT() { return IXMLHttpRequestVtbl$GetIDsOfNames$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$GetIDsOfNames$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetIDsOfNames")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$GetIDsOfNames$VH() { return IXMLHttpRequestVtbl$GetIDsOfNames$VH_; }

    static final MemoryLayout IXMLHttpRequestVtbl$Invoke$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$Invoke$LAYOUT() { return IXMLHttpRequestVtbl$Invoke$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$Invoke$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Invoke")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$Invoke$VH() { return IXMLHttpRequestVtbl$Invoke$VH_; }

    static final MemoryLayout IXMLHttpRequestVtbl$open$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$open$LAYOUT() { return IXMLHttpRequestVtbl$open$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$open$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("open")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$open$VH() { return IXMLHttpRequestVtbl$open$VH_; }

    static final MemoryLayout IXMLHttpRequestVtbl$setRequestHeader$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$setRequestHeader$LAYOUT() { return IXMLHttpRequestVtbl$setRequestHeader$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$setRequestHeader$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("setRequestHeader")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$setRequestHeader$VH() { return IXMLHttpRequestVtbl$setRequestHeader$VH_; }

    static final MemoryLayout IXMLHttpRequestVtbl$getResponseHeader$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$getResponseHeader$LAYOUT() { return IXMLHttpRequestVtbl$getResponseHeader$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$getResponseHeader$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("getResponseHeader")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$getResponseHeader$VH() { return IXMLHttpRequestVtbl$getResponseHeader$VH_; }

    static final MemoryLayout IXMLHttpRequestVtbl$getAllResponseHeaders$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$getAllResponseHeaders$LAYOUT() { return IXMLHttpRequestVtbl$getAllResponseHeaders$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$getAllResponseHeaders$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("getAllResponseHeaders")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$getAllResponseHeaders$VH() { return IXMLHttpRequestVtbl$getAllResponseHeaders$VH_; }

    static final MemoryLayout IXMLHttpRequestVtbl$send$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$send$LAYOUT() { return IXMLHttpRequestVtbl$send$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$send$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("send")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$send$VH() { return IXMLHttpRequestVtbl$send$VH_; }

    static final MemoryLayout IXMLHttpRequestVtbl$abort$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$abort$LAYOUT() { return IXMLHttpRequestVtbl$abort$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$abort$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("abort")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$abort$VH() { return IXMLHttpRequestVtbl$abort$VH_; }

    static final MemoryLayout IXMLHttpRequestVtbl$get_status$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$get_status$LAYOUT() { return IXMLHttpRequestVtbl$get_status$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$get_status$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_status")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$get_status$VH() { return IXMLHttpRequestVtbl$get_status$VH_; }

    static final MemoryLayout IXMLHttpRequestVtbl$get_statusText$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$get_statusText$LAYOUT() { return IXMLHttpRequestVtbl$get_statusText$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$get_statusText$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_statusText")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$get_statusText$VH() { return IXMLHttpRequestVtbl$get_statusText$VH_; }

    static final MemoryLayout IXMLHttpRequestVtbl$get_responseXML$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$get_responseXML$LAYOUT() { return IXMLHttpRequestVtbl$get_responseXML$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$get_responseXML$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_responseXML")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$get_responseXML$VH() { return IXMLHttpRequestVtbl$get_responseXML$VH_; }

    static final MemoryLayout IXMLHttpRequestVtbl$get_responseText$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$get_responseText$LAYOUT() { return IXMLHttpRequestVtbl$get_responseText$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$get_responseText$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_responseText")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$get_responseText$VH() { return IXMLHttpRequestVtbl$get_responseText$VH_; }

    static final MemoryLayout IXMLHttpRequestVtbl$get_responseBody$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$get_responseBody$LAYOUT() { return IXMLHttpRequestVtbl$get_responseBody$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$get_responseBody$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_responseBody")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$get_responseBody$VH() { return IXMLHttpRequestVtbl$get_responseBody$VH_; }

    static final MemoryLayout IXMLHttpRequestVtbl$get_responseStream$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$get_responseStream$LAYOUT() { return IXMLHttpRequestVtbl$get_responseStream$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$get_responseStream$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_responseStream")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$get_responseStream$VH() { return IXMLHttpRequestVtbl$get_responseStream$VH_; }

    static final MemoryLayout IXMLHttpRequestVtbl$get_readyState$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$get_readyState$LAYOUT() { return IXMLHttpRequestVtbl$get_readyState$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$get_readyState$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_readyState")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$get_readyState$VH() { return IXMLHttpRequestVtbl$get_readyState$VH_; }

    static final MemoryLayout IXMLHttpRequestVtbl$put_onreadystatechange$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequestVtbl$put_onreadystatechange$LAYOUT() { return IXMLHttpRequestVtbl$put_onreadystatechange$LAYOUT_; }

    static final VarHandle IXMLHttpRequestVtbl$put_onreadystatechange$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequestVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_onreadystatechange")));
    static final java.lang.invoke.VarHandle IXMLHttpRequestVtbl$put_onreadystatechange$VH() { return IXMLHttpRequestVtbl$put_onreadystatechange$VH_; }

    static final MemoryLayout IXMLHttpRequest$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IXMLHttpRequest");
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequest$struct$LAYOUT() { return IXMLHttpRequest$struct$LAYOUT_; }

    static final MemoryLayout IXMLHttpRequest$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLHttpRequest$lpVtbl$LAYOUT() { return IXMLHttpRequest$lpVtbl$LAYOUT_; }

    static final VarHandle IXMLHttpRequest$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IXMLHttpRequest$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IXMLHttpRequest$lpVtbl$VH() { return IXMLHttpRequest$lpVtbl$VH_; }

    static final MemoryLayout CLSID_XMLHTTPRequest$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_XMLHTTPRequest$LAYOUT() { return CLSID_XMLHTTPRequest$LAYOUT_; }

    static final MemorySegment CLSID_XMLHTTPRequest$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_XMLHTTPRequest", CLSID_XMLHTTPRequest$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_XMLHTTPRequest$SEGMENT() { return CLSID_XMLHTTPRequest$SEGMENT_; }

    static final MemoryLayout IID_IXMLDSOControl$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IXMLDSOControl$LAYOUT() { return IID_IXMLDSOControl$LAYOUT_; }

    static final MemorySegment IID_IXMLDSOControl$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IXMLDSOControl", IID_IXMLDSOControl$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IXMLDSOControl$SEGMENT() { return IID_IXMLDSOControl$SEGMENT_; }

    static final MemoryLayout IXMLDSOControlVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetTypeInfoCount"),
        C_POINTER.withName("GetTypeInfo"),
        C_POINTER.withName("GetIDsOfNames"),
        C_POINTER.withName("Invoke"),
        C_POINTER.withName("get_XMLDocument"),
        C_POINTER.withName("put_XMLDocument"),
        C_POINTER.withName("get_JavaDSOCompatible"),
        C_POINTER.withName("put_JavaDSOCompatible"),
        C_POINTER.withName("get_readyState")
    ).withName("IXMLDSOControlVtbl");
    static final jdk.incubator.foreign.MemoryLayout IXMLDSOControlVtbl$struct$LAYOUT() { return IXMLDSOControlVtbl$struct$LAYOUT_; }

    static final MemoryLayout IXMLDSOControlVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDSOControlVtbl$QueryInterface$LAYOUT() { return IXMLDSOControlVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IXMLDSOControlVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IXMLDSOControlVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IXMLDSOControlVtbl$QueryInterface$VH() { return IXMLDSOControlVtbl$QueryInterface$VH_; }

    static final MemoryLayout IXMLDSOControlVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDSOControlVtbl$AddRef$LAYOUT() { return IXMLDSOControlVtbl$AddRef$LAYOUT_; }

    static final VarHandle IXMLDSOControlVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IXMLDSOControlVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IXMLDSOControlVtbl$AddRef$VH() { return IXMLDSOControlVtbl$AddRef$VH_; }

    static final MemoryLayout IXMLDSOControlVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDSOControlVtbl$Release$LAYOUT() { return IXMLDSOControlVtbl$Release$LAYOUT_; }

    static final VarHandle IXMLDSOControlVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IXMLDSOControlVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IXMLDSOControlVtbl$Release$VH() { return IXMLDSOControlVtbl$Release$VH_; }

    static final MemoryLayout IXMLDSOControlVtbl$GetTypeInfoCount$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDSOControlVtbl$GetTypeInfoCount$LAYOUT() { return IXMLDSOControlVtbl$GetTypeInfoCount$LAYOUT_; }

    static final VarHandle IXMLDSOControlVtbl$GetTypeInfoCount$VH_ = MemoryHandles.asAddressVarHandle(IXMLDSOControlVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfoCount")));
    static final java.lang.invoke.VarHandle IXMLDSOControlVtbl$GetTypeInfoCount$VH() { return IXMLDSOControlVtbl$GetTypeInfoCount$VH_; }

    static final MemoryLayout IXMLDSOControlVtbl$GetTypeInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDSOControlVtbl$GetTypeInfo$LAYOUT() { return IXMLDSOControlVtbl$GetTypeInfo$LAYOUT_; }

    static final VarHandle IXMLDSOControlVtbl$GetTypeInfo$VH_ = MemoryHandles.asAddressVarHandle(IXMLDSOControlVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfo")));
    static final java.lang.invoke.VarHandle IXMLDSOControlVtbl$GetTypeInfo$VH() { return IXMLDSOControlVtbl$GetTypeInfo$VH_; }

    static final MemoryLayout IXMLDSOControlVtbl$GetIDsOfNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDSOControlVtbl$GetIDsOfNames$LAYOUT() { return IXMLDSOControlVtbl$GetIDsOfNames$LAYOUT_; }

    static final VarHandle IXMLDSOControlVtbl$GetIDsOfNames$VH_ = MemoryHandles.asAddressVarHandle(IXMLDSOControlVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetIDsOfNames")));
    static final java.lang.invoke.VarHandle IXMLDSOControlVtbl$GetIDsOfNames$VH() { return IXMLDSOControlVtbl$GetIDsOfNames$VH_; }

    static final MemoryLayout IXMLDSOControlVtbl$Invoke$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDSOControlVtbl$Invoke$LAYOUT() { return IXMLDSOControlVtbl$Invoke$LAYOUT_; }

    static final VarHandle IXMLDSOControlVtbl$Invoke$VH_ = MemoryHandles.asAddressVarHandle(IXMLDSOControlVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Invoke")));
    static final java.lang.invoke.VarHandle IXMLDSOControlVtbl$Invoke$VH() { return IXMLDSOControlVtbl$Invoke$VH_; }

    static final MemoryLayout IXMLDSOControlVtbl$get_XMLDocument$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDSOControlVtbl$get_XMLDocument$LAYOUT() { return IXMLDSOControlVtbl$get_XMLDocument$LAYOUT_; }

    static final VarHandle IXMLDSOControlVtbl$get_XMLDocument$VH_ = MemoryHandles.asAddressVarHandle(IXMLDSOControlVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_XMLDocument")));
    static final java.lang.invoke.VarHandle IXMLDSOControlVtbl$get_XMLDocument$VH() { return IXMLDSOControlVtbl$get_XMLDocument$VH_; }

    static final MemoryLayout IXMLDSOControlVtbl$put_XMLDocument$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDSOControlVtbl$put_XMLDocument$LAYOUT() { return IXMLDSOControlVtbl$put_XMLDocument$LAYOUT_; }

    static final VarHandle IXMLDSOControlVtbl$put_XMLDocument$VH_ = MemoryHandles.asAddressVarHandle(IXMLDSOControlVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_XMLDocument")));
    static final java.lang.invoke.VarHandle IXMLDSOControlVtbl$put_XMLDocument$VH() { return IXMLDSOControlVtbl$put_XMLDocument$VH_; }

    static final MemoryLayout IXMLDSOControlVtbl$get_JavaDSOCompatible$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDSOControlVtbl$get_JavaDSOCompatible$LAYOUT() { return IXMLDSOControlVtbl$get_JavaDSOCompatible$LAYOUT_; }

    static final VarHandle IXMLDSOControlVtbl$get_JavaDSOCompatible$VH_ = MemoryHandles.asAddressVarHandle(IXMLDSOControlVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_JavaDSOCompatible")));
    static final java.lang.invoke.VarHandle IXMLDSOControlVtbl$get_JavaDSOCompatible$VH() { return IXMLDSOControlVtbl$get_JavaDSOCompatible$VH_; }

    static final MemoryLayout IXMLDSOControlVtbl$put_JavaDSOCompatible$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDSOControlVtbl$put_JavaDSOCompatible$LAYOUT() { return IXMLDSOControlVtbl$put_JavaDSOCompatible$LAYOUT_; }

    static final VarHandle IXMLDSOControlVtbl$put_JavaDSOCompatible$VH_ = MemoryHandles.asAddressVarHandle(IXMLDSOControlVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_JavaDSOCompatible")));
    static final java.lang.invoke.VarHandle IXMLDSOControlVtbl$put_JavaDSOCompatible$VH() { return IXMLDSOControlVtbl$put_JavaDSOCompatible$VH_; }

    static final MemoryLayout IXMLDSOControlVtbl$get_readyState$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDSOControlVtbl$get_readyState$LAYOUT() { return IXMLDSOControlVtbl$get_readyState$LAYOUT_; }

    static final VarHandle IXMLDSOControlVtbl$get_readyState$VH_ = MemoryHandles.asAddressVarHandle(IXMLDSOControlVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_readyState")));
    static final java.lang.invoke.VarHandle IXMLDSOControlVtbl$get_readyState$VH() { return IXMLDSOControlVtbl$get_readyState$VH_; }

    static final MemoryLayout IXMLDSOControl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IXMLDSOControl");
    static final jdk.incubator.foreign.MemoryLayout IXMLDSOControl$struct$LAYOUT() { return IXMLDSOControl$struct$LAYOUT_; }

    static final MemoryLayout IXMLDSOControl$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDSOControl$lpVtbl$LAYOUT() { return IXMLDSOControl$lpVtbl$LAYOUT_; }

    static final VarHandle IXMLDSOControl$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IXMLDSOControl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IXMLDSOControl$lpVtbl$VH() { return IXMLDSOControl$lpVtbl$VH_; }

    static final MemoryLayout CLSID_XMLDSOControl$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_XMLDSOControl$LAYOUT() { return CLSID_XMLDSOControl$LAYOUT_; }

    static final MemorySegment CLSID_XMLDSOControl$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_XMLDSOControl", CLSID_XMLDSOControl$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_XMLDSOControl$SEGMENT() { return CLSID_XMLDSOControl$SEGMENT_; }

    static final MemoryLayout IID_IXMLElementCollection$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IXMLElementCollection$LAYOUT() { return IID_IXMLElementCollection$LAYOUT_; }

    static final MemorySegment IID_IXMLElementCollection$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IXMLElementCollection", IID_IXMLElementCollection$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IXMLElementCollection$SEGMENT() { return IID_IXMLElementCollection$SEGMENT_; }

    static final MemoryLayout IXMLElementCollectionVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetTypeInfoCount"),
        C_POINTER.withName("GetTypeInfo"),
        C_POINTER.withName("GetIDsOfNames"),
        C_POINTER.withName("Invoke"),
        C_POINTER.withName("put_length"),
        C_POINTER.withName("get_length"),
        C_POINTER.withName("get__newEnum"),
        C_POINTER.withName("item")
    ).withName("IXMLElementCollectionVtbl");
    static final jdk.incubator.foreign.MemoryLayout IXMLElementCollectionVtbl$struct$LAYOUT() { return IXMLElementCollectionVtbl$struct$LAYOUT_; }

    static final MemoryLayout IXMLElementCollectionVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementCollectionVtbl$QueryInterface$LAYOUT() { return IXMLElementCollectionVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IXMLElementCollectionVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementCollectionVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IXMLElementCollectionVtbl$QueryInterface$VH() { return IXMLElementCollectionVtbl$QueryInterface$VH_; }

    static final MemoryLayout IXMLElementCollectionVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementCollectionVtbl$AddRef$LAYOUT() { return IXMLElementCollectionVtbl$AddRef$LAYOUT_; }

    static final VarHandle IXMLElementCollectionVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementCollectionVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IXMLElementCollectionVtbl$AddRef$VH() { return IXMLElementCollectionVtbl$AddRef$VH_; }

    static final MemoryLayout IXMLElementCollectionVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementCollectionVtbl$Release$LAYOUT() { return IXMLElementCollectionVtbl$Release$LAYOUT_; }

    static final VarHandle IXMLElementCollectionVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementCollectionVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IXMLElementCollectionVtbl$Release$VH() { return IXMLElementCollectionVtbl$Release$VH_; }

    static final MemoryLayout IXMLElementCollectionVtbl$GetTypeInfoCount$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementCollectionVtbl$GetTypeInfoCount$LAYOUT() { return IXMLElementCollectionVtbl$GetTypeInfoCount$LAYOUT_; }

    static final VarHandle IXMLElementCollectionVtbl$GetTypeInfoCount$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementCollectionVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfoCount")));
    static final java.lang.invoke.VarHandle IXMLElementCollectionVtbl$GetTypeInfoCount$VH() { return IXMLElementCollectionVtbl$GetTypeInfoCount$VH_; }

    static final MemoryLayout IXMLElementCollectionVtbl$GetTypeInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementCollectionVtbl$GetTypeInfo$LAYOUT() { return IXMLElementCollectionVtbl$GetTypeInfo$LAYOUT_; }

    static final VarHandle IXMLElementCollectionVtbl$GetTypeInfo$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementCollectionVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfo")));
    static final java.lang.invoke.VarHandle IXMLElementCollectionVtbl$GetTypeInfo$VH() { return IXMLElementCollectionVtbl$GetTypeInfo$VH_; }

    static final MemoryLayout IXMLElementCollectionVtbl$GetIDsOfNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementCollectionVtbl$GetIDsOfNames$LAYOUT() { return IXMLElementCollectionVtbl$GetIDsOfNames$LAYOUT_; }

    static final VarHandle IXMLElementCollectionVtbl$GetIDsOfNames$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementCollectionVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetIDsOfNames")));
    static final java.lang.invoke.VarHandle IXMLElementCollectionVtbl$GetIDsOfNames$VH() { return IXMLElementCollectionVtbl$GetIDsOfNames$VH_; }

    static final MemoryLayout IXMLElementCollectionVtbl$Invoke$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementCollectionVtbl$Invoke$LAYOUT() { return IXMLElementCollectionVtbl$Invoke$LAYOUT_; }

    static final VarHandle IXMLElementCollectionVtbl$Invoke$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementCollectionVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Invoke")));
    static final java.lang.invoke.VarHandle IXMLElementCollectionVtbl$Invoke$VH() { return IXMLElementCollectionVtbl$Invoke$VH_; }

    static final MemoryLayout IXMLElementCollectionVtbl$put_length$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementCollectionVtbl$put_length$LAYOUT() { return IXMLElementCollectionVtbl$put_length$LAYOUT_; }

    static final VarHandle IXMLElementCollectionVtbl$put_length$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementCollectionVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_length")));
    static final java.lang.invoke.VarHandle IXMLElementCollectionVtbl$put_length$VH() { return IXMLElementCollectionVtbl$put_length$VH_; }

    static final MemoryLayout IXMLElementCollectionVtbl$get_length$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementCollectionVtbl$get_length$LAYOUT() { return IXMLElementCollectionVtbl$get_length$LAYOUT_; }

    static final VarHandle IXMLElementCollectionVtbl$get_length$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementCollectionVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_length")));
    static final java.lang.invoke.VarHandle IXMLElementCollectionVtbl$get_length$VH() { return IXMLElementCollectionVtbl$get_length$VH_; }

    static final MemoryLayout IXMLElementCollectionVtbl$get__newEnum$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementCollectionVtbl$get__newEnum$LAYOUT() { return IXMLElementCollectionVtbl$get__newEnum$LAYOUT_; }

    static final VarHandle IXMLElementCollectionVtbl$get__newEnum$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementCollectionVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get__newEnum")));
    static final java.lang.invoke.VarHandle IXMLElementCollectionVtbl$get__newEnum$VH() { return IXMLElementCollectionVtbl$get__newEnum$VH_; }

    static final MemoryLayout IXMLElementCollectionVtbl$item$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementCollectionVtbl$item$LAYOUT() { return IXMLElementCollectionVtbl$item$LAYOUT_; }

    static final VarHandle IXMLElementCollectionVtbl$item$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementCollectionVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("item")));
    static final java.lang.invoke.VarHandle IXMLElementCollectionVtbl$item$VH() { return IXMLElementCollectionVtbl$item$VH_; }

    static final MemoryLayout IXMLElementCollection$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IXMLElementCollection");
    static final jdk.incubator.foreign.MemoryLayout IXMLElementCollection$struct$LAYOUT() { return IXMLElementCollection$struct$LAYOUT_; }

    static final MemoryLayout IXMLElementCollection$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementCollection$lpVtbl$LAYOUT() { return IXMLElementCollection$lpVtbl$LAYOUT_; }

    static final VarHandle IXMLElementCollection$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementCollection$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IXMLElementCollection$lpVtbl$VH() { return IXMLElementCollection$lpVtbl$VH_; }

    static final MemoryLayout IID_IXMLDocument$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IXMLDocument$LAYOUT() { return IID_IXMLDocument$LAYOUT_; }

    static final MemorySegment IID_IXMLDocument$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IXMLDocument", IID_IXMLDocument$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IXMLDocument$SEGMENT() { return IID_IXMLDocument$SEGMENT_; }

    static final MemoryLayout IXMLDocumentVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetTypeInfoCount"),
        C_POINTER.withName("GetTypeInfo"),
        C_POINTER.withName("GetIDsOfNames"),
        C_POINTER.withName("Invoke"),
        C_POINTER.withName("get_root"),
        C_POINTER.withName("get_fileSize"),
        C_POINTER.withName("get_fileModifiedDate"),
        C_POINTER.withName("get_fileUpdatedDate"),
        C_POINTER.withName("get_URL"),
        C_POINTER.withName("put_URL"),
        C_POINTER.withName("get_mimeType"),
        C_POINTER.withName("get_readyState"),
        C_POINTER.withName("get_charset"),
        C_POINTER.withName("put_charset"),
        C_POINTER.withName("get_version"),
        C_POINTER.withName("get_doctype"),
        C_POINTER.withName("get_dtdURL"),
        C_POINTER.withName("createElement")
    ).withName("IXMLDocumentVtbl");
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$struct$LAYOUT() { return IXMLDocumentVtbl$struct$LAYOUT_; }

    static final MemoryLayout IXMLDocumentVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$QueryInterface$LAYOUT() { return IXMLDocumentVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$QueryInterface$VH() { return IXMLDocumentVtbl$QueryInterface$VH_; }

    static final MemoryLayout IXMLDocumentVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$AddRef$LAYOUT() { return IXMLDocumentVtbl$AddRef$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$AddRef$VH() { return IXMLDocumentVtbl$AddRef$VH_; }

    static final MemoryLayout IXMLDocumentVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$Release$LAYOUT() { return IXMLDocumentVtbl$Release$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$Release$VH() { return IXMLDocumentVtbl$Release$VH_; }

    static final MemoryLayout IXMLDocumentVtbl$GetTypeInfoCount$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$GetTypeInfoCount$LAYOUT() { return IXMLDocumentVtbl$GetTypeInfoCount$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$GetTypeInfoCount$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfoCount")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$GetTypeInfoCount$VH() { return IXMLDocumentVtbl$GetTypeInfoCount$VH_; }

    static final MemoryLayout IXMLDocumentVtbl$GetTypeInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$GetTypeInfo$LAYOUT() { return IXMLDocumentVtbl$GetTypeInfo$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$GetTypeInfo$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfo")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$GetTypeInfo$VH() { return IXMLDocumentVtbl$GetTypeInfo$VH_; }

    static final MemoryLayout IXMLDocumentVtbl$GetIDsOfNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$GetIDsOfNames$LAYOUT() { return IXMLDocumentVtbl$GetIDsOfNames$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$GetIDsOfNames$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetIDsOfNames")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$GetIDsOfNames$VH() { return IXMLDocumentVtbl$GetIDsOfNames$VH_; }

    static final MemoryLayout IXMLDocumentVtbl$Invoke$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$Invoke$LAYOUT() { return IXMLDocumentVtbl$Invoke$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$Invoke$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Invoke")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$Invoke$VH() { return IXMLDocumentVtbl$Invoke$VH_; }

    static final MemoryLayout IXMLDocumentVtbl$get_root$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$get_root$LAYOUT() { return IXMLDocumentVtbl$get_root$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$get_root$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_root")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$get_root$VH() { return IXMLDocumentVtbl$get_root$VH_; }

    static final MemoryLayout IXMLDocumentVtbl$get_fileSize$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$get_fileSize$LAYOUT() { return IXMLDocumentVtbl$get_fileSize$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$get_fileSize$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_fileSize")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$get_fileSize$VH() { return IXMLDocumentVtbl$get_fileSize$VH_; }

    static final MemoryLayout IXMLDocumentVtbl$get_fileModifiedDate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$get_fileModifiedDate$LAYOUT() { return IXMLDocumentVtbl$get_fileModifiedDate$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$get_fileModifiedDate$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_fileModifiedDate")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$get_fileModifiedDate$VH() { return IXMLDocumentVtbl$get_fileModifiedDate$VH_; }

    static final MemoryLayout IXMLDocumentVtbl$get_fileUpdatedDate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$get_fileUpdatedDate$LAYOUT() { return IXMLDocumentVtbl$get_fileUpdatedDate$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$get_fileUpdatedDate$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_fileUpdatedDate")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$get_fileUpdatedDate$VH() { return IXMLDocumentVtbl$get_fileUpdatedDate$VH_; }

    static final MemoryLayout IXMLDocumentVtbl$get_URL$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$get_URL$LAYOUT() { return IXMLDocumentVtbl$get_URL$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$get_URL$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_URL")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$get_URL$VH() { return IXMLDocumentVtbl$get_URL$VH_; }

    static final MemoryLayout IXMLDocumentVtbl$put_URL$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$put_URL$LAYOUT() { return IXMLDocumentVtbl$put_URL$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$put_URL$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_URL")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$put_URL$VH() { return IXMLDocumentVtbl$put_URL$VH_; }

    static final MemoryLayout IXMLDocumentVtbl$get_mimeType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$get_mimeType$LAYOUT() { return IXMLDocumentVtbl$get_mimeType$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$get_mimeType$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_mimeType")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$get_mimeType$VH() { return IXMLDocumentVtbl$get_mimeType$VH_; }

    static final MemoryLayout IXMLDocumentVtbl$get_readyState$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$get_readyState$LAYOUT() { return IXMLDocumentVtbl$get_readyState$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$get_readyState$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_readyState")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$get_readyState$VH() { return IXMLDocumentVtbl$get_readyState$VH_; }

    static final MemoryLayout IXMLDocumentVtbl$get_charset$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$get_charset$LAYOUT() { return IXMLDocumentVtbl$get_charset$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$get_charset$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_charset")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$get_charset$VH() { return IXMLDocumentVtbl$get_charset$VH_; }

    static final MemoryLayout IXMLDocumentVtbl$put_charset$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$put_charset$LAYOUT() { return IXMLDocumentVtbl$put_charset$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$put_charset$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_charset")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$put_charset$VH() { return IXMLDocumentVtbl$put_charset$VH_; }

    static final MemoryLayout IXMLDocumentVtbl$get_version$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$get_version$LAYOUT() { return IXMLDocumentVtbl$get_version$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$get_version$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_version")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$get_version$VH() { return IXMLDocumentVtbl$get_version$VH_; }

    static final MemoryLayout IXMLDocumentVtbl$get_doctype$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$get_doctype$LAYOUT() { return IXMLDocumentVtbl$get_doctype$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$get_doctype$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_doctype")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$get_doctype$VH() { return IXMLDocumentVtbl$get_doctype$VH_; }

    static final MemoryLayout IXMLDocumentVtbl$get_dtdURL$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$get_dtdURL$LAYOUT() { return IXMLDocumentVtbl$get_dtdURL$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$get_dtdURL$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_dtdURL")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$get_dtdURL$VH() { return IXMLDocumentVtbl$get_dtdURL$VH_; }

    static final MemoryLayout IXMLDocumentVtbl$createElement$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocumentVtbl$createElement$LAYOUT() { return IXMLDocumentVtbl$createElement$LAYOUT_; }

    static final VarHandle IXMLDocumentVtbl$createElement$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocumentVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("createElement")));
    static final java.lang.invoke.VarHandle IXMLDocumentVtbl$createElement$VH() { return IXMLDocumentVtbl$createElement$VH_; }

    static final MemoryLayout IXMLDocument$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IXMLDocument");
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument$struct$LAYOUT() { return IXMLDocument$struct$LAYOUT_; }

    static final MemoryLayout IXMLDocument$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument$lpVtbl$LAYOUT() { return IXMLDocument$lpVtbl$LAYOUT_; }

    static final VarHandle IXMLDocument$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IXMLDocument$lpVtbl$VH() { return IXMLDocument$lpVtbl$VH_; }

    static final MemoryLayout IID_IXMLDocument2$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IXMLDocument2$LAYOUT() { return IID_IXMLDocument2$LAYOUT_; }

    static final MemorySegment IID_IXMLDocument2$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IXMLDocument2", IID_IXMLDocument2$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IXMLDocument2$SEGMENT() { return IID_IXMLDocument2$SEGMENT_; }

    static final MemoryLayout IXMLDocument2Vtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetTypeInfoCount"),
        C_POINTER.withName("GetTypeInfo"),
        C_POINTER.withName("GetIDsOfNames"),
        C_POINTER.withName("Invoke"),
        C_POINTER.withName("get_root"),
        C_POINTER.withName("get_fileSize"),
        C_POINTER.withName("get_fileModifiedDate"),
        C_POINTER.withName("get_fileUpdatedDate"),
        C_POINTER.withName("get_URL"),
        C_POINTER.withName("put_URL"),
        C_POINTER.withName("get_mimeType"),
        C_POINTER.withName("get_readyState"),
        C_POINTER.withName("get_charset"),
        C_POINTER.withName("put_charset"),
        C_POINTER.withName("get_version"),
        C_POINTER.withName("get_doctype"),
        C_POINTER.withName("get_dtdURL"),
        C_POINTER.withName("createElement"),
        C_POINTER.withName("get_async"),
        C_POINTER.withName("put_async")
    ).withName("IXMLDocument2Vtbl");
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$struct$LAYOUT() { return IXMLDocument2Vtbl$struct$LAYOUT_; }

    static final MemoryLayout IXMLDocument2Vtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$QueryInterface$LAYOUT() { return IXMLDocument2Vtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$QueryInterface$VH() { return IXMLDocument2Vtbl$QueryInterface$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$AddRef$LAYOUT() { return IXMLDocument2Vtbl$AddRef$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$AddRef$VH() { return IXMLDocument2Vtbl$AddRef$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$Release$LAYOUT() { return IXMLDocument2Vtbl$Release$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$Release$VH() { return IXMLDocument2Vtbl$Release$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$GetTypeInfoCount$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$GetTypeInfoCount$LAYOUT() { return IXMLDocument2Vtbl$GetTypeInfoCount$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$GetTypeInfoCount$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfoCount")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$GetTypeInfoCount$VH() { return IXMLDocument2Vtbl$GetTypeInfoCount$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$GetTypeInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$GetTypeInfo$LAYOUT() { return IXMLDocument2Vtbl$GetTypeInfo$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$GetTypeInfo$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfo")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$GetTypeInfo$VH() { return IXMLDocument2Vtbl$GetTypeInfo$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$GetIDsOfNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$GetIDsOfNames$LAYOUT() { return IXMLDocument2Vtbl$GetIDsOfNames$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$GetIDsOfNames$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetIDsOfNames")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$GetIDsOfNames$VH() { return IXMLDocument2Vtbl$GetIDsOfNames$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$Invoke$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$Invoke$LAYOUT() { return IXMLDocument2Vtbl$Invoke$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$Invoke$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Invoke")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$Invoke$VH() { return IXMLDocument2Vtbl$Invoke$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$get_root$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$get_root$LAYOUT() { return IXMLDocument2Vtbl$get_root$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$get_root$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_root")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$get_root$VH() { return IXMLDocument2Vtbl$get_root$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$get_fileSize$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$get_fileSize$LAYOUT() { return IXMLDocument2Vtbl$get_fileSize$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$get_fileSize$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_fileSize")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$get_fileSize$VH() { return IXMLDocument2Vtbl$get_fileSize$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$get_fileModifiedDate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$get_fileModifiedDate$LAYOUT() { return IXMLDocument2Vtbl$get_fileModifiedDate$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$get_fileModifiedDate$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_fileModifiedDate")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$get_fileModifiedDate$VH() { return IXMLDocument2Vtbl$get_fileModifiedDate$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$get_fileUpdatedDate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$get_fileUpdatedDate$LAYOUT() { return IXMLDocument2Vtbl$get_fileUpdatedDate$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$get_fileUpdatedDate$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_fileUpdatedDate")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$get_fileUpdatedDate$VH() { return IXMLDocument2Vtbl$get_fileUpdatedDate$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$get_URL$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$get_URL$LAYOUT() { return IXMLDocument2Vtbl$get_URL$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$get_URL$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_URL")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$get_URL$VH() { return IXMLDocument2Vtbl$get_URL$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$put_URL$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$put_URL$LAYOUT() { return IXMLDocument2Vtbl$put_URL$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$put_URL$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_URL")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$put_URL$VH() { return IXMLDocument2Vtbl$put_URL$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$get_mimeType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$get_mimeType$LAYOUT() { return IXMLDocument2Vtbl$get_mimeType$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$get_mimeType$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_mimeType")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$get_mimeType$VH() { return IXMLDocument2Vtbl$get_mimeType$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$get_readyState$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$get_readyState$LAYOUT() { return IXMLDocument2Vtbl$get_readyState$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$get_readyState$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_readyState")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$get_readyState$VH() { return IXMLDocument2Vtbl$get_readyState$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$get_charset$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$get_charset$LAYOUT() { return IXMLDocument2Vtbl$get_charset$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$get_charset$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_charset")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$get_charset$VH() { return IXMLDocument2Vtbl$get_charset$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$put_charset$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$put_charset$LAYOUT() { return IXMLDocument2Vtbl$put_charset$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$put_charset$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_charset")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$put_charset$VH() { return IXMLDocument2Vtbl$put_charset$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$get_version$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$get_version$LAYOUT() { return IXMLDocument2Vtbl$get_version$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$get_version$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_version")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$get_version$VH() { return IXMLDocument2Vtbl$get_version$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$get_doctype$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$get_doctype$LAYOUT() { return IXMLDocument2Vtbl$get_doctype$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$get_doctype$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_doctype")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$get_doctype$VH() { return IXMLDocument2Vtbl$get_doctype$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$get_dtdURL$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$get_dtdURL$LAYOUT() { return IXMLDocument2Vtbl$get_dtdURL$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$get_dtdURL$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_dtdURL")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$get_dtdURL$VH() { return IXMLDocument2Vtbl$get_dtdURL$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$createElement$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$createElement$LAYOUT() { return IXMLDocument2Vtbl$createElement$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$createElement$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("createElement")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$createElement$VH() { return IXMLDocument2Vtbl$createElement$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$get_async$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$get_async$LAYOUT() { return IXMLDocument2Vtbl$get_async$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$get_async$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_async")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$get_async$VH() { return IXMLDocument2Vtbl$get_async$VH_; }

    static final MemoryLayout IXMLDocument2Vtbl$put_async$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2Vtbl$put_async$LAYOUT() { return IXMLDocument2Vtbl$put_async$LAYOUT_; }

    static final VarHandle IXMLDocument2Vtbl$put_async$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_async")));
    static final java.lang.invoke.VarHandle IXMLDocument2Vtbl$put_async$VH() { return IXMLDocument2Vtbl$put_async$VH_; }

    static final MemoryLayout IXMLDocument2$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IXMLDocument2");
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2$struct$LAYOUT() { return IXMLDocument2$struct$LAYOUT_; }

    static final MemoryLayout IXMLDocument2$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDocument2$lpVtbl$LAYOUT() { return IXMLDocument2$lpVtbl$LAYOUT_; }

    static final VarHandle IXMLDocument2$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IXMLDocument2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IXMLDocument2$lpVtbl$VH() { return IXMLDocument2$lpVtbl$VH_; }

    static final MemoryLayout IID_IXMLElement$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IXMLElement$LAYOUT() { return IID_IXMLElement$LAYOUT_; }

    static final MemorySegment IID_IXMLElement$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IXMLElement", IID_IXMLElement$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IXMLElement$SEGMENT() { return IID_IXMLElement$SEGMENT_; }

    static final MemoryLayout IXMLElementVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetTypeInfoCount"),
        C_POINTER.withName("GetTypeInfo"),
        C_POINTER.withName("GetIDsOfNames"),
        C_POINTER.withName("Invoke"),
        C_POINTER.withName("get_tagName"),
        C_POINTER.withName("put_tagName"),
        C_POINTER.withName("get_parent"),
        C_POINTER.withName("setAttribute"),
        C_POINTER.withName("getAttribute"),
        C_POINTER.withName("removeAttribute"),
        C_POINTER.withName("get_children"),
        C_POINTER.withName("get_type"),
        C_POINTER.withName("get_text"),
        C_POINTER.withName("put_text"),
        C_POINTER.withName("addChild"),
        C_POINTER.withName("removeChild")
    ).withName("IXMLElementVtbl");
    static final jdk.incubator.foreign.MemoryLayout IXMLElementVtbl$struct$LAYOUT() { return IXMLElementVtbl$struct$LAYOUT_; }

    static final MemoryLayout IXMLElementVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementVtbl$QueryInterface$LAYOUT() { return IXMLElementVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IXMLElementVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IXMLElementVtbl$QueryInterface$VH() { return IXMLElementVtbl$QueryInterface$VH_; }

    static final MemoryLayout IXMLElementVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementVtbl$AddRef$LAYOUT() { return IXMLElementVtbl$AddRef$LAYOUT_; }

    static final VarHandle IXMLElementVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IXMLElementVtbl$AddRef$VH() { return IXMLElementVtbl$AddRef$VH_; }

    static final MemoryLayout IXMLElementVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementVtbl$Release$LAYOUT() { return IXMLElementVtbl$Release$LAYOUT_; }

    static final VarHandle IXMLElementVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IXMLElementVtbl$Release$VH() { return IXMLElementVtbl$Release$VH_; }

    static final MemoryLayout IXMLElementVtbl$GetTypeInfoCount$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementVtbl$GetTypeInfoCount$LAYOUT() { return IXMLElementVtbl$GetTypeInfoCount$LAYOUT_; }

    static final VarHandle IXMLElementVtbl$GetTypeInfoCount$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfoCount")));
    static final java.lang.invoke.VarHandle IXMLElementVtbl$GetTypeInfoCount$VH() { return IXMLElementVtbl$GetTypeInfoCount$VH_; }

    static final MemoryLayout IXMLElementVtbl$GetTypeInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementVtbl$GetTypeInfo$LAYOUT() { return IXMLElementVtbl$GetTypeInfo$LAYOUT_; }

    static final VarHandle IXMLElementVtbl$GetTypeInfo$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfo")));
    static final java.lang.invoke.VarHandle IXMLElementVtbl$GetTypeInfo$VH() { return IXMLElementVtbl$GetTypeInfo$VH_; }

    static final MemoryLayout IXMLElementVtbl$GetIDsOfNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementVtbl$GetIDsOfNames$LAYOUT() { return IXMLElementVtbl$GetIDsOfNames$LAYOUT_; }

    static final VarHandle IXMLElementVtbl$GetIDsOfNames$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetIDsOfNames")));
    static final java.lang.invoke.VarHandle IXMLElementVtbl$GetIDsOfNames$VH() { return IXMLElementVtbl$GetIDsOfNames$VH_; }

    static final MemoryLayout IXMLElementVtbl$Invoke$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementVtbl$Invoke$LAYOUT() { return IXMLElementVtbl$Invoke$LAYOUT_; }

    static final VarHandle IXMLElementVtbl$Invoke$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Invoke")));
    static final java.lang.invoke.VarHandle IXMLElementVtbl$Invoke$VH() { return IXMLElementVtbl$Invoke$VH_; }

    static final MemoryLayout IXMLElementVtbl$get_tagName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementVtbl$get_tagName$LAYOUT() { return IXMLElementVtbl$get_tagName$LAYOUT_; }

    static final VarHandle IXMLElementVtbl$get_tagName$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_tagName")));
    static final java.lang.invoke.VarHandle IXMLElementVtbl$get_tagName$VH() { return IXMLElementVtbl$get_tagName$VH_; }

    static final MemoryLayout IXMLElementVtbl$put_tagName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementVtbl$put_tagName$LAYOUT() { return IXMLElementVtbl$put_tagName$LAYOUT_; }

    static final VarHandle IXMLElementVtbl$put_tagName$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_tagName")));
    static final java.lang.invoke.VarHandle IXMLElementVtbl$put_tagName$VH() { return IXMLElementVtbl$put_tagName$VH_; }

    static final MemoryLayout IXMLElementVtbl$get_parent$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementVtbl$get_parent$LAYOUT() { return IXMLElementVtbl$get_parent$LAYOUT_; }

    static final VarHandle IXMLElementVtbl$get_parent$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_parent")));
    static final java.lang.invoke.VarHandle IXMLElementVtbl$get_parent$VH() { return IXMLElementVtbl$get_parent$VH_; }

    static final MemoryLayout IXMLElementVtbl$setAttribute$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementVtbl$setAttribute$LAYOUT() { return IXMLElementVtbl$setAttribute$LAYOUT_; }

    static final VarHandle IXMLElementVtbl$setAttribute$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("setAttribute")));
    static final java.lang.invoke.VarHandle IXMLElementVtbl$setAttribute$VH() { return IXMLElementVtbl$setAttribute$VH_; }

    static final MemoryLayout IXMLElementVtbl$getAttribute$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementVtbl$getAttribute$LAYOUT() { return IXMLElementVtbl$getAttribute$LAYOUT_; }

    static final VarHandle IXMLElementVtbl$getAttribute$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("getAttribute")));
    static final java.lang.invoke.VarHandle IXMLElementVtbl$getAttribute$VH() { return IXMLElementVtbl$getAttribute$VH_; }

    static final MemoryLayout IXMLElementVtbl$removeAttribute$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementVtbl$removeAttribute$LAYOUT() { return IXMLElementVtbl$removeAttribute$LAYOUT_; }

    static final VarHandle IXMLElementVtbl$removeAttribute$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("removeAttribute")));
    static final java.lang.invoke.VarHandle IXMLElementVtbl$removeAttribute$VH() { return IXMLElementVtbl$removeAttribute$VH_; }

    static final MemoryLayout IXMLElementVtbl$get_children$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementVtbl$get_children$LAYOUT() { return IXMLElementVtbl$get_children$LAYOUT_; }

    static final VarHandle IXMLElementVtbl$get_children$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_children")));
    static final java.lang.invoke.VarHandle IXMLElementVtbl$get_children$VH() { return IXMLElementVtbl$get_children$VH_; }

    static final MemoryLayout IXMLElementVtbl$get_type$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementVtbl$get_type$LAYOUT() { return IXMLElementVtbl$get_type$LAYOUT_; }

    static final VarHandle IXMLElementVtbl$get_type$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_type")));
    static final java.lang.invoke.VarHandle IXMLElementVtbl$get_type$VH() { return IXMLElementVtbl$get_type$VH_; }

    static final MemoryLayout IXMLElementVtbl$get_text$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementVtbl$get_text$LAYOUT() { return IXMLElementVtbl$get_text$LAYOUT_; }

    static final VarHandle IXMLElementVtbl$get_text$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_text")));
    static final java.lang.invoke.VarHandle IXMLElementVtbl$get_text$VH() { return IXMLElementVtbl$get_text$VH_; }

    static final MemoryLayout IXMLElementVtbl$put_text$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementVtbl$put_text$LAYOUT() { return IXMLElementVtbl$put_text$LAYOUT_; }

    static final VarHandle IXMLElementVtbl$put_text$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_text")));
    static final java.lang.invoke.VarHandle IXMLElementVtbl$put_text$VH() { return IXMLElementVtbl$put_text$VH_; }

    static final MemoryLayout IXMLElementVtbl$addChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementVtbl$addChild$LAYOUT() { return IXMLElementVtbl$addChild$LAYOUT_; }

    static final VarHandle IXMLElementVtbl$addChild$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("addChild")));
    static final java.lang.invoke.VarHandle IXMLElementVtbl$addChild$VH() { return IXMLElementVtbl$addChild$VH_; }

    static final MemoryLayout IXMLElementVtbl$removeChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElementVtbl$removeChild$LAYOUT() { return IXMLElementVtbl$removeChild$LAYOUT_; }

    static final VarHandle IXMLElementVtbl$removeChild$VH_ = MemoryHandles.asAddressVarHandle(IXMLElementVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("removeChild")));
    static final java.lang.invoke.VarHandle IXMLElementVtbl$removeChild$VH() { return IXMLElementVtbl$removeChild$VH_; }

    static final MemoryLayout IXMLElement$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IXMLElement");
    static final jdk.incubator.foreign.MemoryLayout IXMLElement$struct$LAYOUT() { return IXMLElement$struct$LAYOUT_; }

    static final MemoryLayout IXMLElement$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement$lpVtbl$LAYOUT() { return IXMLElement$lpVtbl$LAYOUT_; }

    static final VarHandle IXMLElement$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IXMLElement$lpVtbl$VH() { return IXMLElement$lpVtbl$VH_; }

    static final MemoryLayout IID_IXMLElement2$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IXMLElement2$LAYOUT() { return IID_IXMLElement2$LAYOUT_; }

    static final MemorySegment IID_IXMLElement2$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IXMLElement2", IID_IXMLElement2$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IXMLElement2$SEGMENT() { return IID_IXMLElement2$SEGMENT_; }

    static final MemoryLayout IXMLElement2Vtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetTypeInfoCount"),
        C_POINTER.withName("GetTypeInfo"),
        C_POINTER.withName("GetIDsOfNames"),
        C_POINTER.withName("Invoke"),
        C_POINTER.withName("get_tagName"),
        C_POINTER.withName("put_tagName"),
        C_POINTER.withName("get_parent"),
        C_POINTER.withName("setAttribute"),
        C_POINTER.withName("getAttribute"),
        C_POINTER.withName("removeAttribute"),
        C_POINTER.withName("get_children"),
        C_POINTER.withName("get_type"),
        C_POINTER.withName("get_text"),
        C_POINTER.withName("put_text"),
        C_POINTER.withName("addChild"),
        C_POINTER.withName("removeChild"),
        C_POINTER.withName("get_attributes")
    ).withName("IXMLElement2Vtbl");
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$struct$LAYOUT() { return IXMLElement2Vtbl$struct$LAYOUT_; }

    static final MemoryLayout IXMLElement2Vtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$QueryInterface$LAYOUT() { return IXMLElement2Vtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IXMLElement2Vtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IXMLElement2Vtbl$QueryInterface$VH() { return IXMLElement2Vtbl$QueryInterface$VH_; }

    static final MemoryLayout IXMLElement2Vtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$AddRef$LAYOUT() { return IXMLElement2Vtbl$AddRef$LAYOUT_; }

    static final VarHandle IXMLElement2Vtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IXMLElement2Vtbl$AddRef$VH() { return IXMLElement2Vtbl$AddRef$VH_; }

    static final MemoryLayout IXMLElement2Vtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$Release$LAYOUT() { return IXMLElement2Vtbl$Release$LAYOUT_; }

    static final VarHandle IXMLElement2Vtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IXMLElement2Vtbl$Release$VH() { return IXMLElement2Vtbl$Release$VH_; }

    static final MemoryLayout IXMLElement2Vtbl$GetTypeInfoCount$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$GetTypeInfoCount$LAYOUT() { return IXMLElement2Vtbl$GetTypeInfoCount$LAYOUT_; }

    static final VarHandle IXMLElement2Vtbl$GetTypeInfoCount$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfoCount")));
    static final java.lang.invoke.VarHandle IXMLElement2Vtbl$GetTypeInfoCount$VH() { return IXMLElement2Vtbl$GetTypeInfoCount$VH_; }

    static final MemoryLayout IXMLElement2Vtbl$GetTypeInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$GetTypeInfo$LAYOUT() { return IXMLElement2Vtbl$GetTypeInfo$LAYOUT_; }

    static final VarHandle IXMLElement2Vtbl$GetTypeInfo$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfo")));
    static final java.lang.invoke.VarHandle IXMLElement2Vtbl$GetTypeInfo$VH() { return IXMLElement2Vtbl$GetTypeInfo$VH_; }

    static final MemoryLayout IXMLElement2Vtbl$GetIDsOfNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$GetIDsOfNames$LAYOUT() { return IXMLElement2Vtbl$GetIDsOfNames$LAYOUT_; }

    static final VarHandle IXMLElement2Vtbl$GetIDsOfNames$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetIDsOfNames")));
    static final java.lang.invoke.VarHandle IXMLElement2Vtbl$GetIDsOfNames$VH() { return IXMLElement2Vtbl$GetIDsOfNames$VH_; }

    static final MemoryLayout IXMLElement2Vtbl$Invoke$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$Invoke$LAYOUT() { return IXMLElement2Vtbl$Invoke$LAYOUT_; }

    static final VarHandle IXMLElement2Vtbl$Invoke$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Invoke")));
    static final java.lang.invoke.VarHandle IXMLElement2Vtbl$Invoke$VH() { return IXMLElement2Vtbl$Invoke$VH_; }

    static final MemoryLayout IXMLElement2Vtbl$get_tagName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$get_tagName$LAYOUT() { return IXMLElement2Vtbl$get_tagName$LAYOUT_; }

    static final VarHandle IXMLElement2Vtbl$get_tagName$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_tagName")));
    static final java.lang.invoke.VarHandle IXMLElement2Vtbl$get_tagName$VH() { return IXMLElement2Vtbl$get_tagName$VH_; }

    static final MemoryLayout IXMLElement2Vtbl$put_tagName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$put_tagName$LAYOUT() { return IXMLElement2Vtbl$put_tagName$LAYOUT_; }

    static final VarHandle IXMLElement2Vtbl$put_tagName$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_tagName")));
    static final java.lang.invoke.VarHandle IXMLElement2Vtbl$put_tagName$VH() { return IXMLElement2Vtbl$put_tagName$VH_; }

    static final MemoryLayout IXMLElement2Vtbl$get_parent$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$get_parent$LAYOUT() { return IXMLElement2Vtbl$get_parent$LAYOUT_; }

    static final VarHandle IXMLElement2Vtbl$get_parent$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_parent")));
    static final java.lang.invoke.VarHandle IXMLElement2Vtbl$get_parent$VH() { return IXMLElement2Vtbl$get_parent$VH_; }

    static final MemoryLayout IXMLElement2Vtbl$setAttribute$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$setAttribute$LAYOUT() { return IXMLElement2Vtbl$setAttribute$LAYOUT_; }

    static final VarHandle IXMLElement2Vtbl$setAttribute$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("setAttribute")));
    static final java.lang.invoke.VarHandle IXMLElement2Vtbl$setAttribute$VH() { return IXMLElement2Vtbl$setAttribute$VH_; }

    static final MemoryLayout IXMLElement2Vtbl$getAttribute$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$getAttribute$LAYOUT() { return IXMLElement2Vtbl$getAttribute$LAYOUT_; }

    static final VarHandle IXMLElement2Vtbl$getAttribute$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("getAttribute")));
    static final java.lang.invoke.VarHandle IXMLElement2Vtbl$getAttribute$VH() { return IXMLElement2Vtbl$getAttribute$VH_; }

    static final MemoryLayout IXMLElement2Vtbl$removeAttribute$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$removeAttribute$LAYOUT() { return IXMLElement2Vtbl$removeAttribute$LAYOUT_; }

    static final VarHandle IXMLElement2Vtbl$removeAttribute$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("removeAttribute")));
    static final java.lang.invoke.VarHandle IXMLElement2Vtbl$removeAttribute$VH() { return IXMLElement2Vtbl$removeAttribute$VH_; }

    static final MemoryLayout IXMLElement2Vtbl$get_children$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$get_children$LAYOUT() { return IXMLElement2Vtbl$get_children$LAYOUT_; }

    static final VarHandle IXMLElement2Vtbl$get_children$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_children")));
    static final java.lang.invoke.VarHandle IXMLElement2Vtbl$get_children$VH() { return IXMLElement2Vtbl$get_children$VH_; }

    static final MemoryLayout IXMLElement2Vtbl$get_type$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$get_type$LAYOUT() { return IXMLElement2Vtbl$get_type$LAYOUT_; }

    static final VarHandle IXMLElement2Vtbl$get_type$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_type")));
    static final java.lang.invoke.VarHandle IXMLElement2Vtbl$get_type$VH() { return IXMLElement2Vtbl$get_type$VH_; }

    static final MemoryLayout IXMLElement2Vtbl$get_text$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$get_text$LAYOUT() { return IXMLElement2Vtbl$get_text$LAYOUT_; }

    static final VarHandle IXMLElement2Vtbl$get_text$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_text")));
    static final java.lang.invoke.VarHandle IXMLElement2Vtbl$get_text$VH() { return IXMLElement2Vtbl$get_text$VH_; }

    static final MemoryLayout IXMLElement2Vtbl$put_text$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$put_text$LAYOUT() { return IXMLElement2Vtbl$put_text$LAYOUT_; }

    static final VarHandle IXMLElement2Vtbl$put_text$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_text")));
    static final java.lang.invoke.VarHandle IXMLElement2Vtbl$put_text$VH() { return IXMLElement2Vtbl$put_text$VH_; }

    static final MemoryLayout IXMLElement2Vtbl$addChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$addChild$LAYOUT() { return IXMLElement2Vtbl$addChild$LAYOUT_; }

    static final VarHandle IXMLElement2Vtbl$addChild$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("addChild")));
    static final java.lang.invoke.VarHandle IXMLElement2Vtbl$addChild$VH() { return IXMLElement2Vtbl$addChild$VH_; }

    static final MemoryLayout IXMLElement2Vtbl$removeChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$removeChild$LAYOUT() { return IXMLElement2Vtbl$removeChild$LAYOUT_; }

    static final VarHandle IXMLElement2Vtbl$removeChild$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("removeChild")));
    static final java.lang.invoke.VarHandle IXMLElement2Vtbl$removeChild$VH() { return IXMLElement2Vtbl$removeChild$VH_; }

    static final MemoryLayout IXMLElement2Vtbl$get_attributes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2Vtbl$get_attributes$LAYOUT() { return IXMLElement2Vtbl$get_attributes$LAYOUT_; }

    static final VarHandle IXMLElement2Vtbl$get_attributes$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2Vtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_attributes")));
    static final java.lang.invoke.VarHandle IXMLElement2Vtbl$get_attributes$VH() { return IXMLElement2Vtbl$get_attributes$VH_; }

    static final MemoryLayout IXMLElement2$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IXMLElement2");
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2$struct$LAYOUT() { return IXMLElement2$struct$LAYOUT_; }

    static final MemoryLayout IXMLElement2$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLElement2$lpVtbl$LAYOUT() { return IXMLElement2$lpVtbl$LAYOUT_; }

    static final VarHandle IXMLElement2$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IXMLElement2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IXMLElement2$lpVtbl$VH() { return IXMLElement2$lpVtbl$VH_; }

    static final MemoryLayout IID_IXMLAttribute$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IXMLAttribute$LAYOUT() { return IID_IXMLAttribute$LAYOUT_; }

    static final MemorySegment IID_IXMLAttribute$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IXMLAttribute", IID_IXMLAttribute$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IXMLAttribute$SEGMENT() { return IID_IXMLAttribute$SEGMENT_; }

    static final MemoryLayout IXMLAttributeVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetTypeInfoCount"),
        C_POINTER.withName("GetTypeInfo"),
        C_POINTER.withName("GetIDsOfNames"),
        C_POINTER.withName("Invoke"),
        C_POINTER.withName("get_name"),
        C_POINTER.withName("get_value")
    ).withName("IXMLAttributeVtbl");
    static final jdk.incubator.foreign.MemoryLayout IXMLAttributeVtbl$struct$LAYOUT() { return IXMLAttributeVtbl$struct$LAYOUT_; }

    static final MemoryLayout IXMLAttributeVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLAttributeVtbl$QueryInterface$LAYOUT() { return IXMLAttributeVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IXMLAttributeVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IXMLAttributeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IXMLAttributeVtbl$QueryInterface$VH() { return IXMLAttributeVtbl$QueryInterface$VH_; }

    static final MemoryLayout IXMLAttributeVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLAttributeVtbl$AddRef$LAYOUT() { return IXMLAttributeVtbl$AddRef$LAYOUT_; }

    static final VarHandle IXMLAttributeVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IXMLAttributeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IXMLAttributeVtbl$AddRef$VH() { return IXMLAttributeVtbl$AddRef$VH_; }

    static final MemoryLayout IXMLAttributeVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLAttributeVtbl$Release$LAYOUT() { return IXMLAttributeVtbl$Release$LAYOUT_; }

    static final VarHandle IXMLAttributeVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IXMLAttributeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IXMLAttributeVtbl$Release$VH() { return IXMLAttributeVtbl$Release$VH_; }

    static final MemoryLayout IXMLAttributeVtbl$GetTypeInfoCount$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLAttributeVtbl$GetTypeInfoCount$LAYOUT() { return IXMLAttributeVtbl$GetTypeInfoCount$LAYOUT_; }

    static final VarHandle IXMLAttributeVtbl$GetTypeInfoCount$VH_ = MemoryHandles.asAddressVarHandle(IXMLAttributeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfoCount")));
    static final java.lang.invoke.VarHandle IXMLAttributeVtbl$GetTypeInfoCount$VH() { return IXMLAttributeVtbl$GetTypeInfoCount$VH_; }

    static final MemoryLayout IXMLAttributeVtbl$GetTypeInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLAttributeVtbl$GetTypeInfo$LAYOUT() { return IXMLAttributeVtbl$GetTypeInfo$LAYOUT_; }

    static final VarHandle IXMLAttributeVtbl$GetTypeInfo$VH_ = MemoryHandles.asAddressVarHandle(IXMLAttributeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfo")));
    static final java.lang.invoke.VarHandle IXMLAttributeVtbl$GetTypeInfo$VH() { return IXMLAttributeVtbl$GetTypeInfo$VH_; }

    static final MemoryLayout IXMLAttributeVtbl$GetIDsOfNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLAttributeVtbl$GetIDsOfNames$LAYOUT() { return IXMLAttributeVtbl$GetIDsOfNames$LAYOUT_; }

    static final VarHandle IXMLAttributeVtbl$GetIDsOfNames$VH_ = MemoryHandles.asAddressVarHandle(IXMLAttributeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetIDsOfNames")));
    static final java.lang.invoke.VarHandle IXMLAttributeVtbl$GetIDsOfNames$VH() { return IXMLAttributeVtbl$GetIDsOfNames$VH_; }

    static final MemoryLayout IXMLAttributeVtbl$Invoke$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLAttributeVtbl$Invoke$LAYOUT() { return IXMLAttributeVtbl$Invoke$LAYOUT_; }

    static final VarHandle IXMLAttributeVtbl$Invoke$VH_ = MemoryHandles.asAddressVarHandle(IXMLAttributeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Invoke")));
    static final java.lang.invoke.VarHandle IXMLAttributeVtbl$Invoke$VH() { return IXMLAttributeVtbl$Invoke$VH_; }

    static final MemoryLayout IXMLAttributeVtbl$get_name$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLAttributeVtbl$get_name$LAYOUT() { return IXMLAttributeVtbl$get_name$LAYOUT_; }

    static final VarHandle IXMLAttributeVtbl$get_name$VH_ = MemoryHandles.asAddressVarHandle(IXMLAttributeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_name")));
    static final java.lang.invoke.VarHandle IXMLAttributeVtbl$get_name$VH() { return IXMLAttributeVtbl$get_name$VH_; }

    static final MemoryLayout IXMLAttributeVtbl$get_value$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLAttributeVtbl$get_value$LAYOUT() { return IXMLAttributeVtbl$get_value$LAYOUT_; }

    static final VarHandle IXMLAttributeVtbl$get_value$VH_ = MemoryHandles.asAddressVarHandle(IXMLAttributeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_value")));
    static final java.lang.invoke.VarHandle IXMLAttributeVtbl$get_value$VH() { return IXMLAttributeVtbl$get_value$VH_; }

    static final MemoryLayout IXMLAttribute$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IXMLAttribute");
    static final jdk.incubator.foreign.MemoryLayout IXMLAttribute$struct$LAYOUT() { return IXMLAttribute$struct$LAYOUT_; }

    static final MemoryLayout IXMLAttribute$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLAttribute$lpVtbl$LAYOUT() { return IXMLAttribute$lpVtbl$LAYOUT_; }

    static final VarHandle IXMLAttribute$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IXMLAttribute$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IXMLAttribute$lpVtbl$VH() { return IXMLAttribute$lpVtbl$VH_; }

    static final MemoryLayout IID_IXMLError$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IXMLError$LAYOUT() { return IID_IXMLError$LAYOUT_; }

    static final MemorySegment IID_IXMLError$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IXMLError", IID_IXMLError$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IXMLError$SEGMENT() { return IID_IXMLError$SEGMENT_; }

    static final MemoryLayout IXMLErrorVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetErrorInfo")
    ).withName("IXMLErrorVtbl");
    static final jdk.incubator.foreign.MemoryLayout IXMLErrorVtbl$struct$LAYOUT() { return IXMLErrorVtbl$struct$LAYOUT_; }

    static final MemoryLayout IXMLErrorVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLErrorVtbl$QueryInterface$LAYOUT() { return IXMLErrorVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IXMLErrorVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IXMLErrorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IXMLErrorVtbl$QueryInterface$VH() { return IXMLErrorVtbl$QueryInterface$VH_; }

    static final MemoryLayout IXMLErrorVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLErrorVtbl$AddRef$LAYOUT() { return IXMLErrorVtbl$AddRef$LAYOUT_; }

    static final VarHandle IXMLErrorVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IXMLErrorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IXMLErrorVtbl$AddRef$VH() { return IXMLErrorVtbl$AddRef$VH_; }

    static final MemoryLayout IXMLErrorVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLErrorVtbl$Release$LAYOUT() { return IXMLErrorVtbl$Release$LAYOUT_; }

    static final VarHandle IXMLErrorVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IXMLErrorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IXMLErrorVtbl$Release$VH() { return IXMLErrorVtbl$Release$VH_; }

    static final MemoryLayout IXMLErrorVtbl$GetErrorInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLErrorVtbl$GetErrorInfo$LAYOUT() { return IXMLErrorVtbl$GetErrorInfo$LAYOUT_; }

    static final VarHandle IXMLErrorVtbl$GetErrorInfo$VH_ = MemoryHandles.asAddressVarHandle(IXMLErrorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetErrorInfo")));
    static final java.lang.invoke.VarHandle IXMLErrorVtbl$GetErrorInfo$VH() { return IXMLErrorVtbl$GetErrorInfo$VH_; }

    static final MemoryLayout IXMLError$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IXMLError");
    static final jdk.incubator.foreign.MemoryLayout IXMLError$struct$LAYOUT() { return IXMLError$struct$LAYOUT_; }

    static final MemoryLayout IXMLError$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLError$lpVtbl$LAYOUT() { return IXMLError$lpVtbl$LAYOUT_; }

    static final VarHandle IXMLError$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IXMLError$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IXMLError$lpVtbl$VH() { return IXMLError$lpVtbl$VH_; }

    static final MemoryLayout CLSID_XMLDocument$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_XMLDocument$LAYOUT() { return CLSID_XMLDocument$LAYOUT_; }

    static final MemorySegment CLSID_XMLDocument$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_XMLDocument", CLSID_XMLDocument$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_XMLDocument$SEGMENT() { return CLSID_XMLDocument$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_msxml_0000_0001_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_msxml_0000_0001_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_msxml_0000_0001_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_msxml_0000_0001_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_msxml_0000_0001_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_msxml_0000_0001_v0_0_c_ifspec$VH() { return __MIDL_itf_msxml_0000_0001_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_msxml_0000_0001_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_msxml_0000_0001_v0_0_c_ifspec", __MIDL_itf_msxml_0000_0001_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_msxml_0000_0001_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_msxml_0000_0001_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_msxml_0000_0001_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_msxml_0000_0001_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_msxml_0000_0001_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_msxml_0000_0001_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_msxml_0000_0001_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_msxml_0000_0001_v0_0_s_ifspec$VH() { return __MIDL_itf_msxml_0000_0001_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_msxml_0000_0001_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_msxml_0000_0001_v0_0_s_ifspec", __MIDL_itf_msxml_0000_0001_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_msxml_0000_0001_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_msxml_0000_0001_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout CLSID_SBS_StdURLMoniker$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_SBS_StdURLMoniker$LAYOUT() { return CLSID_SBS_StdURLMoniker$LAYOUT_; }

    static final MemorySegment CLSID_SBS_StdURLMoniker$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_SBS_StdURLMoniker", CLSID_SBS_StdURLMoniker$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_SBS_StdURLMoniker$SEGMENT() { return CLSID_SBS_StdURLMoniker$SEGMENT_; }

    static final MemoryLayout CLSID_SBS_HttpProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_SBS_HttpProtocol$LAYOUT() { return CLSID_SBS_HttpProtocol$LAYOUT_; }

    static final MemorySegment CLSID_SBS_HttpProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_SBS_HttpProtocol", CLSID_SBS_HttpProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_SBS_HttpProtocol$SEGMENT() { return CLSID_SBS_HttpProtocol$SEGMENT_; }

    static final MemoryLayout CLSID_SBS_FtpProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_SBS_FtpProtocol$LAYOUT() { return CLSID_SBS_FtpProtocol$LAYOUT_; }

    static final MemorySegment CLSID_SBS_FtpProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_SBS_FtpProtocol", CLSID_SBS_FtpProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_SBS_FtpProtocol$SEGMENT() { return CLSID_SBS_FtpProtocol$SEGMENT_; }

    static final MemoryLayout CLSID_SBS_GopherProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_SBS_GopherProtocol$LAYOUT() { return CLSID_SBS_GopherProtocol$LAYOUT_; }

    static final MemorySegment CLSID_SBS_GopherProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_SBS_GopherProtocol", CLSID_SBS_GopherProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_SBS_GopherProtocol$SEGMENT() { return CLSID_SBS_GopherProtocol$SEGMENT_; }

    static final MemoryLayout CLSID_SBS_HttpSProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_SBS_HttpSProtocol$LAYOUT() { return CLSID_SBS_HttpSProtocol$LAYOUT_; }

    static final MemorySegment CLSID_SBS_HttpSProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_SBS_HttpSProtocol", CLSID_SBS_HttpSProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_SBS_HttpSProtocol$SEGMENT() { return CLSID_SBS_HttpSProtocol$SEGMENT_; }

    static final MemoryLayout CLSID_SBS_FileProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_SBS_FileProtocol$LAYOUT() { return CLSID_SBS_FileProtocol$LAYOUT_; }

    static final MemorySegment CLSID_SBS_FileProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_SBS_FileProtocol", CLSID_SBS_FileProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_SBS_FileProtocol$SEGMENT() { return CLSID_SBS_FileProtocol$SEGMENT_; }

    static final MemoryLayout CLSID_SBS_MkProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_SBS_MkProtocol$LAYOUT() { return CLSID_SBS_MkProtocol$LAYOUT_; }

    static final MemorySegment CLSID_SBS_MkProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_SBS_MkProtocol", CLSID_SBS_MkProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_SBS_MkProtocol$SEGMENT() { return CLSID_SBS_MkProtocol$SEGMENT_; }

    static final MemoryLayout CLSID_SBS_UrlMkBindCtx$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_SBS_UrlMkBindCtx$LAYOUT() { return CLSID_SBS_UrlMkBindCtx$LAYOUT_; }

    static final MemorySegment CLSID_SBS_UrlMkBindCtx$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_SBS_UrlMkBindCtx", CLSID_SBS_UrlMkBindCtx$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_SBS_UrlMkBindCtx$SEGMENT() { return CLSID_SBS_UrlMkBindCtx$SEGMENT_; }

    static final MemoryLayout CLSID_SBS_SoftDistExt$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_SBS_SoftDistExt$LAYOUT() { return CLSID_SBS_SoftDistExt$LAYOUT_; }

    static final MemorySegment CLSID_SBS_SoftDistExt$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_SBS_SoftDistExt", CLSID_SBS_SoftDistExt$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_SBS_SoftDistExt$SEGMENT() { return CLSID_SBS_SoftDistExt$SEGMENT_; }

    static final MemoryLayout CLSID_SBS_CdlProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_SBS_CdlProtocol$LAYOUT() { return CLSID_SBS_CdlProtocol$LAYOUT_; }

    static final MemorySegment CLSID_SBS_CdlProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_SBS_CdlProtocol", CLSID_SBS_CdlProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_SBS_CdlProtocol$SEGMENT() { return CLSID_SBS_CdlProtocol$SEGMENT_; }

    static final MemoryLayout CLSID_SBS_ClassInstallFilter$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_SBS_ClassInstallFilter$LAYOUT() { return CLSID_SBS_ClassInstallFilter$LAYOUT_; }

    static final MemorySegment CLSID_SBS_ClassInstallFilter$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_SBS_ClassInstallFilter", CLSID_SBS_ClassInstallFilter$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_SBS_ClassInstallFilter$SEGMENT() { return CLSID_SBS_ClassInstallFilter$SEGMENT_; }

    static final MemoryLayout CLSID_SBS_InternetSecurityManager$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_SBS_InternetSecurityManager$LAYOUT() { return CLSID_SBS_InternetSecurityManager$LAYOUT_; }

    static final MemorySegment CLSID_SBS_InternetSecurityManager$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_SBS_InternetSecurityManager", CLSID_SBS_InternetSecurityManager$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_SBS_InternetSecurityManager$SEGMENT() { return CLSID_SBS_InternetSecurityManager$SEGMENT_; }

    static final MemoryLayout CLSID_SBS_InternetZoneManager$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_SBS_InternetZoneManager$LAYOUT() { return CLSID_SBS_InternetZoneManager$LAYOUT_; }

    static final MemorySegment CLSID_SBS_InternetZoneManager$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_SBS_InternetZoneManager", CLSID_SBS_InternetZoneManager$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_SBS_InternetZoneManager$SEGMENT() { return CLSID_SBS_InternetZoneManager$SEGMENT_; }

    static final MemoryLayout IID_IAsyncMoniker$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IAsyncMoniker$LAYOUT() { return IID_IAsyncMoniker$LAYOUT_; }

    static final MemorySegment IID_IAsyncMoniker$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IAsyncMoniker", IID_IAsyncMoniker$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IAsyncMoniker$SEGMENT() { return IID_IAsyncMoniker$SEGMENT_; }

    static final MemoryLayout CLSID_StdURLMoniker$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_StdURLMoniker$LAYOUT() { return CLSID_StdURLMoniker$LAYOUT_; }

    static final MemorySegment CLSID_StdURLMoniker$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_StdURLMoniker", CLSID_StdURLMoniker$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_StdURLMoniker$SEGMENT() { return CLSID_StdURLMoniker$SEGMENT_; }

    static final MemoryLayout CLSID_HttpProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_HttpProtocol$LAYOUT() { return CLSID_HttpProtocol$LAYOUT_; }

    static final MemorySegment CLSID_HttpProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_HttpProtocol", CLSID_HttpProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_HttpProtocol$SEGMENT() { return CLSID_HttpProtocol$SEGMENT_; }

    static final MemoryLayout CLSID_FtpProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_FtpProtocol$LAYOUT() { return CLSID_FtpProtocol$LAYOUT_; }

    static final MemorySegment CLSID_FtpProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_FtpProtocol", CLSID_FtpProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_FtpProtocol$SEGMENT() { return CLSID_FtpProtocol$SEGMENT_; }

    static final MemoryLayout CLSID_GopherProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_GopherProtocol$LAYOUT() { return CLSID_GopherProtocol$LAYOUT_; }

    static final MemorySegment CLSID_GopherProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_GopherProtocol", CLSID_GopherProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_GopherProtocol$SEGMENT() { return CLSID_GopherProtocol$SEGMENT_; }

    static final MemoryLayout CLSID_HttpSProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_HttpSProtocol$LAYOUT() { return CLSID_HttpSProtocol$LAYOUT_; }

    static final MemorySegment CLSID_HttpSProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_HttpSProtocol", CLSID_HttpSProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_HttpSProtocol$SEGMENT() { return CLSID_HttpSProtocol$SEGMENT_; }

    static final MemoryLayout CLSID_FileProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_FileProtocol$LAYOUT() { return CLSID_FileProtocol$LAYOUT_; }

    static final MemorySegment CLSID_FileProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_FileProtocol", CLSID_FileProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_FileProtocol$SEGMENT() { return CLSID_FileProtocol$SEGMENT_; }

    static final MemoryLayout CLSID_ResProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_ResProtocol$LAYOUT() { return CLSID_ResProtocol$LAYOUT_; }

    static final MemorySegment CLSID_ResProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_ResProtocol", CLSID_ResProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_ResProtocol$SEGMENT() { return CLSID_ResProtocol$SEGMENT_; }

    static final MemoryLayout CLSID_AboutProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_AboutProtocol$LAYOUT() { return CLSID_AboutProtocol$LAYOUT_; }

    static final MemorySegment CLSID_AboutProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_AboutProtocol", CLSID_AboutProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_AboutProtocol$SEGMENT() { return CLSID_AboutProtocol$SEGMENT_; }

    static final MemoryLayout CLSID_JSProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_JSProtocol$LAYOUT() { return CLSID_JSProtocol$LAYOUT_; }

    static final MemorySegment CLSID_JSProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_JSProtocol", CLSID_JSProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_JSProtocol$SEGMENT() { return CLSID_JSProtocol$SEGMENT_; }

    static final MemoryLayout CLSID_MailtoProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_MailtoProtocol$LAYOUT() { return CLSID_MailtoProtocol$LAYOUT_; }

    static final MemorySegment CLSID_MailtoProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_MailtoProtocol", CLSID_MailtoProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_MailtoProtocol$SEGMENT() { return CLSID_MailtoProtocol$SEGMENT_; }

    static final MemoryLayout CLSID_IE4_PROTOCOLS$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_IE4_PROTOCOLS$LAYOUT() { return CLSID_IE4_PROTOCOLS$LAYOUT_; }

    static final MemorySegment CLSID_IE4_PROTOCOLS$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_IE4_PROTOCOLS", CLSID_IE4_PROTOCOLS$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_IE4_PROTOCOLS$SEGMENT() { return CLSID_IE4_PROTOCOLS$SEGMENT_; }

    static final MemoryLayout CLSID_MkProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_MkProtocol$LAYOUT() { return CLSID_MkProtocol$LAYOUT_; }

    static final MemorySegment CLSID_MkProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_MkProtocol", CLSID_MkProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_MkProtocol$SEGMENT() { return CLSID_MkProtocol$SEGMENT_; }

    static final MemoryLayout CLSID_StdURLProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_StdURLProtocol$LAYOUT() { return CLSID_StdURLProtocol$LAYOUT_; }

    static final MemorySegment CLSID_StdURLProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_StdURLProtocol", CLSID_StdURLProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_StdURLProtocol$SEGMENT() { return CLSID_StdURLProtocol$SEGMENT_; }

    static final MemoryLayout CLSID_TBAuthProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_TBAuthProtocol$LAYOUT() { return CLSID_TBAuthProtocol$LAYOUT_; }

    static final MemorySegment CLSID_TBAuthProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_TBAuthProtocol", CLSID_TBAuthProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_TBAuthProtocol$SEGMENT() { return CLSID_TBAuthProtocol$SEGMENT_; }

    static final MemoryLayout CLSID_UrlMkBindCtx$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_UrlMkBindCtx$LAYOUT() { return CLSID_UrlMkBindCtx$LAYOUT_; }

    static final MemorySegment CLSID_UrlMkBindCtx$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_UrlMkBindCtx", CLSID_UrlMkBindCtx$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_UrlMkBindCtx$SEGMENT() { return CLSID_UrlMkBindCtx$SEGMENT_; }

    static final MemoryLayout CLSID_CdlProtocol$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_CdlProtocol$LAYOUT() { return CLSID_CdlProtocol$LAYOUT_; }

    static final MemorySegment CLSID_CdlProtocol$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_CdlProtocol", CLSID_CdlProtocol$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_CdlProtocol$SEGMENT() { return CLSID_CdlProtocol$SEGMENT_; }

    static final MemoryLayout CLSID_ClassInstallFilter$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_ClassInstallFilter$LAYOUT() { return CLSID_ClassInstallFilter$LAYOUT_; }

    static final MemorySegment CLSID_ClassInstallFilter$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_ClassInstallFilter", CLSID_ClassInstallFilter$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_ClassInstallFilter$SEGMENT() { return CLSID_ClassInstallFilter$SEGMENT_; }

    static final MemoryLayout IID_IAsyncBindCtx$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IAsyncBindCtx$LAYOUT() { return IID_IAsyncBindCtx$LAYOUT_; }

    static final MemorySegment IID_IAsyncBindCtx$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IAsyncBindCtx", IID_IAsyncBindCtx$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IAsyncBindCtx$SEGMENT() { return IID_IAsyncBindCtx$SEGMENT_; }

    static final FunctionDescriptor CreateURLMoniker$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CreateURLMoniker$FUNC() { return CreateURLMoniker$FUNC_; }

    static final MethodHandle CreateURLMoniker$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateURLMoniker",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CreateURLMoniker$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CreateURLMoniker$MH() { return CreateURLMoniker$MH_; }

    static final FunctionDescriptor CreateURLMonikerEx$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CreateURLMonikerEx$FUNC() { return CreateURLMonikerEx$FUNC_; }

    static final MethodHandle CreateURLMonikerEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateURLMonikerEx",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        CreateURLMonikerEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CreateURLMonikerEx$MH() { return CreateURLMonikerEx$MH_; }

    static final FunctionDescriptor GetClassURL$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetClassURL$FUNC() { return GetClassURL$FUNC_; }

    static final MethodHandle GetClassURL$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetClassURL",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        GetClassURL$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetClassURL$MH() { return GetClassURL$MH_; }

    static final FunctionDescriptor CreateAsyncBindCtx$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CreateAsyncBindCtx$FUNC() { return CreateAsyncBindCtx$FUNC_; }

    static final MethodHandle CreateAsyncBindCtx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateAsyncBindCtx",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CreateAsyncBindCtx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CreateAsyncBindCtx$MH() { return CreateAsyncBindCtx$MH_; }

    static final FunctionDescriptor CreateURLMonikerEx2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CreateURLMonikerEx2$FUNC() { return CreateURLMonikerEx2$FUNC_; }

    static final MethodHandle CreateURLMonikerEx2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateURLMonikerEx2",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        CreateURLMonikerEx2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CreateURLMonikerEx2$MH() { return CreateURLMonikerEx2$MH_; }

    static final FunctionDescriptor CreateAsyncBindCtxEx$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CreateAsyncBindCtxEx$FUNC() { return CreateAsyncBindCtxEx$FUNC_; }

    static final MethodHandle CreateAsyncBindCtxEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateAsyncBindCtxEx",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        CreateAsyncBindCtxEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CreateAsyncBindCtxEx$MH() { return CreateAsyncBindCtxEx$MH_; }

    static final FunctionDescriptor MkParseDisplayNameEx$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor MkParseDisplayNameEx$FUNC() { return MkParseDisplayNameEx$FUNC_; }

    static final MethodHandle MkParseDisplayNameEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "MkParseDisplayNameEx",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        MkParseDisplayNameEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle MkParseDisplayNameEx$MH() { return MkParseDisplayNameEx$MH_; }

    static final FunctionDescriptor RegisterBindStatusCallback$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RegisterBindStatusCallback$FUNC() { return RegisterBindStatusCallback$FUNC_; }

    static final MethodHandle RegisterBindStatusCallback$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RegisterBindStatusCallback",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        RegisterBindStatusCallback$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RegisterBindStatusCallback$MH() { return RegisterBindStatusCallback$MH_; }

    static final FunctionDescriptor RevokeBindStatusCallback$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RevokeBindStatusCallback$FUNC() { return RevokeBindStatusCallback$FUNC_; }

    static final MethodHandle RevokeBindStatusCallback$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RevokeBindStatusCallback",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RevokeBindStatusCallback$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RevokeBindStatusCallback$MH() { return RevokeBindStatusCallback$MH_; }

    static final FunctionDescriptor GetClassFileOrMime$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetClassFileOrMime$FUNC() { return GetClassFileOrMime$FUNC_; }

    static final MethodHandle GetClassFileOrMime$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetClassFileOrMime",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetClassFileOrMime$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetClassFileOrMime$MH() { return GetClassFileOrMime$MH_; }

    static final FunctionDescriptor IsValidURL$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor IsValidURL$FUNC() { return IsValidURL$FUNC_; }

    static final MethodHandle IsValidURL$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IsValidURL",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        IsValidURL$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IsValidURL$MH() { return IsValidURL$MH_; }

    static final FunctionDescriptor CoGetClassObjectFromURL$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CoGetClassObjectFromURL$FUNC() { return CoGetClassObjectFromURL$FUNC_; }

    static final MethodHandle CoGetClassObjectFromURL$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CoGetClassObjectFromURL",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        CoGetClassObjectFromURL$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CoGetClassObjectFromURL$MH() { return CoGetClassObjectFromURL$MH_; }

    static final FunctionDescriptor IEInstallScope$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEInstallScope$FUNC() { return IEInstallScope$FUNC_; }

    static final MethodHandle IEInstallScope$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEInstallScope",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        IEInstallScope$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEInstallScope$MH() { return IEInstallScope$MH_; }

    static final FunctionDescriptor FaultInIEFeature$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor FaultInIEFeature$FUNC() { return FaultInIEFeature$FUNC_; }

    static final MethodHandle FaultInIEFeature$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FaultInIEFeature",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        FaultInIEFeature$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FaultInIEFeature$MH() { return FaultInIEFeature$MH_; }

    static final FunctionDescriptor GetComponentIDFromCLSSPEC$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetComponentIDFromCLSSPEC$FUNC() { return GetComponentIDFromCLSSPEC$FUNC_; }

    static final MethodHandle GetComponentIDFromCLSSPEC$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetComponentIDFromCLSSPEC",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        GetComponentIDFromCLSSPEC$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetComponentIDFromCLSSPEC$MH() { return GetComponentIDFromCLSSPEC$MH_; }

}

