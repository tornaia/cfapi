// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$83 extends cfapi_h$constants$82 {

    /* package-private */ cfapi_h$constants$83() {}
    static final MemoryLayout IPropertyBagVtbl$Write$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertyBagVtbl$Write$LAYOUT() { return IPropertyBagVtbl$Write$LAYOUT_; }

    static final VarHandle IPropertyBagVtbl$Write$VH_ = MemoryHandles.asAddressVarHandle(IPropertyBagVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Write")));
    static final java.lang.invoke.VarHandle IPropertyBagVtbl$Write$VH() { return IPropertyBagVtbl$Write$VH_; }

    static final MemoryLayout IPropertyBag$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IPropertyBag");
    static final jdk.incubator.foreign.MemoryLayout IPropertyBag$struct$LAYOUT() { return IPropertyBag$struct$LAYOUT_; }

    static final MemoryLayout IPropertyBag$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertyBag$lpVtbl$LAYOUT() { return IPropertyBag$lpVtbl$LAYOUT_; }

    static final VarHandle IPropertyBag$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IPropertyBag$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IPropertyBag$lpVtbl$VH() { return IPropertyBag$lpVtbl$VH_; }

    static final FunctionDescriptor IPropertyBag_RemoteRead_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IPropertyBag_RemoteRead_Proxy$FUNC() { return IPropertyBag_RemoteRead_Proxy$FUNC_; }

    static final MethodHandle IPropertyBag_RemoteRead_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IPropertyBag_RemoteRead_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        IPropertyBag_RemoteRead_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IPropertyBag_RemoteRead_Proxy$MH() { return IPropertyBag_RemoteRead_Proxy$MH_; }

    static final FunctionDescriptor IPropertyBag_RemoteRead_Stub$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IPropertyBag_RemoteRead_Stub$FUNC() { return IPropertyBag_RemoteRead_Stub$FUNC_; }

    static final MethodHandle IPropertyBag_RemoteRead_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IPropertyBag_RemoteRead_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        IPropertyBag_RemoteRead_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IPropertyBag_RemoteRead_Stub$MH() { return IPropertyBag_RemoteRead_Stub$MH_; }

    static final MemoryLayout IID_ITypeLibRegistrationReader$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_ITypeLibRegistrationReader$LAYOUT() { return IID_ITypeLibRegistrationReader$LAYOUT_; }

    static final MemorySegment IID_ITypeLibRegistrationReader$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ITypeLibRegistrationReader", IID_ITypeLibRegistrationReader$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_ITypeLibRegistrationReader$SEGMENT() { return IID_ITypeLibRegistrationReader$SEGMENT_; }

    static final MemoryLayout ITypeLibRegistrationReaderVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("EnumTypeLibRegistrations")
    ).withName("ITypeLibRegistrationReaderVtbl");
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistrationReaderVtbl$struct$LAYOUT() { return ITypeLibRegistrationReaderVtbl$struct$LAYOUT_; }

    static final MemoryLayout ITypeLibRegistrationReaderVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistrationReaderVtbl$QueryInterface$LAYOUT() { return ITypeLibRegistrationReaderVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ITypeLibRegistrationReaderVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ITypeLibRegistrationReaderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle ITypeLibRegistrationReaderVtbl$QueryInterface$VH() { return ITypeLibRegistrationReaderVtbl$QueryInterface$VH_; }

    static final MemoryLayout ITypeLibRegistrationReaderVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistrationReaderVtbl$AddRef$LAYOUT() { return ITypeLibRegistrationReaderVtbl$AddRef$LAYOUT_; }

    static final VarHandle ITypeLibRegistrationReaderVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ITypeLibRegistrationReaderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle ITypeLibRegistrationReaderVtbl$AddRef$VH() { return ITypeLibRegistrationReaderVtbl$AddRef$VH_; }

    static final MemoryLayout ITypeLibRegistrationReaderVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistrationReaderVtbl$Release$LAYOUT() { return ITypeLibRegistrationReaderVtbl$Release$LAYOUT_; }

    static final VarHandle ITypeLibRegistrationReaderVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ITypeLibRegistrationReaderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle ITypeLibRegistrationReaderVtbl$Release$VH() { return ITypeLibRegistrationReaderVtbl$Release$VH_; }

    static final MemoryLayout ITypeLibRegistrationReaderVtbl$EnumTypeLibRegistrations$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistrationReaderVtbl$EnumTypeLibRegistrations$LAYOUT() { return ITypeLibRegistrationReaderVtbl$EnumTypeLibRegistrations$LAYOUT_; }

    static final VarHandle ITypeLibRegistrationReaderVtbl$EnumTypeLibRegistrations$VH_ = MemoryHandles.asAddressVarHandle(ITypeLibRegistrationReaderVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EnumTypeLibRegistrations")));
    static final java.lang.invoke.VarHandle ITypeLibRegistrationReaderVtbl$EnumTypeLibRegistrations$VH() { return ITypeLibRegistrationReaderVtbl$EnumTypeLibRegistrations$VH_; }

    static final MemoryLayout ITypeLibRegistrationReader$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ITypeLibRegistrationReader");
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistrationReader$struct$LAYOUT() { return ITypeLibRegistrationReader$struct$LAYOUT_; }

    static final MemoryLayout ITypeLibRegistrationReader$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistrationReader$lpVtbl$LAYOUT() { return ITypeLibRegistrationReader$lpVtbl$LAYOUT_; }

    static final VarHandle ITypeLibRegistrationReader$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ITypeLibRegistrationReader$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle ITypeLibRegistrationReader$lpVtbl$VH() { return ITypeLibRegistrationReader$lpVtbl$VH_; }

    static final MemoryLayout IID_ITypeLibRegistration$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_ITypeLibRegistration$LAYOUT() { return IID_ITypeLibRegistration$LAYOUT_; }

    static final MemorySegment IID_ITypeLibRegistration$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_ITypeLibRegistration", IID_ITypeLibRegistration$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_ITypeLibRegistration$SEGMENT() { return IID_ITypeLibRegistration$SEGMENT_; }

    static final MemoryLayout ITypeLibRegistrationVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetGuid"),
        C_POINTER.withName("GetVersion"),
        C_POINTER.withName("GetLcid"),
        C_POINTER.withName("GetWin32Path"),
        C_POINTER.withName("GetWin64Path"),
        C_POINTER.withName("GetDisplayName"),
        C_POINTER.withName("GetFlags"),
        C_POINTER.withName("GetHelpDir")
    ).withName("ITypeLibRegistrationVtbl");
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistrationVtbl$struct$LAYOUT() { return ITypeLibRegistrationVtbl$struct$LAYOUT_; }

    static final MemoryLayout ITypeLibRegistrationVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistrationVtbl$QueryInterface$LAYOUT() { return ITypeLibRegistrationVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle ITypeLibRegistrationVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(ITypeLibRegistrationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle ITypeLibRegistrationVtbl$QueryInterface$VH() { return ITypeLibRegistrationVtbl$QueryInterface$VH_; }

    static final MemoryLayout ITypeLibRegistrationVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistrationVtbl$AddRef$LAYOUT() { return ITypeLibRegistrationVtbl$AddRef$LAYOUT_; }

    static final VarHandle ITypeLibRegistrationVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(ITypeLibRegistrationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle ITypeLibRegistrationVtbl$AddRef$VH() { return ITypeLibRegistrationVtbl$AddRef$VH_; }

    static final MemoryLayout ITypeLibRegistrationVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistrationVtbl$Release$LAYOUT() { return ITypeLibRegistrationVtbl$Release$LAYOUT_; }

    static final VarHandle ITypeLibRegistrationVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(ITypeLibRegistrationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle ITypeLibRegistrationVtbl$Release$VH() { return ITypeLibRegistrationVtbl$Release$VH_; }

    static final MemoryLayout ITypeLibRegistrationVtbl$GetGuid$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistrationVtbl$GetGuid$LAYOUT() { return ITypeLibRegistrationVtbl$GetGuid$LAYOUT_; }

    static final VarHandle ITypeLibRegistrationVtbl$GetGuid$VH_ = MemoryHandles.asAddressVarHandle(ITypeLibRegistrationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetGuid")));
    static final java.lang.invoke.VarHandle ITypeLibRegistrationVtbl$GetGuid$VH() { return ITypeLibRegistrationVtbl$GetGuid$VH_; }

    static final MemoryLayout ITypeLibRegistrationVtbl$GetVersion$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistrationVtbl$GetVersion$LAYOUT() { return ITypeLibRegistrationVtbl$GetVersion$LAYOUT_; }

    static final VarHandle ITypeLibRegistrationVtbl$GetVersion$VH_ = MemoryHandles.asAddressVarHandle(ITypeLibRegistrationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetVersion")));
    static final java.lang.invoke.VarHandle ITypeLibRegistrationVtbl$GetVersion$VH() { return ITypeLibRegistrationVtbl$GetVersion$VH_; }

    static final MemoryLayout ITypeLibRegistrationVtbl$GetLcid$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistrationVtbl$GetLcid$LAYOUT() { return ITypeLibRegistrationVtbl$GetLcid$LAYOUT_; }

    static final VarHandle ITypeLibRegistrationVtbl$GetLcid$VH_ = MemoryHandles.asAddressVarHandle(ITypeLibRegistrationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetLcid")));
    static final java.lang.invoke.VarHandle ITypeLibRegistrationVtbl$GetLcid$VH() { return ITypeLibRegistrationVtbl$GetLcid$VH_; }

    static final MemoryLayout ITypeLibRegistrationVtbl$GetWin32Path$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistrationVtbl$GetWin32Path$LAYOUT() { return ITypeLibRegistrationVtbl$GetWin32Path$LAYOUT_; }

    static final VarHandle ITypeLibRegistrationVtbl$GetWin32Path$VH_ = MemoryHandles.asAddressVarHandle(ITypeLibRegistrationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetWin32Path")));
    static final java.lang.invoke.VarHandle ITypeLibRegistrationVtbl$GetWin32Path$VH() { return ITypeLibRegistrationVtbl$GetWin32Path$VH_; }

    static final MemoryLayout ITypeLibRegistrationVtbl$GetWin64Path$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistrationVtbl$GetWin64Path$LAYOUT() { return ITypeLibRegistrationVtbl$GetWin64Path$LAYOUT_; }

    static final VarHandle ITypeLibRegistrationVtbl$GetWin64Path$VH_ = MemoryHandles.asAddressVarHandle(ITypeLibRegistrationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetWin64Path")));
    static final java.lang.invoke.VarHandle ITypeLibRegistrationVtbl$GetWin64Path$VH() { return ITypeLibRegistrationVtbl$GetWin64Path$VH_; }

    static final MemoryLayout ITypeLibRegistrationVtbl$GetDisplayName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistrationVtbl$GetDisplayName$LAYOUT() { return ITypeLibRegistrationVtbl$GetDisplayName$LAYOUT_; }

    static final VarHandle ITypeLibRegistrationVtbl$GetDisplayName$VH_ = MemoryHandles.asAddressVarHandle(ITypeLibRegistrationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetDisplayName")));
    static final java.lang.invoke.VarHandle ITypeLibRegistrationVtbl$GetDisplayName$VH() { return ITypeLibRegistrationVtbl$GetDisplayName$VH_; }

    static final MemoryLayout ITypeLibRegistrationVtbl$GetFlags$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistrationVtbl$GetFlags$LAYOUT() { return ITypeLibRegistrationVtbl$GetFlags$LAYOUT_; }

    static final VarHandle ITypeLibRegistrationVtbl$GetFlags$VH_ = MemoryHandles.asAddressVarHandle(ITypeLibRegistrationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetFlags")));
    static final java.lang.invoke.VarHandle ITypeLibRegistrationVtbl$GetFlags$VH() { return ITypeLibRegistrationVtbl$GetFlags$VH_; }

    static final MemoryLayout ITypeLibRegistrationVtbl$GetHelpDir$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistrationVtbl$GetHelpDir$LAYOUT() { return ITypeLibRegistrationVtbl$GetHelpDir$LAYOUT_; }

    static final VarHandle ITypeLibRegistrationVtbl$GetHelpDir$VH_ = MemoryHandles.asAddressVarHandle(ITypeLibRegistrationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetHelpDir")));
    static final java.lang.invoke.VarHandle ITypeLibRegistrationVtbl$GetHelpDir$VH() { return ITypeLibRegistrationVtbl$GetHelpDir$VH_; }

    static final MemoryLayout ITypeLibRegistration$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("ITypeLibRegistration");
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistration$struct$LAYOUT() { return ITypeLibRegistration$struct$LAYOUT_; }

    static final MemoryLayout ITypeLibRegistration$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout ITypeLibRegistration$lpVtbl$LAYOUT() { return ITypeLibRegistration$lpVtbl$LAYOUT_; }

    static final VarHandle ITypeLibRegistration$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(ITypeLibRegistration$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle ITypeLibRegistration$lpVtbl$VH() { return ITypeLibRegistration$lpVtbl$VH_; }

    static final MemoryLayout CLSID_TypeLibRegistrationReader$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout CLSID_TypeLibRegistrationReader$LAYOUT() { return CLSID_TypeLibRegistrationReader$LAYOUT_; }

    static final MemorySegment CLSID_TypeLibRegistrationReader$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "CLSID_TypeLibRegistrationReader", CLSID_TypeLibRegistrationReader$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment CLSID_TypeLibRegistrationReader$SEGMENT() { return CLSID_TypeLibRegistrationReader$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_oaidl_0000_0023_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_oaidl_0000_0023_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_oaidl_0000_0023_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_oaidl_0000_0023_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_oaidl_0000_0023_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_oaidl_0000_0023_v0_0_c_ifspec$VH() { return __MIDL_itf_oaidl_0000_0023_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_oaidl_0000_0023_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_oaidl_0000_0023_v0_0_c_ifspec", __MIDL_itf_oaidl_0000_0023_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_oaidl_0000_0023_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_oaidl_0000_0023_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_oaidl_0000_0023_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_oaidl_0000_0023_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_oaidl_0000_0023_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_oaidl_0000_0023_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_oaidl_0000_0023_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_oaidl_0000_0023_v0_0_s_ifspec$VH() { return __MIDL_itf_oaidl_0000_0023_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_oaidl_0000_0023_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_oaidl_0000_0023_v0_0_s_ifspec", __MIDL_itf_oaidl_0000_0023_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_oaidl_0000_0023_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_oaidl_0000_0023_v0_0_s_ifspec$SEGMENT_; }

    static final FunctionDescriptor BSTR_UserSize$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor BSTR_UserSize$FUNC() { return BSTR_UserSize$FUNC_; }

    static final MethodHandle BSTR_UserSize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "BSTR_UserSize",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        BSTR_UserSize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle BSTR_UserSize$MH() { return BSTR_UserSize$MH_; }

    static final FunctionDescriptor BSTR_UserMarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor BSTR_UserMarshal$FUNC() { return BSTR_UserMarshal$FUNC_; }

    static final MethodHandle BSTR_UserMarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "BSTR_UserMarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        BSTR_UserMarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle BSTR_UserMarshal$MH() { return BSTR_UserMarshal$MH_; }

    static final FunctionDescriptor BSTR_UserUnmarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor BSTR_UserUnmarshal$FUNC() { return BSTR_UserUnmarshal$FUNC_; }

    static final MethodHandle BSTR_UserUnmarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "BSTR_UserUnmarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        BSTR_UserUnmarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle BSTR_UserUnmarshal$MH() { return BSTR_UserUnmarshal$MH_; }

    static final FunctionDescriptor BSTR_UserFree$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor BSTR_UserFree$FUNC() { return BSTR_UserFree$FUNC_; }

    static final MethodHandle BSTR_UserFree$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "BSTR_UserFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        BSTR_UserFree$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle BSTR_UserFree$MH() { return BSTR_UserFree$MH_; }

    static final FunctionDescriptor CLEANLOCALSTORAGE_UserSize$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CLEANLOCALSTORAGE_UserSize$FUNC() { return CLEANLOCALSTORAGE_UserSize$FUNC_; }

    static final MethodHandle CLEANLOCALSTORAGE_UserSize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CLEANLOCALSTORAGE_UserSize",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        CLEANLOCALSTORAGE_UserSize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CLEANLOCALSTORAGE_UserSize$MH() { return CLEANLOCALSTORAGE_UserSize$MH_; }

    static final FunctionDescriptor CLEANLOCALSTORAGE_UserMarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CLEANLOCALSTORAGE_UserMarshal$FUNC() { return CLEANLOCALSTORAGE_UserMarshal$FUNC_; }

    static final MethodHandle CLEANLOCALSTORAGE_UserMarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CLEANLOCALSTORAGE_UserMarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CLEANLOCALSTORAGE_UserMarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CLEANLOCALSTORAGE_UserMarshal$MH() { return CLEANLOCALSTORAGE_UserMarshal$MH_; }

    static final FunctionDescriptor CLEANLOCALSTORAGE_UserUnmarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CLEANLOCALSTORAGE_UserUnmarshal$FUNC() { return CLEANLOCALSTORAGE_UserUnmarshal$FUNC_; }

    static final MethodHandle CLEANLOCALSTORAGE_UserUnmarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CLEANLOCALSTORAGE_UserUnmarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CLEANLOCALSTORAGE_UserUnmarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CLEANLOCALSTORAGE_UserUnmarshal$MH() { return CLEANLOCALSTORAGE_UserUnmarshal$MH_; }

    static final FunctionDescriptor CLEANLOCALSTORAGE_UserFree$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CLEANLOCALSTORAGE_UserFree$FUNC() { return CLEANLOCALSTORAGE_UserFree$FUNC_; }

    static final MethodHandle CLEANLOCALSTORAGE_UserFree$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CLEANLOCALSTORAGE_UserFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        CLEANLOCALSTORAGE_UserFree$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CLEANLOCALSTORAGE_UserFree$MH() { return CLEANLOCALSTORAGE_UserFree$MH_; }

    static final FunctionDescriptor VARIANT_UserSize$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VARIANT_UserSize$FUNC() { return VARIANT_UserSize$FUNC_; }

    static final MethodHandle VARIANT_UserSize$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VARIANT_UserSize",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        VARIANT_UserSize$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VARIANT_UserSize$MH() { return VARIANT_UserSize$MH_; }

    static final FunctionDescriptor VARIANT_UserMarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VARIANT_UserMarshal$FUNC() { return VARIANT_UserMarshal$FUNC_; }

    static final MethodHandle VARIANT_UserMarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VARIANT_UserMarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        VARIANT_UserMarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VARIANT_UserMarshal$MH() { return VARIANT_UserMarshal$MH_; }

    static final FunctionDescriptor VARIANT_UserUnmarshal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VARIANT_UserUnmarshal$FUNC() { return VARIANT_UserUnmarshal$FUNC_; }

    static final MethodHandle VARIANT_UserUnmarshal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VARIANT_UserUnmarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        VARIANT_UserUnmarshal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VARIANT_UserUnmarshal$MH() { return VARIANT_UserUnmarshal$MH_; }

    static final FunctionDescriptor VARIANT_UserFree$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VARIANT_UserFree$FUNC() { return VARIANT_UserFree$FUNC_; }

    static final MethodHandle VARIANT_UserFree$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VARIANT_UserFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        VARIANT_UserFree$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VARIANT_UserFree$MH() { return VARIANT_UserFree$MH_; }

    static final FunctionDescriptor BSTR_UserSize64$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor BSTR_UserSize64$FUNC() { return BSTR_UserSize64$FUNC_; }

    static final MethodHandle BSTR_UserSize64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "BSTR_UserSize64",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        BSTR_UserSize64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle BSTR_UserSize64$MH() { return BSTR_UserSize64$MH_; }

    static final FunctionDescriptor BSTR_UserMarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor BSTR_UserMarshal64$FUNC() { return BSTR_UserMarshal64$FUNC_; }

    static final MethodHandle BSTR_UserMarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "BSTR_UserMarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        BSTR_UserMarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle BSTR_UserMarshal64$MH() { return BSTR_UserMarshal64$MH_; }

    static final FunctionDescriptor BSTR_UserUnmarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor BSTR_UserUnmarshal64$FUNC() { return BSTR_UserUnmarshal64$FUNC_; }

    static final MethodHandle BSTR_UserUnmarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "BSTR_UserUnmarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        BSTR_UserUnmarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle BSTR_UserUnmarshal64$MH() { return BSTR_UserUnmarshal64$MH_; }

    static final FunctionDescriptor BSTR_UserFree64$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor BSTR_UserFree64$FUNC() { return BSTR_UserFree64$FUNC_; }

    static final MethodHandle BSTR_UserFree64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "BSTR_UserFree64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        BSTR_UserFree64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle BSTR_UserFree64$MH() { return BSTR_UserFree64$MH_; }

    static final FunctionDescriptor CLEANLOCALSTORAGE_UserSize64$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CLEANLOCALSTORAGE_UserSize64$FUNC() { return CLEANLOCALSTORAGE_UserSize64$FUNC_; }

    static final MethodHandle CLEANLOCALSTORAGE_UserSize64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CLEANLOCALSTORAGE_UserSize64",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        CLEANLOCALSTORAGE_UserSize64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CLEANLOCALSTORAGE_UserSize64$MH() { return CLEANLOCALSTORAGE_UserSize64$MH_; }

    static final FunctionDescriptor CLEANLOCALSTORAGE_UserMarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CLEANLOCALSTORAGE_UserMarshal64$FUNC() { return CLEANLOCALSTORAGE_UserMarshal64$FUNC_; }

    static final MethodHandle CLEANLOCALSTORAGE_UserMarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CLEANLOCALSTORAGE_UserMarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CLEANLOCALSTORAGE_UserMarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CLEANLOCALSTORAGE_UserMarshal64$MH() { return CLEANLOCALSTORAGE_UserMarshal64$MH_; }

    static final FunctionDescriptor CLEANLOCALSTORAGE_UserUnmarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CLEANLOCALSTORAGE_UserUnmarshal64$FUNC() { return CLEANLOCALSTORAGE_UserUnmarshal64$FUNC_; }

    static final MethodHandle CLEANLOCALSTORAGE_UserUnmarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CLEANLOCALSTORAGE_UserUnmarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CLEANLOCALSTORAGE_UserUnmarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CLEANLOCALSTORAGE_UserUnmarshal64$MH() { return CLEANLOCALSTORAGE_UserUnmarshal64$MH_; }

    static final FunctionDescriptor CLEANLOCALSTORAGE_UserFree64$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CLEANLOCALSTORAGE_UserFree64$FUNC() { return CLEANLOCALSTORAGE_UserFree64$FUNC_; }

    static final MethodHandle CLEANLOCALSTORAGE_UserFree64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CLEANLOCALSTORAGE_UserFree64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        CLEANLOCALSTORAGE_UserFree64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CLEANLOCALSTORAGE_UserFree64$MH() { return CLEANLOCALSTORAGE_UserFree64$MH_; }

    static final FunctionDescriptor VARIANT_UserSize64$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VARIANT_UserSize64$FUNC() { return VARIANT_UserSize64$FUNC_; }

    static final MethodHandle VARIANT_UserSize64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VARIANT_UserSize64",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        VARIANT_UserSize64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VARIANT_UserSize64$MH() { return VARIANT_UserSize64$MH_; }

    static final FunctionDescriptor VARIANT_UserMarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VARIANT_UserMarshal64$FUNC() { return VARIANT_UserMarshal64$FUNC_; }

    static final MethodHandle VARIANT_UserMarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VARIANT_UserMarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        VARIANT_UserMarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VARIANT_UserMarshal64$MH() { return VARIANT_UserMarshal64$MH_; }

    static final FunctionDescriptor VARIANT_UserUnmarshal64$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VARIANT_UserUnmarshal64$FUNC() { return VARIANT_UserUnmarshal64$FUNC_; }

    static final MethodHandle VARIANT_UserUnmarshal64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VARIANT_UserUnmarshal64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        VARIANT_UserUnmarshal64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VARIANT_UserUnmarshal64$MH() { return VARIANT_UserUnmarshal64$MH_; }

    static final FunctionDescriptor VARIANT_UserFree64$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor VARIANT_UserFree64$FUNC() { return VARIANT_UserFree64$FUNC_; }

    static final MethodHandle VARIANT_UserFree64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "VARIANT_UserFree64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        VARIANT_UserFree64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle VARIANT_UserFree64$MH() { return VARIANT_UserFree64$MH_; }

    static final FunctionDescriptor IDispatch_Invoke_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_SHORT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IDispatch_Invoke_Proxy$FUNC() { return IDispatch_Invoke_Proxy$FUNC_; }

    static final MethodHandle IDispatch_Invoke_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IDispatch_Invoke_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ISLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IDispatch_Invoke_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IDispatch_Invoke_Proxy$MH() { return IDispatch_Invoke_Proxy$MH_; }

    static final FunctionDescriptor IDispatch_Invoke_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IDispatch_Invoke_Stub$FUNC() { return IDispatch_Invoke_Stub$FUNC_; }

    static final MethodHandle IDispatch_Invoke_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IDispatch_Invoke_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IDispatch_Invoke_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IDispatch_Invoke_Stub$MH() { return IDispatch_Invoke_Stub$MH_; }

    static final FunctionDescriptor IEnumVARIANT_Next_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumVARIANT_Next_Proxy$FUNC() { return IEnumVARIANT_Next_Proxy$FUNC_; }

    static final MethodHandle IEnumVARIANT_Next_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumVARIANT_Next_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IEnumVARIANT_Next_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumVARIANT_Next_Proxy$MH() { return IEnumVARIANT_Next_Proxy$MH_; }

    static final FunctionDescriptor IEnumVARIANT_Next_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IEnumVARIANT_Next_Stub$FUNC() { return IEnumVARIANT_Next_Stub$FUNC_; }

    static final MethodHandle IEnumVARIANT_Next_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IEnumVARIANT_Next_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IEnumVARIANT_Next_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IEnumVARIANT_Next_Stub$MH() { return IEnumVARIANT_Next_Stub$MH_; }

    static final FunctionDescriptor ITypeComp_Bind_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_SHORT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeComp_Bind_Proxy$FUNC() { return ITypeComp_Bind_Proxy$FUNC_; }

    static final MethodHandle ITypeComp_Bind_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeComp_Bind_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ISLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeComp_Bind_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeComp_Bind_Proxy$MH() { return ITypeComp_Bind_Proxy$MH_; }

    static final FunctionDescriptor ITypeComp_Bind_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_SHORT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeComp_Bind_Stub$FUNC() { return ITypeComp_Bind_Stub$FUNC_; }

    static final MethodHandle ITypeComp_Bind_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeComp_Bind_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ISLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeComp_Bind_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeComp_Bind_Stub$MH() { return ITypeComp_Bind_Stub$MH_; }

    static final FunctionDescriptor ITypeComp_BindType_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeComp_BindType_Proxy$FUNC() { return ITypeComp_BindType_Proxy$FUNC_; }

    static final MethodHandle ITypeComp_BindType_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeComp_BindType_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeComp_BindType_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeComp_BindType_Proxy$MH() { return ITypeComp_BindType_Proxy$MH_; }

    static final FunctionDescriptor ITypeComp_BindType_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeComp_BindType_Stub$FUNC() { return ITypeComp_BindType_Stub$FUNC_; }

    static final MethodHandle ITypeComp_BindType_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeComp_BindType_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ITypeComp_BindType_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeComp_BindType_Stub$MH() { return ITypeComp_BindType_Stub$MH_; }

    static final FunctionDescriptor ITypeInfo_GetTypeAttr_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_GetTypeAttr_Proxy$FUNC() { return ITypeInfo_GetTypeAttr_Proxy$FUNC_; }

    static final MethodHandle ITypeInfo_GetTypeAttr_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_GetTypeAttr_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_GetTypeAttr_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_GetTypeAttr_Proxy$MH() { return ITypeInfo_GetTypeAttr_Proxy$MH_; }

    static final FunctionDescriptor ITypeInfo_GetTypeAttr_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_GetTypeAttr_Stub$FUNC() { return ITypeInfo_GetTypeAttr_Stub$FUNC_; }

    static final MethodHandle ITypeInfo_GetTypeAttr_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_GetTypeAttr_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_GetTypeAttr_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_GetTypeAttr_Stub$MH() { return ITypeInfo_GetTypeAttr_Stub$MH_; }

    static final FunctionDescriptor ITypeInfo_GetFuncDesc_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_GetFuncDesc_Proxy$FUNC() { return ITypeInfo_GetFuncDesc_Proxy$FUNC_; }

    static final MethodHandle ITypeInfo_GetFuncDesc_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_GetFuncDesc_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_GetFuncDesc_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_GetFuncDesc_Proxy$MH() { return ITypeInfo_GetFuncDesc_Proxy$MH_; }

    static final FunctionDescriptor ITypeInfo_GetFuncDesc_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_GetFuncDesc_Stub$FUNC() { return ITypeInfo_GetFuncDesc_Stub$FUNC_; }

    static final MethodHandle ITypeInfo_GetFuncDesc_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_GetFuncDesc_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_GetFuncDesc_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_GetFuncDesc_Stub$MH() { return ITypeInfo_GetFuncDesc_Stub$MH_; }

    static final FunctionDescriptor ITypeInfo_GetVarDesc_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_GetVarDesc_Proxy$FUNC() { return ITypeInfo_GetVarDesc_Proxy$FUNC_; }

    static final MethodHandle ITypeInfo_GetVarDesc_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_GetVarDesc_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_GetVarDesc_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_GetVarDesc_Proxy$MH() { return ITypeInfo_GetVarDesc_Proxy$MH_; }

    static final FunctionDescriptor ITypeInfo_GetVarDesc_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_GetVarDesc_Stub$FUNC() { return ITypeInfo_GetVarDesc_Stub$FUNC_; }

    static final MethodHandle ITypeInfo_GetVarDesc_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_GetVarDesc_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_GetVarDesc_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_GetVarDesc_Stub$MH() { return ITypeInfo_GetVarDesc_Stub$MH_; }

    static final FunctionDescriptor ITypeInfo_GetNames_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_GetNames_Proxy$FUNC() { return ITypeInfo_GetNames_Proxy$FUNC_; }

    static final MethodHandle ITypeInfo_GetNames_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_GetNames_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_GetNames_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_GetNames_Proxy$MH() { return ITypeInfo_GetNames_Proxy$MH_; }

    static final FunctionDescriptor ITypeInfo_GetNames_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_GetNames_Stub$FUNC() { return ITypeInfo_GetNames_Stub$FUNC_; }

    static final MethodHandle ITypeInfo_GetNames_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_GetNames_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_GetNames_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_GetNames_Stub$MH() { return ITypeInfo_GetNames_Stub$MH_; }

    static final FunctionDescriptor ITypeInfo_GetIDsOfNames_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_GetIDsOfNames_Proxy$FUNC() { return ITypeInfo_GetIDsOfNames_Proxy$FUNC_; }

    static final MethodHandle ITypeInfo_GetIDsOfNames_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_GetIDsOfNames_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_GetIDsOfNames_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_GetIDsOfNames_Proxy$MH() { return ITypeInfo_GetIDsOfNames_Proxy$MH_; }

    static final FunctionDescriptor ITypeInfo_GetIDsOfNames_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_GetIDsOfNames_Stub$FUNC() { return ITypeInfo_GetIDsOfNames_Stub$FUNC_; }

    static final MethodHandle ITypeInfo_GetIDsOfNames_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_GetIDsOfNames_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_GetIDsOfNames_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_GetIDsOfNames_Stub$MH() { return ITypeInfo_GetIDsOfNames_Stub$MH_; }

    static final FunctionDescriptor ITypeInfo_Invoke_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_SHORT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_Invoke_Proxy$FUNC() { return ITypeInfo_Invoke_Proxy$FUNC_; }

    static final MethodHandle ITypeInfo_Invoke_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_Invoke_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ISLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_Invoke_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_Invoke_Proxy$MH() { return ITypeInfo_Invoke_Proxy$MH_; }

    static final FunctionDescriptor ITypeInfo_Invoke_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_Invoke_Stub$FUNC() { return ITypeInfo_Invoke_Stub$FUNC_; }

    static final MethodHandle ITypeInfo_Invoke_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_Invoke_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_Invoke_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_Invoke_Stub$MH() { return ITypeInfo_Invoke_Stub$MH_; }

    static final FunctionDescriptor ITypeInfo_GetDocumentation_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_GetDocumentation_Proxy$FUNC() { return ITypeInfo_GetDocumentation_Proxy$FUNC_; }

    static final MethodHandle ITypeInfo_GetDocumentation_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_GetDocumentation_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_GetDocumentation_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_GetDocumentation_Proxy$MH() { return ITypeInfo_GetDocumentation_Proxy$MH_; }

    static final FunctionDescriptor ITypeInfo_GetDocumentation_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_GetDocumentation_Stub$FUNC() { return ITypeInfo_GetDocumentation_Stub$FUNC_; }

    static final MethodHandle ITypeInfo_GetDocumentation_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_GetDocumentation_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_GetDocumentation_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_GetDocumentation_Stub$MH() { return ITypeInfo_GetDocumentation_Stub$MH_; }

    static final FunctionDescriptor ITypeInfo_GetDllEntry_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_GetDllEntry_Proxy$FUNC() { return ITypeInfo_GetDllEntry_Proxy$FUNC_; }

    static final MethodHandle ITypeInfo_GetDllEntry_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_GetDllEntry_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_GetDllEntry_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_GetDllEntry_Proxy$MH() { return ITypeInfo_GetDllEntry_Proxy$MH_; }

    static final FunctionDescriptor ITypeInfo_GetDllEntry_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_INT,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_GetDllEntry_Stub$FUNC() { return ITypeInfo_GetDllEntry_Stub$FUNC_; }

    static final MethodHandle ITypeInfo_GetDllEntry_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_GetDllEntry_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_GetDllEntry_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_GetDllEntry_Stub$MH() { return ITypeInfo_GetDllEntry_Stub$MH_; }

    static final FunctionDescriptor ITypeInfo_AddressOfMember_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_AddressOfMember_Proxy$FUNC() { return ITypeInfo_AddressOfMember_Proxy$FUNC_; }

    static final MethodHandle ITypeInfo_AddressOfMember_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_AddressOfMember_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_AddressOfMember_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_AddressOfMember_Proxy$MH() { return ITypeInfo_AddressOfMember_Proxy$MH_; }

    static final FunctionDescriptor ITypeInfo_AddressOfMember_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_AddressOfMember_Stub$FUNC() { return ITypeInfo_AddressOfMember_Stub$FUNC_; }

    static final MethodHandle ITypeInfo_AddressOfMember_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_AddressOfMember_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_AddressOfMember_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_AddressOfMember_Stub$MH() { return ITypeInfo_AddressOfMember_Stub$MH_; }

    static final FunctionDescriptor ITypeInfo_CreateInstance_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_CreateInstance_Proxy$FUNC() { return ITypeInfo_CreateInstance_Proxy$FUNC_; }

    static final MethodHandle ITypeInfo_CreateInstance_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_CreateInstance_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_CreateInstance_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_CreateInstance_Proxy$MH() { return ITypeInfo_CreateInstance_Proxy$MH_; }

    static final FunctionDescriptor ITypeInfo_CreateInstance_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_CreateInstance_Stub$FUNC() { return ITypeInfo_CreateInstance_Stub$FUNC_; }

    static final MethodHandle ITypeInfo_CreateInstance_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_CreateInstance_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_CreateInstance_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_CreateInstance_Stub$MH() { return ITypeInfo_CreateInstance_Stub$MH_; }

    static final FunctionDescriptor ITypeInfo_GetContainingTypeLib_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_GetContainingTypeLib_Proxy$FUNC() { return ITypeInfo_GetContainingTypeLib_Proxy$FUNC_; }

    static final MethodHandle ITypeInfo_GetContainingTypeLib_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_GetContainingTypeLib_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_GetContainingTypeLib_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_GetContainingTypeLib_Proxy$MH() { return ITypeInfo_GetContainingTypeLib_Proxy$MH_; }

    static final FunctionDescriptor ITypeInfo_GetContainingTypeLib_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_GetContainingTypeLib_Stub$FUNC() { return ITypeInfo_GetContainingTypeLib_Stub$FUNC_; }

    static final MethodHandle ITypeInfo_GetContainingTypeLib_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_GetContainingTypeLib_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_GetContainingTypeLib_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_GetContainingTypeLib_Stub$MH() { return ITypeInfo_GetContainingTypeLib_Stub$MH_; }

    static final FunctionDescriptor ITypeInfo_ReleaseTypeAttr_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_ReleaseTypeAttr_Proxy$FUNC() { return ITypeInfo_ReleaseTypeAttr_Proxy$FUNC_; }

    static final MethodHandle ITypeInfo_ReleaseTypeAttr_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_ReleaseTypeAttr_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        ITypeInfo_ReleaseTypeAttr_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_ReleaseTypeAttr_Proxy$MH() { return ITypeInfo_ReleaseTypeAttr_Proxy$MH_; }

    static final FunctionDescriptor ITypeInfo_ReleaseTypeAttr_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_ReleaseTypeAttr_Stub$FUNC() { return ITypeInfo_ReleaseTypeAttr_Stub$FUNC_; }

    static final MethodHandle ITypeInfo_ReleaseTypeAttr_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_ReleaseTypeAttr_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_ReleaseTypeAttr_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_ReleaseTypeAttr_Stub$MH() { return ITypeInfo_ReleaseTypeAttr_Stub$MH_; }

    static final FunctionDescriptor ITypeInfo_ReleaseFuncDesc_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_ReleaseFuncDesc_Proxy$FUNC() { return ITypeInfo_ReleaseFuncDesc_Proxy$FUNC_; }

    static final MethodHandle ITypeInfo_ReleaseFuncDesc_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_ReleaseFuncDesc_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        ITypeInfo_ReleaseFuncDesc_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_ReleaseFuncDesc_Proxy$MH() { return ITypeInfo_ReleaseFuncDesc_Proxy$MH_; }

    static final FunctionDescriptor ITypeInfo_ReleaseFuncDesc_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_ReleaseFuncDesc_Stub$FUNC() { return ITypeInfo_ReleaseFuncDesc_Stub$FUNC_; }

    static final MethodHandle ITypeInfo_ReleaseFuncDesc_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_ReleaseFuncDesc_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_ReleaseFuncDesc_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_ReleaseFuncDesc_Stub$MH() { return ITypeInfo_ReleaseFuncDesc_Stub$MH_; }

    static final FunctionDescriptor ITypeInfo_ReleaseVarDesc_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_ReleaseVarDesc_Proxy$FUNC() { return ITypeInfo_ReleaseVarDesc_Proxy$FUNC_; }

    static final MethodHandle ITypeInfo_ReleaseVarDesc_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_ReleaseVarDesc_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        ITypeInfo_ReleaseVarDesc_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_ReleaseVarDesc_Proxy$MH() { return ITypeInfo_ReleaseVarDesc_Proxy$MH_; }

    static final FunctionDescriptor ITypeInfo_ReleaseVarDesc_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo_ReleaseVarDesc_Stub$FUNC() { return ITypeInfo_ReleaseVarDesc_Stub$FUNC_; }

    static final MethodHandle ITypeInfo_ReleaseVarDesc_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo_ReleaseVarDesc_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo_ReleaseVarDesc_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo_ReleaseVarDesc_Stub$MH() { return ITypeInfo_ReleaseVarDesc_Stub$MH_; }

    static final FunctionDescriptor ITypeInfo2_GetDocumentation2_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo2_GetDocumentation2_Proxy$FUNC() { return ITypeInfo2_GetDocumentation2_Proxy$FUNC_; }

    static final MethodHandle ITypeInfo2_GetDocumentation2_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo2_GetDocumentation2_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo2_GetDocumentation2_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo2_GetDocumentation2_Proxy$MH() { return ITypeInfo2_GetDocumentation2_Proxy$MH_; }

    static final FunctionDescriptor ITypeInfo2_GetDocumentation2_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeInfo2_GetDocumentation2_Stub$FUNC() { return ITypeInfo2_GetDocumentation2_Stub$FUNC_; }

    static final MethodHandle ITypeInfo2_GetDocumentation2_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeInfo2_GetDocumentation2_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeInfo2_GetDocumentation2_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeInfo2_GetDocumentation2_Stub$MH() { return ITypeInfo2_GetDocumentation2_Stub$MH_; }

    static final FunctionDescriptor ITypeLib_GetTypeInfoCount_Proxy$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeLib_GetTypeInfoCount_Proxy$FUNC() { return ITypeLib_GetTypeInfoCount_Proxy$FUNC_; }

    static final MethodHandle ITypeLib_GetTypeInfoCount_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeLib_GetTypeInfoCount_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeLib_GetTypeInfoCount_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeLib_GetTypeInfoCount_Proxy$MH() { return ITypeLib_GetTypeInfoCount_Proxy$MH_; }

    static final FunctionDescriptor ITypeLib_GetTypeInfoCount_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeLib_GetTypeInfoCount_Stub$FUNC() { return ITypeLib_GetTypeInfoCount_Stub$FUNC_; }

    static final MethodHandle ITypeLib_GetTypeInfoCount_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeLib_GetTypeInfoCount_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeLib_GetTypeInfoCount_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeLib_GetTypeInfoCount_Stub$MH() { return ITypeLib_GetTypeInfoCount_Stub$MH_; }

    static final FunctionDescriptor ITypeLib_GetLibAttr_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeLib_GetLibAttr_Proxy$FUNC() { return ITypeLib_GetLibAttr_Proxy$FUNC_; }

    static final MethodHandle ITypeLib_GetLibAttr_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeLib_GetLibAttr_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeLib_GetLibAttr_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeLib_GetLibAttr_Proxy$MH() { return ITypeLib_GetLibAttr_Proxy$MH_; }

    static final FunctionDescriptor ITypeLib_GetLibAttr_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeLib_GetLibAttr_Stub$FUNC() { return ITypeLib_GetLibAttr_Stub$FUNC_; }

    static final MethodHandle ITypeLib_GetLibAttr_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeLib_GetLibAttr_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeLib_GetLibAttr_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeLib_GetLibAttr_Stub$MH() { return ITypeLib_GetLibAttr_Stub$MH_; }

    static final FunctionDescriptor ITypeLib_GetDocumentation_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeLib_GetDocumentation_Proxy$FUNC() { return ITypeLib_GetDocumentation_Proxy$FUNC_; }

    static final MethodHandle ITypeLib_GetDocumentation_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeLib_GetDocumentation_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeLib_GetDocumentation_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeLib_GetDocumentation_Proxy$MH() { return ITypeLib_GetDocumentation_Proxy$MH_; }

    static final FunctionDescriptor ITypeLib_GetDocumentation_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeLib_GetDocumentation_Stub$FUNC() { return ITypeLib_GetDocumentation_Stub$FUNC_; }

    static final MethodHandle ITypeLib_GetDocumentation_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeLib_GetDocumentation_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeLib_GetDocumentation_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeLib_GetDocumentation_Stub$MH() { return ITypeLib_GetDocumentation_Stub$MH_; }

    static final FunctionDescriptor ITypeLib_IsName_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeLib_IsName_Proxy$FUNC() { return ITypeLib_IsName_Proxy$FUNC_; }

    static final MethodHandle ITypeLib_IsName_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeLib_IsName_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ITypeLib_IsName_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeLib_IsName_Proxy$MH() { return ITypeLib_IsName_Proxy$MH_; }

    static final FunctionDescriptor ITypeLib_IsName_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeLib_IsName_Stub$FUNC() { return ITypeLib_IsName_Stub$FUNC_; }

    static final MethodHandle ITypeLib_IsName_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeLib_IsName_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeLib_IsName_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeLib_IsName_Stub$MH() { return ITypeLib_IsName_Stub$MH_; }

    static final FunctionDescriptor ITypeLib_FindName_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeLib_FindName_Proxy$FUNC() { return ITypeLib_FindName_Proxy$FUNC_; }

    static final MethodHandle ITypeLib_FindName_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeLib_FindName_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeLib_FindName_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeLib_FindName_Proxy$MH() { return ITypeLib_FindName_Proxy$MH_; }

    static final FunctionDescriptor ITypeLib_FindName_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeLib_FindName_Stub$FUNC() { return ITypeLib_FindName_Stub$FUNC_; }

    static final MethodHandle ITypeLib_FindName_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeLib_FindName_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeLib_FindName_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeLib_FindName_Stub$MH() { return ITypeLib_FindName_Stub$MH_; }

    static final FunctionDescriptor ITypeLib_ReleaseTLibAttr_Proxy$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeLib_ReleaseTLibAttr_Proxy$FUNC() { return ITypeLib_ReleaseTLibAttr_Proxy$FUNC_; }

    static final MethodHandle ITypeLib_ReleaseTLibAttr_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeLib_ReleaseTLibAttr_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        ITypeLib_ReleaseTLibAttr_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeLib_ReleaseTLibAttr_Proxy$MH() { return ITypeLib_ReleaseTLibAttr_Proxy$MH_; }

    static final FunctionDescriptor ITypeLib_ReleaseTLibAttr_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeLib_ReleaseTLibAttr_Stub$FUNC() { return ITypeLib_ReleaseTLibAttr_Stub$FUNC_; }

    static final MethodHandle ITypeLib_ReleaseTLibAttr_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeLib_ReleaseTLibAttr_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeLib_ReleaseTLibAttr_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeLib_ReleaseTLibAttr_Stub$MH() { return ITypeLib_ReleaseTLibAttr_Stub$MH_; }

    static final FunctionDescriptor ITypeLib2_GetLibStatistics_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeLib2_GetLibStatistics_Proxy$FUNC() { return ITypeLib2_GetLibStatistics_Proxy$FUNC_; }

    static final MethodHandle ITypeLib2_GetLibStatistics_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeLib2_GetLibStatistics_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeLib2_GetLibStatistics_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeLib2_GetLibStatistics_Proxy$MH() { return ITypeLib2_GetLibStatistics_Proxy$MH_; }

    static final FunctionDescriptor ITypeLib2_GetLibStatistics_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeLib2_GetLibStatistics_Stub$FUNC() { return ITypeLib2_GetLibStatistics_Stub$FUNC_; }

    static final MethodHandle ITypeLib2_GetLibStatistics_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeLib2_GetLibStatistics_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeLib2_GetLibStatistics_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeLib2_GetLibStatistics_Stub$MH() { return ITypeLib2_GetLibStatistics_Stub$MH_; }

    static final FunctionDescriptor ITypeLib2_GetDocumentation2_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeLib2_GetDocumentation2_Proxy$FUNC() { return ITypeLib2_GetDocumentation2_Proxy$FUNC_; }

    static final MethodHandle ITypeLib2_GetDocumentation2_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeLib2_GetDocumentation2_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeLib2_GetDocumentation2_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeLib2_GetDocumentation2_Proxy$MH() { return ITypeLib2_GetDocumentation2_Proxy$MH_; }

    static final FunctionDescriptor ITypeLib2_GetDocumentation2_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ITypeLib2_GetDocumentation2_Stub$FUNC() { return ITypeLib2_GetDocumentation2_Stub$FUNC_; }

    static final MethodHandle ITypeLib2_GetDocumentation2_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ITypeLib2_GetDocumentation2_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ITypeLib2_GetDocumentation2_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ITypeLib2_GetDocumentation2_Stub$MH() { return ITypeLib2_GetDocumentation2_Stub$MH_; }

    static final FunctionDescriptor IPropertyBag_Read_Proxy$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IPropertyBag_Read_Proxy$FUNC() { return IPropertyBag_Read_Proxy$FUNC_; }

    static final MethodHandle IPropertyBag_Read_Proxy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IPropertyBag_Read_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        IPropertyBag_Read_Proxy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IPropertyBag_Read_Proxy$MH() { return IPropertyBag_Read_Proxy$MH_; }

    static final FunctionDescriptor IPropertyBag_Read_Stub$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor IPropertyBag_Read_Stub$FUNC() { return IPropertyBag_Read_Stub$FUNC_; }

    static final MethodHandle IPropertyBag_Read_Stub$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "IPropertyBag_Read_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        IPropertyBag_Read_Stub$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle IPropertyBag_Read_Stub$MH() { return IPropertyBag_Read_Stub$MH_; }

    static final MemoryLayout tagVersionedStream$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("guidVersion"),
        C_POINTER.withName("pStream")
    ).withName("tagVersionedStream");
    static final jdk.incubator.foreign.MemoryLayout tagVersionedStream$struct$LAYOUT() { return tagVersionedStream$struct$LAYOUT_; }

    static final MemoryLayout tagVersionedStream$pStream$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagVersionedStream$pStream$LAYOUT() { return tagVersionedStream$pStream$LAYOUT_; }

    static final VarHandle tagVersionedStream$pStream$VH_ = MemoryHandles.asAddressVarHandle(tagVersionedStream$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pStream")));
    static final java.lang.invoke.VarHandle tagVersionedStream$pStream$VH() { return tagVersionedStream$pStream$VH_; }

    static final MemoryLayout tagCAC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCAC");
    static final jdk.incubator.foreign.MemoryLayout tagCAC$struct$LAYOUT() { return tagCAC$struct$LAYOUT_; }

    static final MemoryLayout tagCAC$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCAC$cElems$LAYOUT() { return tagCAC$cElems$LAYOUT_; }

    static final VarHandle tagCAC$cElems$VH_ = tagCAC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCAC$cElems$VH() { return tagCAC$cElems$VH_; }

    static final MemoryLayout tagCAC$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCAC$pElems$LAYOUT() { return tagCAC$pElems$LAYOUT_; }

    static final VarHandle tagCAC$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCAC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCAC$pElems$VH() { return tagCAC$pElems$VH_; }

    static final MemoryLayout tagCAUB$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCAUB");
    static final jdk.incubator.foreign.MemoryLayout tagCAUB$struct$LAYOUT() { return tagCAUB$struct$LAYOUT_; }

    static final MemoryLayout tagCAUB$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCAUB$cElems$LAYOUT() { return tagCAUB$cElems$LAYOUT_; }

    static final VarHandle tagCAUB$cElems$VH_ = tagCAUB$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCAUB$cElems$VH() { return tagCAUB$cElems$VH_; }

    static final MemoryLayout tagCAUB$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCAUB$pElems$LAYOUT() { return tagCAUB$pElems$LAYOUT_; }

    static final VarHandle tagCAUB$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCAUB$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCAUB$pElems$VH() { return tagCAUB$pElems$VH_; }

    static final MemoryLayout tagCAI$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCAI");
    static final jdk.incubator.foreign.MemoryLayout tagCAI$struct$LAYOUT() { return tagCAI$struct$LAYOUT_; }

    static final MemoryLayout tagCAI$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCAI$cElems$LAYOUT() { return tagCAI$cElems$LAYOUT_; }

    static final VarHandle tagCAI$cElems$VH_ = tagCAI$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCAI$cElems$VH() { return tagCAI$cElems$VH_; }

    static final MemoryLayout tagCAI$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCAI$pElems$LAYOUT() { return tagCAI$pElems$LAYOUT_; }

    static final VarHandle tagCAI$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCAI$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCAI$pElems$VH() { return tagCAI$pElems$VH_; }

    static final MemoryLayout tagCAUI$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCAUI");
    static final jdk.incubator.foreign.MemoryLayout tagCAUI$struct$LAYOUT() { return tagCAUI$struct$LAYOUT_; }

    static final MemoryLayout tagCAUI$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCAUI$cElems$LAYOUT() { return tagCAUI$cElems$LAYOUT_; }

    static final VarHandle tagCAUI$cElems$VH_ = tagCAUI$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCAUI$cElems$VH() { return tagCAUI$cElems$VH_; }

    static final MemoryLayout tagCAUI$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCAUI$pElems$LAYOUT() { return tagCAUI$pElems$LAYOUT_; }

    static final VarHandle tagCAUI$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCAUI$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCAUI$pElems$VH() { return tagCAUI$pElems$VH_; }

    static final MemoryLayout tagCAL$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCAL");
    static final jdk.incubator.foreign.MemoryLayout tagCAL$struct$LAYOUT() { return tagCAL$struct$LAYOUT_; }

    static final MemoryLayout tagCAL$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCAL$cElems$LAYOUT() { return tagCAL$cElems$LAYOUT_; }

    static final VarHandle tagCAL$cElems$VH_ = tagCAL$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCAL$cElems$VH() { return tagCAL$cElems$VH_; }

    static final MemoryLayout tagCAL$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCAL$pElems$LAYOUT() { return tagCAL$pElems$LAYOUT_; }

    static final VarHandle tagCAL$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCAL$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCAL$pElems$VH() { return tagCAL$pElems$VH_; }

    static final MemoryLayout tagCAUL$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCAUL");
    static final jdk.incubator.foreign.MemoryLayout tagCAUL$struct$LAYOUT() { return tagCAUL$struct$LAYOUT_; }

    static final MemoryLayout tagCAUL$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCAUL$cElems$LAYOUT() { return tagCAUL$cElems$LAYOUT_; }

    static final VarHandle tagCAUL$cElems$VH_ = tagCAUL$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCAUL$cElems$VH() { return tagCAUL$cElems$VH_; }

    static final MemoryLayout tagCAUL$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCAUL$pElems$LAYOUT() { return tagCAUL$pElems$LAYOUT_; }

    static final VarHandle tagCAUL$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCAUL$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCAUL$pElems$VH() { return tagCAUL$pElems$VH_; }

    static final MemoryLayout tagCAFLT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCAFLT");
    static final jdk.incubator.foreign.MemoryLayout tagCAFLT$struct$LAYOUT() { return tagCAFLT$struct$LAYOUT_; }

    static final MemoryLayout tagCAFLT$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCAFLT$cElems$LAYOUT() { return tagCAFLT$cElems$LAYOUT_; }

    static final VarHandle tagCAFLT$cElems$VH_ = tagCAFLT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCAFLT$cElems$VH() { return tagCAFLT$cElems$VH_; }

    static final MemoryLayout tagCAFLT$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCAFLT$pElems$LAYOUT() { return tagCAFLT$pElems$LAYOUT_; }

    static final VarHandle tagCAFLT$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCAFLT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCAFLT$pElems$VH() { return tagCAFLT$pElems$VH_; }

    static final MemoryLayout tagCADBL$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCADBL");
    static final jdk.incubator.foreign.MemoryLayout tagCADBL$struct$LAYOUT() { return tagCADBL$struct$LAYOUT_; }

    static final MemoryLayout tagCADBL$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCADBL$cElems$LAYOUT() { return tagCADBL$cElems$LAYOUT_; }

    static final VarHandle tagCADBL$cElems$VH_ = tagCADBL$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCADBL$cElems$VH() { return tagCADBL$cElems$VH_; }

    static final MemoryLayout tagCADBL$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCADBL$pElems$LAYOUT() { return tagCADBL$pElems$LAYOUT_; }

    static final VarHandle tagCADBL$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCADBL$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCADBL$pElems$VH() { return tagCADBL$pElems$VH_; }

    static final MemoryLayout tagCACY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCACY");
    static final jdk.incubator.foreign.MemoryLayout tagCACY$struct$LAYOUT() { return tagCACY$struct$LAYOUT_; }

    static final MemoryLayout tagCACY$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCACY$cElems$LAYOUT() { return tagCACY$cElems$LAYOUT_; }

    static final VarHandle tagCACY$cElems$VH_ = tagCACY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCACY$cElems$VH() { return tagCACY$cElems$VH_; }

    static final MemoryLayout tagCACY$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCACY$pElems$LAYOUT() { return tagCACY$pElems$LAYOUT_; }

    static final VarHandle tagCACY$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCACY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCACY$pElems$VH() { return tagCACY$pElems$VH_; }

    static final MemoryLayout tagCADATE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCADATE");
    static final jdk.incubator.foreign.MemoryLayout tagCADATE$struct$LAYOUT() { return tagCADATE$struct$LAYOUT_; }

    static final MemoryLayout tagCADATE$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCADATE$cElems$LAYOUT() { return tagCADATE$cElems$LAYOUT_; }

    static final VarHandle tagCADATE$cElems$VH_ = tagCADATE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCADATE$cElems$VH() { return tagCADATE$cElems$VH_; }

    static final MemoryLayout tagCADATE$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCADATE$pElems$LAYOUT() { return tagCADATE$pElems$LAYOUT_; }

    static final VarHandle tagCADATE$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCADATE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCADATE$pElems$VH() { return tagCADATE$pElems$VH_; }

    static final MemoryLayout tagCABSTR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCABSTR");
    static final jdk.incubator.foreign.MemoryLayout tagCABSTR$struct$LAYOUT() { return tagCABSTR$struct$LAYOUT_; }

    static final MemoryLayout tagCABSTR$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCABSTR$cElems$LAYOUT() { return tagCABSTR$cElems$LAYOUT_; }

    static final VarHandle tagCABSTR$cElems$VH_ = tagCABSTR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCABSTR$cElems$VH() { return tagCABSTR$cElems$VH_; }

    static final MemoryLayout tagCABSTR$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCABSTR$pElems$LAYOUT() { return tagCABSTR$pElems$LAYOUT_; }

    static final VarHandle tagCABSTR$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCABSTR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCABSTR$pElems$VH() { return tagCABSTR$pElems$VH_; }

    static final MemoryLayout tagCABSTRBLOB$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCABSTRBLOB");
    static final jdk.incubator.foreign.MemoryLayout tagCABSTRBLOB$struct$LAYOUT() { return tagCABSTRBLOB$struct$LAYOUT_; }

    static final MemoryLayout tagCABSTRBLOB$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCABSTRBLOB$cElems$LAYOUT() { return tagCABSTRBLOB$cElems$LAYOUT_; }

    static final VarHandle tagCABSTRBLOB$cElems$VH_ = tagCABSTRBLOB$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCABSTRBLOB$cElems$VH() { return tagCABSTRBLOB$cElems$VH_; }

    static final MemoryLayout tagCABSTRBLOB$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCABSTRBLOB$pElems$LAYOUT() { return tagCABSTRBLOB$pElems$LAYOUT_; }

    static final VarHandle tagCABSTRBLOB$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCABSTRBLOB$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCABSTRBLOB$pElems$VH() { return tagCABSTRBLOB$pElems$VH_; }

    static final MemoryLayout tagCABOOL$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCABOOL");
    static final jdk.incubator.foreign.MemoryLayout tagCABOOL$struct$LAYOUT() { return tagCABOOL$struct$LAYOUT_; }

    static final MemoryLayout tagCABOOL$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCABOOL$cElems$LAYOUT() { return tagCABOOL$cElems$LAYOUT_; }

    static final VarHandle tagCABOOL$cElems$VH_ = tagCABOOL$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCABOOL$cElems$VH() { return tagCABOOL$cElems$VH_; }

    static final MemoryLayout tagCABOOL$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCABOOL$pElems$LAYOUT() { return tagCABOOL$pElems$LAYOUT_; }

    static final VarHandle tagCABOOL$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCABOOL$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCABOOL$pElems$VH() { return tagCABOOL$pElems$VH_; }

    static final MemoryLayout tagCASCODE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCASCODE");
    static final jdk.incubator.foreign.MemoryLayout tagCASCODE$struct$LAYOUT() { return tagCASCODE$struct$LAYOUT_; }

    static final MemoryLayout tagCASCODE$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCASCODE$cElems$LAYOUT() { return tagCASCODE$cElems$LAYOUT_; }

    static final VarHandle tagCASCODE$cElems$VH_ = tagCASCODE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCASCODE$cElems$VH() { return tagCASCODE$cElems$VH_; }

    static final MemoryLayout tagCASCODE$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCASCODE$pElems$LAYOUT() { return tagCASCODE$pElems$LAYOUT_; }

    static final VarHandle tagCASCODE$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCASCODE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCASCODE$pElems$VH() { return tagCASCODE$pElems$VH_; }

    static final MemoryLayout tagCAPROPVARIANT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCAPROPVARIANT");
    static final jdk.incubator.foreign.MemoryLayout tagCAPROPVARIANT$struct$LAYOUT() { return tagCAPROPVARIANT$struct$LAYOUT_; }

    static final MemoryLayout tagCAPROPVARIANT$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCAPROPVARIANT$cElems$LAYOUT() { return tagCAPROPVARIANT$cElems$LAYOUT_; }

    static final VarHandle tagCAPROPVARIANT$cElems$VH_ = tagCAPROPVARIANT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCAPROPVARIANT$cElems$VH() { return tagCAPROPVARIANT$cElems$VH_; }

    static final MemoryLayout tagCAPROPVARIANT$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCAPROPVARIANT$pElems$LAYOUT() { return tagCAPROPVARIANT$pElems$LAYOUT_; }

    static final VarHandle tagCAPROPVARIANT$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCAPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCAPROPVARIANT$pElems$VH() { return tagCAPROPVARIANT$pElems$VH_; }

    static final MemoryLayout tagCAH$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCAH");
    static final jdk.incubator.foreign.MemoryLayout tagCAH$struct$LAYOUT() { return tagCAH$struct$LAYOUT_; }

    static final MemoryLayout tagCAH$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCAH$cElems$LAYOUT() { return tagCAH$cElems$LAYOUT_; }

    static final VarHandle tagCAH$cElems$VH_ = tagCAH$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCAH$cElems$VH() { return tagCAH$cElems$VH_; }

    static final MemoryLayout tagCAH$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCAH$pElems$LAYOUT() { return tagCAH$pElems$LAYOUT_; }

    static final VarHandle tagCAH$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCAH$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCAH$pElems$VH() { return tagCAH$pElems$VH_; }

    static final MemoryLayout tagCAUH$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCAUH");
    static final jdk.incubator.foreign.MemoryLayout tagCAUH$struct$LAYOUT() { return tagCAUH$struct$LAYOUT_; }

    static final MemoryLayout tagCAUH$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCAUH$cElems$LAYOUT() { return tagCAUH$cElems$LAYOUT_; }

    static final VarHandle tagCAUH$cElems$VH_ = tagCAUH$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCAUH$cElems$VH() { return tagCAUH$cElems$VH_; }

    static final MemoryLayout tagCAUH$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCAUH$pElems$LAYOUT() { return tagCAUH$pElems$LAYOUT_; }

    static final VarHandle tagCAUH$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCAUH$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCAUH$pElems$VH() { return tagCAUH$pElems$VH_; }

    static final MemoryLayout tagCALPSTR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCALPSTR");
    static final jdk.incubator.foreign.MemoryLayout tagCALPSTR$struct$LAYOUT() { return tagCALPSTR$struct$LAYOUT_; }

    static final MemoryLayout tagCALPSTR$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCALPSTR$cElems$LAYOUT() { return tagCALPSTR$cElems$LAYOUT_; }

    static final VarHandle tagCALPSTR$cElems$VH_ = tagCALPSTR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCALPSTR$cElems$VH() { return tagCALPSTR$cElems$VH_; }

    static final MemoryLayout tagCALPSTR$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCALPSTR$pElems$LAYOUT() { return tagCALPSTR$pElems$LAYOUT_; }

    static final VarHandle tagCALPSTR$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCALPSTR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCALPSTR$pElems$VH() { return tagCALPSTR$pElems$VH_; }

    static final MemoryLayout tagCALPWSTR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCALPWSTR");
    static final jdk.incubator.foreign.MemoryLayout tagCALPWSTR$struct$LAYOUT() { return tagCALPWSTR$struct$LAYOUT_; }

    static final MemoryLayout tagCALPWSTR$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCALPWSTR$cElems$LAYOUT() { return tagCALPWSTR$cElems$LAYOUT_; }

    static final VarHandle tagCALPWSTR$cElems$VH_ = tagCALPWSTR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCALPWSTR$cElems$VH() { return tagCALPWSTR$cElems$VH_; }

    static final MemoryLayout tagCALPWSTR$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCALPWSTR$pElems$LAYOUT() { return tagCALPWSTR$pElems$LAYOUT_; }

    static final VarHandle tagCALPWSTR$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCALPWSTR$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCALPWSTR$pElems$VH() { return tagCALPWSTR$pElems$VH_; }

    static final MemoryLayout tagCAFILETIME$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCAFILETIME");
    static final jdk.incubator.foreign.MemoryLayout tagCAFILETIME$struct$LAYOUT() { return tagCAFILETIME$struct$LAYOUT_; }

    static final MemoryLayout tagCAFILETIME$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCAFILETIME$cElems$LAYOUT() { return tagCAFILETIME$cElems$LAYOUT_; }

    static final VarHandle tagCAFILETIME$cElems$VH_ = tagCAFILETIME$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCAFILETIME$cElems$VH() { return tagCAFILETIME$cElems$VH_; }

    static final MemoryLayout tagCAFILETIME$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCAFILETIME$pElems$LAYOUT() { return tagCAFILETIME$pElems$LAYOUT_; }

    static final VarHandle tagCAFILETIME$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCAFILETIME$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCAFILETIME$pElems$VH() { return tagCAFILETIME$pElems$VH_; }

    static final MemoryLayout tagCACLIPDATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCACLIPDATA");
    static final jdk.incubator.foreign.MemoryLayout tagCACLIPDATA$struct$LAYOUT() { return tagCACLIPDATA$struct$LAYOUT_; }

    static final MemoryLayout tagCACLIPDATA$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCACLIPDATA$cElems$LAYOUT() { return tagCACLIPDATA$cElems$LAYOUT_; }

    static final VarHandle tagCACLIPDATA$cElems$VH_ = tagCACLIPDATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCACLIPDATA$cElems$VH() { return tagCACLIPDATA$cElems$VH_; }

    static final MemoryLayout tagCACLIPDATA$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCACLIPDATA$pElems$LAYOUT() { return tagCACLIPDATA$pElems$LAYOUT_; }

    static final VarHandle tagCACLIPDATA$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCACLIPDATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCACLIPDATA$pElems$VH() { return tagCACLIPDATA$pElems$VH_; }

    static final MemoryLayout tagCACLSID$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cElems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pElems")
    ).withName("tagCACLSID");
    static final jdk.incubator.foreign.MemoryLayout tagCACLSID$struct$LAYOUT() { return tagCACLSID$struct$LAYOUT_; }

    static final MemoryLayout tagCACLSID$cElems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCACLSID$cElems$LAYOUT() { return tagCACLSID$cElems$LAYOUT_; }

    static final VarHandle tagCACLSID$cElems$VH_ = tagCACLSID$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cElems"));
    static final java.lang.invoke.VarHandle tagCACLSID$cElems$VH() { return tagCACLSID$cElems$VH_; }

    static final MemoryLayout tagCACLSID$pElems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagCACLSID$pElems$LAYOUT() { return tagCACLSID$pElems$LAYOUT_; }

    static final VarHandle tagCACLSID$pElems$VH_ = MemoryHandles.asAddressVarHandle(tagCACLSID$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pElems")));
    static final java.lang.invoke.VarHandle tagCACLSID$pElems$VH() { return tagCACLSID$pElems$VH_; }

    static final MemoryLayout tagPROPVARIANT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("vt"),
        C_SHORT.withName("wReserved1"),
        C_SHORT.withName("wReserved2"),
        C_SHORT.withName("wReserved3"),
        C_CHAR.withName("cVal"),
        C_CHAR.withName("bVal"),
        C_SHORT.withName("iVal"),
        C_SHORT.withName("uiVal"),
        C_LONG.withName("lVal"),
        C_LONG.withName("ulVal"),
        C_INT.withName("intVal"),
        C_INT.withName("uintVal"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("hVal"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("uhVal"),
        C_FLOAT.withName("fltVal"),
        C_DOUBLE.withName("dblVal"),
        C_SHORT.withName("boolVal"),
        C_SHORT.withName("__OBSOLETE__VARIANT_BOOL"),
        C_LONG.withName("scode"),
        MemoryLayout.ofUnion(
            C_LONG.withName("Lo"),
            C_LONG.withName("Hi"),
            C_LONGLONG.withName("int64")
        ).withName("cyVal"),
        C_DOUBLE.withName("date"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("filetime"),
        C_POINTER.withName("puuid"),
        C_POINTER.withName("pclipdata"),
        C_POINTER.withName("bstrVal"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbSize"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pData")
        ).withName("bstrblobVal"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cbSize"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pBlobData")
        ).withName("blob"),
        C_POINTER.withName("pszVal"),
        C_POINTER.withName("pwszVal"),
        C_POINTER.withName("punkVal"),
        C_POINTER.withName("pdispVal"),
        C_POINTER.withName("pStream"),
        C_POINTER.withName("pStorage"),
        C_POINTER.withName("pVersionedStream"),
        C_POINTER.withName("parray"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("cac"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("caub"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("cai"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("caui"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("cal"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("caul"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("cah"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("cauh"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("caflt"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("cadbl"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("cabool"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("cascode"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("cacy"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("cadate"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("cafiletime"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("cauuid"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("caclipdata"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("cabstr"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("cabstrblob"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("calpstr"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("calpwstr"),
        MemoryLayout.ofStruct(
            C_LONG.withName("cElems"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("pElems")
        ).withName("capropvar"),
        C_POINTER.withName("pcVal"),
        C_POINTER.withName("pbVal"),
        C_POINTER.withName("piVal"),
        C_POINTER.withName("puiVal"),
        C_POINTER.withName("plVal"),
        C_POINTER.withName("pulVal"),
        C_POINTER.withName("pintVal"),
        C_POINTER.withName("puintVal"),
        C_POINTER.withName("pfltVal"),
        C_POINTER.withName("pdblVal"),
        C_POINTER.withName("pboolVal"),
        C_POINTER.withName("pdecVal"),
        C_POINTER.withName("pscode"),
        C_POINTER.withName("pcyVal"),
        C_POINTER.withName("pdate"),
        C_POINTER.withName("pbstrVal"),
        C_POINTER.withName("ppunkVal"),
        C_POINTER.withName("ppdispVal"),
        C_POINTER.withName("pparray"),
        C_POINTER.withName("pvarVal"),
        MemoryLayout.ofStruct(
            C_SHORT.withName("wReserved"),
            C_CHAR.withName("scale"),
            C_CHAR.withName("sign"),
            C_SHORT.withName("signscale"),
            C_LONG.withName("Hi32"),
            C_LONG.withName("Lo32"),
            C_LONG.withName("Mid32"),
            C_LONGLONG.withName("Lo64")
        ).withName("decVal")
    ).withName("tagPROPVARIANT");
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$struct$LAYOUT() { return tagPROPVARIANT$struct$LAYOUT_; }

    static final MemoryLayout tagPROPVARIANT$vt$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$vt$LAYOUT() { return tagPROPVARIANT$vt$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$vt$VH_ = tagPROPVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("vt"));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$vt$VH() { return tagPROPVARIANT$vt$VH_; }

    static final MemoryLayout tagPROPVARIANT$wReserved1$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$wReserved1$LAYOUT() { return tagPROPVARIANT$wReserved1$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$wReserved1$VH_ = tagPROPVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReserved1"));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$wReserved1$VH() { return tagPROPVARIANT$wReserved1$VH_; }

    static final MemoryLayout tagPROPVARIANT$wReserved2$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$wReserved2$LAYOUT() { return tagPROPVARIANT$wReserved2$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$wReserved2$VH_ = tagPROPVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReserved2"));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$wReserved2$VH() { return tagPROPVARIANT$wReserved2$VH_; }

    static final MemoryLayout tagPROPVARIANT$wReserved3$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$wReserved3$LAYOUT() { return tagPROPVARIANT$wReserved3$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$wReserved3$VH_ = tagPROPVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wReserved3"));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$wReserved3$VH() { return tagPROPVARIANT$wReserved3$VH_; }

    static final MemoryLayout tagPROPVARIANT$cVal$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$cVal$LAYOUT() { return tagPROPVARIANT$cVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$cVal$VH_ = tagPROPVARIANT$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("cVal"));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$cVal$VH() { return tagPROPVARIANT$cVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$bVal$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$bVal$LAYOUT() { return tagPROPVARIANT$bVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$bVal$VH_ = tagPROPVARIANT$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("bVal"));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$bVal$VH() { return tagPROPVARIANT$bVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$iVal$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$iVal$LAYOUT() { return tagPROPVARIANT$iVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$iVal$VH_ = tagPROPVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("iVal"));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$iVal$VH() { return tagPROPVARIANT$iVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$uiVal$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$uiVal$LAYOUT() { return tagPROPVARIANT$uiVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$uiVal$VH_ = tagPROPVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("uiVal"));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$uiVal$VH() { return tagPROPVARIANT$uiVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$lVal$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$lVal$LAYOUT() { return tagPROPVARIANT$lVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$lVal$VH_ = tagPROPVARIANT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("lVal"));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$lVal$VH() { return tagPROPVARIANT$lVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$ulVal$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$ulVal$LAYOUT() { return tagPROPVARIANT$ulVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$ulVal$VH_ = tagPROPVARIANT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulVal"));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$ulVal$VH() { return tagPROPVARIANT$ulVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$intVal$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$intVal$LAYOUT() { return tagPROPVARIANT$intVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$intVal$VH_ = tagPROPVARIANT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("intVal"));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$intVal$VH() { return tagPROPVARIANT$intVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$uintVal$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$uintVal$LAYOUT() { return tagPROPVARIANT$uintVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$uintVal$VH_ = tagPROPVARIANT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uintVal"));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$uintVal$VH() { return tagPROPVARIANT$uintVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$fltVal$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$fltVal$LAYOUT() { return tagPROPVARIANT$fltVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$fltVal$VH_ = tagPROPVARIANT$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("fltVal"));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$fltVal$VH() { return tagPROPVARIANT$fltVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$dblVal$LAYOUT_ = C_DOUBLE;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$dblVal$LAYOUT() { return tagPROPVARIANT$dblVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$dblVal$VH_ = tagPROPVARIANT$struct$LAYOUT_.varHandle(double.class, MemoryLayout.PathElement.groupElement("dblVal"));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$dblVal$VH() { return tagPROPVARIANT$dblVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$boolVal$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$boolVal$LAYOUT() { return tagPROPVARIANT$boolVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$boolVal$VH_ = tagPROPVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("boolVal"));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$boolVal$VH() { return tagPROPVARIANT$boolVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$__OBSOLETE__VARIANT_BOOL$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$__OBSOLETE__VARIANT_BOOL$LAYOUT() { return tagPROPVARIANT$__OBSOLETE__VARIANT_BOOL$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$__OBSOLETE__VARIANT_BOOL$VH_ = tagPROPVARIANT$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__OBSOLETE__VARIANT_BOOL"));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$__OBSOLETE__VARIANT_BOOL$VH() { return tagPROPVARIANT$__OBSOLETE__VARIANT_BOOL$VH_; }

    static final MemoryLayout tagPROPVARIANT$scode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$scode$LAYOUT() { return tagPROPVARIANT$scode$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$scode$VH_ = tagPROPVARIANT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("scode"));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$scode$VH() { return tagPROPVARIANT$scode$VH_; }

    static final MemoryLayout tagPROPVARIANT$date$LAYOUT_ = C_DOUBLE;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$date$LAYOUT() { return tagPROPVARIANT$date$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$date$VH_ = tagPROPVARIANT$struct$LAYOUT_.varHandle(double.class, MemoryLayout.PathElement.groupElement("date"));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$date$VH() { return tagPROPVARIANT$date$VH_; }

    static final MemoryLayout tagPROPVARIANT$puuid$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$puuid$LAYOUT() { return tagPROPVARIANT$puuid$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$puuid$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("puuid")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$puuid$VH() { return tagPROPVARIANT$puuid$VH_; }

    static final MemoryLayout tagPROPVARIANT$pclipdata$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pclipdata$LAYOUT() { return tagPROPVARIANT$pclipdata$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pclipdata$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pclipdata")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pclipdata$VH() { return tagPROPVARIANT$pclipdata$VH_; }

    static final MemoryLayout tagPROPVARIANT$bstrVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$bstrVal$LAYOUT() { return tagPROPVARIANT$bstrVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$bstrVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("bstrVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$bstrVal$VH() { return tagPROPVARIANT$bstrVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$pszVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pszVal$LAYOUT() { return tagPROPVARIANT$pszVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pszVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pszVal$VH() { return tagPROPVARIANT$pszVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$pwszVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pwszVal$LAYOUT() { return tagPROPVARIANT$pwszVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pwszVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pwszVal$VH() { return tagPROPVARIANT$pwszVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$punkVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$punkVal$LAYOUT() { return tagPROPVARIANT$punkVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$punkVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("punkVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$punkVal$VH() { return tagPROPVARIANT$punkVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$pdispVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pdispVal$LAYOUT() { return tagPROPVARIANT$pdispVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pdispVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pdispVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pdispVal$VH() { return tagPROPVARIANT$pdispVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$pStream$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pStream$LAYOUT() { return tagPROPVARIANT$pStream$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pStream$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pStream")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pStream$VH() { return tagPROPVARIANT$pStream$VH_; }

    static final MemoryLayout tagPROPVARIANT$pStorage$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pStorage$LAYOUT() { return tagPROPVARIANT$pStorage$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pStorage$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pStorage")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pStorage$VH() { return tagPROPVARIANT$pStorage$VH_; }

    static final MemoryLayout tagPROPVARIANT$pVersionedStream$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pVersionedStream$LAYOUT() { return tagPROPVARIANT$pVersionedStream$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pVersionedStream$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pVersionedStream")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pVersionedStream$VH() { return tagPROPVARIANT$pVersionedStream$VH_; }

    static final MemoryLayout tagPROPVARIANT$parray$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$parray$LAYOUT() { return tagPROPVARIANT$parray$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$parray$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("parray")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$parray$VH() { return tagPROPVARIANT$parray$VH_; }

    static final MemoryLayout tagPROPVARIANT$pcVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pcVal$LAYOUT() { return tagPROPVARIANT$pcVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pcVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pcVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pcVal$VH() { return tagPROPVARIANT$pcVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$pbVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pbVal$LAYOUT() { return tagPROPVARIANT$pbVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pbVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pbVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pbVal$VH() { return tagPROPVARIANT$pbVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$piVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$piVal$LAYOUT() { return tagPROPVARIANT$piVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$piVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("piVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$piVal$VH() { return tagPROPVARIANT$piVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$puiVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$puiVal$LAYOUT() { return tagPROPVARIANT$puiVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$puiVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("puiVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$puiVal$VH() { return tagPROPVARIANT$puiVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$plVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$plVal$LAYOUT() { return tagPROPVARIANT$plVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$plVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("plVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$plVal$VH() { return tagPROPVARIANT$plVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$pulVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pulVal$LAYOUT() { return tagPROPVARIANT$pulVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pulVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pulVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pulVal$VH() { return tagPROPVARIANT$pulVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$pintVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pintVal$LAYOUT() { return tagPROPVARIANT$pintVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pintVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pintVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pintVal$VH() { return tagPROPVARIANT$pintVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$puintVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$puintVal$LAYOUT() { return tagPROPVARIANT$puintVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$puintVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("puintVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$puintVal$VH() { return tagPROPVARIANT$puintVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$pfltVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pfltVal$LAYOUT() { return tagPROPVARIANT$pfltVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pfltVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pfltVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pfltVal$VH() { return tagPROPVARIANT$pfltVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$pdblVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pdblVal$LAYOUT() { return tagPROPVARIANT$pdblVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pdblVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pdblVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pdblVal$VH() { return tagPROPVARIANT$pdblVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$pboolVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pboolVal$LAYOUT() { return tagPROPVARIANT$pboolVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pboolVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pboolVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pboolVal$VH() { return tagPROPVARIANT$pboolVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$pdecVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pdecVal$LAYOUT() { return tagPROPVARIANT$pdecVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pdecVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pdecVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pdecVal$VH() { return tagPROPVARIANT$pdecVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$pscode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pscode$LAYOUT() { return tagPROPVARIANT$pscode$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pscode$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pscode")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pscode$VH() { return tagPROPVARIANT$pscode$VH_; }

    static final MemoryLayout tagPROPVARIANT$pcyVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pcyVal$LAYOUT() { return tagPROPVARIANT$pcyVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pcyVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pcyVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pcyVal$VH() { return tagPROPVARIANT$pcyVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$pdate$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pdate$LAYOUT() { return tagPROPVARIANT$pdate$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pdate$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pdate")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pdate$VH() { return tagPROPVARIANT$pdate$VH_; }

    static final MemoryLayout tagPROPVARIANT$pbstrVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pbstrVal$LAYOUT() { return tagPROPVARIANT$pbstrVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pbstrVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pbstrVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pbstrVal$VH() { return tagPROPVARIANT$pbstrVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$ppunkVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$ppunkVal$LAYOUT() { return tagPROPVARIANT$ppunkVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$ppunkVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ppunkVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$ppunkVal$VH() { return tagPROPVARIANT$ppunkVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$ppdispVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$ppdispVal$LAYOUT() { return tagPROPVARIANT$ppdispVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$ppdispVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ppdispVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$ppdispVal$VH() { return tagPROPVARIANT$ppdispVal$VH_; }

    static final MemoryLayout tagPROPVARIANT$pparray$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pparray$LAYOUT() { return tagPROPVARIANT$pparray$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pparray$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pparray")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pparray$VH() { return tagPROPVARIANT$pparray$VH_; }

    static final MemoryLayout tagPROPVARIANT$pvarVal$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPVARIANT$pvarVal$LAYOUT() { return tagPROPVARIANT$pvarVal$LAYOUT_; }

    static final VarHandle tagPROPVARIANT$pvarVal$VH_ = MemoryHandles.asAddressVarHandle(tagPROPVARIANT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pvarVal")));
    static final java.lang.invoke.VarHandle tagPROPVARIANT$pvarVal$VH() { return tagPROPVARIANT$pvarVal$VH_; }

    static final MemoryLayout tagPROPSPEC$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ulKind"),
        MemoryLayout.ofPaddingBits(32),
        C_LONG.withName("propid"),
        C_POINTER.withName("lpwstr")
    ).withName("tagPROPSPEC");
    static final jdk.incubator.foreign.MemoryLayout tagPROPSPEC$struct$LAYOUT() { return tagPROPSPEC$struct$LAYOUT_; }

    static final MemoryLayout tagPROPSPEC$ulKind$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPROPSPEC$ulKind$LAYOUT() { return tagPROPSPEC$ulKind$LAYOUT_; }

    static final VarHandle tagPROPSPEC$ulKind$VH_ = tagPROPSPEC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulKind"));
    static final java.lang.invoke.VarHandle tagPROPSPEC$ulKind$VH() { return tagPROPSPEC$ulKind$VH_; }

    static final MemoryLayout tagPROPSPEC$propid$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagPROPSPEC$propid$LAYOUT() { return tagPROPSPEC$propid$LAYOUT_; }

    static final VarHandle tagPROPSPEC$propid$VH_ = tagPROPSPEC$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("propid"));
    static final java.lang.invoke.VarHandle tagPROPSPEC$propid$VH() { return tagPROPSPEC$propid$VH_; }

    static final MemoryLayout tagPROPSPEC$lpwstr$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagPROPSPEC$lpwstr$LAYOUT() { return tagPROPSPEC$lpwstr$LAYOUT_; }

    static final VarHandle tagPROPSPEC$lpwstr$VH_ = MemoryHandles.asAddressVarHandle(tagPROPSPEC$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpwstr")));
    static final java.lang.invoke.VarHandle tagPROPSPEC$lpwstr$VH() { return tagPROPSPEC$lpwstr$VH_; }

    static final MemoryLayout tagSTATPROPSTG$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpwstrName"),
        C_LONG.withName("propid"),
        C_SHORT.withName("vt"),
        MemoryLayout.ofPaddingBits(16)
    ).withName("tagSTATPROPSTG");
    static final jdk.incubator.foreign.MemoryLayout tagSTATPROPSTG$struct$LAYOUT() { return tagSTATPROPSTG$struct$LAYOUT_; }

    static final MemoryLayout tagSTATPROPSTG$lpwstrName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagSTATPROPSTG$lpwstrName$LAYOUT() { return tagSTATPROPSTG$lpwstrName$LAYOUT_; }

    static final VarHandle tagSTATPROPSTG$lpwstrName$VH_ = MemoryHandles.asAddressVarHandle(tagSTATPROPSTG$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpwstrName")));
    static final java.lang.invoke.VarHandle tagSTATPROPSTG$lpwstrName$VH() { return tagSTATPROPSTG$lpwstrName$VH_; }

    static final MemoryLayout tagSTATPROPSTG$propid$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagSTATPROPSTG$propid$LAYOUT() { return tagSTATPROPSTG$propid$LAYOUT_; }

    static final VarHandle tagSTATPROPSTG$propid$VH_ = tagSTATPROPSTG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("propid"));
    static final java.lang.invoke.VarHandle tagSTATPROPSTG$propid$VH() { return tagSTATPROPSTG$propid$VH_; }

    static final MemoryLayout tagSTATPROPSTG$vt$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagSTATPROPSTG$vt$LAYOUT() { return tagSTATPROPSTG$vt$LAYOUT_; }

    static final VarHandle tagSTATPROPSTG$vt$VH_ = tagSTATPROPSTG$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("vt"));
    static final java.lang.invoke.VarHandle tagSTATPROPSTG$vt$VH() { return tagSTATPROPSTG$vt$VH_; }

    static final MemoryLayout tagSTATPROPSETSTG$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("fmtid"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("clsid"),
        C_LONG.withName("grfFlags"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("mtime"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("ctime"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwLowDateTime"),
            C_LONG.withName("dwHighDateTime")
        ).withName("atime"),
        C_LONG.withName("dwOSVersion")
    ).withName("tagSTATPROPSETSTG");
    static final jdk.incubator.foreign.MemoryLayout tagSTATPROPSETSTG$struct$LAYOUT() { return tagSTATPROPSETSTG$struct$LAYOUT_; }

    static final MemoryLayout tagSTATPROPSETSTG$grfFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagSTATPROPSETSTG$grfFlags$LAYOUT() { return tagSTATPROPSETSTG$grfFlags$LAYOUT_; }

    static final VarHandle tagSTATPROPSETSTG$grfFlags$VH_ = tagSTATPROPSETSTG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("grfFlags"));
    static final java.lang.invoke.VarHandle tagSTATPROPSETSTG$grfFlags$VH() { return tagSTATPROPSETSTG$grfFlags$VH_; }

    static final MemoryLayout tagSTATPROPSETSTG$dwOSVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagSTATPROPSETSTG$dwOSVersion$LAYOUT() { return tagSTATPROPSETSTG$dwOSVersion$LAYOUT_; }

    static final VarHandle tagSTATPROPSETSTG$dwOSVersion$VH_ = tagSTATPROPSETSTG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwOSVersion"));
    static final java.lang.invoke.VarHandle tagSTATPROPSETSTG$dwOSVersion$VH() { return tagSTATPROPSETSTG$dwOSVersion$VH_; }

    static final MemoryLayout __MIDL_itf_propidlbase_0000_0000_v0_0_c_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_propidlbase_0000_0000_v0_0_c_ifspec$LAYOUT() { return __MIDL_itf_propidlbase_0000_0000_v0_0_c_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_propidlbase_0000_0000_v0_0_c_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_propidlbase_0000_0000_v0_0_c_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_propidlbase_0000_0000_v0_0_c_ifspec$VH() { return __MIDL_itf_propidlbase_0000_0000_v0_0_c_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_propidlbase_0000_0000_v0_0_c_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_propidlbase_0000_0000_v0_0_c_ifspec", __MIDL_itf_propidlbase_0000_0000_v0_0_c_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_propidlbase_0000_0000_v0_0_c_ifspec$SEGMENT() { return __MIDL_itf_propidlbase_0000_0000_v0_0_c_ifspec$SEGMENT_; }

    static final MemoryLayout __MIDL_itf_propidlbase_0000_0000_v0_0_s_ifspec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __MIDL_itf_propidlbase_0000_0000_v0_0_s_ifspec$LAYOUT() { return __MIDL_itf_propidlbase_0000_0000_v0_0_s_ifspec$LAYOUT_; }

    static final VarHandle __MIDL_itf_propidlbase_0000_0000_v0_0_s_ifspec$VH_ = MemoryHandles.asAddressVarHandle(__MIDL_itf_propidlbase_0000_0000_v0_0_s_ifspec$LAYOUT_.varHandle(long.class));
    static final java.lang.invoke.VarHandle __MIDL_itf_propidlbase_0000_0000_v0_0_s_ifspec$VH() { return __MIDL_itf_propidlbase_0000_0000_v0_0_s_ifspec$VH_; }

    static final MemorySegment __MIDL_itf_propidlbase_0000_0000_v0_0_s_ifspec$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__MIDL_itf_propidlbase_0000_0000_v0_0_s_ifspec", __MIDL_itf_propidlbase_0000_0000_v0_0_s_ifspec$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __MIDL_itf_propidlbase_0000_0000_v0_0_s_ifspec$SEGMENT() { return __MIDL_itf_propidlbase_0000_0000_v0_0_s_ifspec$SEGMENT_; }

    static final MemoryLayout IID_IPropertyStorage$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IPropertyStorage$LAYOUT() { return IID_IPropertyStorage$LAYOUT_; }

    static final MemorySegment IID_IPropertyStorage$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IPropertyStorage", IID_IPropertyStorage$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IPropertyStorage$SEGMENT() { return IID_IPropertyStorage$SEGMENT_; }

    static final MemoryLayout IPropertyStorageVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("ReadMultiple"),
        C_POINTER.withName("WriteMultiple"),
        C_POINTER.withName("DeleteMultiple"),
        C_POINTER.withName("ReadPropertyNames"),
        C_POINTER.withName("WritePropertyNames"),
        C_POINTER.withName("DeletePropertyNames"),
        C_POINTER.withName("Commit"),
        C_POINTER.withName("Revert"),
        C_POINTER.withName("Enum"),
        C_POINTER.withName("SetTimes"),
        C_POINTER.withName("SetClass"),
        C_POINTER.withName("Stat")
    ).withName("IPropertyStorageVtbl");
    static final jdk.incubator.foreign.MemoryLayout IPropertyStorageVtbl$struct$LAYOUT() { return IPropertyStorageVtbl$struct$LAYOUT_; }

    static final MemoryLayout IPropertyStorageVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertyStorageVtbl$QueryInterface$LAYOUT() { return IPropertyStorageVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IPropertyStorageVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IPropertyStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IPropertyStorageVtbl$QueryInterface$VH() { return IPropertyStorageVtbl$QueryInterface$VH_; }

    static final MemoryLayout IPropertyStorageVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertyStorageVtbl$AddRef$LAYOUT() { return IPropertyStorageVtbl$AddRef$LAYOUT_; }

    static final VarHandle IPropertyStorageVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IPropertyStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IPropertyStorageVtbl$AddRef$VH() { return IPropertyStorageVtbl$AddRef$VH_; }

    static final MemoryLayout IPropertyStorageVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertyStorageVtbl$Release$LAYOUT() { return IPropertyStorageVtbl$Release$LAYOUT_; }

    static final VarHandle IPropertyStorageVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IPropertyStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IPropertyStorageVtbl$Release$VH() { return IPropertyStorageVtbl$Release$VH_; }

    static final MemoryLayout IPropertyStorageVtbl$ReadMultiple$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertyStorageVtbl$ReadMultiple$LAYOUT() { return IPropertyStorageVtbl$ReadMultiple$LAYOUT_; }

    static final VarHandle IPropertyStorageVtbl$ReadMultiple$VH_ = MemoryHandles.asAddressVarHandle(IPropertyStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReadMultiple")));
    static final java.lang.invoke.VarHandle IPropertyStorageVtbl$ReadMultiple$VH() { return IPropertyStorageVtbl$ReadMultiple$VH_; }

    static final MemoryLayout IPropertyStorageVtbl$WriteMultiple$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertyStorageVtbl$WriteMultiple$LAYOUT() { return IPropertyStorageVtbl$WriteMultiple$LAYOUT_; }

    static final VarHandle IPropertyStorageVtbl$WriteMultiple$VH_ = MemoryHandles.asAddressVarHandle(IPropertyStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("WriteMultiple")));
    static final java.lang.invoke.VarHandle IPropertyStorageVtbl$WriteMultiple$VH() { return IPropertyStorageVtbl$WriteMultiple$VH_; }

    static final MemoryLayout IPropertyStorageVtbl$DeleteMultiple$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertyStorageVtbl$DeleteMultiple$LAYOUT() { return IPropertyStorageVtbl$DeleteMultiple$LAYOUT_; }

    static final VarHandle IPropertyStorageVtbl$DeleteMultiple$VH_ = MemoryHandles.asAddressVarHandle(IPropertyStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DeleteMultiple")));
    static final java.lang.invoke.VarHandle IPropertyStorageVtbl$DeleteMultiple$VH() { return IPropertyStorageVtbl$DeleteMultiple$VH_; }

    static final MemoryLayout IPropertyStorageVtbl$ReadPropertyNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertyStorageVtbl$ReadPropertyNames$LAYOUT() { return IPropertyStorageVtbl$ReadPropertyNames$LAYOUT_; }

    static final VarHandle IPropertyStorageVtbl$ReadPropertyNames$VH_ = MemoryHandles.asAddressVarHandle(IPropertyStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReadPropertyNames")));
    static final java.lang.invoke.VarHandle IPropertyStorageVtbl$ReadPropertyNames$VH() { return IPropertyStorageVtbl$ReadPropertyNames$VH_; }

    static final MemoryLayout IPropertyStorageVtbl$WritePropertyNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertyStorageVtbl$WritePropertyNames$LAYOUT() { return IPropertyStorageVtbl$WritePropertyNames$LAYOUT_; }

    static final VarHandle IPropertyStorageVtbl$WritePropertyNames$VH_ = MemoryHandles.asAddressVarHandle(IPropertyStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("WritePropertyNames")));
    static final java.lang.invoke.VarHandle IPropertyStorageVtbl$WritePropertyNames$VH() { return IPropertyStorageVtbl$WritePropertyNames$VH_; }

    static final MemoryLayout IPropertyStorageVtbl$DeletePropertyNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertyStorageVtbl$DeletePropertyNames$LAYOUT() { return IPropertyStorageVtbl$DeletePropertyNames$LAYOUT_; }

    static final VarHandle IPropertyStorageVtbl$DeletePropertyNames$VH_ = MemoryHandles.asAddressVarHandle(IPropertyStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DeletePropertyNames")));
    static final java.lang.invoke.VarHandle IPropertyStorageVtbl$DeletePropertyNames$VH() { return IPropertyStorageVtbl$DeletePropertyNames$VH_; }

    static final MemoryLayout IPropertyStorageVtbl$Commit$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertyStorageVtbl$Commit$LAYOUT() { return IPropertyStorageVtbl$Commit$LAYOUT_; }

    static final VarHandle IPropertyStorageVtbl$Commit$VH_ = MemoryHandles.asAddressVarHandle(IPropertyStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Commit")));
    static final java.lang.invoke.VarHandle IPropertyStorageVtbl$Commit$VH() { return IPropertyStorageVtbl$Commit$VH_; }

    static final MemoryLayout IPropertyStorageVtbl$Revert$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertyStorageVtbl$Revert$LAYOUT() { return IPropertyStorageVtbl$Revert$LAYOUT_; }

    static final VarHandle IPropertyStorageVtbl$Revert$VH_ = MemoryHandles.asAddressVarHandle(IPropertyStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Revert")));
    static final java.lang.invoke.VarHandle IPropertyStorageVtbl$Revert$VH() { return IPropertyStorageVtbl$Revert$VH_; }

    static final MemoryLayout IPropertyStorageVtbl$Enum$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertyStorageVtbl$Enum$LAYOUT() { return IPropertyStorageVtbl$Enum$LAYOUT_; }

    static final VarHandle IPropertyStorageVtbl$Enum$VH_ = MemoryHandles.asAddressVarHandle(IPropertyStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Enum")));
    static final java.lang.invoke.VarHandle IPropertyStorageVtbl$Enum$VH() { return IPropertyStorageVtbl$Enum$VH_; }

    static final MemoryLayout IPropertyStorageVtbl$SetTimes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertyStorageVtbl$SetTimes$LAYOUT() { return IPropertyStorageVtbl$SetTimes$LAYOUT_; }

    static final VarHandle IPropertyStorageVtbl$SetTimes$VH_ = MemoryHandles.asAddressVarHandle(IPropertyStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetTimes")));
    static final java.lang.invoke.VarHandle IPropertyStorageVtbl$SetTimes$VH() { return IPropertyStorageVtbl$SetTimes$VH_; }

    static final MemoryLayout IPropertyStorageVtbl$SetClass$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertyStorageVtbl$SetClass$LAYOUT() { return IPropertyStorageVtbl$SetClass$LAYOUT_; }

    static final VarHandle IPropertyStorageVtbl$SetClass$VH_ = MemoryHandles.asAddressVarHandle(IPropertyStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SetClass")));
    static final java.lang.invoke.VarHandle IPropertyStorageVtbl$SetClass$VH() { return IPropertyStorageVtbl$SetClass$VH_; }

    static final MemoryLayout IPropertyStorageVtbl$Stat$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertyStorageVtbl$Stat$LAYOUT() { return IPropertyStorageVtbl$Stat$LAYOUT_; }

    static final VarHandle IPropertyStorageVtbl$Stat$VH_ = MemoryHandles.asAddressVarHandle(IPropertyStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Stat")));
    static final java.lang.invoke.VarHandle IPropertyStorageVtbl$Stat$VH() { return IPropertyStorageVtbl$Stat$VH_; }

    static final MemoryLayout IPropertyStorage$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IPropertyStorage");
    static final jdk.incubator.foreign.MemoryLayout IPropertyStorage$struct$LAYOUT() { return IPropertyStorage$struct$LAYOUT_; }

    static final MemoryLayout IPropertyStorage$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertyStorage$lpVtbl$LAYOUT() { return IPropertyStorage$lpVtbl$LAYOUT_; }

    static final VarHandle IPropertyStorage$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IPropertyStorage$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IPropertyStorage$lpVtbl$VH() { return IPropertyStorage$lpVtbl$VH_; }

    static final MemoryLayout IID_IPropertySetStorage$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IPropertySetStorage$LAYOUT() { return IID_IPropertySetStorage$LAYOUT_; }

    static final MemorySegment IID_IPropertySetStorage$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IPropertySetStorage", IID_IPropertySetStorage$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IPropertySetStorage$SEGMENT() { return IID_IPropertySetStorage$SEGMENT_; }

    static final MemoryLayout IPropertySetStorageVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Create"),
        C_POINTER.withName("Open"),
        C_POINTER.withName("Delete"),
        C_POINTER.withName("Enum")
    ).withName("IPropertySetStorageVtbl");
    static final jdk.incubator.foreign.MemoryLayout IPropertySetStorageVtbl$struct$LAYOUT() { return IPropertySetStorageVtbl$struct$LAYOUT_; }

    static final MemoryLayout IPropertySetStorageVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertySetStorageVtbl$QueryInterface$LAYOUT() { return IPropertySetStorageVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IPropertySetStorageVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IPropertySetStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IPropertySetStorageVtbl$QueryInterface$VH() { return IPropertySetStorageVtbl$QueryInterface$VH_; }

    static final MemoryLayout IPropertySetStorageVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertySetStorageVtbl$AddRef$LAYOUT() { return IPropertySetStorageVtbl$AddRef$LAYOUT_; }

    static final VarHandle IPropertySetStorageVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IPropertySetStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IPropertySetStorageVtbl$AddRef$VH() { return IPropertySetStorageVtbl$AddRef$VH_; }

    static final MemoryLayout IPropertySetStorageVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertySetStorageVtbl$Release$LAYOUT() { return IPropertySetStorageVtbl$Release$LAYOUT_; }

    static final VarHandle IPropertySetStorageVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IPropertySetStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IPropertySetStorageVtbl$Release$VH() { return IPropertySetStorageVtbl$Release$VH_; }

    static final MemoryLayout IPropertySetStorageVtbl$Create$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertySetStorageVtbl$Create$LAYOUT() { return IPropertySetStorageVtbl$Create$LAYOUT_; }

    static final VarHandle IPropertySetStorageVtbl$Create$VH_ = MemoryHandles.asAddressVarHandle(IPropertySetStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Create")));
    static final java.lang.invoke.VarHandle IPropertySetStorageVtbl$Create$VH() { return IPropertySetStorageVtbl$Create$VH_; }

    static final MemoryLayout IPropertySetStorageVtbl$Open$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertySetStorageVtbl$Open$LAYOUT() { return IPropertySetStorageVtbl$Open$LAYOUT_; }

    static final VarHandle IPropertySetStorageVtbl$Open$VH_ = MemoryHandles.asAddressVarHandle(IPropertySetStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Open")));
    static final java.lang.invoke.VarHandle IPropertySetStorageVtbl$Open$VH() { return IPropertySetStorageVtbl$Open$VH_; }

    static final MemoryLayout IPropertySetStorageVtbl$Delete$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertySetStorageVtbl$Delete$LAYOUT() { return IPropertySetStorageVtbl$Delete$LAYOUT_; }

    static final VarHandle IPropertySetStorageVtbl$Delete$VH_ = MemoryHandles.asAddressVarHandle(IPropertySetStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Delete")));
    static final java.lang.invoke.VarHandle IPropertySetStorageVtbl$Delete$VH() { return IPropertySetStorageVtbl$Delete$VH_; }

    static final MemoryLayout IPropertySetStorageVtbl$Enum$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertySetStorageVtbl$Enum$LAYOUT() { return IPropertySetStorageVtbl$Enum$LAYOUT_; }

    static final VarHandle IPropertySetStorageVtbl$Enum$VH_ = MemoryHandles.asAddressVarHandle(IPropertySetStorageVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Enum")));
    static final java.lang.invoke.VarHandle IPropertySetStorageVtbl$Enum$VH() { return IPropertySetStorageVtbl$Enum$VH_; }

    static final MemoryLayout IPropertySetStorage$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IPropertySetStorage");
    static final jdk.incubator.foreign.MemoryLayout IPropertySetStorage$struct$LAYOUT() { return IPropertySetStorage$struct$LAYOUT_; }

    static final MemoryLayout IPropertySetStorage$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IPropertySetStorage$lpVtbl$LAYOUT() { return IPropertySetStorage$lpVtbl$LAYOUT_; }

    static final VarHandle IPropertySetStorage$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IPropertySetStorage$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IPropertySetStorage$lpVtbl$VH() { return IPropertySetStorage$lpVtbl$VH_; }

    static final MemoryLayout IID_IEnumSTATPROPSTG$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IEnumSTATPROPSTG$LAYOUT() { return IID_IEnumSTATPROPSTG$LAYOUT_; }

    static final MemorySegment IID_IEnumSTATPROPSTG$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IEnumSTATPROPSTG", IID_IEnumSTATPROPSTG$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IEnumSTATPROPSTG$SEGMENT() { return IID_IEnumSTATPROPSTG$SEGMENT_; }

    static final MemoryLayout IEnumSTATPROPSTGVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("Next"),
        C_POINTER.withName("Skip"),
        C_POINTER.withName("Reset"),
        C_POINTER.withName("Clone")
    ).withName("IEnumSTATPROPSTGVtbl");
    static final jdk.incubator.foreign.MemoryLayout IEnumSTATPROPSTGVtbl$struct$LAYOUT() { return IEnumSTATPROPSTGVtbl$struct$LAYOUT_; }

    static final MemoryLayout IEnumSTATPROPSTGVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumSTATPROPSTGVtbl$QueryInterface$LAYOUT() { return IEnumSTATPROPSTGVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IEnumSTATPROPSTGVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IEnumSTATPROPSTGVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IEnumSTATPROPSTGVtbl$QueryInterface$VH() { return IEnumSTATPROPSTGVtbl$QueryInterface$VH_; }

    static final MemoryLayout IEnumSTATPROPSTGVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumSTATPROPSTGVtbl$AddRef$LAYOUT() { return IEnumSTATPROPSTGVtbl$AddRef$LAYOUT_; }

    static final VarHandle IEnumSTATPROPSTGVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IEnumSTATPROPSTGVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IEnumSTATPROPSTGVtbl$AddRef$VH() { return IEnumSTATPROPSTGVtbl$AddRef$VH_; }

    static final MemoryLayout IEnumSTATPROPSTGVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumSTATPROPSTGVtbl$Release$LAYOUT() { return IEnumSTATPROPSTGVtbl$Release$LAYOUT_; }

    static final VarHandle IEnumSTATPROPSTGVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IEnumSTATPROPSTGVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IEnumSTATPROPSTGVtbl$Release$VH() { return IEnumSTATPROPSTGVtbl$Release$VH_; }

    static final MemoryLayout IEnumSTATPROPSTGVtbl$Next$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumSTATPROPSTGVtbl$Next$LAYOUT() { return IEnumSTATPROPSTGVtbl$Next$LAYOUT_; }

    static final VarHandle IEnumSTATPROPSTGVtbl$Next$VH_ = MemoryHandles.asAddressVarHandle(IEnumSTATPROPSTGVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Next")));
    static final java.lang.invoke.VarHandle IEnumSTATPROPSTGVtbl$Next$VH() { return IEnumSTATPROPSTGVtbl$Next$VH_; }

    static final MemoryLayout IEnumSTATPROPSTGVtbl$Skip$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumSTATPROPSTGVtbl$Skip$LAYOUT() { return IEnumSTATPROPSTGVtbl$Skip$LAYOUT_; }

    static final VarHandle IEnumSTATPROPSTGVtbl$Skip$VH_ = MemoryHandles.asAddressVarHandle(IEnumSTATPROPSTGVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Skip")));
    static final java.lang.invoke.VarHandle IEnumSTATPROPSTGVtbl$Skip$VH() { return IEnumSTATPROPSTGVtbl$Skip$VH_; }

    static final MemoryLayout IEnumSTATPROPSTGVtbl$Reset$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumSTATPROPSTGVtbl$Reset$LAYOUT() { return IEnumSTATPROPSTGVtbl$Reset$LAYOUT_; }

    static final VarHandle IEnumSTATPROPSTGVtbl$Reset$VH_ = MemoryHandles.asAddressVarHandle(IEnumSTATPROPSTGVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Reset")));
    static final java.lang.invoke.VarHandle IEnumSTATPROPSTGVtbl$Reset$VH() { return IEnumSTATPROPSTGVtbl$Reset$VH_; }

    static final MemoryLayout IEnumSTATPROPSTGVtbl$Clone$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumSTATPROPSTGVtbl$Clone$LAYOUT() { return IEnumSTATPROPSTGVtbl$Clone$LAYOUT_; }

    static final VarHandle IEnumSTATPROPSTGVtbl$Clone$VH_ = MemoryHandles.asAddressVarHandle(IEnumSTATPROPSTGVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Clone")));
    static final java.lang.invoke.VarHandle IEnumSTATPROPSTGVtbl$Clone$VH() { return IEnumSTATPROPSTGVtbl$Clone$VH_; }

    static final MemoryLayout IEnumSTATPROPSTG$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IEnumSTATPROPSTG");
    static final jdk.incubator.foreign.MemoryLayout IEnumSTATPROPSTG$struct$LAYOUT() { return IEnumSTATPROPSTG$struct$LAYOUT_; }

    static final MemoryLayout IEnumSTATPROPSTG$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IEnumSTATPROPSTG$lpVtbl$LAYOUT() { return IEnumSTATPROPSTG$lpVtbl$LAYOUT_; }

    static final VarHandle IEnumSTATPROPSTG$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IEnumSTATPROPSTG$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IEnumSTATPROPSTG$lpVtbl$VH() { return IEnumSTATPROPSTG$lpVtbl$VH_; }

}

