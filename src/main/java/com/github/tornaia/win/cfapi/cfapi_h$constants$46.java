// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$46 extends cfapi_h$constants$45 {

    /* package-private */ cfapi_h$constants$46() {}
    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("TransportCredentials"),
        C_LONG.withName("Flags"),
        C_LONG.withName("AuthenticationTarget"),
        C_LONG.withName("NumberOfAuthnSchemes"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("AuthnSchemes"),
        C_POINTER.withName("ServerCertificateSubject"),
        C_POINTER.withName("ProxyCredentials"),
        C_LONG.withName("NumberOfProxyAuthnSchemes"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ProxyAuthnSchemes")
    ).withName("_RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A");
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$struct$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$struct$LAYOUT_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$TransportCredentials$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$TransportCredentials$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$TransportCredentials$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$TransportCredentials$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TransportCredentials")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$TransportCredentials$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$TransportCredentials$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$Flags$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$Flags$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$Flags$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$Flags$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$Flags$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$AuthenticationTarget$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$AuthenticationTarget$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$AuthenticationTarget$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$AuthenticationTarget$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthenticationTarget"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$AuthenticationTarget$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$AuthenticationTarget$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$NumberOfAuthnSchemes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$NumberOfAuthnSchemes$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$NumberOfAuthnSchemes$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$NumberOfAuthnSchemes$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfAuthnSchemes"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$NumberOfAuthnSchemes$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$NumberOfAuthnSchemes$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$AuthnSchemes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$AuthnSchemes$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$AuthnSchemes$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$AuthnSchemes$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AuthnSchemes")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$AuthnSchemes$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$AuthnSchemes$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$ServerCertificateSubject$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$ServerCertificateSubject$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$ServerCertificateSubject$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$ServerCertificateSubject$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ServerCertificateSubject")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$ServerCertificateSubject$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$ServerCertificateSubject$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$ProxyCredentials$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$ProxyCredentials$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$ProxyCredentials$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$ProxyCredentials$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ProxyCredentials")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$ProxyCredentials$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$ProxyCredentials$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$NumberOfProxyAuthnSchemes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$NumberOfProxyAuthnSchemes$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$NumberOfProxyAuthnSchemes$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$NumberOfProxyAuthnSchemes$VH_ = _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfProxyAuthnSchemes"));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$NumberOfProxyAuthnSchemes$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$NumberOfProxyAuthnSchemes$VH_; }

    static final MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$ProxyAuthnSchemes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$ProxyAuthnSchemes$LAYOUT() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$ProxyAuthnSchemes$LAYOUT_; }

    static final VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$ProxyAuthnSchemes$VH_ = MemoryHandles.asAddressVarHandle(_RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ProxyAuthnSchemes")));
    static final java.lang.invoke.VarHandle _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$ProxyAuthnSchemes$VH() { return _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A$ProxyAuthnSchemes$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V2_W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Capabilities"),
        C_LONG.withName("IdentityTracking"),
        C_LONG.withName("ImpersonationType"),
        C_LONG.withName("AdditionalSecurityInfoType"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_POINTER.withName("HttpCredentials")
        ).withName("u")
    ).withName("_RPC_SECURITY_QOS_V2_W");
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V2_W$struct$LAYOUT() { return _RPC_SECURITY_QOS_V2_W$struct$LAYOUT_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V2_W$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V2_W$Version$LAYOUT() { return _RPC_SECURITY_QOS_V2_W$Version$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V2_W$Version$VH_ = _RPC_SECURITY_QOS_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V2_W$Version$VH() { return _RPC_SECURITY_QOS_V2_W$Version$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V2_W$Capabilities$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V2_W$Capabilities$LAYOUT() { return _RPC_SECURITY_QOS_V2_W$Capabilities$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V2_W$Capabilities$VH_ = _RPC_SECURITY_QOS_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Capabilities"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V2_W$Capabilities$VH() { return _RPC_SECURITY_QOS_V2_W$Capabilities$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V2_W$IdentityTracking$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V2_W$IdentityTracking$LAYOUT() { return _RPC_SECURITY_QOS_V2_W$IdentityTracking$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V2_W$IdentityTracking$VH_ = _RPC_SECURITY_QOS_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IdentityTracking"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V2_W$IdentityTracking$VH() { return _RPC_SECURITY_QOS_V2_W$IdentityTracking$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V2_W$ImpersonationType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V2_W$ImpersonationType$LAYOUT() { return _RPC_SECURITY_QOS_V2_W$ImpersonationType$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V2_W$ImpersonationType$VH_ = _RPC_SECURITY_QOS_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImpersonationType"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V2_W$ImpersonationType$VH() { return _RPC_SECURITY_QOS_V2_W$ImpersonationType$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V2_W$AdditionalSecurityInfoType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V2_W$AdditionalSecurityInfoType$LAYOUT() { return _RPC_SECURITY_QOS_V2_W$AdditionalSecurityInfoType$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V2_W$AdditionalSecurityInfoType$VH_ = _RPC_SECURITY_QOS_V2_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AdditionalSecurityInfoType"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V2_W$AdditionalSecurityInfoType$VH() { return _RPC_SECURITY_QOS_V2_W$AdditionalSecurityInfoType$VH_; }

    static final MemoryLayout u$HttpCredentials$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout u$HttpCredentials$LAYOUT() { return u$HttpCredentials$LAYOUT_; }

    static final VarHandle u$HttpCredentials$VH_ = MemoryHandles.asAddressVarHandle(u$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("HttpCredentials")));
    static final java.lang.invoke.VarHandle u$HttpCredentials$VH() { return u$HttpCredentials$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V2_A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Capabilities"),
        C_LONG.withName("IdentityTracking"),
        C_LONG.withName("ImpersonationType"),
        C_LONG.withName("AdditionalSecurityInfoType"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_POINTER.withName("HttpCredentials")
        ).withName("u")
    ).withName("_RPC_SECURITY_QOS_V2_A");
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V2_A$struct$LAYOUT() { return _RPC_SECURITY_QOS_V2_A$struct$LAYOUT_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V2_A$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V2_A$Version$LAYOUT() { return _RPC_SECURITY_QOS_V2_A$Version$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V2_A$Version$VH_ = _RPC_SECURITY_QOS_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V2_A$Version$VH() { return _RPC_SECURITY_QOS_V2_A$Version$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V2_A$Capabilities$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V2_A$Capabilities$LAYOUT() { return _RPC_SECURITY_QOS_V2_A$Capabilities$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V2_A$Capabilities$VH_ = _RPC_SECURITY_QOS_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Capabilities"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V2_A$Capabilities$VH() { return _RPC_SECURITY_QOS_V2_A$Capabilities$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V2_A$IdentityTracking$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V2_A$IdentityTracking$LAYOUT() { return _RPC_SECURITY_QOS_V2_A$IdentityTracking$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V2_A$IdentityTracking$VH_ = _RPC_SECURITY_QOS_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IdentityTracking"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V2_A$IdentityTracking$VH() { return _RPC_SECURITY_QOS_V2_A$IdentityTracking$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V2_A$ImpersonationType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V2_A$ImpersonationType$LAYOUT() { return _RPC_SECURITY_QOS_V2_A$ImpersonationType$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V2_A$ImpersonationType$VH_ = _RPC_SECURITY_QOS_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImpersonationType"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V2_A$ImpersonationType$VH() { return _RPC_SECURITY_QOS_V2_A$ImpersonationType$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V2_A$AdditionalSecurityInfoType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V2_A$AdditionalSecurityInfoType$LAYOUT() { return _RPC_SECURITY_QOS_V2_A$AdditionalSecurityInfoType$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V2_A$AdditionalSecurityInfoType$VH_ = _RPC_SECURITY_QOS_V2_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AdditionalSecurityInfoType"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V2_A$AdditionalSecurityInfoType$VH() { return _RPC_SECURITY_QOS_V2_A$AdditionalSecurityInfoType$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V3_W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Capabilities"),
        C_LONG.withName("IdentityTracking"),
        C_LONG.withName("ImpersonationType"),
        C_LONG.withName("AdditionalSecurityInfoType"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_POINTER.withName("HttpCredentials")
        ).withName("u"),
        C_POINTER.withName("Sid")
    ).withName("_RPC_SECURITY_QOS_V3_W");
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V3_W$struct$LAYOUT() { return _RPC_SECURITY_QOS_V3_W$struct$LAYOUT_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V3_W$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V3_W$Version$LAYOUT() { return _RPC_SECURITY_QOS_V3_W$Version$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V3_W$Version$VH_ = _RPC_SECURITY_QOS_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V3_W$Version$VH() { return _RPC_SECURITY_QOS_V3_W$Version$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V3_W$Capabilities$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V3_W$Capabilities$LAYOUT() { return _RPC_SECURITY_QOS_V3_W$Capabilities$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V3_W$Capabilities$VH_ = _RPC_SECURITY_QOS_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Capabilities"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V3_W$Capabilities$VH() { return _RPC_SECURITY_QOS_V3_W$Capabilities$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V3_W$IdentityTracking$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V3_W$IdentityTracking$LAYOUT() { return _RPC_SECURITY_QOS_V3_W$IdentityTracking$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V3_W$IdentityTracking$VH_ = _RPC_SECURITY_QOS_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IdentityTracking"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V3_W$IdentityTracking$VH() { return _RPC_SECURITY_QOS_V3_W$IdentityTracking$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V3_W$ImpersonationType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V3_W$ImpersonationType$LAYOUT() { return _RPC_SECURITY_QOS_V3_W$ImpersonationType$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V3_W$ImpersonationType$VH_ = _RPC_SECURITY_QOS_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImpersonationType"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V3_W$ImpersonationType$VH() { return _RPC_SECURITY_QOS_V3_W$ImpersonationType$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V3_W$AdditionalSecurityInfoType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V3_W$AdditionalSecurityInfoType$LAYOUT() { return _RPC_SECURITY_QOS_V3_W$AdditionalSecurityInfoType$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V3_W$AdditionalSecurityInfoType$VH_ = _RPC_SECURITY_QOS_V3_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AdditionalSecurityInfoType"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V3_W$AdditionalSecurityInfoType$VH() { return _RPC_SECURITY_QOS_V3_W$AdditionalSecurityInfoType$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V3_W$Sid$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V3_W$Sid$LAYOUT() { return _RPC_SECURITY_QOS_V3_W$Sid$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V3_W$Sid$VH_ = MemoryHandles.asAddressVarHandle(_RPC_SECURITY_QOS_V3_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Sid")));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V3_W$Sid$VH() { return _RPC_SECURITY_QOS_V3_W$Sid$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V3_A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Capabilities"),
        C_LONG.withName("IdentityTracking"),
        C_LONG.withName("ImpersonationType"),
        C_LONG.withName("AdditionalSecurityInfoType"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_POINTER.withName("HttpCredentials")
        ).withName("u"),
        C_POINTER.withName("Sid")
    ).withName("_RPC_SECURITY_QOS_V3_A");
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V3_A$struct$LAYOUT() { return _RPC_SECURITY_QOS_V3_A$struct$LAYOUT_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V3_A$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V3_A$Version$LAYOUT() { return _RPC_SECURITY_QOS_V3_A$Version$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V3_A$Version$VH_ = _RPC_SECURITY_QOS_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V3_A$Version$VH() { return _RPC_SECURITY_QOS_V3_A$Version$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V3_A$Capabilities$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V3_A$Capabilities$LAYOUT() { return _RPC_SECURITY_QOS_V3_A$Capabilities$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V3_A$Capabilities$VH_ = _RPC_SECURITY_QOS_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Capabilities"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V3_A$Capabilities$VH() { return _RPC_SECURITY_QOS_V3_A$Capabilities$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V3_A$IdentityTracking$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V3_A$IdentityTracking$LAYOUT() { return _RPC_SECURITY_QOS_V3_A$IdentityTracking$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V3_A$IdentityTracking$VH_ = _RPC_SECURITY_QOS_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IdentityTracking"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V3_A$IdentityTracking$VH() { return _RPC_SECURITY_QOS_V3_A$IdentityTracking$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V3_A$ImpersonationType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V3_A$ImpersonationType$LAYOUT() { return _RPC_SECURITY_QOS_V3_A$ImpersonationType$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V3_A$ImpersonationType$VH_ = _RPC_SECURITY_QOS_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImpersonationType"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V3_A$ImpersonationType$VH() { return _RPC_SECURITY_QOS_V3_A$ImpersonationType$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V3_A$AdditionalSecurityInfoType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V3_A$AdditionalSecurityInfoType$LAYOUT() { return _RPC_SECURITY_QOS_V3_A$AdditionalSecurityInfoType$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V3_A$AdditionalSecurityInfoType$VH_ = _RPC_SECURITY_QOS_V3_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AdditionalSecurityInfoType"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V3_A$AdditionalSecurityInfoType$VH() { return _RPC_SECURITY_QOS_V3_A$AdditionalSecurityInfoType$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V3_A$Sid$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V3_A$Sid$LAYOUT() { return _RPC_SECURITY_QOS_V3_A$Sid$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V3_A$Sid$VH_ = MemoryHandles.asAddressVarHandle(_RPC_SECURITY_QOS_V3_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Sid")));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V3_A$Sid$VH() { return _RPC_SECURITY_QOS_V3_A$Sid$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V4_W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Capabilities"),
        C_LONG.withName("IdentityTracking"),
        C_LONG.withName("ImpersonationType"),
        C_LONG.withName("AdditionalSecurityInfoType"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_POINTER.withName("HttpCredentials")
        ).withName("u"),
        C_POINTER.withName("Sid"),
        C_INT.withName("EffectiveOnly"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_RPC_SECURITY_QOS_V4_W");
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V4_W$struct$LAYOUT() { return _RPC_SECURITY_QOS_V4_W$struct$LAYOUT_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V4_W$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V4_W$Version$LAYOUT() { return _RPC_SECURITY_QOS_V4_W$Version$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V4_W$Version$VH_ = _RPC_SECURITY_QOS_V4_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V4_W$Version$VH() { return _RPC_SECURITY_QOS_V4_W$Version$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V4_W$Capabilities$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V4_W$Capabilities$LAYOUT() { return _RPC_SECURITY_QOS_V4_W$Capabilities$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V4_W$Capabilities$VH_ = _RPC_SECURITY_QOS_V4_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Capabilities"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V4_W$Capabilities$VH() { return _RPC_SECURITY_QOS_V4_W$Capabilities$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V4_W$IdentityTracking$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V4_W$IdentityTracking$LAYOUT() { return _RPC_SECURITY_QOS_V4_W$IdentityTracking$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V4_W$IdentityTracking$VH_ = _RPC_SECURITY_QOS_V4_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IdentityTracking"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V4_W$IdentityTracking$VH() { return _RPC_SECURITY_QOS_V4_W$IdentityTracking$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V4_W$ImpersonationType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V4_W$ImpersonationType$LAYOUT() { return _RPC_SECURITY_QOS_V4_W$ImpersonationType$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V4_W$ImpersonationType$VH_ = _RPC_SECURITY_QOS_V4_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImpersonationType"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V4_W$ImpersonationType$VH() { return _RPC_SECURITY_QOS_V4_W$ImpersonationType$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V4_W$AdditionalSecurityInfoType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V4_W$AdditionalSecurityInfoType$LAYOUT() { return _RPC_SECURITY_QOS_V4_W$AdditionalSecurityInfoType$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V4_W$AdditionalSecurityInfoType$VH_ = _RPC_SECURITY_QOS_V4_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AdditionalSecurityInfoType"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V4_W$AdditionalSecurityInfoType$VH() { return _RPC_SECURITY_QOS_V4_W$AdditionalSecurityInfoType$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V4_W$Sid$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V4_W$Sid$LAYOUT() { return _RPC_SECURITY_QOS_V4_W$Sid$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V4_W$Sid$VH_ = MemoryHandles.asAddressVarHandle(_RPC_SECURITY_QOS_V4_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Sid")));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V4_W$Sid$VH() { return _RPC_SECURITY_QOS_V4_W$Sid$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V4_W$EffectiveOnly$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V4_W$EffectiveOnly$LAYOUT() { return _RPC_SECURITY_QOS_V4_W$EffectiveOnly$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V4_W$EffectiveOnly$VH_ = _RPC_SECURITY_QOS_V4_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EffectiveOnly"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V4_W$EffectiveOnly$VH() { return _RPC_SECURITY_QOS_V4_W$EffectiveOnly$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V4_A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Capabilities"),
        C_LONG.withName("IdentityTracking"),
        C_LONG.withName("ImpersonationType"),
        C_LONG.withName("AdditionalSecurityInfoType"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_POINTER.withName("HttpCredentials")
        ).withName("u"),
        C_POINTER.withName("Sid"),
        C_INT.withName("EffectiveOnly"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_RPC_SECURITY_QOS_V4_A");
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V4_A$struct$LAYOUT() { return _RPC_SECURITY_QOS_V4_A$struct$LAYOUT_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V4_A$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V4_A$Version$LAYOUT() { return _RPC_SECURITY_QOS_V4_A$Version$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V4_A$Version$VH_ = _RPC_SECURITY_QOS_V4_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V4_A$Version$VH() { return _RPC_SECURITY_QOS_V4_A$Version$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V4_A$Capabilities$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V4_A$Capabilities$LAYOUT() { return _RPC_SECURITY_QOS_V4_A$Capabilities$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V4_A$Capabilities$VH_ = _RPC_SECURITY_QOS_V4_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Capabilities"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V4_A$Capabilities$VH() { return _RPC_SECURITY_QOS_V4_A$Capabilities$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V4_A$IdentityTracking$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V4_A$IdentityTracking$LAYOUT() { return _RPC_SECURITY_QOS_V4_A$IdentityTracking$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V4_A$IdentityTracking$VH_ = _RPC_SECURITY_QOS_V4_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IdentityTracking"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V4_A$IdentityTracking$VH() { return _RPC_SECURITY_QOS_V4_A$IdentityTracking$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V4_A$ImpersonationType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V4_A$ImpersonationType$LAYOUT() { return _RPC_SECURITY_QOS_V4_A$ImpersonationType$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V4_A$ImpersonationType$VH_ = _RPC_SECURITY_QOS_V4_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImpersonationType"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V4_A$ImpersonationType$VH() { return _RPC_SECURITY_QOS_V4_A$ImpersonationType$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V4_A$AdditionalSecurityInfoType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V4_A$AdditionalSecurityInfoType$LAYOUT() { return _RPC_SECURITY_QOS_V4_A$AdditionalSecurityInfoType$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V4_A$AdditionalSecurityInfoType$VH_ = _RPC_SECURITY_QOS_V4_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AdditionalSecurityInfoType"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V4_A$AdditionalSecurityInfoType$VH() { return _RPC_SECURITY_QOS_V4_A$AdditionalSecurityInfoType$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V4_A$Sid$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V4_A$Sid$LAYOUT() { return _RPC_SECURITY_QOS_V4_A$Sid$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V4_A$Sid$VH_ = MemoryHandles.asAddressVarHandle(_RPC_SECURITY_QOS_V4_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Sid")));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V4_A$Sid$VH() { return _RPC_SECURITY_QOS_V4_A$Sid$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V4_A$EffectiveOnly$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V4_A$EffectiveOnly$LAYOUT() { return _RPC_SECURITY_QOS_V4_A$EffectiveOnly$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V4_A$EffectiveOnly$VH_ = _RPC_SECURITY_QOS_V4_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EffectiveOnly"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V4_A$EffectiveOnly$VH() { return _RPC_SECURITY_QOS_V4_A$EffectiveOnly$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V5_W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Capabilities"),
        C_LONG.withName("IdentityTracking"),
        C_LONG.withName("ImpersonationType"),
        C_LONG.withName("AdditionalSecurityInfoType"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_POINTER.withName("HttpCredentials")
        ).withName("u"),
        C_POINTER.withName("Sid"),
        C_INT.withName("EffectiveOnly"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ServerSecurityDescriptor")
    ).withName("_RPC_SECURITY_QOS_V5_W");
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V5_W$struct$LAYOUT() { return _RPC_SECURITY_QOS_V5_W$struct$LAYOUT_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V5_W$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V5_W$Version$LAYOUT() { return _RPC_SECURITY_QOS_V5_W$Version$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V5_W$Version$VH_ = _RPC_SECURITY_QOS_V5_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V5_W$Version$VH() { return _RPC_SECURITY_QOS_V5_W$Version$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V5_W$Capabilities$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V5_W$Capabilities$LAYOUT() { return _RPC_SECURITY_QOS_V5_W$Capabilities$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V5_W$Capabilities$VH_ = _RPC_SECURITY_QOS_V5_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Capabilities"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V5_W$Capabilities$VH() { return _RPC_SECURITY_QOS_V5_W$Capabilities$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V5_W$IdentityTracking$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V5_W$IdentityTracking$LAYOUT() { return _RPC_SECURITY_QOS_V5_W$IdentityTracking$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V5_W$IdentityTracking$VH_ = _RPC_SECURITY_QOS_V5_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IdentityTracking"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V5_W$IdentityTracking$VH() { return _RPC_SECURITY_QOS_V5_W$IdentityTracking$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V5_W$ImpersonationType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V5_W$ImpersonationType$LAYOUT() { return _RPC_SECURITY_QOS_V5_W$ImpersonationType$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V5_W$ImpersonationType$VH_ = _RPC_SECURITY_QOS_V5_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImpersonationType"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V5_W$ImpersonationType$VH() { return _RPC_SECURITY_QOS_V5_W$ImpersonationType$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V5_W$AdditionalSecurityInfoType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V5_W$AdditionalSecurityInfoType$LAYOUT() { return _RPC_SECURITY_QOS_V5_W$AdditionalSecurityInfoType$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V5_W$AdditionalSecurityInfoType$VH_ = _RPC_SECURITY_QOS_V5_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AdditionalSecurityInfoType"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V5_W$AdditionalSecurityInfoType$VH() { return _RPC_SECURITY_QOS_V5_W$AdditionalSecurityInfoType$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V5_W$Sid$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V5_W$Sid$LAYOUT() { return _RPC_SECURITY_QOS_V5_W$Sid$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V5_W$Sid$VH_ = MemoryHandles.asAddressVarHandle(_RPC_SECURITY_QOS_V5_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Sid")));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V5_W$Sid$VH() { return _RPC_SECURITY_QOS_V5_W$Sid$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V5_W$EffectiveOnly$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V5_W$EffectiveOnly$LAYOUT() { return _RPC_SECURITY_QOS_V5_W$EffectiveOnly$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V5_W$EffectiveOnly$VH_ = _RPC_SECURITY_QOS_V5_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EffectiveOnly"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V5_W$EffectiveOnly$VH() { return _RPC_SECURITY_QOS_V5_W$EffectiveOnly$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V5_W$ServerSecurityDescriptor$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V5_W$ServerSecurityDescriptor$LAYOUT() { return _RPC_SECURITY_QOS_V5_W$ServerSecurityDescriptor$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V5_W$ServerSecurityDescriptor$VH_ = MemoryHandles.asAddressVarHandle(_RPC_SECURITY_QOS_V5_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ServerSecurityDescriptor")));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V5_W$ServerSecurityDescriptor$VH() { return _RPC_SECURITY_QOS_V5_W$ServerSecurityDescriptor$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V5_A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Capabilities"),
        C_LONG.withName("IdentityTracking"),
        C_LONG.withName("ImpersonationType"),
        C_LONG.withName("AdditionalSecurityInfoType"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofUnion(
            C_POINTER.withName("HttpCredentials")
        ).withName("u"),
        C_POINTER.withName("Sid"),
        C_INT.withName("EffectiveOnly"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ServerSecurityDescriptor")
    ).withName("_RPC_SECURITY_QOS_V5_A");
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V5_A$struct$LAYOUT() { return _RPC_SECURITY_QOS_V5_A$struct$LAYOUT_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V5_A$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V5_A$Version$LAYOUT() { return _RPC_SECURITY_QOS_V5_A$Version$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V5_A$Version$VH_ = _RPC_SECURITY_QOS_V5_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V5_A$Version$VH() { return _RPC_SECURITY_QOS_V5_A$Version$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V5_A$Capabilities$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V5_A$Capabilities$LAYOUT() { return _RPC_SECURITY_QOS_V5_A$Capabilities$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V5_A$Capabilities$VH_ = _RPC_SECURITY_QOS_V5_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Capabilities"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V5_A$Capabilities$VH() { return _RPC_SECURITY_QOS_V5_A$Capabilities$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V5_A$IdentityTracking$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V5_A$IdentityTracking$LAYOUT() { return _RPC_SECURITY_QOS_V5_A$IdentityTracking$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V5_A$IdentityTracking$VH_ = _RPC_SECURITY_QOS_V5_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IdentityTracking"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V5_A$IdentityTracking$VH() { return _RPC_SECURITY_QOS_V5_A$IdentityTracking$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V5_A$ImpersonationType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V5_A$ImpersonationType$LAYOUT() { return _RPC_SECURITY_QOS_V5_A$ImpersonationType$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V5_A$ImpersonationType$VH_ = _RPC_SECURITY_QOS_V5_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImpersonationType"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V5_A$ImpersonationType$VH() { return _RPC_SECURITY_QOS_V5_A$ImpersonationType$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V5_A$AdditionalSecurityInfoType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V5_A$AdditionalSecurityInfoType$LAYOUT() { return _RPC_SECURITY_QOS_V5_A$AdditionalSecurityInfoType$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V5_A$AdditionalSecurityInfoType$VH_ = _RPC_SECURITY_QOS_V5_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AdditionalSecurityInfoType"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V5_A$AdditionalSecurityInfoType$VH() { return _RPC_SECURITY_QOS_V5_A$AdditionalSecurityInfoType$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V5_A$Sid$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V5_A$Sid$LAYOUT() { return _RPC_SECURITY_QOS_V5_A$Sid$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V5_A$Sid$VH_ = MemoryHandles.asAddressVarHandle(_RPC_SECURITY_QOS_V5_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Sid")));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V5_A$Sid$VH() { return _RPC_SECURITY_QOS_V5_A$Sid$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V5_A$EffectiveOnly$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V5_A$EffectiveOnly$LAYOUT() { return _RPC_SECURITY_QOS_V5_A$EffectiveOnly$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V5_A$EffectiveOnly$VH_ = _RPC_SECURITY_QOS_V5_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EffectiveOnly"));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V5_A$EffectiveOnly$VH() { return _RPC_SECURITY_QOS_V5_A$EffectiveOnly$VH_; }

    static final MemoryLayout _RPC_SECURITY_QOS_V5_A$ServerSecurityDescriptor$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SECURITY_QOS_V5_A$ServerSecurityDescriptor$LAYOUT() { return _RPC_SECURITY_QOS_V5_A$ServerSecurityDescriptor$LAYOUT_; }

    static final VarHandle _RPC_SECURITY_QOS_V5_A$ServerSecurityDescriptor$VH_ = MemoryHandles.asAddressVarHandle(_RPC_SECURITY_QOS_V5_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ServerSecurityDescriptor")));
    static final java.lang.invoke.VarHandle _RPC_SECURITY_QOS_V5_A$ServerSecurityDescriptor$VH() { return _RPC_SECURITY_QOS_V5_A$ServerSecurityDescriptor$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Flags"),
        C_LONG.withName("ProtocolSequence"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("NetworkAddress"),
        C_POINTER.withName("StringEndpoint"),
        MemoryLayout.ofUnion(
            C_POINTER.withName("Reserved")
        ).withName("u1"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ObjectUuid")
    ).withName("_RPC_BINDING_HANDLE_TEMPLATE_V1_W");
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_W$struct$LAYOUT() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_W$struct$LAYOUT_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_W$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_W$Version$LAYOUT() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_W$Version$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_TEMPLATE_V1_W$Version$VH_ = _RPC_BINDING_HANDLE_TEMPLATE_V1_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_TEMPLATE_V1_W$Version$VH() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_W$Version$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_W$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_W$Flags$LAYOUT() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_W$Flags$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_TEMPLATE_V1_W$Flags$VH_ = _RPC_BINDING_HANDLE_TEMPLATE_V1_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_TEMPLATE_V1_W$Flags$VH() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_W$Flags$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_W$ProtocolSequence$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_W$ProtocolSequence$LAYOUT() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_W$ProtocolSequence$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_TEMPLATE_V1_W$ProtocolSequence$VH_ = _RPC_BINDING_HANDLE_TEMPLATE_V1_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolSequence"));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_TEMPLATE_V1_W$ProtocolSequence$VH() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_W$ProtocolSequence$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_W$NetworkAddress$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_W$NetworkAddress$LAYOUT() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_W$NetworkAddress$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_TEMPLATE_V1_W$NetworkAddress$VH_ = MemoryHandles.asAddressVarHandle(_RPC_BINDING_HANDLE_TEMPLATE_V1_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("NetworkAddress")));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_TEMPLATE_V1_W$NetworkAddress$VH() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_W$NetworkAddress$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_W$StringEndpoint$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_W$StringEndpoint$LAYOUT() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_W$StringEndpoint$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_TEMPLATE_V1_W$StringEndpoint$VH_ = MemoryHandles.asAddressVarHandle(_RPC_BINDING_HANDLE_TEMPLATE_V1_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("StringEndpoint")));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_TEMPLATE_V1_W$StringEndpoint$VH() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_W$StringEndpoint$VH_; }

    static final MemoryLayout u1$Reserved$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout u1$Reserved$LAYOUT() { return u1$Reserved$LAYOUT_; }

    static final VarHandle u1$Reserved$VH_ = MemoryHandles.asAddressVarHandle(u1$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Reserved")));
    static final java.lang.invoke.VarHandle u1$Reserved$VH() { return u1$Reserved$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Flags"),
        C_LONG.withName("ProtocolSequence"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("NetworkAddress"),
        C_POINTER.withName("StringEndpoint"),
        MemoryLayout.ofUnion(
            C_POINTER.withName("Reserved")
        ).withName("u1"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ObjectUuid")
    ).withName("_RPC_BINDING_HANDLE_TEMPLATE_V1_A");
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_A$struct$LAYOUT() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_A$struct$LAYOUT_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_A$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_A$Version$LAYOUT() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_A$Version$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_TEMPLATE_V1_A$Version$VH_ = _RPC_BINDING_HANDLE_TEMPLATE_V1_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_TEMPLATE_V1_A$Version$VH() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_A$Version$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_A$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_A$Flags$LAYOUT() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_A$Flags$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_TEMPLATE_V1_A$Flags$VH_ = _RPC_BINDING_HANDLE_TEMPLATE_V1_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_TEMPLATE_V1_A$Flags$VH() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_A$Flags$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_A$ProtocolSequence$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_A$ProtocolSequence$LAYOUT() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_A$ProtocolSequence$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_TEMPLATE_V1_A$ProtocolSequence$VH_ = _RPC_BINDING_HANDLE_TEMPLATE_V1_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProtocolSequence"));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_TEMPLATE_V1_A$ProtocolSequence$VH() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_A$ProtocolSequence$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_A$NetworkAddress$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_A$NetworkAddress$LAYOUT() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_A$NetworkAddress$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_TEMPLATE_V1_A$NetworkAddress$VH_ = MemoryHandles.asAddressVarHandle(_RPC_BINDING_HANDLE_TEMPLATE_V1_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("NetworkAddress")));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_TEMPLATE_V1_A$NetworkAddress$VH() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_A$NetworkAddress$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_A$StringEndpoint$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_TEMPLATE_V1_A$StringEndpoint$LAYOUT() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_A$StringEndpoint$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_TEMPLATE_V1_A$StringEndpoint$VH_ = MemoryHandles.asAddressVarHandle(_RPC_BINDING_HANDLE_TEMPLATE_V1_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("StringEndpoint")));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_TEMPLATE_V1_A$StringEndpoint$VH() { return _RPC_BINDING_HANDLE_TEMPLATE_V1_A$StringEndpoint$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ServerPrincName"),
        C_LONG.withName("AuthnLevel"),
        C_LONG.withName("AuthnSvc"),
        C_POINTER.withName("AuthIdentity"),
        C_POINTER.withName("SecurityQos")
    ).withName("_RPC_BINDING_HANDLE_SECURITY_V1_W");
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_W$struct$LAYOUT() { return _RPC_BINDING_HANDLE_SECURITY_V1_W$struct$LAYOUT_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_W$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_W$Version$LAYOUT() { return _RPC_BINDING_HANDLE_SECURITY_V1_W$Version$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_W$Version$VH_ = _RPC_BINDING_HANDLE_SECURITY_V1_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_W$Version$VH() { return _RPC_BINDING_HANDLE_SECURITY_V1_W$Version$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_W$ServerPrincName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_W$ServerPrincName$LAYOUT() { return _RPC_BINDING_HANDLE_SECURITY_V1_W$ServerPrincName$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_W$ServerPrincName$VH_ = MemoryHandles.asAddressVarHandle(_RPC_BINDING_HANDLE_SECURITY_V1_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ServerPrincName")));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_W$ServerPrincName$VH() { return _RPC_BINDING_HANDLE_SECURITY_V1_W$ServerPrincName$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_W$AuthnLevel$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_W$AuthnLevel$LAYOUT() { return _RPC_BINDING_HANDLE_SECURITY_V1_W$AuthnLevel$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_W$AuthnLevel$VH_ = _RPC_BINDING_HANDLE_SECURITY_V1_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthnLevel"));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_W$AuthnLevel$VH() { return _RPC_BINDING_HANDLE_SECURITY_V1_W$AuthnLevel$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_W$AuthnSvc$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_W$AuthnSvc$LAYOUT() { return _RPC_BINDING_HANDLE_SECURITY_V1_W$AuthnSvc$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_W$AuthnSvc$VH_ = _RPC_BINDING_HANDLE_SECURITY_V1_W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthnSvc"));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_W$AuthnSvc$VH() { return _RPC_BINDING_HANDLE_SECURITY_V1_W$AuthnSvc$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_W$AuthIdentity$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_W$AuthIdentity$LAYOUT() { return _RPC_BINDING_HANDLE_SECURITY_V1_W$AuthIdentity$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_W$AuthIdentity$VH_ = MemoryHandles.asAddressVarHandle(_RPC_BINDING_HANDLE_SECURITY_V1_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AuthIdentity")));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_W$AuthIdentity$VH() { return _RPC_BINDING_HANDLE_SECURITY_V1_W$AuthIdentity$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_W$SecurityQos$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_W$SecurityQos$LAYOUT() { return _RPC_BINDING_HANDLE_SECURITY_V1_W$SecurityQos$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_W$SecurityQos$VH_ = MemoryHandles.asAddressVarHandle(_RPC_BINDING_HANDLE_SECURITY_V1_W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SecurityQos")));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_W$SecurityQos$VH() { return _RPC_BINDING_HANDLE_SECURITY_V1_W$SecurityQos$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ServerPrincName"),
        C_LONG.withName("AuthnLevel"),
        C_LONG.withName("AuthnSvc"),
        C_POINTER.withName("AuthIdentity"),
        C_POINTER.withName("SecurityQos")
    ).withName("_RPC_BINDING_HANDLE_SECURITY_V1_A");
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_A$struct$LAYOUT() { return _RPC_BINDING_HANDLE_SECURITY_V1_A$struct$LAYOUT_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_A$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_A$Version$LAYOUT() { return _RPC_BINDING_HANDLE_SECURITY_V1_A$Version$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_A$Version$VH_ = _RPC_BINDING_HANDLE_SECURITY_V1_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_A$Version$VH() { return _RPC_BINDING_HANDLE_SECURITY_V1_A$Version$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_A$ServerPrincName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_A$ServerPrincName$LAYOUT() { return _RPC_BINDING_HANDLE_SECURITY_V1_A$ServerPrincName$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_A$ServerPrincName$VH_ = MemoryHandles.asAddressVarHandle(_RPC_BINDING_HANDLE_SECURITY_V1_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ServerPrincName")));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_A$ServerPrincName$VH() { return _RPC_BINDING_HANDLE_SECURITY_V1_A$ServerPrincName$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_A$AuthnLevel$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_A$AuthnLevel$LAYOUT() { return _RPC_BINDING_HANDLE_SECURITY_V1_A$AuthnLevel$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_A$AuthnLevel$VH_ = _RPC_BINDING_HANDLE_SECURITY_V1_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthnLevel"));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_A$AuthnLevel$VH() { return _RPC_BINDING_HANDLE_SECURITY_V1_A$AuthnLevel$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_A$AuthnSvc$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_A$AuthnSvc$LAYOUT() { return _RPC_BINDING_HANDLE_SECURITY_V1_A$AuthnSvc$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_A$AuthnSvc$VH_ = _RPC_BINDING_HANDLE_SECURITY_V1_A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthnSvc"));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_A$AuthnSvc$VH() { return _RPC_BINDING_HANDLE_SECURITY_V1_A$AuthnSvc$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_A$AuthIdentity$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_A$AuthIdentity$LAYOUT() { return _RPC_BINDING_HANDLE_SECURITY_V1_A$AuthIdentity$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_A$AuthIdentity$VH_ = MemoryHandles.asAddressVarHandle(_RPC_BINDING_HANDLE_SECURITY_V1_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AuthIdentity")));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_A$AuthIdentity$VH() { return _RPC_BINDING_HANDLE_SECURITY_V1_A$AuthIdentity$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_A$SecurityQos$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_SECURITY_V1_A$SecurityQos$LAYOUT() { return _RPC_BINDING_HANDLE_SECURITY_V1_A$SecurityQos$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_A$SecurityQos$VH_ = MemoryHandles.asAddressVarHandle(_RPC_BINDING_HANDLE_SECURITY_V1_A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SecurityQos")));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_SECURITY_V1_A$SecurityQos$VH() { return _RPC_BINDING_HANDLE_SECURITY_V1_A$SecurityQos$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_OPTIONS_V1$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Flags"),
        C_LONG.withName("ComTimeout"),
        C_LONG.withName("CallTimeout")
    ).withName("_RPC_BINDING_HANDLE_OPTIONS_V1");
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_OPTIONS_V1$struct$LAYOUT() { return _RPC_BINDING_HANDLE_OPTIONS_V1$struct$LAYOUT_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_OPTIONS_V1$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_OPTIONS_V1$Version$LAYOUT() { return _RPC_BINDING_HANDLE_OPTIONS_V1$Version$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_OPTIONS_V1$Version$VH_ = _RPC_BINDING_HANDLE_OPTIONS_V1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_OPTIONS_V1$Version$VH() { return _RPC_BINDING_HANDLE_OPTIONS_V1$Version$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_OPTIONS_V1$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_OPTIONS_V1$Flags$LAYOUT() { return _RPC_BINDING_HANDLE_OPTIONS_V1$Flags$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_OPTIONS_V1$Flags$VH_ = _RPC_BINDING_HANDLE_OPTIONS_V1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_OPTIONS_V1$Flags$VH() { return _RPC_BINDING_HANDLE_OPTIONS_V1$Flags$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_OPTIONS_V1$ComTimeout$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_OPTIONS_V1$ComTimeout$LAYOUT() { return _RPC_BINDING_HANDLE_OPTIONS_V1$ComTimeout$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_OPTIONS_V1$ComTimeout$VH_ = _RPC_BINDING_HANDLE_OPTIONS_V1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ComTimeout"));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_OPTIONS_V1$ComTimeout$VH() { return _RPC_BINDING_HANDLE_OPTIONS_V1$ComTimeout$VH_; }

    static final MemoryLayout _RPC_BINDING_HANDLE_OPTIONS_V1$CallTimeout$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_BINDING_HANDLE_OPTIONS_V1$CallTimeout$LAYOUT() { return _RPC_BINDING_HANDLE_OPTIONS_V1$CallTimeout$LAYOUT_; }

    static final VarHandle _RPC_BINDING_HANDLE_OPTIONS_V1$CallTimeout$VH_ = _RPC_BINDING_HANDLE_OPTIONS_V1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CallTimeout"));
    static final java.lang.invoke.VarHandle _RPC_BINDING_HANDLE_OPTIONS_V1$CallTimeout$VH() { return _RPC_BINDING_HANDLE_OPTIONS_V1$CallTimeout$VH_; }

    static final FunctionDescriptor RpcBindingCreateA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingCreateA$FUNC() { return RpcBindingCreateA$FUNC_; }

    static final MethodHandle RpcBindingCreateA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingCreateA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingCreateA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingCreateA$MH() { return RpcBindingCreateA$MH_; }

    static final FunctionDescriptor RpcBindingCreateW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingCreateW$FUNC() { return RpcBindingCreateW$FUNC_; }

    static final MethodHandle RpcBindingCreateW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingCreateW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingCreateW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingCreateW$MH() { return RpcBindingCreateW$MH_; }

    static final FunctionDescriptor RpcBindingGetTrainingContextHandle$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingGetTrainingContextHandle$FUNC() { return RpcBindingGetTrainingContextHandle$FUNC_; }

    static final MethodHandle RpcBindingGetTrainingContextHandle$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingGetTrainingContextHandle",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingGetTrainingContextHandle$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingGetTrainingContextHandle$MH() { return RpcBindingGetTrainingContextHandle$MH_; }

    static final FunctionDescriptor RpcServerInqBindingHandle$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerInqBindingHandle$FUNC() { return RpcServerInqBindingHandle$FUNC_; }

    static final MethodHandle RpcServerInqBindingHandle$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerInqBindingHandle",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerInqBindingHandle$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerInqBindingHandle$MH() { return RpcServerInqBindingHandle$MH_; }

    static final int RPCHTTP_RS_REDIRECT() { return (int)1L; }

    static final int RPCHTTP_RS_ACCESS_1() { return (int)2L; }

    static final int RPCHTTP_RS_SESSION() { return (int)3L; }

    static final int RPCHTTP_RS_ACCESS_2() { return (int)4L; }

    static final int RPCHTTP_RS_INTERFACE() { return (int)5L; }

    static final FunctionDescriptor RpcImpersonateClient$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcImpersonateClient$FUNC() { return RpcImpersonateClient$FUNC_; }

    static final MethodHandle RpcImpersonateClient$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcImpersonateClient",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcImpersonateClient$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcImpersonateClient$MH() { return RpcImpersonateClient$MH_; }

    static final FunctionDescriptor RpcImpersonateClient2$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcImpersonateClient2$FUNC() { return RpcImpersonateClient2$FUNC_; }

    static final MethodHandle RpcImpersonateClient2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcImpersonateClient2",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcImpersonateClient2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcImpersonateClient2$MH() { return RpcImpersonateClient2$MH_; }

    static final FunctionDescriptor RpcRevertToSelfEx$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcRevertToSelfEx$FUNC() { return RpcRevertToSelfEx$FUNC_; }

    static final MethodHandle RpcRevertToSelfEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcRevertToSelfEx",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcRevertToSelfEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcRevertToSelfEx$MH() { return RpcRevertToSelfEx$MH_; }

    static final FunctionDescriptor RpcRevertToSelf$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor RpcRevertToSelf$FUNC() { return RpcRevertToSelf$FUNC_; }

    static final MethodHandle RpcRevertToSelf$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcRevertToSelf",
        "()I",
        RpcRevertToSelf$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcRevertToSelf$MH() { return RpcRevertToSelf$MH_; }

    static final FunctionDescriptor RpcImpersonateClientContainer$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcImpersonateClientContainer$FUNC() { return RpcImpersonateClientContainer$FUNC_; }

    static final MethodHandle RpcImpersonateClientContainer$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcImpersonateClientContainer",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcImpersonateClientContainer$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcImpersonateClientContainer$MH() { return RpcImpersonateClientContainer$MH_; }

    static final FunctionDescriptor RpcRevertContainerImpersonation$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor RpcRevertContainerImpersonation$FUNC() { return RpcRevertContainerImpersonation$FUNC_; }

    static final MethodHandle RpcRevertContainerImpersonation$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcRevertContainerImpersonation",
        "()I",
        RpcRevertContainerImpersonation$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcRevertContainerImpersonation$MH() { return RpcRevertContainerImpersonation$MH_; }

    static final FunctionDescriptor RpcBindingInqAuthClientA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingInqAuthClientA$FUNC() { return RpcBindingInqAuthClientA$FUNC_; }

    static final MethodHandle RpcBindingInqAuthClientA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingInqAuthClientA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingInqAuthClientA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingInqAuthClientA$MH() { return RpcBindingInqAuthClientA$MH_; }

    static final FunctionDescriptor RpcBindingInqAuthClientW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingInqAuthClientW$FUNC() { return RpcBindingInqAuthClientW$FUNC_; }

    static final MethodHandle RpcBindingInqAuthClientW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingInqAuthClientW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingInqAuthClientW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingInqAuthClientW$MH() { return RpcBindingInqAuthClientW$MH_; }

    static final FunctionDescriptor RpcBindingInqAuthClientExA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingInqAuthClientExA$FUNC() { return RpcBindingInqAuthClientExA$FUNC_; }

    static final MethodHandle RpcBindingInqAuthClientExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingInqAuthClientExA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        RpcBindingInqAuthClientExA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingInqAuthClientExA$MH() { return RpcBindingInqAuthClientExA$MH_; }

    static final FunctionDescriptor RpcBindingInqAuthClientExW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingInqAuthClientExW$FUNC() { return RpcBindingInqAuthClientExW$FUNC_; }

    static final MethodHandle RpcBindingInqAuthClientExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingInqAuthClientExW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        RpcBindingInqAuthClientExW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingInqAuthClientExW$MH() { return RpcBindingInqAuthClientExW$MH_; }

    static final FunctionDescriptor RpcBindingInqAuthInfoA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingInqAuthInfoA$FUNC() { return RpcBindingInqAuthInfoA$FUNC_; }

    static final MethodHandle RpcBindingInqAuthInfoA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingInqAuthInfoA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingInqAuthInfoA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingInqAuthInfoA$MH() { return RpcBindingInqAuthInfoA$MH_; }

    static final FunctionDescriptor RpcBindingInqAuthInfoW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingInqAuthInfoW$FUNC() { return RpcBindingInqAuthInfoW$FUNC_; }

    static final MethodHandle RpcBindingInqAuthInfoW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingInqAuthInfoW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingInqAuthInfoW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingInqAuthInfoW$MH() { return RpcBindingInqAuthInfoW$MH_; }

    static final FunctionDescriptor RpcBindingSetAuthInfoA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingSetAuthInfoA$FUNC() { return RpcBindingSetAuthInfoA$FUNC_; }

    static final MethodHandle RpcBindingSetAuthInfoA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingSetAuthInfoA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;I)I",
        RpcBindingSetAuthInfoA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingSetAuthInfoA$MH() { return RpcBindingSetAuthInfoA$MH_; }

    static final FunctionDescriptor RpcBindingSetAuthInfoExA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingSetAuthInfoExA$FUNC() { return RpcBindingSetAuthInfoExA$FUNC_; }

    static final MethodHandle RpcBindingSetAuthInfoExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingSetAuthInfoExA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingSetAuthInfoExA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingSetAuthInfoExA$MH() { return RpcBindingSetAuthInfoExA$MH_; }

    static final FunctionDescriptor RpcBindingSetAuthInfoW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingSetAuthInfoW$FUNC() { return RpcBindingSetAuthInfoW$FUNC_; }

    static final MethodHandle RpcBindingSetAuthInfoW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingSetAuthInfoW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;I)I",
        RpcBindingSetAuthInfoW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingSetAuthInfoW$MH() { return RpcBindingSetAuthInfoW$MH_; }

    static final FunctionDescriptor RpcBindingSetAuthInfoExW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingSetAuthInfoExW$FUNC() { return RpcBindingSetAuthInfoExW$FUNC_; }

    static final MethodHandle RpcBindingSetAuthInfoExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingSetAuthInfoExW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingSetAuthInfoExW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingSetAuthInfoExW$MH() { return RpcBindingSetAuthInfoExW$MH_; }

    static final FunctionDescriptor RpcBindingInqAuthInfoExA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingInqAuthInfoExA$FUNC() { return RpcBindingInqAuthInfoExA$FUNC_; }

    static final MethodHandle RpcBindingInqAuthInfoExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingInqAuthInfoExA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingInqAuthInfoExA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingInqAuthInfoExA$MH() { return RpcBindingInqAuthInfoExA$MH_; }

    static final FunctionDescriptor RpcBindingInqAuthInfoExW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingInqAuthInfoExW$FUNC() { return RpcBindingInqAuthInfoExW$FUNC_; }

    static final MethodHandle RpcBindingInqAuthInfoExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingInqAuthInfoExW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingInqAuthInfoExW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingInqAuthInfoExW$MH() { return RpcBindingInqAuthInfoExW$MH_; }

    static final FunctionDescriptor RpcServerCompleteSecurityCallback$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerCompleteSecurityCallback$FUNC() { return RpcServerCompleteSecurityCallback$FUNC_; }

    static final MethodHandle RpcServerCompleteSecurityCallback$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerCompleteSecurityCallback",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        RpcServerCompleteSecurityCallback$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerCompleteSecurityCallback$MH() { return RpcServerCompleteSecurityCallback$MH_; }

    static final FunctionDescriptor RpcServerRegisterAuthInfoA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerRegisterAuthInfoA$FUNC() { return RpcServerRegisterAuthInfoA$FUNC_; }

    static final MethodHandle RpcServerRegisterAuthInfoA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerRegisterAuthInfoA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerRegisterAuthInfoA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerRegisterAuthInfoA$MH() { return RpcServerRegisterAuthInfoA$MH_; }

    static final FunctionDescriptor RpcServerRegisterAuthInfoA$GetKeyFn$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerRegisterAuthInfoA$GetKeyFn$FUNC() { return RpcServerRegisterAuthInfoA$GetKeyFn$FUNC_; }

    static final FunctionDescriptor RpcServerRegisterAuthInfoW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerRegisterAuthInfoW$FUNC() { return RpcServerRegisterAuthInfoW$FUNC_; }

    static final MethodHandle RpcServerRegisterAuthInfoW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerRegisterAuthInfoW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerRegisterAuthInfoW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerRegisterAuthInfoW$MH() { return RpcServerRegisterAuthInfoW$MH_; }

    static final FunctionDescriptor RpcServerRegisterAuthInfoW$GetKeyFn$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerRegisterAuthInfoW$GetKeyFn$FUNC() { return RpcServerRegisterAuthInfoW$GetKeyFn$FUNC_; }

    static final MemoryLayout RPC_CLIENT_INFORMATION1$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("UserName"),
        C_POINTER.withName("ComputerName"),
        C_SHORT.withName("Privilege"),
        MemoryLayout.ofPaddingBits(16),
        C_LONG.withName("AuthFlags")
    );
    static final jdk.incubator.foreign.MemoryLayout RPC_CLIENT_INFORMATION1$struct$LAYOUT() { return RPC_CLIENT_INFORMATION1$struct$LAYOUT_; }

    static final MemoryLayout RPC_CLIENT_INFORMATION1$UserName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_CLIENT_INFORMATION1$UserName$LAYOUT() { return RPC_CLIENT_INFORMATION1$UserName$LAYOUT_; }

    static final VarHandle RPC_CLIENT_INFORMATION1$UserName$VH_ = MemoryHandles.asAddressVarHandle(RPC_CLIENT_INFORMATION1$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("UserName")));
    static final java.lang.invoke.VarHandle RPC_CLIENT_INFORMATION1$UserName$VH() { return RPC_CLIENT_INFORMATION1$UserName$VH_; }

    static final MemoryLayout RPC_CLIENT_INFORMATION1$ComputerName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_CLIENT_INFORMATION1$ComputerName$LAYOUT() { return RPC_CLIENT_INFORMATION1$ComputerName$LAYOUT_; }

    static final VarHandle RPC_CLIENT_INFORMATION1$ComputerName$VH_ = MemoryHandles.asAddressVarHandle(RPC_CLIENT_INFORMATION1$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ComputerName")));
    static final java.lang.invoke.VarHandle RPC_CLIENT_INFORMATION1$ComputerName$VH() { return RPC_CLIENT_INFORMATION1$ComputerName$VH_; }

    static final MemoryLayout RPC_CLIENT_INFORMATION1$Privilege$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout RPC_CLIENT_INFORMATION1$Privilege$LAYOUT() { return RPC_CLIENT_INFORMATION1$Privilege$LAYOUT_; }

    static final VarHandle RPC_CLIENT_INFORMATION1$Privilege$VH_ = RPC_CLIENT_INFORMATION1$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Privilege"));
    static final java.lang.invoke.VarHandle RPC_CLIENT_INFORMATION1$Privilege$VH() { return RPC_CLIENT_INFORMATION1$Privilege$VH_; }

    static final MemoryLayout RPC_CLIENT_INFORMATION1$AuthFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout RPC_CLIENT_INFORMATION1$AuthFlags$LAYOUT() { return RPC_CLIENT_INFORMATION1$AuthFlags$LAYOUT_; }

    static final VarHandle RPC_CLIENT_INFORMATION1$AuthFlags$VH_ = RPC_CLIENT_INFORMATION1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AuthFlags"));
    static final java.lang.invoke.VarHandle RPC_CLIENT_INFORMATION1$AuthFlags$VH() { return RPC_CLIENT_INFORMATION1$AuthFlags$VH_; }

    static final FunctionDescriptor RpcBindingServerFromClient$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcBindingServerFromClient$FUNC() { return RpcBindingServerFromClient$FUNC_; }

    static final MethodHandle RpcBindingServerFromClient$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcBindingServerFromClient",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcBindingServerFromClient$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcBindingServerFromClient$MH() { return RpcBindingServerFromClient$MH_; }

    static final FunctionDescriptor RpcRaiseException$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcRaiseException$FUNC() { return RpcRaiseException$FUNC_; }

    static final MethodHandle RpcRaiseException$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcRaiseException",
        "(I)V",
        RpcRaiseException$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcRaiseException$MH() { return RpcRaiseException$MH_; }

    static final FunctionDescriptor RpcTestCancel$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor RpcTestCancel$FUNC() { return RpcTestCancel$FUNC_; }

    static final MethodHandle RpcTestCancel$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcTestCancel",
        "()I",
        RpcTestCancel$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcTestCancel$MH() { return RpcTestCancel$MH_; }

    static final FunctionDescriptor RpcServerTestCancel$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerTestCancel$FUNC() { return RpcServerTestCancel$FUNC_; }

    static final MethodHandle RpcServerTestCancel$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerTestCancel",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerTestCancel$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerTestCancel$MH() { return RpcServerTestCancel$MH_; }

    static final FunctionDescriptor RpcCancelThread$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcCancelThread$FUNC() { return RpcCancelThread$FUNC_; }

    static final MethodHandle RpcCancelThread$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcCancelThread",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcCancelThread$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcCancelThread$MH() { return RpcCancelThread$MH_; }

    static final FunctionDescriptor RpcCancelThreadEx$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcCancelThreadEx$FUNC() { return RpcCancelThreadEx$FUNC_; }

    static final MethodHandle RpcCancelThreadEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcCancelThreadEx",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        RpcCancelThreadEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcCancelThreadEx$MH() { return RpcCancelThreadEx$MH_; }

    static final FunctionDescriptor UuidCreate$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor UuidCreate$FUNC() { return UuidCreate$FUNC_; }

    static final MethodHandle UuidCreate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "UuidCreate",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        UuidCreate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle UuidCreate$MH() { return UuidCreate$MH_; }

    static final FunctionDescriptor UuidCreateSequential$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor UuidCreateSequential$FUNC() { return UuidCreateSequential$FUNC_; }

    static final MethodHandle UuidCreateSequential$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "UuidCreateSequential",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        UuidCreateSequential$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle UuidCreateSequential$MH() { return UuidCreateSequential$MH_; }

    static final FunctionDescriptor UuidToStringA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor UuidToStringA$FUNC() { return UuidToStringA$FUNC_; }

    static final MethodHandle UuidToStringA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "UuidToStringA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        UuidToStringA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle UuidToStringA$MH() { return UuidToStringA$MH_; }

    static final FunctionDescriptor UuidFromStringA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor UuidFromStringA$FUNC() { return UuidFromStringA$FUNC_; }

    static final MethodHandle UuidFromStringA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "UuidFromStringA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        UuidFromStringA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle UuidFromStringA$MH() { return UuidFromStringA$MH_; }

    static final FunctionDescriptor UuidToStringW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor UuidToStringW$FUNC() { return UuidToStringW$FUNC_; }

    static final MethodHandle UuidToStringW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "UuidToStringW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        UuidToStringW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle UuidToStringW$MH() { return UuidToStringW$MH_; }

    static final FunctionDescriptor UuidFromStringW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor UuidFromStringW$FUNC() { return UuidFromStringW$FUNC_; }

    static final MethodHandle UuidFromStringW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "UuidFromStringW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        UuidFromStringW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle UuidFromStringW$MH() { return UuidFromStringW$MH_; }

    static final FunctionDescriptor UuidCompare$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor UuidCompare$FUNC() { return UuidCompare$FUNC_; }

    static final MethodHandle UuidCompare$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "UuidCompare",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        UuidCompare$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle UuidCompare$MH() { return UuidCompare$MH_; }

    static final FunctionDescriptor UuidCreateNil$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor UuidCreateNil$FUNC() { return UuidCreateNil$FUNC_; }

    static final MethodHandle UuidCreateNil$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "UuidCreateNil",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        UuidCreateNil$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle UuidCreateNil$MH() { return UuidCreateNil$MH_; }

    static final FunctionDescriptor UuidEqual$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor UuidEqual$FUNC() { return UuidEqual$FUNC_; }

    static final MethodHandle UuidEqual$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "UuidEqual",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        UuidEqual$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle UuidEqual$MH() { return UuidEqual$MH_; }

    static final FunctionDescriptor UuidHash$FUNC_ = FunctionDescriptor.of(C_SHORT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor UuidHash$FUNC() { return UuidHash$FUNC_; }

    static final MethodHandle UuidHash$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "UuidHash",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)S",
        UuidHash$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle UuidHash$MH() { return UuidHash$MH_; }

    static final FunctionDescriptor UuidIsNil$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor UuidIsNil$FUNC() { return UuidIsNil$FUNC_; }

    static final MethodHandle UuidIsNil$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "UuidIsNil",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        UuidIsNil$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle UuidIsNil$MH() { return UuidIsNil$MH_; }

    static final FunctionDescriptor RpcEpRegisterNoReplaceA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcEpRegisterNoReplaceA$FUNC() { return RpcEpRegisterNoReplaceA$FUNC_; }

    static final MethodHandle RpcEpRegisterNoReplaceA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcEpRegisterNoReplaceA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcEpRegisterNoReplaceA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcEpRegisterNoReplaceA$MH() { return RpcEpRegisterNoReplaceA$MH_; }

    static final FunctionDescriptor RpcEpRegisterNoReplaceW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcEpRegisterNoReplaceW$FUNC() { return RpcEpRegisterNoReplaceW$FUNC_; }

    static final MethodHandle RpcEpRegisterNoReplaceW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcEpRegisterNoReplaceW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcEpRegisterNoReplaceW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcEpRegisterNoReplaceW$MH() { return RpcEpRegisterNoReplaceW$MH_; }

    static final FunctionDescriptor RpcEpRegisterA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcEpRegisterA$FUNC() { return RpcEpRegisterA$FUNC_; }

    static final MethodHandle RpcEpRegisterA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcEpRegisterA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcEpRegisterA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcEpRegisterA$MH() { return RpcEpRegisterA$MH_; }

    static final FunctionDescriptor RpcEpRegisterW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcEpRegisterW$FUNC() { return RpcEpRegisterW$FUNC_; }

    static final MethodHandle RpcEpRegisterW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcEpRegisterW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcEpRegisterW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcEpRegisterW$MH() { return RpcEpRegisterW$MH_; }

    static final FunctionDescriptor RpcEpUnregister$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcEpUnregister$FUNC() { return RpcEpUnregister$FUNC_; }

    static final MethodHandle RpcEpUnregister$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcEpUnregister",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcEpUnregister$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcEpUnregister$MH() { return RpcEpUnregister$MH_; }

    static final FunctionDescriptor DceErrorInqTextA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DceErrorInqTextA$FUNC() { return DceErrorInqTextA$FUNC_; }

    static final MethodHandle DceErrorInqTextA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DceErrorInqTextA",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        DceErrorInqTextA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DceErrorInqTextA$MH() { return DceErrorInqTextA$MH_; }

    static final FunctionDescriptor DceErrorInqTextW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DceErrorInqTextW$FUNC() { return DceErrorInqTextW$FUNC_; }

    static final MethodHandle DceErrorInqTextW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DceErrorInqTextW",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        DceErrorInqTextW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DceErrorInqTextW$MH() { return DceErrorInqTextW$MH_; }

    static final FunctionDescriptor RpcMgmtEpEltInqBegin$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtEpEltInqBegin$FUNC() { return RpcMgmtEpEltInqBegin$FUNC_; }

    static final MethodHandle RpcMgmtEpEltInqBegin$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcMgmtEpEltInqBegin",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcMgmtEpEltInqBegin$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcMgmtEpEltInqBegin$MH() { return RpcMgmtEpEltInqBegin$MH_; }

    static final FunctionDescriptor RpcMgmtEpEltInqDone$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtEpEltInqDone$FUNC() { return RpcMgmtEpEltInqDone$FUNC_; }

    static final MethodHandle RpcMgmtEpEltInqDone$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcMgmtEpEltInqDone",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcMgmtEpEltInqDone$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcMgmtEpEltInqDone$MH() { return RpcMgmtEpEltInqDone$MH_; }

    static final FunctionDescriptor RpcMgmtEpEltInqNextA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtEpEltInqNextA$FUNC() { return RpcMgmtEpEltInqNextA$FUNC_; }

    static final MethodHandle RpcMgmtEpEltInqNextA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcMgmtEpEltInqNextA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcMgmtEpEltInqNextA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcMgmtEpEltInqNextA$MH() { return RpcMgmtEpEltInqNextA$MH_; }

    static final FunctionDescriptor RpcMgmtEpEltInqNextW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtEpEltInqNextW$FUNC() { return RpcMgmtEpEltInqNextW$FUNC_; }

    static final MethodHandle RpcMgmtEpEltInqNextW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcMgmtEpEltInqNextW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcMgmtEpEltInqNextW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcMgmtEpEltInqNextW$MH() { return RpcMgmtEpEltInqNextW$MH_; }

    static final FunctionDescriptor RpcMgmtEpUnregister$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtEpUnregister$FUNC() { return RpcMgmtEpUnregister$FUNC_; }

    static final MethodHandle RpcMgmtEpUnregister$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcMgmtEpUnregister",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcMgmtEpUnregister$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcMgmtEpUnregister$MH() { return RpcMgmtEpUnregister$MH_; }

    static final FunctionDescriptor RpcMgmtSetAuthorizationFn$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtSetAuthorizationFn$FUNC() { return RpcMgmtSetAuthorizationFn$FUNC_; }

    static final MethodHandle RpcMgmtSetAuthorizationFn$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcMgmtSetAuthorizationFn",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcMgmtSetAuthorizationFn$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcMgmtSetAuthorizationFn$MH() { return RpcMgmtSetAuthorizationFn$MH_; }

    static final FunctionDescriptor RpcMgmtSetAuthorizationFn$AuthorizationFn$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcMgmtSetAuthorizationFn$AuthorizationFn$FUNC() { return RpcMgmtSetAuthorizationFn$AuthorizationFn$FUNC_; }

    static final FunctionDescriptor RpcExceptionFilter$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcExceptionFilter$FUNC() { return RpcExceptionFilter$FUNC_; }

    static final MethodHandle RpcExceptionFilter$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcExceptionFilter",
        "(I)I",
        RpcExceptionFilter$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcExceptionFilter$MH() { return RpcExceptionFilter$MH_; }

    static final MemoryLayout RPC_ENDPOINT_TEMPLATEW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ProtSeq"),
        C_POINTER.withName("Endpoint"),
        C_POINTER.withName("SecurityDescriptor"),
        C_LONG.withName("Backlog"),
        MemoryLayout.ofPaddingBits(32)
    );
    static final jdk.incubator.foreign.MemoryLayout RPC_ENDPOINT_TEMPLATEW$struct$LAYOUT() { return RPC_ENDPOINT_TEMPLATEW$struct$LAYOUT_; }

    static final MemoryLayout RPC_ENDPOINT_TEMPLATEW$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout RPC_ENDPOINT_TEMPLATEW$Version$LAYOUT() { return RPC_ENDPOINT_TEMPLATEW$Version$LAYOUT_; }

    static final VarHandle RPC_ENDPOINT_TEMPLATEW$Version$VH_ = RPC_ENDPOINT_TEMPLATEW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle RPC_ENDPOINT_TEMPLATEW$Version$VH() { return RPC_ENDPOINT_TEMPLATEW$Version$VH_; }

    static final MemoryLayout RPC_ENDPOINT_TEMPLATEW$ProtSeq$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_ENDPOINT_TEMPLATEW$ProtSeq$LAYOUT() { return RPC_ENDPOINT_TEMPLATEW$ProtSeq$LAYOUT_; }

    static final VarHandle RPC_ENDPOINT_TEMPLATEW$ProtSeq$VH_ = MemoryHandles.asAddressVarHandle(RPC_ENDPOINT_TEMPLATEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ProtSeq")));
    static final java.lang.invoke.VarHandle RPC_ENDPOINT_TEMPLATEW$ProtSeq$VH() { return RPC_ENDPOINT_TEMPLATEW$ProtSeq$VH_; }

    static final MemoryLayout RPC_ENDPOINT_TEMPLATEW$Endpoint$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_ENDPOINT_TEMPLATEW$Endpoint$LAYOUT() { return RPC_ENDPOINT_TEMPLATEW$Endpoint$LAYOUT_; }

    static final VarHandle RPC_ENDPOINT_TEMPLATEW$Endpoint$VH_ = MemoryHandles.asAddressVarHandle(RPC_ENDPOINT_TEMPLATEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Endpoint")));
    static final java.lang.invoke.VarHandle RPC_ENDPOINT_TEMPLATEW$Endpoint$VH() { return RPC_ENDPOINT_TEMPLATEW$Endpoint$VH_; }

    static final MemoryLayout RPC_ENDPOINT_TEMPLATEW$SecurityDescriptor$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_ENDPOINT_TEMPLATEW$SecurityDescriptor$LAYOUT() { return RPC_ENDPOINT_TEMPLATEW$SecurityDescriptor$LAYOUT_; }

    static final VarHandle RPC_ENDPOINT_TEMPLATEW$SecurityDescriptor$VH_ = MemoryHandles.asAddressVarHandle(RPC_ENDPOINT_TEMPLATEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SecurityDescriptor")));
    static final java.lang.invoke.VarHandle RPC_ENDPOINT_TEMPLATEW$SecurityDescriptor$VH() { return RPC_ENDPOINT_TEMPLATEW$SecurityDescriptor$VH_; }

    static final MemoryLayout RPC_ENDPOINT_TEMPLATEW$Backlog$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout RPC_ENDPOINT_TEMPLATEW$Backlog$LAYOUT() { return RPC_ENDPOINT_TEMPLATEW$Backlog$LAYOUT_; }

    static final VarHandle RPC_ENDPOINT_TEMPLATEW$Backlog$VH_ = RPC_ENDPOINT_TEMPLATEW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Backlog"));
    static final java.lang.invoke.VarHandle RPC_ENDPOINT_TEMPLATEW$Backlog$VH() { return RPC_ENDPOINT_TEMPLATEW$Backlog$VH_; }

    static final MemoryLayout RPC_ENDPOINT_TEMPLATEA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("ProtSeq"),
        C_POINTER.withName("Endpoint"),
        C_POINTER.withName("SecurityDescriptor"),
        C_LONG.withName("Backlog"),
        MemoryLayout.ofPaddingBits(32)
    );
    static final jdk.incubator.foreign.MemoryLayout RPC_ENDPOINT_TEMPLATEA$struct$LAYOUT() { return RPC_ENDPOINT_TEMPLATEA$struct$LAYOUT_; }

    static final MemoryLayout RPC_ENDPOINT_TEMPLATEA$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout RPC_ENDPOINT_TEMPLATEA$Version$LAYOUT() { return RPC_ENDPOINT_TEMPLATEA$Version$LAYOUT_; }

    static final VarHandle RPC_ENDPOINT_TEMPLATEA$Version$VH_ = RPC_ENDPOINT_TEMPLATEA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle RPC_ENDPOINT_TEMPLATEA$Version$VH() { return RPC_ENDPOINT_TEMPLATEA$Version$VH_; }

    static final MemoryLayout RPC_ENDPOINT_TEMPLATEA$ProtSeq$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_ENDPOINT_TEMPLATEA$ProtSeq$LAYOUT() { return RPC_ENDPOINT_TEMPLATEA$ProtSeq$LAYOUT_; }

    static final VarHandle RPC_ENDPOINT_TEMPLATEA$ProtSeq$VH_ = MemoryHandles.asAddressVarHandle(RPC_ENDPOINT_TEMPLATEA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ProtSeq")));
    static final java.lang.invoke.VarHandle RPC_ENDPOINT_TEMPLATEA$ProtSeq$VH() { return RPC_ENDPOINT_TEMPLATEA$ProtSeq$VH_; }

    static final MemoryLayout RPC_ENDPOINT_TEMPLATEA$Endpoint$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_ENDPOINT_TEMPLATEA$Endpoint$LAYOUT() { return RPC_ENDPOINT_TEMPLATEA$Endpoint$LAYOUT_; }

    static final VarHandle RPC_ENDPOINT_TEMPLATEA$Endpoint$VH_ = MemoryHandles.asAddressVarHandle(RPC_ENDPOINT_TEMPLATEA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Endpoint")));
    static final java.lang.invoke.VarHandle RPC_ENDPOINT_TEMPLATEA$Endpoint$VH() { return RPC_ENDPOINT_TEMPLATEA$Endpoint$VH_; }

    static final MemoryLayout RPC_ENDPOINT_TEMPLATEA$SecurityDescriptor$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_ENDPOINT_TEMPLATEA$SecurityDescriptor$LAYOUT() { return RPC_ENDPOINT_TEMPLATEA$SecurityDescriptor$LAYOUT_; }

    static final VarHandle RPC_ENDPOINT_TEMPLATEA$SecurityDescriptor$VH_ = MemoryHandles.asAddressVarHandle(RPC_ENDPOINT_TEMPLATEA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SecurityDescriptor")));
    static final java.lang.invoke.VarHandle RPC_ENDPOINT_TEMPLATEA$SecurityDescriptor$VH() { return RPC_ENDPOINT_TEMPLATEA$SecurityDescriptor$VH_; }

    static final MemoryLayout RPC_ENDPOINT_TEMPLATEA$Backlog$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout RPC_ENDPOINT_TEMPLATEA$Backlog$LAYOUT() { return RPC_ENDPOINT_TEMPLATEA$Backlog$LAYOUT_; }

    static final VarHandle RPC_ENDPOINT_TEMPLATEA$Backlog$VH_ = RPC_ENDPOINT_TEMPLATEA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Backlog"));
    static final java.lang.invoke.VarHandle RPC_ENDPOINT_TEMPLATEA$Backlog$VH() { return RPC_ENDPOINT_TEMPLATEA$Backlog$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("IfSpec"),
        C_POINTER.withName("MgrTypeUuid"),
        C_POINTER.withName("MgrEpv"),
        C_INT.withName("Flags"),
        C_INT.withName("MaxCalls"),
        C_INT.withName("MaxRpcSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("IfCallback"),
        C_POINTER.withName("UuidVector"),
        C_POINTER.withName("Annotation"),
        C_POINTER.withName("SecurityDescriptor")
    );
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEA$struct$LAYOUT() { return RPC_INTERFACE_TEMPLATEA$struct$LAYOUT_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEA$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEA$Version$LAYOUT() { return RPC_INTERFACE_TEMPLATEA$Version$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEA$Version$VH_ = RPC_INTERFACE_TEMPLATEA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEA$Version$VH() { return RPC_INTERFACE_TEMPLATEA$Version$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEA$IfSpec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEA$IfSpec$LAYOUT() { return RPC_INTERFACE_TEMPLATEA$IfSpec$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEA$IfSpec$VH_ = MemoryHandles.asAddressVarHandle(RPC_INTERFACE_TEMPLATEA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IfSpec")));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEA$IfSpec$VH() { return RPC_INTERFACE_TEMPLATEA$IfSpec$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEA$MgrTypeUuid$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEA$MgrTypeUuid$LAYOUT() { return RPC_INTERFACE_TEMPLATEA$MgrTypeUuid$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEA$MgrTypeUuid$VH_ = MemoryHandles.asAddressVarHandle(RPC_INTERFACE_TEMPLATEA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MgrTypeUuid")));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEA$MgrTypeUuid$VH() { return RPC_INTERFACE_TEMPLATEA$MgrTypeUuid$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEA$MgrEpv$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEA$MgrEpv$LAYOUT() { return RPC_INTERFACE_TEMPLATEA$MgrEpv$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEA$MgrEpv$VH_ = MemoryHandles.asAddressVarHandle(RPC_INTERFACE_TEMPLATEA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MgrEpv")));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEA$MgrEpv$VH() { return RPC_INTERFACE_TEMPLATEA$MgrEpv$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEA$Flags$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEA$Flags$LAYOUT() { return RPC_INTERFACE_TEMPLATEA$Flags$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEA$Flags$VH_ = RPC_INTERFACE_TEMPLATEA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEA$Flags$VH() { return RPC_INTERFACE_TEMPLATEA$Flags$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEA$MaxCalls$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEA$MaxCalls$LAYOUT() { return RPC_INTERFACE_TEMPLATEA$MaxCalls$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEA$MaxCalls$VH_ = RPC_INTERFACE_TEMPLATEA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaxCalls"));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEA$MaxCalls$VH() { return RPC_INTERFACE_TEMPLATEA$MaxCalls$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEA$MaxRpcSize$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEA$MaxRpcSize$LAYOUT() { return RPC_INTERFACE_TEMPLATEA$MaxRpcSize$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEA$MaxRpcSize$VH_ = RPC_INTERFACE_TEMPLATEA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaxRpcSize"));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEA$MaxRpcSize$VH() { return RPC_INTERFACE_TEMPLATEA$MaxRpcSize$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEA$IfCallback$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEA$IfCallback$LAYOUT() { return RPC_INTERFACE_TEMPLATEA$IfCallback$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEA$IfCallback$VH_ = MemoryHandles.asAddressVarHandle(RPC_INTERFACE_TEMPLATEA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IfCallback")));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEA$IfCallback$VH() { return RPC_INTERFACE_TEMPLATEA$IfCallback$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEA$UuidVector$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEA$UuidVector$LAYOUT() { return RPC_INTERFACE_TEMPLATEA$UuidVector$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEA$UuidVector$VH_ = MemoryHandles.asAddressVarHandle(RPC_INTERFACE_TEMPLATEA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("UuidVector")));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEA$UuidVector$VH() { return RPC_INTERFACE_TEMPLATEA$UuidVector$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEA$Annotation$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEA$Annotation$LAYOUT() { return RPC_INTERFACE_TEMPLATEA$Annotation$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEA$Annotation$VH_ = MemoryHandles.asAddressVarHandle(RPC_INTERFACE_TEMPLATEA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Annotation")));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEA$Annotation$VH() { return RPC_INTERFACE_TEMPLATEA$Annotation$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEA$SecurityDescriptor$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEA$SecurityDescriptor$LAYOUT() { return RPC_INTERFACE_TEMPLATEA$SecurityDescriptor$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEA$SecurityDescriptor$VH_ = MemoryHandles.asAddressVarHandle(RPC_INTERFACE_TEMPLATEA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SecurityDescriptor")));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEA$SecurityDescriptor$VH() { return RPC_INTERFACE_TEMPLATEA$SecurityDescriptor$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("IfSpec"),
        C_POINTER.withName("MgrTypeUuid"),
        C_POINTER.withName("MgrEpv"),
        C_INT.withName("Flags"),
        C_INT.withName("MaxCalls"),
        C_INT.withName("MaxRpcSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("IfCallback"),
        C_POINTER.withName("UuidVector"),
        C_POINTER.withName("Annotation"),
        C_POINTER.withName("SecurityDescriptor")
    );
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEW$struct$LAYOUT() { return RPC_INTERFACE_TEMPLATEW$struct$LAYOUT_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEW$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEW$Version$LAYOUT() { return RPC_INTERFACE_TEMPLATEW$Version$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEW$Version$VH_ = RPC_INTERFACE_TEMPLATEW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEW$Version$VH() { return RPC_INTERFACE_TEMPLATEW$Version$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEW$IfSpec$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEW$IfSpec$LAYOUT() { return RPC_INTERFACE_TEMPLATEW$IfSpec$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEW$IfSpec$VH_ = MemoryHandles.asAddressVarHandle(RPC_INTERFACE_TEMPLATEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IfSpec")));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEW$IfSpec$VH() { return RPC_INTERFACE_TEMPLATEW$IfSpec$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEW$MgrTypeUuid$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEW$MgrTypeUuid$LAYOUT() { return RPC_INTERFACE_TEMPLATEW$MgrTypeUuid$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEW$MgrTypeUuid$VH_ = MemoryHandles.asAddressVarHandle(RPC_INTERFACE_TEMPLATEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MgrTypeUuid")));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEW$MgrTypeUuid$VH() { return RPC_INTERFACE_TEMPLATEW$MgrTypeUuid$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEW$MgrEpv$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEW$MgrEpv$LAYOUT() { return RPC_INTERFACE_TEMPLATEW$MgrEpv$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEW$MgrEpv$VH_ = MemoryHandles.asAddressVarHandle(RPC_INTERFACE_TEMPLATEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MgrEpv")));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEW$MgrEpv$VH() { return RPC_INTERFACE_TEMPLATEW$MgrEpv$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEW$Flags$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEW$Flags$LAYOUT() { return RPC_INTERFACE_TEMPLATEW$Flags$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEW$Flags$VH_ = RPC_INTERFACE_TEMPLATEW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEW$Flags$VH() { return RPC_INTERFACE_TEMPLATEW$Flags$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEW$MaxCalls$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEW$MaxCalls$LAYOUT() { return RPC_INTERFACE_TEMPLATEW$MaxCalls$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEW$MaxCalls$VH_ = RPC_INTERFACE_TEMPLATEW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaxCalls"));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEW$MaxCalls$VH() { return RPC_INTERFACE_TEMPLATEW$MaxCalls$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEW$MaxRpcSize$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEW$MaxRpcSize$LAYOUT() { return RPC_INTERFACE_TEMPLATEW$MaxRpcSize$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEW$MaxRpcSize$VH_ = RPC_INTERFACE_TEMPLATEW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaxRpcSize"));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEW$MaxRpcSize$VH() { return RPC_INTERFACE_TEMPLATEW$MaxRpcSize$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEW$IfCallback$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEW$IfCallback$LAYOUT() { return RPC_INTERFACE_TEMPLATEW$IfCallback$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEW$IfCallback$VH_ = MemoryHandles.asAddressVarHandle(RPC_INTERFACE_TEMPLATEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IfCallback")));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEW$IfCallback$VH() { return RPC_INTERFACE_TEMPLATEW$IfCallback$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEW$UuidVector$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEW$UuidVector$LAYOUT() { return RPC_INTERFACE_TEMPLATEW$UuidVector$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEW$UuidVector$VH_ = MemoryHandles.asAddressVarHandle(RPC_INTERFACE_TEMPLATEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("UuidVector")));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEW$UuidVector$VH() { return RPC_INTERFACE_TEMPLATEW$UuidVector$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEW$Annotation$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEW$Annotation$LAYOUT() { return RPC_INTERFACE_TEMPLATEW$Annotation$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEW$Annotation$VH_ = MemoryHandles.asAddressVarHandle(RPC_INTERFACE_TEMPLATEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Annotation")));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEW$Annotation$VH() { return RPC_INTERFACE_TEMPLATEW$Annotation$VH_; }

    static final MemoryLayout RPC_INTERFACE_TEMPLATEW$SecurityDescriptor$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_INTERFACE_TEMPLATEW$SecurityDescriptor$LAYOUT() { return RPC_INTERFACE_TEMPLATEW$SecurityDescriptor$LAYOUT_; }

    static final VarHandle RPC_INTERFACE_TEMPLATEW$SecurityDescriptor$VH_ = MemoryHandles.asAddressVarHandle(RPC_INTERFACE_TEMPLATEW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SecurityDescriptor")));
    static final java.lang.invoke.VarHandle RPC_INTERFACE_TEMPLATEW$SecurityDescriptor$VH() { return RPC_INTERFACE_TEMPLATEW$SecurityDescriptor$VH_; }

    static final FunctionDescriptor RpcServerInterfaceGroupClose$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerInterfaceGroupClose$FUNC() { return RpcServerInterfaceGroupClose$FUNC_; }

    static final MethodHandle RpcServerInterfaceGroupClose$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerInterfaceGroupClose",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerInterfaceGroupClose$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerInterfaceGroupClose$MH() { return RpcServerInterfaceGroupClose$MH_; }

    static final FunctionDescriptor RpcServerInterfaceGroupActivate$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerInterfaceGroupActivate$FUNC() { return RpcServerInterfaceGroupActivate$FUNC_; }

    static final MethodHandle RpcServerInterfaceGroupActivate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerInterfaceGroupActivate",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerInterfaceGroupActivate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerInterfaceGroupActivate$MH() { return RpcServerInterfaceGroupActivate$MH_; }

    static final FunctionDescriptor RpcServerInterfaceGroupDeactivate$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerInterfaceGroupDeactivate$FUNC() { return RpcServerInterfaceGroupDeactivate$FUNC_; }

    static final MethodHandle RpcServerInterfaceGroupDeactivate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerInterfaceGroupDeactivate",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        RpcServerInterfaceGroupDeactivate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerInterfaceGroupDeactivate$MH() { return RpcServerInterfaceGroupDeactivate$MH_; }

    static final FunctionDescriptor RpcServerInterfaceGroupInqBindings$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RpcServerInterfaceGroupInqBindings$FUNC() { return RpcServerInterfaceGroupInqBindings$FUNC_; }

    static final MethodHandle RpcServerInterfaceGroupInqBindings$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RpcServerInterfaceGroupInqBindings",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RpcServerInterfaceGroupInqBindings$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RpcServerInterfaceGroupInqBindings$MH() { return RpcServerInterfaceGroupInqBindings$MH_; }

    static final MemoryLayout _RPC_VERSION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("MajorVersion"),
        C_SHORT.withName("MinorVersion")
    ).withName("_RPC_VERSION");
    static final jdk.incubator.foreign.MemoryLayout _RPC_VERSION$struct$LAYOUT() { return _RPC_VERSION$struct$LAYOUT_; }

    static final MemoryLayout _RPC_VERSION$MajorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_VERSION$MajorVersion$LAYOUT() { return _RPC_VERSION$MajorVersion$LAYOUT_; }

    static final VarHandle _RPC_VERSION$MajorVersion$VH_ = _RPC_VERSION$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MajorVersion"));
    static final java.lang.invoke.VarHandle _RPC_VERSION$MajorVersion$VH() { return _RPC_VERSION$MajorVersion$VH_; }

    static final MemoryLayout _RPC_VERSION$MinorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_VERSION$MinorVersion$LAYOUT() { return _RPC_VERSION$MinorVersion$LAYOUT_; }

    static final VarHandle _RPC_VERSION$MinorVersion$VH_ = _RPC_VERSION$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MinorVersion"));
    static final java.lang.invoke.VarHandle _RPC_VERSION$MinorVersion$VH() { return _RPC_VERSION$MinorVersion$VH_; }

    static final MemoryLayout _RPC_SYNTAX_IDENTIFIER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("SyntaxGUID"),
        MemoryLayout.ofStruct(
            C_SHORT.withName("MajorVersion"),
            C_SHORT.withName("MinorVersion")
        ).withName("SyntaxVersion")
    ).withName("_RPC_SYNTAX_IDENTIFIER");
    static final jdk.incubator.foreign.MemoryLayout _RPC_SYNTAX_IDENTIFIER$struct$LAYOUT() { return _RPC_SYNTAX_IDENTIFIER$struct$LAYOUT_; }

    static final MemoryLayout _RPC_MESSAGE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("Handle"),
        C_LONG.withName("DataRepresentation"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("Buffer"),
        C_INT.withName("BufferLength"),
        C_INT.withName("ProcNum"),
        C_POINTER.withName("TransferSyntax"),
        C_POINTER.withName("RpcInterfaceInformation"),
        C_POINTER.withName("ReservedForRuntime"),
        C_POINTER.withName("ManagerEpv"),
        C_POINTER.withName("ImportContext"),
        C_LONG.withName("RpcFlags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_RPC_MESSAGE");
    static final jdk.incubator.foreign.MemoryLayout _RPC_MESSAGE$struct$LAYOUT() { return _RPC_MESSAGE$struct$LAYOUT_; }

    static final MemoryLayout _RPC_MESSAGE$Handle$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_MESSAGE$Handle$LAYOUT() { return _RPC_MESSAGE$Handle$LAYOUT_; }

    static final VarHandle _RPC_MESSAGE$Handle$VH_ = MemoryHandles.asAddressVarHandle(_RPC_MESSAGE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Handle")));
    static final java.lang.invoke.VarHandle _RPC_MESSAGE$Handle$VH() { return _RPC_MESSAGE$Handle$VH_; }

    static final MemoryLayout _RPC_MESSAGE$DataRepresentation$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_MESSAGE$DataRepresentation$LAYOUT() { return _RPC_MESSAGE$DataRepresentation$LAYOUT_; }

    static final VarHandle _RPC_MESSAGE$DataRepresentation$VH_ = _RPC_MESSAGE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DataRepresentation"));
    static final java.lang.invoke.VarHandle _RPC_MESSAGE$DataRepresentation$VH() { return _RPC_MESSAGE$DataRepresentation$VH_; }

    static final MemoryLayout _RPC_MESSAGE$Buffer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_MESSAGE$Buffer$LAYOUT() { return _RPC_MESSAGE$Buffer$LAYOUT_; }

    static final VarHandle _RPC_MESSAGE$Buffer$VH_ = MemoryHandles.asAddressVarHandle(_RPC_MESSAGE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Buffer")));
    static final java.lang.invoke.VarHandle _RPC_MESSAGE$Buffer$VH() { return _RPC_MESSAGE$Buffer$VH_; }

    static final MemoryLayout _RPC_MESSAGE$BufferLength$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_MESSAGE$BufferLength$LAYOUT() { return _RPC_MESSAGE$BufferLength$LAYOUT_; }

    static final VarHandle _RPC_MESSAGE$BufferLength$VH_ = _RPC_MESSAGE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BufferLength"));
    static final java.lang.invoke.VarHandle _RPC_MESSAGE$BufferLength$VH() { return _RPC_MESSAGE$BufferLength$VH_; }

    static final MemoryLayout _RPC_MESSAGE$ProcNum$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_MESSAGE$ProcNum$LAYOUT() { return _RPC_MESSAGE$ProcNum$LAYOUT_; }

    static final VarHandle _RPC_MESSAGE$ProcNum$VH_ = _RPC_MESSAGE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProcNum"));
    static final java.lang.invoke.VarHandle _RPC_MESSAGE$ProcNum$VH() { return _RPC_MESSAGE$ProcNum$VH_; }

    static final MemoryLayout _RPC_MESSAGE$TransferSyntax$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_MESSAGE$TransferSyntax$LAYOUT() { return _RPC_MESSAGE$TransferSyntax$LAYOUT_; }

    static final VarHandle _RPC_MESSAGE$TransferSyntax$VH_ = MemoryHandles.asAddressVarHandle(_RPC_MESSAGE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TransferSyntax")));
    static final java.lang.invoke.VarHandle _RPC_MESSAGE$TransferSyntax$VH() { return _RPC_MESSAGE$TransferSyntax$VH_; }

    static final MemoryLayout _RPC_MESSAGE$RpcInterfaceInformation$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_MESSAGE$RpcInterfaceInformation$LAYOUT() { return _RPC_MESSAGE$RpcInterfaceInformation$LAYOUT_; }

    static final VarHandle _RPC_MESSAGE$RpcInterfaceInformation$VH_ = MemoryHandles.asAddressVarHandle(_RPC_MESSAGE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RpcInterfaceInformation")));
    static final java.lang.invoke.VarHandle _RPC_MESSAGE$RpcInterfaceInformation$VH() { return _RPC_MESSAGE$RpcInterfaceInformation$VH_; }

    static final MemoryLayout _RPC_MESSAGE$ReservedForRuntime$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_MESSAGE$ReservedForRuntime$LAYOUT() { return _RPC_MESSAGE$ReservedForRuntime$LAYOUT_; }

    static final VarHandle _RPC_MESSAGE$ReservedForRuntime$VH_ = MemoryHandles.asAddressVarHandle(_RPC_MESSAGE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReservedForRuntime")));
    static final java.lang.invoke.VarHandle _RPC_MESSAGE$ReservedForRuntime$VH() { return _RPC_MESSAGE$ReservedForRuntime$VH_; }

    static final MemoryLayout _RPC_MESSAGE$ManagerEpv$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_MESSAGE$ManagerEpv$LAYOUT() { return _RPC_MESSAGE$ManagerEpv$LAYOUT_; }

    static final VarHandle _RPC_MESSAGE$ManagerEpv$VH_ = MemoryHandles.asAddressVarHandle(_RPC_MESSAGE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ManagerEpv")));
    static final java.lang.invoke.VarHandle _RPC_MESSAGE$ManagerEpv$VH() { return _RPC_MESSAGE$ManagerEpv$VH_; }

    static final MemoryLayout _RPC_MESSAGE$ImportContext$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_MESSAGE$ImportContext$LAYOUT() { return _RPC_MESSAGE$ImportContext$LAYOUT_; }

    static final VarHandle _RPC_MESSAGE$ImportContext$VH_ = MemoryHandles.asAddressVarHandle(_RPC_MESSAGE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ImportContext")));
    static final java.lang.invoke.VarHandle _RPC_MESSAGE$ImportContext$VH() { return _RPC_MESSAGE$ImportContext$VH_; }

    static final MemoryLayout _RPC_MESSAGE$RpcFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_MESSAGE$RpcFlags$LAYOUT() { return _RPC_MESSAGE$RpcFlags$LAYOUT_; }

    static final VarHandle _RPC_MESSAGE$RpcFlags$VH_ = _RPC_MESSAGE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RpcFlags"));
    static final java.lang.invoke.VarHandle _RPC_MESSAGE$RpcFlags$VH() { return _RPC_MESSAGE$RpcFlags$VH_; }

    static final int PROTOCOL_NOT_LOADED() { return (int)1L; }

    static final int PROTOCOL_LOADED() { return (int)2L; }

    static final int PROTOCOL_ADDRESS_CHANGE() { return (int)3L; }

    static final MemoryLayout RPC_DISPATCH_TABLE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("DispatchTableCount"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("DispatchTable"),
        C_LONGLONG.withName("Reserved")
    );
    static final jdk.incubator.foreign.MemoryLayout RPC_DISPATCH_TABLE$struct$LAYOUT() { return RPC_DISPATCH_TABLE$struct$LAYOUT_; }

    static final MemoryLayout RPC_DISPATCH_TABLE$DispatchTableCount$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout RPC_DISPATCH_TABLE$DispatchTableCount$LAYOUT() { return RPC_DISPATCH_TABLE$DispatchTableCount$LAYOUT_; }

    static final VarHandle RPC_DISPATCH_TABLE$DispatchTableCount$VH_ = RPC_DISPATCH_TABLE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DispatchTableCount"));
    static final java.lang.invoke.VarHandle RPC_DISPATCH_TABLE$DispatchTableCount$VH() { return RPC_DISPATCH_TABLE$DispatchTableCount$VH_; }

    static final MemoryLayout RPC_DISPATCH_TABLE$DispatchTable$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout RPC_DISPATCH_TABLE$DispatchTable$LAYOUT() { return RPC_DISPATCH_TABLE$DispatchTable$LAYOUT_; }

    static final VarHandle RPC_DISPATCH_TABLE$DispatchTable$VH_ = MemoryHandles.asAddressVarHandle(RPC_DISPATCH_TABLE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DispatchTable")));
    static final java.lang.invoke.VarHandle RPC_DISPATCH_TABLE$DispatchTable$VH() { return RPC_DISPATCH_TABLE$DispatchTable$VH_; }

    static final MemoryLayout RPC_DISPATCH_TABLE$Reserved$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout RPC_DISPATCH_TABLE$Reserved$LAYOUT() { return RPC_DISPATCH_TABLE$Reserved$LAYOUT_; }

    static final VarHandle RPC_DISPATCH_TABLE$Reserved$VH_ = RPC_DISPATCH_TABLE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle RPC_DISPATCH_TABLE$Reserved$VH() { return RPC_DISPATCH_TABLE$Reserved$VH_; }

    static final MemoryLayout _RPC_PROTSEQ_ENDPOINT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("RpcProtocolSequence"),
        C_POINTER.withName("Endpoint")
    ).withName("_RPC_PROTSEQ_ENDPOINT");
    static final jdk.incubator.foreign.MemoryLayout _RPC_PROTSEQ_ENDPOINT$struct$LAYOUT() { return _RPC_PROTSEQ_ENDPOINT$struct$LAYOUT_; }

    static final MemoryLayout _RPC_PROTSEQ_ENDPOINT$RpcProtocolSequence$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_PROTSEQ_ENDPOINT$RpcProtocolSequence$LAYOUT() { return _RPC_PROTSEQ_ENDPOINT$RpcProtocolSequence$LAYOUT_; }

    static final VarHandle _RPC_PROTSEQ_ENDPOINT$RpcProtocolSequence$VH_ = MemoryHandles.asAddressVarHandle(_RPC_PROTSEQ_ENDPOINT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RpcProtocolSequence")));
    static final java.lang.invoke.VarHandle _RPC_PROTSEQ_ENDPOINT$RpcProtocolSequence$VH() { return _RPC_PROTSEQ_ENDPOINT$RpcProtocolSequence$VH_; }

    static final MemoryLayout _RPC_PROTSEQ_ENDPOINT$Endpoint$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_PROTSEQ_ENDPOINT$Endpoint$LAYOUT() { return _RPC_PROTSEQ_ENDPOINT$Endpoint$LAYOUT_; }

    static final VarHandle _RPC_PROTSEQ_ENDPOINT$Endpoint$VH_ = MemoryHandles.asAddressVarHandle(_RPC_PROTSEQ_ENDPOINT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Endpoint")));
    static final java.lang.invoke.VarHandle _RPC_PROTSEQ_ENDPOINT$Endpoint$VH() { return _RPC_PROTSEQ_ENDPOINT$Endpoint$VH_; }

    static final MemoryLayout _RPC_SERVER_INTERFACE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Length"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
            ).withName("SyntaxGUID"),
            MemoryLayout.ofStruct(
                C_SHORT.withName("MajorVersion"),
                C_SHORT.withName("MinorVersion")
            ).withName("SyntaxVersion")
        ).withName("InterfaceId"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
            ).withName("SyntaxGUID"),
            MemoryLayout.ofStruct(
                C_SHORT.withName("MajorVersion"),
                C_SHORT.withName("MinorVersion")
            ).withName("SyntaxVersion")
        ).withName("TransferSyntax"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("DispatchTable"),
        C_INT.withName("RpcProtseqEndpointCount"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("RpcProtseqEndpoint"),
        C_POINTER.withName("DefaultManagerEpv"),
        C_POINTER.withName("InterpreterInfo"),
        C_INT.withName("Flags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_RPC_SERVER_INTERFACE");
    static final jdk.incubator.foreign.MemoryLayout _RPC_SERVER_INTERFACE$struct$LAYOUT() { return _RPC_SERVER_INTERFACE$struct$LAYOUT_; }

    static final MemoryLayout _RPC_SERVER_INTERFACE$Length$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SERVER_INTERFACE$Length$LAYOUT() { return _RPC_SERVER_INTERFACE$Length$LAYOUT_; }

    static final VarHandle _RPC_SERVER_INTERFACE$Length$VH_ = _RPC_SERVER_INTERFACE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Length"));
    static final java.lang.invoke.VarHandle _RPC_SERVER_INTERFACE$Length$VH() { return _RPC_SERVER_INTERFACE$Length$VH_; }

    static final MemoryLayout _RPC_SERVER_INTERFACE$DispatchTable$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SERVER_INTERFACE$DispatchTable$LAYOUT() { return _RPC_SERVER_INTERFACE$DispatchTable$LAYOUT_; }

    static final VarHandle _RPC_SERVER_INTERFACE$DispatchTable$VH_ = MemoryHandles.asAddressVarHandle(_RPC_SERVER_INTERFACE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DispatchTable")));
    static final java.lang.invoke.VarHandle _RPC_SERVER_INTERFACE$DispatchTable$VH() { return _RPC_SERVER_INTERFACE$DispatchTable$VH_; }

    static final MemoryLayout _RPC_SERVER_INTERFACE$RpcProtseqEndpointCount$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SERVER_INTERFACE$RpcProtseqEndpointCount$LAYOUT() { return _RPC_SERVER_INTERFACE$RpcProtseqEndpointCount$LAYOUT_; }

    static final VarHandle _RPC_SERVER_INTERFACE$RpcProtseqEndpointCount$VH_ = _RPC_SERVER_INTERFACE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RpcProtseqEndpointCount"));
    static final java.lang.invoke.VarHandle _RPC_SERVER_INTERFACE$RpcProtseqEndpointCount$VH() { return _RPC_SERVER_INTERFACE$RpcProtseqEndpointCount$VH_; }

    static final MemoryLayout _RPC_SERVER_INTERFACE$RpcProtseqEndpoint$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SERVER_INTERFACE$RpcProtseqEndpoint$LAYOUT() { return _RPC_SERVER_INTERFACE$RpcProtseqEndpoint$LAYOUT_; }

    static final VarHandle _RPC_SERVER_INTERFACE$RpcProtseqEndpoint$VH_ = MemoryHandles.asAddressVarHandle(_RPC_SERVER_INTERFACE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RpcProtseqEndpoint")));
    static final java.lang.invoke.VarHandle _RPC_SERVER_INTERFACE$RpcProtseqEndpoint$VH() { return _RPC_SERVER_INTERFACE$RpcProtseqEndpoint$VH_; }

    static final MemoryLayout _RPC_SERVER_INTERFACE$DefaultManagerEpv$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SERVER_INTERFACE$DefaultManagerEpv$LAYOUT() { return _RPC_SERVER_INTERFACE$DefaultManagerEpv$LAYOUT_; }

    static final VarHandle _RPC_SERVER_INTERFACE$DefaultManagerEpv$VH_ = MemoryHandles.asAddressVarHandle(_RPC_SERVER_INTERFACE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DefaultManagerEpv")));
    static final java.lang.invoke.VarHandle _RPC_SERVER_INTERFACE$DefaultManagerEpv$VH() { return _RPC_SERVER_INTERFACE$DefaultManagerEpv$VH_; }

    static final MemoryLayout _RPC_SERVER_INTERFACE$InterpreterInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SERVER_INTERFACE$InterpreterInfo$LAYOUT() { return _RPC_SERVER_INTERFACE$InterpreterInfo$LAYOUT_; }

    static final VarHandle _RPC_SERVER_INTERFACE$InterpreterInfo$VH_ = MemoryHandles.asAddressVarHandle(_RPC_SERVER_INTERFACE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("InterpreterInfo")));
    static final java.lang.invoke.VarHandle _RPC_SERVER_INTERFACE$InterpreterInfo$VH() { return _RPC_SERVER_INTERFACE$InterpreterInfo$VH_; }

    static final MemoryLayout _RPC_SERVER_INTERFACE$Flags$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_SERVER_INTERFACE$Flags$LAYOUT() { return _RPC_SERVER_INTERFACE$Flags$LAYOUT_; }

    static final VarHandle _RPC_SERVER_INTERFACE$Flags$VH_ = _RPC_SERVER_INTERFACE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _RPC_SERVER_INTERFACE$Flags$VH() { return _RPC_SERVER_INTERFACE$Flags$VH_; }

    static final MemoryLayout _RPC_CLIENT_INTERFACE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Length"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
            ).withName("SyntaxGUID"),
            MemoryLayout.ofStruct(
                C_SHORT.withName("MajorVersion"),
                C_SHORT.withName("MinorVersion")
            ).withName("SyntaxVersion")
        ).withName("InterfaceId"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
            ).withName("SyntaxGUID"),
            MemoryLayout.ofStruct(
                C_SHORT.withName("MajorVersion"),
                C_SHORT.withName("MinorVersion")
            ).withName("SyntaxVersion")
        ).withName("TransferSyntax"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("DispatchTable"),
        C_INT.withName("RpcProtseqEndpointCount"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("RpcProtseqEndpoint"),
        C_LONGLONG.withName("Reserved"),
        C_POINTER.withName("InterpreterInfo"),
        C_INT.withName("Flags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_RPC_CLIENT_INTERFACE");
    static final jdk.incubator.foreign.MemoryLayout _RPC_CLIENT_INTERFACE$struct$LAYOUT() { return _RPC_CLIENT_INTERFACE$struct$LAYOUT_; }

    static final MemoryLayout _RPC_CLIENT_INTERFACE$Length$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_CLIENT_INTERFACE$Length$LAYOUT() { return _RPC_CLIENT_INTERFACE$Length$LAYOUT_; }

    static final VarHandle _RPC_CLIENT_INTERFACE$Length$VH_ = _RPC_CLIENT_INTERFACE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Length"));
    static final java.lang.invoke.VarHandle _RPC_CLIENT_INTERFACE$Length$VH() { return _RPC_CLIENT_INTERFACE$Length$VH_; }

    static final MemoryLayout _RPC_CLIENT_INTERFACE$DispatchTable$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_CLIENT_INTERFACE$DispatchTable$LAYOUT() { return _RPC_CLIENT_INTERFACE$DispatchTable$LAYOUT_; }

    static final VarHandle _RPC_CLIENT_INTERFACE$DispatchTable$VH_ = MemoryHandles.asAddressVarHandle(_RPC_CLIENT_INTERFACE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DispatchTable")));
    static final java.lang.invoke.VarHandle _RPC_CLIENT_INTERFACE$DispatchTable$VH() { return _RPC_CLIENT_INTERFACE$DispatchTable$VH_; }

    static final MemoryLayout _RPC_CLIENT_INTERFACE$RpcProtseqEndpointCount$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_CLIENT_INTERFACE$RpcProtseqEndpointCount$LAYOUT() { return _RPC_CLIENT_INTERFACE$RpcProtseqEndpointCount$LAYOUT_; }

    static final VarHandle _RPC_CLIENT_INTERFACE$RpcProtseqEndpointCount$VH_ = _RPC_CLIENT_INTERFACE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RpcProtseqEndpointCount"));
    static final java.lang.invoke.VarHandle _RPC_CLIENT_INTERFACE$RpcProtseqEndpointCount$VH() { return _RPC_CLIENT_INTERFACE$RpcProtseqEndpointCount$VH_; }

    static final MemoryLayout _RPC_CLIENT_INTERFACE$RpcProtseqEndpoint$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_CLIENT_INTERFACE$RpcProtseqEndpoint$LAYOUT() { return _RPC_CLIENT_INTERFACE$RpcProtseqEndpoint$LAYOUT_; }

    static final VarHandle _RPC_CLIENT_INTERFACE$RpcProtseqEndpoint$VH_ = MemoryHandles.asAddressVarHandle(_RPC_CLIENT_INTERFACE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RpcProtseqEndpoint")));
    static final java.lang.invoke.VarHandle _RPC_CLIENT_INTERFACE$RpcProtseqEndpoint$VH() { return _RPC_CLIENT_INTERFACE$RpcProtseqEndpoint$VH_; }

    static final MemoryLayout _RPC_CLIENT_INTERFACE$Reserved$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _RPC_CLIENT_INTERFACE$Reserved$LAYOUT() { return _RPC_CLIENT_INTERFACE$Reserved$LAYOUT_; }

    static final VarHandle _RPC_CLIENT_INTERFACE$Reserved$VH_ = _RPC_CLIENT_INTERFACE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _RPC_CLIENT_INTERFACE$Reserved$VH() { return _RPC_CLIENT_INTERFACE$Reserved$VH_; }

    static final MemoryLayout _RPC_CLIENT_INTERFACE$InterpreterInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RPC_CLIENT_INTERFACE$InterpreterInfo$LAYOUT() { return _RPC_CLIENT_INTERFACE$InterpreterInfo$LAYOUT_; }

    static final VarHandle _RPC_CLIENT_INTERFACE$InterpreterInfo$VH_ = MemoryHandles.asAddressVarHandle(_RPC_CLIENT_INTERFACE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("InterpreterInfo")));
    static final java.lang.invoke.VarHandle _RPC_CLIENT_INTERFACE$InterpreterInfo$VH() { return _RPC_CLIENT_INTERFACE$InterpreterInfo$VH_; }

    static final MemoryLayout _RPC_CLIENT_INTERFACE$Flags$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _RPC_CLIENT_INTERFACE$Flags$LAYOUT() { return _RPC_CLIENT_INTERFACE$Flags$LAYOUT_; }

    static final VarHandle _RPC_CLIENT_INTERFACE$Flags$VH_ = _RPC_CLIENT_INTERFACE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _RPC_CLIENT_INTERFACE$Flags$VH() { return _RPC_CLIENT_INTERFACE$Flags$VH_; }

    static final FunctionDescriptor I_RpcNegotiateTransferSyntax$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcNegotiateTransferSyntax$FUNC() { return I_RpcNegotiateTransferSyntax$FUNC_; }

    static final MethodHandle I_RpcNegotiateTransferSyntax$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcNegotiateTransferSyntax",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcNegotiateTransferSyntax$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcNegotiateTransferSyntax$MH() { return I_RpcNegotiateTransferSyntax$MH_; }

    static final FunctionDescriptor I_RpcGetBuffer$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcGetBuffer$FUNC() { return I_RpcGetBuffer$FUNC_; }

    static final MethodHandle I_RpcGetBuffer$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcGetBuffer",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcGetBuffer$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcGetBuffer$MH() { return I_RpcGetBuffer$MH_; }

    static final FunctionDescriptor I_RpcGetBufferWithObject$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcGetBufferWithObject$FUNC() { return I_RpcGetBufferWithObject$FUNC_; }

    static final MethodHandle I_RpcGetBufferWithObject$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcGetBufferWithObject",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcGetBufferWithObject$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcGetBufferWithObject$MH() { return I_RpcGetBufferWithObject$MH_; }

    static final FunctionDescriptor I_RpcSendReceive$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor I_RpcSendReceive$FUNC() { return I_RpcSendReceive$FUNC_; }

    static final MethodHandle I_RpcSendReceive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "I_RpcSendReceive",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        I_RpcSendReceive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle I_RpcSendReceive$MH() { return I_RpcSendReceive$MH_; }

}

