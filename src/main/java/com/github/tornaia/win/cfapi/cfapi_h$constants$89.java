// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$89 extends cfapi_h$constants$88 {

    /* package-private */ cfapi_h$constants$89() {}
    static final MemoryLayout IXMLDOMDocumentTypeVtbl$get_xml$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMDocumentTypeVtbl$get_xml$LAYOUT() { return IXMLDOMDocumentTypeVtbl$get_xml$LAYOUT_; }

    static final VarHandle IXMLDOMDocumentTypeVtbl$get_xml$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMDocumentTypeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_xml")));
    static final java.lang.invoke.VarHandle IXMLDOMDocumentTypeVtbl$get_xml$VH() { return IXMLDOMDocumentTypeVtbl$get_xml$VH_; }

    static final MemoryLayout IXMLDOMDocumentTypeVtbl$transformNode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMDocumentTypeVtbl$transformNode$LAYOUT() { return IXMLDOMDocumentTypeVtbl$transformNode$LAYOUT_; }

    static final VarHandle IXMLDOMDocumentTypeVtbl$transformNode$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMDocumentTypeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("transformNode")));
    static final java.lang.invoke.VarHandle IXMLDOMDocumentTypeVtbl$transformNode$VH() { return IXMLDOMDocumentTypeVtbl$transformNode$VH_; }

    static final MemoryLayout IXMLDOMDocumentTypeVtbl$selectNodes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMDocumentTypeVtbl$selectNodes$LAYOUT() { return IXMLDOMDocumentTypeVtbl$selectNodes$LAYOUT_; }

    static final VarHandle IXMLDOMDocumentTypeVtbl$selectNodes$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMDocumentTypeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("selectNodes")));
    static final java.lang.invoke.VarHandle IXMLDOMDocumentTypeVtbl$selectNodes$VH() { return IXMLDOMDocumentTypeVtbl$selectNodes$VH_; }

    static final MemoryLayout IXMLDOMDocumentTypeVtbl$selectSingleNode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMDocumentTypeVtbl$selectSingleNode$LAYOUT() { return IXMLDOMDocumentTypeVtbl$selectSingleNode$LAYOUT_; }

    static final VarHandle IXMLDOMDocumentTypeVtbl$selectSingleNode$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMDocumentTypeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("selectSingleNode")));
    static final java.lang.invoke.VarHandle IXMLDOMDocumentTypeVtbl$selectSingleNode$VH() { return IXMLDOMDocumentTypeVtbl$selectSingleNode$VH_; }

    static final MemoryLayout IXMLDOMDocumentTypeVtbl$get_parsed$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMDocumentTypeVtbl$get_parsed$LAYOUT() { return IXMLDOMDocumentTypeVtbl$get_parsed$LAYOUT_; }

    static final VarHandle IXMLDOMDocumentTypeVtbl$get_parsed$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMDocumentTypeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_parsed")));
    static final java.lang.invoke.VarHandle IXMLDOMDocumentTypeVtbl$get_parsed$VH() { return IXMLDOMDocumentTypeVtbl$get_parsed$VH_; }

    static final MemoryLayout IXMLDOMDocumentTypeVtbl$get_namespaceURI$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMDocumentTypeVtbl$get_namespaceURI$LAYOUT() { return IXMLDOMDocumentTypeVtbl$get_namespaceURI$LAYOUT_; }

    static final VarHandle IXMLDOMDocumentTypeVtbl$get_namespaceURI$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMDocumentTypeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_namespaceURI")));
    static final java.lang.invoke.VarHandle IXMLDOMDocumentTypeVtbl$get_namespaceURI$VH() { return IXMLDOMDocumentTypeVtbl$get_namespaceURI$VH_; }

    static final MemoryLayout IXMLDOMDocumentTypeVtbl$get_prefix$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMDocumentTypeVtbl$get_prefix$LAYOUT() { return IXMLDOMDocumentTypeVtbl$get_prefix$LAYOUT_; }

    static final VarHandle IXMLDOMDocumentTypeVtbl$get_prefix$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMDocumentTypeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_prefix")));
    static final java.lang.invoke.VarHandle IXMLDOMDocumentTypeVtbl$get_prefix$VH() { return IXMLDOMDocumentTypeVtbl$get_prefix$VH_; }

    static final MemoryLayout IXMLDOMDocumentTypeVtbl$get_baseName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMDocumentTypeVtbl$get_baseName$LAYOUT() { return IXMLDOMDocumentTypeVtbl$get_baseName$LAYOUT_; }

    static final VarHandle IXMLDOMDocumentTypeVtbl$get_baseName$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMDocumentTypeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_baseName")));
    static final java.lang.invoke.VarHandle IXMLDOMDocumentTypeVtbl$get_baseName$VH() { return IXMLDOMDocumentTypeVtbl$get_baseName$VH_; }

    static final MemoryLayout IXMLDOMDocumentTypeVtbl$transformNodeToObject$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMDocumentTypeVtbl$transformNodeToObject$LAYOUT() { return IXMLDOMDocumentTypeVtbl$transformNodeToObject$LAYOUT_; }

    static final VarHandle IXMLDOMDocumentTypeVtbl$transformNodeToObject$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMDocumentTypeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("transformNodeToObject")));
    static final java.lang.invoke.VarHandle IXMLDOMDocumentTypeVtbl$transformNodeToObject$VH() { return IXMLDOMDocumentTypeVtbl$transformNodeToObject$VH_; }

    static final MemoryLayout IXMLDOMDocumentTypeVtbl$get_name$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMDocumentTypeVtbl$get_name$LAYOUT() { return IXMLDOMDocumentTypeVtbl$get_name$LAYOUT_; }

    static final VarHandle IXMLDOMDocumentTypeVtbl$get_name$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMDocumentTypeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_name")));
    static final java.lang.invoke.VarHandle IXMLDOMDocumentTypeVtbl$get_name$VH() { return IXMLDOMDocumentTypeVtbl$get_name$VH_; }

    static final MemoryLayout IXMLDOMDocumentTypeVtbl$get_entities$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMDocumentTypeVtbl$get_entities$LAYOUT() { return IXMLDOMDocumentTypeVtbl$get_entities$LAYOUT_; }

    static final VarHandle IXMLDOMDocumentTypeVtbl$get_entities$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMDocumentTypeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_entities")));
    static final java.lang.invoke.VarHandle IXMLDOMDocumentTypeVtbl$get_entities$VH() { return IXMLDOMDocumentTypeVtbl$get_entities$VH_; }

    static final MemoryLayout IXMLDOMDocumentTypeVtbl$get_notations$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMDocumentTypeVtbl$get_notations$LAYOUT() { return IXMLDOMDocumentTypeVtbl$get_notations$LAYOUT_; }

    static final VarHandle IXMLDOMDocumentTypeVtbl$get_notations$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMDocumentTypeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_notations")));
    static final java.lang.invoke.VarHandle IXMLDOMDocumentTypeVtbl$get_notations$VH() { return IXMLDOMDocumentTypeVtbl$get_notations$VH_; }

    static final MemoryLayout IXMLDOMDocumentType$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IXMLDOMDocumentType");
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMDocumentType$struct$LAYOUT() { return IXMLDOMDocumentType$struct$LAYOUT_; }

    static final MemoryLayout IXMLDOMDocumentType$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMDocumentType$lpVtbl$LAYOUT() { return IXMLDOMDocumentType$lpVtbl$LAYOUT_; }

    static final VarHandle IXMLDOMDocumentType$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMDocumentType$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IXMLDOMDocumentType$lpVtbl$VH() { return IXMLDOMDocumentType$lpVtbl$VH_; }

    static final MemoryLayout IID_IXMLDOMNotation$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IXMLDOMNotation$LAYOUT() { return IID_IXMLDOMNotation$LAYOUT_; }

    static final MemorySegment IID_IXMLDOMNotation$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IXMLDOMNotation", IID_IXMLDOMNotation$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IXMLDOMNotation$SEGMENT() { return IID_IXMLDOMNotation$SEGMENT_; }

    static final MemoryLayout IXMLDOMNotationVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetTypeInfoCount"),
        C_POINTER.withName("GetTypeInfo"),
        C_POINTER.withName("GetIDsOfNames"),
        C_POINTER.withName("Invoke"),
        C_POINTER.withName("get_nodeName"),
        C_POINTER.withName("get_nodeValue"),
        C_POINTER.withName("put_nodeValue"),
        C_POINTER.withName("get_nodeType"),
        C_POINTER.withName("get_parentNode"),
        C_POINTER.withName("get_childNodes"),
        C_POINTER.withName("get_firstChild"),
        C_POINTER.withName("get_lastChild"),
        C_POINTER.withName("get_previousSibling"),
        C_POINTER.withName("get_nextSibling"),
        C_POINTER.withName("get_attributes"),
        C_POINTER.withName("insertBefore"),
        C_POINTER.withName("replaceChild"),
        C_POINTER.withName("removeChild"),
        C_POINTER.withName("appendChild"),
        C_POINTER.withName("hasChildNodes"),
        C_POINTER.withName("get_ownerDocument"),
        C_POINTER.withName("cloneNode"),
        C_POINTER.withName("get_nodeTypeString"),
        C_POINTER.withName("get_text"),
        C_POINTER.withName("put_text"),
        C_POINTER.withName("get_specified"),
        C_POINTER.withName("get_definition"),
        C_POINTER.withName("get_nodeTypedValue"),
        C_POINTER.withName("put_nodeTypedValue"),
        C_POINTER.withName("get_dataType"),
        C_POINTER.withName("put_dataType"),
        C_POINTER.withName("get_xml"),
        C_POINTER.withName("transformNode"),
        C_POINTER.withName("selectNodes"),
        C_POINTER.withName("selectSingleNode"),
        C_POINTER.withName("get_parsed"),
        C_POINTER.withName("get_namespaceURI"),
        C_POINTER.withName("get_prefix"),
        C_POINTER.withName("get_baseName"),
        C_POINTER.withName("transformNodeToObject"),
        C_POINTER.withName("get_publicId"),
        C_POINTER.withName("get_systemId")
    ).withName("IXMLDOMNotationVtbl");
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$struct$LAYOUT() { return IXMLDOMNotationVtbl$struct$LAYOUT_; }

    static final MemoryLayout IXMLDOMNotationVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$QueryInterface$LAYOUT() { return IXMLDOMNotationVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$QueryInterface$VH() { return IXMLDOMNotationVtbl$QueryInterface$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$AddRef$LAYOUT() { return IXMLDOMNotationVtbl$AddRef$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$AddRef$VH() { return IXMLDOMNotationVtbl$AddRef$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$Release$LAYOUT() { return IXMLDOMNotationVtbl$Release$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$Release$VH() { return IXMLDOMNotationVtbl$Release$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$GetTypeInfoCount$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$GetTypeInfoCount$LAYOUT() { return IXMLDOMNotationVtbl$GetTypeInfoCount$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$GetTypeInfoCount$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfoCount")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$GetTypeInfoCount$VH() { return IXMLDOMNotationVtbl$GetTypeInfoCount$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$GetTypeInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$GetTypeInfo$LAYOUT() { return IXMLDOMNotationVtbl$GetTypeInfo$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$GetTypeInfo$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfo")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$GetTypeInfo$VH() { return IXMLDOMNotationVtbl$GetTypeInfo$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$GetIDsOfNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$GetIDsOfNames$LAYOUT() { return IXMLDOMNotationVtbl$GetIDsOfNames$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$GetIDsOfNames$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetIDsOfNames")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$GetIDsOfNames$VH() { return IXMLDOMNotationVtbl$GetIDsOfNames$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$Invoke$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$Invoke$LAYOUT() { return IXMLDOMNotationVtbl$Invoke$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$Invoke$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Invoke")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$Invoke$VH() { return IXMLDOMNotationVtbl$Invoke$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_nodeName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_nodeName$LAYOUT() { return IXMLDOMNotationVtbl$get_nodeName$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_nodeName$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nodeName")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_nodeName$VH() { return IXMLDOMNotationVtbl$get_nodeName$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_nodeValue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_nodeValue$LAYOUT() { return IXMLDOMNotationVtbl$get_nodeValue$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_nodeValue$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nodeValue")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_nodeValue$VH() { return IXMLDOMNotationVtbl$get_nodeValue$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$put_nodeValue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$put_nodeValue$LAYOUT() { return IXMLDOMNotationVtbl$put_nodeValue$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$put_nodeValue$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_nodeValue")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$put_nodeValue$VH() { return IXMLDOMNotationVtbl$put_nodeValue$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_nodeType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_nodeType$LAYOUT() { return IXMLDOMNotationVtbl$get_nodeType$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_nodeType$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nodeType")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_nodeType$VH() { return IXMLDOMNotationVtbl$get_nodeType$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_parentNode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_parentNode$LAYOUT() { return IXMLDOMNotationVtbl$get_parentNode$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_parentNode$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_parentNode")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_parentNode$VH() { return IXMLDOMNotationVtbl$get_parentNode$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_childNodes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_childNodes$LAYOUT() { return IXMLDOMNotationVtbl$get_childNodes$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_childNodes$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_childNodes")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_childNodes$VH() { return IXMLDOMNotationVtbl$get_childNodes$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_firstChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_firstChild$LAYOUT() { return IXMLDOMNotationVtbl$get_firstChild$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_firstChild$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_firstChild")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_firstChild$VH() { return IXMLDOMNotationVtbl$get_firstChild$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_lastChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_lastChild$LAYOUT() { return IXMLDOMNotationVtbl$get_lastChild$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_lastChild$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_lastChild")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_lastChild$VH() { return IXMLDOMNotationVtbl$get_lastChild$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_previousSibling$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_previousSibling$LAYOUT() { return IXMLDOMNotationVtbl$get_previousSibling$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_previousSibling$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_previousSibling")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_previousSibling$VH() { return IXMLDOMNotationVtbl$get_previousSibling$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_nextSibling$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_nextSibling$LAYOUT() { return IXMLDOMNotationVtbl$get_nextSibling$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_nextSibling$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nextSibling")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_nextSibling$VH() { return IXMLDOMNotationVtbl$get_nextSibling$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_attributes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_attributes$LAYOUT() { return IXMLDOMNotationVtbl$get_attributes$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_attributes$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_attributes")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_attributes$VH() { return IXMLDOMNotationVtbl$get_attributes$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$insertBefore$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$insertBefore$LAYOUT() { return IXMLDOMNotationVtbl$insertBefore$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$insertBefore$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("insertBefore")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$insertBefore$VH() { return IXMLDOMNotationVtbl$insertBefore$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$replaceChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$replaceChild$LAYOUT() { return IXMLDOMNotationVtbl$replaceChild$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$replaceChild$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("replaceChild")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$replaceChild$VH() { return IXMLDOMNotationVtbl$replaceChild$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$removeChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$removeChild$LAYOUT() { return IXMLDOMNotationVtbl$removeChild$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$removeChild$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("removeChild")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$removeChild$VH() { return IXMLDOMNotationVtbl$removeChild$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$appendChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$appendChild$LAYOUT() { return IXMLDOMNotationVtbl$appendChild$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$appendChild$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("appendChild")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$appendChild$VH() { return IXMLDOMNotationVtbl$appendChild$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$hasChildNodes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$hasChildNodes$LAYOUT() { return IXMLDOMNotationVtbl$hasChildNodes$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$hasChildNodes$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hasChildNodes")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$hasChildNodes$VH() { return IXMLDOMNotationVtbl$hasChildNodes$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_ownerDocument$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_ownerDocument$LAYOUT() { return IXMLDOMNotationVtbl$get_ownerDocument$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_ownerDocument$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_ownerDocument")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_ownerDocument$VH() { return IXMLDOMNotationVtbl$get_ownerDocument$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$cloneNode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$cloneNode$LAYOUT() { return IXMLDOMNotationVtbl$cloneNode$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$cloneNode$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("cloneNode")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$cloneNode$VH() { return IXMLDOMNotationVtbl$cloneNode$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_nodeTypeString$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_nodeTypeString$LAYOUT() { return IXMLDOMNotationVtbl$get_nodeTypeString$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_nodeTypeString$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nodeTypeString")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_nodeTypeString$VH() { return IXMLDOMNotationVtbl$get_nodeTypeString$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_text$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_text$LAYOUT() { return IXMLDOMNotationVtbl$get_text$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_text$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_text")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_text$VH() { return IXMLDOMNotationVtbl$get_text$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$put_text$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$put_text$LAYOUT() { return IXMLDOMNotationVtbl$put_text$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$put_text$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_text")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$put_text$VH() { return IXMLDOMNotationVtbl$put_text$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_specified$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_specified$LAYOUT() { return IXMLDOMNotationVtbl$get_specified$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_specified$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_specified")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_specified$VH() { return IXMLDOMNotationVtbl$get_specified$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_definition$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_definition$LAYOUT() { return IXMLDOMNotationVtbl$get_definition$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_definition$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_definition")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_definition$VH() { return IXMLDOMNotationVtbl$get_definition$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_nodeTypedValue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_nodeTypedValue$LAYOUT() { return IXMLDOMNotationVtbl$get_nodeTypedValue$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_nodeTypedValue$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nodeTypedValue")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_nodeTypedValue$VH() { return IXMLDOMNotationVtbl$get_nodeTypedValue$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$put_nodeTypedValue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$put_nodeTypedValue$LAYOUT() { return IXMLDOMNotationVtbl$put_nodeTypedValue$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$put_nodeTypedValue$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_nodeTypedValue")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$put_nodeTypedValue$VH() { return IXMLDOMNotationVtbl$put_nodeTypedValue$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_dataType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_dataType$LAYOUT() { return IXMLDOMNotationVtbl$get_dataType$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_dataType$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_dataType")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_dataType$VH() { return IXMLDOMNotationVtbl$get_dataType$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$put_dataType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$put_dataType$LAYOUT() { return IXMLDOMNotationVtbl$put_dataType$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$put_dataType$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_dataType")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$put_dataType$VH() { return IXMLDOMNotationVtbl$put_dataType$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_xml$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_xml$LAYOUT() { return IXMLDOMNotationVtbl$get_xml$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_xml$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_xml")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_xml$VH() { return IXMLDOMNotationVtbl$get_xml$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$transformNode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$transformNode$LAYOUT() { return IXMLDOMNotationVtbl$transformNode$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$transformNode$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("transformNode")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$transformNode$VH() { return IXMLDOMNotationVtbl$transformNode$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$selectNodes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$selectNodes$LAYOUT() { return IXMLDOMNotationVtbl$selectNodes$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$selectNodes$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("selectNodes")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$selectNodes$VH() { return IXMLDOMNotationVtbl$selectNodes$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$selectSingleNode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$selectSingleNode$LAYOUT() { return IXMLDOMNotationVtbl$selectSingleNode$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$selectSingleNode$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("selectSingleNode")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$selectSingleNode$VH() { return IXMLDOMNotationVtbl$selectSingleNode$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_parsed$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_parsed$LAYOUT() { return IXMLDOMNotationVtbl$get_parsed$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_parsed$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_parsed")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_parsed$VH() { return IXMLDOMNotationVtbl$get_parsed$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_namespaceURI$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_namespaceURI$LAYOUT() { return IXMLDOMNotationVtbl$get_namespaceURI$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_namespaceURI$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_namespaceURI")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_namespaceURI$VH() { return IXMLDOMNotationVtbl$get_namespaceURI$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_prefix$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_prefix$LAYOUT() { return IXMLDOMNotationVtbl$get_prefix$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_prefix$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_prefix")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_prefix$VH() { return IXMLDOMNotationVtbl$get_prefix$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_baseName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_baseName$LAYOUT() { return IXMLDOMNotationVtbl$get_baseName$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_baseName$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_baseName")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_baseName$VH() { return IXMLDOMNotationVtbl$get_baseName$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$transformNodeToObject$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$transformNodeToObject$LAYOUT() { return IXMLDOMNotationVtbl$transformNodeToObject$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$transformNodeToObject$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("transformNodeToObject")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$transformNodeToObject$VH() { return IXMLDOMNotationVtbl$transformNodeToObject$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_publicId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_publicId$LAYOUT() { return IXMLDOMNotationVtbl$get_publicId$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_publicId$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_publicId")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_publicId$VH() { return IXMLDOMNotationVtbl$get_publicId$VH_; }

    static final MemoryLayout IXMLDOMNotationVtbl$get_systemId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotationVtbl$get_systemId$LAYOUT() { return IXMLDOMNotationVtbl$get_systemId$LAYOUT_; }

    static final VarHandle IXMLDOMNotationVtbl$get_systemId$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotationVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_systemId")));
    static final java.lang.invoke.VarHandle IXMLDOMNotationVtbl$get_systemId$VH() { return IXMLDOMNotationVtbl$get_systemId$VH_; }

    static final MemoryLayout IXMLDOMNotation$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IXMLDOMNotation");
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotation$struct$LAYOUT() { return IXMLDOMNotation$struct$LAYOUT_; }

    static final MemoryLayout IXMLDOMNotation$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMNotation$lpVtbl$LAYOUT() { return IXMLDOMNotation$lpVtbl$LAYOUT_; }

    static final VarHandle IXMLDOMNotation$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMNotation$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IXMLDOMNotation$lpVtbl$VH() { return IXMLDOMNotation$lpVtbl$VH_; }

    static final MemoryLayout IID_IXMLDOMEntity$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IXMLDOMEntity$LAYOUT() { return IID_IXMLDOMEntity$LAYOUT_; }

    static final MemorySegment IID_IXMLDOMEntity$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IXMLDOMEntity", IID_IXMLDOMEntity$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IXMLDOMEntity$SEGMENT() { return IID_IXMLDOMEntity$SEGMENT_; }

    static final MemoryLayout IXMLDOMEntityVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetTypeInfoCount"),
        C_POINTER.withName("GetTypeInfo"),
        C_POINTER.withName("GetIDsOfNames"),
        C_POINTER.withName("Invoke"),
        C_POINTER.withName("get_nodeName"),
        C_POINTER.withName("get_nodeValue"),
        C_POINTER.withName("put_nodeValue"),
        C_POINTER.withName("get_nodeType"),
        C_POINTER.withName("get_parentNode"),
        C_POINTER.withName("get_childNodes"),
        C_POINTER.withName("get_firstChild"),
        C_POINTER.withName("get_lastChild"),
        C_POINTER.withName("get_previousSibling"),
        C_POINTER.withName("get_nextSibling"),
        C_POINTER.withName("get_attributes"),
        C_POINTER.withName("insertBefore"),
        C_POINTER.withName("replaceChild"),
        C_POINTER.withName("removeChild"),
        C_POINTER.withName("appendChild"),
        C_POINTER.withName("hasChildNodes"),
        C_POINTER.withName("get_ownerDocument"),
        C_POINTER.withName("cloneNode"),
        C_POINTER.withName("get_nodeTypeString"),
        C_POINTER.withName("get_text"),
        C_POINTER.withName("put_text"),
        C_POINTER.withName("get_specified"),
        C_POINTER.withName("get_definition"),
        C_POINTER.withName("get_nodeTypedValue"),
        C_POINTER.withName("put_nodeTypedValue"),
        C_POINTER.withName("get_dataType"),
        C_POINTER.withName("put_dataType"),
        C_POINTER.withName("get_xml"),
        C_POINTER.withName("transformNode"),
        C_POINTER.withName("selectNodes"),
        C_POINTER.withName("selectSingleNode"),
        C_POINTER.withName("get_parsed"),
        C_POINTER.withName("get_namespaceURI"),
        C_POINTER.withName("get_prefix"),
        C_POINTER.withName("get_baseName"),
        C_POINTER.withName("transformNodeToObject"),
        C_POINTER.withName("get_publicId"),
        C_POINTER.withName("get_systemId"),
        C_POINTER.withName("get_notationName")
    ).withName("IXMLDOMEntityVtbl");
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$struct$LAYOUT() { return IXMLDOMEntityVtbl$struct$LAYOUT_; }

    static final MemoryLayout IXMLDOMEntityVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$QueryInterface$LAYOUT() { return IXMLDOMEntityVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$QueryInterface$VH() { return IXMLDOMEntityVtbl$QueryInterface$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$AddRef$LAYOUT() { return IXMLDOMEntityVtbl$AddRef$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$AddRef$VH() { return IXMLDOMEntityVtbl$AddRef$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$Release$LAYOUT() { return IXMLDOMEntityVtbl$Release$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$Release$VH() { return IXMLDOMEntityVtbl$Release$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$GetTypeInfoCount$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$GetTypeInfoCount$LAYOUT() { return IXMLDOMEntityVtbl$GetTypeInfoCount$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$GetTypeInfoCount$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfoCount")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$GetTypeInfoCount$VH() { return IXMLDOMEntityVtbl$GetTypeInfoCount$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$GetTypeInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$GetTypeInfo$LAYOUT() { return IXMLDOMEntityVtbl$GetTypeInfo$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$GetTypeInfo$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfo")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$GetTypeInfo$VH() { return IXMLDOMEntityVtbl$GetTypeInfo$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$GetIDsOfNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$GetIDsOfNames$LAYOUT() { return IXMLDOMEntityVtbl$GetIDsOfNames$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$GetIDsOfNames$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetIDsOfNames")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$GetIDsOfNames$VH() { return IXMLDOMEntityVtbl$GetIDsOfNames$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$Invoke$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$Invoke$LAYOUT() { return IXMLDOMEntityVtbl$Invoke$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$Invoke$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Invoke")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$Invoke$VH() { return IXMLDOMEntityVtbl$Invoke$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_nodeName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_nodeName$LAYOUT() { return IXMLDOMEntityVtbl$get_nodeName$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_nodeName$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nodeName")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_nodeName$VH() { return IXMLDOMEntityVtbl$get_nodeName$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_nodeValue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_nodeValue$LAYOUT() { return IXMLDOMEntityVtbl$get_nodeValue$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_nodeValue$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nodeValue")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_nodeValue$VH() { return IXMLDOMEntityVtbl$get_nodeValue$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$put_nodeValue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$put_nodeValue$LAYOUT() { return IXMLDOMEntityVtbl$put_nodeValue$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$put_nodeValue$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_nodeValue")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$put_nodeValue$VH() { return IXMLDOMEntityVtbl$put_nodeValue$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_nodeType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_nodeType$LAYOUT() { return IXMLDOMEntityVtbl$get_nodeType$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_nodeType$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nodeType")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_nodeType$VH() { return IXMLDOMEntityVtbl$get_nodeType$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_parentNode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_parentNode$LAYOUT() { return IXMLDOMEntityVtbl$get_parentNode$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_parentNode$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_parentNode")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_parentNode$VH() { return IXMLDOMEntityVtbl$get_parentNode$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_childNodes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_childNodes$LAYOUT() { return IXMLDOMEntityVtbl$get_childNodes$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_childNodes$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_childNodes")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_childNodes$VH() { return IXMLDOMEntityVtbl$get_childNodes$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_firstChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_firstChild$LAYOUT() { return IXMLDOMEntityVtbl$get_firstChild$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_firstChild$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_firstChild")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_firstChild$VH() { return IXMLDOMEntityVtbl$get_firstChild$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_lastChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_lastChild$LAYOUT() { return IXMLDOMEntityVtbl$get_lastChild$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_lastChild$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_lastChild")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_lastChild$VH() { return IXMLDOMEntityVtbl$get_lastChild$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_previousSibling$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_previousSibling$LAYOUT() { return IXMLDOMEntityVtbl$get_previousSibling$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_previousSibling$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_previousSibling")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_previousSibling$VH() { return IXMLDOMEntityVtbl$get_previousSibling$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_nextSibling$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_nextSibling$LAYOUT() { return IXMLDOMEntityVtbl$get_nextSibling$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_nextSibling$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nextSibling")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_nextSibling$VH() { return IXMLDOMEntityVtbl$get_nextSibling$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_attributes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_attributes$LAYOUT() { return IXMLDOMEntityVtbl$get_attributes$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_attributes$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_attributes")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_attributes$VH() { return IXMLDOMEntityVtbl$get_attributes$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$insertBefore$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$insertBefore$LAYOUT() { return IXMLDOMEntityVtbl$insertBefore$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$insertBefore$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("insertBefore")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$insertBefore$VH() { return IXMLDOMEntityVtbl$insertBefore$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$replaceChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$replaceChild$LAYOUT() { return IXMLDOMEntityVtbl$replaceChild$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$replaceChild$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("replaceChild")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$replaceChild$VH() { return IXMLDOMEntityVtbl$replaceChild$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$removeChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$removeChild$LAYOUT() { return IXMLDOMEntityVtbl$removeChild$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$removeChild$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("removeChild")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$removeChild$VH() { return IXMLDOMEntityVtbl$removeChild$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$appendChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$appendChild$LAYOUT() { return IXMLDOMEntityVtbl$appendChild$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$appendChild$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("appendChild")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$appendChild$VH() { return IXMLDOMEntityVtbl$appendChild$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$hasChildNodes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$hasChildNodes$LAYOUT() { return IXMLDOMEntityVtbl$hasChildNodes$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$hasChildNodes$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hasChildNodes")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$hasChildNodes$VH() { return IXMLDOMEntityVtbl$hasChildNodes$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_ownerDocument$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_ownerDocument$LAYOUT() { return IXMLDOMEntityVtbl$get_ownerDocument$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_ownerDocument$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_ownerDocument")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_ownerDocument$VH() { return IXMLDOMEntityVtbl$get_ownerDocument$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$cloneNode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$cloneNode$LAYOUT() { return IXMLDOMEntityVtbl$cloneNode$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$cloneNode$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("cloneNode")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$cloneNode$VH() { return IXMLDOMEntityVtbl$cloneNode$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_nodeTypeString$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_nodeTypeString$LAYOUT() { return IXMLDOMEntityVtbl$get_nodeTypeString$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_nodeTypeString$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nodeTypeString")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_nodeTypeString$VH() { return IXMLDOMEntityVtbl$get_nodeTypeString$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_text$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_text$LAYOUT() { return IXMLDOMEntityVtbl$get_text$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_text$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_text")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_text$VH() { return IXMLDOMEntityVtbl$get_text$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$put_text$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$put_text$LAYOUT() { return IXMLDOMEntityVtbl$put_text$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$put_text$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_text")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$put_text$VH() { return IXMLDOMEntityVtbl$put_text$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_specified$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_specified$LAYOUT() { return IXMLDOMEntityVtbl$get_specified$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_specified$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_specified")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_specified$VH() { return IXMLDOMEntityVtbl$get_specified$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_definition$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_definition$LAYOUT() { return IXMLDOMEntityVtbl$get_definition$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_definition$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_definition")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_definition$VH() { return IXMLDOMEntityVtbl$get_definition$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_nodeTypedValue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_nodeTypedValue$LAYOUT() { return IXMLDOMEntityVtbl$get_nodeTypedValue$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_nodeTypedValue$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nodeTypedValue")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_nodeTypedValue$VH() { return IXMLDOMEntityVtbl$get_nodeTypedValue$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$put_nodeTypedValue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$put_nodeTypedValue$LAYOUT() { return IXMLDOMEntityVtbl$put_nodeTypedValue$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$put_nodeTypedValue$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_nodeTypedValue")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$put_nodeTypedValue$VH() { return IXMLDOMEntityVtbl$put_nodeTypedValue$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_dataType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_dataType$LAYOUT() { return IXMLDOMEntityVtbl$get_dataType$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_dataType$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_dataType")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_dataType$VH() { return IXMLDOMEntityVtbl$get_dataType$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$put_dataType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$put_dataType$LAYOUT() { return IXMLDOMEntityVtbl$put_dataType$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$put_dataType$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_dataType")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$put_dataType$VH() { return IXMLDOMEntityVtbl$put_dataType$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_xml$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_xml$LAYOUT() { return IXMLDOMEntityVtbl$get_xml$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_xml$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_xml")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_xml$VH() { return IXMLDOMEntityVtbl$get_xml$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$transformNode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$transformNode$LAYOUT() { return IXMLDOMEntityVtbl$transformNode$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$transformNode$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("transformNode")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$transformNode$VH() { return IXMLDOMEntityVtbl$transformNode$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$selectNodes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$selectNodes$LAYOUT() { return IXMLDOMEntityVtbl$selectNodes$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$selectNodes$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("selectNodes")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$selectNodes$VH() { return IXMLDOMEntityVtbl$selectNodes$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$selectSingleNode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$selectSingleNode$LAYOUT() { return IXMLDOMEntityVtbl$selectSingleNode$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$selectSingleNode$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("selectSingleNode")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$selectSingleNode$VH() { return IXMLDOMEntityVtbl$selectSingleNode$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_parsed$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_parsed$LAYOUT() { return IXMLDOMEntityVtbl$get_parsed$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_parsed$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_parsed")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_parsed$VH() { return IXMLDOMEntityVtbl$get_parsed$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_namespaceURI$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_namespaceURI$LAYOUT() { return IXMLDOMEntityVtbl$get_namespaceURI$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_namespaceURI$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_namespaceURI")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_namespaceURI$VH() { return IXMLDOMEntityVtbl$get_namespaceURI$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_prefix$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_prefix$LAYOUT() { return IXMLDOMEntityVtbl$get_prefix$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_prefix$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_prefix")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_prefix$VH() { return IXMLDOMEntityVtbl$get_prefix$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_baseName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_baseName$LAYOUT() { return IXMLDOMEntityVtbl$get_baseName$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_baseName$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_baseName")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_baseName$VH() { return IXMLDOMEntityVtbl$get_baseName$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$transformNodeToObject$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$transformNodeToObject$LAYOUT() { return IXMLDOMEntityVtbl$transformNodeToObject$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$transformNodeToObject$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("transformNodeToObject")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$transformNodeToObject$VH() { return IXMLDOMEntityVtbl$transformNodeToObject$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_publicId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_publicId$LAYOUT() { return IXMLDOMEntityVtbl$get_publicId$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_publicId$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_publicId")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_publicId$VH() { return IXMLDOMEntityVtbl$get_publicId$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_systemId$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_systemId$LAYOUT() { return IXMLDOMEntityVtbl$get_systemId$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_systemId$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_systemId")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_systemId$VH() { return IXMLDOMEntityVtbl$get_systemId$VH_; }

    static final MemoryLayout IXMLDOMEntityVtbl$get_notationName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityVtbl$get_notationName$LAYOUT() { return IXMLDOMEntityVtbl$get_notationName$LAYOUT_; }

    static final VarHandle IXMLDOMEntityVtbl$get_notationName$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_notationName")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityVtbl$get_notationName$VH() { return IXMLDOMEntityVtbl$get_notationName$VH_; }

    static final MemoryLayout IXMLDOMEntity$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IXMLDOMEntity");
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntity$struct$LAYOUT() { return IXMLDOMEntity$struct$LAYOUT_; }

    static final MemoryLayout IXMLDOMEntity$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntity$lpVtbl$LAYOUT() { return IXMLDOMEntity$lpVtbl$LAYOUT_; }

    static final VarHandle IXMLDOMEntity$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntity$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IXMLDOMEntity$lpVtbl$VH() { return IXMLDOMEntity$lpVtbl$VH_; }

    static final MemoryLayout IID_IXMLDOMEntityReference$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IXMLDOMEntityReference$LAYOUT() { return IID_IXMLDOMEntityReference$LAYOUT_; }

    static final MemorySegment IID_IXMLDOMEntityReference$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IXMLDOMEntityReference", IID_IXMLDOMEntityReference$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IXMLDOMEntityReference$SEGMENT() { return IID_IXMLDOMEntityReference$SEGMENT_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetTypeInfoCount"),
        C_POINTER.withName("GetTypeInfo"),
        C_POINTER.withName("GetIDsOfNames"),
        C_POINTER.withName("Invoke"),
        C_POINTER.withName("get_nodeName"),
        C_POINTER.withName("get_nodeValue"),
        C_POINTER.withName("put_nodeValue"),
        C_POINTER.withName("get_nodeType"),
        C_POINTER.withName("get_parentNode"),
        C_POINTER.withName("get_childNodes"),
        C_POINTER.withName("get_firstChild"),
        C_POINTER.withName("get_lastChild"),
        C_POINTER.withName("get_previousSibling"),
        C_POINTER.withName("get_nextSibling"),
        C_POINTER.withName("get_attributes"),
        C_POINTER.withName("insertBefore"),
        C_POINTER.withName("replaceChild"),
        C_POINTER.withName("removeChild"),
        C_POINTER.withName("appendChild"),
        C_POINTER.withName("hasChildNodes"),
        C_POINTER.withName("get_ownerDocument"),
        C_POINTER.withName("cloneNode"),
        C_POINTER.withName("get_nodeTypeString"),
        C_POINTER.withName("get_text"),
        C_POINTER.withName("put_text"),
        C_POINTER.withName("get_specified"),
        C_POINTER.withName("get_definition"),
        C_POINTER.withName("get_nodeTypedValue"),
        C_POINTER.withName("put_nodeTypedValue"),
        C_POINTER.withName("get_dataType"),
        C_POINTER.withName("put_dataType"),
        C_POINTER.withName("get_xml"),
        C_POINTER.withName("transformNode"),
        C_POINTER.withName("selectNodes"),
        C_POINTER.withName("selectSingleNode"),
        C_POINTER.withName("get_parsed"),
        C_POINTER.withName("get_namespaceURI"),
        C_POINTER.withName("get_prefix"),
        C_POINTER.withName("get_baseName"),
        C_POINTER.withName("transformNodeToObject")
    ).withName("IXMLDOMEntityReferenceVtbl");
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$struct$LAYOUT() { return IXMLDOMEntityReferenceVtbl$struct$LAYOUT_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$QueryInterface$LAYOUT() { return IXMLDOMEntityReferenceVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$QueryInterface$VH() { return IXMLDOMEntityReferenceVtbl$QueryInterface$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$AddRef$LAYOUT() { return IXMLDOMEntityReferenceVtbl$AddRef$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$AddRef$VH() { return IXMLDOMEntityReferenceVtbl$AddRef$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$Release$LAYOUT() { return IXMLDOMEntityReferenceVtbl$Release$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$Release$VH() { return IXMLDOMEntityReferenceVtbl$Release$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$GetTypeInfoCount$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$GetTypeInfoCount$LAYOUT() { return IXMLDOMEntityReferenceVtbl$GetTypeInfoCount$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$GetTypeInfoCount$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfoCount")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$GetTypeInfoCount$VH() { return IXMLDOMEntityReferenceVtbl$GetTypeInfoCount$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$GetTypeInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$GetTypeInfo$LAYOUT() { return IXMLDOMEntityReferenceVtbl$GetTypeInfo$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$GetTypeInfo$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfo")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$GetTypeInfo$VH() { return IXMLDOMEntityReferenceVtbl$GetTypeInfo$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$GetIDsOfNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$GetIDsOfNames$LAYOUT() { return IXMLDOMEntityReferenceVtbl$GetIDsOfNames$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$GetIDsOfNames$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetIDsOfNames")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$GetIDsOfNames$VH() { return IXMLDOMEntityReferenceVtbl$GetIDsOfNames$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$Invoke$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$Invoke$LAYOUT() { return IXMLDOMEntityReferenceVtbl$Invoke$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$Invoke$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Invoke")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$Invoke$VH() { return IXMLDOMEntityReferenceVtbl$Invoke$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_nodeName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_nodeName$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_nodeName$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_nodeName$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nodeName")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_nodeName$VH() { return IXMLDOMEntityReferenceVtbl$get_nodeName$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_nodeValue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_nodeValue$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_nodeValue$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_nodeValue$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nodeValue")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_nodeValue$VH() { return IXMLDOMEntityReferenceVtbl$get_nodeValue$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$put_nodeValue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$put_nodeValue$LAYOUT() { return IXMLDOMEntityReferenceVtbl$put_nodeValue$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$put_nodeValue$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_nodeValue")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$put_nodeValue$VH() { return IXMLDOMEntityReferenceVtbl$put_nodeValue$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_nodeType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_nodeType$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_nodeType$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_nodeType$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nodeType")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_nodeType$VH() { return IXMLDOMEntityReferenceVtbl$get_nodeType$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_parentNode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_parentNode$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_parentNode$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_parentNode$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_parentNode")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_parentNode$VH() { return IXMLDOMEntityReferenceVtbl$get_parentNode$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_childNodes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_childNodes$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_childNodes$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_childNodes$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_childNodes")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_childNodes$VH() { return IXMLDOMEntityReferenceVtbl$get_childNodes$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_firstChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_firstChild$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_firstChild$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_firstChild$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_firstChild")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_firstChild$VH() { return IXMLDOMEntityReferenceVtbl$get_firstChild$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_lastChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_lastChild$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_lastChild$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_lastChild$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_lastChild")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_lastChild$VH() { return IXMLDOMEntityReferenceVtbl$get_lastChild$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_previousSibling$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_previousSibling$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_previousSibling$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_previousSibling$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_previousSibling")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_previousSibling$VH() { return IXMLDOMEntityReferenceVtbl$get_previousSibling$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_nextSibling$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_nextSibling$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_nextSibling$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_nextSibling$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nextSibling")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_nextSibling$VH() { return IXMLDOMEntityReferenceVtbl$get_nextSibling$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_attributes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_attributes$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_attributes$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_attributes$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_attributes")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_attributes$VH() { return IXMLDOMEntityReferenceVtbl$get_attributes$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$insertBefore$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$insertBefore$LAYOUT() { return IXMLDOMEntityReferenceVtbl$insertBefore$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$insertBefore$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("insertBefore")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$insertBefore$VH() { return IXMLDOMEntityReferenceVtbl$insertBefore$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$replaceChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$replaceChild$LAYOUT() { return IXMLDOMEntityReferenceVtbl$replaceChild$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$replaceChild$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("replaceChild")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$replaceChild$VH() { return IXMLDOMEntityReferenceVtbl$replaceChild$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$removeChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$removeChild$LAYOUT() { return IXMLDOMEntityReferenceVtbl$removeChild$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$removeChild$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("removeChild")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$removeChild$VH() { return IXMLDOMEntityReferenceVtbl$removeChild$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$appendChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$appendChild$LAYOUT() { return IXMLDOMEntityReferenceVtbl$appendChild$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$appendChild$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("appendChild")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$appendChild$VH() { return IXMLDOMEntityReferenceVtbl$appendChild$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$hasChildNodes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$hasChildNodes$LAYOUT() { return IXMLDOMEntityReferenceVtbl$hasChildNodes$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$hasChildNodes$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hasChildNodes")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$hasChildNodes$VH() { return IXMLDOMEntityReferenceVtbl$hasChildNodes$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_ownerDocument$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_ownerDocument$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_ownerDocument$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_ownerDocument$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_ownerDocument")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_ownerDocument$VH() { return IXMLDOMEntityReferenceVtbl$get_ownerDocument$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$cloneNode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$cloneNode$LAYOUT() { return IXMLDOMEntityReferenceVtbl$cloneNode$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$cloneNode$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("cloneNode")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$cloneNode$VH() { return IXMLDOMEntityReferenceVtbl$cloneNode$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_nodeTypeString$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_nodeTypeString$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_nodeTypeString$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_nodeTypeString$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nodeTypeString")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_nodeTypeString$VH() { return IXMLDOMEntityReferenceVtbl$get_nodeTypeString$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_text$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_text$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_text$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_text$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_text")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_text$VH() { return IXMLDOMEntityReferenceVtbl$get_text$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$put_text$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$put_text$LAYOUT() { return IXMLDOMEntityReferenceVtbl$put_text$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$put_text$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_text")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$put_text$VH() { return IXMLDOMEntityReferenceVtbl$put_text$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_specified$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_specified$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_specified$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_specified$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_specified")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_specified$VH() { return IXMLDOMEntityReferenceVtbl$get_specified$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_definition$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_definition$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_definition$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_definition$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_definition")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_definition$VH() { return IXMLDOMEntityReferenceVtbl$get_definition$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_nodeTypedValue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_nodeTypedValue$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_nodeTypedValue$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_nodeTypedValue$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nodeTypedValue")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_nodeTypedValue$VH() { return IXMLDOMEntityReferenceVtbl$get_nodeTypedValue$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$put_nodeTypedValue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$put_nodeTypedValue$LAYOUT() { return IXMLDOMEntityReferenceVtbl$put_nodeTypedValue$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$put_nodeTypedValue$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_nodeTypedValue")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$put_nodeTypedValue$VH() { return IXMLDOMEntityReferenceVtbl$put_nodeTypedValue$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_dataType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_dataType$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_dataType$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_dataType$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_dataType")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_dataType$VH() { return IXMLDOMEntityReferenceVtbl$get_dataType$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$put_dataType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$put_dataType$LAYOUT() { return IXMLDOMEntityReferenceVtbl$put_dataType$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$put_dataType$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_dataType")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$put_dataType$VH() { return IXMLDOMEntityReferenceVtbl$put_dataType$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_xml$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_xml$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_xml$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_xml$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_xml")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_xml$VH() { return IXMLDOMEntityReferenceVtbl$get_xml$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$transformNode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$transformNode$LAYOUT() { return IXMLDOMEntityReferenceVtbl$transformNode$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$transformNode$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("transformNode")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$transformNode$VH() { return IXMLDOMEntityReferenceVtbl$transformNode$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$selectNodes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$selectNodes$LAYOUT() { return IXMLDOMEntityReferenceVtbl$selectNodes$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$selectNodes$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("selectNodes")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$selectNodes$VH() { return IXMLDOMEntityReferenceVtbl$selectNodes$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$selectSingleNode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$selectSingleNode$LAYOUT() { return IXMLDOMEntityReferenceVtbl$selectSingleNode$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$selectSingleNode$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("selectSingleNode")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$selectSingleNode$VH() { return IXMLDOMEntityReferenceVtbl$selectSingleNode$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_parsed$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_parsed$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_parsed$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_parsed$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_parsed")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_parsed$VH() { return IXMLDOMEntityReferenceVtbl$get_parsed$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_namespaceURI$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_namespaceURI$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_namespaceURI$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_namespaceURI$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_namespaceURI")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_namespaceURI$VH() { return IXMLDOMEntityReferenceVtbl$get_namespaceURI$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_prefix$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_prefix$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_prefix$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_prefix$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_prefix")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_prefix$VH() { return IXMLDOMEntityReferenceVtbl$get_prefix$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$get_baseName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$get_baseName$LAYOUT() { return IXMLDOMEntityReferenceVtbl$get_baseName$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$get_baseName$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_baseName")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$get_baseName$VH() { return IXMLDOMEntityReferenceVtbl$get_baseName$VH_; }

    static final MemoryLayout IXMLDOMEntityReferenceVtbl$transformNodeToObject$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReferenceVtbl$transformNodeToObject$LAYOUT() { return IXMLDOMEntityReferenceVtbl$transformNodeToObject$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReferenceVtbl$transformNodeToObject$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReferenceVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("transformNodeToObject")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReferenceVtbl$transformNodeToObject$VH() { return IXMLDOMEntityReferenceVtbl$transformNodeToObject$VH_; }

    static final MemoryLayout IXMLDOMEntityReference$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IXMLDOMEntityReference");
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReference$struct$LAYOUT() { return IXMLDOMEntityReference$struct$LAYOUT_; }

    static final MemoryLayout IXMLDOMEntityReference$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMEntityReference$lpVtbl$LAYOUT() { return IXMLDOMEntityReference$lpVtbl$LAYOUT_; }

    static final VarHandle IXMLDOMEntityReference$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMEntityReference$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IXMLDOMEntityReference$lpVtbl$VH() { return IXMLDOMEntityReference$lpVtbl$VH_; }

    static final MemoryLayout IID_IXMLDOMParseError$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IXMLDOMParseError$LAYOUT() { return IID_IXMLDOMParseError$LAYOUT_; }

    static final MemorySegment IID_IXMLDOMParseError$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IXMLDOMParseError", IID_IXMLDOMParseError$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IXMLDOMParseError$SEGMENT() { return IID_IXMLDOMParseError$SEGMENT_; }

    static final MemoryLayout IXMLDOMParseErrorVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetTypeInfoCount"),
        C_POINTER.withName("GetTypeInfo"),
        C_POINTER.withName("GetIDsOfNames"),
        C_POINTER.withName("Invoke"),
        C_POINTER.withName("get_errorCode"),
        C_POINTER.withName("get_url"),
        C_POINTER.withName("get_reason"),
        C_POINTER.withName("get_srcText"),
        C_POINTER.withName("get_line"),
        C_POINTER.withName("get_linepos"),
        C_POINTER.withName("get_filepos")
    ).withName("IXMLDOMParseErrorVtbl");
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMParseErrorVtbl$struct$LAYOUT() { return IXMLDOMParseErrorVtbl$struct$LAYOUT_; }

    static final MemoryLayout IXMLDOMParseErrorVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMParseErrorVtbl$QueryInterface$LAYOUT() { return IXMLDOMParseErrorVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IXMLDOMParseErrorVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMParseErrorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IXMLDOMParseErrorVtbl$QueryInterface$VH() { return IXMLDOMParseErrorVtbl$QueryInterface$VH_; }

    static final MemoryLayout IXMLDOMParseErrorVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMParseErrorVtbl$AddRef$LAYOUT() { return IXMLDOMParseErrorVtbl$AddRef$LAYOUT_; }

    static final VarHandle IXMLDOMParseErrorVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMParseErrorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IXMLDOMParseErrorVtbl$AddRef$VH() { return IXMLDOMParseErrorVtbl$AddRef$VH_; }

    static final MemoryLayout IXMLDOMParseErrorVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMParseErrorVtbl$Release$LAYOUT() { return IXMLDOMParseErrorVtbl$Release$LAYOUT_; }

    static final VarHandle IXMLDOMParseErrorVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMParseErrorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IXMLDOMParseErrorVtbl$Release$VH() { return IXMLDOMParseErrorVtbl$Release$VH_; }

    static final MemoryLayout IXMLDOMParseErrorVtbl$GetTypeInfoCount$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMParseErrorVtbl$GetTypeInfoCount$LAYOUT() { return IXMLDOMParseErrorVtbl$GetTypeInfoCount$LAYOUT_; }

    static final VarHandle IXMLDOMParseErrorVtbl$GetTypeInfoCount$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMParseErrorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfoCount")));
    static final java.lang.invoke.VarHandle IXMLDOMParseErrorVtbl$GetTypeInfoCount$VH() { return IXMLDOMParseErrorVtbl$GetTypeInfoCount$VH_; }

    static final MemoryLayout IXMLDOMParseErrorVtbl$GetTypeInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMParseErrorVtbl$GetTypeInfo$LAYOUT() { return IXMLDOMParseErrorVtbl$GetTypeInfo$LAYOUT_; }

    static final VarHandle IXMLDOMParseErrorVtbl$GetTypeInfo$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMParseErrorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfo")));
    static final java.lang.invoke.VarHandle IXMLDOMParseErrorVtbl$GetTypeInfo$VH() { return IXMLDOMParseErrorVtbl$GetTypeInfo$VH_; }

    static final MemoryLayout IXMLDOMParseErrorVtbl$GetIDsOfNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMParseErrorVtbl$GetIDsOfNames$LAYOUT() { return IXMLDOMParseErrorVtbl$GetIDsOfNames$LAYOUT_; }

    static final VarHandle IXMLDOMParseErrorVtbl$GetIDsOfNames$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMParseErrorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetIDsOfNames")));
    static final java.lang.invoke.VarHandle IXMLDOMParseErrorVtbl$GetIDsOfNames$VH() { return IXMLDOMParseErrorVtbl$GetIDsOfNames$VH_; }

    static final MemoryLayout IXMLDOMParseErrorVtbl$Invoke$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMParseErrorVtbl$Invoke$LAYOUT() { return IXMLDOMParseErrorVtbl$Invoke$LAYOUT_; }

    static final VarHandle IXMLDOMParseErrorVtbl$Invoke$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMParseErrorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Invoke")));
    static final java.lang.invoke.VarHandle IXMLDOMParseErrorVtbl$Invoke$VH() { return IXMLDOMParseErrorVtbl$Invoke$VH_; }

    static final MemoryLayout IXMLDOMParseErrorVtbl$get_errorCode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMParseErrorVtbl$get_errorCode$LAYOUT() { return IXMLDOMParseErrorVtbl$get_errorCode$LAYOUT_; }

    static final VarHandle IXMLDOMParseErrorVtbl$get_errorCode$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMParseErrorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_errorCode")));
    static final java.lang.invoke.VarHandle IXMLDOMParseErrorVtbl$get_errorCode$VH() { return IXMLDOMParseErrorVtbl$get_errorCode$VH_; }

    static final MemoryLayout IXMLDOMParseErrorVtbl$get_url$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMParseErrorVtbl$get_url$LAYOUT() { return IXMLDOMParseErrorVtbl$get_url$LAYOUT_; }

    static final VarHandle IXMLDOMParseErrorVtbl$get_url$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMParseErrorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_url")));
    static final java.lang.invoke.VarHandle IXMLDOMParseErrorVtbl$get_url$VH() { return IXMLDOMParseErrorVtbl$get_url$VH_; }

    static final MemoryLayout IXMLDOMParseErrorVtbl$get_reason$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMParseErrorVtbl$get_reason$LAYOUT() { return IXMLDOMParseErrorVtbl$get_reason$LAYOUT_; }

    static final VarHandle IXMLDOMParseErrorVtbl$get_reason$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMParseErrorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_reason")));
    static final java.lang.invoke.VarHandle IXMLDOMParseErrorVtbl$get_reason$VH() { return IXMLDOMParseErrorVtbl$get_reason$VH_; }

    static final MemoryLayout IXMLDOMParseErrorVtbl$get_srcText$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMParseErrorVtbl$get_srcText$LAYOUT() { return IXMLDOMParseErrorVtbl$get_srcText$LAYOUT_; }

    static final VarHandle IXMLDOMParseErrorVtbl$get_srcText$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMParseErrorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_srcText")));
    static final java.lang.invoke.VarHandle IXMLDOMParseErrorVtbl$get_srcText$VH() { return IXMLDOMParseErrorVtbl$get_srcText$VH_; }

    static final MemoryLayout IXMLDOMParseErrorVtbl$get_line$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMParseErrorVtbl$get_line$LAYOUT() { return IXMLDOMParseErrorVtbl$get_line$LAYOUT_; }

    static final VarHandle IXMLDOMParseErrorVtbl$get_line$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMParseErrorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_line")));
    static final java.lang.invoke.VarHandle IXMLDOMParseErrorVtbl$get_line$VH() { return IXMLDOMParseErrorVtbl$get_line$VH_; }

    static final MemoryLayout IXMLDOMParseErrorVtbl$get_linepos$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMParseErrorVtbl$get_linepos$LAYOUT() { return IXMLDOMParseErrorVtbl$get_linepos$LAYOUT_; }

    static final VarHandle IXMLDOMParseErrorVtbl$get_linepos$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMParseErrorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_linepos")));
    static final java.lang.invoke.VarHandle IXMLDOMParseErrorVtbl$get_linepos$VH() { return IXMLDOMParseErrorVtbl$get_linepos$VH_; }

    static final MemoryLayout IXMLDOMParseErrorVtbl$get_filepos$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMParseErrorVtbl$get_filepos$LAYOUT() { return IXMLDOMParseErrorVtbl$get_filepos$LAYOUT_; }

    static final VarHandle IXMLDOMParseErrorVtbl$get_filepos$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMParseErrorVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_filepos")));
    static final java.lang.invoke.VarHandle IXMLDOMParseErrorVtbl$get_filepos$VH() { return IXMLDOMParseErrorVtbl$get_filepos$VH_; }

    static final MemoryLayout IXMLDOMParseError$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpVtbl")
    ).withName("IXMLDOMParseError");
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMParseError$struct$LAYOUT() { return IXMLDOMParseError$struct$LAYOUT_; }

    static final MemoryLayout IXMLDOMParseError$lpVtbl$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXMLDOMParseError$lpVtbl$LAYOUT() { return IXMLDOMParseError$lpVtbl$LAYOUT_; }

    static final VarHandle IXMLDOMParseError$lpVtbl$VH_ = MemoryHandles.asAddressVarHandle(IXMLDOMParseError$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpVtbl")));
    static final java.lang.invoke.VarHandle IXMLDOMParseError$lpVtbl$VH() { return IXMLDOMParseError$lpVtbl$VH_; }

    static final MemoryLayout IID_IXTLRuntime$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final jdk.incubator.foreign.MemoryLayout IID_IXTLRuntime$LAYOUT() { return IID_IXTLRuntime$LAYOUT_; }

    static final MemorySegment IID_IXTLRuntime$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "IID_IXTLRuntime", IID_IXTLRuntime$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment IID_IXTLRuntime$SEGMENT() { return IID_IXTLRuntime$SEGMENT_; }

    static final MemoryLayout IXTLRuntimeVtbl$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("QueryInterface"),
        C_POINTER.withName("AddRef"),
        C_POINTER.withName("Release"),
        C_POINTER.withName("GetTypeInfoCount"),
        C_POINTER.withName("GetTypeInfo"),
        C_POINTER.withName("GetIDsOfNames"),
        C_POINTER.withName("Invoke"),
        C_POINTER.withName("get_nodeName"),
        C_POINTER.withName("get_nodeValue"),
        C_POINTER.withName("put_nodeValue"),
        C_POINTER.withName("get_nodeType"),
        C_POINTER.withName("get_parentNode"),
        C_POINTER.withName("get_childNodes"),
        C_POINTER.withName("get_firstChild"),
        C_POINTER.withName("get_lastChild"),
        C_POINTER.withName("get_previousSibling"),
        C_POINTER.withName("get_nextSibling"),
        C_POINTER.withName("get_attributes"),
        C_POINTER.withName("insertBefore"),
        C_POINTER.withName("replaceChild"),
        C_POINTER.withName("removeChild"),
        C_POINTER.withName("appendChild"),
        C_POINTER.withName("hasChildNodes"),
        C_POINTER.withName("get_ownerDocument"),
        C_POINTER.withName("cloneNode"),
        C_POINTER.withName("get_nodeTypeString"),
        C_POINTER.withName("get_text"),
        C_POINTER.withName("put_text"),
        C_POINTER.withName("get_specified"),
        C_POINTER.withName("get_definition"),
        C_POINTER.withName("get_nodeTypedValue"),
        C_POINTER.withName("put_nodeTypedValue"),
        C_POINTER.withName("get_dataType"),
        C_POINTER.withName("put_dataType"),
        C_POINTER.withName("get_xml"),
        C_POINTER.withName("transformNode"),
        C_POINTER.withName("selectNodes"),
        C_POINTER.withName("selectSingleNode"),
        C_POINTER.withName("get_parsed"),
        C_POINTER.withName("get_namespaceURI"),
        C_POINTER.withName("get_prefix"),
        C_POINTER.withName("get_baseName"),
        C_POINTER.withName("transformNodeToObject"),
        C_POINTER.withName("uniqueID"),
        C_POINTER.withName("depth"),
        C_POINTER.withName("childNumber"),
        C_POINTER.withName("ancestorChildNumber"),
        C_POINTER.withName("absoluteChildNumber"),
        C_POINTER.withName("formatIndex"),
        C_POINTER.withName("formatNumber"),
        C_POINTER.withName("formatDate"),
        C_POINTER.withName("formatTime")
    ).withName("IXTLRuntimeVtbl");
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$struct$LAYOUT() { return IXTLRuntimeVtbl$struct$LAYOUT_; }

    static final MemoryLayout IXTLRuntimeVtbl$QueryInterface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$QueryInterface$LAYOUT() { return IXTLRuntimeVtbl$QueryInterface$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$QueryInterface$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("QueryInterface")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$QueryInterface$VH() { return IXTLRuntimeVtbl$QueryInterface$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$AddRef$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$AddRef$LAYOUT() { return IXTLRuntimeVtbl$AddRef$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$AddRef$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddRef")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$AddRef$VH() { return IXTLRuntimeVtbl$AddRef$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$Release$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$Release$LAYOUT() { return IXTLRuntimeVtbl$Release$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$Release$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Release")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$Release$VH() { return IXTLRuntimeVtbl$Release$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$GetTypeInfoCount$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$GetTypeInfoCount$LAYOUT() { return IXTLRuntimeVtbl$GetTypeInfoCount$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$GetTypeInfoCount$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfoCount")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$GetTypeInfoCount$VH() { return IXTLRuntimeVtbl$GetTypeInfoCount$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$GetTypeInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$GetTypeInfo$LAYOUT() { return IXTLRuntimeVtbl$GetTypeInfo$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$GetTypeInfo$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetTypeInfo")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$GetTypeInfo$VH() { return IXTLRuntimeVtbl$GetTypeInfo$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$GetIDsOfNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$GetIDsOfNames$LAYOUT() { return IXTLRuntimeVtbl$GetIDsOfNames$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$GetIDsOfNames$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GetIDsOfNames")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$GetIDsOfNames$VH() { return IXTLRuntimeVtbl$GetIDsOfNames$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$Invoke$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$Invoke$LAYOUT() { return IXTLRuntimeVtbl$Invoke$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$Invoke$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Invoke")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$Invoke$VH() { return IXTLRuntimeVtbl$Invoke$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_nodeName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_nodeName$LAYOUT() { return IXTLRuntimeVtbl$get_nodeName$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_nodeName$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nodeName")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_nodeName$VH() { return IXTLRuntimeVtbl$get_nodeName$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_nodeValue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_nodeValue$LAYOUT() { return IXTLRuntimeVtbl$get_nodeValue$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_nodeValue$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nodeValue")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_nodeValue$VH() { return IXTLRuntimeVtbl$get_nodeValue$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$put_nodeValue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$put_nodeValue$LAYOUT() { return IXTLRuntimeVtbl$put_nodeValue$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$put_nodeValue$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_nodeValue")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$put_nodeValue$VH() { return IXTLRuntimeVtbl$put_nodeValue$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_nodeType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_nodeType$LAYOUT() { return IXTLRuntimeVtbl$get_nodeType$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_nodeType$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nodeType")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_nodeType$VH() { return IXTLRuntimeVtbl$get_nodeType$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_parentNode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_parentNode$LAYOUT() { return IXTLRuntimeVtbl$get_parentNode$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_parentNode$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_parentNode")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_parentNode$VH() { return IXTLRuntimeVtbl$get_parentNode$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_childNodes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_childNodes$LAYOUT() { return IXTLRuntimeVtbl$get_childNodes$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_childNodes$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_childNodes")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_childNodes$VH() { return IXTLRuntimeVtbl$get_childNodes$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_firstChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_firstChild$LAYOUT() { return IXTLRuntimeVtbl$get_firstChild$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_firstChild$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_firstChild")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_firstChild$VH() { return IXTLRuntimeVtbl$get_firstChild$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_lastChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_lastChild$LAYOUT() { return IXTLRuntimeVtbl$get_lastChild$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_lastChild$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_lastChild")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_lastChild$VH() { return IXTLRuntimeVtbl$get_lastChild$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_previousSibling$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_previousSibling$LAYOUT() { return IXTLRuntimeVtbl$get_previousSibling$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_previousSibling$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_previousSibling")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_previousSibling$VH() { return IXTLRuntimeVtbl$get_previousSibling$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_nextSibling$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_nextSibling$LAYOUT() { return IXTLRuntimeVtbl$get_nextSibling$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_nextSibling$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nextSibling")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_nextSibling$VH() { return IXTLRuntimeVtbl$get_nextSibling$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_attributes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_attributes$LAYOUT() { return IXTLRuntimeVtbl$get_attributes$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_attributes$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_attributes")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_attributes$VH() { return IXTLRuntimeVtbl$get_attributes$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$insertBefore$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$insertBefore$LAYOUT() { return IXTLRuntimeVtbl$insertBefore$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$insertBefore$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("insertBefore")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$insertBefore$VH() { return IXTLRuntimeVtbl$insertBefore$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$replaceChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$replaceChild$LAYOUT() { return IXTLRuntimeVtbl$replaceChild$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$replaceChild$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("replaceChild")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$replaceChild$VH() { return IXTLRuntimeVtbl$replaceChild$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$removeChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$removeChild$LAYOUT() { return IXTLRuntimeVtbl$removeChild$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$removeChild$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("removeChild")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$removeChild$VH() { return IXTLRuntimeVtbl$removeChild$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$appendChild$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$appendChild$LAYOUT() { return IXTLRuntimeVtbl$appendChild$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$appendChild$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("appendChild")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$appendChild$VH() { return IXTLRuntimeVtbl$appendChild$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$hasChildNodes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$hasChildNodes$LAYOUT() { return IXTLRuntimeVtbl$hasChildNodes$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$hasChildNodes$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hasChildNodes")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$hasChildNodes$VH() { return IXTLRuntimeVtbl$hasChildNodes$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_ownerDocument$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_ownerDocument$LAYOUT() { return IXTLRuntimeVtbl$get_ownerDocument$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_ownerDocument$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_ownerDocument")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_ownerDocument$VH() { return IXTLRuntimeVtbl$get_ownerDocument$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$cloneNode$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$cloneNode$LAYOUT() { return IXTLRuntimeVtbl$cloneNode$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$cloneNode$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("cloneNode")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$cloneNode$VH() { return IXTLRuntimeVtbl$cloneNode$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_nodeTypeString$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_nodeTypeString$LAYOUT() { return IXTLRuntimeVtbl$get_nodeTypeString$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_nodeTypeString$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nodeTypeString")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_nodeTypeString$VH() { return IXTLRuntimeVtbl$get_nodeTypeString$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_text$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_text$LAYOUT() { return IXTLRuntimeVtbl$get_text$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_text$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_text")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_text$VH() { return IXTLRuntimeVtbl$get_text$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$put_text$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$put_text$LAYOUT() { return IXTLRuntimeVtbl$put_text$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$put_text$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_text")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$put_text$VH() { return IXTLRuntimeVtbl$put_text$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_specified$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_specified$LAYOUT() { return IXTLRuntimeVtbl$get_specified$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_specified$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_specified")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_specified$VH() { return IXTLRuntimeVtbl$get_specified$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_definition$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_definition$LAYOUT() { return IXTLRuntimeVtbl$get_definition$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_definition$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_definition")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_definition$VH() { return IXTLRuntimeVtbl$get_definition$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_nodeTypedValue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_nodeTypedValue$LAYOUT() { return IXTLRuntimeVtbl$get_nodeTypedValue$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_nodeTypedValue$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_nodeTypedValue")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_nodeTypedValue$VH() { return IXTLRuntimeVtbl$get_nodeTypedValue$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$put_nodeTypedValue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$put_nodeTypedValue$LAYOUT() { return IXTLRuntimeVtbl$put_nodeTypedValue$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$put_nodeTypedValue$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("put_nodeTypedValue")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$put_nodeTypedValue$VH() { return IXTLRuntimeVtbl$put_nodeTypedValue$VH_; }

    static final MemoryLayout IXTLRuntimeVtbl$get_dataType$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout IXTLRuntimeVtbl$get_dataType$LAYOUT() { return IXTLRuntimeVtbl$get_dataType$LAYOUT_; }

    static final VarHandle IXTLRuntimeVtbl$get_dataType$VH_ = MemoryHandles.asAddressVarHandle(IXTLRuntimeVtbl$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("get_dataType")));
    static final java.lang.invoke.VarHandle IXTLRuntimeVtbl$get_dataType$VH() { return IXTLRuntimeVtbl$get_dataType$VH_; }

}

