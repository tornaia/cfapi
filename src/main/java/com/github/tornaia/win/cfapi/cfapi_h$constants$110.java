// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$110 extends cfapi_h$constants$109 {

    /* package-private */ cfapi_h$constants$110() {}
    static final int SHIL_LAST() { return (int)4L; }

    static final MemorySegment WC_NETADDRESS$SEGMENT_CONSTANT_ = CLinker.toCString("m");
    static final jdk.incubator.foreign.MemorySegment WC_NETADDRESS() { return WC_NETADDRESS$SEGMENT_CONSTANT_; }

    static final int NCM_GETADDRESS() { return (int)1025L; }

    static final int NCM_SETALLOWTYPE() { return (int)1026L; }

    static final int NCM_GETALLOWTYPE() { return (int)1027L; }

    static final int NCM_DISPLAYERRORTIP() { return (int)1028L; }

    static final int PERF_NO_INSTANCES() { return (int)-1L; }

    static final int PERF_COUNTER_COUNTER() { return (int)272696320L; }

    static final int PERF_COUNTER_TIMER() { return (int)541132032L; }

    static final int PERF_COUNTER_QUEUELEN_TYPE() { return (int)4523008L; }

    static final int PERF_COUNTER_LARGE_QUEUELEN_TYPE() { return (int)4523264L; }

    static final int PERF_COUNTER_100NS_QUEUELEN_TYPE() { return (int)5571840L; }

    static final int PERF_COUNTER_OBJ_TIME_QUEUELEN_TYPE() { return (int)6620416L; }

    static final int PERF_COUNTER_BULK_COUNT() { return (int)272696576L; }

    static final int PERF_COUNTER_TEXT() { return (int)2816L; }

    static final int PERF_COUNTER_RAWCOUNT() { return (int)65536L; }

    static final int PERF_COUNTER_LARGE_RAWCOUNT() { return (int)65792L; }

    static final int PERF_COUNTER_RAWCOUNT_HEX() { return (int)0L; }

    static final int PERF_COUNTER_LARGE_RAWCOUNT_HEX() { return (int)256L; }

    static final int PERF_SAMPLE_FRACTION() { return (int)549585920L; }

    static final int PERF_SAMPLE_COUNTER() { return (int)4260864L; }

    static final int PERF_COUNTER_NODATA() { return (int)1073742336L; }

    static final int PERF_COUNTER_TIMER_INV() { return (int)557909248L; }

    static final int PERF_SAMPLE_BASE() { return (int)1073939457L; }

    static final int PERF_AVERAGE_TIMER() { return (int)805438464L; }

    static final int PERF_AVERAGE_BASE() { return (int)1073939458L; }

    static final int PERF_AVERAGE_BULK() { return (int)1073874176L; }

    static final int PERF_OBJ_TIME_TIMER() { return (int)543229184L; }

    static final int PERF_100NSEC_TIMER() { return (int)542180608L; }

    static final int PERF_100NSEC_TIMER_INV() { return (int)558957824L; }

    static final int PERF_COUNTER_MULTI_TIMER() { return (int)574686464L; }

    static final int PERF_COUNTER_MULTI_TIMER_INV() { return (int)591463680L; }

    static final int PERF_COUNTER_MULTI_BASE() { return (int)1107494144L; }

    static final int PERF_100NSEC_MULTI_TIMER() { return (int)575735040L; }

    static final int PERF_100NSEC_MULTI_TIMER_INV() { return (int)592512256L; }

    static final int PERF_RAW_FRACTION() { return (int)537003008L; }

    static final int PERF_LARGE_RAW_FRACTION() { return (int)537003264L; }

    static final int PERF_RAW_BASE() { return (int)1073939459L; }

    static final int PERF_LARGE_RAW_BASE() { return (int)1073939712L; }

    static final int PERF_ELAPSED_TIME() { return (int)807666944L; }

    static final int PERF_COUNTER_HISTOGRAM_TYPE() { return (int)2147483648L; }

    static final int PERF_COUNTER_DELTA() { return (int)4195328L; }

    static final int PERF_COUNTER_LARGE_DELTA() { return (int)4195584L; }

    static final int PERF_PRECISION_SYSTEM_TIMER() { return (int)541525248L; }

    static final int PERF_PRECISION_100NS_TIMER() { return (int)542573824L; }

    static final int PERF_PRECISION_OBJECT_TIMER() { return (int)543622400L; }

    static final int PERF_PRECISION_TIMESTAMP() { return (int)1073939712L; }

    static final int PERF_NO_UNIQUE_ID() { return (int)-1L; }

    static final int PERF_QUERY_OBJECTS() { return (int)-2147483648L; }

    static final int PERF_QUERY_GLOBAL() { return (int)-2147483647L; }

    static final int PERF_QUERY_COSTLY() { return (int)-2147483646L; }

    static final int MAX_PERF_OBJECTS_IN_QUERY_FUNCTION() { return (int)64L; }

    static final int IOC_IN() { return (int)2147483648L; }

    static final int IOC_INOUT() { return (int)3221225472L; }

    static final int FIONREAD() { return (int)1074030207L; }

    static final int FIONBIO() { return (int)2147772030L; }

    static final int FIOASYNC() { return (int)2147772029L; }

    static final int SIOCSHIWAT() { return (int)2147775232L; }

    static final int SIOCGHIWAT() { return (int)1074033409L; }

    static final int SIOCSLOWAT() { return (int)2147775234L; }

    static final int SIOCGLOWAT() { return (int)1074033411L; }

    static final int SIOCATMARK() { return (int)1074033415L; }

    static final int IN_CLASSA_NET() { return (int)4278190080L; }

    static final int IN_CLASSB_NET() { return (int)4294901760L; }

    static final int IN_CLASSC_NET() { return (int)4294967040L; }

    static final int INADDR_ANY() { return (int)0L; }

    static final int INADDR_BROADCAST() { return (int)4294967295L; }

    static final int INADDR_NONE() { return (int)4294967295L; }

    static final long INVALID_SOCKET() { return -1L; }

    static final int SOCKET_ERROR() { return (int)-1L; }

    static final int SO_DONTLINGER() { return (int)4294967167L; }

    static final int AF_OSI() { return (int)7L; }

    static final int PF_UNSPEC() { return (int)0L; }

    static final int PF_UNIX() { return (int)1L; }

    static final int PF_INET() { return (int)2L; }

    static final int PF_IMPLINK() { return (int)3L; }

    static final int PF_PUP() { return (int)4L; }

    static final int PF_CHAOS() { return (int)5L; }

    static final int PF_NS() { return (int)6L; }

    static final int PF_IPX() { return (int)6L; }

    static final int PF_ISO() { return (int)7L; }

    static final int PF_OSI() { return (int)7L; }

    static final int PF_ECMA() { return (int)8L; }

    static final int PF_DATAKIT() { return (int)9L; }

    static final int PF_CCITT() { return (int)10L; }

    static final int PF_SNA() { return (int)11L; }

    static final int PF_DECnet() { return (int)12L; }

    static final int PF_DLI() { return (int)13L; }

    static final int PF_LAT() { return (int)14L; }

    static final int PF_HYLINK() { return (int)15L; }

    static final int PF_APPLETALK() { return (int)16L; }

    static final int PF_VOICEVIEW() { return (int)18L; }

    static final int PF_FIREFOX() { return (int)19L; }

    static final int PF_UNKNOWN1() { return (int)20L; }

    static final int PF_BAN() { return (int)21L; }

    static final int PF_MAX() { return (int)22L; }

    static final int HOST_NOT_FOUND() { return (int)11001L; }

    static final int TRY_AGAIN() { return (int)11002L; }

    static final int NO_RECOVERY() { return (int)11003L; }

    static final int NO_DATA() { return (int)11004L; }

    static final int WSANO_ADDRESS() { return (int)11004L; }

    static final int NO_ADDRESS() { return (int)11004L; }

    static final int ALG_CLASS_ANY() { return (int)0L; }

    static final int ALG_CLASS_SIGNATURE() { return (int)8192L; }

    static final int ALG_CLASS_MSG_ENCRYPT() { return (int)16384L; }

    static final int ALG_CLASS_DATA_ENCRYPT() { return (int)24576L; }

    static final int ALG_CLASS_HASH() { return (int)32768L; }

    static final int ALG_CLASS_KEY_EXCHANGE() { return (int)40960L; }

    static final int ALG_CLASS_ALL() { return (int)57344L; }

    static final int ALG_TYPE_ANY() { return (int)0L; }

    static final int ALG_TYPE_DSS() { return (int)512L; }

    static final int ALG_TYPE_RSA() { return (int)1024L; }

    static final int ALG_TYPE_BLOCK() { return (int)1536L; }

    static final int ALG_TYPE_STREAM() { return (int)2048L; }

    static final int ALG_TYPE_DH() { return (int)2560L; }

    static final int ALG_TYPE_SECURECHANNEL() { return (int)3072L; }

    static final int ALG_TYPE_ECDH() { return (int)3584L; }

    static final int ALG_TYPE_THIRDPARTY() { return (int)4096L; }

    static final int ALG_SID_ANY() { return (int)0L; }

    static final int ALG_SID_THIRDPARTY_ANY() { return (int)0L; }

    static final int CALG_MD2() { return (int)32769L; }

    static final int CALG_MD4() { return (int)32770L; }

    static final int CALG_MD5() { return (int)32771L; }

    static final int CALG_SHA() { return (int)32772L; }

    static final int CALG_SHA1() { return (int)32772L; }

    static final int CALG_MAC() { return (int)32773L; }

    static final int CALG_RSA_SIGN() { return (int)9216L; }

    static final int CALG_DSS_SIGN() { return (int)8704L; }

    static final int CALG_NO_SIGN() { return (int)8192L; }

    static final int CALG_RSA_KEYX() { return (int)41984L; }

    static final int CALG_DES() { return (int)26113L; }

    static final int CALG_3DES_112() { return (int)26121L; }

    static final int CALG_3DES() { return (int)26115L; }

    static final int CALG_DESX() { return (int)26116L; }

    static final int CALG_RC2() { return (int)26114L; }

    static final int CALG_RC4() { return (int)26625L; }

    static final int CALG_SEAL() { return (int)26626L; }

    static final int CALG_DH_SF() { return (int)43521L; }

    static final int CALG_DH_EPHEM() { return (int)43522L; }

    static final int CALG_AGREEDKEY_ANY() { return (int)43523L; }

    static final int CALG_KEA_KEYX() { return (int)43524L; }

    static final int CALG_HUGHES_MD5() { return (int)40963L; }

    static final int CALG_SKIPJACK() { return (int)26122L; }

    static final int CALG_TEK() { return (int)26123L; }

    static final int CALG_CYLINK_MEK() { return (int)26124L; }

    static final int CALG_SSL3_SHAMD5() { return (int)32776L; }

    static final int CALG_SSL3_MASTER() { return (int)19457L; }

    static final int CALG_SCHANNEL_MASTER_HASH() { return (int)19458L; }

    static final int CALG_SCHANNEL_MAC_KEY() { return (int)19459L; }

    static final int CALG_SCHANNEL_ENC_KEY() { return (int)19463L; }

    static final int CALG_PCT1_MASTER() { return (int)19460L; }

    static final int CALG_SSL2_MASTER() { return (int)19461L; }

    static final int CALG_TLS1_MASTER() { return (int)19462L; }

    static final int CALG_RC5() { return (int)26125L; }

    static final int CALG_HMAC() { return (int)32777L; }

    static final int CALG_TLS1PRF() { return (int)32778L; }

    static final int CALG_HASH_REPLACE_OWF() { return (int)32779L; }

    static final int CALG_AES_128() { return (int)26126L; }

    static final int CALG_AES_192() { return (int)26127L; }

    static final int CALG_AES_256() { return (int)26128L; }

    static final int CALG_AES() { return (int)26129L; }

    static final int CALG_SHA_256() { return (int)32780L; }

    static final int CALG_SHA_384() { return (int)32781L; }

    static final int CALG_SHA_512() { return (int)32782L; }

    static final int CALG_ECDH() { return (int)43525L; }

    static final int CALG_ECDH_EPHEM() { return (int)44550L; }

    static final int CALG_ECMQV() { return (int)40961L; }

    static final int CALG_ECDSA() { return (int)8707L; }

    static final int CALG_NULLCIPHER() { return (int)24576L; }

    static final int CALG_THIRDPARTY_KEY_EXCHANGE() { return (int)45056L; }

    static final int CALG_THIRDPARTY_SIGNATURE() { return (int)12288L; }

    static final int CALG_THIRDPARTY_CIPHER() { return (int)28672L; }

    static final int CALG_THIRDPARTY_HASH() { return (int)36864L; }

    static final int CRYPT_VERIFYCONTEXT() { return (int)4026531840L; }

    static final int KEY_LENGTH_MASK() { return (int)4294901760L; }

    static final int CRYPT_FAILED() { return (int)0L; }

    static final int CRYPT_SUCCEED() { return (int)1L; }

    static final MemorySegment MS_DEF_PROV_A$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft Base Cryptographic Provider v1.0");
    static final jdk.incubator.foreign.MemorySegment MS_DEF_PROV_A() { return MS_DEF_PROV_A$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_DEF_PROV_W$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment MS_DEF_PROV_W() { return MS_DEF_PROV_W$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_DEF_PROV$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft Base Cryptographic Provider v1.0");
    static final jdk.incubator.foreign.MemorySegment MS_DEF_PROV() { return MS_DEF_PROV$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_ENHANCED_PROV_A$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft Enhanced Cryptographic Provider v1.0");
    static final jdk.incubator.foreign.MemorySegment MS_ENHANCED_PROV_A() { return MS_ENHANCED_PROV_A$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_ENHANCED_PROV_W$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment MS_ENHANCED_PROV_W() { return MS_ENHANCED_PROV_W$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_ENHANCED_PROV$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft Enhanced Cryptographic Provider v1.0");
    static final jdk.incubator.foreign.MemorySegment MS_ENHANCED_PROV() { return MS_ENHANCED_PROV$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_STRONG_PROV_A$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft Strong Cryptographic Provider");
    static final jdk.incubator.foreign.MemorySegment MS_STRONG_PROV_A() { return MS_STRONG_PROV_A$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_STRONG_PROV_W$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment MS_STRONG_PROV_W() { return MS_STRONG_PROV_W$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_STRONG_PROV$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft Strong Cryptographic Provider");
    static final jdk.incubator.foreign.MemorySegment MS_STRONG_PROV() { return MS_STRONG_PROV$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_DEF_RSA_SIG_PROV_A$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft RSA Signature Cryptographic Provider");
    static final jdk.incubator.foreign.MemorySegment MS_DEF_RSA_SIG_PROV_A() { return MS_DEF_RSA_SIG_PROV_A$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_DEF_RSA_SIG_PROV_W$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment MS_DEF_RSA_SIG_PROV_W() { return MS_DEF_RSA_SIG_PROV_W$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_DEF_RSA_SIG_PROV$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft RSA Signature Cryptographic Provider");
    static final jdk.incubator.foreign.MemorySegment MS_DEF_RSA_SIG_PROV() { return MS_DEF_RSA_SIG_PROV$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_DEF_RSA_SCHANNEL_PROV_A$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft RSA SChannel Cryptographic Provider");
    static final jdk.incubator.foreign.MemorySegment MS_DEF_RSA_SCHANNEL_PROV_A() { return MS_DEF_RSA_SCHANNEL_PROV_A$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_DEF_RSA_SCHANNEL_PROV_W$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment MS_DEF_RSA_SCHANNEL_PROV_W() { return MS_DEF_RSA_SCHANNEL_PROV_W$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_DEF_RSA_SCHANNEL_PROV$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft RSA SChannel Cryptographic Provider");
    static final jdk.incubator.foreign.MemorySegment MS_DEF_RSA_SCHANNEL_PROV() { return MS_DEF_RSA_SCHANNEL_PROV$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_DEF_DSS_PROV_A$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft Base DSS Cryptographic Provider");
    static final jdk.incubator.foreign.MemorySegment MS_DEF_DSS_PROV_A() { return MS_DEF_DSS_PROV_A$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_DEF_DSS_PROV_W$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment MS_DEF_DSS_PROV_W() { return MS_DEF_DSS_PROV_W$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_DEF_DSS_PROV$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft Base DSS Cryptographic Provider");
    static final jdk.incubator.foreign.MemorySegment MS_DEF_DSS_PROV() { return MS_DEF_DSS_PROV$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_DEF_DSS_DH_PROV_A$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft Base DSS and Diffie-Hellman Cryptographic Provider");
    static final jdk.incubator.foreign.MemorySegment MS_DEF_DSS_DH_PROV_A() { return MS_DEF_DSS_DH_PROV_A$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_DEF_DSS_DH_PROV_W$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment MS_DEF_DSS_DH_PROV_W() { return MS_DEF_DSS_DH_PROV_W$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_DEF_DSS_DH_PROV$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft Base DSS and Diffie-Hellman Cryptographic Provider");
    static final jdk.incubator.foreign.MemorySegment MS_DEF_DSS_DH_PROV() { return MS_DEF_DSS_DH_PROV$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_ENH_DSS_DH_PROV_A$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft Enhanced DSS and Diffie-Hellman Cryptographic Provider");
    static final jdk.incubator.foreign.MemorySegment MS_ENH_DSS_DH_PROV_A() { return MS_ENH_DSS_DH_PROV_A$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_ENH_DSS_DH_PROV_W$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment MS_ENH_DSS_DH_PROV_W() { return MS_ENH_DSS_DH_PROV_W$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_ENH_DSS_DH_PROV$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft Enhanced DSS and Diffie-Hellman Cryptographic Provider");
    static final jdk.incubator.foreign.MemorySegment MS_ENH_DSS_DH_PROV() { return MS_ENH_DSS_DH_PROV$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_DEF_DH_SCHANNEL_PROV_A$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft DH SChannel Cryptographic Provider");
    static final jdk.incubator.foreign.MemorySegment MS_DEF_DH_SCHANNEL_PROV_A() { return MS_DEF_DH_SCHANNEL_PROV_A$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_DEF_DH_SCHANNEL_PROV_W$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment MS_DEF_DH_SCHANNEL_PROV_W() { return MS_DEF_DH_SCHANNEL_PROV_W$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_DEF_DH_SCHANNEL_PROV$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft DH SChannel Cryptographic Provider");
    static final jdk.incubator.foreign.MemorySegment MS_DEF_DH_SCHANNEL_PROV() { return MS_DEF_DH_SCHANNEL_PROV$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_SCARD_PROV_A$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft Base Smart Card Crypto Provider");
    static final jdk.incubator.foreign.MemorySegment MS_SCARD_PROV_A() { return MS_SCARD_PROV_A$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_SCARD_PROV_W$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment MS_SCARD_PROV_W() { return MS_SCARD_PROV_W$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_SCARD_PROV$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft Base Smart Card Crypto Provider");
    static final jdk.incubator.foreign.MemorySegment MS_SCARD_PROV() { return MS_SCARD_PROV$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_ENH_RSA_AES_PROV_A$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft Enhanced RSA and AES Cryptographic Provider");
    static final jdk.incubator.foreign.MemorySegment MS_ENH_RSA_AES_PROV_A() { return MS_ENH_RSA_AES_PROV_A$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_ENH_RSA_AES_PROV_W$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment MS_ENH_RSA_AES_PROV_W() { return MS_ENH_RSA_AES_PROV_W$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_ENH_RSA_AES_PROV_XP_A$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft Enhanced RSA and AES Cryptographic Provider (Prototype)");
    static final jdk.incubator.foreign.MemorySegment MS_ENH_RSA_AES_PROV_XP_A() { return MS_ENH_RSA_AES_PROV_XP_A$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_ENH_RSA_AES_PROV_XP_W$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment MS_ENH_RSA_AES_PROV_XP_W() { return MS_ENH_RSA_AES_PROV_XP_W$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_ENH_RSA_AES_PROV_XP$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft Enhanced RSA and AES Cryptographic Provider (Prototype)");
    static final jdk.incubator.foreign.MemorySegment MS_ENH_RSA_AES_PROV_XP() { return MS_ENH_RSA_AES_PROV_XP$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_ENH_RSA_AES_PROV$SEGMENT_CONSTANT_ = CLinker.toCString("Microsoft Enhanced RSA and AES Cryptographic Provider");
    static final jdk.incubator.foreign.MemorySegment MS_ENH_RSA_AES_PROV() { return MS_ENH_RSA_AES_PROV$SEGMENT_CONSTANT_; }

    static final MemorySegment EXPO_OFFLOAD_REG_VALUE$SEGMENT_CONSTANT_ = CLinker.toCString("ExpoOffload");
    static final jdk.incubator.foreign.MemorySegment EXPO_OFFLOAD_REG_VALUE() { return EXPO_OFFLOAD_REG_VALUE$SEGMENT_CONSTANT_; }

    static final MemorySegment EXPO_OFFLOAD_FUNC_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("OffloadModExpo");
    static final jdk.incubator.foreign.MemorySegment EXPO_OFFLOAD_FUNC_NAME() { return EXPO_OFFLOAD_FUNC_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment szKEY_CRYPTOAPI_PRIVATE_KEY_OPTIONS$SEGMENT_CONSTANT_ = CLinker.toCString("Software\\Policies\\Microsoft\\Cryptography");
    static final jdk.incubator.foreign.MemorySegment szKEY_CRYPTOAPI_PRIVATE_KEY_OPTIONS() { return szKEY_CRYPTOAPI_PRIVATE_KEY_OPTIONS$SEGMENT_CONSTANT_; }

    static final MemorySegment szKEY_CACHE_ENABLED$SEGMENT_CONSTANT_ = CLinker.toCString("CachePrivateKeys");
    static final jdk.incubator.foreign.MemorySegment szKEY_CACHE_ENABLED() { return szKEY_CACHE_ENABLED$SEGMENT_CONSTANT_; }

    static final MemorySegment szKEY_CACHE_SECONDS$SEGMENT_CONSTANT_ = CLinker.toCString("PrivateKeyLifetimeSeconds");
    static final jdk.incubator.foreign.MemorySegment szKEY_CACHE_SECONDS() { return szKEY_CACHE_SECONDS$SEGMENT_CONSTANT_; }

    static final MemorySegment szPRIV_KEY_CACHE_MAX_ITEMS$SEGMENT_CONSTANT_ = CLinker.toCString("PrivKeyCacheMaxItems");
    static final jdk.incubator.foreign.MemorySegment szPRIV_KEY_CACHE_MAX_ITEMS() { return szPRIV_KEY_CACHE_MAX_ITEMS$SEGMENT_CONSTANT_; }

    static final MemorySegment szPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS$SEGMENT_CONSTANT_ = CLinker.toCString("PrivKeyCachePurgeIntervalSeconds");
    static final jdk.incubator.foreign.MemorySegment szPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS() { return szPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_KDF_HASH$SEGMENT_CONSTANT_ = CLinker.toCString("H");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_KDF_HASH() { return BCRYPT_KDF_HASH$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_KDF_HMAC$SEGMENT_CONSTANT_ = CLinker.toCString("H");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_KDF_HMAC() { return BCRYPT_KDF_HMAC$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_KDF_TLS_PRF$SEGMENT_CONSTANT_ = CLinker.toCString("T");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_KDF_TLS_PRF() { return BCRYPT_KDF_TLS_PRF$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_KDF_SP80056A_CONCAT$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_KDF_SP80056A_CONCAT() { return BCRYPT_KDF_SP80056A_CONCAT$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_KDF_RAW_SECRET$SEGMENT_CONSTANT_ = CLinker.toCString("T");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_KDF_RAW_SECRET() { return BCRYPT_KDF_RAW_SECRET$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_KDF_HKDF$SEGMENT_CONSTANT_ = CLinker.toCString("H");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_KDF_HKDF() { return BCRYPT_KDF_HKDF$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_OPAQUE_KEY_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("O");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_OPAQUE_KEY_BLOB() { return BCRYPT_OPAQUE_KEY_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_KEY_DATA_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("K");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_KEY_DATA_BLOB() { return BCRYPT_KEY_DATA_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_AES_WRAP_KEY_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("R");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_AES_WRAP_KEY_BLOB() { return BCRYPT_AES_WRAP_KEY_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_OBJECT_LENGTH$SEGMENT_CONSTANT_ = CLinker.toCString("O");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_OBJECT_LENGTH() { return BCRYPT_OBJECT_LENGTH$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ALGORITHM_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("A");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ALGORITHM_NAME() { return BCRYPT_ALGORITHM_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_PROVIDER_HANDLE$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_PROVIDER_HANDLE() { return BCRYPT_PROVIDER_HANDLE$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_CHAINING_MODE$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_CHAINING_MODE() { return BCRYPT_CHAINING_MODE$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_BLOCK_LENGTH$SEGMENT_CONSTANT_ = CLinker.toCString("B");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_BLOCK_LENGTH() { return BCRYPT_BLOCK_LENGTH$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_KEY_LENGTH$SEGMENT_CONSTANT_ = CLinker.toCString("K");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_KEY_LENGTH() { return BCRYPT_KEY_LENGTH$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_KEY_OBJECT_LENGTH$SEGMENT_CONSTANT_ = CLinker.toCString("K");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_KEY_OBJECT_LENGTH() { return BCRYPT_KEY_OBJECT_LENGTH$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_KEY_STRENGTH$SEGMENT_CONSTANT_ = CLinker.toCString("K");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_KEY_STRENGTH() { return BCRYPT_KEY_STRENGTH$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_KEY_LENGTHS$SEGMENT_CONSTANT_ = CLinker.toCString("K");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_KEY_LENGTHS() { return BCRYPT_KEY_LENGTHS$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_BLOCK_SIZE_LIST$SEGMENT_CONSTANT_ = CLinker.toCString("B");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_BLOCK_SIZE_LIST() { return BCRYPT_BLOCK_SIZE_LIST$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_EFFECTIVE_KEY_LENGTH$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_EFFECTIVE_KEY_LENGTH() { return BCRYPT_EFFECTIVE_KEY_LENGTH$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_HASH_LENGTH$SEGMENT_CONSTANT_ = CLinker.toCString("H");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_HASH_LENGTH() { return BCRYPT_HASH_LENGTH$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_HASH_OID_LIST$SEGMENT_CONSTANT_ = CLinker.toCString("H");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_HASH_OID_LIST() { return BCRYPT_HASH_OID_LIST$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_PADDING_SCHEMES$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_PADDING_SCHEMES() { return BCRYPT_PADDING_SCHEMES$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_SIGNATURE_LENGTH$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_SIGNATURE_LENGTH() { return BCRYPT_SIGNATURE_LENGTH$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_HASH_BLOCK_LENGTH$SEGMENT_CONSTANT_ = CLinker.toCString("H");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_HASH_BLOCK_LENGTH() { return BCRYPT_HASH_BLOCK_LENGTH$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_AUTH_TAG_LENGTH$SEGMENT_CONSTANT_ = CLinker.toCString("A");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_AUTH_TAG_LENGTH() { return BCRYPT_AUTH_TAG_LENGTH$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_PRIMITIVE_TYPE$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_PRIMITIVE_TYPE() { return BCRYPT_PRIMITIVE_TYPE$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_IS_KEYED_HASH$SEGMENT_CONSTANT_ = CLinker.toCString("I");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_IS_KEYED_HASH() { return BCRYPT_IS_KEYED_HASH$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_IS_REUSABLE_HASH$SEGMENT_CONSTANT_ = CLinker.toCString("I");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_IS_REUSABLE_HASH() { return BCRYPT_IS_REUSABLE_HASH$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_MESSAGE_BLOCK_LENGTH$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_MESSAGE_BLOCK_LENGTH() { return BCRYPT_MESSAGE_BLOCK_LENGTH$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_PUBLIC_KEY_LENGTH$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_PUBLIC_KEY_LENGTH() { return BCRYPT_PUBLIC_KEY_LENGTH$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_PCP_PLATFORM_TYPE_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_PCP_PLATFORM_TYPE_PROPERTY() { return BCRYPT_PCP_PLATFORM_TYPE_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_PCP_PROVIDER_VERSION_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_PCP_PROVIDER_VERSION_PROPERTY() { return BCRYPT_PCP_PROVIDER_VERSION_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_MULTI_OBJECT_LENGTH$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_MULTI_OBJECT_LENGTH() { return BCRYPT_MULTI_OBJECT_LENGTH$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_IS_IFX_TPM_WEAK_KEY$SEGMENT_CONSTANT_ = CLinker.toCString("I");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_IS_IFX_TPM_WEAK_KEY() { return BCRYPT_IS_IFX_TPM_WEAK_KEY$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_HKDF_HASH_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("H");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_HKDF_HASH_ALGORITHM() { return BCRYPT_HKDF_HASH_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_HKDF_SALT_AND_FINALIZE$SEGMENT_CONSTANT_ = CLinker.toCString("H");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_HKDF_SALT_AND_FINALIZE() { return BCRYPT_HKDF_SALT_AND_FINALIZE$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_HKDF_PRK_AND_FINALIZE$SEGMENT_CONSTANT_ = CLinker.toCString("H");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_HKDF_PRK_AND_FINALIZE() { return BCRYPT_HKDF_PRK_AND_FINALIZE$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_INITIALIZATION_VECTOR$SEGMENT_CONSTANT_ = CLinker.toCString("I");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_INITIALIZATION_VECTOR() { return BCRYPT_INITIALIZATION_VECTOR$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_CHAIN_MODE_NA$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_CHAIN_MODE_NA() { return BCRYPT_CHAIN_MODE_NA$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_CHAIN_MODE_CBC$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_CHAIN_MODE_CBC() { return BCRYPT_CHAIN_MODE_CBC$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_CHAIN_MODE_ECB$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_CHAIN_MODE_ECB() { return BCRYPT_CHAIN_MODE_ECB$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_CHAIN_MODE_CFB$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_CHAIN_MODE_CFB() { return BCRYPT_CHAIN_MODE_CFB$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_CHAIN_MODE_CCM$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_CHAIN_MODE_CCM() { return BCRYPT_CHAIN_MODE_CCM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_CHAIN_MODE_GCM$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_CHAIN_MODE_GCM() { return BCRYPT_CHAIN_MODE_GCM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_PUBLIC_KEY_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_PUBLIC_KEY_BLOB() { return BCRYPT_PUBLIC_KEY_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_PRIVATE_KEY_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_PRIVATE_KEY_BLOB() { return BCRYPT_PRIVATE_KEY_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_RSAPUBLIC_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("R");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_RSAPUBLIC_BLOB() { return BCRYPT_RSAPUBLIC_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_RSAPRIVATE_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("R");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_RSAPRIVATE_BLOB() { return BCRYPT_RSAPRIVATE_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment LEGACY_RSAPUBLIC_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment LEGACY_RSAPUBLIC_BLOB() { return LEGACY_RSAPUBLIC_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment LEGACY_RSAPRIVATE_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment LEGACY_RSAPRIVATE_BLOB() { return LEGACY_RSAPRIVATE_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_RSAFULLPRIVATE_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("R");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_RSAFULLPRIVATE_BLOB() { return BCRYPT_RSAFULLPRIVATE_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_GLOBAL_PARAMETERS$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_GLOBAL_PARAMETERS() { return BCRYPT_GLOBAL_PARAMETERS$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_PRIVATE_KEY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_PRIVATE_KEY() { return BCRYPT_PRIVATE_KEY$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECCPUBLIC_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECCPUBLIC_BLOB() { return BCRYPT_ECCPUBLIC_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECCPRIVATE_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECCPRIVATE_BLOB() { return BCRYPT_ECCPRIVATE_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECCFULLPUBLIC_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECCFULLPUBLIC_BLOB() { return BCRYPT_ECCFULLPUBLIC_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECCFULLPRIVATE_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECCFULLPRIVATE_BLOB() { return BCRYPT_ECCFULLPRIVATE_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment SSL_ECCPUBLIC_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment SSL_ECCPUBLIC_BLOB() { return SSL_ECCPUBLIC_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_DH_PUBLIC_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_DH_PUBLIC_BLOB() { return BCRYPT_DH_PUBLIC_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_DH_PRIVATE_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_DH_PRIVATE_BLOB() { return BCRYPT_DH_PRIVATE_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment LEGACY_DH_PUBLIC_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment LEGACY_DH_PUBLIC_BLOB() { return LEGACY_DH_PUBLIC_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment LEGACY_DH_PRIVATE_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment LEGACY_DH_PRIVATE_BLOB() { return LEGACY_DH_PRIVATE_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_DH_PARAMETERS$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_DH_PARAMETERS() { return BCRYPT_DH_PARAMETERS$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_DSA_PUBLIC_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_DSA_PUBLIC_BLOB() { return BCRYPT_DSA_PUBLIC_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_DSA_PRIVATE_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_DSA_PRIVATE_BLOB() { return BCRYPT_DSA_PRIVATE_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment LEGACY_DSA_PUBLIC_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment LEGACY_DSA_PUBLIC_BLOB() { return LEGACY_DSA_PUBLIC_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment LEGACY_DSA_PRIVATE_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment LEGACY_DSA_PRIVATE_BLOB() { return LEGACY_DSA_PRIVATE_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment LEGACY_DSA_V2_PUBLIC_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("V");
    static final jdk.incubator.foreign.MemorySegment LEGACY_DSA_V2_PUBLIC_BLOB() { return LEGACY_DSA_V2_PUBLIC_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment LEGACY_DSA_V2_PRIVATE_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("V");
    static final jdk.incubator.foreign.MemorySegment LEGACY_DSA_V2_PRIVATE_BLOB() { return LEGACY_DSA_V2_PRIVATE_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_DSA_PARAMETERS$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_DSA_PARAMETERS() { return BCRYPT_DSA_PARAMETERS$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_PARAMETERS$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_PARAMETERS() { return BCRYPT_ECC_PARAMETERS$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_NAME() { return BCRYPT_ECC_CURVE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_NAME_LIST$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_NAME_LIST() { return BCRYPT_ECC_CURVE_NAME_LIST$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP160R1$SEGMENT_CONSTANT_ = CLinker.toCString("b");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP160R1() { return BCRYPT_ECC_CURVE_BRAINPOOLP160R1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP160T1$SEGMENT_CONSTANT_ = CLinker.toCString("b");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP160T1() { return BCRYPT_ECC_CURVE_BRAINPOOLP160T1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP192R1$SEGMENT_CONSTANT_ = CLinker.toCString("b");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP192R1() { return BCRYPT_ECC_CURVE_BRAINPOOLP192R1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP192T1$SEGMENT_CONSTANT_ = CLinker.toCString("b");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP192T1() { return BCRYPT_ECC_CURVE_BRAINPOOLP192T1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP224R1$SEGMENT_CONSTANT_ = CLinker.toCString("b");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP224R1() { return BCRYPT_ECC_CURVE_BRAINPOOLP224R1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP224T1$SEGMENT_CONSTANT_ = CLinker.toCString("b");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP224T1() { return BCRYPT_ECC_CURVE_BRAINPOOLP224T1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP256R1$SEGMENT_CONSTANT_ = CLinker.toCString("b");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP256R1() { return BCRYPT_ECC_CURVE_BRAINPOOLP256R1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP256T1$SEGMENT_CONSTANT_ = CLinker.toCString("b");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP256T1() { return BCRYPT_ECC_CURVE_BRAINPOOLP256T1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP320R1$SEGMENT_CONSTANT_ = CLinker.toCString("b");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP320R1() { return BCRYPT_ECC_CURVE_BRAINPOOLP320R1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP320T1$SEGMENT_CONSTANT_ = CLinker.toCString("b");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP320T1() { return BCRYPT_ECC_CURVE_BRAINPOOLP320T1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP384R1$SEGMENT_CONSTANT_ = CLinker.toCString("b");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP384R1() { return BCRYPT_ECC_CURVE_BRAINPOOLP384R1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP384T1$SEGMENT_CONSTANT_ = CLinker.toCString("b");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP384T1() { return BCRYPT_ECC_CURVE_BRAINPOOLP384T1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP512R1$SEGMENT_CONSTANT_ = CLinker.toCString("b");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP512R1() { return BCRYPT_ECC_CURVE_BRAINPOOLP512R1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP512T1$SEGMENT_CONSTANT_ = CLinker.toCString("b");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP512T1() { return BCRYPT_ECC_CURVE_BRAINPOOLP512T1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_25519$SEGMENT_CONSTANT_ = CLinker.toCString("c");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_25519() { return BCRYPT_ECC_CURVE_25519$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_EC192WAPI$SEGMENT_CONSTANT_ = CLinker.toCString("e");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_EC192WAPI() { return BCRYPT_ECC_CURVE_EC192WAPI$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_NISTP192$SEGMENT_CONSTANT_ = CLinker.toCString("n");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_NISTP192() { return BCRYPT_ECC_CURVE_NISTP192$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_NISTP224$SEGMENT_CONSTANT_ = CLinker.toCString("n");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_NISTP224() { return BCRYPT_ECC_CURVE_NISTP224$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_NISTP256$SEGMENT_CONSTANT_ = CLinker.toCString("n");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_NISTP256() { return BCRYPT_ECC_CURVE_NISTP256$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_NISTP384$SEGMENT_CONSTANT_ = CLinker.toCString("n");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_NISTP384() { return BCRYPT_ECC_CURVE_NISTP384$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_NISTP521$SEGMENT_CONSTANT_ = CLinker.toCString("n");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_NISTP521() { return BCRYPT_ECC_CURVE_NISTP521$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_NUMSP256T1$SEGMENT_CONSTANT_ = CLinker.toCString("n");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_NUMSP256T1() { return BCRYPT_ECC_CURVE_NUMSP256T1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_NUMSP384T1$SEGMENT_CONSTANT_ = CLinker.toCString("n");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_NUMSP384T1() { return BCRYPT_ECC_CURVE_NUMSP384T1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_NUMSP512T1$SEGMENT_CONSTANT_ = CLinker.toCString("n");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_NUMSP512T1() { return BCRYPT_ECC_CURVE_NUMSP512T1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_SECP160K1$SEGMENT_CONSTANT_ = CLinker.toCString("s");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_SECP160K1() { return BCRYPT_ECC_CURVE_SECP160K1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_SECP160R1$SEGMENT_CONSTANT_ = CLinker.toCString("s");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_SECP160R1() { return BCRYPT_ECC_CURVE_SECP160R1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_SECP160R2$SEGMENT_CONSTANT_ = CLinker.toCString("s");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_SECP160R2() { return BCRYPT_ECC_CURVE_SECP160R2$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_SECP192K1$SEGMENT_CONSTANT_ = CLinker.toCString("s");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_SECP192K1() { return BCRYPT_ECC_CURVE_SECP192K1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_SECP192R1$SEGMENT_CONSTANT_ = CLinker.toCString("s");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_SECP192R1() { return BCRYPT_ECC_CURVE_SECP192R1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_SECP224K1$SEGMENT_CONSTANT_ = CLinker.toCString("s");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_SECP224K1() { return BCRYPT_ECC_CURVE_SECP224K1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_SECP224R1$SEGMENT_CONSTANT_ = CLinker.toCString("s");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_SECP224R1() { return BCRYPT_ECC_CURVE_SECP224R1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_SECP256K1$SEGMENT_CONSTANT_ = CLinker.toCString("s");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_SECP256K1() { return BCRYPT_ECC_CURVE_SECP256K1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_SECP256R1$SEGMENT_CONSTANT_ = CLinker.toCString("s");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_SECP256R1() { return BCRYPT_ECC_CURVE_SECP256R1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_SECP384R1$SEGMENT_CONSTANT_ = CLinker.toCString("s");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_SECP384R1() { return BCRYPT_ECC_CURVE_SECP384R1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_SECP521R1$SEGMENT_CONSTANT_ = CLinker.toCString("s");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_SECP521R1() { return BCRYPT_ECC_CURVE_SECP521R1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_WTLS7$SEGMENT_CONSTANT_ = CLinker.toCString("w");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_WTLS7() { return BCRYPT_ECC_CURVE_WTLS7$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_WTLS9$SEGMENT_CONSTANT_ = CLinker.toCString("w");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_WTLS9() { return BCRYPT_ECC_CURVE_WTLS9$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_WTLS12$SEGMENT_CONSTANT_ = CLinker.toCString("w");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_WTLS12() { return BCRYPT_ECC_CURVE_WTLS12$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_X962P192V1$SEGMENT_CONSTANT_ = CLinker.toCString("x");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_X962P192V1() { return BCRYPT_ECC_CURVE_X962P192V1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_X962P192V2$SEGMENT_CONSTANT_ = CLinker.toCString("x");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_X962P192V2() { return BCRYPT_ECC_CURVE_X962P192V2$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_X962P192V3$SEGMENT_CONSTANT_ = CLinker.toCString("x");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_X962P192V3() { return BCRYPT_ECC_CURVE_X962P192V3$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_X962P239V1$SEGMENT_CONSTANT_ = CLinker.toCString("x");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_X962P239V1() { return BCRYPT_ECC_CURVE_X962P239V1$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_X962P239V2$SEGMENT_CONSTANT_ = CLinker.toCString("x");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_X962P239V2() { return BCRYPT_ECC_CURVE_X962P239V2$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_X962P239V3$SEGMENT_CONSTANT_ = CLinker.toCString("x");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_X962P239V3() { return BCRYPT_ECC_CURVE_X962P239V3$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECC_CURVE_X962P256V1$SEGMENT_CONSTANT_ = CLinker.toCString("x");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECC_CURVE_X962P256V1() { return BCRYPT_ECC_CURVE_X962P256V1$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_PRIMITIVE_PROVIDER$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment MS_PRIMITIVE_PROVIDER() { return MS_PRIMITIVE_PROVIDER$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_PLATFORM_CRYPTO_PROVIDER$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment MS_PLATFORM_CRYPTO_PROVIDER() { return MS_PLATFORM_CRYPTO_PROVIDER$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_RSA_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("R");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_RSA_ALGORITHM() { return BCRYPT_RSA_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_RSA_SIGN_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("R");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_RSA_SIGN_ALGORITHM() { return BCRYPT_RSA_SIGN_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_DH_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_DH_ALGORITHM() { return BCRYPT_DH_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_DSA_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_DSA_ALGORITHM() { return BCRYPT_DSA_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_RC2_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("R");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_RC2_ALGORITHM() { return BCRYPT_RC2_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_RC4_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("R");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_RC4_ALGORITHM() { return BCRYPT_RC4_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_AES_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("A");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_AES_ALGORITHM() { return BCRYPT_AES_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_DES_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_DES_ALGORITHM() { return BCRYPT_DES_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_DESX_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_DESX_ALGORITHM() { return BCRYPT_DESX_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_3DES_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("3");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_3DES_ALGORITHM() { return BCRYPT_3DES_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_3DES_112_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("3");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_3DES_112_ALGORITHM() { return BCRYPT_3DES_112_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_MD2_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_MD2_ALGORITHM() { return BCRYPT_MD2_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_MD4_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_MD4_ALGORITHM() { return BCRYPT_MD4_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_MD5_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_MD5_ALGORITHM() { return BCRYPT_MD5_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_SHA1_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_SHA1_ALGORITHM() { return BCRYPT_SHA1_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_SHA256_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_SHA256_ALGORITHM() { return BCRYPT_SHA256_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_SHA384_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_SHA384_ALGORITHM() { return BCRYPT_SHA384_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_SHA512_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_SHA512_ALGORITHM() { return BCRYPT_SHA512_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_AES_GMAC_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("A");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_AES_GMAC_ALGORITHM() { return BCRYPT_AES_GMAC_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_AES_CMAC_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("A");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_AES_CMAC_ALGORITHM() { return BCRYPT_AES_CMAC_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECDSA_P256_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECDSA_P256_ALGORITHM() { return BCRYPT_ECDSA_P256_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECDSA_P384_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECDSA_P384_ALGORITHM() { return BCRYPT_ECDSA_P384_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECDSA_P521_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECDSA_P521_ALGORITHM() { return BCRYPT_ECDSA_P521_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECDH_P256_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECDH_P256_ALGORITHM() { return BCRYPT_ECDH_P256_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECDH_P384_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECDH_P384_ALGORITHM() { return BCRYPT_ECDH_P384_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECDH_P521_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECDH_P521_ALGORITHM() { return BCRYPT_ECDH_P521_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_RNG_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("R");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_RNG_ALGORITHM() { return BCRYPT_RNG_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_RNG_FIPS186_DSA_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("F");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_RNG_FIPS186_DSA_ALGORITHM() { return BCRYPT_RNG_FIPS186_DSA_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_RNG_DUAL_EC_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_RNG_DUAL_EC_ALGORITHM() { return BCRYPT_RNG_DUAL_EC_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_SP800108_CTR_HMAC_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_SP800108_CTR_HMAC_ALGORITHM() { return BCRYPT_SP800108_CTR_HMAC_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_SP80056A_CONCAT_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_SP80056A_CONCAT_ALGORITHM() { return BCRYPT_SP80056A_CONCAT_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_PBKDF2_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_PBKDF2_ALGORITHM() { return BCRYPT_PBKDF2_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_CAPI_KDF_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_CAPI_KDF_ALGORITHM() { return BCRYPT_CAPI_KDF_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_TLS1_1_KDF_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("T");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_TLS1_1_KDF_ALGORITHM() { return BCRYPT_TLS1_1_KDF_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_TLS1_2_KDF_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("T");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_TLS1_2_KDF_ALGORITHM() { return BCRYPT_TLS1_2_KDF_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECDSA_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECDSA_ALGORITHM() { return BCRYPT_ECDSA_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_ECDH_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_ECDH_ALGORITHM() { return BCRYPT_ECDH_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_XTS_AES_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("X");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_XTS_AES_ALGORITHM() { return BCRYPT_XTS_AES_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment BCRYPT_HKDF_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("H");
    static final jdk.incubator.foreign.MemorySegment BCRYPT_HKDF_ALGORITHM() { return BCRYPT_HKDF_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemoryAddress BCRYPT_MD2_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(1L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_MD2_ALG_HANDLE() { return BCRYPT_MD2_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_MD4_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(17L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_MD4_ALG_HANDLE() { return BCRYPT_MD4_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_MD5_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(33L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_MD5_ALG_HANDLE() { return BCRYPT_MD5_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_SHA1_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(49L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_SHA1_ALG_HANDLE() { return BCRYPT_SHA1_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_SHA256_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(65L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_SHA256_ALG_HANDLE() { return BCRYPT_SHA256_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_SHA384_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(81L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_SHA384_ALG_HANDLE() { return BCRYPT_SHA384_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_SHA512_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(97L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_SHA512_ALG_HANDLE() { return BCRYPT_SHA512_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_RC4_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(113L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_RC4_ALG_HANDLE() { return BCRYPT_RC4_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_RNG_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(129L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_RNG_ALG_HANDLE() { return BCRYPT_RNG_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_HMAC_MD5_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(145L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_HMAC_MD5_ALG_HANDLE() { return BCRYPT_HMAC_MD5_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_HMAC_SHA1_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(161L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_HMAC_SHA1_ALG_HANDLE() { return BCRYPT_HMAC_SHA1_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_HMAC_SHA256_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(177L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_HMAC_SHA256_ALG_HANDLE() { return BCRYPT_HMAC_SHA256_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_HMAC_SHA384_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(193L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_HMAC_SHA384_ALG_HANDLE() { return BCRYPT_HMAC_SHA384_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_HMAC_SHA512_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(209L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_HMAC_SHA512_ALG_HANDLE() { return BCRYPT_HMAC_SHA512_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_RSA_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(225L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_RSA_ALG_HANDLE() { return BCRYPT_RSA_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_ECDSA_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(241L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_ECDSA_ALG_HANDLE() { return BCRYPT_ECDSA_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_AES_CMAC_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(257L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_AES_CMAC_ALG_HANDLE() { return BCRYPT_AES_CMAC_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_AES_GMAC_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(273L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_AES_GMAC_ALG_HANDLE() { return BCRYPT_AES_GMAC_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_HMAC_MD2_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(289L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_HMAC_MD2_ALG_HANDLE() { return BCRYPT_HMAC_MD2_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_HMAC_MD4_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(305L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_HMAC_MD4_ALG_HANDLE() { return BCRYPT_HMAC_MD4_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_3DES_CBC_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(321L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_3DES_CBC_ALG_HANDLE() { return BCRYPT_3DES_CBC_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_3DES_ECB_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(337L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_3DES_ECB_ALG_HANDLE() { return BCRYPT_3DES_ECB_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_3DES_CFB_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(353L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_3DES_CFB_ALG_HANDLE() { return BCRYPT_3DES_CFB_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_3DES_112_CBC_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(369L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_3DES_112_CBC_ALG_HANDLE() { return BCRYPT_3DES_112_CBC_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_3DES_112_ECB_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(385L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_3DES_112_ECB_ALG_HANDLE() { return BCRYPT_3DES_112_ECB_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_3DES_112_CFB_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(401L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_3DES_112_CFB_ALG_HANDLE() { return BCRYPT_3DES_112_CFB_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_AES_CBC_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(417L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_AES_CBC_ALG_HANDLE() { return BCRYPT_AES_CBC_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_AES_ECB_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(433L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_AES_ECB_ALG_HANDLE() { return BCRYPT_AES_ECB_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_AES_CFB_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(449L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_AES_CFB_ALG_HANDLE() { return BCRYPT_AES_CFB_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_AES_CCM_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(465L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_AES_CCM_ALG_HANDLE() { return BCRYPT_AES_CCM_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_AES_GCM_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(481L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_AES_GCM_ALG_HANDLE() { return BCRYPT_AES_GCM_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_DES_CBC_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(497L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_DES_CBC_ALG_HANDLE() { return BCRYPT_DES_CBC_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_DES_ECB_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(513L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_DES_ECB_ALG_HANDLE() { return BCRYPT_DES_ECB_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_DES_CFB_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(529L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_DES_CFB_ALG_HANDLE() { return BCRYPT_DES_CFB_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_DESX_CBC_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(545L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_DESX_CBC_ALG_HANDLE() { return BCRYPT_DESX_CBC_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_DESX_ECB_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(561L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_DESX_ECB_ALG_HANDLE() { return BCRYPT_DESX_ECB_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_DESX_CFB_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(577L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_DESX_CFB_ALG_HANDLE() { return BCRYPT_DESX_CFB_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_RC2_CBC_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(593L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_RC2_CBC_ALG_HANDLE() { return BCRYPT_RC2_CBC_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_RC2_ECB_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(609L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_RC2_ECB_ALG_HANDLE() { return BCRYPT_RC2_ECB_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_RC2_CFB_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(625L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_RC2_CFB_ALG_HANDLE() { return BCRYPT_RC2_CFB_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_DH_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(641L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_DH_ALG_HANDLE() { return BCRYPT_DH_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_ECDH_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(657L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_ECDH_ALG_HANDLE() { return BCRYPT_ECDH_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_ECDH_P256_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(673L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_ECDH_P256_ALG_HANDLE() { return BCRYPT_ECDH_P256_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_ECDH_P384_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(689L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_ECDH_P384_ALG_HANDLE() { return BCRYPT_ECDH_P384_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_ECDH_P521_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(705L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_ECDH_P521_ALG_HANDLE() { return BCRYPT_ECDH_P521_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_DSA_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(721L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_DSA_ALG_HANDLE() { return BCRYPT_DSA_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_ECDSA_P256_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(737L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_ECDSA_P256_ALG_HANDLE() { return BCRYPT_ECDSA_P256_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_ECDSA_P384_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(753L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_ECDSA_P384_ALG_HANDLE() { return BCRYPT_ECDSA_P384_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_ECDSA_P521_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(769L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_ECDSA_P521_ALG_HANDLE() { return BCRYPT_ECDSA_P521_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_RSA_SIGN_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(785L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_RSA_SIGN_ALG_HANDLE() { return BCRYPT_RSA_SIGN_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_CAPI_KDF_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(801L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_CAPI_KDF_ALG_HANDLE() { return BCRYPT_CAPI_KDF_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_PBKDF2_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(817L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_PBKDF2_ALG_HANDLE() { return BCRYPT_PBKDF2_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_SP800108_CTR_HMAC_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(833L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_SP800108_CTR_HMAC_ALG_HANDLE() { return BCRYPT_SP800108_CTR_HMAC_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_SP80056A_CONCAT_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(849L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_SP80056A_CONCAT_ALG_HANDLE() { return BCRYPT_SP80056A_CONCAT_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_TLS1_1_KDF_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(865L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_TLS1_1_KDF_ALG_HANDLE() { return BCRYPT_TLS1_1_KDF_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_TLS1_2_KDF_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(881L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_TLS1_2_KDF_ALG_HANDLE() { return BCRYPT_TLS1_2_KDF_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_XTS_AES_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(897L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_XTS_AES_ALG_HANDLE() { return BCRYPT_XTS_AES_ALG_HANDLE$ADDR_CONSTANT_; }

    static final MemoryAddress BCRYPT_HKDF_ALG_HANDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(913L);
    static final jdk.incubator.foreign.MemoryAddress BCRYPT_HKDF_ALG_HANDLE() { return BCRYPT_HKDF_ALG_HANDLE$ADDR_CONSTANT_; }

    static final int CRYPT_MIN_DEPENDENCIES() { return (int)1L; }

    static final int CRYPT_PROCESS_ISOLATE() { return (int)65536L; }

    static final int CRYPT_UM() { return (int)1L; }

    static final int CRYPT_KM() { return (int)2L; }

    static final int CRYPT_MM() { return (int)3L; }

    static final int CRYPT_ANY() { return (int)4L; }

    static final int CRYPT_OVERWRITE() { return (int)1L; }

    static final int CRYPT_LOCAL() { return (int)1L; }

    static final int CRYPT_DOMAIN() { return (int)2L; }

    static final int CRYPT_EXCLUSIVE() { return (int)1L; }

    static final int CRYPT_OVERRIDE() { return (int)65536L; }

    static final int CRYPT_ALL_FUNCTIONS() { return (int)1L; }

    static final int CRYPT_ALL_PROVIDERS() { return (int)2L; }

    static final int CRYPT_PRIORITY_TOP() { return (int)0L; }

    static final int CRYPT_PRIORITY_BOTTOM() { return (int)4294967295L; }

    static final MemorySegment CRYPT_DEFAULT_CONTEXT$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment CRYPT_DEFAULT_CONTEXT() { return CRYPT_DEFAULT_CONTEXT$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_KEY_STORAGE_PROVIDER$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment MS_KEY_STORAGE_PROVIDER() { return MS_KEY_STORAGE_PROVIDER$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_SMART_CARD_KEY_STORAGE_PROVIDER$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment MS_SMART_CARD_KEY_STORAGE_PROVIDER() { return MS_SMART_CARD_KEY_STORAGE_PROVIDER$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_PLATFORM_KEY_STORAGE_PROVIDER$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment MS_PLATFORM_KEY_STORAGE_PROVIDER() { return MS_PLATFORM_KEY_STORAGE_PROVIDER$SEGMENT_CONSTANT_; }

    static final MemorySegment MS_NGC_KEY_STORAGE_PROVIDER$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment MS_NGC_KEY_STORAGE_PROVIDER() { return MS_NGC_KEY_STORAGE_PROVIDER$SEGMENT_CONSTANT_; }

    static final MemorySegment TPM_RSA_SRK_SEAL_KEY$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment TPM_RSA_SRK_SEAL_KEY() { return TPM_RSA_SRK_SEAL_KEY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_RSA_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("R");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_RSA_ALGORITHM() { return NCRYPT_RSA_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_RSA_SIGN_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("R");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_RSA_SIGN_ALGORITHM() { return NCRYPT_RSA_SIGN_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_DH_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_DH_ALGORITHM() { return NCRYPT_DH_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_DSA_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_DSA_ALGORITHM() { return NCRYPT_DSA_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_MD2_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_MD2_ALGORITHM() { return NCRYPT_MD2_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_MD4_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_MD4_ALGORITHM() { return NCRYPT_MD4_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_MD5_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_MD5_ALGORITHM() { return NCRYPT_MD5_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_SHA1_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_SHA1_ALGORITHM() { return NCRYPT_SHA1_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_SHA256_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_SHA256_ALGORITHM() { return NCRYPT_SHA256_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_SHA384_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_SHA384_ALGORITHM() { return NCRYPT_SHA384_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_SHA512_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_SHA512_ALGORITHM() { return NCRYPT_SHA512_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_ECDSA_P256_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_ECDSA_P256_ALGORITHM() { return NCRYPT_ECDSA_P256_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_ECDSA_P384_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_ECDSA_P384_ALGORITHM() { return NCRYPT_ECDSA_P384_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_ECDSA_P521_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_ECDSA_P521_ALGORITHM() { return NCRYPT_ECDSA_P521_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_ECDH_P256_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_ECDH_P256_ALGORITHM() { return NCRYPT_ECDH_P256_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_ECDH_P384_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_ECDH_P384_ALGORITHM() { return NCRYPT_ECDH_P384_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_ECDH_P521_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_ECDH_P521_ALGORITHM() { return NCRYPT_ECDH_P521_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_AES_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("A");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_AES_ALGORITHM() { return NCRYPT_AES_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_RC2_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("R");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_RC2_ALGORITHM() { return NCRYPT_RC2_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_3DES_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("3");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_3DES_ALGORITHM() { return NCRYPT_3DES_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_DES_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_DES_ALGORITHM() { return NCRYPT_DES_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_DESX_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_DESX_ALGORITHM() { return NCRYPT_DESX_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_3DES_112_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("3");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_3DES_112_ALGORITHM() { return NCRYPT_3DES_112_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_SP800108_CTR_HMAC_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_SP800108_CTR_HMAC_ALGORITHM() { return NCRYPT_SP800108_CTR_HMAC_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_SP80056A_CONCAT_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_SP80056A_CONCAT_ALGORITHM() { return NCRYPT_SP80056A_CONCAT_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PBKDF2_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PBKDF2_ALGORITHM() { return NCRYPT_PBKDF2_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_CAPI_KDF_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_CAPI_KDF_ALGORITHM() { return NCRYPT_CAPI_KDF_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_ECDSA_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_ECDSA_ALGORITHM() { return NCRYPT_ECDSA_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_ECDH_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_ECDH_ALGORITHM() { return NCRYPT_ECDH_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_KEY_STORAGE_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("K");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_KEY_STORAGE_ALGORITHM() { return NCRYPT_KEY_STORAGE_ALGORITHM$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_HMAC_SHA256_ALGORITHM$SEGMENT_CONSTANT_ = CLinker.toCString("H");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_HMAC_SHA256_ALGORITHM() { return NCRYPT_HMAC_SHA256_ALGORITHM$SEGMENT_CONSTANT_; }

    static final int NCRYPT_CIPHER_INTERFACE() { return (int)1L; }

    static final int NCRYPT_HASH_INTERFACE() { return (int)2L; }

    static final int NCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE() { return (int)3L; }

    static final int NCRYPT_SECRET_AGREEMENT_INTERFACE() { return (int)4L; }

    static final int NCRYPT_SIGNATURE_INTERFACE() { return (int)5L; }

    static final int NCRYPT_KEY_DERIVATION_INTERFACE() { return (int)7L; }

    static final MemorySegment NCRYPT_RSA_ALGORITHM_GROUP$SEGMENT_CONSTANT_ = CLinker.toCString("R");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_RSA_ALGORITHM_GROUP() { return NCRYPT_RSA_ALGORITHM_GROUP$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_DH_ALGORITHM_GROUP$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_DH_ALGORITHM_GROUP() { return NCRYPT_DH_ALGORITHM_GROUP$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_DSA_ALGORITHM_GROUP$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_DSA_ALGORITHM_GROUP() { return NCRYPT_DSA_ALGORITHM_GROUP$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_ECDSA_ALGORITHM_GROUP$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_ECDSA_ALGORITHM_GROUP() { return NCRYPT_ECDSA_ALGORITHM_GROUP$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_ECDH_ALGORITHM_GROUP$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_ECDH_ALGORITHM_GROUP() { return NCRYPT_ECDH_ALGORITHM_GROUP$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_AES_ALGORITHM_GROUP$SEGMENT_CONSTANT_ = CLinker.toCString("A");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_AES_ALGORITHM_GROUP() { return NCRYPT_AES_ALGORITHM_GROUP$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_RC2_ALGORITHM_GROUP$SEGMENT_CONSTANT_ = CLinker.toCString("R");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_RC2_ALGORITHM_GROUP() { return NCRYPT_RC2_ALGORITHM_GROUP$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_DES_ALGORITHM_GROUP$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_DES_ALGORITHM_GROUP() { return NCRYPT_DES_ALGORITHM_GROUP$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_KEY_DERIVATION_GROUP$SEGMENT_CONSTANT_ = CLinker.toCString("K");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_KEY_DERIVATION_GROUP() { return NCRYPT_KEY_DERIVATION_GROUP$SEGMENT_CONSTANT_; }

    static final int NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES_CURRENT_VERSION() { return (int)0L; }

    static final int NCRYPT_VSM_KEY_ATTESTATION_STATEMENT_CURRENT_VERSION() { return (int)0L; }

    static final int NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS_CURRENT_VERSION() { return (int)0L; }

    static final int NCRYPT_EXPORTED_ISOLATED_KEY_HEADER_CURRENT_VERSION() { return (int)0L; }

    static final int NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT_CURRENT_VERSION() { return (int)0L; }

    static final int NCRYPT_NO_KEY_VALIDATION() { return (int)8L; }

    static final int NCRYPT_PERSIST_FLAG() { return (int)2147483648L; }

    static final int NCRYPT_CIPHER_OPERATION() { return (int)1L; }

    static final int NCRYPT_HASH_OPERATION() { return (int)2L; }

    static final int NCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION() { return (int)4L; }

    static final int NCRYPT_SECRET_AGREEMENT_OPERATION() { return (int)8L; }

    static final int NCRYPT_SIGNATURE_OPERATION() { return (int)16L; }

    static final int NCRYPT_RNG_OPERATION() { return (int)32L; }

    static final int NCRYPT_KEY_DERIVATION_OPERATION() { return (int)64L; }

    static final MemorySegment NCRYPT_NAME_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("N");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_NAME_PROPERTY() { return NCRYPT_NAME_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_UNIQUE_NAME_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("U");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_UNIQUE_NAME_PROPERTY() { return NCRYPT_UNIQUE_NAME_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_ALGORITHM_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("A");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_ALGORITHM_PROPERTY() { return NCRYPT_ALGORITHM_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_LENGTH_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("L");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_LENGTH_PROPERTY() { return NCRYPT_LENGTH_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_LENGTHS_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("L");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_LENGTHS_PROPERTY() { return NCRYPT_LENGTHS_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_BLOCK_LENGTH_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("B");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_BLOCK_LENGTH_PROPERTY() { return NCRYPT_BLOCK_LENGTH_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PUBLIC_LENGTH_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PUBLIC_LENGTH_PROPERTY() { return NCRYPT_PUBLIC_LENGTH_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_SIGNATURE_LENGTH_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_SIGNATURE_LENGTH_PROPERTY() { return NCRYPT_SIGNATURE_LENGTH_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_CHAINING_MODE_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_CHAINING_MODE_PROPERTY() { return NCRYPT_CHAINING_MODE_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_AUTH_TAG_LENGTH$SEGMENT_CONSTANT_ = CLinker.toCString("A");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_AUTH_TAG_LENGTH() { return NCRYPT_AUTH_TAG_LENGTH$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_UI_POLICY_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("U");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_UI_POLICY_PROPERTY() { return NCRYPT_UI_POLICY_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_EXPORT_POLICY_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_EXPORT_POLICY_PROPERTY() { return NCRYPT_EXPORT_POLICY_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_WINDOW_HANDLE_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("H");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_WINDOW_HANDLE_PROPERTY() { return NCRYPT_WINDOW_HANDLE_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_USE_CONTEXT_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("U");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_USE_CONTEXT_PROPERTY() { return NCRYPT_USE_CONTEXT_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_IMPL_TYPE_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("I");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_IMPL_TYPE_PROPERTY() { return NCRYPT_IMPL_TYPE_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_KEY_USAGE_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("K");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_KEY_USAGE_PROPERTY() { return NCRYPT_KEY_USAGE_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_KEY_TYPE_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("K");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_KEY_TYPE_PROPERTY() { return NCRYPT_KEY_TYPE_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_VERSION_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("V");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_VERSION_PROPERTY() { return NCRYPT_VERSION_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_SECURITY_DESCR_SUPPORT_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_SECURITY_DESCR_SUPPORT_PROPERTY() { return NCRYPT_SECURITY_DESCR_SUPPORT_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_SECURITY_DESCR_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_SECURITY_DESCR_PROPERTY() { return NCRYPT_SECURITY_DESCR_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_USE_COUNT_ENABLED_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_USE_COUNT_ENABLED_PROPERTY() { return NCRYPT_USE_COUNT_ENABLED_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_USE_COUNT_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("U");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_USE_COUNT_PROPERTY() { return NCRYPT_USE_COUNT_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_LAST_MODIFIED_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_LAST_MODIFIED_PROPERTY() { return NCRYPT_LAST_MODIFIED_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_MAX_NAME_LENGTH_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("M");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_MAX_NAME_LENGTH_PROPERTY() { return NCRYPT_MAX_NAME_LENGTH_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_ALGORITHM_GROUP_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("A");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_ALGORITHM_GROUP_PROPERTY() { return NCRYPT_ALGORITHM_GROUP_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_DH_PARAMETERS_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_DH_PARAMETERS_PROPERTY() { return NCRYPT_DH_PARAMETERS_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_ECC_PARAMETERS_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_ECC_PARAMETERS_PROPERTY() { return NCRYPT_ECC_PARAMETERS_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_ECC_CURVE_NAME_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_ECC_CURVE_NAME_PROPERTY() { return NCRYPT_ECC_CURVE_NAME_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_ECC_CURVE_NAME_LIST_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("E");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_ECC_CURVE_NAME_LIST_PROPERTY() { return NCRYPT_ECC_CURVE_NAME_LIST_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_USE_VIRTUAL_ISOLATION_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("V");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_USE_VIRTUAL_ISOLATION_PROPERTY() { return NCRYPT_USE_VIRTUAL_ISOLATION_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_USE_PER_BOOT_KEY_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_USE_PER_BOOT_KEY_PROPERTY() { return NCRYPT_USE_PER_BOOT_KEY_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PROVIDER_HANDLE_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PROVIDER_HANDLE_PROPERTY() { return NCRYPT_PROVIDER_HANDLE_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PIN_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PIN_PROPERTY() { return NCRYPT_PIN_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_READER_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_READER_PROPERTY() { return NCRYPT_READER_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_SMARTCARD_GUID_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_SMARTCARD_GUID_PROPERTY() { return NCRYPT_SMARTCARD_GUID_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_CERTIFICATE_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_CERTIFICATE_PROPERTY() { return NCRYPT_CERTIFICATE_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PIN_PROMPT_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PIN_PROMPT_PROPERTY() { return NCRYPT_PIN_PROMPT_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_USER_CERTSTORE_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_USER_CERTSTORE_PROPERTY() { return NCRYPT_USER_CERTSTORE_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_ROOT_CERTSTORE_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_ROOT_CERTSTORE_PROPERTY() { return NCRYPT_ROOT_CERTSTORE_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_SECURE_PIN_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_SECURE_PIN_PROPERTY() { return NCRYPT_SECURE_PIN_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_ASSOCIATED_ECDH_KEY$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_ASSOCIATED_ECDH_KEY() { return NCRYPT_ASSOCIATED_ECDH_KEY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_SCARD_PIN_ID$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_SCARD_PIN_ID() { return NCRYPT_SCARD_PIN_ID$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_SCARD_PIN_INFO$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_SCARD_PIN_INFO() { return NCRYPT_SCARD_PIN_INFO$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_READER_ICON_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_READER_ICON_PROPERTY() { return NCRYPT_READER_ICON_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_KDF_SECRET_VALUE$SEGMENT_CONSTANT_ = CLinker.toCString("K");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_KDF_SECRET_VALUE() { return NCRYPT_KDF_SECRET_VALUE$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_DISMISS_UI_TIMEOUT_SEC_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_DISMISS_UI_TIMEOUT_SEC_PROPERTY() { return NCRYPT_DISMISS_UI_TIMEOUT_SEC_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_PLATFORM_TYPE_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_PLATFORM_TYPE_PROPERTY() { return NCRYPT_PCP_PLATFORM_TYPE_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_PROVIDER_VERSION_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_PROVIDER_VERSION_PROPERTY() { return NCRYPT_PCP_PROVIDER_VERSION_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_EKPUB_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_EKPUB_PROPERTY() { return NCRYPT_PCP_EKPUB_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_EKCERT_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_EKCERT_PROPERTY() { return NCRYPT_PCP_EKCERT_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_EKNVCERT_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_EKNVCERT_PROPERTY() { return NCRYPT_PCP_EKNVCERT_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_RSA_EKPUB_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_RSA_EKPUB_PROPERTY() { return NCRYPT_PCP_RSA_EKPUB_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_RSA_EKCERT_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_RSA_EKCERT_PROPERTY() { return NCRYPT_PCP_RSA_EKCERT_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_RSA_EKNVCERT_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_RSA_EKNVCERT_PROPERTY() { return NCRYPT_PCP_RSA_EKNVCERT_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_ECC_EKPUB_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_ECC_EKPUB_PROPERTY() { return NCRYPT_PCP_ECC_EKPUB_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_ECC_EKCERT_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_ECC_EKCERT_PROPERTY() { return NCRYPT_PCP_ECC_EKCERT_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_ECC_EKNVCERT_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_ECC_EKNVCERT_PROPERTY() { return NCRYPT_PCP_ECC_EKNVCERT_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_SRKPUB_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_SRKPUB_PROPERTY() { return NCRYPT_PCP_SRKPUB_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_PCRTABLE_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_PCRTABLE_PROPERTY() { return NCRYPT_PCP_PCRTABLE_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_CHANGEPASSWORD_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_CHANGEPASSWORD_PROPERTY() { return NCRYPT_PCP_CHANGEPASSWORD_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_PASSWORD_REQUIRED_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_PASSWORD_REQUIRED_PROPERTY() { return NCRYPT_PCP_PASSWORD_REQUIRED_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_USAGEAUTH_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_USAGEAUTH_PROPERTY() { return NCRYPT_PCP_USAGEAUTH_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_MIGRATIONPASSWORD_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_MIGRATIONPASSWORD_PROPERTY() { return NCRYPT_PCP_MIGRATIONPASSWORD_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_EXPORT_ALLOWED_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_EXPORT_ALLOWED_PROPERTY() { return NCRYPT_PCP_EXPORT_ALLOWED_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_STORAGEPARENT_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_STORAGEPARENT_PROPERTY() { return NCRYPT_PCP_STORAGEPARENT_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_PROVIDERHANDLE_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_PROVIDERHANDLE_PROPERTY() { return NCRYPT_PCP_PROVIDERHANDLE_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_PLATFORMHANDLE_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_PLATFORMHANDLE_PROPERTY() { return NCRYPT_PCP_PLATFORMHANDLE_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_PLATFORM_BINDING_PCRMASK_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_PLATFORM_BINDING_PCRMASK_PROPERTY() { return NCRYPT_PCP_PLATFORM_BINDING_PCRMASK_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_PLATFORM_BINDING_PCRDIGESTLIST_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_PLATFORM_BINDING_PCRDIGESTLIST_PROPERTY() { return NCRYPT_PCP_PLATFORM_BINDING_PCRDIGESTLIST_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_PLATFORM_BINDING_PCRDIGEST_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_PLATFORM_BINDING_PCRDIGEST_PROPERTY() { return NCRYPT_PCP_PLATFORM_BINDING_PCRDIGEST_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_KEY_USAGE_POLICY_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_KEY_USAGE_POLICY_PROPERTY() { return NCRYPT_PCP_KEY_USAGE_POLICY_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_RSA_SCHEME_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_RSA_SCHEME_PROPERTY() { return NCRYPT_PCP_RSA_SCHEME_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_RSA_SCHEME_HASH_ALG_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_RSA_SCHEME_HASH_ALG_PROPERTY() { return NCRYPT_PCP_RSA_SCHEME_HASH_ALG_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_TPM12_IDBINDING_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_TPM12_IDBINDING_PROPERTY() { return NCRYPT_PCP_TPM12_IDBINDING_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_TPM12_IDBINDING_DYNAMIC_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_TPM12_IDBINDING_DYNAMIC_PROPERTY() { return NCRYPT_PCP_TPM12_IDBINDING_DYNAMIC_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_TPM12_IDACTIVATION_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_TPM12_IDACTIVATION_PROPERTY() { return NCRYPT_PCP_TPM12_IDACTIVATION_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_KEYATTESTATION_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_KEYATTESTATION_PROPERTY() { return NCRYPT_PCP_KEYATTESTATION_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY() { return NCRYPT_PCP_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_PROHIBITED_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_PROHIBITED_PROPERTY() { return NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_PROHIBITED_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_VULNERABILITY_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_VULNERABILITY_PROPERTY() { return NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_VULNERABILITY_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_HMAC_AUTH_POLICYREF$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_HMAC_AUTH_POLICYREF() { return NCRYPT_PCP_HMAC_AUTH_POLICYREF$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_HMAC_AUTH_POLICYINFO$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_HMAC_AUTH_POLICYINFO() { return NCRYPT_PCP_HMAC_AUTH_POLICYINFO$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_HMAC_AUTH_NONCE$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_HMAC_AUTH_NONCE() { return NCRYPT_PCP_HMAC_AUTH_NONCE$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_HMAC_AUTH_SIGNATURE$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_HMAC_AUTH_SIGNATURE() { return NCRYPT_PCP_HMAC_AUTH_SIGNATURE$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_HMAC_AUTH_TICKET$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_HMAC_AUTH_TICKET() { return NCRYPT_PCP_HMAC_AUTH_TICKET$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_NO_DA_PROTECTION_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_NO_DA_PROTECTION_PROPERTY() { return NCRYPT_PCP_NO_DA_PROTECTION_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_TPM_MANUFACTURER_ID_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_TPM_MANUFACTURER_ID_PROPERTY() { return NCRYPT_PCP_TPM_MANUFACTURER_ID_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_TPM_FW_VERSION_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_TPM_FW_VERSION_PROPERTY() { return NCRYPT_PCP_TPM_FW_VERSION_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_TPM2BNAME_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_TPM2BNAME_PROPERTY() { return NCRYPT_PCP_TPM2BNAME_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_TPM_VERSION_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_TPM_VERSION_PROPERTY() { return NCRYPT_PCP_TPM_VERSION_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_RAW_POLICYDIGEST_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_RAW_POLICYDIGEST_PROPERTY() { return NCRYPT_PCP_RAW_POLICYDIGEST_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_KEY_CREATIONHASH_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_KEY_CREATIONHASH_PROPERTY() { return NCRYPT_PCP_KEY_CREATIONHASH_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_KEY_CREATIONTICKET_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_KEY_CREATIONTICKET_PROPERTY() { return NCRYPT_PCP_KEY_CREATIONTICKET_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_SESSIONID_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_SESSIONID_PROPERTY() { return NCRYPT_PCP_SESSIONID_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_PSS_SALT_SIZE_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_PSS_SALT_SIZE_PROPERTY() { return NCRYPT_PCP_PSS_SALT_SIZE_PROPERTY$SEGMENT_CONSTANT_; }

    static final int NCRYPT_TPM12_PROVIDER() { return (int)65536L; }

    static final int NCRYPT_PCP_SIGNATURE_KEY() { return (int)1L; }

    static final int NCRYPT_PCP_ENCRYPTION_KEY() { return (int)2L; }

    static final int NCRYPT_PCP_GENERIC_KEY() { return (int)3L; }

    static final int NCRYPT_PCP_STORAGE_KEY() { return (int)4L; }

    static final int NCRYPT_PCP_IDENTITY_KEY() { return (int)8L; }

    static final int NCRYPT_PCP_HMACVERIFICATION_KEY() { return (int)16L; }

    static final MemorySegment NCRYPT_SCARD_NGC_KEY_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_SCARD_NGC_KEY_NAME() { return NCRYPT_SCARD_NGC_KEY_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PCP_PLATFORM_BINDING_PCRALGID_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PCP_PLATFORM_BINDING_PCRALGID_PROPERTY() { return NCRYPT_PCP_PLATFORM_BINDING_PCRALGID_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_INITIALIZATION_VECTOR$SEGMENT_CONSTANT_ = CLinker.toCString("I");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_INITIALIZATION_VECTOR() { return NCRYPT_INITIALIZATION_VECTOR$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_CHANGEPASSWORD_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_CHANGEPASSWORD_PROPERTY() { return NCRYPT_CHANGEPASSWORD_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY() { return NCRYPT_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_KEY_ACCESS_POLICY_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("K");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_KEY_ACCESS_POLICY_PROPERTY() { return NCRYPT_KEY_ACCESS_POLICY_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PIN_CACHE_FREE_APPLICATION_TICKET_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PIN_CACHE_FREE_APPLICATION_TICKET_PROPERTY() { return NCRYPT_PIN_CACHE_FREE_APPLICATION_TICKET_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PIN_CACHE_FLAGS_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PIN_CACHE_FLAGS_PROPERTY() { return NCRYPT_PIN_CACHE_FLAGS_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PIN_CACHE_APPLICATION_TICKET_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PIN_CACHE_APPLICATION_TICKET_PROPERTY() { return NCRYPT_PIN_CACHE_APPLICATION_TICKET_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PIN_CACHE_APPLICATION_IMAGE_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PIN_CACHE_APPLICATION_IMAGE_PROPERTY() { return NCRYPT_PIN_CACHE_APPLICATION_IMAGE_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PIN_CACHE_APPLICATION_STATUS_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PIN_CACHE_APPLICATION_STATUS_PROPERTY() { return NCRYPT_PIN_CACHE_APPLICATION_STATUS_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PIN_CACHE_PIN_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PIN_CACHE_PIN_PROPERTY() { return NCRYPT_PIN_CACHE_PIN_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PIN_CACHE_IS_GESTURE_REQUIRED_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PIN_CACHE_IS_GESTURE_REQUIRED_PROPERTY() { return NCRYPT_PIN_CACHE_IS_GESTURE_REQUIRED_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PIN_CACHE_CLEAR_PROPERTY$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PIN_CACHE_CLEAR_PROPERTY() { return NCRYPT_PIN_CACHE_CLEAR_PROPERTY$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_CIPHER_KEY_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("C");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_CIPHER_KEY_BLOB() { return NCRYPT_CIPHER_KEY_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_KDF_KEY_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("K");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_KDF_KEY_BLOB() { return NCRYPT_KDF_KEY_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PROTECTED_KEY_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PROTECTED_KEY_BLOB() { return NCRYPT_PROTECTED_KEY_BLOB$SEGMENT_CONSTANT_; }

    static final long NCRYPT_TPM_LOADABLE_KEY_BLOB_MIN_SIZE() { return 20L; }

    static final MemorySegment NCRYPT_TPM_LOADABLE_KEY_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_TPM_LOADABLE_KEY_BLOB() { return NCRYPT_TPM_LOADABLE_KEY_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PKCS7_ENVELOPE_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PKCS7_ENVELOPE_BLOB() { return NCRYPT_PKCS7_ENVELOPE_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_PKCS8_PRIVATE_KEY_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("P");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_PKCS8_PRIVATE_KEY_BLOB() { return NCRYPT_PKCS8_PRIVATE_KEY_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_OPAQUETRANSPORT_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("O");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_OPAQUETRANSPORT_BLOB() { return NCRYPT_OPAQUETRANSPORT_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment NCRYPT_ISOLATED_KEY_ENVELOPE_BLOB$SEGMENT_CONSTANT_ = CLinker.toCString("I");
    static final jdk.incubator.foreign.MemorySegment NCRYPT_ISOLATED_KEY_ENVELOPE_BLOB() { return NCRYPT_ISOLATED_KEY_ENVELOPE_BLOB$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA() { return szOID_RSA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS() { return szOID_PKCS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_HASH$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.2");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_HASH() { return szOID_RSA_HASH$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_ENCRYPT$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.3");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_ENCRYPT() { return szOID_RSA_ENCRYPT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_1$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_1() { return szOID_PKCS_1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_2$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.2");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_2() { return szOID_PKCS_2$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_3$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.3");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_3() { return szOID_PKCS_3$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_4$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.4");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_4() { return szOID_PKCS_4$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_5$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.5");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_5() { return szOID_PKCS_5$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_6$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.6");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_6() { return szOID_PKCS_6$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_7$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.7");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_7() { return szOID_PKCS_7$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_8$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.8");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_8() { return szOID_PKCS_8$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_9$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_9() { return szOID_PKCS_9$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_10$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.10");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_10() { return szOID_PKCS_10$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_12$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.12");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_12() { return szOID_PKCS_12$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_RSA$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_RSA() { return szOID_RSA_RSA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_MD2RSA$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.1.2");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_MD2RSA() { return szOID_RSA_MD2RSA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_MD4RSA$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.1.3");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_MD4RSA() { return szOID_RSA_MD4RSA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_MD5RSA$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.1.4");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_MD5RSA() { return szOID_RSA_MD5RSA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_SHA1RSA$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.1.5");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_SHA1RSA() { return szOID_RSA_SHA1RSA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_SETOAEP_RSA$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.1.6");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_SETOAEP_RSA() { return szOID_RSA_SETOAEP_RSA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSAES_OAEP$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.1.7");
    static final jdk.incubator.foreign.MemorySegment szOID_RSAES_OAEP() { return szOID_RSAES_OAEP$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_MGF1$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.1.8");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_MGF1() { return szOID_RSA_MGF1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_PSPECIFIED$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.1.9");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_PSPECIFIED() { return szOID_RSA_PSPECIFIED$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_SSA_PSS$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.1.10");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_SSA_PSS() { return szOID_RSA_SSA_PSS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_SHA256RSA$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.1.11");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_SHA256RSA() { return szOID_RSA_SHA256RSA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_SHA384RSA$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.1.12");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_SHA384RSA() { return szOID_RSA_SHA384RSA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_SHA512RSA$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.1.13");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_SHA512RSA() { return szOID_RSA_SHA512RSA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_DH$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.3.1");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_DH() { return szOID_RSA_DH$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_data$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.7.1");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_data() { return szOID_RSA_data$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_signedData$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.7.2");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_signedData() { return szOID_RSA_signedData$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_envelopedData$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.7.3");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_envelopedData() { return szOID_RSA_envelopedData$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_signEnvData$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.7.4");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_signEnvData() { return szOID_RSA_signEnvData$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_digestedData$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.7.5");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_digestedData() { return szOID_RSA_digestedData$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_hashedData$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.7.5");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_hashedData() { return szOID_RSA_hashedData$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_encryptedData$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.7.6");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_encryptedData() { return szOID_RSA_encryptedData$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_emailAddr$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.1");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_emailAddr() { return szOID_RSA_emailAddr$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_unstructName$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.2");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_unstructName() { return szOID_RSA_unstructName$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_contentType$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.3");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_contentType() { return szOID_RSA_contentType$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_messageDigest$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.4");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_messageDigest() { return szOID_RSA_messageDigest$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_signingTime$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.5");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_signingTime() { return szOID_RSA_signingTime$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_counterSign$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.6");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_counterSign() { return szOID_RSA_counterSign$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_challengePwd$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.7");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_challengePwd() { return szOID_RSA_challengePwd$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_unstructAddr$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.8");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_unstructAddr() { return szOID_RSA_unstructAddr$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_extCertAttrs$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.9");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_extCertAttrs() { return szOID_RSA_extCertAttrs$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_certExtensions$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.14");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_certExtensions() { return szOID_RSA_certExtensions$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_SMIMECapabilities$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.15");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_SMIMECapabilities() { return szOID_RSA_SMIMECapabilities$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_preferSignedData$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.15.1");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_preferSignedData() { return szOID_RSA_preferSignedData$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_TIMESTAMP_TOKEN$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.16.1.4");
    static final jdk.incubator.foreign.MemorySegment szOID_TIMESTAMP_TOKEN() { return szOID_TIMESTAMP_TOKEN$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RFC3161_counterSign$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.3.3.1");
    static final jdk.incubator.foreign.MemorySegment szOID_RFC3161_counterSign() { return szOID_RFC3161_counterSign$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_SMIMEalg$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.16.3");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_SMIMEalg() { return szOID_RSA_SMIMEalg$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_SMIMEalgESDH$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.16.3.5");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_SMIMEalgESDH() { return szOID_RSA_SMIMEalgESDH$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_SMIMEalgCMS3DESwrap$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.16.3.6");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_SMIMEalgCMS3DESwrap() { return szOID_RSA_SMIMEalgCMS3DESwrap$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_SMIMEalgCMSRC2wrap$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.16.3.7");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_SMIMEalgCMSRC2wrap() { return szOID_RSA_SMIMEalgCMSRC2wrap$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_MD2$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.2.2");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_MD2() { return szOID_RSA_MD2$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_MD4$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.2.4");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_MD4() { return szOID_RSA_MD4$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_MD5$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.2.5");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_MD5() { return szOID_RSA_MD5$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_RC2CBC$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.3.2");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_RC2CBC() { return szOID_RSA_RC2CBC$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_RC4$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.3.4");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_RC4() { return szOID_RSA_RC4$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_DES_EDE3_CBC$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.3.7");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_DES_EDE3_CBC() { return szOID_RSA_DES_EDE3_CBC$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_RSA_RC5_CBCPad$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.3.9");
    static final jdk.incubator.foreign.MemorySegment szOID_RSA_RC5_CBCPad() { return szOID_RSA_RC5_CBCPad$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ANSI_X942$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10046");
    static final jdk.incubator.foreign.MemorySegment szOID_ANSI_X942() { return szOID_ANSI_X942$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ANSI_X942_DH$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10046.2.1");
    static final jdk.incubator.foreign.MemorySegment szOID_ANSI_X942_DH() { return szOID_ANSI_X942_DH$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_X957$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10040");
    static final jdk.incubator.foreign.MemorySegment szOID_X957() { return szOID_X957$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_X957_DSA$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10040.4.1");
    static final jdk.incubator.foreign.MemorySegment szOID_X957_DSA() { return szOID_X957_DSA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_X957_SHA1DSA$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10040.4.3");
    static final jdk.incubator.foreign.MemorySegment szOID_X957_SHA1DSA() { return szOID_X957_SHA1DSA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_PUBLIC_KEY$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10045.2.1");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_PUBLIC_KEY() { return szOID_ECC_PUBLIC_KEY$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_P256$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10045.3.1.7");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_P256() { return szOID_ECC_CURVE_P256$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_P384$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.132.0.34");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_P384() { return szOID_ECC_CURVE_P384$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_P521$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.132.0.35");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_P521() { return szOID_ECC_CURVE_P521$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_BRAINPOOLP160R1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.36.3.3.2.8.1.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_BRAINPOOLP160R1() { return szOID_ECC_CURVE_BRAINPOOLP160R1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_BRAINPOOLP160T1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.36.3.3.2.8.1.1.2");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_BRAINPOOLP160T1() { return szOID_ECC_CURVE_BRAINPOOLP160T1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_BRAINPOOLP192R1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.36.3.3.2.8.1.1.3");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_BRAINPOOLP192R1() { return szOID_ECC_CURVE_BRAINPOOLP192R1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_BRAINPOOLP192T1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.36.3.3.2.8.1.1.4");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_BRAINPOOLP192T1() { return szOID_ECC_CURVE_BRAINPOOLP192T1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_BRAINPOOLP224R1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.36.3.3.2.8.1.1.5");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_BRAINPOOLP224R1() { return szOID_ECC_CURVE_BRAINPOOLP224R1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_BRAINPOOLP224T1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.36.3.3.2.8.1.1.6");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_BRAINPOOLP224T1() { return szOID_ECC_CURVE_BRAINPOOLP224T1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_BRAINPOOLP256R1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.36.3.3.2.8.1.1.7");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_BRAINPOOLP256R1() { return szOID_ECC_CURVE_BRAINPOOLP256R1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_BRAINPOOLP256T1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.36.3.3.2.8.1.1.8");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_BRAINPOOLP256T1() { return szOID_ECC_CURVE_BRAINPOOLP256T1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_BRAINPOOLP320R1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.36.3.3.2.8.1.1.9");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_BRAINPOOLP320R1() { return szOID_ECC_CURVE_BRAINPOOLP320R1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_BRAINPOOLP320T1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.36.3.3.2.8.1.1.10");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_BRAINPOOLP320T1() { return szOID_ECC_CURVE_BRAINPOOLP320T1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_BRAINPOOLP384R1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.36.3.3.2.8.1.1.11");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_BRAINPOOLP384R1() { return szOID_ECC_CURVE_BRAINPOOLP384R1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_BRAINPOOLP384T1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.36.3.3.2.8.1.1.12");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_BRAINPOOLP384T1() { return szOID_ECC_CURVE_BRAINPOOLP384T1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_BRAINPOOLP512R1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.36.3.3.2.8.1.1.13");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_BRAINPOOLP512R1() { return szOID_ECC_CURVE_BRAINPOOLP512R1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_BRAINPOOLP512T1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.36.3.3.2.8.1.1.14");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_BRAINPOOLP512T1() { return szOID_ECC_CURVE_BRAINPOOLP512T1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_EC192WAPI$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.156.11235.1.1.2.1");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_EC192WAPI() { return szOID_ECC_CURVE_EC192WAPI$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CN_ECDSA_SHA256$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.156.11235.1.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_CN_ECDSA_SHA256() { return szOID_CN_ECDSA_SHA256$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_NISTP192$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10045.3.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_NISTP192() { return szOID_ECC_CURVE_NISTP192$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_NISTP224$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.132.0.33");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_NISTP224() { return szOID_ECC_CURVE_NISTP224$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_NISTP256$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10045.3.1.7");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_NISTP256() { return szOID_ECC_CURVE_NISTP256$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_NISTP384$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.132.0.34");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_NISTP384() { return szOID_ECC_CURVE_NISTP384$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_NISTP521$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.132.0.35");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_NISTP521() { return szOID_ECC_CURVE_NISTP521$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_SECP160K1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.132.0.9");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_SECP160K1() { return szOID_ECC_CURVE_SECP160K1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_SECP160R1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.132.0.8");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_SECP160R1() { return szOID_ECC_CURVE_SECP160R1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_SECP160R2$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.132.0.30");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_SECP160R2() { return szOID_ECC_CURVE_SECP160R2$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_SECP192K1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.132.0.31");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_SECP192K1() { return szOID_ECC_CURVE_SECP192K1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_SECP192R1$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10045.3.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_SECP192R1() { return szOID_ECC_CURVE_SECP192R1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_SECP224K1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.132.0.32");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_SECP224K1() { return szOID_ECC_CURVE_SECP224K1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_SECP224R1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.132.0.33");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_SECP224R1() { return szOID_ECC_CURVE_SECP224R1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_SECP256K1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.132.0.10");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_SECP256K1() { return szOID_ECC_CURVE_SECP256K1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_SECP256R1$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10045.3.1.7");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_SECP256R1() { return szOID_ECC_CURVE_SECP256R1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_SECP384R1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.132.0.34");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_SECP384R1() { return szOID_ECC_CURVE_SECP384R1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_SECP521R1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.132.0.35");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_SECP521R1() { return szOID_ECC_CURVE_SECP521R1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_WTLS7$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.132.0.30");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_WTLS7() { return szOID_ECC_CURVE_WTLS7$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_WTLS9$SEGMENT_CONSTANT_ = CLinker.toCString("2.23.43.1.4.9");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_WTLS9() { return szOID_ECC_CURVE_WTLS9$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_WTLS12$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.132.0.33");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_WTLS12() { return szOID_ECC_CURVE_WTLS12$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_X962P192V1$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10045.3.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_X962P192V1() { return szOID_ECC_CURVE_X962P192V1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_X962P192V2$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10045.3.1.2");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_X962P192V2() { return szOID_ECC_CURVE_X962P192V2$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_X962P192V3$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10045.3.1.3");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_X962P192V3() { return szOID_ECC_CURVE_X962P192V3$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_X962P239V1$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10045.3.1.4");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_X962P239V1() { return szOID_ECC_CURVE_X962P239V1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_X962P239V2$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10045.3.1.5");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_X962P239V2() { return szOID_ECC_CURVE_X962P239V2$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_X962P239V3$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10045.3.1.6");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_X962P239V3() { return szOID_ECC_CURVE_X962P239V3$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECC_CURVE_X962P256V1$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10045.3.1.7");
    static final jdk.incubator.foreign.MemorySegment szOID_ECC_CURVE_X962P256V1() { return szOID_ECC_CURVE_X962P256V1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECDSA_SHA1$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10045.4.1");
    static final jdk.incubator.foreign.MemorySegment szOID_ECDSA_SHA1() { return szOID_ECDSA_SHA1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECDSA_SPECIFIED$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10045.4.3");
    static final jdk.incubator.foreign.MemorySegment szOID_ECDSA_SPECIFIED() { return szOID_ECDSA_SPECIFIED$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECDSA_SHA256$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10045.4.3.2");
    static final jdk.incubator.foreign.MemorySegment szOID_ECDSA_SHA256() { return szOID_ECDSA_SHA256$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECDSA_SHA384$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10045.4.3.3");
    static final jdk.incubator.foreign.MemorySegment szOID_ECDSA_SHA384() { return szOID_ECDSA_SHA384$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ECDSA_SHA512$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.10045.4.3.4");
    static final jdk.incubator.foreign.MemorySegment szOID_ECDSA_SHA512() { return szOID_ECDSA_SHA512$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NIST_AES128_CBC$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.3.4.1.2");
    static final jdk.incubator.foreign.MemorySegment szOID_NIST_AES128_CBC() { return szOID_NIST_AES128_CBC$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NIST_AES192_CBC$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.3.4.1.22");
    static final jdk.incubator.foreign.MemorySegment szOID_NIST_AES192_CBC() { return szOID_NIST_AES192_CBC$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NIST_AES256_CBC$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.3.4.1.42");
    static final jdk.incubator.foreign.MemorySegment szOID_NIST_AES256_CBC() { return szOID_NIST_AES256_CBC$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NIST_AES128_WRAP$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.3.4.1.5");
    static final jdk.incubator.foreign.MemorySegment szOID_NIST_AES128_WRAP() { return szOID_NIST_AES128_WRAP$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NIST_AES192_WRAP$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.3.4.1.25");
    static final jdk.incubator.foreign.MemorySegment szOID_NIST_AES192_WRAP() { return szOID_NIST_AES192_WRAP$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NIST_AES256_WRAP$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.3.4.1.45");
    static final jdk.incubator.foreign.MemorySegment szOID_NIST_AES256_WRAP() { return szOID_NIST_AES256_WRAP$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DH_SINGLE_PASS_STDDH_SHA1_KDF$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.133.16.840.63.0.2");
    static final jdk.incubator.foreign.MemorySegment szOID_DH_SINGLE_PASS_STDDH_SHA1_KDF() { return szOID_DH_SINGLE_PASS_STDDH_SHA1_KDF$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DH_SINGLE_PASS_STDDH_SHA256_KDF$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.132.1.11.1");
    static final jdk.incubator.foreign.MemorySegment szOID_DH_SINGLE_PASS_STDDH_SHA256_KDF() { return szOID_DH_SINGLE_PASS_STDDH_SHA256_KDF$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DH_SINGLE_PASS_STDDH_SHA384_KDF$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.132.1.11.2");
    static final jdk.incubator.foreign.MemorySegment szOID_DH_SINGLE_PASS_STDDH_SHA384_KDF() { return szOID_DH_SINGLE_PASS_STDDH_SHA384_KDF$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DS$SEGMENT_CONSTANT_ = CLinker.toCString("2.5");
    static final jdk.incubator.foreign.MemorySegment szOID_DS() { return szOID_DS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DSALG$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.8");
    static final jdk.incubator.foreign.MemorySegment szOID_DSALG() { return szOID_DSALG$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DSALG_CRPT$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.8.1");
    static final jdk.incubator.foreign.MemorySegment szOID_DSALG_CRPT() { return szOID_DSALG_CRPT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DSALG_HASH$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.8.2");
    static final jdk.incubator.foreign.MemorySegment szOID_DSALG_HASH() { return szOID_DSALG_HASH$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DSALG_SIGN$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.8.3");
    static final jdk.incubator.foreign.MemorySegment szOID_DSALG_SIGN() { return szOID_DSALG_SIGN$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DSALG_RSA$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.8.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_DSALG_RSA() { return szOID_DSALG_RSA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIW$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14");
    static final jdk.incubator.foreign.MemorySegment szOID_OIW() { return szOID_OIW$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC() { return szOID_OIWSEC$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_md4RSA$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.2");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_md4RSA() { return szOID_OIWSEC_md4RSA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_md5RSA$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.3");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_md5RSA() { return szOID_OIWSEC_md5RSA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_md4RSA2$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.4");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_md4RSA2() { return szOID_OIWSEC_md4RSA2$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_desECB$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.6");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_desECB() { return szOID_OIWSEC_desECB$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_desCBC$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.7");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_desCBC() { return szOID_OIWSEC_desCBC$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_desOFB$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.8");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_desOFB() { return szOID_OIWSEC_desOFB$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_desCFB$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.9");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_desCFB() { return szOID_OIWSEC_desCFB$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_desMAC$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.10");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_desMAC() { return szOID_OIWSEC_desMAC$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_rsaSign$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.11");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_rsaSign() { return szOID_OIWSEC_rsaSign$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_dsa$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.12");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_dsa() { return szOID_OIWSEC_dsa$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_shaDSA$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.13");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_shaDSA() { return szOID_OIWSEC_shaDSA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_mdc2RSA$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.14");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_mdc2RSA() { return szOID_OIWSEC_mdc2RSA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_shaRSA$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.15");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_shaRSA() { return szOID_OIWSEC_shaRSA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_dhCommMod$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.16");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_dhCommMod() { return szOID_OIWSEC_dhCommMod$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_desEDE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.17");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_desEDE() { return szOID_OIWSEC_desEDE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_sha$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.18");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_sha() { return szOID_OIWSEC_sha$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_mdc2$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.19");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_mdc2() { return szOID_OIWSEC_mdc2$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_dsaComm$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.20");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_dsaComm() { return szOID_OIWSEC_dsaComm$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_dsaCommSHA$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.21");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_dsaCommSHA() { return szOID_OIWSEC_dsaCommSHA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_rsaXchg$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.22");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_rsaXchg() { return szOID_OIWSEC_rsaXchg$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_keyHashSeal$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.23");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_keyHashSeal() { return szOID_OIWSEC_keyHashSeal$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_md2RSASign$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.24");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_md2RSASign() { return szOID_OIWSEC_md2RSASign$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_md5RSASign$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.25");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_md5RSASign() { return szOID_OIWSEC_md5RSASign$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_sha1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.26");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_sha1() { return szOID_OIWSEC_sha1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_dsaSHA1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.27");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_dsaSHA1() { return szOID_OIWSEC_dsaSHA1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_dsaCommSHA1$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.28");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_dsaCommSHA1() { return szOID_OIWSEC_dsaCommSHA1$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWSEC_sha1RSASign$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.3.2.29");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWSEC_sha1RSASign() { return szOID_OIWSEC_sha1RSASign$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWDIR$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.7.2");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWDIR() { return szOID_OIWDIR$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWDIR_CRPT$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.7.2.1");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWDIR_CRPT() { return szOID_OIWDIR_CRPT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWDIR_HASH$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.7.2.2");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWDIR_HASH() { return szOID_OIWDIR_HASH$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWDIR_SIGN$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.7.2.3");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWDIR_SIGN() { return szOID_OIWDIR_SIGN$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWDIR_md2$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.7.2.2.1");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWDIR_md2() { return szOID_OIWDIR_md2$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OIWDIR_md2RSA$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.14.7.2.3.1");
    static final jdk.incubator.foreign.MemorySegment szOID_OIWDIR_md2RSA() { return szOID_OIWDIR_md2RSA$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC() { return szOID_INFOSEC$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_sdnsSignature$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_sdnsSignature() { return szOID_INFOSEC_sdnsSignature$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_mosaicSignature$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.2");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_mosaicSignature() { return szOID_INFOSEC_mosaicSignature$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_sdnsConfidentiality$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.3");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_sdnsConfidentiality() { return szOID_INFOSEC_sdnsConfidentiality$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_mosaicConfidentiality$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.4");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_mosaicConfidentiality() { return szOID_INFOSEC_mosaicConfidentiality$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_sdnsIntegrity$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.5");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_sdnsIntegrity() { return szOID_INFOSEC_sdnsIntegrity$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_mosaicIntegrity$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.6");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_mosaicIntegrity() { return szOID_INFOSEC_mosaicIntegrity$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_sdnsTokenProtection$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.7");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_sdnsTokenProtection() { return szOID_INFOSEC_sdnsTokenProtection$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_mosaicTokenProtection$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.8");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_mosaicTokenProtection() { return szOID_INFOSEC_mosaicTokenProtection$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_sdnsKeyManagement$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.9");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_sdnsKeyManagement() { return szOID_INFOSEC_sdnsKeyManagement$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_mosaicKeyManagement$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.10");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_mosaicKeyManagement() { return szOID_INFOSEC_mosaicKeyManagement$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_sdnsKMandSig$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.11");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_sdnsKMandSig() { return szOID_INFOSEC_sdnsKMandSig$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_mosaicKMandSig$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.12");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_mosaicKMandSig() { return szOID_INFOSEC_mosaicKMandSig$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_SuiteASignature$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.13");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_SuiteASignature() { return szOID_INFOSEC_SuiteASignature$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_SuiteAConfidentiality$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.14");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_SuiteAConfidentiality() { return szOID_INFOSEC_SuiteAConfidentiality$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_SuiteAIntegrity$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.15");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_SuiteAIntegrity() { return szOID_INFOSEC_SuiteAIntegrity$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_SuiteATokenProtection$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.16");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_SuiteATokenProtection() { return szOID_INFOSEC_SuiteATokenProtection$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_SuiteAKeyManagement$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.17");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_SuiteAKeyManagement() { return szOID_INFOSEC_SuiteAKeyManagement$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_SuiteAKMandSig$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.18");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_SuiteAKMandSig() { return szOID_INFOSEC_SuiteAKMandSig$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_mosaicUpdatedSig$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.19");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_mosaicUpdatedSig() { return szOID_INFOSEC_mosaicUpdatedSig$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_mosaicKMandUpdSig$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.20");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_mosaicKMandUpdSig() { return szOID_INFOSEC_mosaicKMandUpdSig$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INFOSEC_mosaicUpdatedInteg$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.2.1.1.21");
    static final jdk.incubator.foreign.MemorySegment szOID_INFOSEC_mosaicUpdatedInteg() { return szOID_INFOSEC_mosaicUpdatedInteg$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NIST_sha256$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.3.4.2.1");
    static final jdk.incubator.foreign.MemorySegment szOID_NIST_sha256() { return szOID_NIST_sha256$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NIST_sha384$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.3.4.2.2");
    static final jdk.incubator.foreign.MemorySegment szOID_NIST_sha384() { return szOID_NIST_sha384$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_NIST_sha512$SEGMENT_CONSTANT_ = CLinker.toCString("2.16.840.1.101.3.4.2.3");
    static final jdk.incubator.foreign.MemorySegment szOID_NIST_sha512() { return szOID_NIST_sha512$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_COMMON_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.3");
    static final jdk.incubator.foreign.MemorySegment szOID_COMMON_NAME() { return szOID_COMMON_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_SUR_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.4");
    static final jdk.incubator.foreign.MemorySegment szOID_SUR_NAME() { return szOID_SUR_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DEVICE_SERIAL_NUMBER$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.5");
    static final jdk.incubator.foreign.MemorySegment szOID_DEVICE_SERIAL_NUMBER() { return szOID_DEVICE_SERIAL_NUMBER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_COUNTRY_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.6");
    static final jdk.incubator.foreign.MemorySegment szOID_COUNTRY_NAME() { return szOID_COUNTRY_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_LOCALITY_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.7");
    static final jdk.incubator.foreign.MemorySegment szOID_LOCALITY_NAME() { return szOID_LOCALITY_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_STATE_OR_PROVINCE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.8");
    static final jdk.incubator.foreign.MemorySegment szOID_STATE_OR_PROVINCE_NAME() { return szOID_STATE_OR_PROVINCE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_STREET_ADDRESS$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.9");
    static final jdk.incubator.foreign.MemorySegment szOID_STREET_ADDRESS() { return szOID_STREET_ADDRESS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ORGANIZATION_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.10");
    static final jdk.incubator.foreign.MemorySegment szOID_ORGANIZATION_NAME() { return szOID_ORGANIZATION_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ORGANIZATIONAL_UNIT_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.11");
    static final jdk.incubator.foreign.MemorySegment szOID_ORGANIZATIONAL_UNIT_NAME() { return szOID_ORGANIZATIONAL_UNIT_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_TITLE$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.12");
    static final jdk.incubator.foreign.MemorySegment szOID_TITLE() { return szOID_TITLE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DESCRIPTION$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.13");
    static final jdk.incubator.foreign.MemorySegment szOID_DESCRIPTION() { return szOID_DESCRIPTION$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_SEARCH_GUIDE$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.14");
    static final jdk.incubator.foreign.MemorySegment szOID_SEARCH_GUIDE() { return szOID_SEARCH_GUIDE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_BUSINESS_CATEGORY$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.15");
    static final jdk.incubator.foreign.MemorySegment szOID_BUSINESS_CATEGORY() { return szOID_BUSINESS_CATEGORY$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_POSTAL_ADDRESS$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.16");
    static final jdk.incubator.foreign.MemorySegment szOID_POSTAL_ADDRESS() { return szOID_POSTAL_ADDRESS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_POSTAL_CODE$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.17");
    static final jdk.incubator.foreign.MemorySegment szOID_POSTAL_CODE() { return szOID_POSTAL_CODE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_POST_OFFICE_BOX$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.18");
    static final jdk.incubator.foreign.MemorySegment szOID_POST_OFFICE_BOX() { return szOID_POST_OFFICE_BOX$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PHYSICAL_DELIVERY_OFFICE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.19");
    static final jdk.incubator.foreign.MemorySegment szOID_PHYSICAL_DELIVERY_OFFICE_NAME() { return szOID_PHYSICAL_DELIVERY_OFFICE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_TELEPHONE_NUMBER$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.20");
    static final jdk.incubator.foreign.MemorySegment szOID_TELEPHONE_NUMBER() { return szOID_TELEPHONE_NUMBER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_TELEX_NUMBER$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.21");
    static final jdk.incubator.foreign.MemorySegment szOID_TELEX_NUMBER() { return szOID_TELEX_NUMBER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_TELETEXT_TERMINAL_IDENTIFIER$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.22");
    static final jdk.incubator.foreign.MemorySegment szOID_TELETEXT_TERMINAL_IDENTIFIER() { return szOID_TELETEXT_TERMINAL_IDENTIFIER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_FACSIMILE_TELEPHONE_NUMBER$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.23");
    static final jdk.incubator.foreign.MemorySegment szOID_FACSIMILE_TELEPHONE_NUMBER() { return szOID_FACSIMILE_TELEPHONE_NUMBER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_X21_ADDRESS$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.24");
    static final jdk.incubator.foreign.MemorySegment szOID_X21_ADDRESS() { return szOID_X21_ADDRESS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INTERNATIONAL_ISDN_NUMBER$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.25");
    static final jdk.incubator.foreign.MemorySegment szOID_INTERNATIONAL_ISDN_NUMBER() { return szOID_INTERNATIONAL_ISDN_NUMBER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_REGISTERED_ADDRESS$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.26");
    static final jdk.incubator.foreign.MemorySegment szOID_REGISTERED_ADDRESS() { return szOID_REGISTERED_ADDRESS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DESTINATION_INDICATOR$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.27");
    static final jdk.incubator.foreign.MemorySegment szOID_DESTINATION_INDICATOR() { return szOID_DESTINATION_INDICATOR$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PREFERRED_DELIVERY_METHOD$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.28");
    static final jdk.incubator.foreign.MemorySegment szOID_PREFERRED_DELIVERY_METHOD() { return szOID_PREFERRED_DELIVERY_METHOD$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PRESENTATION_ADDRESS$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.29");
    static final jdk.incubator.foreign.MemorySegment szOID_PRESENTATION_ADDRESS() { return szOID_PRESENTATION_ADDRESS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_SUPPORTED_APPLICATION_CONTEXT$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.30");
    static final jdk.incubator.foreign.MemorySegment szOID_SUPPORTED_APPLICATION_CONTEXT() { return szOID_SUPPORTED_APPLICATION_CONTEXT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_MEMBER$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.31");
    static final jdk.incubator.foreign.MemorySegment szOID_MEMBER() { return szOID_MEMBER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_OWNER$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.32");
    static final jdk.incubator.foreign.MemorySegment szOID_OWNER() { return szOID_OWNER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_ROLE_OCCUPANT$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.33");
    static final jdk.incubator.foreign.MemorySegment szOID_ROLE_OCCUPANT() { return szOID_ROLE_OCCUPANT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_SEE_ALSO$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.34");
    static final jdk.incubator.foreign.MemorySegment szOID_SEE_ALSO() { return szOID_SEE_ALSO$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_USER_PASSWORD$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.35");
    static final jdk.incubator.foreign.MemorySegment szOID_USER_PASSWORD() { return szOID_USER_PASSWORD$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_USER_CERTIFICATE$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.36");
    static final jdk.incubator.foreign.MemorySegment szOID_USER_CERTIFICATE() { return szOID_USER_CERTIFICATE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CA_CERTIFICATE$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.37");
    static final jdk.incubator.foreign.MemorySegment szOID_CA_CERTIFICATE() { return szOID_CA_CERTIFICATE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_AUTHORITY_REVOCATION_LIST$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.38");
    static final jdk.incubator.foreign.MemorySegment szOID_AUTHORITY_REVOCATION_LIST() { return szOID_AUTHORITY_REVOCATION_LIST$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERTIFICATE_REVOCATION_LIST$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.39");
    static final jdk.incubator.foreign.MemorySegment szOID_CERTIFICATE_REVOCATION_LIST() { return szOID_CERTIFICATE_REVOCATION_LIST$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CROSS_CERTIFICATE_PAIR$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.40");
    static final jdk.incubator.foreign.MemorySegment szOID_CROSS_CERTIFICATE_PAIR() { return szOID_CROSS_CERTIFICATE_PAIR$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_GIVEN_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.42");
    static final jdk.incubator.foreign.MemorySegment szOID_GIVEN_NAME() { return szOID_GIVEN_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_INITIALS$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.43");
    static final jdk.incubator.foreign.MemorySegment szOID_INITIALS() { return szOID_INITIALS$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DN_QUALIFIER$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.4.46");
    static final jdk.incubator.foreign.MemorySegment szOID_DN_QUALIFIER() { return szOID_DN_QUALIFIER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_DOMAIN_COMPONENT$SEGMENT_CONSTANT_ = CLinker.toCString("0.9.2342.19200300.100.1.25");
    static final jdk.incubator.foreign.MemorySegment szOID_DOMAIN_COMPONENT() { return szOID_DOMAIN_COMPONENT$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_12_FRIENDLY_NAME_ATTR$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.20");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_12_FRIENDLY_NAME_ATTR() { return szOID_PKCS_12_FRIENDLY_NAME_ATTR$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_12_LOCAL_KEY_ID$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.9.21");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_12_LOCAL_KEY_ID() { return szOID_PKCS_12_LOCAL_KEY_ID$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_12_KEY_PROVIDER_NAME_ATTR$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.17.1");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_12_KEY_PROVIDER_NAME_ATTR() { return szOID_PKCS_12_KEY_PROVIDER_NAME_ATTR$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_LOCAL_MACHINE_KEYSET$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.17.2");
    static final jdk.incubator.foreign.MemorySegment szOID_LOCAL_MACHINE_KEYSET() { return szOID_LOCAL_MACHINE_KEYSET$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_12_EXTENDED_ATTRIBUTES$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.17.3");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_12_EXTENDED_ATTRIBUTES() { return szOID_PKCS_12_EXTENDED_ATTRIBUTES$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_PKCS_12_PROTECTED_PASSWORD_SECRET_BAG_TYPE_ID$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.17.4");
    static final jdk.incubator.foreign.MemorySegment szOID_PKCS_12_PROTECTED_PASSWORD_SECRET_BAG_TYPE_ID() { return szOID_PKCS_12_PROTECTED_PASSWORD_SECRET_BAG_TYPE_ID$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KEYID_RDN$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.10.7.1");
    static final jdk.incubator.foreign.MemorySegment szOID_KEYID_RDN() { return szOID_KEYID_RDN$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_EV_RDN_LOCALE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.60.2.1.1");
    static final jdk.incubator.foreign.MemorySegment szOID_EV_RDN_LOCALE() { return szOID_EV_RDN_LOCALE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_EV_RDN_STATE_OR_PROVINCE$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.60.2.1.2");
    static final jdk.incubator.foreign.MemorySegment szOID_EV_RDN_STATE_OR_PROVINCE() { return szOID_EV_RDN_STATE_OR_PROVINCE$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_EV_RDN_COUNTRY$SEGMENT_CONSTANT_ = CLinker.toCString("1.3.6.1.4.1.311.60.2.1.3");
    static final jdk.incubator.foreign.MemorySegment szOID_EV_RDN_COUNTRY() { return szOID_EV_RDN_COUNTRY$SEGMENT_CONSTANT_; }

    static final int CERT_RDN_FLAGS_MASK() { return (int)4278190080L; }

    static final int CERT_RDN_ENABLE_T61_UNICODE_FLAG() { return (int)2147483648L; }

    static final MemorySegment CERT_RSA_PUBLIC_KEY_OBJID$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.1.1");
    static final jdk.incubator.foreign.MemorySegment CERT_RSA_PUBLIC_KEY_OBJID() { return CERT_RSA_PUBLIC_KEY_OBJID$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_DEFAULT_OID_PUBLIC_KEY_SIGN$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.1.1");
    static final jdk.incubator.foreign.MemorySegment CERT_DEFAULT_OID_PUBLIC_KEY_SIGN() { return CERT_DEFAULT_OID_PUBLIC_KEY_SIGN$SEGMENT_CONSTANT_; }

    static final MemorySegment CERT_DEFAULT_OID_PUBLIC_KEY_XCHG$SEGMENT_CONSTANT_ = CLinker.toCString("1.2.840.113549.1.1.1");
    static final jdk.incubator.foreign.MemorySegment CERT_DEFAULT_OID_PUBLIC_KEY_XCHG() { return CERT_DEFAULT_OID_PUBLIC_KEY_XCHG$SEGMENT_CONSTANT_; }

    static final int CMSG_ENCODING_TYPE_MASK() { return (int)4294901760L; }

    static final int CRYPT_FORMAT_SEMICOLON() { return (int)256L; }

    static final int CRYPT_FORMAT_CRLF() { return (int)512L; }

    static final int CRYPT_UNICODE_NAME_ENCODE_ENABLE_T61_UNICODE_FLAG() { return (int)2147483648L; }

    static final int CRYPT_UNICODE_NAME_ENCODE_ENABLE_UTF8_UNICODE_FLAG() { return (int)536870912L; }

    static final int CRYPT_UNICODE_NAME_ENCODE_FORCE_UTF8_UNICODE_FLAG() { return (int)268435456L; }

    static final int CRYPT_UNICODE_NAME_ENCODE_DISABLE_CHECK_TYPE_FLAG() { return (int)1073741824L; }

    static final int CRYPT_ENCODE_ENABLE_IA5CONVERSION_FLAG() { return (int)393216L; }

    static final int CRYPT_UNICODE_NAME_DECODE_DISABLE_IE4_UTF8_FLAG() { return (int)16777216L; }

    static final int CRYPT_DECODE_ENABLE_IA5CONVERSION_FLAG() { return (int)100663296L; }

    static final MemoryAddress X509_CERT$ADDR_CONSTANT_ = MemoryAddress.ofLong(1L);
    static final jdk.incubator.foreign.MemoryAddress X509_CERT() { return X509_CERT$ADDR_CONSTANT_; }

    static final MemoryAddress X509_CERT_TO_BE_SIGNED$ADDR_CONSTANT_ = MemoryAddress.ofLong(2L);
    static final jdk.incubator.foreign.MemoryAddress X509_CERT_TO_BE_SIGNED() { return X509_CERT_TO_BE_SIGNED$ADDR_CONSTANT_; }

    static final MemoryAddress X509_CERT_CRL_TO_BE_SIGNED$ADDR_CONSTANT_ = MemoryAddress.ofLong(3L);
    static final jdk.incubator.foreign.MemoryAddress X509_CERT_CRL_TO_BE_SIGNED() { return X509_CERT_CRL_TO_BE_SIGNED$ADDR_CONSTANT_; }

    static final MemoryAddress X509_CERT_REQUEST_TO_BE_SIGNED$ADDR_CONSTANT_ = MemoryAddress.ofLong(4L);
    static final jdk.incubator.foreign.MemoryAddress X509_CERT_REQUEST_TO_BE_SIGNED() { return X509_CERT_REQUEST_TO_BE_SIGNED$ADDR_CONSTANT_; }

    static final MemoryAddress X509_EXTENSIONS$ADDR_CONSTANT_ = MemoryAddress.ofLong(5L);
    static final jdk.incubator.foreign.MemoryAddress X509_EXTENSIONS() { return X509_EXTENSIONS$ADDR_CONSTANT_; }

    static final MemoryAddress X509_NAME_VALUE$ADDR_CONSTANT_ = MemoryAddress.ofLong(6L);
    static final jdk.incubator.foreign.MemoryAddress X509_NAME_VALUE() { return X509_NAME_VALUE$ADDR_CONSTANT_; }

    static final MemoryAddress X509_NAME$ADDR_CONSTANT_ = MemoryAddress.ofLong(7L);
    static final jdk.incubator.foreign.MemoryAddress X509_NAME() { return X509_NAME$ADDR_CONSTANT_; }

    static final MemoryAddress X509_PUBLIC_KEY_INFO$ADDR_CONSTANT_ = MemoryAddress.ofLong(8L);
    static final jdk.incubator.foreign.MemoryAddress X509_PUBLIC_KEY_INFO() { return X509_PUBLIC_KEY_INFO$ADDR_CONSTANT_; }

    static final MemoryAddress X509_AUTHORITY_KEY_ID$ADDR_CONSTANT_ = MemoryAddress.ofLong(9L);
    static final jdk.incubator.foreign.MemoryAddress X509_AUTHORITY_KEY_ID() { return X509_AUTHORITY_KEY_ID$ADDR_CONSTANT_; }

    static final MemoryAddress X509_KEY_ATTRIBUTES$ADDR_CONSTANT_ = MemoryAddress.ofLong(10L);
    static final jdk.incubator.foreign.MemoryAddress X509_KEY_ATTRIBUTES() { return X509_KEY_ATTRIBUTES$ADDR_CONSTANT_; }

    static final MemoryAddress X509_KEY_USAGE_RESTRICTION$ADDR_CONSTANT_ = MemoryAddress.ofLong(11L);
    static final jdk.incubator.foreign.MemoryAddress X509_KEY_USAGE_RESTRICTION() { return X509_KEY_USAGE_RESTRICTION$ADDR_CONSTANT_; }

    static final MemoryAddress X509_ALTERNATE_NAME$ADDR_CONSTANT_ = MemoryAddress.ofLong(12L);
    static final jdk.incubator.foreign.MemoryAddress X509_ALTERNATE_NAME() { return X509_ALTERNATE_NAME$ADDR_CONSTANT_; }

    static final MemoryAddress X509_BASIC_CONSTRAINTS$ADDR_CONSTANT_ = MemoryAddress.ofLong(13L);
    static final jdk.incubator.foreign.MemoryAddress X509_BASIC_CONSTRAINTS() { return X509_BASIC_CONSTRAINTS$ADDR_CONSTANT_; }

    static final MemoryAddress X509_KEY_USAGE$ADDR_CONSTANT_ = MemoryAddress.ofLong(14L);
    static final jdk.incubator.foreign.MemoryAddress X509_KEY_USAGE() { return X509_KEY_USAGE$ADDR_CONSTANT_; }

    static final MemoryAddress X509_BASIC_CONSTRAINTS2$ADDR_CONSTANT_ = MemoryAddress.ofLong(15L);
    static final jdk.incubator.foreign.MemoryAddress X509_BASIC_CONSTRAINTS2() { return X509_BASIC_CONSTRAINTS2$ADDR_CONSTANT_; }

    static final MemoryAddress X509_CERT_POLICIES$ADDR_CONSTANT_ = MemoryAddress.ofLong(16L);
    static final jdk.incubator.foreign.MemoryAddress X509_CERT_POLICIES() { return X509_CERT_POLICIES$ADDR_CONSTANT_; }

    static final MemoryAddress PKCS_UTC_TIME$ADDR_CONSTANT_ = MemoryAddress.ofLong(17L);
    static final jdk.incubator.foreign.MemoryAddress PKCS_UTC_TIME() { return PKCS_UTC_TIME$ADDR_CONSTANT_; }

    static final MemoryAddress PKCS_TIME_REQUEST$ADDR_CONSTANT_ = MemoryAddress.ofLong(18L);
    static final jdk.incubator.foreign.MemoryAddress PKCS_TIME_REQUEST() { return PKCS_TIME_REQUEST$ADDR_CONSTANT_; }

    static final MemoryAddress RSA_CSP_PUBLICKEYBLOB$ADDR_CONSTANT_ = MemoryAddress.ofLong(19L);
    static final jdk.incubator.foreign.MemoryAddress RSA_CSP_PUBLICKEYBLOB() { return RSA_CSP_PUBLICKEYBLOB$ADDR_CONSTANT_; }

    static final MemoryAddress X509_UNICODE_NAME$ADDR_CONSTANT_ = MemoryAddress.ofLong(20L);
    static final jdk.incubator.foreign.MemoryAddress X509_UNICODE_NAME() { return X509_UNICODE_NAME$ADDR_CONSTANT_; }

    static final MemoryAddress X509_KEYGEN_REQUEST_TO_BE_SIGNED$ADDR_CONSTANT_ = MemoryAddress.ofLong(21L);
    static final jdk.incubator.foreign.MemoryAddress X509_KEYGEN_REQUEST_TO_BE_SIGNED() { return X509_KEYGEN_REQUEST_TO_BE_SIGNED$ADDR_CONSTANT_; }

    static final MemoryAddress PKCS_ATTRIBUTE$ADDR_CONSTANT_ = MemoryAddress.ofLong(22L);
    static final jdk.incubator.foreign.MemoryAddress PKCS_ATTRIBUTE() { return PKCS_ATTRIBUTE$ADDR_CONSTANT_; }

    static final MemoryAddress PKCS_CONTENT_INFO_SEQUENCE_OF_ANY$ADDR_CONSTANT_ = MemoryAddress.ofLong(23L);
    static final jdk.incubator.foreign.MemoryAddress PKCS_CONTENT_INFO_SEQUENCE_OF_ANY() { return PKCS_CONTENT_INFO_SEQUENCE_OF_ANY$ADDR_CONSTANT_; }

    static final MemoryAddress X509_UNICODE_NAME_VALUE$ADDR_CONSTANT_ = MemoryAddress.ofLong(24L);
    static final jdk.incubator.foreign.MemoryAddress X509_UNICODE_NAME_VALUE() { return X509_UNICODE_NAME_VALUE$ADDR_CONSTANT_; }

    static final MemoryAddress X509_ANY_STRING$ADDR_CONSTANT_ = MemoryAddress.ofLong(6L);
    static final jdk.incubator.foreign.MemoryAddress X509_ANY_STRING() { return X509_ANY_STRING$ADDR_CONSTANT_; }

    static final MemoryAddress X509_UNICODE_ANY_STRING$ADDR_CONSTANT_ = MemoryAddress.ofLong(24L);
    static final jdk.incubator.foreign.MemoryAddress X509_UNICODE_ANY_STRING() { return X509_UNICODE_ANY_STRING$ADDR_CONSTANT_; }

    static final MemoryAddress X509_OCTET_STRING$ADDR_CONSTANT_ = MemoryAddress.ofLong(25L);
    static final jdk.incubator.foreign.MemoryAddress X509_OCTET_STRING() { return X509_OCTET_STRING$ADDR_CONSTANT_; }

    static final MemoryAddress X509_BITS$ADDR_CONSTANT_ = MemoryAddress.ofLong(26L);
    static final jdk.incubator.foreign.MemoryAddress X509_BITS() { return X509_BITS$ADDR_CONSTANT_; }

    static final MemoryAddress X509_INTEGER$ADDR_CONSTANT_ = MemoryAddress.ofLong(27L);
    static final jdk.incubator.foreign.MemoryAddress X509_INTEGER() { return X509_INTEGER$ADDR_CONSTANT_; }

    static final MemoryAddress X509_MULTI_BYTE_INTEGER$ADDR_CONSTANT_ = MemoryAddress.ofLong(28L);
    static final jdk.incubator.foreign.MemoryAddress X509_MULTI_BYTE_INTEGER() { return X509_MULTI_BYTE_INTEGER$ADDR_CONSTANT_; }

    static final MemoryAddress X509_ENUMERATED$ADDR_CONSTANT_ = MemoryAddress.ofLong(29L);
    static final jdk.incubator.foreign.MemoryAddress X509_ENUMERATED() { return X509_ENUMERATED$ADDR_CONSTANT_; }

    static final MemoryAddress X509_CHOICE_OF_TIME$ADDR_CONSTANT_ = MemoryAddress.ofLong(30L);
    static final jdk.incubator.foreign.MemoryAddress X509_CHOICE_OF_TIME() { return X509_CHOICE_OF_TIME$ADDR_CONSTANT_; }

    static final MemoryAddress X509_AUTHORITY_KEY_ID2$ADDR_CONSTANT_ = MemoryAddress.ofLong(31L);
    static final jdk.incubator.foreign.MemoryAddress X509_AUTHORITY_KEY_ID2() { return X509_AUTHORITY_KEY_ID2$ADDR_CONSTANT_; }

    static final MemoryAddress X509_AUTHORITY_INFO_ACCESS$ADDR_CONSTANT_ = MemoryAddress.ofLong(32L);
    static final jdk.incubator.foreign.MemoryAddress X509_AUTHORITY_INFO_ACCESS() { return X509_AUTHORITY_INFO_ACCESS$ADDR_CONSTANT_; }

    static final MemoryAddress X509_SUBJECT_INFO_ACCESS$ADDR_CONSTANT_ = MemoryAddress.ofLong(32L);
    static final jdk.incubator.foreign.MemoryAddress X509_SUBJECT_INFO_ACCESS() { return X509_SUBJECT_INFO_ACCESS$ADDR_CONSTANT_; }

    static final MemoryAddress X509_CRL_REASON_CODE$ADDR_CONSTANT_ = MemoryAddress.ofLong(29L);
    static final jdk.incubator.foreign.MemoryAddress X509_CRL_REASON_CODE() { return X509_CRL_REASON_CODE$ADDR_CONSTANT_; }

    static final MemoryAddress PKCS_CONTENT_INFO$ADDR_CONSTANT_ = MemoryAddress.ofLong(33L);
    static final jdk.incubator.foreign.MemoryAddress PKCS_CONTENT_INFO() { return PKCS_CONTENT_INFO$ADDR_CONSTANT_; }

    static final MemoryAddress X509_SEQUENCE_OF_ANY$ADDR_CONSTANT_ = MemoryAddress.ofLong(34L);
    static final jdk.incubator.foreign.MemoryAddress X509_SEQUENCE_OF_ANY() { return X509_SEQUENCE_OF_ANY$ADDR_CONSTANT_; }

    static final MemoryAddress X509_CRL_DIST_POINTS$ADDR_CONSTANT_ = MemoryAddress.ofLong(35L);
    static final jdk.incubator.foreign.MemoryAddress X509_CRL_DIST_POINTS() { return X509_CRL_DIST_POINTS$ADDR_CONSTANT_; }

    static final MemoryAddress X509_ENHANCED_KEY_USAGE$ADDR_CONSTANT_ = MemoryAddress.ofLong(36L);
    static final jdk.incubator.foreign.MemoryAddress X509_ENHANCED_KEY_USAGE() { return X509_ENHANCED_KEY_USAGE$ADDR_CONSTANT_; }

    static final MemoryAddress PKCS_CTL$ADDR_CONSTANT_ = MemoryAddress.ofLong(37L);
    static final jdk.incubator.foreign.MemoryAddress PKCS_CTL() { return PKCS_CTL$ADDR_CONSTANT_; }

    static final MemoryAddress X509_MULTI_BYTE_UINT$ADDR_CONSTANT_ = MemoryAddress.ofLong(38L);
    static final jdk.incubator.foreign.MemoryAddress X509_MULTI_BYTE_UINT() { return X509_MULTI_BYTE_UINT$ADDR_CONSTANT_; }

    static final MemoryAddress X509_DSS_PUBLICKEY$ADDR_CONSTANT_ = MemoryAddress.ofLong(38L);
    static final jdk.incubator.foreign.MemoryAddress X509_DSS_PUBLICKEY() { return X509_DSS_PUBLICKEY$ADDR_CONSTANT_; }

    static final MemoryAddress X509_DSS_PARAMETERS$ADDR_CONSTANT_ = MemoryAddress.ofLong(39L);
    static final jdk.incubator.foreign.MemoryAddress X509_DSS_PARAMETERS() { return X509_DSS_PARAMETERS$ADDR_CONSTANT_; }

    static final MemoryAddress X509_DSS_SIGNATURE$ADDR_CONSTANT_ = MemoryAddress.ofLong(40L);
    static final jdk.incubator.foreign.MemoryAddress X509_DSS_SIGNATURE() { return X509_DSS_SIGNATURE$ADDR_CONSTANT_; }

    static final MemoryAddress PKCS_RC2_CBC_PARAMETERS$ADDR_CONSTANT_ = MemoryAddress.ofLong(41L);
    static final jdk.incubator.foreign.MemoryAddress PKCS_RC2_CBC_PARAMETERS() { return PKCS_RC2_CBC_PARAMETERS$ADDR_CONSTANT_; }

    static final MemoryAddress PKCS_SMIME_CAPABILITIES$ADDR_CONSTANT_ = MemoryAddress.ofLong(42L);
    static final jdk.incubator.foreign.MemoryAddress PKCS_SMIME_CAPABILITIES() { return PKCS_SMIME_CAPABILITIES$ADDR_CONSTANT_; }

    static final MemoryAddress X509_QC_STATEMENTS_EXT$ADDR_CONSTANT_ = MemoryAddress.ofLong(42L);
    static final jdk.incubator.foreign.MemoryAddress X509_QC_STATEMENTS_EXT() { return X509_QC_STATEMENTS_EXT$ADDR_CONSTANT_; }

    static final MemoryAddress PKCS_RSA_PRIVATE_KEY$ADDR_CONSTANT_ = MemoryAddress.ofLong(43L);
    static final jdk.incubator.foreign.MemoryAddress PKCS_RSA_PRIVATE_KEY() { return PKCS_RSA_PRIVATE_KEY$ADDR_CONSTANT_; }

    static final MemoryAddress PKCS_PRIVATE_KEY_INFO$ADDR_CONSTANT_ = MemoryAddress.ofLong(44L);
    static final jdk.incubator.foreign.MemoryAddress PKCS_PRIVATE_KEY_INFO() { return PKCS_PRIVATE_KEY_INFO$ADDR_CONSTANT_; }

    static final MemoryAddress PKCS_ENCRYPTED_PRIVATE_KEY_INFO$ADDR_CONSTANT_ = MemoryAddress.ofLong(45L);
    static final jdk.incubator.foreign.MemoryAddress PKCS_ENCRYPTED_PRIVATE_KEY_INFO() { return PKCS_ENCRYPTED_PRIVATE_KEY_INFO$ADDR_CONSTANT_; }

    static final MemoryAddress X509_PKIX_POLICY_QUALIFIER_USERNOTICE$ADDR_CONSTANT_ = MemoryAddress.ofLong(46L);
    static final jdk.incubator.foreign.MemoryAddress X509_PKIX_POLICY_QUALIFIER_USERNOTICE() { return X509_PKIX_POLICY_QUALIFIER_USERNOTICE$ADDR_CONSTANT_; }

    static final MemoryAddress X509_DH_PUBLICKEY$ADDR_CONSTANT_ = MemoryAddress.ofLong(38L);
    static final jdk.incubator.foreign.MemoryAddress X509_DH_PUBLICKEY() { return X509_DH_PUBLICKEY$ADDR_CONSTANT_; }

    static final MemoryAddress X509_DH_PARAMETERS$ADDR_CONSTANT_ = MemoryAddress.ofLong(47L);
    static final jdk.incubator.foreign.MemoryAddress X509_DH_PARAMETERS() { return X509_DH_PARAMETERS$ADDR_CONSTANT_; }

    static final MemoryAddress PKCS_ATTRIBUTES$ADDR_CONSTANT_ = MemoryAddress.ofLong(48L);
    static final jdk.incubator.foreign.MemoryAddress PKCS_ATTRIBUTES() { return PKCS_ATTRIBUTES$ADDR_CONSTANT_; }

    static final MemoryAddress PKCS_SORTED_CTL$ADDR_CONSTANT_ = MemoryAddress.ofLong(49L);
    static final jdk.incubator.foreign.MemoryAddress PKCS_SORTED_CTL() { return PKCS_SORTED_CTL$ADDR_CONSTANT_; }

    static final MemoryAddress X509_ECC_SIGNATURE$ADDR_CONSTANT_ = MemoryAddress.ofLong(47L);
    static final jdk.incubator.foreign.MemoryAddress X509_ECC_SIGNATURE() { return X509_ECC_SIGNATURE$ADDR_CONSTANT_; }

    static final MemoryAddress X942_DH_PARAMETERS$ADDR_CONSTANT_ = MemoryAddress.ofLong(50L);
    static final jdk.incubator.foreign.MemoryAddress X942_DH_PARAMETERS() { return X942_DH_PARAMETERS$ADDR_CONSTANT_; }

    static final MemoryAddress X509_BITS_WITHOUT_TRAILING_ZEROES$ADDR_CONSTANT_ = MemoryAddress.ofLong(51L);
    static final jdk.incubator.foreign.MemoryAddress X509_BITS_WITHOUT_TRAILING_ZEROES() { return X509_BITS_WITHOUT_TRAILING_ZEROES$ADDR_CONSTANT_; }

    static final MemoryAddress X942_OTHER_INFO$ADDR_CONSTANT_ = MemoryAddress.ofLong(52L);
    static final jdk.incubator.foreign.MemoryAddress X942_OTHER_INFO() { return X942_OTHER_INFO$ADDR_CONSTANT_; }

    static final MemoryAddress X509_CERT_PAIR$ADDR_CONSTANT_ = MemoryAddress.ofLong(53L);
    static final jdk.incubator.foreign.MemoryAddress X509_CERT_PAIR() { return X509_CERT_PAIR$ADDR_CONSTANT_; }

    static final MemoryAddress X509_ISSUING_DIST_POINT$ADDR_CONSTANT_ = MemoryAddress.ofLong(54L);
    static final jdk.incubator.foreign.MemoryAddress X509_ISSUING_DIST_POINT() { return X509_ISSUING_DIST_POINT$ADDR_CONSTANT_; }

    static final MemoryAddress X509_NAME_CONSTRAINTS$ADDR_CONSTANT_ = MemoryAddress.ofLong(55L);
    static final jdk.incubator.foreign.MemoryAddress X509_NAME_CONSTRAINTS() { return X509_NAME_CONSTRAINTS$ADDR_CONSTANT_; }

    static final MemoryAddress X509_POLICY_MAPPINGS$ADDR_CONSTANT_ = MemoryAddress.ofLong(56L);
    static final jdk.incubator.foreign.MemoryAddress X509_POLICY_MAPPINGS() { return X509_POLICY_MAPPINGS$ADDR_CONSTANT_; }

    static final MemoryAddress X509_POLICY_CONSTRAINTS$ADDR_CONSTANT_ = MemoryAddress.ofLong(57L);
    static final jdk.incubator.foreign.MemoryAddress X509_POLICY_CONSTRAINTS() { return X509_POLICY_CONSTRAINTS$ADDR_CONSTANT_; }

    static final MemoryAddress X509_CROSS_CERT_DIST_POINTS$ADDR_CONSTANT_ = MemoryAddress.ofLong(58L);
    static final jdk.incubator.foreign.MemoryAddress X509_CROSS_CERT_DIST_POINTS() { return X509_CROSS_CERT_DIST_POINTS$ADDR_CONSTANT_; }

    static final MemoryAddress CMC_DATA$ADDR_CONSTANT_ = MemoryAddress.ofLong(59L);
    static final jdk.incubator.foreign.MemoryAddress CMC_DATA() { return CMC_DATA$ADDR_CONSTANT_; }

    static final MemoryAddress CMC_RESPONSE$ADDR_CONSTANT_ = MemoryAddress.ofLong(60L);
    static final jdk.incubator.foreign.MemoryAddress CMC_RESPONSE() { return CMC_RESPONSE$ADDR_CONSTANT_; }

    static final MemoryAddress CMC_STATUS$ADDR_CONSTANT_ = MemoryAddress.ofLong(61L);
    static final jdk.incubator.foreign.MemoryAddress CMC_STATUS() { return CMC_STATUS$ADDR_CONSTANT_; }

    static final MemoryAddress CMC_ADD_EXTENSIONS$ADDR_CONSTANT_ = MemoryAddress.ofLong(62L);
    static final jdk.incubator.foreign.MemoryAddress CMC_ADD_EXTENSIONS() { return CMC_ADD_EXTENSIONS$ADDR_CONSTANT_; }

    static final MemoryAddress CMC_ADD_ATTRIBUTES$ADDR_CONSTANT_ = MemoryAddress.ofLong(63L);
    static final jdk.incubator.foreign.MemoryAddress CMC_ADD_ATTRIBUTES() { return CMC_ADD_ATTRIBUTES$ADDR_CONSTANT_; }

    static final MemoryAddress X509_CERTIFICATE_TEMPLATE$ADDR_CONSTANT_ = MemoryAddress.ofLong(64L);
    static final jdk.incubator.foreign.MemoryAddress X509_CERTIFICATE_TEMPLATE() { return X509_CERTIFICATE_TEMPLATE$ADDR_CONSTANT_; }

    static final MemoryAddress OCSP_SIGNED_REQUEST$ADDR_CONSTANT_ = MemoryAddress.ofLong(65L);
    static final jdk.incubator.foreign.MemoryAddress OCSP_SIGNED_REQUEST() { return OCSP_SIGNED_REQUEST$ADDR_CONSTANT_; }

    static final MemoryAddress OCSP_REQUEST$ADDR_CONSTANT_ = MemoryAddress.ofLong(66L);
    static final jdk.incubator.foreign.MemoryAddress OCSP_REQUEST() { return OCSP_REQUEST$ADDR_CONSTANT_; }

    static final MemoryAddress OCSP_RESPONSE$ADDR_CONSTANT_ = MemoryAddress.ofLong(67L);
    static final jdk.incubator.foreign.MemoryAddress OCSP_RESPONSE() { return OCSP_RESPONSE$ADDR_CONSTANT_; }

    static final MemoryAddress OCSP_BASIC_SIGNED_RESPONSE$ADDR_CONSTANT_ = MemoryAddress.ofLong(68L);
    static final jdk.incubator.foreign.MemoryAddress OCSP_BASIC_SIGNED_RESPONSE() { return OCSP_BASIC_SIGNED_RESPONSE$ADDR_CONSTANT_; }

    static final MemoryAddress OCSP_BASIC_RESPONSE$ADDR_CONSTANT_ = MemoryAddress.ofLong(69L);
    static final jdk.incubator.foreign.MemoryAddress OCSP_BASIC_RESPONSE() { return OCSP_BASIC_RESPONSE$ADDR_CONSTANT_; }

    static final MemoryAddress X509_LOGOTYPE_EXT$ADDR_CONSTANT_ = MemoryAddress.ofLong(70L);
    static final jdk.incubator.foreign.MemoryAddress X509_LOGOTYPE_EXT() { return X509_LOGOTYPE_EXT$ADDR_CONSTANT_; }

    static final MemoryAddress X509_BIOMETRIC_EXT$ADDR_CONSTANT_ = MemoryAddress.ofLong(71L);
    static final jdk.incubator.foreign.MemoryAddress X509_BIOMETRIC_EXT() { return X509_BIOMETRIC_EXT$ADDR_CONSTANT_; }

    static final MemoryAddress CNG_RSA_PUBLIC_KEY_BLOB$ADDR_CONSTANT_ = MemoryAddress.ofLong(72L);
    static final jdk.incubator.foreign.MemoryAddress CNG_RSA_PUBLIC_KEY_BLOB() { return CNG_RSA_PUBLIC_KEY_BLOB$ADDR_CONSTANT_; }

    static final MemoryAddress X509_OBJECT_IDENTIFIER$ADDR_CONSTANT_ = MemoryAddress.ofLong(73L);
    static final jdk.incubator.foreign.MemoryAddress X509_OBJECT_IDENTIFIER() { return X509_OBJECT_IDENTIFIER$ADDR_CONSTANT_; }

    static final MemoryAddress X509_ALGORITHM_IDENTIFIER$ADDR_CONSTANT_ = MemoryAddress.ofLong(74L);
    static final jdk.incubator.foreign.MemoryAddress X509_ALGORITHM_IDENTIFIER() { return X509_ALGORITHM_IDENTIFIER$ADDR_CONSTANT_; }

    static final MemoryAddress PKCS_RSA_SSA_PSS_PARAMETERS$ADDR_CONSTANT_ = MemoryAddress.ofLong(75L);
    static final jdk.incubator.foreign.MemoryAddress PKCS_RSA_SSA_PSS_PARAMETERS() { return PKCS_RSA_SSA_PSS_PARAMETERS$ADDR_CONSTANT_; }

    static final MemoryAddress PKCS_RSAES_OAEP_PARAMETERS$ADDR_CONSTANT_ = MemoryAddress.ofLong(76L);
    static final jdk.incubator.foreign.MemoryAddress PKCS_RSAES_OAEP_PARAMETERS() { return PKCS_RSAES_OAEP_PARAMETERS$ADDR_CONSTANT_; }

    static final MemoryAddress ECC_CMS_SHARED_INFO$ADDR_CONSTANT_ = MemoryAddress.ofLong(77L);
    static final jdk.incubator.foreign.MemoryAddress ECC_CMS_SHARED_INFO() { return ECC_CMS_SHARED_INFO$ADDR_CONSTANT_; }

    static final MemoryAddress TIMESTAMP_REQUEST$ADDR_CONSTANT_ = MemoryAddress.ofLong(78L);
    static final jdk.incubator.foreign.MemoryAddress TIMESTAMP_REQUEST() { return TIMESTAMP_REQUEST$ADDR_CONSTANT_; }

    static final MemoryAddress TIMESTAMP_RESPONSE$ADDR_CONSTANT_ = MemoryAddress.ofLong(79L);
    static final jdk.incubator.foreign.MemoryAddress TIMESTAMP_RESPONSE() { return TIMESTAMP_RESPONSE$ADDR_CONSTANT_; }

    static final MemoryAddress TIMESTAMP_INFO$ADDR_CONSTANT_ = MemoryAddress.ofLong(80L);
    static final jdk.incubator.foreign.MemoryAddress TIMESTAMP_INFO() { return TIMESTAMP_INFO$ADDR_CONSTANT_; }

    static final MemoryAddress X509_CERT_BUNDLE$ADDR_CONSTANT_ = MemoryAddress.ofLong(81L);
    static final jdk.incubator.foreign.MemoryAddress X509_CERT_BUNDLE() { return X509_CERT_BUNDLE$ADDR_CONSTANT_; }

    static final MemoryAddress X509_ECC_PRIVATE_KEY$ADDR_CONSTANT_ = MemoryAddress.ofLong(82L);
    static final jdk.incubator.foreign.MemoryAddress X509_ECC_PRIVATE_KEY() { return X509_ECC_PRIVATE_KEY$ADDR_CONSTANT_; }

    static final MemoryAddress CNG_RSA_PRIVATE_KEY_BLOB$ADDR_CONSTANT_ = MemoryAddress.ofLong(83L);
    static final jdk.incubator.foreign.MemoryAddress CNG_RSA_PRIVATE_KEY_BLOB() { return CNG_RSA_PRIVATE_KEY_BLOB$ADDR_CONSTANT_; }

    static final MemoryAddress X509_SUBJECT_DIR_ATTRS$ADDR_CONSTANT_ = MemoryAddress.ofLong(84L);
    static final jdk.incubator.foreign.MemoryAddress X509_SUBJECT_DIR_ATTRS() { return X509_SUBJECT_DIR_ATTRS$ADDR_CONSTANT_; }

    static final MemoryAddress X509_ECC_PARAMETERS$ADDR_CONSTANT_ = MemoryAddress.ofLong(85L);
    static final jdk.incubator.foreign.MemoryAddress X509_ECC_PARAMETERS() { return X509_ECC_PARAMETERS$ADDR_CONSTANT_; }

    static final MemoryAddress PKCS7_SIGNER_INFO$ADDR_CONSTANT_ = MemoryAddress.ofLong(500L);
    static final jdk.incubator.foreign.MemoryAddress PKCS7_SIGNER_INFO() { return PKCS7_SIGNER_INFO$ADDR_CONSTANT_; }

    static final MemoryAddress CMS_SIGNER_INFO$ADDR_CONSTANT_ = MemoryAddress.ofLong(501L);
    static final jdk.incubator.foreign.MemoryAddress CMS_SIGNER_INFO() { return CMS_SIGNER_INFO$ADDR_CONSTANT_; }

    static final MemorySegment szOID_AUTHORITY_KEY_IDENTIFIER$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.1");
    static final jdk.incubator.foreign.MemorySegment szOID_AUTHORITY_KEY_IDENTIFIER() { return szOID_AUTHORITY_KEY_IDENTIFIER$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_KEY_ATTRIBUTES$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.2");
    static final jdk.incubator.foreign.MemorySegment szOID_KEY_ATTRIBUTES() { return szOID_KEY_ATTRIBUTES$SEGMENT_CONSTANT_; }

    static final MemorySegment szOID_CERT_POLICIES_95$SEGMENT_CONSTANT_ = CLinker.toCString("2.5.29.3");
    static final jdk.incubator.foreign.MemorySegment szOID_CERT_POLICIES_95() { return szOID_CERT_POLICIES_95$SEGMENT_CONSTANT_; }

}

