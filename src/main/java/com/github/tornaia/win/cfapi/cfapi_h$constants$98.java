// Generated by jextract

package com.github.tornaia.win.cfapi;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class cfapi_h$constants$98 extends cfapi_h$constants$97 {

    /* package-private */ cfapi_h$constants$98() {}
    static final MemoryLayout _SERVICE_FAILURE_ACTIONSA$lpRebootMsg$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_FAILURE_ACTIONSA$lpRebootMsg$LAYOUT() { return _SERVICE_FAILURE_ACTIONSA$lpRebootMsg$LAYOUT_; }

    static final VarHandle _SERVICE_FAILURE_ACTIONSA$lpRebootMsg$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_FAILURE_ACTIONSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpRebootMsg")));
    static final java.lang.invoke.VarHandle _SERVICE_FAILURE_ACTIONSA$lpRebootMsg$VH() { return _SERVICE_FAILURE_ACTIONSA$lpRebootMsg$VH_; }

    static final MemoryLayout _SERVICE_FAILURE_ACTIONSA$lpCommand$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_FAILURE_ACTIONSA$lpCommand$LAYOUT() { return _SERVICE_FAILURE_ACTIONSA$lpCommand$LAYOUT_; }

    static final VarHandle _SERVICE_FAILURE_ACTIONSA$lpCommand$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_FAILURE_ACTIONSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpCommand")));
    static final java.lang.invoke.VarHandle _SERVICE_FAILURE_ACTIONSA$lpCommand$VH() { return _SERVICE_FAILURE_ACTIONSA$lpCommand$VH_; }

    static final MemoryLayout _SERVICE_FAILURE_ACTIONSA$cActions$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_FAILURE_ACTIONSA$cActions$LAYOUT() { return _SERVICE_FAILURE_ACTIONSA$cActions$LAYOUT_; }

    static final VarHandle _SERVICE_FAILURE_ACTIONSA$cActions$VH_ = _SERVICE_FAILURE_ACTIONSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cActions"));
    static final java.lang.invoke.VarHandle _SERVICE_FAILURE_ACTIONSA$cActions$VH() { return _SERVICE_FAILURE_ACTIONSA$cActions$VH_; }

    static final MemoryLayout _SERVICE_FAILURE_ACTIONSA$lpsaActions$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_FAILURE_ACTIONSA$lpsaActions$LAYOUT() { return _SERVICE_FAILURE_ACTIONSA$lpsaActions$LAYOUT_; }

    static final VarHandle _SERVICE_FAILURE_ACTIONSA$lpsaActions$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_FAILURE_ACTIONSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpsaActions")));
    static final java.lang.invoke.VarHandle _SERVICE_FAILURE_ACTIONSA$lpsaActions$VH() { return _SERVICE_FAILURE_ACTIONSA$lpsaActions$VH_; }

    static final MemoryLayout _SERVICE_FAILURE_ACTIONSW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwResetPeriod"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpRebootMsg"),
        C_POINTER.withName("lpCommand"),
        C_LONG.withName("cActions"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpsaActions")
    ).withName("_SERVICE_FAILURE_ACTIONSW");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_FAILURE_ACTIONSW$struct$LAYOUT() { return _SERVICE_FAILURE_ACTIONSW$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_FAILURE_ACTIONSW$dwResetPeriod$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_FAILURE_ACTIONSW$dwResetPeriod$LAYOUT() { return _SERVICE_FAILURE_ACTIONSW$dwResetPeriod$LAYOUT_; }

    static final VarHandle _SERVICE_FAILURE_ACTIONSW$dwResetPeriod$VH_ = _SERVICE_FAILURE_ACTIONSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwResetPeriod"));
    static final java.lang.invoke.VarHandle _SERVICE_FAILURE_ACTIONSW$dwResetPeriod$VH() { return _SERVICE_FAILURE_ACTIONSW$dwResetPeriod$VH_; }

    static final MemoryLayout _SERVICE_FAILURE_ACTIONSW$lpRebootMsg$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_FAILURE_ACTIONSW$lpRebootMsg$LAYOUT() { return _SERVICE_FAILURE_ACTIONSW$lpRebootMsg$LAYOUT_; }

    static final VarHandle _SERVICE_FAILURE_ACTIONSW$lpRebootMsg$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_FAILURE_ACTIONSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpRebootMsg")));
    static final java.lang.invoke.VarHandle _SERVICE_FAILURE_ACTIONSW$lpRebootMsg$VH() { return _SERVICE_FAILURE_ACTIONSW$lpRebootMsg$VH_; }

    static final MemoryLayout _SERVICE_FAILURE_ACTIONSW$lpCommand$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_FAILURE_ACTIONSW$lpCommand$LAYOUT() { return _SERVICE_FAILURE_ACTIONSW$lpCommand$LAYOUT_; }

    static final VarHandle _SERVICE_FAILURE_ACTIONSW$lpCommand$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_FAILURE_ACTIONSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpCommand")));
    static final java.lang.invoke.VarHandle _SERVICE_FAILURE_ACTIONSW$lpCommand$VH() { return _SERVICE_FAILURE_ACTIONSW$lpCommand$VH_; }

    static final MemoryLayout _SERVICE_FAILURE_ACTIONSW$cActions$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_FAILURE_ACTIONSW$cActions$LAYOUT() { return _SERVICE_FAILURE_ACTIONSW$cActions$LAYOUT_; }

    static final VarHandle _SERVICE_FAILURE_ACTIONSW$cActions$VH_ = _SERVICE_FAILURE_ACTIONSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cActions"));
    static final java.lang.invoke.VarHandle _SERVICE_FAILURE_ACTIONSW$cActions$VH() { return _SERVICE_FAILURE_ACTIONSW$cActions$VH_; }

    static final MemoryLayout _SERVICE_FAILURE_ACTIONSW$lpsaActions$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_FAILURE_ACTIONSW$lpsaActions$LAYOUT() { return _SERVICE_FAILURE_ACTIONSW$lpsaActions$LAYOUT_; }

    static final VarHandle _SERVICE_FAILURE_ACTIONSW$lpsaActions$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_FAILURE_ACTIONSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpsaActions")));
    static final java.lang.invoke.VarHandle _SERVICE_FAILURE_ACTIONSW$lpsaActions$VH() { return _SERVICE_FAILURE_ACTIONSW$lpsaActions$VH_; }

    static final MemoryLayout _SERVICE_DELAYED_AUTO_START_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("fDelayedAutostart")
    ).withName("_SERVICE_DELAYED_AUTO_START_INFO");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_DELAYED_AUTO_START_INFO$struct$LAYOUT() { return _SERVICE_DELAYED_AUTO_START_INFO$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_DELAYED_AUTO_START_INFO$fDelayedAutostart$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_DELAYED_AUTO_START_INFO$fDelayedAutostart$LAYOUT() { return _SERVICE_DELAYED_AUTO_START_INFO$fDelayedAutostart$LAYOUT_; }

    static final VarHandle _SERVICE_DELAYED_AUTO_START_INFO$fDelayedAutostart$VH_ = _SERVICE_DELAYED_AUTO_START_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fDelayedAutostart"));
    static final java.lang.invoke.VarHandle _SERVICE_DELAYED_AUTO_START_INFO$fDelayedAutostart$VH() { return _SERVICE_DELAYED_AUTO_START_INFO$fDelayedAutostart$VH_; }

    static final MemoryLayout _SERVICE_FAILURE_ACTIONS_FLAG$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("fFailureActionsOnNonCrashFailures")
    ).withName("_SERVICE_FAILURE_ACTIONS_FLAG");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_FAILURE_ACTIONS_FLAG$struct$LAYOUT() { return _SERVICE_FAILURE_ACTIONS_FLAG$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_FAILURE_ACTIONS_FLAG$fFailureActionsOnNonCrashFailures$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_FAILURE_ACTIONS_FLAG$fFailureActionsOnNonCrashFailures$LAYOUT() { return _SERVICE_FAILURE_ACTIONS_FLAG$fFailureActionsOnNonCrashFailures$LAYOUT_; }

    static final VarHandle _SERVICE_FAILURE_ACTIONS_FLAG$fFailureActionsOnNonCrashFailures$VH_ = _SERVICE_FAILURE_ACTIONS_FLAG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fFailureActionsOnNonCrashFailures"));
    static final java.lang.invoke.VarHandle _SERVICE_FAILURE_ACTIONS_FLAG$fFailureActionsOnNonCrashFailures$VH() { return _SERVICE_FAILURE_ACTIONS_FLAG$fFailureActionsOnNonCrashFailures$VH_; }

    static final MemoryLayout _SERVICE_SID_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwServiceSidType")
    ).withName("_SERVICE_SID_INFO");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_SID_INFO$struct$LAYOUT() { return _SERVICE_SID_INFO$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_SID_INFO$dwServiceSidType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_SID_INFO$dwServiceSidType$LAYOUT() { return _SERVICE_SID_INFO$dwServiceSidType$LAYOUT_; }

    static final VarHandle _SERVICE_SID_INFO$dwServiceSidType$VH_ = _SERVICE_SID_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwServiceSidType"));
    static final java.lang.invoke.VarHandle _SERVICE_SID_INFO$dwServiceSidType$VH() { return _SERVICE_SID_INFO$dwServiceSidType$VH_; }

    static final MemoryLayout _SERVICE_REQUIRED_PRIVILEGES_INFOA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pmszRequiredPrivileges")
    ).withName("_SERVICE_REQUIRED_PRIVILEGES_INFOA");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_REQUIRED_PRIVILEGES_INFOA$struct$LAYOUT() { return _SERVICE_REQUIRED_PRIVILEGES_INFOA$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_REQUIRED_PRIVILEGES_INFOA$pmszRequiredPrivileges$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_REQUIRED_PRIVILEGES_INFOA$pmszRequiredPrivileges$LAYOUT() { return _SERVICE_REQUIRED_PRIVILEGES_INFOA$pmszRequiredPrivileges$LAYOUT_; }

    static final VarHandle _SERVICE_REQUIRED_PRIVILEGES_INFOA$pmszRequiredPrivileges$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_REQUIRED_PRIVILEGES_INFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pmszRequiredPrivileges")));
    static final java.lang.invoke.VarHandle _SERVICE_REQUIRED_PRIVILEGES_INFOA$pmszRequiredPrivileges$VH() { return _SERVICE_REQUIRED_PRIVILEGES_INFOA$pmszRequiredPrivileges$VH_; }

    static final MemoryLayout _SERVICE_REQUIRED_PRIVILEGES_INFOW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("pmszRequiredPrivileges")
    ).withName("_SERVICE_REQUIRED_PRIVILEGES_INFOW");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_REQUIRED_PRIVILEGES_INFOW$struct$LAYOUT() { return _SERVICE_REQUIRED_PRIVILEGES_INFOW$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_REQUIRED_PRIVILEGES_INFOW$pmszRequiredPrivileges$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_REQUIRED_PRIVILEGES_INFOW$pmszRequiredPrivileges$LAYOUT() { return _SERVICE_REQUIRED_PRIVILEGES_INFOW$pmszRequiredPrivileges$LAYOUT_; }

    static final VarHandle _SERVICE_REQUIRED_PRIVILEGES_INFOW$pmszRequiredPrivileges$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_REQUIRED_PRIVILEGES_INFOW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pmszRequiredPrivileges")));
    static final java.lang.invoke.VarHandle _SERVICE_REQUIRED_PRIVILEGES_INFOW$pmszRequiredPrivileges$VH() { return _SERVICE_REQUIRED_PRIVILEGES_INFOW$pmszRequiredPrivileges$VH_; }

    static final MemoryLayout _SERVICE_PRESHUTDOWN_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwPreshutdownTimeout")
    ).withName("_SERVICE_PRESHUTDOWN_INFO");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_PRESHUTDOWN_INFO$struct$LAYOUT() { return _SERVICE_PRESHUTDOWN_INFO$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_PRESHUTDOWN_INFO$dwPreshutdownTimeout$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_PRESHUTDOWN_INFO$dwPreshutdownTimeout$LAYOUT() { return _SERVICE_PRESHUTDOWN_INFO$dwPreshutdownTimeout$LAYOUT_; }

    static final VarHandle _SERVICE_PRESHUTDOWN_INFO$dwPreshutdownTimeout$VH_ = _SERVICE_PRESHUTDOWN_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwPreshutdownTimeout"));
    static final java.lang.invoke.VarHandle _SERVICE_PRESHUTDOWN_INFO$dwPreshutdownTimeout$VH() { return _SERVICE_PRESHUTDOWN_INFO$dwPreshutdownTimeout$VH_; }

    static final MemoryLayout _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwDataType"),
        C_LONG.withName("cbData"),
        C_POINTER.withName("pData")
    ).withName("_SERVICE_TRIGGER_SPECIFIC_DATA_ITEM");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$struct$LAYOUT() { return _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$dwDataType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$dwDataType$LAYOUT() { return _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$dwDataType$LAYOUT_; }

    static final VarHandle _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$dwDataType$VH_ = _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwDataType"));
    static final java.lang.invoke.VarHandle _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$dwDataType$VH() { return _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$dwDataType$VH_; }

    static final MemoryLayout _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$cbData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$cbData$LAYOUT() { return _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$cbData$LAYOUT_; }

    static final VarHandle _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$cbData$VH_ = _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbData"));
    static final java.lang.invoke.VarHandle _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$cbData$VH() { return _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$cbData$VH_; }

    static final MemoryLayout _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$pData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$pData$LAYOUT() { return _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$pData$LAYOUT_; }

    static final VarHandle _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$pData$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pData")));
    static final java.lang.invoke.VarHandle _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$pData$VH() { return _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM$pData$VH_; }

    static final MemoryLayout _SERVICE_TRIGGER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwTriggerType"),
        C_LONG.withName("dwAction"),
        C_POINTER.withName("pTriggerSubtype"),
        C_LONG.withName("cDataItems"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pDataItems")
    ).withName("_SERVICE_TRIGGER");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TRIGGER$struct$LAYOUT() { return _SERVICE_TRIGGER$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_TRIGGER$dwTriggerType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TRIGGER$dwTriggerType$LAYOUT() { return _SERVICE_TRIGGER$dwTriggerType$LAYOUT_; }

    static final VarHandle _SERVICE_TRIGGER$dwTriggerType$VH_ = _SERVICE_TRIGGER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwTriggerType"));
    static final java.lang.invoke.VarHandle _SERVICE_TRIGGER$dwTriggerType$VH() { return _SERVICE_TRIGGER$dwTriggerType$VH_; }

    static final MemoryLayout _SERVICE_TRIGGER$dwAction$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TRIGGER$dwAction$LAYOUT() { return _SERVICE_TRIGGER$dwAction$LAYOUT_; }

    static final VarHandle _SERVICE_TRIGGER$dwAction$VH_ = _SERVICE_TRIGGER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwAction"));
    static final java.lang.invoke.VarHandle _SERVICE_TRIGGER$dwAction$VH() { return _SERVICE_TRIGGER$dwAction$VH_; }

    static final MemoryLayout _SERVICE_TRIGGER$pTriggerSubtype$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TRIGGER$pTriggerSubtype$LAYOUT() { return _SERVICE_TRIGGER$pTriggerSubtype$LAYOUT_; }

    static final VarHandle _SERVICE_TRIGGER$pTriggerSubtype$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_TRIGGER$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pTriggerSubtype")));
    static final java.lang.invoke.VarHandle _SERVICE_TRIGGER$pTriggerSubtype$VH() { return _SERVICE_TRIGGER$pTriggerSubtype$VH_; }

    static final MemoryLayout _SERVICE_TRIGGER$cDataItems$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TRIGGER$cDataItems$LAYOUT() { return _SERVICE_TRIGGER$cDataItems$LAYOUT_; }

    static final VarHandle _SERVICE_TRIGGER$cDataItems$VH_ = _SERVICE_TRIGGER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cDataItems"));
    static final java.lang.invoke.VarHandle _SERVICE_TRIGGER$cDataItems$VH() { return _SERVICE_TRIGGER$cDataItems$VH_; }

    static final MemoryLayout _SERVICE_TRIGGER$pDataItems$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TRIGGER$pDataItems$LAYOUT() { return _SERVICE_TRIGGER$pDataItems$LAYOUT_; }

    static final VarHandle _SERVICE_TRIGGER$pDataItems$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_TRIGGER$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pDataItems")));
    static final java.lang.invoke.VarHandle _SERVICE_TRIGGER$pDataItems$VH() { return _SERVICE_TRIGGER$pDataItems$VH_; }

    static final MemoryLayout _SERVICE_TRIGGER_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cTriggers"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pTriggers"),
        C_POINTER.withName("pReserved")
    ).withName("_SERVICE_TRIGGER_INFO");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TRIGGER_INFO$struct$LAYOUT() { return _SERVICE_TRIGGER_INFO$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_TRIGGER_INFO$cTriggers$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TRIGGER_INFO$cTriggers$LAYOUT() { return _SERVICE_TRIGGER_INFO$cTriggers$LAYOUT_; }

    static final VarHandle _SERVICE_TRIGGER_INFO$cTriggers$VH_ = _SERVICE_TRIGGER_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cTriggers"));
    static final java.lang.invoke.VarHandle _SERVICE_TRIGGER_INFO$cTriggers$VH() { return _SERVICE_TRIGGER_INFO$cTriggers$VH_; }

    static final MemoryLayout _SERVICE_TRIGGER_INFO$pTriggers$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TRIGGER_INFO$pTriggers$LAYOUT() { return _SERVICE_TRIGGER_INFO$pTriggers$LAYOUT_; }

    static final VarHandle _SERVICE_TRIGGER_INFO$pTriggers$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_TRIGGER_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pTriggers")));
    static final java.lang.invoke.VarHandle _SERVICE_TRIGGER_INFO$pTriggers$VH() { return _SERVICE_TRIGGER_INFO$pTriggers$VH_; }

    static final MemoryLayout _SERVICE_TRIGGER_INFO$pReserved$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TRIGGER_INFO$pReserved$LAYOUT() { return _SERVICE_TRIGGER_INFO$pReserved$LAYOUT_; }

    static final VarHandle _SERVICE_TRIGGER_INFO$pReserved$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_TRIGGER_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pReserved")));
    static final java.lang.invoke.VarHandle _SERVICE_TRIGGER_INFO$pReserved$VH() { return _SERVICE_TRIGGER_INFO$pReserved$VH_; }

    static final MemoryLayout _SERVICE_PREFERRED_NODE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("usPreferredNode"),
        C_CHAR.withName("fDelete"),
        MemoryLayout.ofPaddingBits(8)
    ).withName("_SERVICE_PREFERRED_NODE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_PREFERRED_NODE_INFO$struct$LAYOUT() { return _SERVICE_PREFERRED_NODE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_PREFERRED_NODE_INFO$usPreferredNode$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_PREFERRED_NODE_INFO$usPreferredNode$LAYOUT() { return _SERVICE_PREFERRED_NODE_INFO$usPreferredNode$LAYOUT_; }

    static final VarHandle _SERVICE_PREFERRED_NODE_INFO$usPreferredNode$VH_ = _SERVICE_PREFERRED_NODE_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("usPreferredNode"));
    static final java.lang.invoke.VarHandle _SERVICE_PREFERRED_NODE_INFO$usPreferredNode$VH() { return _SERVICE_PREFERRED_NODE_INFO$usPreferredNode$VH_; }

    static final MemoryLayout _SERVICE_PREFERRED_NODE_INFO$fDelete$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_PREFERRED_NODE_INFO$fDelete$LAYOUT() { return _SERVICE_PREFERRED_NODE_INFO$fDelete$LAYOUT_; }

    static final VarHandle _SERVICE_PREFERRED_NODE_INFO$fDelete$VH_ = _SERVICE_PREFERRED_NODE_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("fDelete"));
    static final java.lang.invoke.VarHandle _SERVICE_PREFERRED_NODE_INFO$fDelete$VH() { return _SERVICE_PREFERRED_NODE_INFO$fDelete$VH_; }

    static final MemoryLayout _SERVICE_TIMECHANGE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("liNewTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("liOldTime")
    ).withName("_SERVICE_TIMECHANGE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TIMECHANGE_INFO$struct$LAYOUT() { return _SERVICE_TIMECHANGE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_LAUNCH_PROTECTED_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwLaunchProtected")
    ).withName("_SERVICE_LAUNCH_PROTECTED_INFO");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_LAUNCH_PROTECTED_INFO$struct$LAYOUT() { return _SERVICE_LAUNCH_PROTECTED_INFO$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_LAUNCH_PROTECTED_INFO$dwLaunchProtected$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_LAUNCH_PROTECTED_INFO$dwLaunchProtected$LAYOUT() { return _SERVICE_LAUNCH_PROTECTED_INFO$dwLaunchProtected$LAYOUT_; }

    static final VarHandle _SERVICE_LAUNCH_PROTECTED_INFO$dwLaunchProtected$VH_ = _SERVICE_LAUNCH_PROTECTED_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwLaunchProtected"));
    static final java.lang.invoke.VarHandle _SERVICE_LAUNCH_PROTECTED_INFO$dwLaunchProtected$VH() { return _SERVICE_LAUNCH_PROTECTED_INFO$dwLaunchProtected$VH_; }

    static final MemoryLayout SC_HANDLE__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("SC_HANDLE__");
    static final jdk.incubator.foreign.MemoryLayout SC_HANDLE__$struct$LAYOUT() { return SC_HANDLE__$struct$LAYOUT_; }

    static final MemoryLayout SC_HANDLE__$unused$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout SC_HANDLE__$unused$LAYOUT() { return SC_HANDLE__$unused$LAYOUT_; }

    static final VarHandle SC_HANDLE__$unused$VH_ = SC_HANDLE__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    static final java.lang.invoke.VarHandle SC_HANDLE__$unused$VH() { return SC_HANDLE__$unused$VH_; }

    static final MemoryLayout SERVICE_STATUS_HANDLE__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("SERVICE_STATUS_HANDLE__");
    static final jdk.incubator.foreign.MemoryLayout SERVICE_STATUS_HANDLE__$struct$LAYOUT() { return SERVICE_STATUS_HANDLE__$struct$LAYOUT_; }

    static final MemoryLayout SERVICE_STATUS_HANDLE__$unused$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout SERVICE_STATUS_HANDLE__$unused$LAYOUT() { return SERVICE_STATUS_HANDLE__$unused$LAYOUT_; }

    static final VarHandle SERVICE_STATUS_HANDLE__$unused$VH_ = SERVICE_STATUS_HANDLE__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    static final java.lang.invoke.VarHandle SERVICE_STATUS_HANDLE__$unused$VH() { return SERVICE_STATUS_HANDLE__$unused$VH_; }

    static final int SC_STATUS_PROCESS_INFO() { return (int)0L; }

    static final int SC_ENUM_PROCESS_INFO() { return (int)0L; }

    static final MemoryLayout _SERVICE_STATUS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwServiceType"),
        C_LONG.withName("dwCurrentState"),
        C_LONG.withName("dwControlsAccepted"),
        C_LONG.withName("dwWin32ExitCode"),
        C_LONG.withName("dwServiceSpecificExitCode"),
        C_LONG.withName("dwCheckPoint"),
        C_LONG.withName("dwWaitHint")
    ).withName("_SERVICE_STATUS");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_STATUS$struct$LAYOUT() { return _SERVICE_STATUS$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_STATUS$dwServiceType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_STATUS$dwServiceType$LAYOUT() { return _SERVICE_STATUS$dwServiceType$LAYOUT_; }

    static final VarHandle _SERVICE_STATUS$dwServiceType$VH_ = _SERVICE_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwServiceType"));
    static final java.lang.invoke.VarHandle _SERVICE_STATUS$dwServiceType$VH() { return _SERVICE_STATUS$dwServiceType$VH_; }

    static final MemoryLayout _SERVICE_STATUS$dwCurrentState$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_STATUS$dwCurrentState$LAYOUT() { return _SERVICE_STATUS$dwCurrentState$LAYOUT_; }

    static final VarHandle _SERVICE_STATUS$dwCurrentState$VH_ = _SERVICE_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCurrentState"));
    static final java.lang.invoke.VarHandle _SERVICE_STATUS$dwCurrentState$VH() { return _SERVICE_STATUS$dwCurrentState$VH_; }

    static final MemoryLayout _SERVICE_STATUS$dwControlsAccepted$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_STATUS$dwControlsAccepted$LAYOUT() { return _SERVICE_STATUS$dwControlsAccepted$LAYOUT_; }

    static final VarHandle _SERVICE_STATUS$dwControlsAccepted$VH_ = _SERVICE_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwControlsAccepted"));
    static final java.lang.invoke.VarHandle _SERVICE_STATUS$dwControlsAccepted$VH() { return _SERVICE_STATUS$dwControlsAccepted$VH_; }

    static final MemoryLayout _SERVICE_STATUS$dwWin32ExitCode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_STATUS$dwWin32ExitCode$LAYOUT() { return _SERVICE_STATUS$dwWin32ExitCode$LAYOUT_; }

    static final VarHandle _SERVICE_STATUS$dwWin32ExitCode$VH_ = _SERVICE_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwWin32ExitCode"));
    static final java.lang.invoke.VarHandle _SERVICE_STATUS$dwWin32ExitCode$VH() { return _SERVICE_STATUS$dwWin32ExitCode$VH_; }

    static final MemoryLayout _SERVICE_STATUS$dwServiceSpecificExitCode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_STATUS$dwServiceSpecificExitCode$LAYOUT() { return _SERVICE_STATUS$dwServiceSpecificExitCode$LAYOUT_; }

    static final VarHandle _SERVICE_STATUS$dwServiceSpecificExitCode$VH_ = _SERVICE_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwServiceSpecificExitCode"));
    static final java.lang.invoke.VarHandle _SERVICE_STATUS$dwServiceSpecificExitCode$VH() { return _SERVICE_STATUS$dwServiceSpecificExitCode$VH_; }

    static final MemoryLayout _SERVICE_STATUS$dwCheckPoint$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_STATUS$dwCheckPoint$LAYOUT() { return _SERVICE_STATUS$dwCheckPoint$LAYOUT_; }

    static final VarHandle _SERVICE_STATUS$dwCheckPoint$VH_ = _SERVICE_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCheckPoint"));
    static final java.lang.invoke.VarHandle _SERVICE_STATUS$dwCheckPoint$VH() { return _SERVICE_STATUS$dwCheckPoint$VH_; }

    static final MemoryLayout _SERVICE_STATUS$dwWaitHint$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_STATUS$dwWaitHint$LAYOUT() { return _SERVICE_STATUS$dwWaitHint$LAYOUT_; }

    static final VarHandle _SERVICE_STATUS$dwWaitHint$VH_ = _SERVICE_STATUS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwWaitHint"));
    static final java.lang.invoke.VarHandle _SERVICE_STATUS$dwWaitHint$VH() { return _SERVICE_STATUS$dwWaitHint$VH_; }

    static final MemoryLayout _SERVICE_STATUS_PROCESS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwServiceType"),
        C_LONG.withName("dwCurrentState"),
        C_LONG.withName("dwControlsAccepted"),
        C_LONG.withName("dwWin32ExitCode"),
        C_LONG.withName("dwServiceSpecificExitCode"),
        C_LONG.withName("dwCheckPoint"),
        C_LONG.withName("dwWaitHint"),
        C_LONG.withName("dwProcessId"),
        C_LONG.withName("dwServiceFlags")
    ).withName("_SERVICE_STATUS_PROCESS");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_STATUS_PROCESS$struct$LAYOUT() { return _SERVICE_STATUS_PROCESS$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_STATUS_PROCESS$dwServiceType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_STATUS_PROCESS$dwServiceType$LAYOUT() { return _SERVICE_STATUS_PROCESS$dwServiceType$LAYOUT_; }

    static final VarHandle _SERVICE_STATUS_PROCESS$dwServiceType$VH_ = _SERVICE_STATUS_PROCESS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwServiceType"));
    static final java.lang.invoke.VarHandle _SERVICE_STATUS_PROCESS$dwServiceType$VH() { return _SERVICE_STATUS_PROCESS$dwServiceType$VH_; }

    static final MemoryLayout _SERVICE_STATUS_PROCESS$dwCurrentState$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_STATUS_PROCESS$dwCurrentState$LAYOUT() { return _SERVICE_STATUS_PROCESS$dwCurrentState$LAYOUT_; }

    static final VarHandle _SERVICE_STATUS_PROCESS$dwCurrentState$VH_ = _SERVICE_STATUS_PROCESS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCurrentState"));
    static final java.lang.invoke.VarHandle _SERVICE_STATUS_PROCESS$dwCurrentState$VH() { return _SERVICE_STATUS_PROCESS$dwCurrentState$VH_; }

    static final MemoryLayout _SERVICE_STATUS_PROCESS$dwControlsAccepted$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_STATUS_PROCESS$dwControlsAccepted$LAYOUT() { return _SERVICE_STATUS_PROCESS$dwControlsAccepted$LAYOUT_; }

    static final VarHandle _SERVICE_STATUS_PROCESS$dwControlsAccepted$VH_ = _SERVICE_STATUS_PROCESS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwControlsAccepted"));
    static final java.lang.invoke.VarHandle _SERVICE_STATUS_PROCESS$dwControlsAccepted$VH() { return _SERVICE_STATUS_PROCESS$dwControlsAccepted$VH_; }

    static final MemoryLayout _SERVICE_STATUS_PROCESS$dwWin32ExitCode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_STATUS_PROCESS$dwWin32ExitCode$LAYOUT() { return _SERVICE_STATUS_PROCESS$dwWin32ExitCode$LAYOUT_; }

    static final VarHandle _SERVICE_STATUS_PROCESS$dwWin32ExitCode$VH_ = _SERVICE_STATUS_PROCESS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwWin32ExitCode"));
    static final java.lang.invoke.VarHandle _SERVICE_STATUS_PROCESS$dwWin32ExitCode$VH() { return _SERVICE_STATUS_PROCESS$dwWin32ExitCode$VH_; }

    static final MemoryLayout _SERVICE_STATUS_PROCESS$dwServiceSpecificExitCode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_STATUS_PROCESS$dwServiceSpecificExitCode$LAYOUT() { return _SERVICE_STATUS_PROCESS$dwServiceSpecificExitCode$LAYOUT_; }

    static final VarHandle _SERVICE_STATUS_PROCESS$dwServiceSpecificExitCode$VH_ = _SERVICE_STATUS_PROCESS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwServiceSpecificExitCode"));
    static final java.lang.invoke.VarHandle _SERVICE_STATUS_PROCESS$dwServiceSpecificExitCode$VH() { return _SERVICE_STATUS_PROCESS$dwServiceSpecificExitCode$VH_; }

    static final MemoryLayout _SERVICE_STATUS_PROCESS$dwCheckPoint$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_STATUS_PROCESS$dwCheckPoint$LAYOUT() { return _SERVICE_STATUS_PROCESS$dwCheckPoint$LAYOUT_; }

    static final VarHandle _SERVICE_STATUS_PROCESS$dwCheckPoint$VH_ = _SERVICE_STATUS_PROCESS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCheckPoint"));
    static final java.lang.invoke.VarHandle _SERVICE_STATUS_PROCESS$dwCheckPoint$VH() { return _SERVICE_STATUS_PROCESS$dwCheckPoint$VH_; }

    static final MemoryLayout _SERVICE_STATUS_PROCESS$dwWaitHint$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_STATUS_PROCESS$dwWaitHint$LAYOUT() { return _SERVICE_STATUS_PROCESS$dwWaitHint$LAYOUT_; }

    static final VarHandle _SERVICE_STATUS_PROCESS$dwWaitHint$VH_ = _SERVICE_STATUS_PROCESS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwWaitHint"));
    static final java.lang.invoke.VarHandle _SERVICE_STATUS_PROCESS$dwWaitHint$VH() { return _SERVICE_STATUS_PROCESS$dwWaitHint$VH_; }

    static final MemoryLayout _SERVICE_STATUS_PROCESS$dwProcessId$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_STATUS_PROCESS$dwProcessId$LAYOUT() { return _SERVICE_STATUS_PROCESS$dwProcessId$LAYOUT_; }

    static final VarHandle _SERVICE_STATUS_PROCESS$dwProcessId$VH_ = _SERVICE_STATUS_PROCESS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwProcessId"));
    static final java.lang.invoke.VarHandle _SERVICE_STATUS_PROCESS$dwProcessId$VH() { return _SERVICE_STATUS_PROCESS$dwProcessId$VH_; }

    static final MemoryLayout _SERVICE_STATUS_PROCESS$dwServiceFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_STATUS_PROCESS$dwServiceFlags$LAYOUT() { return _SERVICE_STATUS_PROCESS$dwServiceFlags$LAYOUT_; }

    static final VarHandle _SERVICE_STATUS_PROCESS$dwServiceFlags$VH_ = _SERVICE_STATUS_PROCESS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwServiceFlags"));
    static final java.lang.invoke.VarHandle _SERVICE_STATUS_PROCESS$dwServiceFlags$VH() { return _SERVICE_STATUS_PROCESS$dwServiceFlags$VH_; }

    static final MemoryLayout _ENUM_SERVICE_STATUSA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpServiceName"),
        C_POINTER.withName("lpDisplayName"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwServiceType"),
            C_LONG.withName("dwCurrentState"),
            C_LONG.withName("dwControlsAccepted"),
            C_LONG.withName("dwWin32ExitCode"),
            C_LONG.withName("dwServiceSpecificExitCode"),
            C_LONG.withName("dwCheckPoint"),
            C_LONG.withName("dwWaitHint")
        ).withName("ServiceStatus"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_ENUM_SERVICE_STATUSA");
    static final jdk.incubator.foreign.MemoryLayout _ENUM_SERVICE_STATUSA$struct$LAYOUT() { return _ENUM_SERVICE_STATUSA$struct$LAYOUT_; }

    static final MemoryLayout _ENUM_SERVICE_STATUSA$lpServiceName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _ENUM_SERVICE_STATUSA$lpServiceName$LAYOUT() { return _ENUM_SERVICE_STATUSA$lpServiceName$LAYOUT_; }

    static final VarHandle _ENUM_SERVICE_STATUSA$lpServiceName$VH_ = MemoryHandles.asAddressVarHandle(_ENUM_SERVICE_STATUSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpServiceName")));
    static final java.lang.invoke.VarHandle _ENUM_SERVICE_STATUSA$lpServiceName$VH() { return _ENUM_SERVICE_STATUSA$lpServiceName$VH_; }

    static final MemoryLayout _ENUM_SERVICE_STATUSA$lpDisplayName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _ENUM_SERVICE_STATUSA$lpDisplayName$LAYOUT() { return _ENUM_SERVICE_STATUSA$lpDisplayName$LAYOUT_; }

    static final VarHandle _ENUM_SERVICE_STATUSA$lpDisplayName$VH_ = MemoryHandles.asAddressVarHandle(_ENUM_SERVICE_STATUSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpDisplayName")));
    static final java.lang.invoke.VarHandle _ENUM_SERVICE_STATUSA$lpDisplayName$VH() { return _ENUM_SERVICE_STATUSA$lpDisplayName$VH_; }

    static final MemoryLayout _ENUM_SERVICE_STATUSW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpServiceName"),
        C_POINTER.withName("lpDisplayName"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwServiceType"),
            C_LONG.withName("dwCurrentState"),
            C_LONG.withName("dwControlsAccepted"),
            C_LONG.withName("dwWin32ExitCode"),
            C_LONG.withName("dwServiceSpecificExitCode"),
            C_LONG.withName("dwCheckPoint"),
            C_LONG.withName("dwWaitHint")
        ).withName("ServiceStatus"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_ENUM_SERVICE_STATUSW");
    static final jdk.incubator.foreign.MemoryLayout _ENUM_SERVICE_STATUSW$struct$LAYOUT() { return _ENUM_SERVICE_STATUSW$struct$LAYOUT_; }

    static final MemoryLayout _ENUM_SERVICE_STATUSW$lpServiceName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _ENUM_SERVICE_STATUSW$lpServiceName$LAYOUT() { return _ENUM_SERVICE_STATUSW$lpServiceName$LAYOUT_; }

    static final VarHandle _ENUM_SERVICE_STATUSW$lpServiceName$VH_ = MemoryHandles.asAddressVarHandle(_ENUM_SERVICE_STATUSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpServiceName")));
    static final java.lang.invoke.VarHandle _ENUM_SERVICE_STATUSW$lpServiceName$VH() { return _ENUM_SERVICE_STATUSW$lpServiceName$VH_; }

    static final MemoryLayout _ENUM_SERVICE_STATUSW$lpDisplayName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _ENUM_SERVICE_STATUSW$lpDisplayName$LAYOUT() { return _ENUM_SERVICE_STATUSW$lpDisplayName$LAYOUT_; }

    static final VarHandle _ENUM_SERVICE_STATUSW$lpDisplayName$VH_ = MemoryHandles.asAddressVarHandle(_ENUM_SERVICE_STATUSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpDisplayName")));
    static final java.lang.invoke.VarHandle _ENUM_SERVICE_STATUSW$lpDisplayName$VH() { return _ENUM_SERVICE_STATUSW$lpDisplayName$VH_; }

    static final MemoryLayout _ENUM_SERVICE_STATUS_PROCESSA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpServiceName"),
        C_POINTER.withName("lpDisplayName"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwServiceType"),
            C_LONG.withName("dwCurrentState"),
            C_LONG.withName("dwControlsAccepted"),
            C_LONG.withName("dwWin32ExitCode"),
            C_LONG.withName("dwServiceSpecificExitCode"),
            C_LONG.withName("dwCheckPoint"),
            C_LONG.withName("dwWaitHint"),
            C_LONG.withName("dwProcessId"),
            C_LONG.withName("dwServiceFlags")
        ).withName("ServiceStatusProcess"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_ENUM_SERVICE_STATUS_PROCESSA");
    static final jdk.incubator.foreign.MemoryLayout _ENUM_SERVICE_STATUS_PROCESSA$struct$LAYOUT() { return _ENUM_SERVICE_STATUS_PROCESSA$struct$LAYOUT_; }

    static final MemoryLayout _ENUM_SERVICE_STATUS_PROCESSA$lpServiceName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _ENUM_SERVICE_STATUS_PROCESSA$lpServiceName$LAYOUT() { return _ENUM_SERVICE_STATUS_PROCESSA$lpServiceName$LAYOUT_; }

    static final VarHandle _ENUM_SERVICE_STATUS_PROCESSA$lpServiceName$VH_ = MemoryHandles.asAddressVarHandle(_ENUM_SERVICE_STATUS_PROCESSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpServiceName")));
    static final java.lang.invoke.VarHandle _ENUM_SERVICE_STATUS_PROCESSA$lpServiceName$VH() { return _ENUM_SERVICE_STATUS_PROCESSA$lpServiceName$VH_; }

    static final MemoryLayout _ENUM_SERVICE_STATUS_PROCESSA$lpDisplayName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _ENUM_SERVICE_STATUS_PROCESSA$lpDisplayName$LAYOUT() { return _ENUM_SERVICE_STATUS_PROCESSA$lpDisplayName$LAYOUT_; }

    static final VarHandle _ENUM_SERVICE_STATUS_PROCESSA$lpDisplayName$VH_ = MemoryHandles.asAddressVarHandle(_ENUM_SERVICE_STATUS_PROCESSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpDisplayName")));
    static final java.lang.invoke.VarHandle _ENUM_SERVICE_STATUS_PROCESSA$lpDisplayName$VH() { return _ENUM_SERVICE_STATUS_PROCESSA$lpDisplayName$VH_; }

    static final MemoryLayout _ENUM_SERVICE_STATUS_PROCESSW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpServiceName"),
        C_POINTER.withName("lpDisplayName"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwServiceType"),
            C_LONG.withName("dwCurrentState"),
            C_LONG.withName("dwControlsAccepted"),
            C_LONG.withName("dwWin32ExitCode"),
            C_LONG.withName("dwServiceSpecificExitCode"),
            C_LONG.withName("dwCheckPoint"),
            C_LONG.withName("dwWaitHint"),
            C_LONG.withName("dwProcessId"),
            C_LONG.withName("dwServiceFlags")
        ).withName("ServiceStatusProcess"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_ENUM_SERVICE_STATUS_PROCESSW");
    static final jdk.incubator.foreign.MemoryLayout _ENUM_SERVICE_STATUS_PROCESSW$struct$LAYOUT() { return _ENUM_SERVICE_STATUS_PROCESSW$struct$LAYOUT_; }

    static final MemoryLayout _ENUM_SERVICE_STATUS_PROCESSW$lpServiceName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _ENUM_SERVICE_STATUS_PROCESSW$lpServiceName$LAYOUT() { return _ENUM_SERVICE_STATUS_PROCESSW$lpServiceName$LAYOUT_; }

    static final VarHandle _ENUM_SERVICE_STATUS_PROCESSW$lpServiceName$VH_ = MemoryHandles.asAddressVarHandle(_ENUM_SERVICE_STATUS_PROCESSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpServiceName")));
    static final java.lang.invoke.VarHandle _ENUM_SERVICE_STATUS_PROCESSW$lpServiceName$VH() { return _ENUM_SERVICE_STATUS_PROCESSW$lpServiceName$VH_; }

    static final MemoryLayout _ENUM_SERVICE_STATUS_PROCESSW$lpDisplayName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _ENUM_SERVICE_STATUS_PROCESSW$lpDisplayName$LAYOUT() { return _ENUM_SERVICE_STATUS_PROCESSW$lpDisplayName$LAYOUT_; }

    static final VarHandle _ENUM_SERVICE_STATUS_PROCESSW$lpDisplayName$VH_ = MemoryHandles.asAddressVarHandle(_ENUM_SERVICE_STATUS_PROCESSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpDisplayName")));
    static final java.lang.invoke.VarHandle _ENUM_SERVICE_STATUS_PROCESSW$lpDisplayName$VH() { return _ENUM_SERVICE_STATUS_PROCESSW$lpDisplayName$VH_; }

    static final MemoryLayout _QUERY_SERVICE_LOCK_STATUSA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("fIsLocked"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpLockOwner"),
        C_LONG.withName("dwLockDuration"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_QUERY_SERVICE_LOCK_STATUSA");
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_LOCK_STATUSA$struct$LAYOUT() { return _QUERY_SERVICE_LOCK_STATUSA$struct$LAYOUT_; }

    static final MemoryLayout _QUERY_SERVICE_LOCK_STATUSA$fIsLocked$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_LOCK_STATUSA$fIsLocked$LAYOUT() { return _QUERY_SERVICE_LOCK_STATUSA$fIsLocked$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_LOCK_STATUSA$fIsLocked$VH_ = _QUERY_SERVICE_LOCK_STATUSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fIsLocked"));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_LOCK_STATUSA$fIsLocked$VH() { return _QUERY_SERVICE_LOCK_STATUSA$fIsLocked$VH_; }

    static final MemoryLayout _QUERY_SERVICE_LOCK_STATUSA$lpLockOwner$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_LOCK_STATUSA$lpLockOwner$LAYOUT() { return _QUERY_SERVICE_LOCK_STATUSA$lpLockOwner$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_LOCK_STATUSA$lpLockOwner$VH_ = MemoryHandles.asAddressVarHandle(_QUERY_SERVICE_LOCK_STATUSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpLockOwner")));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_LOCK_STATUSA$lpLockOwner$VH() { return _QUERY_SERVICE_LOCK_STATUSA$lpLockOwner$VH_; }

    static final MemoryLayout _QUERY_SERVICE_LOCK_STATUSA$dwLockDuration$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_LOCK_STATUSA$dwLockDuration$LAYOUT() { return _QUERY_SERVICE_LOCK_STATUSA$dwLockDuration$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_LOCK_STATUSA$dwLockDuration$VH_ = _QUERY_SERVICE_LOCK_STATUSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwLockDuration"));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_LOCK_STATUSA$dwLockDuration$VH() { return _QUERY_SERVICE_LOCK_STATUSA$dwLockDuration$VH_; }

    static final MemoryLayout _QUERY_SERVICE_LOCK_STATUSW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("fIsLocked"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpLockOwner"),
        C_LONG.withName("dwLockDuration"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_QUERY_SERVICE_LOCK_STATUSW");
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_LOCK_STATUSW$struct$LAYOUT() { return _QUERY_SERVICE_LOCK_STATUSW$struct$LAYOUT_; }

    static final MemoryLayout _QUERY_SERVICE_LOCK_STATUSW$fIsLocked$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_LOCK_STATUSW$fIsLocked$LAYOUT() { return _QUERY_SERVICE_LOCK_STATUSW$fIsLocked$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_LOCK_STATUSW$fIsLocked$VH_ = _QUERY_SERVICE_LOCK_STATUSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fIsLocked"));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_LOCK_STATUSW$fIsLocked$VH() { return _QUERY_SERVICE_LOCK_STATUSW$fIsLocked$VH_; }

    static final MemoryLayout _QUERY_SERVICE_LOCK_STATUSW$lpLockOwner$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_LOCK_STATUSW$lpLockOwner$LAYOUT() { return _QUERY_SERVICE_LOCK_STATUSW$lpLockOwner$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_LOCK_STATUSW$lpLockOwner$VH_ = MemoryHandles.asAddressVarHandle(_QUERY_SERVICE_LOCK_STATUSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpLockOwner")));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_LOCK_STATUSW$lpLockOwner$VH() { return _QUERY_SERVICE_LOCK_STATUSW$lpLockOwner$VH_; }

    static final MemoryLayout _QUERY_SERVICE_LOCK_STATUSW$dwLockDuration$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_LOCK_STATUSW$dwLockDuration$LAYOUT() { return _QUERY_SERVICE_LOCK_STATUSW$dwLockDuration$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_LOCK_STATUSW$dwLockDuration$VH_ = _QUERY_SERVICE_LOCK_STATUSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwLockDuration"));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_LOCK_STATUSW$dwLockDuration$VH() { return _QUERY_SERVICE_LOCK_STATUSW$dwLockDuration$VH_; }

    static final MemoryLayout _QUERY_SERVICE_CONFIGA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwServiceType"),
        C_LONG.withName("dwStartType"),
        C_LONG.withName("dwErrorControl"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpBinaryPathName"),
        C_POINTER.withName("lpLoadOrderGroup"),
        C_LONG.withName("dwTagId"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpDependencies"),
        C_POINTER.withName("lpServiceStartName"),
        C_POINTER.withName("lpDisplayName")
    ).withName("_QUERY_SERVICE_CONFIGA");
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_CONFIGA$struct$LAYOUT() { return _QUERY_SERVICE_CONFIGA$struct$LAYOUT_; }

    static final MemoryLayout _QUERY_SERVICE_CONFIGA$dwServiceType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_CONFIGA$dwServiceType$LAYOUT() { return _QUERY_SERVICE_CONFIGA$dwServiceType$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_CONFIGA$dwServiceType$VH_ = _QUERY_SERVICE_CONFIGA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwServiceType"));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_CONFIGA$dwServiceType$VH() { return _QUERY_SERVICE_CONFIGA$dwServiceType$VH_; }

    static final MemoryLayout _QUERY_SERVICE_CONFIGA$dwStartType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_CONFIGA$dwStartType$LAYOUT() { return _QUERY_SERVICE_CONFIGA$dwStartType$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_CONFIGA$dwStartType$VH_ = _QUERY_SERVICE_CONFIGA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStartType"));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_CONFIGA$dwStartType$VH() { return _QUERY_SERVICE_CONFIGA$dwStartType$VH_; }

    static final MemoryLayout _QUERY_SERVICE_CONFIGA$dwErrorControl$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_CONFIGA$dwErrorControl$LAYOUT() { return _QUERY_SERVICE_CONFIGA$dwErrorControl$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_CONFIGA$dwErrorControl$VH_ = _QUERY_SERVICE_CONFIGA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwErrorControl"));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_CONFIGA$dwErrorControl$VH() { return _QUERY_SERVICE_CONFIGA$dwErrorControl$VH_; }

    static final MemoryLayout _QUERY_SERVICE_CONFIGA$lpBinaryPathName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_CONFIGA$lpBinaryPathName$LAYOUT() { return _QUERY_SERVICE_CONFIGA$lpBinaryPathName$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_CONFIGA$lpBinaryPathName$VH_ = MemoryHandles.asAddressVarHandle(_QUERY_SERVICE_CONFIGA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpBinaryPathName")));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_CONFIGA$lpBinaryPathName$VH() { return _QUERY_SERVICE_CONFIGA$lpBinaryPathName$VH_; }

    static final MemoryLayout _QUERY_SERVICE_CONFIGA$lpLoadOrderGroup$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_CONFIGA$lpLoadOrderGroup$LAYOUT() { return _QUERY_SERVICE_CONFIGA$lpLoadOrderGroup$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_CONFIGA$lpLoadOrderGroup$VH_ = MemoryHandles.asAddressVarHandle(_QUERY_SERVICE_CONFIGA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpLoadOrderGroup")));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_CONFIGA$lpLoadOrderGroup$VH() { return _QUERY_SERVICE_CONFIGA$lpLoadOrderGroup$VH_; }

    static final MemoryLayout _QUERY_SERVICE_CONFIGA$dwTagId$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_CONFIGA$dwTagId$LAYOUT() { return _QUERY_SERVICE_CONFIGA$dwTagId$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_CONFIGA$dwTagId$VH_ = _QUERY_SERVICE_CONFIGA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwTagId"));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_CONFIGA$dwTagId$VH() { return _QUERY_SERVICE_CONFIGA$dwTagId$VH_; }

    static final MemoryLayout _QUERY_SERVICE_CONFIGA$lpDependencies$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_CONFIGA$lpDependencies$LAYOUT() { return _QUERY_SERVICE_CONFIGA$lpDependencies$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_CONFIGA$lpDependencies$VH_ = MemoryHandles.asAddressVarHandle(_QUERY_SERVICE_CONFIGA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpDependencies")));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_CONFIGA$lpDependencies$VH() { return _QUERY_SERVICE_CONFIGA$lpDependencies$VH_; }

    static final MemoryLayout _QUERY_SERVICE_CONFIGA$lpServiceStartName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_CONFIGA$lpServiceStartName$LAYOUT() { return _QUERY_SERVICE_CONFIGA$lpServiceStartName$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_CONFIGA$lpServiceStartName$VH_ = MemoryHandles.asAddressVarHandle(_QUERY_SERVICE_CONFIGA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpServiceStartName")));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_CONFIGA$lpServiceStartName$VH() { return _QUERY_SERVICE_CONFIGA$lpServiceStartName$VH_; }

    static final MemoryLayout _QUERY_SERVICE_CONFIGA$lpDisplayName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_CONFIGA$lpDisplayName$LAYOUT() { return _QUERY_SERVICE_CONFIGA$lpDisplayName$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_CONFIGA$lpDisplayName$VH_ = MemoryHandles.asAddressVarHandle(_QUERY_SERVICE_CONFIGA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpDisplayName")));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_CONFIGA$lpDisplayName$VH() { return _QUERY_SERVICE_CONFIGA$lpDisplayName$VH_; }

    static final MemoryLayout _QUERY_SERVICE_CONFIGW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwServiceType"),
        C_LONG.withName("dwStartType"),
        C_LONG.withName("dwErrorControl"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpBinaryPathName"),
        C_POINTER.withName("lpLoadOrderGroup"),
        C_LONG.withName("dwTagId"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpDependencies"),
        C_POINTER.withName("lpServiceStartName"),
        C_POINTER.withName("lpDisplayName")
    ).withName("_QUERY_SERVICE_CONFIGW");
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_CONFIGW$struct$LAYOUT() { return _QUERY_SERVICE_CONFIGW$struct$LAYOUT_; }

    static final MemoryLayout _QUERY_SERVICE_CONFIGW$dwServiceType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_CONFIGW$dwServiceType$LAYOUT() { return _QUERY_SERVICE_CONFIGW$dwServiceType$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_CONFIGW$dwServiceType$VH_ = _QUERY_SERVICE_CONFIGW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwServiceType"));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_CONFIGW$dwServiceType$VH() { return _QUERY_SERVICE_CONFIGW$dwServiceType$VH_; }

    static final MemoryLayout _QUERY_SERVICE_CONFIGW$dwStartType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_CONFIGW$dwStartType$LAYOUT() { return _QUERY_SERVICE_CONFIGW$dwStartType$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_CONFIGW$dwStartType$VH_ = _QUERY_SERVICE_CONFIGW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStartType"));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_CONFIGW$dwStartType$VH() { return _QUERY_SERVICE_CONFIGW$dwStartType$VH_; }

    static final MemoryLayout _QUERY_SERVICE_CONFIGW$dwErrorControl$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_CONFIGW$dwErrorControl$LAYOUT() { return _QUERY_SERVICE_CONFIGW$dwErrorControl$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_CONFIGW$dwErrorControl$VH_ = _QUERY_SERVICE_CONFIGW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwErrorControl"));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_CONFIGW$dwErrorControl$VH() { return _QUERY_SERVICE_CONFIGW$dwErrorControl$VH_; }

    static final MemoryLayout _QUERY_SERVICE_CONFIGW$lpBinaryPathName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_CONFIGW$lpBinaryPathName$LAYOUT() { return _QUERY_SERVICE_CONFIGW$lpBinaryPathName$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_CONFIGW$lpBinaryPathName$VH_ = MemoryHandles.asAddressVarHandle(_QUERY_SERVICE_CONFIGW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpBinaryPathName")));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_CONFIGW$lpBinaryPathName$VH() { return _QUERY_SERVICE_CONFIGW$lpBinaryPathName$VH_; }

    static final MemoryLayout _QUERY_SERVICE_CONFIGW$lpLoadOrderGroup$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_CONFIGW$lpLoadOrderGroup$LAYOUT() { return _QUERY_SERVICE_CONFIGW$lpLoadOrderGroup$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_CONFIGW$lpLoadOrderGroup$VH_ = MemoryHandles.asAddressVarHandle(_QUERY_SERVICE_CONFIGW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpLoadOrderGroup")));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_CONFIGW$lpLoadOrderGroup$VH() { return _QUERY_SERVICE_CONFIGW$lpLoadOrderGroup$VH_; }

    static final MemoryLayout _QUERY_SERVICE_CONFIGW$dwTagId$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_CONFIGW$dwTagId$LAYOUT() { return _QUERY_SERVICE_CONFIGW$dwTagId$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_CONFIGW$dwTagId$VH_ = _QUERY_SERVICE_CONFIGW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwTagId"));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_CONFIGW$dwTagId$VH() { return _QUERY_SERVICE_CONFIGW$dwTagId$VH_; }

    static final MemoryLayout _QUERY_SERVICE_CONFIGW$lpDependencies$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_CONFIGW$lpDependencies$LAYOUT() { return _QUERY_SERVICE_CONFIGW$lpDependencies$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_CONFIGW$lpDependencies$VH_ = MemoryHandles.asAddressVarHandle(_QUERY_SERVICE_CONFIGW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpDependencies")));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_CONFIGW$lpDependencies$VH() { return _QUERY_SERVICE_CONFIGW$lpDependencies$VH_; }

    static final MemoryLayout _QUERY_SERVICE_CONFIGW$lpServiceStartName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_CONFIGW$lpServiceStartName$LAYOUT() { return _QUERY_SERVICE_CONFIGW$lpServiceStartName$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_CONFIGW$lpServiceStartName$VH_ = MemoryHandles.asAddressVarHandle(_QUERY_SERVICE_CONFIGW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpServiceStartName")));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_CONFIGW$lpServiceStartName$VH() { return _QUERY_SERVICE_CONFIGW$lpServiceStartName$VH_; }

    static final MemoryLayout _QUERY_SERVICE_CONFIGW$lpDisplayName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _QUERY_SERVICE_CONFIGW$lpDisplayName$LAYOUT() { return _QUERY_SERVICE_CONFIGW$lpDisplayName$LAYOUT_; }

    static final VarHandle _QUERY_SERVICE_CONFIGW$lpDisplayName$VH_ = MemoryHandles.asAddressVarHandle(_QUERY_SERVICE_CONFIGW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpDisplayName")));
    static final java.lang.invoke.VarHandle _QUERY_SERVICE_CONFIGW$lpDisplayName$VH() { return _QUERY_SERVICE_CONFIGW$lpDisplayName$VH_; }

    static final MemoryLayout _SERVICE_TABLE_ENTRYA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpServiceName"),
        C_POINTER.withName("lpServiceProc")
    ).withName("_SERVICE_TABLE_ENTRYA");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TABLE_ENTRYA$struct$LAYOUT() { return _SERVICE_TABLE_ENTRYA$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_TABLE_ENTRYA$lpServiceName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TABLE_ENTRYA$lpServiceName$LAYOUT() { return _SERVICE_TABLE_ENTRYA$lpServiceName$LAYOUT_; }

    static final VarHandle _SERVICE_TABLE_ENTRYA$lpServiceName$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_TABLE_ENTRYA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpServiceName")));
    static final java.lang.invoke.VarHandle _SERVICE_TABLE_ENTRYA$lpServiceName$VH() { return _SERVICE_TABLE_ENTRYA$lpServiceName$VH_; }

    static final MemoryLayout _SERVICE_TABLE_ENTRYA$lpServiceProc$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TABLE_ENTRYA$lpServiceProc$LAYOUT() { return _SERVICE_TABLE_ENTRYA$lpServiceProc$LAYOUT_; }

    static final VarHandle _SERVICE_TABLE_ENTRYA$lpServiceProc$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_TABLE_ENTRYA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpServiceProc")));
    static final java.lang.invoke.VarHandle _SERVICE_TABLE_ENTRYA$lpServiceProc$VH() { return _SERVICE_TABLE_ENTRYA$lpServiceProc$VH_; }

    static final MemoryLayout _SERVICE_TABLE_ENTRYW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpServiceName"),
        C_POINTER.withName("lpServiceProc")
    ).withName("_SERVICE_TABLE_ENTRYW");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TABLE_ENTRYW$struct$LAYOUT() { return _SERVICE_TABLE_ENTRYW$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_TABLE_ENTRYW$lpServiceName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TABLE_ENTRYW$lpServiceName$LAYOUT() { return _SERVICE_TABLE_ENTRYW$lpServiceName$LAYOUT_; }

    static final VarHandle _SERVICE_TABLE_ENTRYW$lpServiceName$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_TABLE_ENTRYW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpServiceName")));
    static final java.lang.invoke.VarHandle _SERVICE_TABLE_ENTRYW$lpServiceName$VH() { return _SERVICE_TABLE_ENTRYW$lpServiceName$VH_; }

    static final MemoryLayout _SERVICE_TABLE_ENTRYW$lpServiceProc$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_TABLE_ENTRYW$lpServiceProc$LAYOUT() { return _SERVICE_TABLE_ENTRYW$lpServiceProc$LAYOUT_; }

    static final VarHandle _SERVICE_TABLE_ENTRYW$lpServiceProc$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_TABLE_ENTRYW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpServiceProc")));
    static final java.lang.invoke.VarHandle _SERVICE_TABLE_ENTRYW$lpServiceProc$VH() { return _SERVICE_TABLE_ENTRYW$lpServiceProc$VH_; }

    static final MemoryLayout _SERVICE_NOTIFY_1$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwVersion"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pfnNotifyCallback"),
        C_POINTER.withName("pContext"),
        C_LONG.withName("dwNotificationStatus"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwServiceType"),
            C_LONG.withName("dwCurrentState"),
            C_LONG.withName("dwControlsAccepted"),
            C_LONG.withName("dwWin32ExitCode"),
            C_LONG.withName("dwServiceSpecificExitCode"),
            C_LONG.withName("dwCheckPoint"),
            C_LONG.withName("dwWaitHint"),
            C_LONG.withName("dwProcessId"),
            C_LONG.withName("dwServiceFlags")
        ).withName("ServiceStatus")
    ).withName("_SERVICE_NOTIFY_1");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_NOTIFY_1$struct$LAYOUT() { return _SERVICE_NOTIFY_1$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_NOTIFY_1$dwVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_NOTIFY_1$dwVersion$LAYOUT() { return _SERVICE_NOTIFY_1$dwVersion$LAYOUT_; }

    static final VarHandle _SERVICE_NOTIFY_1$dwVersion$VH_ = _SERVICE_NOTIFY_1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersion"));
    static final java.lang.invoke.VarHandle _SERVICE_NOTIFY_1$dwVersion$VH() { return _SERVICE_NOTIFY_1$dwVersion$VH_; }

    static final MemoryLayout _SERVICE_NOTIFY_1$pfnNotifyCallback$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_NOTIFY_1$pfnNotifyCallback$LAYOUT() { return _SERVICE_NOTIFY_1$pfnNotifyCallback$LAYOUT_; }

    static final VarHandle _SERVICE_NOTIFY_1$pfnNotifyCallback$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_NOTIFY_1$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pfnNotifyCallback")));
    static final java.lang.invoke.VarHandle _SERVICE_NOTIFY_1$pfnNotifyCallback$VH() { return _SERVICE_NOTIFY_1$pfnNotifyCallback$VH_; }

    static final MemoryLayout _SERVICE_NOTIFY_1$pContext$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_NOTIFY_1$pContext$LAYOUT() { return _SERVICE_NOTIFY_1$pContext$LAYOUT_; }

    static final VarHandle _SERVICE_NOTIFY_1$pContext$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_NOTIFY_1$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pContext")));
    static final java.lang.invoke.VarHandle _SERVICE_NOTIFY_1$pContext$VH() { return _SERVICE_NOTIFY_1$pContext$VH_; }

    static final MemoryLayout _SERVICE_NOTIFY_1$dwNotificationStatus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_NOTIFY_1$dwNotificationStatus$LAYOUT() { return _SERVICE_NOTIFY_1$dwNotificationStatus$LAYOUT_; }

    static final VarHandle _SERVICE_NOTIFY_1$dwNotificationStatus$VH_ = _SERVICE_NOTIFY_1$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwNotificationStatus"));
    static final java.lang.invoke.VarHandle _SERVICE_NOTIFY_1$dwNotificationStatus$VH() { return _SERVICE_NOTIFY_1$dwNotificationStatus$VH_; }

    static final MemoryLayout _SERVICE_NOTIFY_2A$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwVersion"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pfnNotifyCallback"),
        C_POINTER.withName("pContext"),
        C_LONG.withName("dwNotificationStatus"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwServiceType"),
            C_LONG.withName("dwCurrentState"),
            C_LONG.withName("dwControlsAccepted"),
            C_LONG.withName("dwWin32ExitCode"),
            C_LONG.withName("dwServiceSpecificExitCode"),
            C_LONG.withName("dwCheckPoint"),
            C_LONG.withName("dwWaitHint"),
            C_LONG.withName("dwProcessId"),
            C_LONG.withName("dwServiceFlags")
        ).withName("ServiceStatus"),
        C_LONG.withName("dwNotificationTriggered"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pszServiceNames")
    ).withName("_SERVICE_NOTIFY_2A");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_NOTIFY_2A$struct$LAYOUT() { return _SERVICE_NOTIFY_2A$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_NOTIFY_2A$dwVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_NOTIFY_2A$dwVersion$LAYOUT() { return _SERVICE_NOTIFY_2A$dwVersion$LAYOUT_; }

    static final VarHandle _SERVICE_NOTIFY_2A$dwVersion$VH_ = _SERVICE_NOTIFY_2A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersion"));
    static final java.lang.invoke.VarHandle _SERVICE_NOTIFY_2A$dwVersion$VH() { return _SERVICE_NOTIFY_2A$dwVersion$VH_; }

    static final MemoryLayout _SERVICE_NOTIFY_2A$pfnNotifyCallback$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_NOTIFY_2A$pfnNotifyCallback$LAYOUT() { return _SERVICE_NOTIFY_2A$pfnNotifyCallback$LAYOUT_; }

    static final VarHandle _SERVICE_NOTIFY_2A$pfnNotifyCallback$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_NOTIFY_2A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pfnNotifyCallback")));
    static final java.lang.invoke.VarHandle _SERVICE_NOTIFY_2A$pfnNotifyCallback$VH() { return _SERVICE_NOTIFY_2A$pfnNotifyCallback$VH_; }

    static final MemoryLayout _SERVICE_NOTIFY_2A$pContext$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_NOTIFY_2A$pContext$LAYOUT() { return _SERVICE_NOTIFY_2A$pContext$LAYOUT_; }

    static final VarHandle _SERVICE_NOTIFY_2A$pContext$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_NOTIFY_2A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pContext")));
    static final java.lang.invoke.VarHandle _SERVICE_NOTIFY_2A$pContext$VH() { return _SERVICE_NOTIFY_2A$pContext$VH_; }

    static final MemoryLayout _SERVICE_NOTIFY_2A$dwNotificationStatus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_NOTIFY_2A$dwNotificationStatus$LAYOUT() { return _SERVICE_NOTIFY_2A$dwNotificationStatus$LAYOUT_; }

    static final VarHandle _SERVICE_NOTIFY_2A$dwNotificationStatus$VH_ = _SERVICE_NOTIFY_2A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwNotificationStatus"));
    static final java.lang.invoke.VarHandle _SERVICE_NOTIFY_2A$dwNotificationStatus$VH() { return _SERVICE_NOTIFY_2A$dwNotificationStatus$VH_; }

    static final MemoryLayout _SERVICE_NOTIFY_2A$dwNotificationTriggered$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_NOTIFY_2A$dwNotificationTriggered$LAYOUT() { return _SERVICE_NOTIFY_2A$dwNotificationTriggered$LAYOUT_; }

    static final VarHandle _SERVICE_NOTIFY_2A$dwNotificationTriggered$VH_ = _SERVICE_NOTIFY_2A$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwNotificationTriggered"));
    static final java.lang.invoke.VarHandle _SERVICE_NOTIFY_2A$dwNotificationTriggered$VH() { return _SERVICE_NOTIFY_2A$dwNotificationTriggered$VH_; }

    static final MemoryLayout _SERVICE_NOTIFY_2A$pszServiceNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_NOTIFY_2A$pszServiceNames$LAYOUT() { return _SERVICE_NOTIFY_2A$pszServiceNames$LAYOUT_; }

    static final VarHandle _SERVICE_NOTIFY_2A$pszServiceNames$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_NOTIFY_2A$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszServiceNames")));
    static final java.lang.invoke.VarHandle _SERVICE_NOTIFY_2A$pszServiceNames$VH() { return _SERVICE_NOTIFY_2A$pszServiceNames$VH_; }

    static final MemoryLayout _SERVICE_NOTIFY_2W$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwVersion"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pfnNotifyCallback"),
        C_POINTER.withName("pContext"),
        C_LONG.withName("dwNotificationStatus"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwServiceType"),
            C_LONG.withName("dwCurrentState"),
            C_LONG.withName("dwControlsAccepted"),
            C_LONG.withName("dwWin32ExitCode"),
            C_LONG.withName("dwServiceSpecificExitCode"),
            C_LONG.withName("dwCheckPoint"),
            C_LONG.withName("dwWaitHint"),
            C_LONG.withName("dwProcessId"),
            C_LONG.withName("dwServiceFlags")
        ).withName("ServiceStatus"),
        C_LONG.withName("dwNotificationTriggered"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pszServiceNames")
    ).withName("_SERVICE_NOTIFY_2W");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_NOTIFY_2W$struct$LAYOUT() { return _SERVICE_NOTIFY_2W$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_NOTIFY_2W$dwVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_NOTIFY_2W$dwVersion$LAYOUT() { return _SERVICE_NOTIFY_2W$dwVersion$LAYOUT_; }

    static final VarHandle _SERVICE_NOTIFY_2W$dwVersion$VH_ = _SERVICE_NOTIFY_2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersion"));
    static final java.lang.invoke.VarHandle _SERVICE_NOTIFY_2W$dwVersion$VH() { return _SERVICE_NOTIFY_2W$dwVersion$VH_; }

    static final MemoryLayout _SERVICE_NOTIFY_2W$pfnNotifyCallback$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_NOTIFY_2W$pfnNotifyCallback$LAYOUT() { return _SERVICE_NOTIFY_2W$pfnNotifyCallback$LAYOUT_; }

    static final VarHandle _SERVICE_NOTIFY_2W$pfnNotifyCallback$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_NOTIFY_2W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pfnNotifyCallback")));
    static final java.lang.invoke.VarHandle _SERVICE_NOTIFY_2W$pfnNotifyCallback$VH() { return _SERVICE_NOTIFY_2W$pfnNotifyCallback$VH_; }

    static final MemoryLayout _SERVICE_NOTIFY_2W$pContext$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_NOTIFY_2W$pContext$LAYOUT() { return _SERVICE_NOTIFY_2W$pContext$LAYOUT_; }

    static final VarHandle _SERVICE_NOTIFY_2W$pContext$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_NOTIFY_2W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pContext")));
    static final java.lang.invoke.VarHandle _SERVICE_NOTIFY_2W$pContext$VH() { return _SERVICE_NOTIFY_2W$pContext$VH_; }

    static final MemoryLayout _SERVICE_NOTIFY_2W$dwNotificationStatus$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_NOTIFY_2W$dwNotificationStatus$LAYOUT() { return _SERVICE_NOTIFY_2W$dwNotificationStatus$LAYOUT_; }

    static final VarHandle _SERVICE_NOTIFY_2W$dwNotificationStatus$VH_ = _SERVICE_NOTIFY_2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwNotificationStatus"));
    static final java.lang.invoke.VarHandle _SERVICE_NOTIFY_2W$dwNotificationStatus$VH() { return _SERVICE_NOTIFY_2W$dwNotificationStatus$VH_; }

    static final MemoryLayout _SERVICE_NOTIFY_2W$dwNotificationTriggered$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_NOTIFY_2W$dwNotificationTriggered$LAYOUT() { return _SERVICE_NOTIFY_2W$dwNotificationTriggered$LAYOUT_; }

    static final VarHandle _SERVICE_NOTIFY_2W$dwNotificationTriggered$VH_ = _SERVICE_NOTIFY_2W$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwNotificationTriggered"));
    static final java.lang.invoke.VarHandle _SERVICE_NOTIFY_2W$dwNotificationTriggered$VH() { return _SERVICE_NOTIFY_2W$dwNotificationTriggered$VH_; }

    static final MemoryLayout _SERVICE_NOTIFY_2W$pszServiceNames$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_NOTIFY_2W$pszServiceNames$LAYOUT() { return _SERVICE_NOTIFY_2W$pszServiceNames$LAYOUT_; }

    static final VarHandle _SERVICE_NOTIFY_2W$pszServiceNames$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_NOTIFY_2W$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszServiceNames")));
    static final java.lang.invoke.VarHandle _SERVICE_NOTIFY_2W$pszServiceNames$VH() { return _SERVICE_NOTIFY_2W$pszServiceNames$VH_; }

    static final MemoryLayout _SERVICE_CONTROL_STATUS_REASON_PARAMSA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwReason"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pszComment"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwServiceType"),
            C_LONG.withName("dwCurrentState"),
            C_LONG.withName("dwControlsAccepted"),
            C_LONG.withName("dwWin32ExitCode"),
            C_LONG.withName("dwServiceSpecificExitCode"),
            C_LONG.withName("dwCheckPoint"),
            C_LONG.withName("dwWaitHint"),
            C_LONG.withName("dwProcessId"),
            C_LONG.withName("dwServiceFlags")
        ).withName("ServiceStatus"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_SERVICE_CONTROL_STATUS_REASON_PARAMSA");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_CONTROL_STATUS_REASON_PARAMSA$struct$LAYOUT() { return _SERVICE_CONTROL_STATUS_REASON_PARAMSA$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_CONTROL_STATUS_REASON_PARAMSA$dwReason$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_CONTROL_STATUS_REASON_PARAMSA$dwReason$LAYOUT() { return _SERVICE_CONTROL_STATUS_REASON_PARAMSA$dwReason$LAYOUT_; }

    static final VarHandle _SERVICE_CONTROL_STATUS_REASON_PARAMSA$dwReason$VH_ = _SERVICE_CONTROL_STATUS_REASON_PARAMSA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReason"));
    static final java.lang.invoke.VarHandle _SERVICE_CONTROL_STATUS_REASON_PARAMSA$dwReason$VH() { return _SERVICE_CONTROL_STATUS_REASON_PARAMSA$dwReason$VH_; }

    static final MemoryLayout _SERVICE_CONTROL_STATUS_REASON_PARAMSA$pszComment$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_CONTROL_STATUS_REASON_PARAMSA$pszComment$LAYOUT() { return _SERVICE_CONTROL_STATUS_REASON_PARAMSA$pszComment$LAYOUT_; }

    static final VarHandle _SERVICE_CONTROL_STATUS_REASON_PARAMSA$pszComment$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_CONTROL_STATUS_REASON_PARAMSA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszComment")));
    static final java.lang.invoke.VarHandle _SERVICE_CONTROL_STATUS_REASON_PARAMSA$pszComment$VH() { return _SERVICE_CONTROL_STATUS_REASON_PARAMSA$pszComment$VH_; }

    static final MemoryLayout _SERVICE_CONTROL_STATUS_REASON_PARAMSW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwReason"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("pszComment"),
        MemoryLayout.ofStruct(
            C_LONG.withName("dwServiceType"),
            C_LONG.withName("dwCurrentState"),
            C_LONG.withName("dwControlsAccepted"),
            C_LONG.withName("dwWin32ExitCode"),
            C_LONG.withName("dwServiceSpecificExitCode"),
            C_LONG.withName("dwCheckPoint"),
            C_LONG.withName("dwWaitHint"),
            C_LONG.withName("dwProcessId"),
            C_LONG.withName("dwServiceFlags")
        ).withName("ServiceStatus"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_SERVICE_CONTROL_STATUS_REASON_PARAMSW");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_CONTROL_STATUS_REASON_PARAMSW$struct$LAYOUT() { return _SERVICE_CONTROL_STATUS_REASON_PARAMSW$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_CONTROL_STATUS_REASON_PARAMSW$dwReason$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_CONTROL_STATUS_REASON_PARAMSW$dwReason$LAYOUT() { return _SERVICE_CONTROL_STATUS_REASON_PARAMSW$dwReason$LAYOUT_; }

    static final VarHandle _SERVICE_CONTROL_STATUS_REASON_PARAMSW$dwReason$VH_ = _SERVICE_CONTROL_STATUS_REASON_PARAMSW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReason"));
    static final java.lang.invoke.VarHandle _SERVICE_CONTROL_STATUS_REASON_PARAMSW$dwReason$VH() { return _SERVICE_CONTROL_STATUS_REASON_PARAMSW$dwReason$VH_; }

    static final MemoryLayout _SERVICE_CONTROL_STATUS_REASON_PARAMSW$pszComment$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_CONTROL_STATUS_REASON_PARAMSW$pszComment$LAYOUT() { return _SERVICE_CONTROL_STATUS_REASON_PARAMSW$pszComment$LAYOUT_; }

    static final VarHandle _SERVICE_CONTROL_STATUS_REASON_PARAMSW$pszComment$VH_ = MemoryHandles.asAddressVarHandle(_SERVICE_CONTROL_STATUS_REASON_PARAMSW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pszComment")));
    static final java.lang.invoke.VarHandle _SERVICE_CONTROL_STATUS_REASON_PARAMSW$pszComment$VH() { return _SERVICE_CONTROL_STATUS_REASON_PARAMSW$pszComment$VH_; }

    static final MemoryLayout _SERVICE_START_REASON$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwReason")
    ).withName("_SERVICE_START_REASON");
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_START_REASON$struct$LAYOUT() { return _SERVICE_START_REASON$struct$LAYOUT_; }

    static final MemoryLayout _SERVICE_START_REASON$dwReason$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SERVICE_START_REASON$dwReason$LAYOUT() { return _SERVICE_START_REASON$dwReason$LAYOUT_; }

    static final VarHandle _SERVICE_START_REASON$dwReason$VH_ = _SERVICE_START_REASON$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwReason"));
    static final java.lang.invoke.VarHandle _SERVICE_START_REASON$dwReason$VH() { return _SERVICE_START_REASON$dwReason$VH_; }

    static final FunctionDescriptor ChangeServiceConfigA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ChangeServiceConfigA$FUNC() { return ChangeServiceConfigA$FUNC_; }

    static final MethodHandle ChangeServiceConfigA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ChangeServiceConfigA",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ChangeServiceConfigA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ChangeServiceConfigA$MH() { return ChangeServiceConfigA$MH_; }

    static final FunctionDescriptor ChangeServiceConfigW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ChangeServiceConfigW$FUNC() { return ChangeServiceConfigW$FUNC_; }

    static final MethodHandle ChangeServiceConfigW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ChangeServiceConfigW",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ChangeServiceConfigW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ChangeServiceConfigW$MH() { return ChangeServiceConfigW$MH_; }

    static final FunctionDescriptor ChangeServiceConfig2A$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ChangeServiceConfig2A$FUNC() { return ChangeServiceConfig2A$FUNC_; }

    static final MethodHandle ChangeServiceConfig2A$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ChangeServiceConfig2A",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ChangeServiceConfig2A$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ChangeServiceConfig2A$MH() { return ChangeServiceConfig2A$MH_; }

    static final FunctionDescriptor ChangeServiceConfig2W$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ChangeServiceConfig2W$FUNC() { return ChangeServiceConfig2W$FUNC_; }

    static final MethodHandle ChangeServiceConfig2W$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ChangeServiceConfig2W",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ChangeServiceConfig2W$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ChangeServiceConfig2W$MH() { return ChangeServiceConfig2W$MH_; }

    static final FunctionDescriptor CloseServiceHandle$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CloseServiceHandle$FUNC() { return CloseServiceHandle$FUNC_; }

    static final MethodHandle CloseServiceHandle$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CloseServiceHandle",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        CloseServiceHandle$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CloseServiceHandle$MH() { return CloseServiceHandle$MH_; }

    static final FunctionDescriptor ControlService$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ControlService$FUNC() { return ControlService$FUNC_; }

    static final MethodHandle ControlService$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ControlService",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ControlService$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ControlService$MH() { return ControlService$MH_; }

    static final FunctionDescriptor CreateServiceA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CreateServiceA$FUNC() { return CreateServiceA$FUNC_; }

    static final MethodHandle CreateServiceA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateServiceA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IIIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CreateServiceA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CreateServiceA$MH() { return CreateServiceA$MH_; }

    static final FunctionDescriptor CreateServiceW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CreateServiceW$FUNC() { return CreateServiceW$FUNC_; }

    static final MethodHandle CreateServiceW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateServiceW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IIIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CreateServiceW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CreateServiceW$MH() { return CreateServiceW$MH_; }

    static final FunctionDescriptor DeleteService$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeleteService$FUNC() { return DeleteService$FUNC_; }

    static final MethodHandle DeleteService$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeleteService",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        DeleteService$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeleteService$MH() { return DeleteService$MH_; }

    static final FunctionDescriptor EnumDependentServicesA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumDependentServicesA$FUNC() { return EnumDependentServicesA$FUNC_; }

    static final MethodHandle EnumDependentServicesA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumDependentServicesA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumDependentServicesA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumDependentServicesA$MH() { return EnumDependentServicesA$MH_; }

    static final FunctionDescriptor EnumDependentServicesW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumDependentServicesW$FUNC() { return EnumDependentServicesW$FUNC_; }

    static final MethodHandle EnumDependentServicesW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumDependentServicesW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumDependentServicesW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumDependentServicesW$MH() { return EnumDependentServicesW$MH_; }

    static final FunctionDescriptor EnumServicesStatusA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumServicesStatusA$FUNC() { return EnumServicesStatusA$FUNC_; }

    static final MethodHandle EnumServicesStatusA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumServicesStatusA",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumServicesStatusA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumServicesStatusA$MH() { return EnumServicesStatusA$MH_; }

    static final FunctionDescriptor EnumServicesStatusW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumServicesStatusW$FUNC() { return EnumServicesStatusW$FUNC_; }

    static final MethodHandle EnumServicesStatusW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumServicesStatusW",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumServicesStatusW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumServicesStatusW$MH() { return EnumServicesStatusW$MH_; }

    static final FunctionDescriptor EnumServicesStatusExA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumServicesStatusExA$FUNC() { return EnumServicesStatusExA$FUNC_; }

    static final MethodHandle EnumServicesStatusExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumServicesStatusExA",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumServicesStatusExA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumServicesStatusExA$MH() { return EnumServicesStatusExA$MH_; }

    static final FunctionDescriptor EnumServicesStatusExW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnumServicesStatusExW$FUNC() { return EnumServicesStatusExW$FUNC_; }

    static final MethodHandle EnumServicesStatusExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnumServicesStatusExW",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        EnumServicesStatusExW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnumServicesStatusExW$MH() { return EnumServicesStatusExW$MH_; }

    static final FunctionDescriptor GetServiceKeyNameA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetServiceKeyNameA$FUNC() { return GetServiceKeyNameA$FUNC_; }

    static final MethodHandle GetServiceKeyNameA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetServiceKeyNameA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        GetServiceKeyNameA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetServiceKeyNameA$MH() { return GetServiceKeyNameA$MH_; }

    static final FunctionDescriptor GetServiceKeyNameW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetServiceKeyNameW$FUNC() { return GetServiceKeyNameW$FUNC_; }

    static final MethodHandle GetServiceKeyNameW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetServiceKeyNameW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        GetServiceKeyNameW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetServiceKeyNameW$MH() { return GetServiceKeyNameW$MH_; }

    static final FunctionDescriptor GetServiceDisplayNameA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetServiceDisplayNameA$FUNC() { return GetServiceDisplayNameA$FUNC_; }

    static final MethodHandle GetServiceDisplayNameA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetServiceDisplayNameA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        GetServiceDisplayNameA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetServiceDisplayNameA$MH() { return GetServiceDisplayNameA$MH_; }

    static final FunctionDescriptor GetServiceDisplayNameW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetServiceDisplayNameW$FUNC() { return GetServiceDisplayNameW$FUNC_; }

    static final MethodHandle GetServiceDisplayNameW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetServiceDisplayNameW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        GetServiceDisplayNameW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetServiceDisplayNameW$MH() { return GetServiceDisplayNameW$MH_; }

    static final FunctionDescriptor LockServiceDatabase$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor LockServiceDatabase$FUNC() { return LockServiceDatabase$FUNC_; }

    static final MethodHandle LockServiceDatabase$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "LockServiceDatabase",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        LockServiceDatabase$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle LockServiceDatabase$MH() { return LockServiceDatabase$MH_; }

    static final FunctionDescriptor NotifyBootConfigStatus$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor NotifyBootConfigStatus$FUNC() { return NotifyBootConfigStatus$FUNC_; }

    static final MethodHandle NotifyBootConfigStatus$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "NotifyBootConfigStatus",
        "(I)I",
        NotifyBootConfigStatus$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle NotifyBootConfigStatus$MH() { return NotifyBootConfigStatus$MH_; }

    static final FunctionDescriptor OpenSCManagerA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor OpenSCManagerA$FUNC() { return OpenSCManagerA$FUNC_; }

    static final MethodHandle OpenSCManagerA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "OpenSCManagerA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        OpenSCManagerA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle OpenSCManagerA$MH() { return OpenSCManagerA$MH_; }

    static final FunctionDescriptor OpenSCManagerW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor OpenSCManagerW$FUNC() { return OpenSCManagerW$FUNC_; }

    static final MethodHandle OpenSCManagerW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "OpenSCManagerW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        OpenSCManagerW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle OpenSCManagerW$MH() { return OpenSCManagerW$MH_; }

    static final FunctionDescriptor OpenServiceA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor OpenServiceA$FUNC() { return OpenServiceA$FUNC_; }

    static final MethodHandle OpenServiceA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "OpenServiceA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        OpenServiceA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle OpenServiceA$MH() { return OpenServiceA$MH_; }

    static final FunctionDescriptor OpenServiceW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor OpenServiceW$FUNC() { return OpenServiceW$FUNC_; }

    static final MethodHandle OpenServiceW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "OpenServiceW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        OpenServiceW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle OpenServiceW$MH() { return OpenServiceW$MH_; }

    static final FunctionDescriptor QueryServiceConfigA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor QueryServiceConfigA$FUNC() { return QueryServiceConfigA$FUNC_; }

    static final MethodHandle QueryServiceConfigA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "QueryServiceConfigA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        QueryServiceConfigA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle QueryServiceConfigA$MH() { return QueryServiceConfigA$MH_; }

    static final FunctionDescriptor QueryServiceConfigW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor QueryServiceConfigW$FUNC() { return QueryServiceConfigW$FUNC_; }

    static final MethodHandle QueryServiceConfigW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "QueryServiceConfigW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        QueryServiceConfigW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle QueryServiceConfigW$MH() { return QueryServiceConfigW$MH_; }

    static final FunctionDescriptor QueryServiceConfig2A$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor QueryServiceConfig2A$FUNC() { return QueryServiceConfig2A$FUNC_; }

    static final MethodHandle QueryServiceConfig2A$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "QueryServiceConfig2A",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        QueryServiceConfig2A$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle QueryServiceConfig2A$MH() { return QueryServiceConfig2A$MH_; }

    static final FunctionDescriptor QueryServiceConfig2W$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor QueryServiceConfig2W$FUNC() { return QueryServiceConfig2W$FUNC_; }

    static final MethodHandle QueryServiceConfig2W$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "QueryServiceConfig2W",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        QueryServiceConfig2W$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle QueryServiceConfig2W$MH() { return QueryServiceConfig2W$MH_; }

    static final FunctionDescriptor QueryServiceLockStatusA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor QueryServiceLockStatusA$FUNC() { return QueryServiceLockStatusA$FUNC_; }

    static final MethodHandle QueryServiceLockStatusA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "QueryServiceLockStatusA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        QueryServiceLockStatusA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle QueryServiceLockStatusA$MH() { return QueryServiceLockStatusA$MH_; }

    static final FunctionDescriptor QueryServiceLockStatusW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor QueryServiceLockStatusW$FUNC() { return QueryServiceLockStatusW$FUNC_; }

    static final MethodHandle QueryServiceLockStatusW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "QueryServiceLockStatusW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        QueryServiceLockStatusW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle QueryServiceLockStatusW$MH() { return QueryServiceLockStatusW$MH_; }

    static final FunctionDescriptor QueryServiceObjectSecurity$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor QueryServiceObjectSecurity$FUNC() { return QueryServiceObjectSecurity$FUNC_; }

    static final MethodHandle QueryServiceObjectSecurity$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "QueryServiceObjectSecurity",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        QueryServiceObjectSecurity$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle QueryServiceObjectSecurity$MH() { return QueryServiceObjectSecurity$MH_; }

    static final FunctionDescriptor QueryServiceStatus$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor QueryServiceStatus$FUNC() { return QueryServiceStatus$FUNC_; }

    static final MethodHandle QueryServiceStatus$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "QueryServiceStatus",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        QueryServiceStatus$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle QueryServiceStatus$MH() { return QueryServiceStatus$MH_; }

    static final FunctionDescriptor QueryServiceStatusEx$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor QueryServiceStatusEx$FUNC() { return QueryServiceStatusEx$FUNC_; }

    static final MethodHandle QueryServiceStatusEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "QueryServiceStatusEx",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        QueryServiceStatusEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle QueryServiceStatusEx$MH() { return QueryServiceStatusEx$MH_; }

    static final FunctionDescriptor RegisterServiceCtrlHandlerA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RegisterServiceCtrlHandlerA$FUNC() { return RegisterServiceCtrlHandlerA$FUNC_; }

    static final MethodHandle RegisterServiceCtrlHandlerA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RegisterServiceCtrlHandlerA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        RegisterServiceCtrlHandlerA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RegisterServiceCtrlHandlerA$MH() { return RegisterServiceCtrlHandlerA$MH_; }

    static final FunctionDescriptor RegisterServiceCtrlHandlerA$lpHandlerProc$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RegisterServiceCtrlHandlerA$lpHandlerProc$FUNC() { return RegisterServiceCtrlHandlerA$lpHandlerProc$FUNC_; }

    static final FunctionDescriptor RegisterServiceCtrlHandlerW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RegisterServiceCtrlHandlerW$FUNC() { return RegisterServiceCtrlHandlerW$FUNC_; }

    static final MethodHandle RegisterServiceCtrlHandlerW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RegisterServiceCtrlHandlerW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        RegisterServiceCtrlHandlerW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RegisterServiceCtrlHandlerW$MH() { return RegisterServiceCtrlHandlerW$MH_; }

    static final FunctionDescriptor RegisterServiceCtrlHandlerW$lpHandlerProc$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RegisterServiceCtrlHandlerW$lpHandlerProc$FUNC() { return RegisterServiceCtrlHandlerW$lpHandlerProc$FUNC_; }

    static final FunctionDescriptor RegisterServiceCtrlHandlerExA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RegisterServiceCtrlHandlerExA$FUNC() { return RegisterServiceCtrlHandlerExA$FUNC_; }

    static final MethodHandle RegisterServiceCtrlHandlerExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RegisterServiceCtrlHandlerExA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        RegisterServiceCtrlHandlerExA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RegisterServiceCtrlHandlerExA$MH() { return RegisterServiceCtrlHandlerExA$MH_; }

    static final FunctionDescriptor RegisterServiceCtrlHandlerExA$lpHandlerProc$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RegisterServiceCtrlHandlerExA$lpHandlerProc$FUNC() { return RegisterServiceCtrlHandlerExA$lpHandlerProc$FUNC_; }

    static final FunctionDescriptor RegisterServiceCtrlHandlerExW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RegisterServiceCtrlHandlerExW$FUNC() { return RegisterServiceCtrlHandlerExW$FUNC_; }

    static final MethodHandle RegisterServiceCtrlHandlerExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RegisterServiceCtrlHandlerExW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        RegisterServiceCtrlHandlerExW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RegisterServiceCtrlHandlerExW$MH() { return RegisterServiceCtrlHandlerExW$MH_; }

    static final FunctionDescriptor RegisterServiceCtrlHandlerExW$lpHandlerProc$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RegisterServiceCtrlHandlerExW$lpHandlerProc$FUNC() { return RegisterServiceCtrlHandlerExW$lpHandlerProc$FUNC_; }

    static final FunctionDescriptor SetServiceObjectSecurity$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SetServiceObjectSecurity$FUNC() { return SetServiceObjectSecurity$FUNC_; }

    static final MethodHandle SetServiceObjectSecurity$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetServiceObjectSecurity",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        SetServiceObjectSecurity$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SetServiceObjectSecurity$MH() { return SetServiceObjectSecurity$MH_; }

    static final FunctionDescriptor SetServiceStatus$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SetServiceStatus$FUNC() { return SetServiceStatus$FUNC_; }

    static final MethodHandle SetServiceStatus$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetServiceStatus",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SetServiceStatus$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SetServiceStatus$MH() { return SetServiceStatus$MH_; }

    static final FunctionDescriptor StartServiceCtrlDispatcherA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor StartServiceCtrlDispatcherA$FUNC() { return StartServiceCtrlDispatcherA$FUNC_; }

    static final MethodHandle StartServiceCtrlDispatcherA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "StartServiceCtrlDispatcherA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        StartServiceCtrlDispatcherA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle StartServiceCtrlDispatcherA$MH() { return StartServiceCtrlDispatcherA$MH_; }

    static final FunctionDescriptor StartServiceCtrlDispatcherW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor StartServiceCtrlDispatcherW$FUNC() { return StartServiceCtrlDispatcherW$FUNC_; }

    static final MethodHandle StartServiceCtrlDispatcherW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "StartServiceCtrlDispatcherW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        StartServiceCtrlDispatcherW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle StartServiceCtrlDispatcherW$MH() { return StartServiceCtrlDispatcherW$MH_; }

    static final FunctionDescriptor StartServiceA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor StartServiceA$FUNC() { return StartServiceA$FUNC_; }

    static final MethodHandle StartServiceA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "StartServiceA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        StartServiceA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle StartServiceA$MH() { return StartServiceA$MH_; }

    static final FunctionDescriptor StartServiceW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor StartServiceW$FUNC() { return StartServiceW$FUNC_; }

    static final MethodHandle StartServiceW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "StartServiceW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        StartServiceW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle StartServiceW$MH() { return StartServiceW$MH_; }

    static final FunctionDescriptor UnlockServiceDatabase$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor UnlockServiceDatabase$FUNC() { return UnlockServiceDatabase$FUNC_; }

    static final MethodHandle UnlockServiceDatabase$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "UnlockServiceDatabase",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        UnlockServiceDatabase$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle UnlockServiceDatabase$MH() { return UnlockServiceDatabase$MH_; }

    static final FunctionDescriptor NotifyServiceStatusChangeA$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor NotifyServiceStatusChangeA$FUNC() { return NotifyServiceStatusChangeA$FUNC_; }

    static final MethodHandle NotifyServiceStatusChangeA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "NotifyServiceStatusChangeA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        NotifyServiceStatusChangeA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle NotifyServiceStatusChangeA$MH() { return NotifyServiceStatusChangeA$MH_; }

    static final FunctionDescriptor NotifyServiceStatusChangeW$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor NotifyServiceStatusChangeW$FUNC() { return NotifyServiceStatusChangeW$FUNC_; }

    static final MethodHandle NotifyServiceStatusChangeW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "NotifyServiceStatusChangeW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        NotifyServiceStatusChangeW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle NotifyServiceStatusChangeW$MH() { return NotifyServiceStatusChangeW$MH_; }

    static final FunctionDescriptor ControlServiceExA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ControlServiceExA$FUNC() { return ControlServiceExA$FUNC_; }

    static final MethodHandle ControlServiceExA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ControlServiceExA",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        ControlServiceExA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ControlServiceExA$MH() { return ControlServiceExA$MH_; }

    static final FunctionDescriptor ControlServiceExW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ControlServiceExW$FUNC() { return ControlServiceExW$FUNC_; }

    static final MethodHandle ControlServiceExW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ControlServiceExW",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        ControlServiceExW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ControlServiceExW$MH() { return ControlServiceExW$MH_; }

    static final FunctionDescriptor QueryServiceDynamicInformation$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor QueryServiceDynamicInformation$FUNC() { return QueryServiceDynamicInformation$FUNC_; }

    static final MethodHandle QueryServiceDynamicInformation$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "QueryServiceDynamicInformation",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        QueryServiceDynamicInformation$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle QueryServiceDynamicInformation$MH() { return QueryServiceDynamicInformation$MH_; }

    static final int SC_EVENT_DATABASE_CHANGE() { return (int)0L; }

    static final int SC_EVENT_PROPERTY_CHANGE() { return (int)1L; }

    static final int SC_EVENT_STATUS_CHANGE() { return (int)2L; }

    static final FunctionDescriptor SubscribeServiceChangeNotifications$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SubscribeServiceChangeNotifications$FUNC() { return SubscribeServiceChangeNotifications$FUNC_; }

    static final MethodHandle SubscribeServiceChangeNotifications$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SubscribeServiceChangeNotifications",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        SubscribeServiceChangeNotifications$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SubscribeServiceChangeNotifications$MH() { return SubscribeServiceChangeNotifications$MH_; }

    static final FunctionDescriptor SubscribeServiceChangeNotifications$pCallback$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor SubscribeServiceChangeNotifications$pCallback$FUNC() { return SubscribeServiceChangeNotifications$pCallback$FUNC_; }

    static final FunctionDescriptor UnsubscribeServiceChangeNotifications$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor UnsubscribeServiceChangeNotifications$FUNC() { return UnsubscribeServiceChangeNotifications$FUNC_; }

    static final MethodHandle UnsubscribeServiceChangeNotifications$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "UnsubscribeServiceChangeNotifications",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        UnsubscribeServiceChangeNotifications$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle UnsubscribeServiceChangeNotifications$MH() { return UnsubscribeServiceChangeNotifications$MH_; }

    static final FunctionDescriptor WaitServiceState$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor WaitServiceState$FUNC() { return WaitServiceState$FUNC_; }

    static final MethodHandle WaitServiceState$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WaitServiceState",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        WaitServiceState$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WaitServiceState$MH() { return WaitServiceState$MH_; }

    static final int ServiceRegistryStateParameters() { return (int)0L; }

    static final int ServiceRegistryStatePersistent() { return (int)1L; }

    static final int MaxServiceRegistryStateType() { return (int)2L; }

    static final FunctionDescriptor GetServiceRegistryStateKey$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetServiceRegistryStateKey$FUNC() { return GetServiceRegistryStateKey$FUNC_; }

    static final MethodHandle GetServiceRegistryStateKey$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetServiceRegistryStateKey",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        GetServiceRegistryStateKey$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetServiceRegistryStateKey$MH() { return GetServiceRegistryStateKey$MH_; }

    static final int ServiceDirectoryPersistentState() { return (int)0L; }

    static final int ServiceDirectoryTypeMax() { return (int)1L; }

    static final FunctionDescriptor GetServiceDirectory$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetServiceDirectory$FUNC() { return GetServiceDirectory$FUNC_; }

    static final MethodHandle GetServiceDirectory$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetServiceDirectory",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        GetServiceDirectory$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetServiceDirectory$MH() { return GetServiceDirectory$MH_; }

    static final MemoryLayout _MODEMDEVCAPS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwActualSize"),
        C_LONG.withName("dwRequiredSize"),
        C_LONG.withName("dwDevSpecificOffset"),
        C_LONG.withName("dwDevSpecificSize"),
        C_LONG.withName("dwModemProviderVersion"),
        C_LONG.withName("dwModemManufacturerOffset"),
        C_LONG.withName("dwModemManufacturerSize"),
        C_LONG.withName("dwModemModelOffset"),
        C_LONG.withName("dwModemModelSize"),
        C_LONG.withName("dwModemVersionOffset"),
        C_LONG.withName("dwModemVersionSize"),
        C_LONG.withName("dwDialOptions"),
        C_LONG.withName("dwCallSetupFailTimer"),
        C_LONG.withName("dwInactivityTimeout"),
        C_LONG.withName("dwSpeakerVolume"),
        C_LONG.withName("dwSpeakerMode"),
        C_LONG.withName("dwModemOptions"),
        C_LONG.withName("dwMaxDTERate"),
        C_LONG.withName("dwMaxDCERate"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("abVariablePortion"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("_MODEMDEVCAPS");
    static final jdk.incubator.foreign.MemoryLayout _MODEMDEVCAPS$struct$LAYOUT() { return _MODEMDEVCAPS$struct$LAYOUT_; }

    static final MemoryLayout _MODEMDEVCAPS$dwActualSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMDEVCAPS$dwActualSize$LAYOUT() { return _MODEMDEVCAPS$dwActualSize$LAYOUT_; }

    static final VarHandle _MODEMDEVCAPS$dwActualSize$VH_ = _MODEMDEVCAPS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwActualSize"));
    static final java.lang.invoke.VarHandle _MODEMDEVCAPS$dwActualSize$VH() { return _MODEMDEVCAPS$dwActualSize$VH_; }

    static final MemoryLayout _MODEMDEVCAPS$dwRequiredSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMDEVCAPS$dwRequiredSize$LAYOUT() { return _MODEMDEVCAPS$dwRequiredSize$LAYOUT_; }

    static final VarHandle _MODEMDEVCAPS$dwRequiredSize$VH_ = _MODEMDEVCAPS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRequiredSize"));
    static final java.lang.invoke.VarHandle _MODEMDEVCAPS$dwRequiredSize$VH() { return _MODEMDEVCAPS$dwRequiredSize$VH_; }

    static final MemoryLayout _MODEMDEVCAPS$dwDevSpecificOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMDEVCAPS$dwDevSpecificOffset$LAYOUT() { return _MODEMDEVCAPS$dwDevSpecificOffset$LAYOUT_; }

    static final VarHandle _MODEMDEVCAPS$dwDevSpecificOffset$VH_ = _MODEMDEVCAPS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwDevSpecificOffset"));
    static final java.lang.invoke.VarHandle _MODEMDEVCAPS$dwDevSpecificOffset$VH() { return _MODEMDEVCAPS$dwDevSpecificOffset$VH_; }

    static final MemoryLayout _MODEMDEVCAPS$dwDevSpecificSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMDEVCAPS$dwDevSpecificSize$LAYOUT() { return _MODEMDEVCAPS$dwDevSpecificSize$LAYOUT_; }

    static final VarHandle _MODEMDEVCAPS$dwDevSpecificSize$VH_ = _MODEMDEVCAPS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwDevSpecificSize"));
    static final java.lang.invoke.VarHandle _MODEMDEVCAPS$dwDevSpecificSize$VH() { return _MODEMDEVCAPS$dwDevSpecificSize$VH_; }

    static final MemoryLayout _MODEMDEVCAPS$dwModemProviderVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMDEVCAPS$dwModemProviderVersion$LAYOUT() { return _MODEMDEVCAPS$dwModemProviderVersion$LAYOUT_; }

    static final VarHandle _MODEMDEVCAPS$dwModemProviderVersion$VH_ = _MODEMDEVCAPS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwModemProviderVersion"));
    static final java.lang.invoke.VarHandle _MODEMDEVCAPS$dwModemProviderVersion$VH() { return _MODEMDEVCAPS$dwModemProviderVersion$VH_; }

    static final MemoryLayout _MODEMDEVCAPS$dwModemManufacturerOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMDEVCAPS$dwModemManufacturerOffset$LAYOUT() { return _MODEMDEVCAPS$dwModemManufacturerOffset$LAYOUT_; }

    static final VarHandle _MODEMDEVCAPS$dwModemManufacturerOffset$VH_ = _MODEMDEVCAPS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwModemManufacturerOffset"));
    static final java.lang.invoke.VarHandle _MODEMDEVCAPS$dwModemManufacturerOffset$VH() { return _MODEMDEVCAPS$dwModemManufacturerOffset$VH_; }

    static final MemoryLayout _MODEMDEVCAPS$dwModemManufacturerSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMDEVCAPS$dwModemManufacturerSize$LAYOUT() { return _MODEMDEVCAPS$dwModemManufacturerSize$LAYOUT_; }

    static final VarHandle _MODEMDEVCAPS$dwModemManufacturerSize$VH_ = _MODEMDEVCAPS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwModemManufacturerSize"));
    static final java.lang.invoke.VarHandle _MODEMDEVCAPS$dwModemManufacturerSize$VH() { return _MODEMDEVCAPS$dwModemManufacturerSize$VH_; }

    static final MemoryLayout _MODEMDEVCAPS$dwModemModelOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMDEVCAPS$dwModemModelOffset$LAYOUT() { return _MODEMDEVCAPS$dwModemModelOffset$LAYOUT_; }

    static final VarHandle _MODEMDEVCAPS$dwModemModelOffset$VH_ = _MODEMDEVCAPS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwModemModelOffset"));
    static final java.lang.invoke.VarHandle _MODEMDEVCAPS$dwModemModelOffset$VH() { return _MODEMDEVCAPS$dwModemModelOffset$VH_; }

    static final MemoryLayout _MODEMDEVCAPS$dwModemModelSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMDEVCAPS$dwModemModelSize$LAYOUT() { return _MODEMDEVCAPS$dwModemModelSize$LAYOUT_; }

    static final VarHandle _MODEMDEVCAPS$dwModemModelSize$VH_ = _MODEMDEVCAPS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwModemModelSize"));
    static final java.lang.invoke.VarHandle _MODEMDEVCAPS$dwModemModelSize$VH() { return _MODEMDEVCAPS$dwModemModelSize$VH_; }

    static final MemoryLayout _MODEMDEVCAPS$dwModemVersionOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMDEVCAPS$dwModemVersionOffset$LAYOUT() { return _MODEMDEVCAPS$dwModemVersionOffset$LAYOUT_; }

    static final VarHandle _MODEMDEVCAPS$dwModemVersionOffset$VH_ = _MODEMDEVCAPS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwModemVersionOffset"));
    static final java.lang.invoke.VarHandle _MODEMDEVCAPS$dwModemVersionOffset$VH() { return _MODEMDEVCAPS$dwModemVersionOffset$VH_; }

    static final MemoryLayout _MODEMDEVCAPS$dwModemVersionSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMDEVCAPS$dwModemVersionSize$LAYOUT() { return _MODEMDEVCAPS$dwModemVersionSize$LAYOUT_; }

    static final VarHandle _MODEMDEVCAPS$dwModemVersionSize$VH_ = _MODEMDEVCAPS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwModemVersionSize"));
    static final java.lang.invoke.VarHandle _MODEMDEVCAPS$dwModemVersionSize$VH() { return _MODEMDEVCAPS$dwModemVersionSize$VH_; }

    static final MemoryLayout _MODEMDEVCAPS$dwDialOptions$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMDEVCAPS$dwDialOptions$LAYOUT() { return _MODEMDEVCAPS$dwDialOptions$LAYOUT_; }

    static final VarHandle _MODEMDEVCAPS$dwDialOptions$VH_ = _MODEMDEVCAPS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwDialOptions"));
    static final java.lang.invoke.VarHandle _MODEMDEVCAPS$dwDialOptions$VH() { return _MODEMDEVCAPS$dwDialOptions$VH_; }

    static final MemoryLayout _MODEMDEVCAPS$dwCallSetupFailTimer$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMDEVCAPS$dwCallSetupFailTimer$LAYOUT() { return _MODEMDEVCAPS$dwCallSetupFailTimer$LAYOUT_; }

    static final VarHandle _MODEMDEVCAPS$dwCallSetupFailTimer$VH_ = _MODEMDEVCAPS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCallSetupFailTimer"));
    static final java.lang.invoke.VarHandle _MODEMDEVCAPS$dwCallSetupFailTimer$VH() { return _MODEMDEVCAPS$dwCallSetupFailTimer$VH_; }

    static final MemoryLayout _MODEMDEVCAPS$dwInactivityTimeout$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMDEVCAPS$dwInactivityTimeout$LAYOUT() { return _MODEMDEVCAPS$dwInactivityTimeout$LAYOUT_; }

    static final VarHandle _MODEMDEVCAPS$dwInactivityTimeout$VH_ = _MODEMDEVCAPS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwInactivityTimeout"));
    static final java.lang.invoke.VarHandle _MODEMDEVCAPS$dwInactivityTimeout$VH() { return _MODEMDEVCAPS$dwInactivityTimeout$VH_; }

    static final MemoryLayout _MODEMDEVCAPS$dwSpeakerVolume$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMDEVCAPS$dwSpeakerVolume$LAYOUT() { return _MODEMDEVCAPS$dwSpeakerVolume$LAYOUT_; }

    static final VarHandle _MODEMDEVCAPS$dwSpeakerVolume$VH_ = _MODEMDEVCAPS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSpeakerVolume"));
    static final java.lang.invoke.VarHandle _MODEMDEVCAPS$dwSpeakerVolume$VH() { return _MODEMDEVCAPS$dwSpeakerVolume$VH_; }

    static final MemoryLayout _MODEMDEVCAPS$dwSpeakerMode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMDEVCAPS$dwSpeakerMode$LAYOUT() { return _MODEMDEVCAPS$dwSpeakerMode$LAYOUT_; }

    static final VarHandle _MODEMDEVCAPS$dwSpeakerMode$VH_ = _MODEMDEVCAPS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSpeakerMode"));
    static final java.lang.invoke.VarHandle _MODEMDEVCAPS$dwSpeakerMode$VH() { return _MODEMDEVCAPS$dwSpeakerMode$VH_; }

    static final MemoryLayout _MODEMDEVCAPS$dwModemOptions$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMDEVCAPS$dwModemOptions$LAYOUT() { return _MODEMDEVCAPS$dwModemOptions$LAYOUT_; }

    static final VarHandle _MODEMDEVCAPS$dwModemOptions$VH_ = _MODEMDEVCAPS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwModemOptions"));
    static final java.lang.invoke.VarHandle _MODEMDEVCAPS$dwModemOptions$VH() { return _MODEMDEVCAPS$dwModemOptions$VH_; }

    static final MemoryLayout _MODEMDEVCAPS$dwMaxDTERate$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMDEVCAPS$dwMaxDTERate$LAYOUT() { return _MODEMDEVCAPS$dwMaxDTERate$LAYOUT_; }

    static final VarHandle _MODEMDEVCAPS$dwMaxDTERate$VH_ = _MODEMDEVCAPS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwMaxDTERate"));
    static final java.lang.invoke.VarHandle _MODEMDEVCAPS$dwMaxDTERate$VH() { return _MODEMDEVCAPS$dwMaxDTERate$VH_; }

    static final MemoryLayout _MODEMDEVCAPS$dwMaxDCERate$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMDEVCAPS$dwMaxDCERate$LAYOUT() { return _MODEMDEVCAPS$dwMaxDCERate$LAYOUT_; }

    static final VarHandle _MODEMDEVCAPS$dwMaxDCERate$VH_ = _MODEMDEVCAPS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwMaxDCERate"));
    static final java.lang.invoke.VarHandle _MODEMDEVCAPS$dwMaxDCERate$VH() { return _MODEMDEVCAPS$dwMaxDCERate$VH_; }

    static final MemoryLayout _MODEMSETTINGS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwActualSize"),
        C_LONG.withName("dwRequiredSize"),
        C_LONG.withName("dwDevSpecificOffset"),
        C_LONG.withName("dwDevSpecificSize"),
        C_LONG.withName("dwCallSetupFailTimer"),
        C_LONG.withName("dwInactivityTimeout"),
        C_LONG.withName("dwSpeakerVolume"),
        C_LONG.withName("dwSpeakerMode"),
        C_LONG.withName("dwPreferredModemOptions"),
        C_LONG.withName("dwNegotiatedModemOptions"),
        C_LONG.withName("dwNegotiatedDCERate"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("abVariablePortion"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("_MODEMSETTINGS");
    static final jdk.incubator.foreign.MemoryLayout _MODEMSETTINGS$struct$LAYOUT() { return _MODEMSETTINGS$struct$LAYOUT_; }

    static final MemoryLayout _MODEMSETTINGS$dwActualSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMSETTINGS$dwActualSize$LAYOUT() { return _MODEMSETTINGS$dwActualSize$LAYOUT_; }

    static final VarHandle _MODEMSETTINGS$dwActualSize$VH_ = _MODEMSETTINGS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwActualSize"));
    static final java.lang.invoke.VarHandle _MODEMSETTINGS$dwActualSize$VH() { return _MODEMSETTINGS$dwActualSize$VH_; }

    static final MemoryLayout _MODEMSETTINGS$dwRequiredSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMSETTINGS$dwRequiredSize$LAYOUT() { return _MODEMSETTINGS$dwRequiredSize$LAYOUT_; }

    static final VarHandle _MODEMSETTINGS$dwRequiredSize$VH_ = _MODEMSETTINGS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwRequiredSize"));
    static final java.lang.invoke.VarHandle _MODEMSETTINGS$dwRequiredSize$VH() { return _MODEMSETTINGS$dwRequiredSize$VH_; }

    static final MemoryLayout _MODEMSETTINGS$dwDevSpecificOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMSETTINGS$dwDevSpecificOffset$LAYOUT() { return _MODEMSETTINGS$dwDevSpecificOffset$LAYOUT_; }

    static final VarHandle _MODEMSETTINGS$dwDevSpecificOffset$VH_ = _MODEMSETTINGS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwDevSpecificOffset"));
    static final java.lang.invoke.VarHandle _MODEMSETTINGS$dwDevSpecificOffset$VH() { return _MODEMSETTINGS$dwDevSpecificOffset$VH_; }

    static final MemoryLayout _MODEMSETTINGS$dwDevSpecificSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMSETTINGS$dwDevSpecificSize$LAYOUT() { return _MODEMSETTINGS$dwDevSpecificSize$LAYOUT_; }

    static final VarHandle _MODEMSETTINGS$dwDevSpecificSize$VH_ = _MODEMSETTINGS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwDevSpecificSize"));
    static final java.lang.invoke.VarHandle _MODEMSETTINGS$dwDevSpecificSize$VH() { return _MODEMSETTINGS$dwDevSpecificSize$VH_; }

    static final MemoryLayout _MODEMSETTINGS$dwCallSetupFailTimer$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMSETTINGS$dwCallSetupFailTimer$LAYOUT() { return _MODEMSETTINGS$dwCallSetupFailTimer$LAYOUT_; }

    static final VarHandle _MODEMSETTINGS$dwCallSetupFailTimer$VH_ = _MODEMSETTINGS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCallSetupFailTimer"));
    static final java.lang.invoke.VarHandle _MODEMSETTINGS$dwCallSetupFailTimer$VH() { return _MODEMSETTINGS$dwCallSetupFailTimer$VH_; }

    static final MemoryLayout _MODEMSETTINGS$dwInactivityTimeout$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMSETTINGS$dwInactivityTimeout$LAYOUT() { return _MODEMSETTINGS$dwInactivityTimeout$LAYOUT_; }

    static final VarHandle _MODEMSETTINGS$dwInactivityTimeout$VH_ = _MODEMSETTINGS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwInactivityTimeout"));
    static final java.lang.invoke.VarHandle _MODEMSETTINGS$dwInactivityTimeout$VH() { return _MODEMSETTINGS$dwInactivityTimeout$VH_; }

    static final MemoryLayout _MODEMSETTINGS$dwSpeakerVolume$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMSETTINGS$dwSpeakerVolume$LAYOUT() { return _MODEMSETTINGS$dwSpeakerVolume$LAYOUT_; }

    static final VarHandle _MODEMSETTINGS$dwSpeakerVolume$VH_ = _MODEMSETTINGS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSpeakerVolume"));
    static final java.lang.invoke.VarHandle _MODEMSETTINGS$dwSpeakerVolume$VH() { return _MODEMSETTINGS$dwSpeakerVolume$VH_; }

    static final MemoryLayout _MODEMSETTINGS$dwSpeakerMode$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMSETTINGS$dwSpeakerMode$LAYOUT() { return _MODEMSETTINGS$dwSpeakerMode$LAYOUT_; }

    static final VarHandle _MODEMSETTINGS$dwSpeakerMode$VH_ = _MODEMSETTINGS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSpeakerMode"));
    static final java.lang.invoke.VarHandle _MODEMSETTINGS$dwSpeakerMode$VH() { return _MODEMSETTINGS$dwSpeakerMode$VH_; }

    static final MemoryLayout _MODEMSETTINGS$dwPreferredModemOptions$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMSETTINGS$dwPreferredModemOptions$LAYOUT() { return _MODEMSETTINGS$dwPreferredModemOptions$LAYOUT_; }

    static final VarHandle _MODEMSETTINGS$dwPreferredModemOptions$VH_ = _MODEMSETTINGS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwPreferredModemOptions"));
    static final java.lang.invoke.VarHandle _MODEMSETTINGS$dwPreferredModemOptions$VH() { return _MODEMSETTINGS$dwPreferredModemOptions$VH_; }

    static final MemoryLayout _MODEMSETTINGS$dwNegotiatedModemOptions$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMSETTINGS$dwNegotiatedModemOptions$LAYOUT() { return _MODEMSETTINGS$dwNegotiatedModemOptions$LAYOUT_; }

    static final VarHandle _MODEMSETTINGS$dwNegotiatedModemOptions$VH_ = _MODEMSETTINGS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwNegotiatedModemOptions"));
    static final java.lang.invoke.VarHandle _MODEMSETTINGS$dwNegotiatedModemOptions$VH() { return _MODEMSETTINGS$dwNegotiatedModemOptions$VH_; }

    static final MemoryLayout _MODEMSETTINGS$dwNegotiatedDCERate$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _MODEMSETTINGS$dwNegotiatedDCERate$LAYOUT() { return _MODEMSETTINGS$dwNegotiatedDCERate$LAYOUT_; }

    static final VarHandle _MODEMSETTINGS$dwNegotiatedDCERate$VH_ = _MODEMSETTINGS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwNegotiatedDCERate"));
    static final java.lang.invoke.VarHandle _MODEMSETTINGS$dwNegotiatedDCERate$VH() { return _MODEMSETTINGS$dwNegotiatedDCERate$VH_; }

    static final MemoryLayout HIMC__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HIMC__");
    static final jdk.incubator.foreign.MemoryLayout HIMC__$struct$LAYOUT() { return HIMC__$struct$LAYOUT_; }

    static final MemoryLayout HIMC__$unused$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout HIMC__$unused$LAYOUT() { return HIMC__$unused$LAYOUT_; }

    static final VarHandle HIMC__$unused$VH_ = HIMC__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    static final java.lang.invoke.VarHandle HIMC__$unused$VH() { return HIMC__$unused$VH_; }

    static final MemoryLayout HIMCC__$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("unused")
    ).withName("HIMCC__");
    static final jdk.incubator.foreign.MemoryLayout HIMCC__$struct$LAYOUT() { return HIMCC__$struct$LAYOUT_; }

    static final MemoryLayout HIMCC__$unused$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout HIMCC__$unused$LAYOUT() { return HIMCC__$unused$LAYOUT_; }

    static final VarHandle HIMCC__$unused$VH_ = HIMCC__$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("unused"));
    static final java.lang.invoke.VarHandle HIMCC__$unused$VH() { return HIMCC__$unused$VH_; }

    static final MemoryLayout tagCOMPOSITIONFORM$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwStyle"),
        MemoryLayout.ofStruct(
            C_LONG.withName("x"),
            C_LONG.withName("y")
        ).withName("ptCurrentPos"),
        MemoryLayout.ofStruct(
            C_LONG.withName("left"),
            C_LONG.withName("top"),
            C_LONG.withName("right"),
            C_LONG.withName("bottom")
        ).withName("rcArea")
    ).withName("tagCOMPOSITIONFORM");
    static final jdk.incubator.foreign.MemoryLayout tagCOMPOSITIONFORM$struct$LAYOUT() { return tagCOMPOSITIONFORM$struct$LAYOUT_; }

    static final MemoryLayout tagCOMPOSITIONFORM$dwStyle$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCOMPOSITIONFORM$dwStyle$LAYOUT() { return tagCOMPOSITIONFORM$dwStyle$LAYOUT_; }

    static final VarHandle tagCOMPOSITIONFORM$dwStyle$VH_ = tagCOMPOSITIONFORM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStyle"));
    static final java.lang.invoke.VarHandle tagCOMPOSITIONFORM$dwStyle$VH() { return tagCOMPOSITIONFORM$dwStyle$VH_; }

    static final MemoryLayout tagCANDIDATEFORM$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwIndex"),
        C_LONG.withName("dwStyle"),
        MemoryLayout.ofStruct(
            C_LONG.withName("x"),
            C_LONG.withName("y")
        ).withName("ptCurrentPos"),
        MemoryLayout.ofStruct(
            C_LONG.withName("left"),
            C_LONG.withName("top"),
            C_LONG.withName("right"),
            C_LONG.withName("bottom")
        ).withName("rcArea")
    ).withName("tagCANDIDATEFORM");
    static final jdk.incubator.foreign.MemoryLayout tagCANDIDATEFORM$struct$LAYOUT() { return tagCANDIDATEFORM$struct$LAYOUT_; }

    static final MemoryLayout tagCANDIDATEFORM$dwIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCANDIDATEFORM$dwIndex$LAYOUT() { return tagCANDIDATEFORM$dwIndex$LAYOUT_; }

    static final VarHandle tagCANDIDATEFORM$dwIndex$VH_ = tagCANDIDATEFORM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwIndex"));
    static final java.lang.invoke.VarHandle tagCANDIDATEFORM$dwIndex$VH() { return tagCANDIDATEFORM$dwIndex$VH_; }

    static final MemoryLayout tagCANDIDATEFORM$dwStyle$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCANDIDATEFORM$dwStyle$LAYOUT() { return tagCANDIDATEFORM$dwStyle$LAYOUT_; }

    static final VarHandle tagCANDIDATEFORM$dwStyle$VH_ = tagCANDIDATEFORM$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStyle"));
    static final java.lang.invoke.VarHandle tagCANDIDATEFORM$dwStyle$VH() { return tagCANDIDATEFORM$dwStyle$VH_; }

    static final MemoryLayout tagCANDIDATELIST$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwSize"),
        C_LONG.withName("dwStyle"),
        C_LONG.withName("dwCount"),
        C_LONG.withName("dwSelection"),
        C_LONG.withName("dwPageStart"),
        C_LONG.withName("dwPageSize"),
        MemoryLayout.ofSequence(1, C_LONG).withName("dwOffset")
    ).withName("tagCANDIDATELIST");
    static final jdk.incubator.foreign.MemoryLayout tagCANDIDATELIST$struct$LAYOUT() { return tagCANDIDATELIST$struct$LAYOUT_; }

    static final MemoryLayout tagCANDIDATELIST$dwSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCANDIDATELIST$dwSize$LAYOUT() { return tagCANDIDATELIST$dwSize$LAYOUT_; }

    static final VarHandle tagCANDIDATELIST$dwSize$VH_ = tagCANDIDATELIST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSize"));
    static final java.lang.invoke.VarHandle tagCANDIDATELIST$dwSize$VH() { return tagCANDIDATELIST$dwSize$VH_; }

    static final MemoryLayout tagCANDIDATELIST$dwStyle$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCANDIDATELIST$dwStyle$LAYOUT() { return tagCANDIDATELIST$dwStyle$LAYOUT_; }

    static final VarHandle tagCANDIDATELIST$dwStyle$VH_ = tagCANDIDATELIST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStyle"));
    static final java.lang.invoke.VarHandle tagCANDIDATELIST$dwStyle$VH() { return tagCANDIDATELIST$dwStyle$VH_; }

    static final MemoryLayout tagCANDIDATELIST$dwCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCANDIDATELIST$dwCount$LAYOUT() { return tagCANDIDATELIST$dwCount$LAYOUT_; }

    static final VarHandle tagCANDIDATELIST$dwCount$VH_ = tagCANDIDATELIST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCount"));
    static final java.lang.invoke.VarHandle tagCANDIDATELIST$dwCount$VH() { return tagCANDIDATELIST$dwCount$VH_; }

    static final MemoryLayout tagCANDIDATELIST$dwSelection$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCANDIDATELIST$dwSelection$LAYOUT() { return tagCANDIDATELIST$dwSelection$LAYOUT_; }

    static final VarHandle tagCANDIDATELIST$dwSelection$VH_ = tagCANDIDATELIST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSelection"));
    static final java.lang.invoke.VarHandle tagCANDIDATELIST$dwSelection$VH() { return tagCANDIDATELIST$dwSelection$VH_; }

    static final MemoryLayout tagCANDIDATELIST$dwPageStart$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCANDIDATELIST$dwPageStart$LAYOUT() { return tagCANDIDATELIST$dwPageStart$LAYOUT_; }

    static final VarHandle tagCANDIDATELIST$dwPageStart$VH_ = tagCANDIDATELIST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwPageStart"));
    static final java.lang.invoke.VarHandle tagCANDIDATELIST$dwPageStart$VH() { return tagCANDIDATELIST$dwPageStart$VH_; }

    static final MemoryLayout tagCANDIDATELIST$dwPageSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagCANDIDATELIST$dwPageSize$LAYOUT() { return tagCANDIDATELIST$dwPageSize$LAYOUT_; }

    static final VarHandle tagCANDIDATELIST$dwPageSize$VH_ = tagCANDIDATELIST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwPageSize"));
    static final java.lang.invoke.VarHandle tagCANDIDATELIST$dwPageSize$VH() { return tagCANDIDATELIST$dwPageSize$VH_; }

    static final MemoryLayout tagREGISTERWORDA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpReading"),
        C_POINTER.withName("lpWord")
    ).withName("tagREGISTERWORDA");
    static final jdk.incubator.foreign.MemoryLayout tagREGISTERWORDA$struct$LAYOUT() { return tagREGISTERWORDA$struct$LAYOUT_; }

    static final MemoryLayout tagREGISTERWORDA$lpReading$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagREGISTERWORDA$lpReading$LAYOUT() { return tagREGISTERWORDA$lpReading$LAYOUT_; }

    static final VarHandle tagREGISTERWORDA$lpReading$VH_ = MemoryHandles.asAddressVarHandle(tagREGISTERWORDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpReading")));
    static final java.lang.invoke.VarHandle tagREGISTERWORDA$lpReading$VH() { return tagREGISTERWORDA$lpReading$VH_; }

    static final MemoryLayout tagREGISTERWORDA$lpWord$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagREGISTERWORDA$lpWord$LAYOUT() { return tagREGISTERWORDA$lpWord$LAYOUT_; }

    static final VarHandle tagREGISTERWORDA$lpWord$VH_ = MemoryHandles.asAddressVarHandle(tagREGISTERWORDA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpWord")));
    static final java.lang.invoke.VarHandle tagREGISTERWORDA$lpWord$VH() { return tagREGISTERWORDA$lpWord$VH_; }

    static final MemoryLayout tagREGISTERWORDW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpReading"),
        C_POINTER.withName("lpWord")
    ).withName("tagREGISTERWORDW");
    static final jdk.incubator.foreign.MemoryLayout tagREGISTERWORDW$struct$LAYOUT() { return tagREGISTERWORDW$struct$LAYOUT_; }

    static final MemoryLayout tagREGISTERWORDW$lpReading$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagREGISTERWORDW$lpReading$LAYOUT() { return tagREGISTERWORDW$lpReading$LAYOUT_; }

    static final VarHandle tagREGISTERWORDW$lpReading$VH_ = MemoryHandles.asAddressVarHandle(tagREGISTERWORDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpReading")));
    static final java.lang.invoke.VarHandle tagREGISTERWORDW$lpReading$VH() { return tagREGISTERWORDW$lpReading$VH_; }

    static final MemoryLayout tagREGISTERWORDW$lpWord$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagREGISTERWORDW$lpWord$LAYOUT() { return tagREGISTERWORDW$lpWord$LAYOUT_; }

    static final VarHandle tagREGISTERWORDW$lpWord$VH_ = MemoryHandles.asAddressVarHandle(tagREGISTERWORDW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpWord")));
    static final java.lang.invoke.VarHandle tagREGISTERWORDW$lpWord$VH() { return tagREGISTERWORDW$lpWord$VH_; }

    static final MemoryLayout tagRECONVERTSTRING$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwSize"),
        C_LONG.withName("dwVersion"),
        C_LONG.withName("dwStrLen"),
        C_LONG.withName("dwStrOffset"),
        C_LONG.withName("dwCompStrLen"),
        C_LONG.withName("dwCompStrOffset"),
        C_LONG.withName("dwTargetStrLen"),
        C_LONG.withName("dwTargetStrOffset")
    ).withName("tagRECONVERTSTRING");
    static final jdk.incubator.foreign.MemoryLayout tagRECONVERTSTRING$struct$LAYOUT() { return tagRECONVERTSTRING$struct$LAYOUT_; }

    static final MemoryLayout tagRECONVERTSTRING$dwSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRECONVERTSTRING$dwSize$LAYOUT() { return tagRECONVERTSTRING$dwSize$LAYOUT_; }

    static final VarHandle tagRECONVERTSTRING$dwSize$VH_ = tagRECONVERTSTRING$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSize"));
    static final java.lang.invoke.VarHandle tagRECONVERTSTRING$dwSize$VH() { return tagRECONVERTSTRING$dwSize$VH_; }

    static final MemoryLayout tagRECONVERTSTRING$dwVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRECONVERTSTRING$dwVersion$LAYOUT() { return tagRECONVERTSTRING$dwVersion$LAYOUT_; }

    static final VarHandle tagRECONVERTSTRING$dwVersion$VH_ = tagRECONVERTSTRING$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwVersion"));
    static final java.lang.invoke.VarHandle tagRECONVERTSTRING$dwVersion$VH() { return tagRECONVERTSTRING$dwVersion$VH_; }

    static final MemoryLayout tagRECONVERTSTRING$dwStrLen$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRECONVERTSTRING$dwStrLen$LAYOUT() { return tagRECONVERTSTRING$dwStrLen$LAYOUT_; }

    static final VarHandle tagRECONVERTSTRING$dwStrLen$VH_ = tagRECONVERTSTRING$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStrLen"));
    static final java.lang.invoke.VarHandle tagRECONVERTSTRING$dwStrLen$VH() { return tagRECONVERTSTRING$dwStrLen$VH_; }

    static final MemoryLayout tagRECONVERTSTRING$dwStrOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRECONVERTSTRING$dwStrOffset$LAYOUT() { return tagRECONVERTSTRING$dwStrOffset$LAYOUT_; }

    static final VarHandle tagRECONVERTSTRING$dwStrOffset$VH_ = tagRECONVERTSTRING$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStrOffset"));
    static final java.lang.invoke.VarHandle tagRECONVERTSTRING$dwStrOffset$VH() { return tagRECONVERTSTRING$dwStrOffset$VH_; }

    static final MemoryLayout tagRECONVERTSTRING$dwCompStrLen$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRECONVERTSTRING$dwCompStrLen$LAYOUT() { return tagRECONVERTSTRING$dwCompStrLen$LAYOUT_; }

    static final VarHandle tagRECONVERTSTRING$dwCompStrLen$VH_ = tagRECONVERTSTRING$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCompStrLen"));
    static final java.lang.invoke.VarHandle tagRECONVERTSTRING$dwCompStrLen$VH() { return tagRECONVERTSTRING$dwCompStrLen$VH_; }

    static final MemoryLayout tagRECONVERTSTRING$dwCompStrOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRECONVERTSTRING$dwCompStrOffset$LAYOUT() { return tagRECONVERTSTRING$dwCompStrOffset$LAYOUT_; }

    static final VarHandle tagRECONVERTSTRING$dwCompStrOffset$VH_ = tagRECONVERTSTRING$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwCompStrOffset"));
    static final java.lang.invoke.VarHandle tagRECONVERTSTRING$dwCompStrOffset$VH() { return tagRECONVERTSTRING$dwCompStrOffset$VH_; }

    static final MemoryLayout tagRECONVERTSTRING$dwTargetStrLen$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRECONVERTSTRING$dwTargetStrLen$LAYOUT() { return tagRECONVERTSTRING$dwTargetStrLen$LAYOUT_; }

    static final VarHandle tagRECONVERTSTRING$dwTargetStrLen$VH_ = tagRECONVERTSTRING$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwTargetStrLen"));
    static final java.lang.invoke.VarHandle tagRECONVERTSTRING$dwTargetStrLen$VH() { return tagRECONVERTSTRING$dwTargetStrLen$VH_; }

    static final MemoryLayout tagRECONVERTSTRING$dwTargetStrOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagRECONVERTSTRING$dwTargetStrOffset$LAYOUT() { return tagRECONVERTSTRING$dwTargetStrOffset$LAYOUT_; }

    static final VarHandle tagRECONVERTSTRING$dwTargetStrOffset$VH_ = tagRECONVERTSTRING$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwTargetStrOffset"));
    static final java.lang.invoke.VarHandle tagRECONVERTSTRING$dwTargetStrOffset$VH() { return tagRECONVERTSTRING$dwTargetStrOffset$VH_; }

    static final MemoryLayout tagSTYLEBUFA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwStyle"),
        MemoryLayout.ofSequence(32, C_CHAR).withName("szDescription")
    ).withName("tagSTYLEBUFA");
    static final jdk.incubator.foreign.MemoryLayout tagSTYLEBUFA$struct$LAYOUT() { return tagSTYLEBUFA$struct$LAYOUT_; }

    static final MemoryLayout tagSTYLEBUFA$dwStyle$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagSTYLEBUFA$dwStyle$LAYOUT() { return tagSTYLEBUFA$dwStyle$LAYOUT_; }

    static final VarHandle tagSTYLEBUFA$dwStyle$VH_ = tagSTYLEBUFA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStyle"));
    static final java.lang.invoke.VarHandle tagSTYLEBUFA$dwStyle$VH() { return tagSTYLEBUFA$dwStyle$VH_; }

    static final MemoryLayout tagSTYLEBUFW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwStyle"),
        MemoryLayout.ofSequence(32, C_SHORT).withName("szDescription")
    ).withName("tagSTYLEBUFW");
    static final jdk.incubator.foreign.MemoryLayout tagSTYLEBUFW$struct$LAYOUT() { return tagSTYLEBUFW$struct$LAYOUT_; }

    static final MemoryLayout tagSTYLEBUFW$dwStyle$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagSTYLEBUFW$dwStyle$LAYOUT() { return tagSTYLEBUFW$dwStyle$LAYOUT_; }

    static final VarHandle tagSTYLEBUFW$dwStyle$VH_ = tagSTYLEBUFW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwStyle"));
    static final java.lang.invoke.VarHandle tagSTYLEBUFW$dwStyle$VH() { return tagSTYLEBUFW$dwStyle$VH_; }

    static final MemoryLayout tagIMEMENUITEMINFOA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("cbSize"),
        C_INT.withName("fType"),
        C_INT.withName("fState"),
        C_INT.withName("wID"),
        C_POINTER.withName("hbmpChecked"),
        C_POINTER.withName("hbmpUnchecked"),
        C_LONG.withName("dwItemData"),
        MemoryLayout.ofSequence(80, C_CHAR).withName("szString"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hbmpItem")
    ).withName("tagIMEMENUITEMINFOA");
    static final jdk.incubator.foreign.MemoryLayout tagIMEMENUITEMINFOA$struct$LAYOUT() { return tagIMEMENUITEMINFOA$struct$LAYOUT_; }

    static final MemoryLayout tagIMEMENUITEMINFOA$cbSize$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagIMEMENUITEMINFOA$cbSize$LAYOUT() { return tagIMEMENUITEMINFOA$cbSize$LAYOUT_; }

    static final VarHandle tagIMEMENUITEMINFOA$cbSize$VH_ = tagIMEMENUITEMINFOA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle tagIMEMENUITEMINFOA$cbSize$VH() { return tagIMEMENUITEMINFOA$cbSize$VH_; }

    static final MemoryLayout tagIMEMENUITEMINFOA$fType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagIMEMENUITEMINFOA$fType$LAYOUT() { return tagIMEMENUITEMINFOA$fType$LAYOUT_; }

    static final VarHandle tagIMEMENUITEMINFOA$fType$VH_ = tagIMEMENUITEMINFOA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fType"));
    static final java.lang.invoke.VarHandle tagIMEMENUITEMINFOA$fType$VH() { return tagIMEMENUITEMINFOA$fType$VH_; }

    static final MemoryLayout tagIMEMENUITEMINFOA$fState$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagIMEMENUITEMINFOA$fState$LAYOUT() { return tagIMEMENUITEMINFOA$fState$LAYOUT_; }

    static final VarHandle tagIMEMENUITEMINFOA$fState$VH_ = tagIMEMENUITEMINFOA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("fState"));
    static final java.lang.invoke.VarHandle tagIMEMENUITEMINFOA$fState$VH() { return tagIMEMENUITEMINFOA$fState$VH_; }

    static final MemoryLayout tagIMEMENUITEMINFOA$wID$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout tagIMEMENUITEMINFOA$wID$LAYOUT() { return tagIMEMENUITEMINFOA$wID$LAYOUT_; }

    static final VarHandle tagIMEMENUITEMINFOA$wID$VH_ = tagIMEMENUITEMINFOA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wID"));
    static final java.lang.invoke.VarHandle tagIMEMENUITEMINFOA$wID$VH() { return tagIMEMENUITEMINFOA$wID$VH_; }

    static final MemoryLayout tagIMEMENUITEMINFOA$hbmpChecked$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagIMEMENUITEMINFOA$hbmpChecked$LAYOUT() { return tagIMEMENUITEMINFOA$hbmpChecked$LAYOUT_; }

    static final VarHandle tagIMEMENUITEMINFOA$hbmpChecked$VH_ = MemoryHandles.asAddressVarHandle(tagIMEMENUITEMINFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hbmpChecked")));
    static final java.lang.invoke.VarHandle tagIMEMENUITEMINFOA$hbmpChecked$VH() { return tagIMEMENUITEMINFOA$hbmpChecked$VH_; }

    static final MemoryLayout tagIMEMENUITEMINFOA$hbmpUnchecked$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagIMEMENUITEMINFOA$hbmpUnchecked$LAYOUT() { return tagIMEMENUITEMINFOA$hbmpUnchecked$LAYOUT_; }

    static final VarHandle tagIMEMENUITEMINFOA$hbmpUnchecked$VH_ = MemoryHandles.asAddressVarHandle(tagIMEMENUITEMINFOA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hbmpUnchecked")));
    static final java.lang.invoke.VarHandle tagIMEMENUITEMINFOA$hbmpUnchecked$VH() { return tagIMEMENUITEMINFOA$hbmpUnchecked$VH_; }

    static final MemoryLayout tagIMEMENUITEMINFOA$dwItemData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagIMEMENUITEMINFOA$dwItemData$LAYOUT() { return tagIMEMENUITEMINFOA$dwItemData$LAYOUT_; }

    static final VarHandle tagIMEMENUITEMINFOA$dwItemData$VH_ = tagIMEMENUITEMINFOA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwItemData"));
    static final java.lang.invoke.VarHandle tagIMEMENUITEMINFOA$dwItemData$VH() { return tagIMEMENUITEMINFOA$dwItemData$VH_; }

}

